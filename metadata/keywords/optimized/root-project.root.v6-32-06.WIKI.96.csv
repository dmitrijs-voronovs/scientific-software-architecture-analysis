quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"remove from the list Default Opt=""CR"". ;  ; void * GetContext () const;  ; TDatime GetExpDate () const;  ; const char * GetHost () const;  ; const char * GetID () const;  ; Int_t GetMethod () const;  ; const char * GetMethodName () const;  ; Int_t GetOffSet () const;  ; TList * GetSecContextCleanup () const;  ; const char * GetToken () const;  ; const char * GetUser () const;  ; TClass * IsA () const override;  ; Bool_t IsA (const char *methodname);  Checks if this security context is for method named 'methname' Case sensitive. ;  ; Bool_t IsActive () const;  Check remote OffSet and expiring Date. ;  ; void Print (Option_t *option=""F"") const override;  If opt is ""F"" (default) print object content. ;  ; void SetExpDate (TDatime expdate);  ; void SetID (const char *id);  ; void SetOffSet (Int_t offset);  ; void SetUser (const char *user);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSecContext.html:2371,inherit,inherited,2371,doc/master/classTSecContext.html,https://root.cern,https://root.cern/doc/master/classTSecContext.html,1,['inherit'],['inherited']
Modifiability,"ren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  . Private Member Functions;  TEveScene (const TEveScene &);  ; TEveScene & operator= (const TEveScene &);  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator Pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveScene.html:31875,inherit,inherited,31875,doc/master/classTEveScene.html,https://root.cern,https://root.cern/doc/master/classTEveScene.html,2,['inherit'],['inherited']
Modifiability,"renList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; TRefArrayTPointSet3D::fIdsUser-provided point identifications; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TArrayI*fIntIdsOptional array of integer ideices.; Int_tfIntIdsPerPointNumber of integer indices assigned to each point.; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Int_tTPolyMarker3D::fLastPointThe index of the last filled point; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNNumber of allocated points; TStringTPolyMarker3D::fNameName of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionOptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExtern",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEvePointSet.html:25948,variab,variable,25948,root/html602/TEvePointSet.html,https://root.cern,https://root.cern/root/html602/TEvePointSet.html,4,['variab'],['variable']
Modifiability,"renamed."",; 2645 name);; 2646 } else {; 2647 // Here we need to remove and re-add to keep the hashes consistent with; 2648 // the underlying names.; 2649 auto listOfFunctions = gROOT->GetListOfFunctions();; 2650 TObject* thisAsFunctionInList = nullptr;; 2651 R__LOCKGUARD(gROOTMutex);; 2652 if (listOfFunctions){; 2653 thisAsFunctionInList = listOfFunctions->FindObject(this);; 2654 if (thisAsFunctionInList) listOfFunctions->Remove(thisAsFunctionInList);; 2655 }; 2656 TNamed::SetName(name);; 2657 if (thisAsFunctionInList) listOfFunctions->Add(thisAsFunctionInList);; 2658 }; 2659}; 2660 ; 2661////////////////////////////////////////////////////////////////////////////////; 2662///; 2663/// Sets multiple variables.; 2664/// First argument is an array of pairs<TString,Double>, where; 2665/// first argument is name of variable,; 2666/// second argument represents value.; 2667/// size - number of variables passed in first argument; 2668 ; 2669void TFormula::SetVariables(const pair<TString,Double_t> *vars, const Int_t size); 2670{; 2671 for(Int_t i = 0; i < size; ++i); 2672 {; 2673 auto &v = vars[i];; 2674 if (fVars.find(v.first) != fVars.end()) {; 2675 fVars[v.first].fValue = v.second;; 2676 fClingVariables[fVars[v.first].fArrayPos] = v.second;; 2677 } else {; 2678 Error(""SetVariables"", ""Variable %s is not defined."", v.first.Data());; 2679 }; 2680 }; 2681}; 2682 ; 2683////////////////////////////////////////////////////////////////////////////////; 2684/// Returns variable value.; 2685 ; 2686Double_t TFormula::GetVariable(const char *name) const; 2687{; 2688 const auto nameIt = fVars.find(name);; 2689 if (fVars.end() == nameIt) {; 2690 Error(""GetVariable"", ""Variable %s is not defined."", name);; 2691 return -1;; 2692 }; 2693 return nameIt->second.fValue;; 2694}; 2695 ; 2696////////////////////////////////////////////////////////////////////////////////; 2697/// Returns variable number (positon in array) given its name.; 2698 ; 2699Int_t TFormula::GetVarNumber(const char *nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:102848,variab,variables,102848,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"rence Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::MethodPyTorch Class Reference. . Definition at line 34 of file MethodPyTorch.h. Public Member Functions;  MethodPyTorch (const TString &jobName, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  ;  MethodPyTorch (DataSetInfo &dsi, const TString &theWeightFile);  ;  ~MethodPyTorch ();  ; virtual void AddWeightsXMLTo (void *) const;  ; const Ranking * CreateRanking ();  ; void DeclareOptions ();  ; void GetHelpMessage () const;  ; std::vector< Float_t > & GetMulticlassValues ();  ; Double_t GetMvaValue (Double_t *errLower, Double_t *errUpper);  ; std::vector< Double_t > GetMvaValues (Long64_t firstEvt, Long64_t lastEvt, Bool_t logProgress);  get all the MVA values for the events of the current Data type ;  ; std::vector< Float_t > & GetRegressionValues ();  ; Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t);  ; void Init ();  ; void ProcessOptions ();  ; void ReadModelFromFile ();  ; virtual void ReadWeightsFromStream (std::istream &);  ; virtual void ReadWeightsFromStream (TFile &);  ; virtual void ReadWeightsFromXML (void *);  ; virtual void TestClassification ();  initialization ;  ; void Train ();  ;  Public Member Functions inherited from TMVA::PyMethodBase;  PyMethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  ;  PyMethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  ; virtual ~PyMethodBase ();  ; PyObject * Eval (TString code);  Evaluate Python code. ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPyTorch.html:1458,inherit,inherited,1458,doc/master/classTMVA_1_1MethodPyTorch.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPyTorch.html,1,['inherit'],['inherited']
Modifiability,"rence Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf204b_extendedLikelihood_rangedFit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf.fitTo(data,Range=""Range1,Range2""), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their inte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:1011,extend,extended,1011,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,1,['extend'],['extended']
Modifiability,"rence Guide ; .  . Loading...; Searching...; No Matches. rf509_wsinteractive.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: easy interactive access to workspace contents - CINT to CLING code migration . ; using namespace RooFit;; ; void fillWorkspace(RooWorkspace &w);; ; void rf509_wsinteractive(); {; // C r e a t e a n d f i l l w o r k s p a c e; // ------------------------------------------------; ; // Create a workspace named 'w'; // With CINT w could exports its contents to; // a same-name C++ namespace in CINT 'namespace w'.; // but this does not work anymore in CLING.; // so this tutorial is an example on how to; // change the code; RooWorkspace *w1 = new RooWorkspace(""w"", true);; ; // Fill workspace with pdf and data in a separate function; fillWorkspace(*w1);; ; // Print workspace contents; w1->Print();; ; // this does not work anymore with CLING; // use normal workspace functionality; ; // U s e w o r k s p a c e c o n t e n t s; // ----------------------------------------------; ; // use normal workspace methods; RooAbsPdf *model = w1->pdf(""model"");; RooRealVar *x = w1->var(""x"");; ; std::unique_ptr<RooDataSet> d{ model->generate(*x, 1000)};; std::unique_ptr<RooFitResult> r{model->fitTo(*d, PrintLevel(-1))};; ; // old syntax to access the variable x; // RooPlot* frame = w::x.frame() ;; ; RooPlot *frame = x->frame();; d->plotOn(frame);; ; // OLD syntax to omit x::; // NB: The 'w::' prefix can be omitted if namespace w is imported in local namespace; // in the usual C++ way; //; // using namespace w;; // model.plotOn(frame) ;; // model.plotOn(frame,Components(bkg),LineStyle(kDashed)) ;; ; // new correct syntax; RooAbsPdf *bkg = w1->pdf(""bkg"");; model->plotOn(frame);; model->plotOn(frame, Components(*bkg), LineStyle(kDashed));; ; // Draw the frame on the canvas; new TCanvas(""rf509_wsinteractive"", ""rf509_wsinteractive"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf509__wsinteractive_8C.html:1413,variab,variable,1413,doc/master/rf509__wsinteractive_8C.html,https://root.cern,https://root.cern/doc/master/rf509__wsinteractive_8C.html,1,['variab'],['variable']
Modifiability,"rence(Bool_t w); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Bool_tUseColor() const; Bool_tWriteOptionsReference() const. private:. virtual~Config(); TMVA::ConfigConfig(); TMVA::ConfigConfig(const TMVA::Config&); TMVA::MsgLogger&Log() const; TMVA::Config&operator=(const TMVA::Config&). Data Members; public:. IONamesfIONamesCustomisable weight file properties; VariablePlottingfVariablePlottingCustomisable plotting properties. private:. atomic<Bool_t>fDrawProgressBardraw progress bar to indicate training evolution; TMVA::MsgLogger*fLoggermessage logger; atomic<Bool_t>fSilentno output at all; atomic<Bool_t>fUseColoredConsolecoloured standard output; atomic<Bool_t>fWriteOptionsReferenceif set true: Configurable objects write file with option reference; static atomic<TMVA::Config*>fgConfigPtr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Config(); constructor - set defaults. ~Config(); destructor. void DestroyInstance(); static function: destroy TMVA instance. TMVA::Config& Instance(); static function: returns TMVA instance. Bool_t UseColor() const; { return fUseColoredConsole; }. void SetUseColor(Bool_t uc); { fUseColoredConsole = uc; }. Bool_t IsSilent() const; { return fSilent; }. void SetSilent(Bool_t s); { fSilent = s; }. Bool_t WriteOptionsReference() const; { return fWriteOptionsReference; }. void SetWriteOptionsReference(Bool_t w); { fWriteOptionsReference = w; }. Bool_t DrawProgressBar() const; { return fDrawProgressBar; }. void SetDrawProgressBar(Bool_t d); { fDrawProgressBar = d; }. VariablePlotting& GetVariablePlotting(); { return fVariablePlotting; }. IONames& GetIONames(); { return fIONames; }. Config(); private constructor. Config& operator=(const TMVA::Config& ). » Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss » Copyright (c) 2006: *; » Last changed: root/tmva $Id$ » Last generated: 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Config.html:1672,Config,Config,1672,root/html602/TMVA__Config.html,https://root.cern,https://root.cern/root/html602/TMVA__Config.html,2,['Config'],['Config']
Modifiability,"rence. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; RooSimWSTool::SplitRule Class Reference. . Definition at line 75 of file RooSimWSTool.h. Public Member Functions;  SplitRule (const char *pdfName="""");  ; void splitParameter (const char *paramList, const char *categoryList);  Specify that parameters names listed in paramNameList be split in (product of) category(s) listed in categoryNameList. ;  ; void splitParameterConstrained (const char *paramNameList, const char *categoryNameList, const char *remainderStateName);  Specify that parameters names listed in paramNameList be split in constrained way in (product of) category(s) listed in categoryNameList and that remainder fraction formula be put in state with name remainderStateName. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html:989,inherit,inherited,989,doc/master/classRooSimWSTool_1_1SplitRule.html,https://root.cern,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html,1,['inherit'],['inherited']
Modifiability,"rence. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TGMdiVerticalWinResizer Class Reference. . Definition at line 82 of file TGMdiDecorFrame.h. Public Member Functions;  TGMdiVerticalWinResizer (const TGWindow *p, const TGWindow *mdiwin, Int_t pos, const TGGC *boxGC, Int_t linew, Int_t mdioptions=kMdiDefaultResizeMode, Int_t w=4, Int_t h=5);  TGMdiVerticalWinResizer constructor. ;  ; void DrawBorder () override;  Draw vertical resizer frame border. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle motion events in resizer (resize associated MDI window). ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGMdiWinResizer;  TGMdiWinResizer (const TGWindow *p, const TGWindow *mdiwin, Int_t pos, const TGGC *boxGC, Int_t linew, Int_t mdioptions=kMdiDefaultResizeMode, Int_t w=1, Int_t h=1, UInt_t options=kOwnBackground);  TGMdiWinResizer constructor. ;  ; void DrawBorder () override;  Draw frame border. ;  ; Bool_t HandleButton (Event_t *event) override;  Handle button events in resizer (grab button and resize). ;  ; TClass * IsA () const override;  ; void SetMinSize (Int_t w=50, Int_t h=20);  ; void SetResizeMode (Int_t mode);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiVerticalWinResizer.html:961,inherit,inherited,961,doc/master/classTGMdiVerticalWinResizer.html,https://root.cern,https://root.cern/doc/master/classTGMdiVerticalWinResizer.html,1,['inherit'],['inherited']
Modifiability,"rence. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TCanvasWebSnapshot Class Reference. . Definition at line 102 of file TWebSnapshot.h. Public Member Functions;  TCanvasWebSnapshot (bool readonly=true, bool setids=true, bool batchmode=false);  ; bool GetHighlightConnect () const;  ; const std::string & GetScripts () const;  ; TClass * IsA () const override;  ; bool IsFixedSize () const;  ; void SetFixedSize (bool on=true);  ; void SetHighlightConnect (bool on=true);  ; void SetScripts (const std::string &src);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TPadWebSnapshot;  TPadWebSnapshot (bool readonly=true, bool setids=true, bool batchmode=false);  ; TClass * IsA () const override;  ; bool IsBatchMode () const;  ; bool IsReadOnly () const;  ; bool IsSetObjectIds () const;  ; TWebSnapshot & NewPrimitive (TObject *obj=nullptr, const std::string &opt="""", const std::string &suffix="""");  Create new entry in list of primitives. ;  ; TWebSnapshot & NewSpecials ();  Create new entry in list of primitives in the front. ;  ; TPadWebSnapshot & NewSubPad ();  Create new entry for subpad. ;  ; void SetActive (bool on=true);  ; void SetHasExecs (bool on=true);  ; void SetWithoutPrimitives (bool on=true);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TWebSnapshot;  ~TWebSnapshot () override;  destructor ;  ; Int_t GetKind () const;  ; const char * GetObjectID () const;  ; TObject * GetSnapshot () const;  ; TClass * IsA () const override;  ; void SetObjectID (const std::string &id);  ; void SetObjectIDAsPtr (void *ptr, const std::string &suffi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCanvasWebSnapshot.html:890,inherit,inherited,890,doc/master/classTCanvasWebSnapshot.html,https://root.cern,https://root.cern/doc/master/classTCanvasWebSnapshot.html,1,['inherit'],['inherited']
Modifiability,"rence. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TEveCaloLego Class ReferenceGraphics » 3D Graphics » Event Display. ; Visualization of calorimeter data as eta/phi histogram. ; Definition at line 250 of file TEveCalo.h. Public Types; enum  E2DMode_e { kValColor; , kValSize; , kValSizeOutline; };  ; enum  EBoxMode_e { kNone; , kFrontBack; , kBack; };  ; enum  EProjection_e { kAuto; , k3D; , k2D; };  ;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inher",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCaloLego.html:703,inherit,inherited,703,doc/master/classTEveCaloLego.html,https://root.cern,https://root.cern/doc/master/classTEveCaloLego.html,2,['inherit'],['inherited']
Modifiability,"rence. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; distrdf001_spark_connection.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Configure a Spark connection and fill two histograms distributedly. ; This tutorial shows the ingredients needed to setup the connection to a Spark cluster, namely a SparkConf object holding configuration parameters and a SparkContext object created with the desired options. After this initial setup, an RDataFrame with distributed capabilities is created and connected to the SparkContext instance. Finally, a couple of histograms are drawn from the created columns in the dataset.; import pyspark; import ROOT; ; # Point RDataFrame calls to Spark RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; ; # Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/distrdf001__spark__connection_8py.html:1071,config,configuration,1071,doc/master/distrdf001__spark__connection_8py.html,https://root.cern,https://root.cern/doc/master/distrdf001__spark__connection_8py.html,1,['config'],['configuration']
Modifiability,"rence. ; The Residuals class calculates and stores the quantities that appear on the right-hand side of the linear systems that arise at each interior-point iteration. ; These residuals can be partitioned into two fundamental categories: the components arising from the linear equations in the KKT conditions, and the components arising from the complementarity conditions. ; Definition at line 61 of file TQpResidual.h. Public Member Functions;  TQpResidual ();  Constructor. ;  ;  TQpResidual (const TQpResidual &another);  Copy constructor. ;  ;  TQpResidual (Int_t nx, Int_t my, Int_t mz, TVectorD &ixlow, TVectorD &ixupp, TVectorD &iclow, TVectorD &icupp);  Constructor. ;  ;  ~TQpResidual () override;  ; void Add_r3_xz_alpha (TQpVar *vars, Double_t alpha);  Modify the ""complementarity"" component of the residuals, by adding the pairwise products of the complementary variables plus a constant alpha to this term. ;  ; void CalcResids (TQpDataBase *problem, TQpVar *vars);  Calculate residuals, their norms, and duality complementarity gap, given a problem and variable set. ;  ; void Clear_r1r2 ();  set the noncomplementarity components of the residual (the terms arising from the linear equalities in the KKT conditions) to 0. ;  ; void Clear_r3 ();  set the complementarity component of the residuals to 0. ;  ; Double_t GetDualityGap ();  ; Double_t GetResidualNorm ();  ; TQpResidual & operator= (const TQpResidual &source);  Assignment operator. ;  ; void Project_r3 (Double_t rmin, Double_t rmax);  Perform the projection operation required by Gondzio algorithm: replace each component r3_i of the complementarity component of the residuals by r3p_i-r3_i, where r3p_i is the projection of r3_i onto the box [rmin, rmax]. ;  ; void Set_r3_xz_alpha (TQpVar *vars, Double_t alpha);  Set the ""complementarity"" component of the residuals to the pairwise products of the complementary variables plus a constant alpha . ;  ; Bool_t ValidNonZeroPattern ();  Check if vector elements as selected",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpResidual.html:1362,variab,variable,1362,doc/master/classTQpResidual.html,https://root.cern,https://root.cern/doc/master/classTQpResidual.html,1,['variab'],['variable']
Modifiability,"renced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*TBranch::fAddress! Address of 1st leaf (variable or object); Int_t*TBranch::fBasketBytes[fMaxBaskets] Lenght of baskets on file; Long64_t*TBranch::fBasketEntry[fMaxBaskets] Table of first entry in eack basket; Long64_t*TBranch::fBasketSeek[fMaxBaskets] Addresses of baskets on file; Int_tTBranch::fBasketSizeInitial Size of Basket Buffer; TObjArrayTBranch::fBaskets-> List of baskets of this branch; TBranch*fBranchCountBranch with clones count; TObjArrayTBranch::fBranches-> List of Branches of this branch; TList*TBranch::fBrowsables! List of TVirtualBranchBrowsables used for Browse(); TStringfClassNamename of the class of the objets in the ClonesArray; Int_tTBranch::fCompress(=1 branch is compressed, 0 otherwise); TDirectory*TBranch::fDirectory! Pointer to directory where this branch buffers are stored; Long64_tTBranch::fEntriesNumber of entries; TBuffer*TBranch::fEntryBuffer! Buffer used to directly pass the content without streaming; Long64_tTBranch::fEntryNumberCurrent entry number (last one filled in this branch); Int_tTBranch::fEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TStringTBranch::fFileNameName of file where buffers are stored ("""" if in same file as Tree header); Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Long64_tTBranch::fFirstEntryNumber of the first entry in this branch; TObjArrayTBranch::fLeaves-> List of leaves of this branch; TClonesArray*fList!Pointer to the clonesarray; Int_tTBranch::fMaxBasketsMaximum number of Baskets so far; TBranch*TBranch::fMother! Pointer to top-level parent branch in the tree.; Int_tfN!Number of elements in ClonesArray; Int_tTBranch::fNBaskets! Number of baskets in memory; TStringTNamed::fNameobject identifier; Int_tfNdataMax!Maximum value of fN; Int_tTBranch::f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TBranchClones.html:10006,variab,variable,10006,root/html528/TBranchClones.html,https://root.cern,https://root.cern/root/html528/TBranchClones.html,1,['variab'],['variable']
Modifiability,"renced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*TBranch::fAddress! Address of 1st leaf (variable or object); Int_t*TBranch::fBasketBytes[fMaxBaskets] Lenght of baskets on file; Long64_t*TBranch::fBasketEntry[fMaxBaskets] Table of first entry in eack basket; Long64_t*TBranch::fBasketSeek[fMaxBaskets] Addresses of baskets on file; Int_tTBranch::fBasketSizeInitial Size of Basket Buffer; TObjArrayTBranch::fBaskets-> List of baskets of this branch; TBranch*fBranchCountBranch with clones count; TObjArrayTBranch::fBranches-> List of Branches of this branch; TList*TBranch::fBrowsables! List of TVirtualBranchBrowsables used for Browse(); TStringfClassNamename of the class of the objets in the ClonesArray; Int_tTBranch::fCompress(=1 branch is compressed, 0 otherwise); TDirectory*TBranch::fDirectory! Pointer to directory where this branch buffers are stored; Long64_tTBranch::fEntriesNumber of entries; TBuffer*TBranch::fEntryBuffer! Buffer used to directly pass the content without streaming; Long64_tTBranch::fEntryNumberCurrent entry number (last one filled in this branch); Int_tTBranch::fEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TStringTBranch::fFileNameName of file where buffers are stored ("""" if in same file as Tree header); Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Long64_tTBranch::fFirstEntryNumber of the first entry in this branch; TObjArrayTBranch::fLeaves-> List of leaves of this branch; TClonesArray*fList!Pointer to the clonesarray; Int_tTBranch::fMaxBasketsMaximum number of Baskets so far; TBranch*TBranch::fMother! Pointer to top-level parent branch in the tree.; Int_tfN!Number of elements in ClonesArray; TStringTNamed::fNameobject identifier; Int_tfNdataMax!Maximum value of fN; Int_tTBranch::fNleaves! Number of leaves; Int_tTBranch::fOffsetOffset",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBranchClones.html:9852,variab,variable,9852,root/html526/TBranchClones.html,https://root.cern,https://root.cern/root/html526/TBranchClones.html,1,['variab'],['variable']
Modifiability,"rency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Float_tfDEta; Float_tfDPhi; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Float_tfEta; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; TEveVectorfLimitsBorder of Barrel/Cylinder to cut the cone.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Bool_tTEveShape::fMiniFramedraw minimal frame; Int_tfNDiv; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Float_tfPhi; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; Float_tfThetaCTransition theta; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree it",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveJetCone.html:21832,variab,variable,21832,root/html602/TEveJetCone.html,https://root.cern,https://root.cern/root/html602/TEveJetCone.html,4,['variab'],['variable']
Modifiability,"rency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Short_tfCompoundOpenIf more than zero, tag new children as compound members.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCompound.html:18271,variab,variable,18271,root/html528/TEveCompound.html,https://root.cern,https://root.cern/root/html528/TEveCompound.html,1,['variab'],['variable']
Modifiability,"rency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Short_tfCompoundOpenIf more than zero, tag new children as compound members.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveCompound.html:18637,variab,variable,18637,root/html530/TEveCompound.html,https://root.cern,https://root.cern/root/html530/TEveCompound.html,5,['variab'],['variable']
Modifiability,"render menu buttons; Int_tfMouseX! last mouse position; Int_tfMouseY! last mouse position; TGLViewer*fParent; TGLVector3fPointerpicked location in 3D space; Float_tfPosXx position [0, 1]; Float_tfPosYy position [0, 1]; TGLOverlayElement::ERoleTGLOverlayElement::fRole; TGLOverlayElement::EStateTGLOverlayElement::fState; TStringfTextannotation text; TGLFont::ETextAlignH_efTextAlign; Color_tfTextColortext color; TGTextEdit*fTextEditeditors; Float_tfTextSizerelative font size; Float_tfTextSizeDrag! text-size at start of drag; Char_tfTransparencytransparency of background; Bool_tfUseColorSetuse color set from rnrCtx; Float_tfWidth; static Color_tfgBackColor; static Color_tfgTextColor; static TGLAnnotation::ENameStackkDeleteID; static TGLAnnotation::ENameStackkEditID; static TGLAnnotation::EDragkMove; static TGLAnnotation::ENameStackkMoveID; static TGLAnnotation::EDragkNone; static TGLAnnotation::EDragkResize; static TGLAnnotation::ENameStackkResizeID. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLAnnotation(TGLViewerBase* parent, const char* text, Float_t posx, Float_t posy); Constructor.; Create annotation as plain text. TGLAnnotation(TGLViewerBase* parent, const char* text, Float_t posx, Float_t posy, TGLVector3 ref); Constructor.; Create annotaton by picking an object. ~TGLAnnotation(); Destructor. Bool_t Handle(TGLRnrCtx& rnrCtx, TGLOvlSelectRecord& selRec, Event_t* event); Handle overlay event.; Return TRUE if event was handled. Bool_t MouseEnter(TGLOvlSelectRecord& selRec); Mouse has entered overlay area. void MouseLeave(); Mouse has left overlay area. void Render(TGLRnrCtx& rnrCtx); Render the annotation. Char_t GetLineTransparency() const; Returns transparecy of annotation outline.; If annotation is selected enforce visiblity of outline. void MakeEditor(); Show the annotation editor. void CloseEditor(); Close the annotation editor. void UpdateText(); Modify the annotation text from the text-edit widget. TGLAnnotation",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLAnnotation.html:3996,Inherit,Inheritance,3996,root/html602/TGLAnnotation.html,https://root.cern,https://root.cern/root/html602/TGLAnnotation.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEditQueryFrame.html:12904,inherit,inherited,12904,doc/master/classTEditQueryFrame.html,https://root.cern,https://root.cern/doc/master/classTEditQueryFrame.html,51,['inherit'],['inherited']
Modifiability,"rent directory. ;  . Public Attributes; TDSet * fDSet;  ; Int_t fFiles;  ; Int_t fMissing;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TProofMonSender.h>. Inheritance diagram for TProofMonSender::TDSetPlet:. This browser is not able to show SVG: try Fire",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMonSender_1_1TDSetPlet.html:9702,inherit,inherited,9702,doc/master/classTProofMonSender_1_1TDSetPlet.html,https://root.cern,https://root.cern/doc/master/classTProofMonSender_1_1TDSetPlet.html,2,['inherit'],['inherited']
Modifiability,"rent directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TOutputListSelectorDataMap * FindInList (TCollection *coll);  Find a TOutputListSelectorDataMap in a collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TCollection * fMap;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TOutputListSelectorDataMap.h>. Inheritance diagram for TOutputListSelectorDataMap:. This browser is not able to show SVG: try Fire",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTOutputListSelectorDataMap.html:9709,inherit,inherited,9709,doc/master/classTOutputListSelectorDataMap.html,https://root.cern,https://root.cern/doc/master/classTOutputListSelectorDataMap.html,1,['inherit'],['inherited']
Modifiability,"rent directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TList * fTmpOpenPhases;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TVirtualMonitoringWriter (const TVirtualMonitoringWriter &)=delete;  ; TVirtualMonitoringWriter & operator= (const TVirtualMonitoringWriter &)=delete;  . Private Attributes; Double_t fValue;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMonitoringWriter.html:10876,inherit,inherited,10876,doc/master/classTVirtualMonitoringWriter.html,https://root.cern,https://root.cern/doc/master/classTVirtualMonitoringWriter.html,1,['inherit'],['inherited']
Modifiability,"rent directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void IterateOnce (void);  ; virtual void Reset (void);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; const TUnfoldBinning * f_constInputBins;  ; const TUnfoldBinning * f_constOutputBins;  ; TUnfoldBinning * f_inputBins;  ; TUnfoldBinning * f_outputBins;  ; TMatrixD * fA;  ; TVectorD * fBgr;  ; TMatrixD * fDXDY;  ; TVectorD * fEpsilon;  ; double fScaleBias;  ; Int_t fStep;  ; TVectorD * fX;  ; TVectorD * fX0;  ; TVectorD * fY;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldIterativeEM.html:10075,inherit,inherited,10075,doc/master/classTUnfoldIterativeEM.html,https://root.cern,https://root.cern/doc/master/classTUnfoldIterativeEM.html,1,['inherit'],['inherited']
Modifiability,"rent hues clash. If you intend to display; colors of the same hue together, you should pick them from the same group.; Each color chip is identified by a mnemonic (eg kYellow) and a number.; The keywords, kRed, kBlue, kYellow, kPink, etc are defined in the header file Rtypes.h; that is included in all ROOT other header files. We strongly recommend to use these keywords; in your code instead of hardcoded color numbers, eg:. myObject.SetFillColor(kRed);; myObject.SetFillColor(kYellow-10);; myLine.SetLineColor(kMagenta+2);. Picture; Source. {; TColorWheel *w = new TColorWheel();; w->Draw();; return w->GetCanvas();; }. Special case forcing black&white output.; If the current style fill area color is set to 0, then ROOT will force; a black&white output for all objects with a fill area defined and independently; of the object fill style.; Fill Area style; The fill area style defines the pattern used to fill a polygon.; The fill area style of any class inheriting from TAttFill can; be changed using the method SetFillStyle and retrieved using the; method GetFillStyle.; Conventions for fill styles:. 0 : hollow ; 1001 : Solid ; 3000+pattern_number (see below) ; For TPad only: . 4000 :the window is transparent. ; 4000 to 4100 the window is 100% transparent to 100% opaque. . The pad transparency is visible in binary outputs files like gif, jpg, png etc ..; but not in vector graphics output files like PS, PDF and SVG. This convention; (fill style > 4000) is kept for backward compatibility. It is better to use; the color transparency instead. pattern_number can have any value from 1 to 25 (see table), or any; value from 100 to 999. For the latest the numbering convention is the following:. pattern_number = ijk (FillStyle = 3ijk); i (1-9) : specify the space between each hatch; 1 = 1/2mm 9 = 6mm; j (0-9) : specify angle between 0 and 90 degrees; 0 = 0; 1 = 10; 2 = 20; 3 = 30; 4 = 45; 5 = Not drawn; 6 = 60; 7 = 70; 8 = 80; 9 = 90; k (0-9) : specify angle between 90 and 180 degrees; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAttFill.html:2940,inherit,inheriting,2940,root/html534/TAttFill.html,https://root.cern,https://root.cern/root/html534/TAttFill.html,6,['inherit'],['inheriting']
Modifiability,rent line color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; void DrawPoly (Option_t *options);  Paint the polygon representing the current entry. ;  ; void DrawPolyAverage (Option_t *options);  Paint the Polygon representing the average value of the variables. ;  ; void DrawSlices (Option_t *options);  Draw the slices of the segment plot. ;  ; void DrawSlicesAverage (Option_t *options);  Draw the slices representing the average for the segment plot. ;  ; Int_t FindTextAlign (Double_t theta);  Find the alignement rule to apply for TText::SetTextAlign(Short_t). ;  ; Double_t FindTextAngle (Double_t theta);  Determine the orientation of the polar labels according to their angle. ;  ; void InitArrays (Int_t newsize);  Check if the arrays size is enough and reallocate them if not. ;  ; void InitVariables (Long64_,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:15935,inherit,inherited,15935,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,2,['inherit'],['inherited']
Modifiability,"rent name may represent a; an unique volume object, but may also represent more general a family (class); of volume objects having the same shape type and medium, but possibly; different shape parameters. It is the user's task to provide different names; for different volume families in order to avoid ambiguities at tracking time.; A generic family rather than a single volume is created only in two cases :; when a generic shape is provided to the volume constructor or when a division; operation is applied. Each volume in the geometry stores an unique; ID corresponding to its family. In order to ease-up their creation, the manager; class is providing an API that allows making a shape and a volume in a single step. Volumes are objects that can be visualized, therefore having visibility,; colour, line and fill attributes that can be defined or modified any time after; the volume creation. It is advisable however to define these properties just; after the first creation of a volume namespace, since in case of volume families; any new member created by the modeler inherits these properties. In order to provide navigation features, volumes have to be able to find; the proper container of any point defined in the local reference frame. This; can be the volume itself, one of its positioned daughter volumes or none if; the point is actually outside. On the other hand, volumes have to provide also; other navigation methods such as finding the distances to its shape boundaries; or which daughter will be crossed first. The implementation of these features; is done at shape level, but the local mother-daughters management is handled; by volumes that builds additional optimisation structures upon geometry closure.; In order to have navigation features properly working one has to follow the; general rules for building a valid geometry (see TGeoManager class). Now let's make a simple volume representing a copper wire. We suppose that; a medium is already created (see TGeoMedium cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoVolume.html:1913,inherit,inherits,1913,root/html528/TGeoVolume.html,https://root.cern,https://root.cern/root/html528/TGeoVolume.html,30,['inherit'],['inherits']
Modifiability,"rent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGLVContainer*fLVContainercontainer for the input list view; TSessionViewer*fViewerpointer on the main viewer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSessionInputFrame(TGWindow* parent, Int_t w, Int_t h); Constructor. ~TSessionInputFrame(); Destructor. void Build(TSessionViewer* gui); Build query input informations frame. void AddObject(TObject* obj); Add object to input list view. TGLVContainer * GetLVContainer(); { return fLVContainer; }. void RemoveAll(); { fLVContainer->RemoveAll(); }. » Author: Marek Biskup, Jakub Madejczyk, Bertrand Bellenot 10/08/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id: TSessionViewer.h 40088 2011-06-30 15:10:06Z bellenot $ » Last generated: 2011-11-03 20:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSessionInputFrame.html:18823,Inherit,Inheritance,18823,root/html532/TSessionInputFrame.html,https://root.cern,https://root.cern/root/html532/TSessionInputFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rentN;  Number of entries to display. ;  ; TParallelCoordSelect * fCurrentSelection;  ! Current Selection being edited. ;  ; Int_t fDotsSpacing;  Spacing between dots to draw the entries. ;  ; TEntryList * fInitEntries;  -> Selected entries when TParallelCoord first initialized. ;  ; Color_t fLineColor;  entries line color. ;  ; Width_t fLineWidth;  entries line width. ;  ; Long64_t fNentries;  Number of entries;. ;  ; UInt_t fNvar;  Number of variables. ;  ; TList * fSelectList;  List of selections over the variables. ;  ; TTree * fTree;  ! Pointer to the TTree. ;  ; TString fTreeFileName;  Name of the file containing the tree. ;  ; TString fTreeName;  Name of the tree. ;  ; TList * fVarList;  List of the variables. ;  ; Int_t fWeightCut;  Specify a cut on the entries from their weight (see TParallelCoordVar::GetEvtWeight(Long64_t)) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TParallelCoord.h>. Inheritance diagram for TParallelCoord:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TParallelCoord::EStatusBits. EnumeratorkVertDisplay If the axes are drawn vertically, false if horizontally. . kCurveDisplay If the polylines are replaced by interpolated curves. . kPaintEntries To paint all TParallelCoord entries. . kLiveUpdate To paint the entries when being modified. . kGlobalScale Every variable is on the same scale. . kCandleChart To produce a candle chart. . kGlobalLogScale Every variable in log scale. . Definition at line 30 of file TParallelCoord.h. Constructor & Destructor Documentation. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:22347,inherit,inherited,22347,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,2,['inherit'],['inherited']
Modifiability,"rentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Member Functions; void configure (const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Construct the SplitRule object from a list of named arguments past to RooSimWSTool::build This method parses any SplitParam and SplitParamComstrained argument in the list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::list< std::string > _miStateNameList;  ; std::map< std::string, std::pair< std::list< std::string >, std::string > > _paramSplitMap;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class BuildConfig;  ; class MultiBuildConfig;  ; class RooSimWSTool;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 ));",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html:9879,inherit,inherited,9879,doc/master/classRooSimWSTool_1_1SplitRule.html,https://root.cern,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html,1,['inherit'],['inherited']
Modifiability,"rentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum { kMarkerNDC; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Double_tfXX position of marker (left,center,etc..); Double_tfYY position of marker (left,center,etc..). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMarker(); Marker default constructor. TMarker(Double_t x, Double_t y, Int_t marker); Marker normal constructor. ~TMarker(); Marker default destructor. TMarker(const TMarker& marker); Marker copy constructor. void Copy(TObject& marker) const; Copy this marker to marker. void DisplayMarkerTypes(); Display the table of markers with their numbers. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to a marker. Compute the closest distance of approach from point px,py to this marker.; The distance is computed in pixels units. void Draw(Option_t* option = """"); Draw this marker with its current attributes. void DrawMarker(Double_t x, Double_t y); Draw this marker with new coordinates. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when a marker is clicked with the locator. If Left button is clicked on a marker, the marker is moved to;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMarker.html:6399,Inherit,Inheritance,6399,root/html532/TMarker.html,https://root.cern,https://root.cern/root/html532/TMarker.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"repStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  . #include <TWebFile.h>. Inheritance diagram for TWebFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TWebFile() [1/3]. TWebFile::TWebFile ; (; ). inlineprivate . Definition at line 39 of file TWebFile.h. ◆ TWebFile() [2/3]. TWebFile::TWebFile ; (; const char * ; url, . Option_t * ; opt = """" . ). Create a Web file object. ; A web file is the same as a read-only TFile except that it is being read via a HTTP server. The url argument must be of the form: http://host.dom.ain/file.root. The opt can be ""NOPROXY"", to bypass any set ""http_proxy"" shell variable. The proxy can be specified as (in sh, or equivalent csh): export http_proxy=http://pcsalo.cern.ch:3128 The proxy can also be specified via the static method TWebFile::SetProxy(). Basic authentication (AuthType Basic) is supported. The user name and passwd can be specified in the url like this: http://username:mypasswd@pcsalo.cern.ch/files/aap.root If the file specified in the URL does not exist or is not accessible the kZombie bit will be set in the TWebFile object. Use IsZombie() to see if the file is accessible. The preferred interface to this constructor is via TFile::Open(). ; Definition at line 146 of file TWebFile.cxx. ◆ TWebFile() [3/3]. TWebFile::TWebFile ; (; TUrl ; url, . Option_t * ; opt = """" . ). Create a Web file object. ; A web file is the same as a read-only TFile except that it is being read via a HTTP server. Make sure url is a valid TUrl object. The opt can be ""NOPROXY"", to bypass any set ""http_proxy"" shell variable. The proxy can ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebFile.html:44021,variab,variable,44021,doc/master/classTWebFile.html,https://root.cern,https://root.cern/doc/master/classTWebFile.html,1,['variab'],['variable']
Modifiability,"reports if nothing changes (estimated proc time / 100); TMap*TVirtualPacketizer::fSlaveStatsslave status, keyed by correspondig TSlave; TTimeTVirtualPacketizer::fStartTimetime offset; Bool_tTVirtualPacketizer::fStopTermination of Process() requested?; Float_tTVirtualPacketizer::fTimeUpdttime between updates; Long64_tTVirtualPacketizer::fTotalEntriestotal number of entries to be distributed;; TVirtualPacketizer::EUseEstOptTVirtualPacketizer::fUseEstOptControl usage of estimated values for the progress info; Bool_tTVirtualPacketizer::fValidConstructed properly?. private:. Long64_tfAssignedEntries processed or being processed.; Double_tfCalibFracSize of the calibrating packet as fraction of Ntot/Nwrk; Long64_tfNumPerWorkerNumber of cycles per worker, if this option; TList*fPacketsAll processed packets; Long64_tfProcessingEvent being processed; TStopwatch*fStopwatchFor measuring the start time of each packet; TMap*fWrkStatsWorker status, keyed by correspondig TSlave. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPacketizerUnit(TList* slaves, Long64_t num, TList* input, TProofProgressStatus* st = 0); Constructor. ~TPacketizerUnit(); Destructor. Double_t GetCurrentTime(); Get current time. Float_t GetCurrentRate(Bool_t& all); Get Estimation of the current rate; just summing the current rates of; the active workers. TDSetElement * GetNextPacket(TSlave* sl, TMessage* r); Get next packet. TPacketizerUnit(); is chosen. TPacketizerUnit(const TPacketizerUnit& ). void operator=(const TPacketizerUnit& ). Int_t GetActiveWorkers(); { return fWrkStats->GetSize(); }. » Author: Long Tran-Thanh 22/07/07 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TPacketizerUnit.h 39088 2011-05-04 11:10:47Z ganis $ » Last generated: 2011-12-02 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPacketizerUnit.html:9799,Inherit,Inheritance,9799,root/html532/TPacketizerUnit.html,https://root.cern,https://root.cern/root/html532/TPacketizerUnit.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"represent a volume positioned inside another.They store links to both volumes and to the TGeoM...Definition TGeoNode.h:39; TGeoShapeBase abstract class for all shapes.Definition TGeoShape.h:25; The last method allows replacing an existing daughter of a volume with another one. Providing only the node to be replaced will just create a new volume for the node but having exactly the same parameters as the old one. This helps in case of divisions for decoupling a node from the logical hierarchy so getting new content/properties. For non-divided volumes, one can change the shape and/or the position of the daughter.; Virtual Containers and Assemblies of Volumes; Virtual containers are volumes that do not represent real objects, but they are needed for grouping and positioning together other volumes. Such grouping helps not only geometry creation, but also optimizes tracking performance; therefore, it is highly recommended. Virtual volumes need to inherit material/medium properties from the volume they are placed into in order to be ""invisible"" at tracking time.; Let us suppose that we need to group together two volumes A and B into a structure and position this into several other volumes D,E, and F. What we need to do is to create a virtual container volume C holding A and B, then position C in the other volumes.; Note that C is a volume having a determined medium. Since it is not a real volume, we need to manually set its medium the same as that of D,E or F in order to make it ""invisible"" (same physics properties). In other words, the limitation in proceeding this way is that D,E, and F must point to the same medium. If this was not the case, we would have to define different virtual volumes for each placement: C, C' and C"", having the same shape but different media matching the corresponding containers. This might not happen so often, but when it does, it forces the creation of several extra virtual volumes. Other limitation comes from the fact that any container is dire",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry.html:31531,inherit,inherit,31531,doc/master/group__Geometry.html,https://root.cern,https://root.cern/doc/master/group__Geometry.html,1,['inherit'],['inherit']
Modifiability,"reprocessFunction>&GetFunctionObjects(); map<string,double>&GetGammaSyst(); virtual const char*TObject::GetIconName() const; map<string,double>&GetLogNormSyst(); doubleGetLumi(); doubleGetLumiRelErr(); virtual const char*TNamed::GetName() const; map<string,double>&GetNoSyst(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; stringGetOutputFilePrefix(); map<string,double>&GetParamValues(); stringGetPOI(unsigned int i = 0); vector<string>&GetPOIList(); vector<string>GetPreprocessFunctions(); virtual const char*TNamed::GetTitle() const; map<string,double>&GetUniformSyst(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); boolHasChannel(string); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooStats::HistFactory::MeasurementMeasurement(); RooStats::HistFactory::MeasurementMeasurement(const RooStats::HistFactory::Measurement&); RooStats::HistFactory::MeasurementMeasurement(RooStats::HistFactory::Measurement&&); RooStats::HistFactory::MeasurementMeasurement(const char* Name, const char* Title = """"); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HistFactory__Measurement.html:4007,Inherit,InheritsFrom,4007,root/html602/RooStats__HistFactory__Measurement.html,https://root.cern,https://root.cern/root/html602/RooStats__HistFactory__Measurement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"requested ; intfNEvalnumber of function evaluation; doublefRelErrorRelative error; doublefRelTolrelative tolerance; doublefResultlast integration result ; unsigned intfSizemax size of working array (explode with dimension); intfStatusstatus of algorithm (error if not zero). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; AdaptiveIntegratorMultiDim(double absTol = 1.E-6, double relTol = 1E-6, unsigned int maxpts = 100000, unsigned int size = 0). construct given optionally tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working array.; The size of working array represents the number of sub-division used for calculating the integral.; Higher the dimension, larger sizes are required for getting the same accuracy.; The size must be larger than >= (2N + 3) * (1 + MAXPTS/(2**N + 2N(N + 1) + 1))/2). For smaller value passed, the; minimum allowed will be used. AdaptiveIntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, double absTol = 1.E-9, double relTol = 1E-6, unsigned int maxcall = 100000, unsigned int size = 0). Construct with a reference to the integrand function and given optionally; tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working array. virtual ~AdaptiveIntegratorMultiDim(). destructor (no operations). {}. double Integral(const double* xmin, const double* xmax). evaluate the integral with the previously given function between xmin[] and xmax[]. return DoIntegral(const double* xmin, const double* xmax, bool absVal = false). double Integral(const ROOT::Math::IMultiGenFunction& f, const double* xmin, const double* xmax); evaluate the integral passing a new function. void SetFunction(const ROOT::Math::IMultiGenFunction& f); set the integration function (must implement multi-dim function interface: IBaseFunctionMultiDim). double Result() const; return result of integration. { return fResult; }. double Error() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__AdaptiveIntegratorMultiDim.html:3636,Adapt,AdaptiveIntegratorMultiDim,3636,root/html532/ROOT__Math__AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__AdaptiveIntegratorMultiDim.html,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,"requested ; intfNEvalnumber of function evaluation; doublefRelErrorRelative error; doublefRelTolrelative tolerance; doublefResultlast integration result ; unsigned intfSizemax size of working array (explode with dimension); intfStatusstatus of algorithm (error if not zero). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; AdaptiveIntegratorMultiDim(double absTol = 1.E-9, double relTol = 1E-9, unsigned int maxpts = 100000, unsigned int size = 0). construct given optionally tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working array.; The size of working array represents the number of sub-division used for calculating the integral.; Higher the dimension, larger sizes are required for getting the same accuracy.; The size must be larger than >= (2N + 3) * (1 + MAXPTS/(2**N + 2N(N + 1) + 1))/2). For smaller value passed, the; minimum allowed will be used. AdaptiveIntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, double absTol = 1.E-9, double relTol = 1E-9, unsigned int maxcall = 100000, unsigned int size = 0). Construct with a reference to the integrand function and given optionally; tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working array. virtual ~AdaptiveIntegratorMultiDim(). destructor (no operations). {}. double Integral(const double* xmin, const double* xmax). evaluate the integral with the previously given function between xmin[] and xmax[]. return DoIntegral(const double* xmin, const double* xmax, bool absVal = false). double Integral(const ROOT::Math::IMultiGenFunction& f, const double* xmin, const double* xmax); evaluate the integral passing a new function. void SetFunction(const ROOT::Math::IMultiGenFunction& f); set the integration function (must implement multi-dim function interface: IBaseFunctionMultiDim). double Result() const; return result of integration. { return fResult; }. double Error() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__AdaptiveIntegratorMultiDim.html:5566,Adapt,AdaptiveIntegratorMultiDim,5566,root/html534/ROOT__Math__AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__AdaptiveIntegratorMultiDim.html,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,"requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy _if;  Int(F(x))dx ;. ;  ; RooRealProxy _ixf;  Int(X*F(X))dx ;. ;  ; RooRealProxy _xf;  X*F. ;  ;  Protected Attributes inherited from RooAbsMoment; RooRealProxy _func;  Input function. ;  ; RooRealProxy _mean;  Mean (if calculated for central moment) ;  ; RooSetProxy _nset;  Normalization set (optional) ;  ; Int_t _order = 1;  Moment order. ;  ; Int_t _takeRoot = false;  Return n-order root of moment. ;  ; RooRealProxy _x;  Observable. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFirstMoment.html:55727,inherit,inherited,55727,doc/master/classRooFirstMoment.html,https://root.cern,https://root.cern/doc/master/classRooFirstMoment.html,2,['inherit'],['inherited']
Modifiability,"requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooLegendre; RooRealProxy _ctheta;  ; int _l1;  ; int _l2;  ; int _m1;  ; int _m2;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSpHarmonic.html:59156,inherit,inherited,59156,doc/master/classRooSpHarmonic.html,https://root.cern,https://root.cern/doc/master/classRooSpHarmonic.html,2,['inherit'],['inherited']
Modifiability,"requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integration can be performed, zero should be returned. ; Reimplemented from RooAbsReal.; Definition at line 1105 of file RooNDKeysPdf.cxx. ◆ getWeights(). TMatrixD RooNDKeysPdf::getWeights ; (; const int & ; k); const. Return evaluated weights. ; Definition at line 1291 of file RooNDKeysPdf.cxx. ◆ initialize(). void RooNDKeysPdf::initialize ; (; RooDataSet const & ; data). protected . initialization ; Definition at line 406 of file RooNDKeysPdf.cxx. ◆ IsA(). TClass * RooNDKeysPdf::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 198 of file RooNDKeysPdf.h. ◆ loadDataSet(). void RooNDKeysPdf::loadDataSet ; (; bool ; firstCall, . RooDataSet const & ; data . ). protected . copy the dataset and calculate some useful variables ; Definition at line 476 of file RooNDKeysPdf.cxx. ◆ loadWeightSet(). void RooNDKeysPdf::loadWeightSet ; (; RooDataSet const & ; data). protected . Definition at line 696 of file RooNDKeysPdf.cxx. ◆ loopRange(). void RooNDKeysPdf::loopRange ; (; std::vector< double > & ; x, . std::vector< Int_t > & ; indices . ); const. protected . determine closest points to x, to loop over in evaluate() ; Definition at line 974 of file RooNDKeysPdf.cxx. ◆ mirrorDataSet(). void RooNDKeysPdf::mirrorDataSet ; (; ). protected . determine mirror dataset. ; mirror points are added around the physical boundaries of the dataset Two steps:; For each entry, determine if it should be mirrored (the mirror configuration).; For each mirror configuration, make the mirror points. . Definition at line 607 of file RooNDKeysPdf.cxx. ◆ setOptions(). void RooNDKeysPdf::setOptions ; (; ). protected . set the configuration ; Definition at line 369 of file RooNDKeysPdf.cxx. ◆ sortDataIndices(). void RooNDKeysPdf::sortDa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNDKeysPdf.html:88159,variab,variables,88159,doc/master/classRooNDKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRooNDKeysPdf.html,1,['variab'],['variables']
Modifiability,"required one in the efficiency scan; the background efficiency must be as small as possible. the requirement 1. has priority over 2. ; Definition at line 893 of file MethodCuts.cxx. ◆ CreateRanking(). const Ranking * TMVA::MethodCuts::CreateRanking ; (; ). inlinevirtual . Implements TMVA::MethodBase.; Definition at line 124 of file MethodCuts.h. ◆ CreateVariablePDFs(). void TMVA::MethodCuts::CreateVariablePDFs ; (; void ; ). private . for PDF method: create efficiency reference histograms and PDFs ; Definition at line 1106 of file MethodCuts.cxx. ◆ DeclareOptions(). void TMVA::MethodCuts::DeclareOptions ; (; ). virtual . define the options (their key words) that can be set in the option string. ; know options:; Method <string> Minimisation method. Available values are:; MC Monte Carlo <default>; GA Genetic Algorithm; SA Simulated annealing. EffMethod <string> Efficiency selection method. Available values are:; EffSel <default>; EffPDF. VarProp <string> Property of variable 1 for the MC method (taking precedence over the globale setting. The same values as for the global option are available. Variables 1..10 can be set this way; CutRangeMin/Max <float> user-defined ranges in which cuts are varied . Implements TMVA::MethodBase.; Definition at line 319 of file MethodCuts.cxx. ◆ DeclFileName(). static const char * TMVA::MethodCuts::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 238 of file MethodCuts.h. ◆ DynamicCast(). static MethodCuts * TMVA::MethodCuts::DynamicCast ; (; IMethod * ; method). inlinestatic . Definition at line 74 of file MethodCuts.h. ◆ EstimatorFunction() [1/2]. Double_t TMVA::MethodCuts::EstimatorFunction ; (; Int_t ; ievt1, . Int_t ; ievt2 . ). for full event scan ; Definition at line 834 of file MethodCuts.cxx. ◆ EstimatorFunction() [2/2]. Double_t TMVA::MethodCuts::EstimatorFunction ; (; std::vector< Double_t > & ; pars). virtual . returns estimator for ""cut fitness"" used by GA ; Im",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html:38351,variab,variable,38351,doc/master/classTMVA_1_1MethodCuts.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html,1,['variab'],['variable']
Modifiability,"res a system with multiple processors. Parallelism implies concurrency, but not vice-versa.; A function is reentrant if it will behave correctly even if a thread of execution enters the function while one or more threads are already executing within the function. These could be the same thread, in the case of recursion, or different threads, in the case of concurrency.; Thread-specific data (TSD) is also known as thread-local storage (TLS). Normally, any data that has lifetime beyond the local variables on the thread’s private stack are shared among all threads within the process. Thread-specific data is a form of static or global data that is maintained on a per-thread basis. That is, each thread gets its own private copy of the data.; Left to their own devices, threads execute independently. Synchronization is the work that must be done when there are, in fact, interdependencies that require some form of communication among threads. Synchronization tools include mutexes, semaphores, condition variables, and other variations on locking.; A critical section is a section of code that accesses a non-sharable resource. To ensure correct code, only one thread at a time may execute in a critical section. In other words, the section is not reentrant.; A mutex, or mutual exclusion lock, is a synchronization object with two states locked and unlocked. A mutex is usually used to ensure that only one thread at a time executes some critical section of code. Before entering a critical section, a thread will attempt to lock the mutex, which guards that section. If the mutex is already locked, the thread will block until the mutex is unlocked, at which time it will lock the mutex, execute the critical section, and unlock the mutex upon leaving the critical section.; A semaphore is a synchronization mechanism that starts out initialized to some positive value. A thread may ask to wait on a semaphore in which case the thread blocks until the value of the semaphore is positive. At th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1121223,variab,variables,1121223,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,"res, created by object storing ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherited from TBuffer; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer. ;  ; Bool_t fMode;  ; TObject * fParent;  ; ReAllocCharFun_t fReAllocFunc;  ; Int_t fVersion;  . Friends; class TSQLStructure;  . Additional Inherited Members;  Public Types inherited from TBufferIO; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL << ( 18 )); , kUser1 = (1ULL << ( 21 )); , kUser2 = (1ULL << ( 22 )); , ;   kUser3 = (1ULL << ( 23 )). };  ;  Public Types inherited from TBuffer; enum  { kInitialSize = 1024; , kMinimalSize = 128; };  ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); ,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferSQL2.html:45356,inherit,inherited,45356,doc/master/classTBufferSQL2.html,https://root.cern,https://root.cern/doc/master/classTBufferSQL2.html,1,['inherit'],['inherited']
Modifiability,"resening; the variable bin boundaries for parameterized binning implementations. void printValue(ostream& os) const; Print binning value, i.e the bin boundary positions. void Streamer(TBuffer& b); Custom streamer implementing schema evolution between V1 and V2 persistent binnings. TObject* Clone(const char* newname = 0) const; { return clone(newname) ; }. RooAbsBinning* clone(const char* name = 0) const. Int_t numBins() const; Return number of bins. return numBoundaries() const. Int_t binNumber(Double_t x) const. Int_t rawBinNumber(Double_t x) const; { return binNumber(x) ; }. Double_t binCenter(Int_t bin) const. Double_t binWidth(Int_t bin) const. Double_t binLow(Int_t bin) const. Double_t binHigh(Int_t bin) const. Bool_t isUniform() const; { return kFALSE ; }. void setRange(Double_t xlo, Double_t xhi). void setMin(Double_t xlo); Change lower bound to xlo. void setMax(Double_t xhi); Change upper bound to xhi. Double_t lowBound() const. Double_t highBound() const. Double_t averageBinWidth() const. Double_t* array() const. void Print(Option_t* options = 0) const; Printing interface. Bool_t isParameterized() const; Interface function. If true, min/max of binning is parameterized by external RooAbsReals. RooAbsReal* lowBoundFunc() const; Return pointer to RooAbsReal parameterized lower bound, if any. RooAbsReal* highBoundFunc() const; Return pointer to RooAbsReal parameterized upper bound, if any. Bool_t isShareable() const; If true (default) range definition can be shared across clones of a RooRealVar. void insertHook(RooAbsRealLValue& ) const; Hook interface function to execute code upon insertion into a RooAbsRealLValue. void removeHook(RooAbsRealLValue& ) const; Hook interface functionto execute code upon removal from a RooAbsRealLValue. » Last changed: Mon Dec 7 13:45:31 2009 » Last generated: 2009-12-07 13:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsBinning.html:9297,parameteriz,parameterized,9297,root/html526/RooAbsBinning.html,https://root.cern,https://root.cern/root/html526/RooAbsBinning.html,3,['parameteriz'],['parameterized']
Modifiability,"resentative histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. Int_tfAverageEvtPerBinaverage events per bin; used to calculate fNbins; Int_t*fAverageEvtPerBinVarBaverage events per bin; used to calculate fNbins; Int_t*fAverageEvtPerBinVarSaverage events per bin; used to calculate fNbins; TStringfBorderMethodStringthe method to take care about ""border"" effects (string); TMVA::PDF*fDefaultPDFLikpdf that contains default definitions; Int_tfDropVariablefor ranking test; Double_tfEpsilonminimum number of likelihood (to avoid zero); vector<TH1*>*fHistBgdbackground PDFs (histograms); vector<TH1*>*fHistBgd_smoothbackground PDFs (smoothed histograms); vector<TH1*>*fHistSigsignal PDFs (histograms); vector<TH1*>*fHistSig_smoothsignal PDFs (smoothed histograms); TString*fInterpolateStringwhich interpolation method used for reference histograms (individual for each variable); Float_tfKDEfineFactorfine tuning factor for Adaptive KDE; TStringfKDEiterStringNumber of iterations (string); TStringfKDEtypeStringKernel type to use for KDE (string); Int_tfNsmoothnumber of smooth passes; Int_t*fNsmoothVarBnumber of smooth passes; Int_t*fNsmoothVarSnumber of smooth passes; vector<PDF*>*fPDFBgdlist of PDFs (background); vector<PDF*>*fPDFSiglist of PDFs (signal) ; Bool_tfTransformLikelihoodOutputlikelihood output is sigmoid-transformed. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodLikelihood(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodLikelihood(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodLikelihood.html:18576,variab,variable,18576,root/html528/TMVA__MethodLikelihood.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodLikelihood.html,1,['variab'],['variable']
Modifiability,"reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions;  RooAddGenContext (const RooAddGenContext &other);  ; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  Randomly choose one of the component contexts to generate this event, with a probability proportional to its coefficient. ;  ; void initGenerator (const RooArgSet &theEvent) override;  One-time initialization of generator context. ;  ; void updateThresholds ();  Update the cumulative threshold table from the current coefficient values. ;  ;  Protected Member Functions inherited from RooAbsGenContext; virtual RooDataSet * createDataSet (const char *name, const char *title, const RooArgSet &obs);  Create an empty dataset to hold the events that will be generated. ;  ; void resampleData (double &ratio);  Rescale existing output buffer with given ratio. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< double > _coefThresh;  [_nComp] Array of coefficient thresholds ;  ; std::vector< std::unique_ptr< RooAbsGenContext > > _gcList;  List of component generator contexts. ;  ; bool _isModel;  Are we generating from a RooAddPdf or a RooAddModel. ;  ; Int_t _nComp;  Number of PDF components. ;  ; AddCacheElem * _pcache = nullptr;  ! RooAddPdf cache element ;  ; RooAbsPdf * _pdf;  Pointer to cloned p.d.f. ;  ; std::unique_ptr< RooArgSet > _pdfSet;  Set owned all nodes of internal clone of p.d.f. ;  ; std::unique_ptr< RooArgSet > _vars;  ;  Protected Attributes inherited from RooAbsGenContext; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode _extendMode;  Extended mode capabilities of p.d.f. ;  ; RooDataSet * _genData = nullptr;  ! Data being generated ;  ; bool _isValid;  Is context in v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddGenContext.html:15303,inherit,inherited,15303,doc/master/classRooAddGenContext.html,https://root.cern,https://root.cern/doc/master/classRooAddGenContext.html,1,['inherit'],['inherited']
Modifiability,"reset = TDataSet::kSet); virtual Int_tTDataSetIter::Flag(const Char_t* path, UInt_t flag = TDataSet::kMark, TDataSet::EBitOpt reset = TDataSet::kSet); virtual Int_tTDataSetIter::Flag(TDataSet* dataset, UInt_t flag = TDataSet::kMark, TDataSet::EBitOpt reset = TDataSet::kSet); virtual Int_tTDataSetIter::GetDepth() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TDataSetIter::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTDataSetIter::ls(Option_t* dirname = """") const; virtual TDataSet*TDataSetIter::Ls(const Char_t* dirname = """", Option_t* opt = """") const; virtual TDataSet*TDataSetIter::Ls(const Char_t* dirname, Int_t depth) const; virtual TDataSet*TDataSetIter::ls(TString dirname, Option_t* opt = """") const; virtual TDataSet*TDataSetIter::ls(const Char_t* dirname, Int_t depth) const; voidTObject::MayNotUse(const char* method) const; virtual TDataSet*TDataSetIter::Md(const Char_t* dirname); virtual TDataSet*TDataSetIter::Mkdir(const Char_t* dirname); virtual TDataSet*TDataSetIter::Next(TDataSet::EDataSetPass mode = TDataSet::kContinue); virtual TDataSet*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVolumeViewIter.html:4558,Inherit,InheritsFrom,4558,root/html532/TVolumeViewIter.html,https://root.cern,https://root.cern/root/html532/TVolumeViewIter.html,2,['Inherit'],['InheritsFrom']
Modifiability,"resized ;  ; Int_t fMax;  max y position frame can be resized to ;  ; Int_t fMin;  min y position frame can be resized to ;  ; Int_t fStartY;  y position when dragging starts ;  ;  Protected Attributes inherited from TGSplitter; Bool_t fDragging;  true if in dragging mode ;  ; Bool_t fExternalHandler;  true when splitter movement is handled externally ;  ; Cursor_t fSplitCursor;  split cursor ;  ; const TGPicture * fSplitterPic;  picture to draw splitter ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGHSplitter (const TGHSplitter &)=delete;  ; TGHSplitter & operator= (const TGHSplitter &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 ))",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHSplitter.html:23912,inherit,inherited,23912,doc/master/classTGHSplitter.html,https://root.cern,https://root.cern/doc/master/classTGHSplitter.html,1,['inherit'],['inherited']
Modifiability,"respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretation such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is extended using RooAddPdf in the form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf. ; import ROOT; ; ROOT.gROOT.SetBatch(True); ; # PART 1: Background-only fits; # ----------------------------; ; # Build plain exponential model; x = ROOT.RooRealVar(""x"", ""x"", 10, 100); alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -0.04, -0.1, -0.0); model = ROOT.RooExponential(""model"", ""Exponential model"", x, alpha); ; # Define side band regions and full range; x.setRange(""LEFT"", 10, 20); x.setRange(""RIGHT"", 60, 100); ; x.setRange(""FULL"", 10, 100); ; data = model.generate(x, 10000); ; # Construct an extended pdf, which measures the event count N **on the full range**.; # If the actual domain of x that is fitted is identical to FULL, this has no affect.; #; # If the fitted domain is a subset of `FULL`, though, the expected event count is divided by; # \f[; # \mathrm{frac} = \frac{; # \int_{\mathrm{Fit range}} \mathrm{model}(x) \; \mathrm{d}x }{; # \int_{\mathrm{Full range}} \mathrm{model}(x) \; \mathrm{d}x }.; # \f]; # `N` will t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:2264,extend,extended,2264,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,1,['extend'],['extended']
Modifiability,"respond this view. ;  ; void Top () override;  ; void TopView (TVirtualPad *pad=nullptr) override;  Set to top view. ;  ; void UnZoom () override;  ; void UnzoomView (TVirtualPad *pad=nullptr, Double_t unZoomFactor=1.25) override;  unZOOM this view. ;  ; void WCtoNDC (const Double_t *pw, Double_t *pn) override;  Transfer point from world to normalized coordinates. ;  ; void WCtoNDC (const Float_t *pw, Float_t *pn) override;  Transfer point from world to normalized coordinates. ;  ; void Zoom () override;  ; void ZoomIn () override;  Zoom in. ;  ; void ZoomMove () override;  ; void ZoomOut () override;  Zoom out. ;  ; void ZoomView (TVirtualPad *pad=nullptr, Double_t zoomFactor=1.25) override;  ZOOM this view. ;  ;  Public Member Functions inherited from TView;  TView ();  ;  ~TView () override=default;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTView3D.html:11569,inherit,inherited,11569,doc/master/classTView3D.html,https://root.cern,https://root.cern/doc/master/classTView3D.html,1,['inherit'],['inherited']
Modifiability,"ress bar (i.e. set pos to 0). ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save progress bar parameters as a C++ statement(s) on output stream out. ;  ; void SetBarColor (const char *color=""blue"");  Set progress bar color. ;  ; virtual void SetBarColor (Pixel_t color);  Set progress bar color. ;  ; void SetBarType (EBarType type);  Set bar type. ;  ; void SetFillType (EFillType type);  Set fill type. ;  ; void SetForegroundColor (Pixel_t pixel) override;  Change text color drawing. ;  ; void SetMax (Float_t max);  ; void SetMin (Float_t min);  ; void SetPosition (Float_t pos);  Set progress position between [min,max]. ;  ; void SetRange (Float_t min, Float_t max);  Set min and max of progress bar. ;  ; virtual void ShowPos (Bool_t on);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t UsePercent () const;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHProgressBar.html:3573,inherit,inherited,3573,doc/master/classTGHProgressBar.html,https://root.cern,https://root.cern/doc/master/classTGHProgressBar.html,2,['inherit'],['inherited']
Modifiability,"ress of the array. ;  ; virtual void * NewArray (Int_t nElements, void *arena) const;  Construct an array of nElements container objects at the address given by arena ;  ; virtual TClass::ObjectPtr NewObject () const;  Construct a new container object and return its address. ;  ; virtual TClass::ObjectPtr NewObject (void *arena) const;  Construct a new container object at the address given by arena ;  ; virtual TClass::ObjectPtr NewObjectArray (Int_t nElements) const;  Construct an array of nElements container objects and return the base address of the array. ;  ; virtual TClass::ObjectPtr NewObjectArray (Int_t nElements, void *arena) const;  Construct an array of nElements container objects at the address given by arena ;  ; char * operator[] (UInt_t idx) const;  Return the address of the value at index idx ;  . Additional Inherited Members;  Public Types inherited from TGenCollectionProxy; enum  { kBIT_ISSTRING = 0x20000000; , kBIT_ISTSTRING = 0x40000000; };  ; typedef const std::type_info & Info_t;  ;  Public Types inherited from TVirtualCollectionProxy; typedef void *(* CopyIterator_t) (void *dest, const void *source);  Copy the iterator source into dest. ;  ; typedef void(* CreateIterators_t) (void *collection, void **begin_arena, void **end_arena, TVirtualCollectionProxy *proxy);  *begin_arena and *end_arena should contain the location of a memory arena of size fgIteratorArenaSize. ;  ; typedef void(* DeleteIterator_t) (void *iter);  If the size of the iterator is greater than fgIteratorArenaSize, call delete on the addresses; otherwise, just call the iterator's destructor. ;  ; typedef void(* DeleteTwoIterators_t) (void *begin, void *end);  ; enum  EProperty { kIsAssociative = (1ULL << ( 2 )); , kIsEmulated = (1ULL << ( 3 )); , kNeedDelete = (1ULL << ( 4 )); , kCustomAlloc = (1ULL << ( 5 )); };  ; typedef void *(* Next_t) (void *iter, const void *end);  iter and end should be pointers to an iterator to be incremented and an iterator that points to the end of t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenBitsetProxy.html:7010,inherit,inherited,7010,doc/master/classTGenBitsetProxy.html,https://root.cern,https://root.cern/doc/master/classTGenBitsetProxy.html,10,['inherit'],['inherited']
Modifiability,"ress writing to XML; TH1*fEffSefficiency histogram for rootfinder; vector<const vector<TMVA::Event*>*>fEventCollectionsif the method needs the complete event-collection, the transformed event coll. ist stored here.; TStringfFileDirunix sub-directory for weight files (default: ""weights""); Bool_tfHasMVAPdfsMVA Pdfs are created for this classifier; Bool_tfHelphelp flag; Bool_tfIgnoreNegWeightsInTrainingIf true, events with negative weights are not used in training; TStringfJobNamename of job -> user defined, appears in weight files; TMVA::PDF*fMVAPdfBbackground MVA PDF; TMVA::PDF*fMVAPdfSsignal MVA PDF; Double_tfMeanBmean (background); Double_tfMeanSmean (signal); TDirectory*fMethodBaseDirbase directory for the method; TStringfMethodNamename of the method (set in derived class); TMVA::Types::EMVAfMethodTypetype of method (set in derived class); Int_tfNbinsMVAPdfnumber of bins used in histogram that creates PDF; Bool_tfNormalisenormalise input variables; Int_tfNsmoothMVAPdfnumber of times a histogram is smoothed before creating the PDF; TStringfParentDirmethod parent name, like booster name; UInt_tfROOTTrainingVersionROOT version used for training; Double_tfRmsBRMS (background); Double_tfRmsSRMS (signal); Double_tfSignalReferenceCutminimum requirement on the MVA output to declare an event signal-like; Double_tfSignalReferenceCutOrientationminimum requirement on the MVA output to declare an event signal-like; TMVA::PDF*fSplBPDFs of MVA distribution (background); TMVA::TSpline1*fSplRefBhelper splines for RootFinder (background); TMVA::TSpline1*fSplRefShelper splines for RootFinder (signal); TMVA::PDF*fSplSPDFs of MVA distribution (signal); TMVA::PDF*fSplTrainBPDFs of training MVA distribution (background); TSpline*fSplTrainEffBvsSsplines for training signal eff. versus background eff.; TMVA::TSpline1*fSplTrainRefBhelper splines for RootFinder (background); TMVA::TSpline1*fSplTrainRefShelper splines for RootFinder (signal); TMVA::PDF*fSplTrainSPDFs of training MVA distribu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBase.html:19054,variab,variables,19054,root/html602/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBase.html,4,['variab'],['variables']
Modifiability,"ress() const; TTimeStampTSocket::GetLastUsage(); virtual TInetAddressTServerSocket::GetLocalInetAddress(); virtual Int_tTServerSocket::GetLocalPort(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTSocket::GetOption(ESockOptions opt, Int_t& val); Int_tTSocket::GetPort() const; Int_tTSocket::GetRemoteProtocol() const; TSecContext*TSocket::GetSecContext() const; const char*TSocket::GetService() const; Int_tTSocket::GetServType() const; static ULong64_tTSocket::GetSocketBytesRecv(); static ULong64_tTSocket::GetSocketBytesSent(); Int_tTSocket::GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPServerSocket.html:4206,Inherit,InheritsFrom,4206,root/html532/TPServerSocket.html,https://root.cern,https://root.cern/root/html532/TPServerSocket.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ress() const; TTimeStampTSocket::GetLastUsage(); virtual TInetAddressTServerSocket::GetLocalInetAddress(); virtual Int_tTServerSocket::GetLocalPort(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTSocket::GetOption(ESockOptions opt, Int_t& val); Int_tTSocket::GetPort() const; Int_tTSocket::GetRemoteProtocol() const; TSecContext*TSocket::GetSecContext() const; const char*TSocket::GetService() const; Int_tTSocket::GetServType() const; static ULong64_tTSocket::GetSocketBytesRecv(); static ULong64_tTSocket::GetSocketBytesSent(); Int_tTSocket::GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPServerSocket.html:3977,Inherit,InheritsFrom,3977,root/html602/TPServerSocket.html,https://root.cern,https://root.cern/root/html602/TPServerSocket.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ress() for the; meaning of the addr parameter. Int_t SetBranchAddress(const char* bname, void* add, TClass* realClass, EDataType datatype, Bool_t isptr); Verify the validity of the type of addr before calling SetBranchAddress.; See TTree::CheckBranchAddressType for the semantic of the return value. Note: See the comments in TBranchElement::SetAddress() for the; meaning of the addr parameter. Int_t SetBranchAddress(const char* bname, void* add, TBranch** ptr, TClass* realClass, EDataType datatype, Bool_t isptr); Verify the validity of the type of addr before calling SetBranchAddress.; See TTree::CheckBranchAddressType for the semantic of the return value. Note: See the comments in TBranchElement::SetAddress() for the; meaning of the addr parameter. void SetBranchStatus(const char* bname, Bool_t status = 1, UInt_t* found = 0); Set branch status to Process or DoNotProcess. When reading a Tree, by default, all branches are read.; One can speed up considerably the analysis phase by activating; only the branches that hold variables involved in a query. bname is the name of a branch.; if bname=""*"", apply to all branches.; if bname=""xxx*"", apply to all branches with name starting with xxx; see TRegexp for wildcarding options; status = 1 branch will be processed; = 0 branch will not be processed; Example:; Assume a tree T with sub-branches a,b,c,d,e,f,g,etc..; when doing T.GetEntry(i) all branches are read for entry i.; to read only the branches c and e, one can do; T.SetBranchStatus(""*"",0); //disable all branches; T.SetBranchStatus(""c"",1);; T.setBranchStatus(""e"",1);; T.GetEntry(i);. WARNING! WARNING! WARNING!; SetBranchStatus is matching the branch based on regular expression match; of the branch 'name' and not on the branch hierarchy!; In order to be able to selectively enable a top level object that is 'split'; you need to make sure the name of the top level branch is prefixed to the; sub-branches' name(by adding a dot ('.') at the end of the Branch creation; and use the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:117738,variab,variables,117738,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,1,['variab'],['variables']
Modifiability,"ressedSize() const; UInt_tGetCRC32() const; Long64_tTArchiveMember::GetDecompressedSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tTArchiveMember::GetFilePosition() const; void*GetGlobal() const; UInt_tGetGlobalLen() const; virtual const char*TObject::GetIconName() const; UInt_tGetLevel() const; void*GetLocal() const; UInt_tGetLocalLen() const; UInt_tGetMethod() const; TDatimeTArchiveMember::GetModTime() const; virtual const char*TArchiveMember::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tTArchiveMember::GetPosition() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTArchiveMember::IsDirectory() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TZIPMember.html:5005,Inherit,InheritsFrom,5005,root/html532/TZIPMember.html,https://root.cern,https://root.cern/root/html532/TZIPMember.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ressedSize() const; UInt_tGetCRC32() const; Long64_tTArchiveMember::GetDecompressedSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tTArchiveMember::GetFilePosition() const; void*GetGlobal() const; UInt_tGetGlobalLen() const; virtual const char*TObject::GetIconName() const; UInt_tGetLevel() const; void*GetLocal() const; UInt_tGetLocalLen() const; UInt_tGetMethod() const; TDatimeTArchiveMember::GetModTime() const; virtual const char*TArchiveMember::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tTArchiveMember::GetPosition() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTArchiveMember::IsDirectory() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TZIPMember.html:4947,Inherit,InheritsFrom,4947,root/html602/TZIPMember.html,https://root.cern,https://root.cern/root/html602/TZIPMember.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ression = 0); Write, compile and load code for a RooAbsReal implementation with; class name 'name', taking all elements of 'vars' as constructor; arguments. The initial value expression is taken to be; 'expression' which can be any one-line C++ expression in terms of; variables that occur in 'vars'. You can add optional expressions; for analytical integrals to be advertised by your class in the; syntax; ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; where <intObsName> a name of the observable integrated over and; <CPPAnaIntExpression> is the C++ expression that calculates that; integral. RooAbsReal* makeFunctionInstance(const char* name, const char* expression, const RooArgList& vars, const char* intExpression = 0); Write, compile and load code and instantiate object for a; RooAbsReal implementation with class name 'name', taking all; elements of 'vars' as constructor arguments. The initial value; expression is taken to be 'expression' which can be any one-line; C++ expression in terms of variables that occur in 'vars'. The returned object is an instance of the object you just defined; connected to the variables listed in 'vars'. The name of the; object is 'name', its class name Roo<name>Class. This function is an effective compiled replacement of RooFormulaVar. You can add optional expressions for analytical integrals to be; advertised by your class in the syntax; ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; where <intObsName> a name of the observable integrated over and; <CPPAnaIntExpression> is the C++ expression that calculates that; integral. RooAbsReal* makeFunctionInstance(const char* className, const char* name, const char* expression, const RooArgList& vars, const char* intExpression = 0); Write, compile and load code and instantiate object for a; RooAbsReal implementation with class name 'name', taking all; elements of 'vars' as constructor arguments. The initial value; expression ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooClassFactory.html:9897,variab,variables,9897,root/html526/RooClassFactory.html,https://root.cern,https://root.cern/root/html526/RooClassFactory.html,11,['variab'],['variables']
Modifiability,"ression foam from; file 'foam.root' and create a ROOT macro 'output.C', which; draws all PDEFoam cells with little boxes. The latter are; filled with colors according to the target value stored in the; cell. Also the cell number is drawn. TFile file(""foam.root"");; TMVA::PDEFoam *foam = (TMVA::PDEFoam*) gDirectory->Get(""MonoTargetRegressionFoam"");; foam->RootPlot2dim(""output.C"",""cell_value,cellnumber"");; gROOT->Macro(""output.C"");. void FillBinarySearchTree(const TMVA::Event* ev, Bool_t NoNegWeights = kFALSE); Insert event to internal foam density PDEFoamDistr. void DeleteBinarySearchTree(); Delete the fDistr object, which contains the binary search tree. void Init(); Initialize binary search tree, stored in object of type; PDEFoamDistr. void SetFoamType(TMVA::EFoamType ft); Set the foam type. This determinates the method of the; calculation of the density during the foam build-up. void ReadStream(istream& ); Read PDEFoam variables from stream 'istr'. void PrintStream(ostream& ) const; Write PDEFoam variables to stream 'os'. void AddXMLTo(void* parent); write foam variables to xml. void ReadXML(void* parent). Float_t VarTransform(Int_t idim, Float_t x) const. std::vector<Float_t> VarTransform(vector<Float_t>& invec) const. Float_t VarTransformInvers(Int_t idim, Float_t x) const. std::vector<Float_t> VarTransformInvers(vector<Float_t>& invec) const. PDEFoamDistr* GetDistr() const; { assert(fDistr); return fDistr; }. void SetnCells(Long_t nCells); {fNCells =nCells;}. void SetnSampl(Long_t nSampl); {fNSampl =nSampl;}. void SetnBin(Int_t nBin); {fNBin = nBin;}. void SetEvPerBin(Int_t EvPerBin); {fEvPerBin =EvPerBin;}. void SetNElements(UInt_t numb); {fNElements = numb;}. void SetVolumeFraction(Float_t vfr); {fVolFrac = vfr;}. void SetFillFoamWithOrigWeights(Bool_t new_val); {fFillFoamWithOrigWeights=new_val;}. void SetDTSeparation(TMVA::EDTSeparation new_val); {fDTSeparation=new_val;}. void SetPeekMax(Bool_t new_val); { fPeekMax = new_val; }. Int_t GetTotDim() const; cover",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__PDEFoam.html:28467,variab,variables,28467,root/html528/TMVA__PDEFoam.html,https://root.cern,https://root.cern/root/html528/TMVA__PDEFoam.html,1,['variab'],['variables']
Modifiability,"ression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fCancelcancel button; TGLabel*fLabeltext entry label; TGTextButton*fOkok button; char*fRetStraddress to store return string; TGTextEntry*fTEtext entry widget. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGInputDialog(const TGWindow* p = 0, const TGWindow* main = 0, const char* prompt = 0, const char* defval = 0, char* retstr = 0, UInt_t options = kVerticalFrame); Create simple input dialog. It is important to know that the case where the constructor in; which all the variables are initialized to their default values is; only used for the TBrowser to inspect on the classes. For normal; use the only variable that should be free is options. Variables prompt, defval are the content of the input dialog while; retstr has to be initialized to a char[256]. In case these are not; initialized, they will show default values while retstr will be; automatically allocated by the dialog. However this will make; impossible to retrieve the value entered by the dialog. To see TGInputDialog in use see:; $ROOTSYS/tutorials/testInputDialog.cxx. ~TGInputDialog(); Cleanup dialog. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t ); Handle button and te",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGInputDialog.html:22006,Inherit,Inheritance,22006,root/html532/TGInputDialog.html,https://root.cern,https://root.cern/root/html532/TGInputDialog.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static TString*fgClipboardTextapplication clipboard text; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*fgDefaultGC; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*fgDefaultSelectedBackgroundGC; static const TGGC*fgDefaultSelectedGC; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTextEntry(const TGWindow* p, TGTextBuffer* text, Int_t id = -1, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t option = kSunkenFrame | kDoubleBorder, Pixel_t back = GetWhitePixel()); Create a text entry widget. It will adopt the TGTextBuffer object; (i.e. the text buffer will be deleted by the text entry widget). TGTextEntry(const TGWindow* parent = 0, const char* text = 0, Int_t id = -1); Simple text entry constructor. TGTextEntry(const TString& contents, const TGWindow* parent, Int_t id = -1); Simple test entry constructor. Notice TString argument comes before the; parent argument (to make this ctor different from the first one taking a; const char*). ~TGTextEntry(); Delete a text entry widget. void Init(); Do default initialization. TGDimension GetDefaultSize() const; Return the default / minimal size of the widget. void SetDefaultSize(UInt_t w, UInt_t h); Set the default / minimal size of t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTextEntry.html:27032,Inherit,Inheritance,27032,root/html602/TGTextEntry.html,https://root.cern,https://root.cern/root/html602/TGTextEntry.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAttFillEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor of fill attributes GUI. ~TAttFillEditor(); Destructor of fill editor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Pick up the used fill attributes. void DoFillAlphaColor(ULong_t p); Slot connected to the fill area color with alpha. void DoFillColor(Pixel_t color); Slot connected to the fill area color. void DoFillPattern(Style_t color); Slot connected to the fill area pattern. void DoAlphaField(); Slot to set the alpha value from the entry field. void DoAlpha(); Slot to set the alpha value. void DoLiveAlpha(Int_t a); Slot to set alpha value online. void GetCurAlpha(); Slot to update alpha value on click on Slider. » Author: Ilka Antcheva 10/05/04 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/ged:$Id$ ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAttFillEditor.html:20162,Inherit,Inheritance,20162,root/html534/TAttFillEditor.html,https://root.cern,https://root.cern/root/html534/TAttFillEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCurlyArcEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor of CurlyArc GUI. ~TCurlyArcEditor(); Destructor of CurlyArc editor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Pick up the used curly arc attributes. void DoCenterXY(); Slot connected to set center . void DoRadius(); Slot connected to the radius setting. void DoPhimin(); Slot connected to the phimin setting. void DoPhimax(); Slot connected to the phimax setting. » Author: Ilka Antcheva, Otto Schaile 15/12/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/ged:$Id: TCurlyArcEditor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCurlyArcEditor.html:20056,Inherit,Inheritance,20056,root/html532/TCurlyArcEditor.html,https://root.cern,https://root.cern/root/html532/TCurlyArcEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveParamListEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void InitModel(TObject* obj); Initialize widgets when a new object is selected. void SetModel(TObject* obj); Set model object. void DoIntUpdate(); Slot for integer parameter update. void DoFloatUpdate(); Slot for float parameter update. void DoBoolUpdate(); Slot for bool parameter update. TEveParamList& operator=(const TEveParamListEditor& ). TEveParamListEditor(const TEveParamListEditor& ). virtual ~TEveParamListEditor(); {}. » Author: Dmytro Kovalskyi, 28.2.2008 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id: TEveParamList.h 27157 2009-01-15 14:05:12Z brun $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveParamListEditor.html:20437,Inherit,Inheritance,20437,root/html532/TEveParamListEditor.html,https://root.cern,https://root.cern/root/html532/TEveParamListEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveProjectionAxesEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoDrawOrigin(); Slot for setting draw of origin. void DoDrawCenter(); Slot for setting draw of center. void DoLabMode(Int_t type); Slot for setting tick-mark step mode. void DoAxesMode(Int_t type); Slot for setting number of axes. TEveProjectionAxesEditor(const TEveProjectionAxesEditor& ). TEveProjectionAxesEditor& operator=(const TEveProjectionAxesEditor& ). virtual ~TEveProjectionAxesEditor(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id: TEveProjectionAxesEditor.h 27341 2009-02-03 19:47:35Z matevz $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveProjectionAxesEditor.html:20075,Inherit,Inheritance,20075,root/html532/TEveProjectionAxesEditor.html,https://root.cern,https://root.cern/root/html532/TEveProjectionAxesEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrackPropagatorSubEditor(const TGWindow* p); Constructor. void CreateRefsContainer(TGVerticalFrame* p); Create a frame containing track-reference controls under parent; frame p. void SetModel(TEveTrackPropagator* m); Set model object. void Changed(); Emit ""Changed()"" signal. void DoMaxR(); Slot for MaxR. void DoMaxZ(); Slot for MaxZ. void DoMaxOrbits(); Slot for MaxOrbits. void DoMaxAng(); Slot for MaxAng. void DoDelta(); Slot for Delta. void DoFitPM(); Slot for FitPM. void DoRnrPM(); Slot for RnrPM. void DoRnrFV(); Slot for RnrFV. void DoModePTB(UChar_t mode); Slot for PTBMode. void DoRnrPTB(); Slot for RnrPTBMarkers. TEveTrackPropagatorSubEditor(const TEveTrackPropagatorSubEditor& ). TEveTrackPropagatorSubEditor& operator=(const TEveTrackPropagatorSubEditor& ). virtual ~TEveTrackPropagatorSubEditor(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:23; This page has been automatically generated. For comments or ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveTrackPropagatorSubEditor.html:19548,Inherit,Inheritance,19548,root/html534/TEveTrackPropagatorSubEditor.html,https://root.cern,https://root.cern/root/html534/TEveTrackPropagatorSubEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrackPropagatorSubEditor(const TGWindow* p); Constructor. void CreateRefsContainer(TGVerticalFrame* p); Create a frame containing track-reference controls under parent; frame p. void SetModel(TEveTrackPropagator* m); Set model object. void Changed(); Emit ""Changed()"" signal. void DoMaxR(); Slot for MaxR. void DoMaxZ(); Slot for MaxZ. void DoMaxOrbits(); Slot for MaxOrbits. void DoMaxAng(); Slot for MaxAng. void DoDelta(); Slot for Delta. void DoFitPM(); Slot for FitPM. void DoRnrPM(); Slot for RnrPM. void DoRnrFV(); Slot for RnrFV. void DoModePTB(UChar_t mode); Slot for PTBMode. void DoRnrPTB(); Slot for RnrPTBMarkers. TEveTrackPropagatorSubEditor(const TEveTrackPropagatorSubEditor& ). TEveTrackPropagatorSubEditor& operator=(const TEveTrackPropagatorSubEditor& ). virtual ~TEveTrackPropagatorSubEditor(); {}. » Last changed: root/eve:$Id: TEveTrackPropagatorEditor.h 33627 2010-05-27 19:19:58Z matevz $ » Last generated: 2011-11-03 20:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveTrackPropagatorSubEditor.html:19502,Inherit,Inheritance,19502,root/html532/TEveTrackPropagatorSubEditor.html,https://root.cern,https://root.cern/root/html532/TEveTrackPropagatorSubEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGColorPopup(const TGWindow* p = 0, const TGWindow* m = 0, Pixel_t color = 0); TGColorPopup constructor.; The TGColorPopup is a popup containing a TG16ColorSelector and a ""More...""; button which popups up a TGColorDialog allowing custom color selection. ~TGColorPopup(); TGColorPopup destructor. void EndPopup(); Ungrab pointer and unmap window. void PlacePopup(Int_t x, Int_t y, UInt_t w, UInt_t h); Popup TGColorPopup at x,y position. Bool_t HandleButton(Event_t* event); Handle mouse button events for TGColorPopup. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process messages for TGColorPopup. void PreviewColor(Pixel_t color); Emit a signal to see preview. TGColorFrame& operator=(const TGColorPopup& ). TGColorPopup(const TGColorPopup& ). » Author: Bertrand Bellenot + Fons Rademakers 22/08/02 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGColorSelect.h 23115 2008-04-10 13:35:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGColorPopup.html:19504,Inherit,Inheritance,19504,root/html532/TGColorPopup.html,https://root.cern,https://root.cern/root/html532/TGColorPopup.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGColorPopup(const TGWindow* p = 0, const TGWindow* m = 0, Pixel_t color = 0); TGColorPopup constructor.; The TGColorPopup is a popup containing a TG16ColorSelector and a ""More...""; button which popups up a TGColorDialog allowing custom color selection. ~TGColorPopup(); TGColorPopup destructor. void EndPopup(); Ungrab pointer and unmap window. void PlacePopup(Int_t x, Int_t y, UInt_t w, UInt_t h); Popup TGColorPopup at x,y position. Bool_t HandleButton(Event_t* event); Handle mouse button events for TGColorPopup. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process messages for TGColorPopup. void PreviewColor(Pixel_t color); Emit a signal to see preview. void PreviewAlphaColor(ULong_t color); Emit a signal to see preview. TGColorFrame& operator=(const TGColorPopup& ). TGColorPopup(const TGColorPopup& ). » Author: Bertrand Bellenot + Fons Rademakers 22/08/02 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGColorPopup.html:19561,Inherit,Inheritance,19561,root/html534/TGColorPopup.html,https://root.cern,https://root.cern/root/html534/TGColorPopup.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGComboBoxPopup(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kVerticalFrame, Pixel_t back = GetWhitePixel()); Create a combo box popup frame. Bool_t HandleButton(Event_t* ); Handle mouse button event in combo box popup. void EndPopup(); Ungrab pointer and unmap popup window. void PlacePopup(Int_t x, Int_t y, UInt_t w, UInt_t h); Popup combo box popup window at the specified place. void KeyPressed(TGFrame* , UInt_t , UInt_t ); Slot handling the key press events. TGComboBoxPopup(const TGComboBoxPopup& ). TGComboBoxPopup& operator=(const TGComboBoxPopup& ). void SetListBox(TGListBox* lb); { fListBox = lb; }. » Author: Fons Rademakers 13/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-13 19:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT suppo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGComboBoxPopup.html:19429,Inherit,Inheritance,19429,root/html534/TGComboBoxPopup.html,https://root.cern,https://root.cern/root/html534/TGComboBoxPopup.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGComboBoxPopup(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kVerticalFrame, Pixel_t back = GetWhitePixel()); Create a combo box popup frame. Bool_t HandleButton(Event_t* ); Handle mouse button event in combo box popup. void EndPopup(); Ungrab pointer and unmap popup window. void PlacePopup(Int_t x, Int_t y, UInt_t w, UInt_t h); Popup combo box popup window at the specified place. void KeyPressed(TGFrame* , UInt_t , UInt_t ); Slot handling the key press events. TGComboBoxPopup(const TGComboBoxPopup& ). TGComboBoxPopup& operator=(const TGComboBoxPopup& ). void SetListBox(TGListBox* lb); { fListBox = lb; }. » Author: Fons Rademakers 13/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGComboBox.h 40783 2011-08-31 17:09:16Z rdm $ » Last generated: 2011-12-02 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGComboBoxPopup.html:19410,Inherit,Inheritance,19410,root/html532/TGComboBoxPopup.html,https://root.cern,https://root.cern/root/html532/TGComboBoxPopup.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGMdiFrame(TGMdiMainFrame* main, Int_t w, Int_t h, UInt_t options = 0, Pixel_t back = GetDefaultFrameBackground()); TGMdiFrame constructor. ~TGMdiFrame(); TGMdiFrame destructor. Bool_t CloseWindow(); Close MDI frame window. void DontCallClose(); Typically call this method in the slot connected to the CloseWindow(); signal to prevent the calling of the default or any derived CloseWindow(); methods to prevent premature or double deletion of this window. void SetMdiHints(ULong_t mdihints); Set MDI hints, also used to identify titlebar buttons. void SetWindowName(const char* name); Set MDI window name (set titlebar title). void SetWindowIcon(const TGPicture* pic); Set MDI window icon (titlebar icon). const char * GetWindowName(); Return MDI window name. const TGPicture * GetWindowIcon(); Return pointer to picture used as MDI window icon (on titlebar). void Move(Int_t x, Int_t y); Move MDI window at position x, y. TString GetMdiHintsString(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGMdiFrame.html:18962,Inherit,Inheritance,18962,root/html532/TGMdiFrame.html,https://root.cern,https://root.cern/root/html532/TGMdiFrame.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGMdiMenuBar(const TGWindow* p, Int_t w = 1, Int_t h = 20); TGMdiMenuBar constructor. ~TGMdiMenuBar(); TGMdiMenuBar destructor. void AddPopup(TGHotString* s, TGPopupMenu* menu, TGLayoutHints* l); Add popup menu to the MDI menu bar with layout hints l. void AddFrames(TGMdiTitleIcon* icon, TGMdiButtons* buttons); This is called from TGMdiMainFrame on Maximize(). void RemoveFrames(TGMdiTitleIcon* icon, TGMdiButtons* buttons); This is called from TGMdiMainFrame on Restore(). void ShowFrames(TGMdiTitleIcon* icon, TGMdiButtons* buttons); This is called from TGMdiMainFrame on Maximize(). void HideFrames(TGMdiTitleIcon* icon, TGMdiButtons* buttons); Used to hide specific frames from menu bar. void SavePrimitive(ostream& out, Option_t* option = """"); Save a MDI menu as a C++ statement(s) on output stream out. TGMenuBar * GetMenuBar() const; { return fBar;}. » Author: Bertrand Bellenot 20/08/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rade",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGMdiMenuBar.html:19099,Inherit,Inheritance,19099,root/html532/TGMdiMenuBar.html,https://root.cern,https://root.cern/root/html532/TGMdiMenuBar.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TGedFrame(); Destructor of the base GUI attribute frame. void Update(); Update the current pad when an attribute is changed via GUI. Option_t * GetDrawOption() const; Get draw options of the selected object. void MakeTitle(const char* title); Create attribute frame title. void AddExtraTab(TGedFrame::TGedSubFrame* sf); Adds tab container to list of extra tabs. TGVerticalFrame* CreateEditorTabSubFrame(const char* name); Create a vertical frame to be used by 'owner' in extra tab 'name'.; The new frame is registered into the sub-frame list. void Refresh(TObject* model); Refresh the GUI info about the object attributes. void SetDrawOption(Option_t* option = """"); Set drawing option for object. This option only affects; the drawing style and is stored in the option field of the; TObjOptLink supporting a TPad's primitive list (TList). void ActivateBaseClassEditors(TClass* cl); Provide list of editors for base-classes.; In this class we return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGedFrame.html:19374,Inherit,Inheritance,19374,root/html532/TGedFrame.html,https://root.cern,https://root.cern/root/html532/TGedFrame.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ression(const TString &methodTag, Double_t aux=0)evaluates MVA for given set of input variablesDefinition Reader.cxx:565; TMVA::Reader::GetNamevirtual const char * GetName() constReturns name of object.Definition Reader.h:113; TMVA::Reader::EvaluateMVADouble_t EvaluateMVA(const std::vector< Float_t > &, const TString &methodTag, Double_t aux=0)Evaluate a std::vector<float> of input data for a given method The parameter aux is obligatory for th...Definition Reader.cxx:468; TMVA::Reader::GetRarityDouble_t GetRarity(const TString &methodTag, Double_t mvaVal=-9999999)evaluates the MVA's rarityDefinition Reader.cxx:737; TMVA::Reader::FindMVAIMethod * FindMVA(const TString &methodTag)return pointer to method with tag ""methodTag""Definition Reader.cxx:695; TMVA::Reader::Initvoid Init(void)default initialisation (no member variables)Definition Reader.cxx:292; TMVA::Reader::GetProbaDouble_t GetProba(const TString &methodTag, Double_t ap_sig=0.5, Double_t mvaVal=-9999999)evaluates probability of MVA for given set of input variablesDefinition Reader.cxx:706; TMVA::Reader::GetMethodTypeFromFileTString GetMethodTypeFromFile(const TString &filename)read the method type from the fileDefinition Reader.cxx:337; TMVA::Reader::fDataSetManagerDataSetManager * fDataSetManagerDefinition Reader.h:128; TMVA::Reader::fDataSetInfoDataSetInfo fDataSetInfoDefinition Reader.h:136; TMVA::Reader::BookMVAIMethod * BookMVA(const TString &methodTag, const TString &weightfile)read method name from weight fileDefinition Reader.cxx:368; TMVA::Reader::ReaderReader(const TString &theOption="""", Bool_t verbose=0)constructorDefinition Reader.cxx:123; TMVA::Reader::EvaluateMulticlassconst std::vector< Float_t > & EvaluateMulticlass(const TString &methodTag, Double_t aux=0)evaluates MVA for given set of input variablesDefinition Reader.cxx:630; TMVA::Reader::fDataInputHandlerDataInputHandler fDataInputHandlerDefinition Reader.h:138; TMVA::Reader::DecodeVarNamesvoid DecodeVarNames(const std::string &varNames)dec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:38845,variab,variablesDefinition,38845,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['variab'],['variablesDefinition']
Modifiability,"ression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TH1*>fEpochMonHistBepoch monitoring hitograms for background; vector<TH1*>fEpochMonHistSepoch monitoring hitograms for signal; vector<TH1*>fEpochMonHistWepoch monitoring hitograms for weights; TMVA::MethodANNBase::EEstimatorfEstimator; TH1F*fEstimatorHistTestmonitors convergence of independent test sample; TH1F*fEstimatorHistTrainmonitors convergence of training sample; TStringfEstimatorS; TMVA::TActivation*fIdentityactivation for input and output layers; TMVA::TNeuronInput*fInputCalculatorinput calculator for all neurons; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; TMatrixDfInvHessianzjh; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; Int_tfNcyclesnumber of epochs to train; TObjArray*fNetworkTObjArray of TObjArrays representing network; TStringfNeuronInputTypename of neuron input calculator class; TStringfNeuronTypename of neuron activation function class; TMVA::TActivation*fOutputactivation function to be used for output layers, depending on estimator; Int_tfRandomSeedrandom seed for initial synapse weights; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; vector<Int_t>fRegulatorIdxindex to different priors from every synapses; vector<Double_t>fRegulatorsthe priors as regulator; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class; TObjArray*fSynapsesarray of pointers to synapses, no structural data; boolfUseRegulatorzjh; TRandom3*frgenrandom number generator for various uses.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodANNBase.html:17739,layers,layers,17739,root/html534/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodANNBase.html,6,['layers'],['layers']
Modifiability,"ression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodBayesClassifier(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodBayesClassifier(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = __null); constructor from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); Variable can handle classification with 2 classes. void Init( void ); default initialisation. void DeclareOptions(); define the options (their key words) that can be set in the option string. void ProcessOptions(); the option string is decoded, for availabel options see ""DeclareOptions"". ~MethodBayesClassifier( void ); destructor. void Train( void ); some training. void AddWeightsXMLTo(void* parent) const. void ReadWeightsFromStream(istream& istr); read back the training results from a file (stream). Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns MVA value for given event. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". MethodBayesClassifier(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0). void ReadWeightsFromXML(void* ); {}. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Abhishek Narain » Copyright (c) 2005-2006: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__MethodBayesClassifier.html:18945,variab,variables,18945,root/html604/TMVA__MethodBayesClassifier.html,https://root.cern,https://root.cern/root/html604/TMVA__MethodBayesClassifier.html,2,['variab'],['variables']
Modifiability,"ression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodBayesClassifier(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodBayesClassifier(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = __null); constructor from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); Variable can handle classification with 2 classes. void Init( void ); default initialisation. void DeclareOptions(); define the options (their key words) that can be set in the option string. void ProcessOptions(); the option string is decoded, for availabel options see ""DeclareOptions"". ~MethodBayesClassifier( void ); destructor. void Train( void ); some training. void AddWeightsXMLTo(void* parent) const. void ReadWeightsFromStream(istream& istr); read back the training results from a file (stream). Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns MVA value for given event. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". MethodBayesClassifier(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0). void ReadWeightsFromXML(void* ); {}. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Abhishek Narain » Copyright (c) 2005-2006: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBayesClassifier.html:18937,variab,variables,18937,root/html602/TMVA__MethodBayesClassifier.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBayesClassifier.html,2,['variab'],['variables']
Modifiability,"rest); if (myMethodList != """") {; for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) it->second = 0;; ; std::vector<TString> mlist = gTools().SplitString( myMethodList, ',' );; for (UInt_t i=0; i<mlist.size(); i++) {; std::string regMethod(mlist[i]);; ; if (Use.find(regMethod) == Use.end()) {; std::cout << ""Method \"""" << regMethod << ""\"" not known in TMVA under this name. Choose among the following:"" << std::endl;; for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) std::cout << it->first << "" "";; std::cout << std::endl;; return;; }; Use[regMethod] = 1;; }; }; ; // --------------------------------------------------------------------------------------------------; ; // --- Create the Reader object; ; TMVA::Reader *reader = new TMVA::Reader( ""!Color:!Silent"" );; ; // Create a set of variables and declare them to the reader; // - the variable names MUST corresponds in name and type to those given in the weight file(s) used; Float_t var1, var2;; reader->AddVariable( ""var1"", &var1 );; reader->AddVariable( ""var2"", &var2 );; ; // Spectator variables declared in the training have to be added to the reader, too; Float_t spec1,spec2;; reader->AddSpectator( ""spec1:=var1*2"", &spec1 );; reader->AddSpectator( ""spec2:=var1*3"", &spec2 );; ; // --- Book the MVA methods; ; TString dir = ""datasetreg/weights/"";; TString prefix = ""TMVARegression"";; ; // Book method(s); for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) {; if (it->second) {; TString methodName = it->first + "" method"";; TString weightfile = dir + prefix + ""_"" + TString(it->first) + "".weights.xml"";; reader->BookMVA( methodName, weightfile );; }; }; ; // Book output histograms; TH1* hists[100];; Int_t nhists = -1;; for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) {; TH1* h = new TH1F( it->first.c_str(), TString(it->first) + "" method"", 100, -100, 600 );; if (it->second) hists[++nhists] = h;; }; nhists++",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegressionApplication_8C.html:4609,variab,variables,4609,doc/master/TMVARegressionApplication_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegressionApplication_8C.html,3,['variab'],"['variable', 'variables']"
Modifiability,"retText); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TFunction*GetMethod(); const char*GetMethodName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetParams() const; const char*GetProto() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInit(TFunction* func); voidInit(const char* function, const char* params); voidInit(TClass* cl, CallFunc_t* func, Long_t offset = 0); voidInit(TClass* cl, const char* method, const char* params, Bool_t objectIsConst = kFALSE); voidInitWithPrototype(const char* function, const char* proto, ROOT::EFunctionMatchMode mode = ROOT::kConversionMatch); voidInitWithPrototype(TClass* cl, const char* method, const char* proto, Bool_t objectIsConst = kFALSE, ROOT::EFunctionMatchMode mode = ROOT::kConversionMatch); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMethodCall.html:3256,Inherit,InheritsFrom,3256,root/html602/TMethodCall.html,https://root.cern,https://root.cern/root/html602/TMethodCall.html,1,['Inherit'],['InheritsFrom']
Modifiability,"retText); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TFunction*GetMethod(); const char*GetMethodName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetParams() const; const char*GetProto() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInit(const char* function, const char* params); voidInit(TClass* cl, const char* method, const char* params); voidInitWithPrototype(const char* function, const char* proto); voidInitWithPrototype(TClass* cl, const char* method, const char* proto); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMethodCall.html:3428,Inherit,InheritsFrom,3428,root/html532/TMethodCall.html,https://root.cern,https://root.cern/root/html532/TMethodCall.html,2,['Inherit'],['InheritsFrom']
Modifiability,"retation of inline assembly and exceptions; it will hopefully in the near future also support interpreting thread local storage (but doesn’t at the moment).; Thanks to the new JIT, cling also comes with debug symbols for interpreted code; you can enable them with “.debug”.; Function evaluation; Function calls through TMethodCall etc have been accelerated.; llvm / clang; llvm / clang were updated to r227800. This includes everything from the clang 3.6 release.; Dictionary Generation; Detect usage of #pragma once for inlined headers.; Turn on verbosity of genreflex if the VERBOSE environment variable is defined.; Optimise forward declarations in rootmap files in order to make their interpretation faster.; Propagate attributes specified in xml selection files to selected classes even when selected through typedefs.; Optimise selection procedure caching selected declarations in the selection rules, therewith avoiding to query the AST twice.; Include in the PCH all the STL and C headers to guarantee portability of binaries from SLC6 to CC7.; I/O Libraries; I/O New functionalities. Support for forward_list and I/O of unordered stl containers.; Support for std::complex. I/O Behavior change. The I/O now properly skip the content of base class onfile that have been removed from the in-memory class layout.; The scheduling the I/O customization rules within a StreamerInfo is now as soon as possible, i.e. after all sources have been read. One significant consequence is that now when an object is stored in a split branch the rule is associtated with the branch of the last of the rule’s sources rather than the last of the object’s data member.; Properly support TStreamerInfo written by ROOT v4.00.; Fix the ordering of the keys in a TFile being written; in particular fixing the result of GetKey and FindKey which were no longer returning the lastest cycle for a TFile being written since v5.34/11. Networking Libraries; HTTP Server; Command Interface; One can now register an arbitrary",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v604/release-notes.html:7793,portab,portability,7793,doc/v604/release-notes.html,https://root.cern,https://root.cern/doc/v604/release-notes.html,1,['portab'],['portability']
Modifiability,"return ((TStreamerInfo*)config->fInfo)->WriteBufferAux(buf, *proxy, &(config->fCompInfo), /*first*/ 0, /*last*/ 1, proxy->Size(), config->fOffset, 1|2 );; 2542 }; 2543 ; 2544 template <typename T>; 2545 static INLINE_TEMPLATE_ARGS void SimpleRead(TBuffer &buf, void *addr); 2546 {; 2547 buf >> *(T*)addr;; 2548 }; 2549 ; 2550 static INLINE_TEMPLATE_ARGS void SimpleReadFloat16(TBuffer &buf, void *addr); 2551 {; 2552 buf.ReadWithNbits((float*)addr,12);; 2553 }; 2554 ; 2555 static INLINE_TEMPLATE_ARGS void SimpleReadDouble32(TBuffer &buf, void *addr); 2556 {; 2557 //we read a float and convert it to double; 2558 Float_t afloat;; 2559 buf >> afloat;; 2560 *(double*)addr = (Double_t)afloat;; 2561 }; 2562 ; 2563 template <typename ActionHolder>; 2564 static INLINE_TEMPLATE_ARGS Int_t ReadNumericalCollection(TBuffer &buf, void *addr, const TConfiguration *conf); 2565 {; 2566 // Collection of numbers. Memberwise or not, it is all the same.; 2567 ; 2568 TConfigSTL *config = (TConfigSTL*)conf;; 2569 UInt_t start, count;; 2570 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 2571 ; 2572 TClass *newClass = config->fNewClass;; 2573 TVirtualCollectionProxy *newProxy = newClass->GetCollectionProxy();; 2574 TVirtualCollectionProxy::TPushPop helper( newProxy, ((char*)addr)+config->fOffset );; 2575 ; 2576 Int_t nvalues;; 2577 buf.ReadInt(nvalues);; 2578 void* alternative = newProxy->Allocate(nvalues,true);; 2579 if (nvalues) {; 2580 char startbuf[TVirtualCollectionProxy::fgIteratorArenaSize];; 2581 char endbuf[TVirtualCollectionProxy::fgIteratorArenaSize];; 2582 void *begin = &(startbuf[0]);; 2583 void *end = &(endbuf[0]);; 2584 config->fCreateIterators(alternative, &begin, &end, newProxy);; 2585 // We can not get here with a split vector of pointer, so we can indeed assume; 2586 // that actions->fConfiguration != null.; 2587 ; 2588 TGenericLoopConfig loopconf(newProxy, /* read */ kTRUE);; 2589 ActionHolder::Action(buf,begin,end,&loopconf,config);; 2590 ; 259",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:103955,config,config,103955,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"return 0;; 709 return fBinEntries.fArray[bin];; 710}; 711 ; 712////////////////////////////////////////////////////////////////////////////////; 713/// Return bin effective entries for a weighted filled Profile histogram.; 714///; 715/// In case of an unweighted profile, it is equivalent to the number of entries per bin; 716/// The effective entries is defined as the square of the sum of the weights divided by the; 717/// sum of the weights square.; 718/// TProfile::Sumw2() must be called before filling the profile with weights.; 719/// Only by calling this method the sum of the square of the weights per bin is stored.; 720 ; 721Double_t TProfile3D::GetBinEffectiveEntries(Int_t bin); 722{; 723 return TProfileHelper::GetBinEffectiveEntries((TProfile3D*)this, bin);; 724}; 725 ; 726////////////////////////////////////////////////////////////////////////////////; 727/// Return bin error of a Profile3D histogram.; 728///; 729/// ### Computing errors: A moving field; 730///; 731/// The computation of errors for a TProfile3D has evolved with the versions; 732/// of ROOT. The difficulty is in computing errors for bins with low statistics.; 733///; 734/// - prior to version 3.10, we had no special treatment of low statistic bins.; 735/// As a result, these bins had huge errors. The reason is that the; 736/// expression eprim2 is very close to 0 (rounding problems) or 0.; 737/// - The algorithm is modified/protected for the case; 738/// when a TProfile3D is projected (ProjectionX). The previous algorithm; 739/// generated a N^2 problem when projecting a TProfile3D with a large number of; 740/// bins (eg 100000).; 741/// - in version 3.10/02, a new static function TProfile::Approximate; 742/// is introduced to enable or disable (default) the approximation.; 743/// (see also comments in TProfile::GetBinError); 744 ; 745Double_t TProfile3D::GetBinError(Int_t bin) const; 746{; 747 return TProfileHelper::GetBinError((TProfile3D*)this, bin);; 748}; 749 ; 750/////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:25260,evolve,evolved,25260,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,1,['evolve'],['evolved']
Modifiability,"return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ;  Public Member Functions inherited from ROOT::Math::BasicMinimizer;  BasicMinimizer ();  Default constructor. ;  ;  ~BasicMinimizer () override;  Destructor. ;  ; bool FixVariable (unsigned int ivar) override;  fix an existing variable ;  ; bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &varObj) const override;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; const ROOT::Math::IMultiGradFunction * GradObjFunction () const;  return pointer to used gradient object function (NULL if gradient is not supported) ;  ; bool IsFixedVariable (unsigned int ivar) const override;  query if an existing variable is fixed (i.e. ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NDim () const override;  number of dimensions ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) ;  ; virtual unsigned int NPar () const;  total number of parameter defined ;  ; const ROOT::Math::IMultiGenFunction * ObjFunction () const;  return pointer to used objective function ;  ; void PrintResult () const;  print result of minimization ;  ; bool ReleaseVariable (unsigned int ivar) override;  release an existing variable ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; bool SetLimitedVariable ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html:2271,variab,variable,2271,doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,4,['variab'],['variable']
Modifiability,"return gOpts[algoname];; 64 return *opt;; 65 }; 66 ; 67 void GenAlgoOptions::PrintAllDefault(std::ostream & os) {; 68 const OptionsMap & gOpts = GenAlgoOptUtil::gAlgoOptions;; 69 for ( OptionsMap::const_iterator pos = gOpts.begin();; 70 pos != gOpts.end(); ++pos) {; 71 os << ""Default specific options for algorithm "" << pos->first << "" : "" << std::endl;; 72 (pos->second).Print(os);; 73 }; 74 }; 75 ; 76 } // end namespace Math; 77 ; 78} // end namespace ROOT; 79 ; GenAlgoOptions.h; ROOT::Math::GenAlgoOptionsclass implementing generic options for a numerical algorithm Just store the options in a map of strin...Definition GenAlgoOptions.h:32; ROOT::Math::GenAlgoOptions::PrintAllDefaultstatic void PrintAllDefault(std::ostream &os=std::cout)print all the default optionsDefinition GenAlgoOptions.cxx:67; ROOT::Math::GenAlgoOptions::Printvoid Print(std::ostream &os=std::cout) const overrideprint optionsDefinition GenAlgoOptions.h:114; ROOT::Math::GenAlgoOptions::Defaultstatic IOptions & Default(const char *algoname)Definition GenAlgoOptions.cxx:55; ROOT::Math::GenAlgoOptions::FindDefaultstatic IOptions * FindDefault(const char *algoname)Definition GenAlgoOptions.cxx:48; ROOT::Math::IOptionsGeneric interface for defining configuration options of a numerical algorithm.Definition IOptions.h:28; MathNamespace for new Math classes and functions.; ROOT::Math::GenAlgoOptUtil::gAlgoOptionsstatic OptionsMap gAlgoOptionsDefinition GenAlgoOptions.cxx:30; ROOT::Math::GenAlgoOptUtil::DoFindDefaultIOptions * DoFindDefault(std::string &algoname, OptionsMap &gOpts)Definition GenAlgoOptions.cxx:33; ROOT::Math::OptionsMapstd::map< std::string, ROOT::Math::GenAlgoOptions > OptionsMapDefinition GenAlgoOptions.cxx:25; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4. mathmathcoresrcGenAlgoOptions.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:41 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenAlgoOptions_8cxx_source.html:3676,config,configuration,3676,doc/master/GenAlgoOptions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/GenAlgoOptions_8cxx_source.html,1,['config'],['configuration']
Modifiability,"return integration scenario code. RooProdPdf implements two strategies in implementing analytical integrals. First, PDF components whose entire set of dependents are requested to be integrated; can be dropped from the product, as they will integrate out to 1 by construction. Second, RooProdPdf queries each remaining component PDF for its analytical integration; capability of the requested set ('allVars'). It finds the largest common set of variables; that can be integrated by all remaining components. If such a set exists, it reconfirms that; each component is capable of analytically integrating the common set, and combines the components; individual integration codes into a single integration code valid for RooProdPdf. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given scenario code. Bool_t checkObservables(const RooArgSet* nset) const; Obsolete. RooAbsPdf::ExtendMode extendMode() const; If this product contains exactly one extendable p.d.f return the extension abilities of; that p.d.f, otherwise return CanNotBeExtended. Double_t expectedEvents(const RooArgSet* nset) const; Return the expected number of events associated with the extentable input p.d.f; in the product. If there is no extendable term, return zero and issue and error. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Return generator context optimized for generating events from product p.d.f.s. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; Query internal generation capabilities of component p.d.f.s and aggregate capabilities; into master configuration passed to the generator context. void initGenerator(Int_t code); Forward one-time initialization call to component generation initialization; methods. void generateEvent(Int_t code); Generate a single e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooProdPdf.html:52840,extend,extendMode,52840,root/html528/RooProdPdf.html,https://root.cern,https://root.cern/root/html528/RooProdPdf.html,24,"['Extend', 'extend']","['ExtendMode', 'extendMode', 'extendable']"
Modifiability,"return integration scenario code. RooProdPdf implements two strategies in implementing analytical integrals. First, PDF components whose entire set of dependents are requested to be integrated; can be dropped from the product, as they will integrate out to 1 by construction. Second, RooProdPdf queries each remaining component PDF for its analytical integration; capability of the requested set ('allVars'). It finds the largest common set of variables; that can be integrated by all remaining components. If such a set exists, it reconfirms that; each component is capable of analytically integrating the common set, and combines the components; individual integration codes into a single integration code valid for RooProdPdf. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given scenario code. Bool_t checkObservables(const RooArgSet* nset) const; Obsolete. RooAbsPdf::ExtendMode extendMode() const; If this product contains exactly one extendable p.d.f return the extension abilities of; that p.d.f, otherwise return CanNotBeExtended. Double_t expectedEvents(const RooArgSet* nset); Return the expected number of events associated with the extentable input p.d.f; in the product. If there is no extendable term, return zero and issue and error. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Return generator context optimized for generating events from product p.d.f.s. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; Query internal generation capabilities of component p.d.f.s and aggregate capabilities; into master configuration passed to the generator context. void initGenerator(Int_t code); Forward one-time initialization call to component generation initialization; methods. void generateEvent(Int_t code); Generate a single event w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooProdPdf.html:50791,extend,extendMode,50791,root/html526/RooProdPdf.html,https://root.cern,https://root.cern/root/html526/RooProdPdf.html,2,['extend'],"['extendMode', 'extendable']"
Modifiability,"return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. vector<Double_t>fBestParsthe pars that optimise (minimise) the estimator; TStringfConvergerfitmethod uses fConverger as intermediate step to converge into local minimas; TMVA::IFitterTarget*fConvergerFitterintermediate fitter; TStringfFitMethodestimator optimisation method; TMVA::FitterBase*fFitterthe fitter used in the training; TFormula*fFormulathe discrimination function; TStringfFormulaStringPstring with function; TStringfFormulaStringTstring with function; UInt_tfNParsnumber of parameters; Int_tfOutputDimensionsnumber of output values; vector<TMVA::Interval*>fParRangeranges of parameters; TStringfParRangeStringPstring with ranges of parameters; TStringfParRangeStringTstring with ranges of parameters; Double_tfSumOfWeightssum of weights; Double_tfSumOfWeightsBkgsum of weights (background); Double_tfSumOfWeightsSigsum of weights (signal). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodFDA(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodFDA(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = __null); constructor from weight file. void Init( void ); default initialisation. void DeclareOptions(); define the options (their key words) that can be set in the option string. format of function string:; ""x0*(0)+((1)/x1)**(2)...""; where ""[i]"" are the parameters, and ""xi"" the input variables. format of parameter string:; ""(-1.2,3.4);(-2.3,4.55);...""; where the numbers in ""(a,b)"" correspond to the a=min, b=max parameter ranges;; each parameter defined in the function string must have a corresponding range. void CreateFormula(); translate formula string into TFormula, and parameter string into par ranges. void ProcessOptions(); the option string is decoded, for availabel",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodFDA.html:18928,Inherit,Inheritance,18928,root/html602/TMVA__MethodFDA.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodFDA.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"return:; -1 in case of failure; 0 in case we did not find $Alt; the action number in case of success. . Definition at line 657 of file TTreeFormula.cxx. ◆ DefineDimensions(). void TTreeFormula::DefineDimensions ; (; Int_t ; code, . Int_t ; size, . TFormLeafInfoMultiVarDim * ; info, . Int_t & ; virt_dim . ). protected . This method is used internally to decode the dimensions of the variables. ; Definition at line 356 of file TTreeFormula.cxx. ◆ DefinedVariable(). Int_t TTreeFormula::DefinedVariable ; (; TString & ; name, . Int_t & ; action . ). overridevirtual . Check if name is in the list of Tree/Branch leaves. ; This member function redefines the function in ROOT::v5::TFormula If a leaf has a name corresponding to the argument name, then returns a new code.; A TTreeFormula may contain more than one variable. For each variable referenced, the pointers to the corresponding branch and leaf is stored in the object arrays fBranches and fLeaves.; name can be :; Leaf_Name (simple variable or data member of a ClonesArray); Branch_Name.Leaf_Name; Branch_Name.Method_Name; Leaf_Name[index]; Branch_Name.Leaf_Name[index]; Branch_Name.Leaf_Name[index1]; Branch_Name.Leaf_Name[][index2]; Branch_Name.Leaf_Name[index1][index2]. New additions:; Branch_Name.Leaf_Name[OtherLeaf_Name]; Branch_Name.Datamember_Name; '.' can be replaced by '->'; and. Branch_Name[index1].Leaf_Name[index2]; Leaf_name[index].Action().OtherAction(param); Leaf_name[index].Action()[val].OtherAction(param). The expected returned values are; -2 : the name has been recognized but won't be usable; -1 : the name has not been recognized, or is too long, or tree does not exist.; >=0 : the name has been recognized, return the internal code for this name. . Reimplemented from ROOT::v5::TFormula.; Definition at line 2698 of file TTreeFormula.cxx. ◆ EvalClass() [1/2]. TClass * TTreeFormula::EvalClass ; (; ); const. virtual . Evaluate the class of this treeformula. ; If the 'value' of this formula is a simple pointer to an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:35766,variab,variable,35766,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,1,['variab'],['variable']
Modifiability,"return;; 14548 }; 14549 ; 14550 /* 15. Files with search/replace patterns: LSP and SSI */; 14551 if (is_template_text_file) {; 14552 HTTP1_only;; 14553 handle_file_based_request(conn, path, &file);; 14554 return;; 14555 }; 14556 ; 14557 /* 16. Static file - maybe cached */; 14558#if !defined(NO_CACHING); 14559 if ((!conn->in_error_handler) && is_not_modified(conn, &file.stat)) {; 14560 /* Send 304 ""Not Modified"" - this must not send any body data */; 14561 handle_not_modified_static_file_request(conn, &file);; 14562 return;; 14563 }; 14564#endif /* !NO_CACHING */; 14565 ; 14566 /* 17. Static file - not cached */; 14567 handle_static_file_request(conn, path, &file, NULL, NULL);; 14568 ; 14569#endif /* !defined(NO_FILES) */; 14570}; 14571 ; 14572 ; 14573#if !defined(NO_FILESYSTEMS); 14574static void; 14575handle_file_based_request(struct mg_connection *conn,; 14576 const char *path,; 14577 struct mg_file *file); 14578{; 14579#if !defined(NO_CGI); 14580 unsigned char cgi_config_idx, inc, max;; 14581#endif; 14582 ; 14583 if (!conn || !conn->dom_ctx) {; 14584 return;; 14585 }; 14586 ; 14587#if defined(USE_LUA); 14588 if (match_prefix_strlen(conn->dom_ctx->config[LUA_SERVER_PAGE_EXTENSIONS],; 14589 path); 14590 > 0) {; 14591 if (is_in_script_path(conn, path)) {; 14592 /* Lua server page: an SSI like page containing mostly plain; 14593 * html code plus some tags with server generated contents. */; 14594 handle_lsp_request(conn, path, file, NULL);; 14595 } else {; 14596 /* Script was in an illegal path */; 14597 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14598 }; 14599 return;; 14600 }; 14601 ; 14602 if (match_prefix_strlen(conn->dom_ctx->config[LUA_SCRIPT_EXTENSIONS], path); 14603 > 0) {; 14604 if (is_in_script_path(conn, path)) {; 14605 /* Lua in-server module script: a CGI like script used to; 14606 * generate the entire reply. */; 14607 mg_exec_lua_script(conn, path, NULL);; 14608 } else {; 14609 /* Script was in an illegal path */; 14610 mg_send_http_error(conn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:429793,config,config,429793,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"return;; 14549 }; 14550 ; 14551 /* 15. Files with search/replace patterns: LSP and SSI */; 14552 if (is_template_text_file) {; 14553 HTTP1_only;; 14554 handle_file_based_request(conn, path, &file);; 14555 return;; 14556 }; 14557 ; 14558 /* 16. Static file - maybe cached */; 14559#if !defined(NO_CACHING); 14560 if ((!conn->in_error_handler) && is_not_modified(conn, &file.stat)) {; 14561 /* Send 304 ""Not Modified"" - this must not send any body data */; 14562 handle_not_modified_static_file_request(conn, &file);; 14563 return;; 14564 }; 14565#endif /* !NO_CACHING */; 14566 ; 14567 /* 17. Static file - not cached */; 14568 handle_static_file_request(conn, path, &file, NULL, NULL);; 14569 ; 14570#endif /* !defined(NO_FILES) */; 14571}; 14572 ; 14573 ; 14574#if !defined(NO_FILESYSTEMS); 14575static void; 14576handle_file_based_request(struct mg_connection *conn,; 14577 const char *path,; 14578 struct mg_file *file); 14579{; 14580#if !defined(NO_CGI); 14581 unsigned char cgi_config_idx, inc, max;; 14582#endif; 14583 ; 14584 if (!conn || !conn->dom_ctx) {; 14585 return;; 14586 }; 14587 ; 14588#if defined(USE_LUA); 14589 if (match_prefix_strlen(conn->dom_ctx->config[LUA_SERVER_PAGE_EXTENSIONS],; 14590 path); 14591 > 0) {; 14592 if (is_in_script_path(conn, path)) {; 14593 /* Lua server page: an SSI like page containing mostly plain; 14594 * html code plus some tags with server generated contents. */; 14595 handle_lsp_request(conn, path, file, NULL);; 14596 } else {; 14597 /* Script was in an illegal path */; 14598 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14599 }; 14600 return;; 14601 }; 14602 ; 14603 if (match_prefix_strlen(conn->dom_ctx->config[LUA_SCRIPT_EXTENSIONS], path); 14604 > 0) {; 14605 if (is_in_script_path(conn, path)) {; 14606 /* Lua in-server module script: a CGI like script used to; 14607 * generate the entire reply. */; 14608 mg_exec_lua_script(conn, path, NULL);; 14609 } else {; 14610 /* Script was in an illegal path */; 14611 mg_send_http_error(conn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:429826,config,config,429826,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"returned. UserGroup_t * GetUserInfo(const char* user = 0); Returns all user info in the UserGroup_t structure. If user = 0, returns; current user's id info. The returned structure must be deleted by the; user. In case of error 0 is returned. UserGroup_t * GetGroupInfo(Int_t gid); Returns all group info in the UserGroup_t structure. The only active; fields in the UserGroup_t structure for this call are:; fGid and fGroup; The returned structure must be deleted by the user. In case of; error 0 is returned. UserGroup_t * GetGroupInfo(const char* group = 0); Returns all group info in the UserGroup_t structure. The only active; fields in the UserGroup_t structure for this call are:; fGid and fGroup; If group = 0, returns current user's group. The returned structure; must be deleted by the user. In case of error 0 is returned. void Setenv(const char* name, const char* value); Set environment variable. void Unsetenv(const char* name); Unset environment variable. const char * Getenv(const char* env); Get environment variable. void Openlog(const char* name, Int_t options, ELogFacility facility); Open connection to system log daemon. For the use of the options and; facility see the Unix openlog man page. void Syslog(ELogLevel level, const char* mess); Send mess to syslog daemon. Level is the logging level and mess the; message that will be written on the log. void Closelog(); Close connection to system log daemon. Int_t RedirectOutput(const char* name, const char* mode = ""a"", RedirectHandle_t* h = 0); Redirect standard output (stdout, stderr) to the specified file.; If the file argument is 0 the output is set again to stderr, stdout.; The second argument specifies whether the output should be added to the; file (""a"", default) or the file be truncated before (""w"").; The implementations of this function save internally the current state into; a static structure.; The call can be made reentrant by specifying the opaque structure pointed; by 'h', which is filled with the relevant ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSystem.html:31412,variab,variable,31412,root/html528/TSystem.html,https://root.cern,https://root.cern/root/html528/TSystem.html,10,['variab'],['variable']
Modifiability,"returning an optional hint for initial sampling points when constructing a curve projected on observable obs. ;  ; virtual void preferredObservableScanOrder (const RooArgSet &obs, RooArgSet &orderedObs) const;  Interface method for function objects to indicate their preferred order of observables for scanning their values into a (multi-dimensional) histogram or RooDataSet. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; bool readFromStream (std::istream &is, bool compact, bool verbose=false) override;  Read object contents from stream (dummy for now) ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void writeToStream (std::ostream &os, bool compact) const override;  Write object contents to stream (dummy for now) ;  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an objec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussModel.html:29278,config,config,29278,doc/master/classRooGaussModel.html,https://root.cern,https://root.cern/doc/master/classRooGaussModel.html,15,['config'],"['config', 'configuration']"
Modifiability,"returns the Parse Error Code, see TXMLParser. ;  ; virtual Int_t OnFatalError (const char *text);  Emit a signal for OnFactalError, where text is the error and it returns the Parse Error Code, see TXMLParser. ;  ; virtual void OnStartDocument ();  Emit a signal for OnStartDocument. ;  ; virtual void OnStartElement (const char *name, const TList *attr);  Emit a signal for OnStarElement, where name is the Element's name and attribute is a TList of (TObjString*, TObjString *) TPair's. ;  ; virtual void OnWarning (const char *text);  Emit a signal for OnWarning, where text is the warning. ;  ; Int_t ParseBuffer (const char *contents, Int_t len) override;  It parse the contents, instead of a file. ;  ; Int_t ParseFile (const char *filename) override;  It creates the parse context of the xml file, where the xml file name is filename. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TXMLParser;  TXMLParser ();  Initializes parser variables. ;  ;  ~TXMLParser () override;  Cleanup. ;  ; Int_t GetParseCode () const;  ; const char * GetParseCodeMessage (Int_t parseCode) const;  Returns the parse code message. ;  ; Bool_t GetReplaceEntities () const;  ; Bool_t GetStopOnError () const;  ; Bool_t GetValidate () const;  ; const char * GetValidateError () const;  ; const char * GetValidateWarning () const;  ; TClass * IsA () const override;  ; void SetReplaceEntities (Bool_t val=kTRUE);  The parser will replace/expand entities. ;  ; void SetStopOnError (Bool_t stop=kTRUE);  Set parser stops in case of error: ;  ; void SetValidate (Bool_t val=kTRUE);  The parser will validate the xml file if val = true. ;  ; virtual void StopParser ();  Stops parsing. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSAXParser.html:2778,inherit,inherited,2778,doc/master/classTSAXParser.html,https://root.cern,https://root.cern/doc/master/classTSAXParser.html,2,"['inherit', 'variab']","['inherited', 'variables']"
Modifiability,rf316_llratioplot.py;   Multidimensional models: using the likelihood ratio technique to construct a signal enhanced one-dimensional projection of a multi-dimensional pdf ;  ; file  rf401_importttreethx.C;   Data and categories: advanced options for importing data from ROOT TTree and THx histograms ;  ; file  rf401_importttreethx.py;   'DATA AND CATEGORIES' RooFit tutorial macro #401 ;  ; file  rf402_datahandling.C;   Data and categories: tools for manipulation of (un)binned datasets ;  ; file  rf402_datahandling.py;   Data and categories: tools for manipulation of (un)binned datasets ;  ; file  rf403_weightedevts.C;   Data and categories: using weights in unbinned datasets ;  ; file  rf403_weightedevts.py;   'DATA AND CATEGORIES' RooFit tutorial macro #403 ;  ; file  rf404_categories.C;   Data and categories: working with RooCategory objects to describe discrete variables ;  ; file  rf404_categories.py;   Data and categories: working with ROOT.RooCategory objects to describe discrete variables ;  ; file  rf405_realtocatfuncs.C;   Data and categories: demonstration of real-->discrete mapping functions ;  ; file  rf405_realtocatfuncs.py;   Data and categories: demonstration of real-discrete mapping functions ;  ; file  rf406_cattocatfuncs.C;   Data and categories: demonstration of discrete-->discrete (invertible) functions ;  ; file  rf406_cattocatfuncs.py;   Data and categories: demonstration of discrete-discrete (invertable) functions ;  ; file  rf407_latextables.C;   Data and categories: latex printing of lists and sets of RooArgSets ;  ; file  rf407_latextables.py;   Data and categories: latex printing of lists and sets of RooArgSets ;  ; file  rf408_RDataFrameToRooFit.C;   Fill RooDataSet/RooDataHist in RDataFrame. ;  ; file  rf408_RDataFrameToRooFit.py;   Fill RooDataSet/RooDataHist in RDataFrame. ;  ; file  rf409_NumPyPandasToRooFit.py;   Convert between NumPy arrays or Pandas DataFrames and RooDataSets. ;  ; file  rf501_simultaneouspdf.C;   Organisation and si,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__roofit.html:11045,variab,variables,11045,doc/master/group__tutorial__roofit.html,https://root.cern,https://root.cern/doc/master/group__tutorial__roofit.html,1,['variab'],['variables']
Modifiability,"rface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; Int_t getGenerator (const RooArgSet &directVars, RooArgSet &generateVars, bool staticInitOK=true) const override;  Load generatedVars with the subset of directVars that we can generate events for, and return a code that specifies the generator algorithm we will use. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooResolutionModel;  RooResolutionModel ()=default;  ;  RooResolutionModel (const char *name, const char *title, RooAbsRealLValue &x);  Constructor with convolution variable 'x'. ;  ;  RooResolutionModel (const RooResolutionModel &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooResolutionModel () override;  Destructor. ;  ; const RooFormulaVar & basis () const;  ; const RooRealVar & basisConvVar () const;  Return the convolution variable of the selection basis function. ;  ; virtual void changeBasis (RooFormulaVar *basis);  Change the basis function we convolute with. ;  ; virtual RooResolutionModel * convolution (RooFormulaVar *basis, RooAbsArg *owner) const;  Instantiate a clone of this resolution model representing a convolution with given basis function. ;  ; RooAbsRealLValue & convVar () const;  Return the convolution variable of the resolution model. ;  ; double getNorm (const RooArgSet *nset=nullptr) const override;  Return the integral of this PDF over all elements of 'nset'. ;  ; double getValV (const RooArgSet *nset=nullptr) const override;  Modified version of RooAbsPdf::getValF(). ;  ; TClass * IsA () const override;  ; bool isBasisSupported (const char *name) const;  ; bool isConvolved () const;  ; virtual RooAbsGenContext * modelGenContext (const RooAbsAnaConvPdf &, const RooArgSet &, const RooDataSet *, const RooArgSet *, bool) const;  ; virtual void normLeafS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussModel.html:3001,variab,variable,3001,doc/master/classRooGaussModel.html,https://root.cern,https://root.cern/doc/master/classRooGaussModel.html,2,['variab'],['variable']
Modifiability,"rface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooWorkspace * _wspace;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class RooWorkspace;  . Additional Inherited Members;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace_1_1WSDir.html:21664,inherit,inherited,21664,doc/master/classRooWorkspace_1_1WSDir.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace_1_1WSDir.html,1,['inherit'],['inherited']
Modifiability,"rface; 3806// to be able to tell which component is in the pch and which needs extra; 3807// scaffolding for interactive use. Moreover, some of the ROOT components are; 3808// partially in the pch and this option makes it impossible to express that.; 3809// We should be able to get the list of headers in the pch early and scan; 3810// through them.; 3811static llvm::cl::opt<bool>; 3812gOptWriteEmptyRootPCM(""writeEmptyRootPCM"",; 3813 llvm::cl::Hidden,; 3814 llvm::cl::desc(""Does not include the header files as it assumes they exist in the pch.""),; 3815 llvm::cl::cat(gRootclingOptions));; 3816static llvm::cl::opt<bool>; 3817gOptCheckSelectionSyntax(""selSyntaxOnly"",; 3818 llvm::cl::desc(""Check the selection syntax only.""),; 3819 llvm::cl::cat(gRootclingOptions));; 3820static llvm::cl::opt<bool>; 3821gOptFailOnWarnings(""failOnWarnings"",; 3822 llvm::cl::desc(""Fail if there are warnings.""),; 3823 llvm::cl::cat(gRootclingOptions));; 3824static llvm::cl::opt<bool>; 3825gOptNoIncludePaths(""noIncludePaths"",; 3826 llvm::cl::desc(""Do not store include paths but rely on the env variable ROOT_INCLUDE_PATH.""),; 3827 llvm::cl::cat(gRootclingOptions));; 3828static llvm::cl::opt<std::string>; 3829gOptISysRoot(""isysroot"", llvm::cl::Prefix, llvm::cl::Hidden,; 3830 llvm::cl::desc(""Specify an isysroot.""),; 3831 llvm::cl::cat(gRootclingOptions),; 3832 llvm::cl::init(""-""));; 3833static llvm::cl::list<std::string>; 3834gOptIncludePaths(""I"", llvm::cl::Prefix, llvm::cl::ZeroOrMore,; 3835 llvm::cl::desc(""Specify an include path.""),; 3836 llvm::cl::cat(gRootclingOptions));; 3837static llvm::cl::list<std::string>; 3838gOptCompDefaultIncludePaths(""compilerI"", llvm::cl::Prefix, llvm::cl::ZeroOrMore,; 3839 llvm::cl::desc(""Specify a compiler default include path, to suppress unneeded `-isystem` arguments.""),; 3840 llvm::cl::cat(gRootclingOptions));; 3841static llvm::cl::list<std::string>; 3842gOptSysIncludePaths(""isystem"", llvm::cl::ZeroOrMore,; 3843 llvm::cl::desc(""Specify a system include path.""),; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:153910,variab,variable,153910,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['variab'],['variable']
Modifiability,"rflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. map<unsigned int,std::pair<double,double> >fBoundsmap specifying the bound using as key the parameter index; vector<double>fCovMatrixcov matrix (stored as cov[ i * dim + j] ; unsigned intfDimdimension of the function to be minimized ; doublefEdmedm value; vector<double>fErrors; ROOT::Math::GSLMultiFit*fGSLMultiFitpointer to GSL multi fit solver ; doublefLSToleranceLine Search Tolerance; doublefMinValminimum function value; unsigned intfNFreedimension of the internal function to be minimized ; vector<std::string>fNames; const ROOT::Math::FitMethodFunction*fObjFuncpointer to Least square function; vector<LSResidualFunc>fResiduals! transient Vector of the residual functions; unsigned intfSizenumber of fit points (residuals); vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; operator=(const ROOT::Math::GSLNLSMinimizer& rhs). unsigned int NDim() const; { return fChi2->NDim(); }. GSLNLSMinimizer(int type = 0). Default constructor. ~GSLNLSMinimizer(). Destructor (no operations). GSLNLSMinimizer(const ROOT::Math::GSLNLSMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limited variable. bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limited variable. bool SetLimitedVariable(unsigned int ivar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLNLSMinimizer.html:5826,Inherit,Inheritance,5826,root/html532/ROOT__Math__GSLNLSMinimizer.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLNLSMinimizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rformed when the return object is evaluated. The name; of the integral object is automatically constructed from the name of the input function, the variables; it integrates and the range integrates over. The following named arguments are accepted. NormSet(const RooArgSet&) -- Specify normalization set, mostly useful when working with PDFS; NumIntConfig(const RooNumIntConfig&) -- Use given configuration for any numeric integration, if necessary; Range(const char* name) -- Integrate only over given range. Multiple ranges may be specified; by passing multiple Range() arguments. RooAbsReal* createIntegral(const RooArgSet& iset, const RooArgSet* nset = 0, const RooNumIntConfig* cfg = 0, const char* rangeName = 0) const; Create an object that represents the integral of the function over one or more observables listed in iset; The actual integration calculation is only performed when the return object is evaluated. The name; of the integral object is automatically constructed from the name of the input function, the variables; it integrates and the range integrates over. If nset is specified the integrand is request; to be normalized over nset (only meaningful when the integrand is a pdf). If rangename is specified; the integral is performed over the named range, otherwise it is performed over the domain of each; integrated observable. If cfg is specified it will be used to configure any numeric integration; aspect of the integral. It will not force the integral to be performed numerically, which is; decided automatically by RooRealIntegral. RooAbsReal* createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; Utility function for createIntegral that creates the actual integreal object. void findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; Utility function for createIntObj() that aids in the construct of recursive integrals; over functions with multiple observables",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsReal.html:36734,variab,variables,36734,root/html528/RooAbsReal.html,https://root.cern,https://root.cern/root/html528/RooAbsReal.html,9,['variab'],['variables']
Modifiability,"rformed. If the dataset; is binned, a binned maximum likelihood is performed. By default the fit is executed through the MINUIT; commands MIGRAD, HESSE and MINOS in succession. See RooAbsPdf::fitTo(RooAbsData& data, RooCmdArg arg1, RooCmdArg arg2, RooCmdArg arg3, RooCmdArg arg4,; RooCmdArg arg5, RooCmdArg arg6, RooCmdArg arg7, RooCmdArg arg8). for documentation of options. RooFitResult* chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); Internal back-end function to steer chi2 fits. RooAbsReal* createChi2(RooDataHist& data, RooCmdArg arg1 = RooCmdArg::none(), RooCmdArg arg2 = RooCmdArg::none(), RooCmdArg arg3 = RooCmdArg::none(), RooCmdArg arg4 = RooCmdArg::none(), RooCmdArg arg5 = RooCmdArg::none(), RooCmdArg arg6 = RooCmdArg::none(), RooCmdArg arg7 = RooCmdArg::none(), RooCmdArg arg8 = RooCmdArg::none()); Create a chi-2 from a histogram and this function. The following named arguments are supported. Options to control construction of the chi^2. Extended() -- Use expected number of events of an extended p.d.f as normalization; DataError() -- Choose between Poisson errors and Sum-of-weights errors; NumCPU() -- Activate parallel processing feature; Range() -- Fit only selected region; SumCoefRange() -- Set the range in which to interpret the coefficients of RooAddPdf components; SplitRange() -- Fit range is split by index catory of simultaneous PDF; ConditionalObservables() -- Define projected observables. RooAbsReal* createChi2(RooDataSet& data, const RooLinkedList& cmdList); Internal back-end function to create a chi^2 from a p.d.f. and a dataset. void printValue(ostream& os) const; Print value of p.d.f, also print normalization integral that was last used, if any. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print multi line detailed information of this RooAbsPdf. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFAL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:54311,extend,extended,54311,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,1,['extend'],['extended']
Modifiability,"rfulOutput=kTRUE);  constructor ;  ;  Timer (Int_t ncounts, const char *prefix="""", Bool_t colourfulOutput=kTRUE);  standard constructor: ncounts gives the total number of counts that the loop will iterate through. ;  ; virtual ~Timer (void);  destructor ;  ; void DrawProgressBar (Int_t, const TString &comment="""");  draws progress bar in color or B&W caution: ;  ; void DrawProgressBar (TString);  draws a string in the progress bar ;  ; void DrawProgressBar (void);  draws the progressbar ;  ; Double_t ElapsedSeconds (void);  computes elapsed tim in seconds ;  ; TString GetElapsedTime (Bool_t Scientific=kTRUE);  returns pretty string with elapsed time ;  ; TString GetLeftTime (Int_t icounts);  returns pretty string with time left ;  ; void Init (Int_t ncounts);  ; virtual TClass * IsA () const;  ; void Reset (void);  resets timer ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStopwatch;  TStopwatch ();  Create a stopwatch and start it. ;  ; void Continue ();  Resume a stopped stopwatch. ;  ; Int_t Counter () const;  ; Double_t CpuTime ();  Stop the stopwatch (if it is running) and return the cputime (in seconds) passed between the start and stop events. ;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print the real and cpu time passed between the start and stop events. ;  ; Double_t RealTime ();  Stop the stopwatch (if it is running) and return the realtime (in seconds) passed between the start and stop events. ;  ; void Reset ();  ; void ResetCpuTime (Double_t time=0);  ; void ResetRealTime (Double_t time=0);  ; void Start (Bool_t reset=kTRUE);  Start the stopwatch. ;  ; void Stop ();  Stop the stopwatch. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Timer.html:2599,inherit,inherited,2599,doc/master/classTMVA_1_1Timer.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Timer.html,1,['inherit'],['inherited']
Modifiability,"rg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChebychev.html:70135,inherit,inherited,70135,doc/master/classRooChebychev.html,https://root.cern,https://root.cern/doc/master/classRooChebychev.html,9,['inherit'],['inherited']
Modifiability,"rg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooPlot*plotOn(RooPlot* frame, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual RooPlot*plotOn(RooPlot* frame, Option_t* drawOptions, Double_t scaleFactor = 1.0, RooAbsReal::ScaleType stype = Relative, const RooAbsData* projData = 0, const RooArgSet* projSet = 0, Double_t precision = 1e-3, Bool_t shiftToZero = kFALSE, const RooArgSet* projDataSet = 0, Double_t rangeLo = 0, Double_t rangeHi = 0, RooCurve::WingMode wmode = RooCurve::Extended) const; virtual list<Double_t>*RooAbsReal::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L"", Double_t scaleFactor = 1.0, RooAbsReal::ScaleType stype = Relative, const RooAbsData* projData = 0) const; virtual voidTObject::Pop(); virtual voidRooAbsReal::preferredObservableScanOrder(const RooArgSet& obs, RooArgSet& orderedObs) const; RooAbsPdf::GenSpec*RooAbsPdf::prepareMultiGen(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsArg::Print(Option_t* options = 0) const; virtual voidRooAbsArg::printAddress(ostream& os) const; virtual voidRooAbsArg::printArgs(ostream& os) const; virtual voidRooAbsArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSimultaneous.html:24813,Extend,Extended,24813,root/html532/RooSimultaneous.html,https://root.cern,https://root.cern/root/html532/RooSimultaneous.html,1,['Extend'],['Extended']
Modifiability,"rg.; Definition at line 558 of file RooAbsReal.h. ◆ setData(). virtual bool RooAbsReal::setData ; (; RooAbsData & ; , . bool ; = true . ). inlinevirtual . Reimplemented in ProgressMonitor, RooAddition, RooConstraintSum, and RooAbsTestStatistic.; Definition at line 367 of file RooAbsReal.h. ◆ setEvalErrorLoggingMode(). void RooAbsReal::setEvalErrorLoggingMode ; (; RooAbsReal::ErrorLoggingMode ; m). static . Set evaluation error logging mode. ; Options are; PrintErrors - Print each error through RooMsgService() as it occurs CollectErrors - Accumulate errors, but do not print them. A subsequent call to printEvalErrors() will print a summary CountErrors - Accumulate error count, but do not print them. ; Definition at line 4316 of file RooAbsReal.cxx. ◆ setHideOffset(). void RooAbsReal::setHideOffset ; (; bool ; flag). static . Definition at line 191 of file RooAbsReal.cxx. ◆ setIntegratorConfig() [1/2]. void RooAbsReal::setIntegratorConfig ; (; ). Remove the specialized numeric integration configuration associated with this object. ; Definition at line 3346 of file RooAbsReal.cxx. ◆ setIntegratorConfig() [2/2]. void RooAbsReal::setIntegratorConfig ; (; const RooNumIntConfig & ; config). Set the given integrator configuration as default numeric integration configuration for this object. ; Definition at line 3335 of file RooAbsReal.cxx. ◆ setParameterizeIntegral(). void RooAbsReal::setParameterizeIntegral ; (; const RooArgSet & ; paramVars). Definition at line 4324 of file RooAbsReal.cxx. ◆ setPlotLabel(). void RooAbsReal::setPlotLabel ; (; const char * ; label). Set the label associated with this variable. ; Definition at line 416 of file RooAbsReal.cxx. ◆ setTreeBranchStatus(). void RooAbsReal::setTreeBranchStatus ; (; TTree & ; t, . bool ; active . ). overrideprotectedvirtual . (De)Activate associated tree branch ; Implements RooAbsArg.; Definition at line 3116 of file RooAbsReal.cxx. ◆ setUnit(). void RooAbsReal::setUnit ; (; const char * ; unit). inline . Definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:146140,config,configuration,146140,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"rg.; Definition at line 568 of file RooAbsReal.h. ◆ setData(). virtual bool RooAbsReal::setData ; (; RooAbsData & ; , . bool ; = true . ). inlinevirtual . Reimplemented in ProgressMonitor, RooAbsTestStatistic, RooAddition, and RooConstraintSum.; Definition at line 374 of file RooAbsReal.h. ◆ setEvalErrorLoggingMode(). void RooAbsReal::setEvalErrorLoggingMode ; (; RooAbsReal::ErrorLoggingMode ; m). static . Set evaluation error logging mode. ; Options are; PrintErrors - Print each error through RooMsgService() as it occurs CollectErrors - Accumulate errors, but do not print them. A subsequent call to printEvalErrors() will print a summary CountErrors - Accumulate error count, but do not print them. ; Definition at line 4392 of file RooAbsReal.cxx. ◆ setHideOffset(). void RooAbsReal::setHideOffset ; (; bool ; flag). static . Definition at line 168 of file RooAbsReal.cxx. ◆ setIntegratorConfig() [1/2]. void RooAbsReal::setIntegratorConfig ; (; ). Remove the specialized numeric integration configuration associated with this object. ; Definition at line 3428 of file RooAbsReal.cxx. ◆ setIntegratorConfig() [2/2]. void RooAbsReal::setIntegratorConfig ; (; const RooNumIntConfig & ; config). Set the given integrator configuration as default numeric integration configuration for this object. ; Definition at line 3417 of file RooAbsReal.cxx. ◆ setParameterizeIntegral(). void RooAbsReal::setParameterizeIntegral ; (; const RooArgSet & ; paramVars). Definition at line 4400 of file RooAbsReal.cxx. ◆ setPlotLabel(). void RooAbsReal::setPlotLabel ; (; const char * ; label). Set the label associated with this variable. ; Definition at line 414 of file RooAbsReal.cxx. ◆ setTreeBranchStatus(). void RooAbsReal::setTreeBranchStatus ; (; TTree & ; t, . bool ; active . ). overrideprotectedvirtual . (De)Activate associated tree branch ; Implements RooAbsArg.; Definition at line 3198 of file RooAbsReal.cxx. ◆ setUnit(). void RooAbsReal::setUnit ; (; const char * ; unit). inline . Definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:147977,config,configuration,147977,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"rg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:16169,config,configuration,16169,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['config'],['configuration']
Modifiability,"rg6 = RooCmdArg(), RooCmdArg arg7 = RooCmdArg(), RooCmdArg arg8 = RooCmdArg()); Create a reduced copy of this dataset. The caller takes ownership of the returned dataset. The following optional named arguments are accepted. SelectVars(const RooArgSet& vars) -- Only retain the listed observables in the output dataset; Cut(const char* expression) -- Only retain event surviving the given cut expression; Cut(const RooFormulaVar& expr) -- Only retain event surviving the given cut formula; CutRange(const char* name) -- Only retain events inside range with given name. Multiple CutRange; arguments may be given to select multiple ranges; EventRange(int lo, int hi) -- Only retain events with given sequential event numbers; Name(const char* name) -- Give specified name to output dataset; Title(const char* name) -- Give specified title to output dataset. RooAbsData* reduce(const char* cut); Create a subset of the data set by applying the given cut on the data points.; The cut expression can refer to any variable in the data set. For cuts involving; other variables, such as intermediate formula objects, use the equivalent; reduce method specifying the as a RooFormulVar reference. RooAbsData* reduce(const RooFormulaVar& cutVar); Create a subset of the data set by applying the given cut on the data points.; The 'cutVar' formula variable is used to select the subset of data points to be; retained in the reduced data collection. RooAbsData* reduce(const RooArgSet& varSubset, const char* cut); Create a subset of the data set by applying the given cut on the data points; and reducing the dimensions to the specified set. The cut expression can refer to any variable in the data set. For cuts involving; other variables, such as intermediate formula objects, use the equivalent; reduce method specifying the as a RooFormulVar reference. RooAbsData* reduce(const RooArgSet& varSubset, const RooFormulaVar& cutVar); Create a subset of the data set by applying the given cut on the data points; an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsData.html:15817,variab,variable,15817,root/html526/RooAbsData.html,https://root.cern,https://root.cern/root/html526/RooAbsData.html,1,['variab'],['variable']
Modifiability,"rg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const;  Plot (project) PDF on specified frame. ;  ; virtual RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const;  Internal back-end function of plotOn() with named arguments. ;  ; virtual void preferredObservableScanOrder (const RooArgSet &obs, RooArgSet &orderedObs) const;  Interface method for function objects to indicate their preferred order of observables for scanning their values into a (multi-dimensional) histogram or RooDataSet. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFormulaVar.html:19380,config,config,19380,doc/master/classRooFormulaVar.html,https://root.cern,https://root.cern/doc/master/classRooFormulaVar.html,3,['config'],"['config', 'configuration']"
Modifiability,"rg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; Double_tfErrorTol; Bool_tfForceSum; Bool_tfHasIssuedConvWarning; Bool_tfHasIssuedSumWarning; Int_tfMaxIters; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyk; RooRealProxylambda; RooRealProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNonCentralChiSquare.html:41180,config,configuration,41180,root/html532/RooNonCentralChiSquare.html,https://root.cern,https://root.cern/root/html532/RooNonCentralChiSquare.html,2,['config'],['configuration']
Modifiability,"rg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; TIterator*_pdfObsIter! ; RooSetProxy_pdfObsListList of observables mapped onto histogram observables; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Double_t_totVolume! Total volume of space (product of ranges of observables); Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Bool_t_unitNormAssume contents is unit normalized (for use as pdf cache); Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooHistPdf.html:39393,config,configuration,39393,root/html526/RooHistPdf.html,https://root.cern,https://root.cern/root/html526/RooHistPdf.html,1,['config'],['configuration']
Modifiability,"rg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsIntegrator*_numIntEngine! do not persist; RooAbsFunc*_numIntegrand! do not persist; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgSet*_params! cache for set of parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; TNamed*_rangeName; Bool_t_restartNumIntEngine! do not persist; RooArgSet_saveInt! do not persist; RooArgSet_saveSum! do not persist ; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; RooListProxy_sumCat! do not persist ; TIterator*_sumCatIter!; RooSetProxy_sumListSet of discrete observable over which is summed numerically; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Bool_t_valid; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRealIntegral.html:36424,config,configuration,36424,root/html534/RooRealIntegral.html,https://root.cern,https://root.cern/root/html534/RooRealIntegral.html,2,['config'],['configuration']
Modifiability,"rg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction3PdfBinding_double_unsigned_int_double_double_.html:39827,config,configuration,39827,root/html530/RooCFunction3PdfBinding_double_unsigned_int_double_double_.html,https://root.cern,https://root.cern/root/html530/RooCFunction3PdfBinding_double_unsigned_int_double_double_.html,1,['config'],['configuration']
Modifiability,"rg::_ownedComponents! Set of owned component; TIterator*_pdfIter! Iterator of PDF list; RooListProxy_pdfListList of PDF components; RooLinkedList_pdfNSetListList of PDF component normalization sets; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; TNamed*_refRangeNameReference range name for interpretation of conditional products; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; Bool_t_selfNormIs self-normalized; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Bool_t_useDefaultGenUse default or distributed event generator; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooProdPdf.html:47886,config,configuration,47886,root/html602/RooProdPdf.html,https://root.cern,https://root.cern/root/html602/RooProdPdf.html,8,['config'],['configuration']
Modifiability,"rg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:15:1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Binding_double_double_double_double_.html:36532,Inherit,Inheritance,36532,root/html534/RooCFunction3Binding_double_double_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Binding_double_double_double_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Build a RooSimultaneous p.d.f with name simPdfName from cloning specializations of protytpe p.d.f protoPdfName.; The following named arguments are supported. SplitParam(varname, catname) -- Split parameter(s) with given name(s) in category(s) with given names; SplitParam(var, cat) -- Split given parameter(s) in givem category(s); SplitParamConstrained(vname, cname, remainder) -- Make constrained split in parameter(s) with given name(s) in category(s) with given names; putting remainder fraction formula in state with name ""remainder""; SplitParamConstrained(var,cat,remainder) -- Make constrained split in parameter(s) with given name(s) in category(s) with given names; putting remainder fraction formula in state with name ""remainder""; Restrict(catName,stateNameList) -- Restrict build by only considered listed state names of category with given name. RooSimultaneous* build(const char* simPdfName, RooSimWSTool::BuildConfig& bc, Bool_t verbose = kTRUE); Build a RooSimultaneous p.d.f with name simPdfName from cloning specializations of protytpe p.d.f protoPdfName.; Use the provided BuildConfig or MultiBuildConfig object to configure the build. RooSimultaneous* executeBuild(const char* simPdfName, RooSimWSTool::ObjBuildConfig& obc, Bool_t verbose = kTRUE); Internal build driver from validation ObjBuildConfig. std::string makeSplitName(const RooArgSet& splitCatSet); Construct name of composite split. RooSimWSTool(RooWorkspace& ws); Constructors, assignment etc. ObjBuildConfig* validateConfig(RooSimWSTool::BuildConfig& bc). » Last changed: Tue Jun 30 14:35:47 2015 » Last generated: 2015-06-30 14:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSimWSTool.html:13461,config,configure,13461,root/html602/RooSimWSTool.html,https://root.cern,https://root.cern/root/html602/RooSimWSTool.html,2,['config'],['configure']
Modifiability,"rg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Build a RooSimultaneous p.d.f with name simPdfName from cloning specializations of protytpe p.d.f protoPdfName.; The following named arguments are supported. SplitParam(varname, catname) -- Split parameter(s) with given name(s) in category(s) with given names; SplitParam(var, cat) -- Split given parameter(s) in givem category(s); SplitParamConstrained(vname, cname, remainder) -- Make constrained split in parameter(s) with given name(s) in category(s) with given names; putting remainder fraction formula in state with name ""remainder""; SplitParamConstrained(var,cat,remainder) -- Make constrained split in parameter(s) with given name(s) in category(s) with given names; putting remainder fraction formula in state with name ""remainder""; Restrict(catName,stateNameList) -- Restrict build by only considered listed state names of category with given name. RooSimultaneous* build(const char* simPdfName, RooSimWSTool::BuildConfig& bc, Bool_t verbose = kTRUE); Build a RooSimultaneous p.d.f with name simPdfName from cloning specializations of protytpe p.d.f protoPdfName.; Use the provided BuildConfig or MultiBuildConfig object to configure the build. RooSimultaneous* executeBuild(const char* simPdfName, RooSimWSTool::ObjBuildConfig& obc, Bool_t verbose = kTRUE); Internal build driver from validation ObjBuildConfig. std::string makeSplitName(const RooArgSet& splitCatSet); Construct name of composite split. RooSimWSTool(RooWorkspace& ws); Constructors, assignment etc. ObjBuildConfig* validateConfig(RooSimWSTool::BuildConfig& bc). » Last changed: Tue Mar 10 17:19:09 2015 » Last generated: 2015-03-10 17:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSimWSTool.html:12455,config,configure,12455,root/html534/RooSimWSTool.html,https://root.cern,https://root.cern/root/html534/RooSimWSTool.html,2,['config'],['configure']
Modifiability,"rgCommon abstract base class for objects that represent a value and a ""shape"" in RooFit.Definition RooAbsArg.h:79; RooAbsArg::Printvoid Print(Option_t *options=nullptr) const overridePrint the object to the defaultPrintStream().Definition RooAbsArg.h:294; RooAbsArg::cloneTreevirtual RooAbsArg * cloneTree(const char *newname=nullptr) constClone tree expression of objects.Definition RooAbsArg.cxx:2293; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooMsgService::instancestatic RooMsgService & instance()Return reference to singleton instance.Definition RooMsgService.cxx:345; RooMsgService::getStreamStreamConfig & getStream(Int_t id)Definition RooMsgService.h:161; RooMsgService::resetvoid reset()Definition RooMsgService.cxx:113; RooMsgService::Printvoid Print(Option_t *options=nullptr) const overridePrint configuration of message service.Definition RooMsgService.cxx:486; RooMsgService::addStreamInt_t addStream(RooFit::MsgLevel level, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={})Add a message logging stream for message with given RooFit::MsgLevel or higher.Definition RooMsgService.cxx:177; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooFit::ClassNameRooCmdArg ClassName(const char *name)Definition RooGlobalFunc.cxx:1004; RooFit::TopicRooCmdArg Topic(Int_t topic)Definition RooGlobalFunc.cxx:996; RooFit::OutputFileRooCmdArg OutputFile(const char *fileName)Definition RooGlobalFunc.cxx:517; RooFit::VerboseRooCmdArg Verbose(bool flag=true)Definition RooGlobalFunc.cxx:645; xDouble_t x[n]Definition legend1.C:17; RooFitThe n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf506__msgservice_8C.html:5017,config,configuration,5017,doc/master/rf506__msgservice_8C.html,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html,1,['config'],['configuration']
Modifiability,"rgFunction to calculate in parallel process; set<string>RooAbsArg::_boolAttribBoolean attributes; set<string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; Bool_t_calcInProgress; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue; vector<Bool_t>_constChanged! Flags if variable needs update on server-side; Bool_tRooAbsArg::_deleteWatch! Delete watch flag; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Double_t_evalCarry!; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches; Bool_t_forceCalc; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Bool_t_inlineMode; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches; Bool_tRooAbsArg::_isConstant! Cached isConstant status; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooRealMPFE.html:36263,variab,variable,36263,root/html602/RooRealMPFE.html,https://root.cern,https://root.cern/root/html602/RooRealMPFE.html,4,['variab'],['variable']
Modifiability,"rgList & ; inFuncList, . const RooArgList & ; inCoefList, . bool ; extended = false . ). Constructor for a PDF from a list of functions and coefficients. ; It implements ; \[; \sum_i \mathrm{coef}_i \cdot \mathrm{func}_i,; \]. if \( N_\mathrm{coef} = N_\mathrm{func} \). With extended=true, the coefficients can take any values. With extended=false, there is the danger of getting a degenerate minimisation problem because a PDF has to be normalised, which needs one degree of freedom less.; A plain (normalised) PDF can therefore be implemented with one less coefficient. RooFit then computes ; \[; \sum_i^{N-1} \mathrm{coef}_i \cdot \mathrm{func}_i + (1 - \sum_i \mathrm{coef}_i ) \cdot \mathrm{func}_N,; \]. if \( N_\mathrm{coef} = N_\mathrm{func} - 1 \).; All coefficients and functions are allowed to be negative but the sum (i.e. the PDF) is not, which is enforced at runtime.; Parameters. nameName of the PDF ; titleTitle (for plotting) ; inFuncListList of functions to sum ; inCoefListList of coefficients ; extendedInterpret as extended PDF (requires equal number of functions and coefficients) . Definition at line 127 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [4/5]. RooRealSumPdf::RooRealSumPdf ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func1, . RooAbsReal & ; func2, . RooAbsReal & ; coef1 . ). Construct p.d.f consisting of \( \mathrm{coef}_1 * \mathrm{func}_1 + (1-\mathrm{coef}_1) * \mathrm{func}_2 \). ; The input coefficients and functions are allowed to be negative but the resulting sum is not, which is enforced at runtime. ; Definition at line 89 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [5/5]. RooRealSumPdf::RooRealSumPdf ; (; const RooRealSumPdf & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 184 of file RooRealSumPdf.cxx. Member Function Documentation. ◆ analyticalIntegralWN() [1/2]. double RooRealSumPdf::analyticalIntegralWN ; (; Int_t ; code, . const RooArgSet * ; normSet, . const char * ; rangeN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealSumPdf.html:79327,extend,extendedInterpret,79327,doc/master/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/master/classRooRealSumPdf.html,2,['extend'],"['extended', 'extendedInterpret']"
Modifiability,"rgList & ; inFuncList, . const RooArgList & ; inCoefList, . bool ; extended = false . ). Constructor for a PDF from a list of functions and coefficients. ; It implements ; \[; \sum_i \mathrm{coef}_i \cdot \mathrm{func}_i,; \]. if \( N_\mathrm{coef} = N_\mathrm{func} \). With extended=true, the coefficients can take any values. With extended=false, there is the danger of getting a degenerate minimisation problem because a PDF has to be normalised, which needs one degree of freedom less.; A plain (normalised) PDF can therefore be implemented with one less coefficient. RooFit then computes ; \[; \sum_i^{N-1} \mathrm{coef}_i \cdot \mathrm{func}_i + (1 - \sum_i \mathrm{coef}_i ) \cdot \mathrm{func}_N,; \]. if \( N_\mathrm{coef} = N_\mathrm{func} - 1 \).; All coefficients and functions are allowed to be negative but the sum (i.e. the PDF) is not, which is enforced at runtime.; Parameters. nameName of the PDF ; titleTitle (for plotting) ; inFuncListList of functions to sum ; inCoefListList of coefficients ; extendedInterpret as extended PDF (requires equal number of functions and coefficients) . Definition at line 129 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [4/5]. RooRealSumPdf::RooRealSumPdf ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func1, . RooAbsReal & ; func2, . RooAbsReal & ; coef1 . ). Construct p.d.f consisting of \( \mathrm{coef}_1 * \mathrm{func}_1 + (1-\mathrm{coef}_1) * \mathrm{func}_2 \). ; The input coefficients and functions are allowed to be negative but the resulting sum is not, which is enforced at runtime. ; Definition at line 91 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [5/5]. RooRealSumPdf::RooRealSumPdf ; (; const RooRealSumPdf & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 186 of file RooRealSumPdf.cxx. Member Function Documentation. ◆ analyticalIntegralWN() [1/2]. double RooRealSumPdf::analyticalIntegralWN ; (; Int_t ; code, . const RooArgSet * ; normSet, . const char * ; rangeN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumPdf.html:80448,extend,extendedInterpret,80448,doc/v632/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumPdf.html,2,['extend'],"['extended', 'extendedInterpret']"
Modifiability,"rgList const &funcList, RooAbsRealLValue &, double, double);  ; static void printMetaArgs (RooArgList const &funcList, RooArgList const &coefList, std::ostream &os);  ; static void setCacheAndTrackHints (RooArgList const &funcList, RooArgSet &trackNodes);  ; static std::string translateImpl (RooFit::Detail::CodeSquashContext &ctx, RooAbsArg const *klass, RooArgList const &funcList, RooArgList const &coefList, bool normalize=false);  . Friends; class RooAddition;  ; class RooAddPdf;  ; class RooRealSumFunc;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealSumPdf.html:66936,inherit,inherited,66936,doc/master/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/master/classRooRealSumPdf.html,4,['inherit'],['inherited']
Modifiability,"rgList& xvec, const RooFitResult& fr). RooMultiVarGaussian(const char* name, const char* title, const RooArgList& xvec, const TVectorD& mu, const TMatrixDSym& covMatrix). RooMultiVarGaussian(const char* name, const char* title, const RooArgList& xvec, const TMatrixDSym& covMatrix). RooMultiVarGaussian(const RooMultiVarGaussian& other, const char* name = 0). void syncMuVec() const. Double_t evaluate() const; Represent observables as vector. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Analytical integral known over all observables. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const; Handle full integral here. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; Special case: generate all observables. void initGenerator(Int_t code); Clear the GenData cache as its content is not invariant under changes in; the mu vector. void generateEvent(Int_t code); Retrieve generator config from cache. void decodeCode(Int_t code, vector<int>& map1, vector<int>& map2) const; Decode analytical integration/generation code into index map of integrated/generated (map2); and non-integrated/generated observables (map1). void blockDecompose(const TMatrixD& input, const vector<int>& map1, const vector<int>& map2, TMatrixDSym& S11, TMatrixD& S12, TMatrixD& S21, TMatrixDSym& S22); Block decomposition of covI according to given maps of observables. RooMultiVarGaussian(); {}. void setAnaIntZ(Double_t z); { _z = z ; }. TObject* clone(const char* newname) const; { return new RooMultiVarGaussian(*this,newname); }. virtual ~RooMultiVarGaussian(); { }. const TMatrixDSym& covarianceMatrix() const; { return _cov ; }. AnaIntData& anaIntData(Int_t code) const. GenData& genData(Int_t code) const. » Last changed: Mon Jul 4 15:23:25 2011 » Last generated: 2011-07-04 15:23; This page has been automatically generated. For comments or suggestions regarding the documentation o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooMultiVarGaussian.html:42538,config,config,42538,root/html530/RooMultiVarGaussian.html,https://root.cern,https://root.cern/root/html530/RooMultiVarGaussian.html,1,['config'],['config']
Modifiability,"rgList& xvec, const RooFitResult& fr). RooMultiVarGaussian(const char* name, const char* title, const RooArgList& xvec, const TVectorD& mu, const TMatrixDSym& covMatrix). RooMultiVarGaussian(const char* name, const char* title, const RooArgList& xvec, const TMatrixDSym& covMatrix). RooMultiVarGaussian(const RooMultiVarGaussian& other, const char* name = 0). void syncMuVec() const. Double_t evaluate() const; Represent observables as vector. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Analytical integral known over all observables. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const; Handle full integral here. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; Special case: generate all observables. void initGenerator(Int_t code); Clear the GenData cache as its content is not invariant under changes in; the mu vector. void generateEvent(Int_t code); Retrieve generator config from cache. void decodeCode(Int_t code, vector<int>& map1, vector<int>& map2) const; Decode analytical integration/generation code into index map of integrated/generated (map2); and non-integrated/generated observables (map1). void blockDecompose(const TMatrixD& input, const vector<int>& map1, const vector<int>& map2, TMatrixDSym& S11, TMatrixD& S12, TMatrixD& S21, TMatrixDSym& S22); Block decomposition of covI according to given maps of observables. RooMultiVarGaussian(); {}. void setAnaIntZ(Double_t z); { _z = z ; }. TObject* clone(const char* newname) const; { return new RooMultiVarGaussian(*this,newname); }. virtual ~RooMultiVarGaussian(); { }. const TMatrixDSym& covarianceMatrix() const; { return _cov ; }. AnaIntData& anaIntData(Int_t code) const. GenData& genData(Int_t code) const. » Last changed: Thu Sep 23 20:00:15 2010 » Last generated: 2010-09-23 20:00; This page has been automatically generated. For comments or suggestions regarding the documentation ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMultiVarGaussian.html:41978,config,config,41978,root/html528/RooMultiVarGaussian.html,https://root.cern,https://root.cern/root/html528/RooMultiVarGaussian.html,1,['config'],['config']
Modifiability,"rgSet& obs); static voidSetObsToExpected(RooPoisson& pois, const RooArgSet& obs). Data Members; protected:. const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fAltModel; const RooAbsData*RooStats::HypoTestCalculatorGeneric::fData; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fDefaultSampler; RooStats::TestStatistic*RooStats::HypoTestCalculatorGeneric::fDefaultTestStat; const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fNullModel; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fTestStatSampler. private:. RooAbsData*fAsimovDataasimov data set ; RooArgSetfAsimovGlobObssnapshot of Asimov global observables ; RooArgSetfBestFitPoisnapshot of best fitted POI values; doublefNLLAsimov; doublefNLLObs; boolfOneSided; intfUseQTildeflag to indicate if using qtilde or not (-1 (default based on RooRealVar)), 0 false, 1 (true); static intfgPrintLevelcontrol print level (0 minimal, 1 normal, 2 debug). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetPrintLevel(int level); set print level (static function); 0 minimal, 1 normal, 2 debug. AsymptoticCalculator(RooAbsData& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel); constructor for asymptotic calculator from Data set and ModelConfig; The constructor will perform a global fit of the model to the data; and build an Asimov data set.; It will then also fit the model to the Asimov data set to find the likelihood value; of the Asimov data set; NOTE: If a fit has been done before, one for speeding up could set all the initial prameters; to the fit value and in addition set the null snapshot to the best fit. Double_t EvaluateNLL(RooAbsPdf& pdf, RooAbsData& data, const RooArgSet* poiSet = 0). HypoTestResult* GetHypoTest() const; It performs an hypothesis tests using the likelihood function; and computes the p values for the null and the alternate using the asymptotic; formulae for the profile li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__AsymptoticCalculator.html:4321,Inherit,Inheritance,4321,root/html532/RooStats__AsymptoticCalculator.html,https://root.cern,https://root.cern/root/html532/RooStats__AsymptoticCalculator.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const RooStats::HistFactory::FlexibleInterpVar&); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const char* name, const char* title); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const RooStats::HistFactory::FlexibleInterpVar&, const char*); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, Double_t nominal, const RooArgList& low, const RooArgList& high); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high, vector<int> code); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HistFactory__FlexibleInterpVar.html:11734,Flexible,FlexibleInterpVar,11734,root/html602/RooStats__HistFactory__FlexibleInterpVar.html,https://root.cern,https://root.cern/root/html602/RooStats__HistFactory__FlexibleInterpVar.html,2,['Flexible'],['FlexibleInterpVar']
Modifiability,"rgSet& set) const; virtual Double_tRooAbsCachedPdf::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsSelfCachedPdf.html:20203,Inherit,InheritsFrom,20203,root/html534/RooAbsSelfCachedPdf.html,https://root.cern,https://root.cern/root/html534/RooAbsSelfCachedPdf.html,12,['Inherit'],['InheritsFrom']
Modifiability,"rgSet& set) const; virtual Double_tRooAbsPdf::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); const RooAbsCategoryLValue&indexCat() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; Int_tRooAbsPdf::intOrderNormValueCaching() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSimultaneous.html:19494,Inherit,InheritsFrom,19494,root/html532/RooSimultaneous.html,https://root.cern,https://root.cern/root/html532/RooSimultaneous.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rgSet& set) const; virtual Double_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tisBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooHistFunc.html:16158,Inherit,InheritsFrom,16158,root/html534/RooHistFunc.html,https://root.cern,https://root.cern/root/html534/RooHistFunc.html,3,['Inherit'],['InheritsFrom']
Modifiability,"rgSet& vars). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooLinkedList*_detailData!; Bool_t_ownDetailData; Bool_t_storeDetails; RooDataSet*_summaryData!. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsStudy(const char* name, const char* title); Constructor. RooAbsStudy(const RooAbsStudy& other); Copy constructor. ~RooAbsStudy(); Destructor. void registerSummaryOutput(const RooArgSet& allVars, const RooArgSet& varsWithError = RooArgSet(), const RooArgSet& varsWithAsymError = RooArgSet()). void storeSummaryOutput(const RooArgSet& vars). void storeDetailedOutput(TNamed& object). void aggregateSummaryOutput(TList* chunkList). RooAbsStudy(); {}. RooAbsStudy* clone(const char* newname = """") const. TObject* Clone(const char* newname = """") const; { return clone(newname) ; }. Bool_t attach(RooWorkspace& ); { return kFALSE ; }. Bool_t initialize(); { return kFALSE ; }. Bool_t execute(); { return kFALSE ; }. Bool_t finalize(); { return 0 ; }. void storeDetailedOutput(Bool_t flag); { _storeDetails = flag ; }. RooDataSet* summaryData(); { return _summaryData ; }. RooLinkedList* detailedData(); { return _detailData ; }. void releaseDetailDa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsStudy.html:6863,Inherit,Inheritance,6863,root/html602/RooAbsStudy.html,https://root.cern,https://root.cern/root/html602/RooAbsStudy.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; const ROOT::Math::IBaseFunctionOneDim*funcFunctor; RooRealProxyvarArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooFunctor1DPdfBinding.html:39936,config,configuration,39936,root/html530/RooFunctor1DPdfBinding.html,https://root.cern,https://root.cern/root/html530/RooFunctor1DPdfBinding.html,1,['config'],['configuration']
Modifiability,"rgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; RooListProxy_set1Set of input fractions; TIterator*_setIter1! Iterator over set of input fractions; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFracRemainder(); Default constructor. RooFracRemainder(const char* name, const char* title, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooFracRemainder.html:35108,config,configuration,35108,root/html534/RooFracRemainder.html,https://root.cern,https://root.cern/root/html534/RooFracRemainder.html,2,['config'],['configuration']
Modifiability,"rgSet*RooAbsReal::_lastNSet!; RooListProxy_list; TIterator*_listIter! do not persist; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRecursiveFraction(); Default constructor. RooRecursiveFraction(const char* name, const char* title, const RooArgList& fracSet); Constructor of plain RooAd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooRecursiveFraction.html:36629,config,configuration,36629,root/html602/RooRecursiveFraction.html,https://root.cern,https://root.cern/root/html602/RooRecursiveFraction.html,4,['config'],['configuration']
Modifiability,"rgepointer to a function implementing Merging objects of this class.; ROOT::TSchemaRuleSet*fSchemaRules! Schema evolution rules; TStringfSharedLibsshared libraries containing class code; ShowMembersFunc_tfShowMemberspointer to the class's ShowMembers function; Int_tfSizeofSizeof the class.; TClassStreamer*fStreamerpointer to streamer function; ClassStreamerFunc_tfStreamerFuncWrapper around this class custom Streamer member function.; G__p2memfuncfStreamerImpl! Pointer to the function implementing the right streaming behavior for the class represented by this object.; TObjArray*fStreamerInfoArray of TVirtualStreamerInfo; Int_tfStreamerType!cached of the streaming method to use; const type_info*fTypeInfopointer to the C++ type information.; Bool_tfVersionUsed!Indicates whether GetClassVersion has been called; static Int_tfgClassCountprovides unique id for a each class; static THashTable*fgClassShortTypedefHash; static THashTable*fgClassTypedefHash. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; IdMap_t * GetIdMap(). void AddClass(TClass* cl); static: Add a class to the list and map of classes. void RemoveClass(TClass* cl); static: Remove a class from the list and map of classes. TClass(); Default ctor. TClass(const char* name, Bool_t silent = kFALSE); Create a TClass object. This object contains the full dictionary; of a class. It has list to baseclasses, datamembers and methods.; Use this ctor to create a standalone TClass object. Most useful; to get a TClass interface to an interpreted class. Used by TTabCom.; Normally you would use TClass::GetClass(""class"") to get access to a; TClass object for a certain class. TClass(const char* name, Version_t cversion, const char* dfil = 0, const char* ifil = 0, Int_t dl = 0, Int_t il = 0, Bool_t silent = kFALSE); Create a TClass object. This object contains the full dictionary; of a class. It has list to baseclasses, datamembers and methods. TClass(const char* name, Version_t cversion,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TClass.html:18298,Inherit,Inheritance,18298,root/html534/TClass.html,https://root.cern,https://root.cern/root/html534/TClass.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rget&fFitterTargetthe fitter target; Double_tfLastResultremembers the last obtained result (for internal use); TMVA::MsgLogger*fLoggermessage logger; Bool_tfMakeCopiesif true, the population will make copies of the first individuals; Bool_tfMirrornew values for mutation are mirror-mapped if outside of constraints; TMVA::GeneticPopulationfPopulationcontains and controls the ""individual""; Int_tfPopulationSizethe size of the population; const vector<TMVA::Interval*>&fRangesparameter ranges; Double_tfSpreadregulates the spread of the value change at mutation (sigma); deque<Int_t>fSuccessListto adjust the stepSize . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GeneticAlgorithm(TMVA::IFitterTarget& target, Int_t populationSize, const vector<TMVA::Interval*>& ranges, UInt_t seed = 0); Constructor; Parameters:; int populationSize : defines the number of ""Individuals"" which are created and tested; within one Generation (Iteration of the Evolution); std::vector<TMVA::Interval*> ranges : Interval holds the information of an interval, where the GetMin; gets the low and GetMax gets the high constraint of the variable; the size of ""ranges"" is the number of coefficients which are optimised; Purpose:; Creates a random population with individuals of the size ranges.size(). ~GeneticAlgorithm(); destructor; deletes fLogger. void Init(); calls evolution, but if it is not the first time.; If it's the first time, the random population created by the; constructor is still not evaluated, .. therefore we wait for the; second time init is called. Double_t NewFitness(Double_t oldValue, Double_t newValue); if the ""fitnessFunction"" is called multiple times for one set of; factors (because i.e. each event of a TTree has to be assessed with; each set of Factors proposed by the Genetic Algorithm) the value; of the current calculation has to be added(? or else) to the value; obtained up to now.; example: some chi-square is calculated for every event,; a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__GeneticAlgorithm.html:2724,variab,variable,2724,root/html534/TMVA__GeneticAlgorithm.html,https://root.cern,https://root.cern/root/html534/TMVA__GeneticAlgorithm.html,2,['variab'],['variable']
Modifiability,"rgetDir = __null); construction from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); Cuts can only handle classification with 2 classes. void Init( void ); default initialisation called by all constructors. ~MethodCuts( void ); destructor. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; Method <string> Minimisation method; available values are: MC Monte Carlo <default>; GA Genetic Algorithm; SA Simulated annealing. EffMethod <string> Efficiency selection method; available values are: EffSel <default>; EffPDF. VarProp <string> Property of variable 1 for the MC method (taking precedence over the; globale setting. The same values as for the global option are available. Variables 1..10 can be; set this way. CutRangeMin/Max <float> user-defined ranges in which cuts are varied. void ProcessOptions(); process user options; sanity check, do not allow the input variables to be normalised, because this; only creates problems when interpreting the cuts. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); cut evaluation: returns 1.0 if event passed, 0.0 otherwise. void PrintCuts(Double_t effS) const; print cuts. Double_t GetCuts(Double_t effS, Double_t* cutMin, Double_t* cutMax) const; retrieve cut values for given signal efficiency; assume vector of correct size !!. Double_t GetCuts(Double_t effS, vector<Double_t>& cutMin, vector<Double_t>& cutMax) const; retrieve cut values for given signal efficiency. void Train( void ); training method: here the cuts are optimised for the training sample. void TestClassification(); nothing to test. Double_t EstimatorFunction(Int_t ievt1, Int_t ievt2); for full event scan. Double_t EstimatorFunction(vector<Double_t>& ); returns estimator for ""cut fitness"" used by GA. Double_t ComputeEstimator(vector<Double_t>& ); returns estimator for ""cut fitness"" used by GA; there are two requirements:; 1) the sign",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCuts.html:24119,variab,variables,24119,root/html602/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCuts.html,4,['variab'],['variables']
Modifiability,"rgetValues, const vector<Float_t>& spectatorValues, UInt_t theClass = 0, Double_t weight = 1., Double_t boostweight = 1.); constructor. Event(const vector<Float_t>& , UInt_t theClass, Double_t weight = 1., Double_t boostweight = 1.); constructor. Event(const vector<Float_t*>*& , UInt_t nvar); constructor for single events. Event(const TMVA::Event& ); copy constructor. ~Event(); Event destructor. void SetVariableArrangement(vector<UInt_t>*const m) const; set the variable arrangement. void CopyVarValues(const TMVA::Event& other); copies only the variable values. Float_t GetValue(UInt_t ivar) const; return value of i'th variable. Float_t GetSpectator(UInt_t ivar) const; return spectator content. const std::vector<Float_t>& GetValues() const; return value vector. UInt_t GetNVariables() const; accessor to the number of variables. UInt_t GetNTargets() const; accessor to the number of targets. UInt_t GetNSpectators() const; accessor to the number of spectators. void SetVal(UInt_t ivar, Float_t val); set variable ivar to val. void Print(ostream& o) const; print method. void SetTarget(UInt_t itgt, Float_t value); set the target value (dimension itgt) to value. void SetSpectator(UInt_t ivar, Float_t value); set spectator value (dimension ivar) to value. Double_t GetWeight() const; return the event weight - depending on whether the flag; *IgnoreNegWeightsInTraining* is or not. If it is set AND it is; used for training, then negetive event weights are set to zero !; NOTE! For events used in Testing, the ORIGINAL possibly negative; event weight is used no matter what. void SetIsTraining(Bool_t ); when this static function is called, it sets the flag whether; events with negative event weight should be ignored in the; training, or not. void SetIgnoreNegWeightsInTraining(Bool_t ); when this static function is called, it sets the flag whether; events with negative event weight should be ignored in the; training, or not. Bool_t IsDynamic() const; accessors. {return fDynamic; }. Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Event.html:4470,variab,variable,4470,root/html602/TMVA__Event.html,https://root.cern,https://root.cern/root/html602/TMVA__Event.html,4,['variab'],['variable']
Modifiability,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TApplicationRemote.h>. Inheritance diagram for TARInterruptHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TARInterruptHandler(). TARInterruptHandler::TARInterruptHandler ; (; TApplicationRemote * ; r). inline . Definition at line 127 of file TApplicationRemote.h. Member Function Documentation. ◆ Notify(). Bool_t TARInterruptHandler::Notify ; (; ). overridevirtual . TApplicationRemote interrupt handler. ; Implements TSysEvtHandler.; Definition at line 48 of file TApplicationRemote.cxx. Member Data Documentation. ◆ fApplicationRemote. TApplicationRemote* TARInterruptHandler::fApplicationRemote. private . Definition at line 125 of file TApplicationRemot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTARInterruptHandler.html:15405,inherit,inherited,15405,doc/master/classTARInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTARInterruptHandler.html,3,['inherit'],['inherited']
Modifiability,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProof.h>. Inheritance diagram for TProofInterruptHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofInterruptHandler() [1/2]. TProofInterruptHandler::TProofInterruptHandler ; (; const TProofInterruptHandler & ; ). private . ◆ TProofInterruptHandler() [2/2]. TProofInterruptHandler::TProofInterruptHandler ; (; TProof * ; p). inline . Definition at line 192 of file TProof.h. Member Function Documentation. ◆ Notify(). Bool_t TProofInterruptHandler::Notify ; (; ). overridevirtual . TProof interrupt handler. ; Implements TSysEvtHandler.; Definition at line 122 of file TProof.cxx. ◆ operator=(). TProofInterruptHandler & TProofInterruptHandler::operator= ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofInterruptHandler.html:15541,inherit,inherited,15541,doc/master/classTProofInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTProofInterruptHandler.html,3,['inherit'],['inherited']
Modifiability,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TASInterruptHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TASInterruptHandler(). TASInterruptHandler::TASInterruptHandler ; (; TApplicationServer * ; s). inline . Definition at line 75 of file TApplicationServer.cxx. Member Function Documentation. ◆ Notify(). Bool_t TASInterruptHandler::Notify ; (; ). overridevirtual . Handle this interrupt. ; Implements TSysEvtHandler.; Definition at line 83 of file TApplicationServer.cxx. Member Data Documentation. ◆ fServ. TApplicationServer* TASInterruptHandler::fServ. private . Definition at line 73 of file TApplicationServer.cxx. net/net/src/TApplicationServer.cxx. TASInterruptHandler. ROOT maste",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASInterruptHandler.html:15378,inherit,inherited,15378,doc/master/classTASInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTASInterruptHandler.html,3,['inherit'],['inherited']
Modifiability,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TASSigPipeHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TASSigPipeHandler(). TASSigPipeHandler::TASSigPipeHandler ; (; TApplicationServer * ; s). inline . Definition at line 98 of file TApplicationServer.cxx. Member Function Documentation. ◆ Notify(). Bool_t TASSigPipeHandler::Notify ; (; ). overridevirtual . Handle this signal. ; Implements TSysEvtHandler.; Definition at line 106 of file TApplicationServer.cxx. Member Data Documentation. ◆ fServ. TApplicationServer* TASSigPipeHandler::fServ. private . Definition at line 96 of file TApplicationServer.cxx. net/net/src/TApplicationServer.cxx. TASSigPipeHandler. ROOT master - Reference Gu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASSigPipeHandler.html:15369,inherit,inherited,15369,doc/master/classTASSigPipeHandler.html,https://root.cern,https://root.cern/doc/master/classTASSigPipeHandler.html,3,['inherit'],['inherited']
Modifiability,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServInterruptHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServInterruptHandler(). TProofServInterruptHandler::TProofServInterruptHandler ; (; TProofServ * ; s). inline . Definition at line 176 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServInterruptHandler::Notify ; (; ). overridevirtual . Handle this interrupt. ; Implements TSysEvtHandler.; Definition at line 184 of file TProofServ.cxx. Member Data Documentation. ◆ fServ. TProofServ* TProofServInterruptHandler::fServ. private . Definition at line 174 of file TProofServ.cxx. proof/proof/src/TProofServ.cxx. TProofServInterruptHandler. RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServInterruptHandler.html:15376,inherit,inherited,15376,doc/master/classTProofServInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html,3,['inherit'],['inherited']
Modifiability,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteInterruptHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteInterruptHandler(). TProofServLiteInterruptHandler::TProofServLiteInterruptHandler ; (; TProofServLite * ; s). inline . Definition at line 75 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteInterruptHandler::Notify ; (; ). overridevirtual . Handle urgent data. ; Implements TSysEvtHandler.; Definition at line 83 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteInterruptHandler::fServ. private . Definition at line 73 of file TProofServLite.cxx. proof/proof/src/TProofSe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:15396,inherit,inherited,15396,doc/master/classTProofServLiteInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html,3,['inherit'],['inherited']
Modifiability,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteSegViolationHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteSegViolationHandler(). TProofServLiteSegViolationHandler::TProofServLiteSegViolationHandler ; (; TProofServLite * ; s). inline . Definition at line 140 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteSegViolationHandler::Notify ; (; ). overridevirtual . Handle seg violation. ; Implements TSysEvtHandler.; Definition at line 148 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteSegViolationHandler::fServ. private . Definition at line 138 of file TProofServLite.cxx. p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:15408,inherit,inherited,15408,doc/master/classTProofServLiteSegViolationHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html,3,['inherit'],['inherited']
Modifiability,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteSigPipeHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteSigPipeHandler(). TProofServLiteSigPipeHandler::TProofServLiteSigPipeHandler ; (; TProofServLite * ; s). inline . Definition at line 98 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteSigPipeHandler::Notify ; (; ). overridevirtual . Handle sig pipe. ; Implements TSysEvtHandler.; Definition at line 106 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteSigPipeHandler::fServ. private . Definition at line 96 of file TProofServLite.cxx. proof/proof/src/TProofServLite.cxx. TP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:15387,inherit,inherited,15387,doc/master/classTProofServLiteSigPipeHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html,3,['inherit'],['inherited']
Modifiability,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServLiteTerminationHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServLiteTerminationHandler(). TProofServLiteTerminationHandler::TProofServLiteTerminationHandler ; (; TProofServLite * ; s). inline . Definition at line 118 of file TProofServLite.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServLiteTerminationHandler::Notify ; (; ). overridevirtual . Handle termination. ; Implements TSysEvtHandler.; Definition at line 126 of file TProofServLite.cxx. Member Data Documentation. ◆ fServ. TProofServLite* TProofServLiteTerminationHandler::fServ. private . Definition at line 116 of file TProofServLite.cxx. proof/pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:15403,inherit,inherited,15403,doc/master/classTProofServLiteTerminationHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html,3,['inherit'],['inherited']
Modifiability,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServSigPipeHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServSigPipeHandler(). TProofServSigPipeHandler::TProofServSigPipeHandler ; (; TProofServ * ; s). inline . Definition at line 199 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServSigPipeHandler::Notify ; (; ). overridevirtual . Handle this signal. ; Implements TSysEvtHandler.; Definition at line 207 of file TProofServ.cxx. Member Data Documentation. ◆ fServ. TProofServ* TProofServSigPipeHandler::fServ. private . Definition at line 197 of file TProofServ.cxx. proof/proof/src/TProofServ.cxx. TProofServSigPipeHandler. ROOT master - Refer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServSigPipeHandler.html:15367,inherit,inherited,15367,doc/master/classTProofServSigPipeHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html,3,['inherit'],['inherited']
Modifiability,"rgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TSignalHandler; Int_t fDelay;  ; ESignals fSignal;  ; Bool_t fSync;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProofServTerminationHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofServTerminationHandler(). TProofServTerminationHandler::TProofServTerminationHandler ; (; TProofServ * ; s). inline . Definition at line 155 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProofServTerminationHandler::Notify ; (; ). overridevirtual . Handle this interrupt. ; Implements TSysEvtHandler.; Definition at line 163 of file TProofServ.cxx. Member Data Documentation. ◆ fServ. TProofServ* TProofServTerminationHandler::fServ. private . Definition at line 153 of file TProofServ.cxx. proof/proof/src/TProofServ.cxx. TProofServTerminat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServTerminationHandler.html:15382,inherit,inherited,15382,doc/master/classTProofServTerminationHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html,3,['inherit'],['inherited']
Modifiability,"rgs in multi-line collection printing to given amount. ;  . Private Member Functions; void attachCache (const RooAbsArg *newOwner, const RooArgSet &cachedVars) override;  Initialize cache of dataset: attach variables of cache ArgSet to the corresponding TTree branches. ;  ; void createTree (RooStringView name, RooStringView title);  Create TTree object that lives in memory, independent of current location of gDirectory. ;  ; Int_t getBranchBufferSize () const;  ; void initialize ();  One-time initialization common to all constructor forms. ;  ; std::string makeTreeName () const;  Generate a name for the storage tree from the name and title of this instance. ;  ; void setBranchBufferSize (Int_t size);  ; RooArgSet varsNoWeight (const RooArgSet &allVars, const char *wgtName=nullptr);  Utility function for constructors Return RooArgSet that is copy of allVars minus variable matching wgtName if specified. ;  ; RooRealVar * weightVar (const RooArgSet &allVars, const char *wgtName=nullptr);  Utility function for constructors Return pointer to weight variable if it is defined. ;  . Private Attributes; RooArgSet _attachedBuffers;  ! Currently attached buffers (if different from _varsww) ;  ; const RooAbsArg * _cacheOwner = nullptr;  TTree holding the cached function values. ;  ; TTree * _cacheTree = nullptr;  ; double _curWgt = 1.0;  Buffer for weights in case a batch of values is requested. ;  ; double _curWgtErr = 0.0;  Weight of current event. ;  ; double _curWgtErrHi = 0.0;  Weight of current event. ;  ; double _curWgtErrLo = 0.0;  Weight of current event. ;  ; bool _defCtor = false;  Object owning cache contents. ;  ; const double * _extSumW2Array {nullptr};  ! External sum of weights array ;  ; const double * _extWgtArray {nullptr};  ! External weight array ;  ; const double * _extWgtErrHiArray {nullptr};  ! External weight array - high error ;  ; const double * _extWgtErrLoArray {nullptr};  ! External weight array - low error ;  ; TTree * _tree = nullptr;  ; RooArgSe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTreeDataStore.html:20766,variab,variable,20766,doc/master/classRooTreeDataStore.html,https://root.cern,https://root.cern/doc/master/classRooTreeDataStore.html,1,['variab'],['variable']
Modifiability,"rgs in multi-line collection printing to given amount. ;  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooProjectedPdf; RooObjCacheManager _cacheMgr;  ! The cache manager ;  ; RooSetProxy deps;  dependents of this p.d.f ;  ; RooSetProxy intobs;  observables that p.d.f is integrated over ;  ; RooRealProxy intpdf;  p.d.f that is integrated ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:70457,inherit,inherited,70457,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,1,['inherit'],['inherited']
Modifiability,"rgument in our set; that also appears in the other set. RooAbsCollection & assignValueOnly(const RooAbsCollection& other, Bool_t oneSafe = kFALSE); The assignment operator sets the value of any argument in our set; that also appears in the other set. RooAbsCollection & assignFast(const RooAbsCollection& other); Functional equivalent of operator=() but assumes this and other collection; have same layout. Also no attributes are copied. Bool_t addOwned(RooAbsArg& var, Bool_t silent = kFALSE); Add the specified argument to list. Returns kTRUE if successful, or; else kFALSE if a variable of the same name is already in the list.; This method can only be called on a list that is flagged as owning; all of its contents, or else on an empty list (which will force the; list into that mode). RooAbsArg * addClone(const RooAbsArg& var, Bool_t silent = kFALSE); Add a clone of the specified argument to list. Returns a pointer to; the clone if successful, or else zero if a variable of the same name; is already in the list or the list does *not* own its variables (in; this case, try add() instead.) Calling addClone() on an empty list; forces it to take ownership of all its subsequent variables. Bool_t add(const RooAbsArg& var, Bool_t silent = kFALSE); Add the specified argument to list. Returns kTRUE if successful, or; else kFALSE if a variable of the same name is already in the list; or the list owns its variables (in this case, try addClone() or addOwned() instead). Bool_t add(const RooAbsCollection& list, Bool_t silent = kFALSE); Add a collection of arguments to this collection by calling add(); for each element in the source collection. Bool_t addOwned(const RooAbsCollection& list, Bool_t silent = kFALSE); Add a collection of arguments to this collection by calling addOwned(); for each element in the source collection. void addClone(const RooAbsCollection& list, Bool_t silent = kFALSE); Add a collection of arguments to this collection by calling addOwned(); for each element in the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsCollection.html:12196,variab,variable,12196,root/html530/RooAbsCollection.html,https://root.cern,https://root.cern/root/html530/RooAbsCollection.html,2,['variab'],"['variable', 'variables']"
Modifiability,"rgument to this dataset. ; The function value is calculated for each event using the observable values of each event in case the function depends on variables with names that are identical to the observable names in the dataset ; Definition at line 1153 of file RooDataSet.cxx. ◆ addColumns(). RooArgSet * RooDataSet::addColumns ; (; const RooArgList & ; varList). virtual . Add a column with the values of the given list of (function) argument to this dataset. ; Each function value is calculated for each event using the observable values of the event in case the function depends on variables with names that are identical to the observable names in the dataset ; Definition at line 1171 of file RooDataSet.cxx. ◆ addFast(). void RooDataSet::addFast ; (; const RooArgSet & ; data, . double ; wgt = 1.0, . double ; wgtError = 0.0 . ). virtual . Add a data point, with its coordinates specified in the 'data' argset, to the data set. ; AttentionThe order and type of the input variables are assumed to be the same as for the RooArgSet returned by RooDataSet::get(). Input values will just be written into the internal data columns by ordinal position. ; Parameters. [in]dataData point. ; [in]wgtEvent weight. Defaults to 1. The current value of the weight variable is ignored. . NoteTo obtain weighted events, a variable must be designated WeightVar in the constructor. ; Parameters. [in]wgtErrorOptional weight error. . NoteThis requires including the weight variable in the set of StoreError variables when constructing the dataset. ; Definition at line 1037 of file RooDataSet.cxx. ◆ append(). void RooDataSet::append ; (; RooDataSet & ; data). Add all data points of given data set to this data set. ; Observable in 'data' that are not in this dataset with not be transferred ; Definition at line 1138 of file RooDataSet.cxx. ◆ binnedClone(). RooFit::OwningPtr< RooDataHist > RooDataSet::binnedClone ; (; const char * ; newName = nullptr, . const char * ; newTitle = nullptr . ); const. Return b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:45148,variab,variables,45148,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,1,['variab'],['variables']
Modifiability,"rguments for starting browser with RWebDisplayHandle::Display() method.Definition RWebDisplayArgs.hxx:33; ROOT::RWebWindowRepresents web window, which can be shown in web browser or any other supported environment.Definition RWebWindow.hxx:52; ROOT::RWebWindowsManagerCentral instance to create and show web-based windows like Canvas or FitPanel.Definition RWebWindowsManager.hxx:36; ROOT::RWebWindowsManager::GenerateKeystatic std::string GenerateKey(int keylen=32)Static method to generate cryptographic key Parameter keylen defines length of cryptographic key in b...Definition RWebWindowsManager.cxx:178; ROOT::RWebWindowsManager::fUseSessionKeybool fUseSessionKey! is session key has to be used for data signingDefinition RWebWindowsManager.hxx:44; ROOT::RWebWindowsManager::fAssgnExecstd::unique_ptr< TExec > fAssgnExec! special exec to assign thread id via ProcessEventsDefinition RWebWindowsManager.hxx:51; ROOT::RWebWindowsManager::CreateServerbool CreateServer(bool with_http=false)Creates http server, if required - with real http engine (civetweb) One could configure concrete HTTP...Definition RWebWindowsManager.cxx:351; ROOT::RWebWindowsManager::GetLaunchTmoutfloat GetLaunchTmout() constReturns timeout for launching new browser process.Definition RWebWindowsManager.hxx:61; ROOT::RWebWindowsManager::SetUseConnectionKeystatic void SetUseConnectionKey(bool on=true)Enable or disable usage of connection key (default on) If enabled, each connection (and reconnection)...Definition RWebWindowsManager.cxx:167; ROOT::RWebWindowsManager::fExternalProcessEventsbool fExternalProcessEvents! indicate that there are external process events engineDefinition RWebWindowsManager.hxx:50; ROOT::RWebWindowsManager::fMutexstd::recursive_mutex fMutex! main mutex, used for window creationsDefinition RWebWindowsManager.hxx:45; ROOT::RWebWindowsManager::RWebWindowsManagerRWebWindowsManager()window manager constructor Required here for correct usage of unique_ptr<THttpServer>Definition RWebWindowsM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebWindowsManager_8hxx_source.html:6117,config,configure,6117,doc/v632/RWebWindowsManager_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebWindowsManager_8hxx_source.html,1,['config'],['configure']
Modifiability,"rgy (px, py, pz, E). TRotation is a class describing a rotation of a TVector3 object. TLorentzRotation is a class to describe the Lorentz transformations including Lorentz boosts and rotations. In addition, a TVector2 is a basic implementation of a vector in two dimensions and is not part of the CLHEP translation.; 17.2 TVector3. TVector3 is a general three-vector class, which can be used for description of different vectors in 3D. Components of three vectors:. \(x\), \(y\), \(z\) = basic components; \(\theta\) = azimuth angle; \(\phi\) = polar angle; magnitude = \(mag\) = \(\sqrt{x^2 + y^2 + z^2}\); transverse component = \(perp\) = \(\sqrt{x^2 + y^2}\). Using the TVector3 class, you should remember that it contains only common features of three vectors and lacks methods specific for some particular vector values. For example, it has no translated function because translation has no meaning for vectors.; 17.2.1 Declaration / Access to the Components; TVector3 has been implemented as a vector of three Double_t variables, representing the Cartesian coordinates. By default the values are initialized to zero, however you can change them in the constructor:; TVector3 v1; // v1 = (0,0,0); TVector3 v2(1); // v2 = (1,0,0); TVector3 v3(1,2,3); // v3 = (1,2,3); TVector3 v4(v2); // v4 = v2; It is also possible (but not recommended) to initialize a TVector3 with a Double_t or Float_t C array. You can get the components by name or by index:; xx = v1.X(); or xx = v1(0);; yy = v1.Y(); yy = v1(1);; zz = v1.Z(); zz = v1(2);; The methods SetX(), SetY(), SetZ() and SetXYZ() allow you to set the components:; v1.SetX(1.); v1.SetY(2.); v1.SetZ(3.);; v1.SetXYZ(1.,2.,3.);; 17.2.2 Other Coordinates; To get information on the TVector3 in spherical (rho, phi, theta) or cylindrical (z, r, theta) coordinates, the following methods can be used.; Double_t m = v.Mag();; // get magnitude (=rho=Sqrt(x*x+y*y+z*z))); Double_t m2 = v.Mag2(); // get magnitude squared; Double_t t = v.Theta(); // get pol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:859612,variab,variables,859612,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,"rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetParameters(Int_t cycles, Int_t nsteps, Int_t popSize, Int_t SC_steps, Int_t SC_rate, Double_t SC_factor, Double_t convCrit); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__GeneticFitter.html:5138,Config,Configurable,5138,root/html534/TMVA__GeneticFitter.html,https://root.cern,https://root.cern/root/html534/TMVA__GeneticFitter.html,3,['Config'],['Configurable']
Modifiability,"ri, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ DecayType. enum RooBCPEffDecay::DecayType. EnumeratorSingleSided ; DoubleSided ; Flipped . Definition at line 26 of file RooBCPEffDecay.h. Constructor & Destructor Documentation. ◆ RooBCPEffDecay() [1/3]. RooBCPEffDecay::RooBCPEffDecay ; (; ). inline . Definition at line 29 of file RooBCPEffDecay.h. ◆ RooBCPEffDecay() [2/3]. RooBCPEffDecay::RooBCPEffDecay ; (; const char * ; name, . const char * ; title, . RooRealVar & ; t, . RooAbsCategory & ; tag, . RooAbsReal & ; tau, . RooAbsReal & ; dm, . RooAbsReal & ; avgMistag, . RooAbsReal & ; CPeigenval, . RooAbsReal & ; absLambda, . RooAbsReal & ; argLambda, . RooAbsReal & ; effRatio, . RooAbsReal & ; delMistag, . const RooResolutionModel & ; model, . DecayType ; type = DoubleSided . ). Constructor for RooBCPEffDecay. ; Creates an instance of RooBCPEffDecay with the specified parameters.; Parameters. [in]nameThe name of the PDF. ; [in]titleThe title of the PDF. ; [in]tThe time variable. ; [in]tagThe CP state category. ; [in]tauThe decay time parameter. ; [in]dmThe mixing frequency parameter. ; [in]avgMistagThe average mistag rate parameter. ; [in]CPeigenvalThe CP eigen value parameter. ; [in]absLambdaThe absolute value of the complex lambda parameter. ; [in]argLambdaThe argument of the complex lambda parameter. ; [in]effRatioThe B0/B0bar efficiency ratio. ; [in]delMistagDelta mistag rate parameter. ; [in]modelThe resolution model. ; [in]typeThe decay type. . Definition at line 52 of file RooBCPEffDecay.cxx. ◆ RooBCPEffDecay() [3/3]. RooBCPEffDecay::RooBCPEffDecay ; (; const RooBCPEffDecay & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 95 of file RooBCPEffDecay.cxx. Member Function Documentation. ◆ Class(). static TClass * RooBCPEffDecay::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooBCPEffDecay::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Ver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBCPEffDecay.html:78546,variab,variable,78546,doc/master/classRooBCPEffDecay.html,https://root.cern,https://root.cern/doc/master/classRooBCPEffDecay.html,1,['variab'],['variable']
Modifiability,"riable bins of type short (see TH1::TH1 for explanation of parameters) ;  ;  TH1S (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Create a 1-Dim histogram with fix bins of type short (see TH1::TH1 for explanation of parameters) ;  ;  TH1S (const TH1S &h1s);  Copy constructor. ;  ;  ~TH1S () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void Copy (TObject &hnew) const override;  Copy this to newth1. ;  ; TClass * IsA () const override;  ; TH1S & operator= (const TH1S &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH1;  ~TH1 () override;  Histogram default destructor. ;  ; virtual Bool_t Add (const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1);  Replace contents of this histogram by the addition of h1 and h2. ;  ; virtual Bool_t Add (const TH1 *h1, Double_t c1=1);  Performs the operation: this = this + c1*h1 If errors are defined (see TH1::Sumw2), errors are also recalculated. ;  ; virtual Bool_t Add (TF1 *h1, Double_t c1=1, Option_t *option="""");  Performs the operation: this = this + c1*f1 if errors are defined (see TH1::Sumw2), errors are also recalculated. ;  ; virtual Double_t AndersonDarlingTest (const TH1 *h2, Double_t &advalue) const;  Same function as above but returning also the test statistic value. ;  ; virtual Double_t AndersonDarlingTest (const TH1 *h2, Option_t *option="""") const;  Statistical test of compatibility in shape between this histogram and h2, using the Anderson-Darling 2 sample test. ;  ; void Browse (TBrowser *b) override;  Browse the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1S.html:1795,inherit,inherited,1795,doc/master/classTH1S.html,https://root.cern,https://root.cern/doc/master/classTH1S.html,1,['inherit'],['inherited']
Modifiability,"riable parameters of \(\mbox{FCN}\) would be the coefficients of the polynomials. Using objects for minimization from M , the user would request M to minimize the \(\mbox{FCN}\) with respect to the parameters, that is, find those values of the coefficients which give the lowest value of chisquare.; The user must therefore supply, in addition to the function to be analyzed, via a set or sequence of M applications the instructions which analysis is wanted. The instructions are coded in in the calling program (main.cpp), which allows looping, conditional execution, and all the other possibilities of , but not interactivity, since it must be compiled before execution.; 2.2 Design aspects of M in; What M is:. platform independent; written in an object-oriented way using standard; independent of any external package. The maintainability should be guaranteed with the choice of a modern computer language. Choosing object-oriented technology M should profit from an increased flexibility and functionality and make it also extendable (recursiveness, new algorithms, new functionality).; What M does not:. histogramming; data handling; graphics. M is kept as a low-level package with optimal performance.; The main usages of M are. from a user’s program (such as int main()…); from a graphical data analysis tool such as HippoDraw@bib-HippoDraw. The most important goals of M in are. its numerical accuracy (equivalent to its Fortran version); its computational performance (equivalent to its Fortran version). For the design of the application programming interface (API) of M a two-way strategy was imposed:. a minimal required interface with minimum interaction with M objects and with appropriate usage of the standard library (STL): the user’s implementation of the FCNBase class, initial parameter values and uncertainties are provided by the to M user via std::vectors.; a rich interface which provides the user with more functionality such as interaction with parameters. The core of the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html:5319,extend,extendable,5319,root/htmldoc/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html,2,['extend'],['extendable']
Modifiability,"riable plots are not produces ! The number of variables is 256 , it is larger than 200; Factory : Evaluate classifier: TMVA_CNN_CPU; : ; TMVA_CNN_CPU : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Evaluate deep neural network on CPU using batches with size = 1000; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 256 , it is larger than 200; Factory : Evaluate classifier: PyKeras; : ; PyKeras : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 256 , it is larger than 200; Factory : Evaluate classifier: PyTorch; : ; PyTorch : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 256 , it is larger than 200; : ; : Evaluation results ranked by best signal efficiency and purity (area); : -------------------------------------------------------------------------------------------------------------------; : DataSet MVA ; : Name: Method: ROC-integ; : dataset PyTorch : 0.790; : dataset TMVA_CNN_CPU : 0.751; : dataset BDT : 0.750; : dataset TMVA_DNN_CPU : 0.688; : dataset PyKeras : 0.666; : -------------------------------------------------------------------------------------------------------------------; : ; : Testing efficiency compared to training efficiency (overtraining check); : -------------------------------------------------------------------------------------------------------------------; : DataSet MVA Signal efficiency: from test sample (from training sample) ; : Name: Method: @B=0.01 @B=0.10 @B=0.30 ; : -------------------------------------------------------------------------------------------------------------------; : dataset PyTorch : 0.055 (0.225) 0.430 (0.620) 0.755 (0.832); : dataset TMVA_CNN_CPU : 0.040 (0.140) 0.345 (0.430) 0.699 (0.669); : datase",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:42851,variab,variable,42851,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,2,['variab'],"['variable', 'variables']"
Modifiability,"riable.; TEveProjectionManager*TEveProjected::fManagermanager; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveJetCone& operator=(const TEveJetConeProjected& ). void ComputeBBox(). TEveJetConeProjected(const TEveJetConeProjected& ). void SetDepthLocal(Float_t d). TEveJetConeProjected(const char* n = ""TEveJetConeProjected"", const char* t = """"). virtual ~TEveJetConeProjected(). void SetProjection(TEveProjectionManager* mng, TEveProjectable* model); Projected:. void UpdateProjection(). TEveElement* GetProjectedAsElement(); { return this; }. » Author: Matevz Tadel, Jochen Thaeder 2009 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id: TEveJetCone.h 35221 2010-09-10 11:46:37Z matevz $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveJetConeProjected.html:22167,Inherit,Inheritance,22167,root/html532/TEveJetConeProjected.html,https://root.cern,https://root.cern/root/html532/TEveJetConeProjected.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"riable.; TStringTNamed::fNameobject identifier; vector<TString>fNewEventCommands; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveEventManager(const char* n = ""TEveEventManager"", const char* t = """"); Constructor. void AfterNewEventLoaded(); Virtual function to be called after a new event is loaded.; It iterates over the list of registered commands; (fNewEventCommands) and executes them in given order. void AddNewEventCommand(const TString& cmd); Register a command to be executed on each new event. void RemoveNewEventCommand(const TString& cmd); Remove the first command equal to cmd. void ClearNewEventCommands(); Clear the list of commands to be executed on each new event. virtual ~TEveEventManager(); {}. std::vector<TString>& GetNewEventCommands(); { return fNewEventCommands; }. void Open(); {}. void GotoEvent(Int_t ); {}. void NextEvent(); {}. void PrevEvent(); {}. void Close(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveEventManager.html:19929,Inherit,Inheritance,19929,root/html534/TEveEventManager.html,https://root.cern,https://root.cern/root/html534/TEveEventManager.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"riable.; TStringTNamed::fNameobject identifier; vector<TString>fNewEventCommands; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveEventManager(const char* n = ""TEveEventManager"", const char* t = """"); Constructor. void AfterNewEventLoaded(); Virtual function to be called after a new event is loaded.; It iterates over the list of registered commands; (fNewEventCommands) and executes them in given order. void AddNewEventCommand(const TString& cmd); Register a command to be executed on each new event. void RemoveNewEventCommand(const TString& cmd); Remove the first command equal to cmd. void ClearNewEventCommands(); Clear the list of commands to be executed on each new event. virtual ~TEveEventManager(); {}. std::vector<TString>& GetNewEventCommands(); { return fNewEventCommands; }. void Open(); {}. void GotoEvent(Int_t ); {}. void NextEvent(); {}. void PrevEvent(); {}. void Close(); {}. » Last changed: root/eve:$Id: TEveEventManager.h 27157 2009-01-15 14:05:12Z brun $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveEventManager.html:19859,Inherit,Inheritance,19859,root/html532/TEveEventManager.html,https://root.cern,https://root.cern/root/html532/TEveEventManager.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"riableIdentityTransform, TMVA::VariableNormalizeTransform, TMVA::VariablePCATransform, and TMVA::VariableRearrangeTransform.; Definition at line 817 of file VariableTransformBase.cxx. ◆ PrepareTransformation(). virtual Bool_t TMVA::VariableTransformBase::PrepareTransformation ; (; const std::vector< Event * > & ; ). pure virtual . Implemented in TMVA::VariableDecorrTransform, TMVA::VariableGaussTransform, TMVA::VariableIdentityTransform, TMVA::VariableNormalizeTransform, TMVA::VariablePCATransform, and TMVA::VariableRearrangeTransform. ◆ PrintTransformation(). virtual void TMVA::VariableTransformBase::PrintTransformation ; (; std::ostream & ; ). inlinevirtual . Reimplemented in TMVA::VariableDecorrTransform, TMVA::VariableGaussTransform, TMVA::VariableNormalizeTransform, and TMVA::VariableRearrangeTransform.; Definition at line 108 of file VariableTransformBase.h. ◆ ReadFromXML(). void TMVA::VariableTransformBase::ReadFromXML ; (; void * ; trfnode). pure virtual . Read the input variables from the XML node. ; Implemented in TMVA::VariableDecorrTransform, TMVA::VariableGaussTransform, TMVA::VariableIdentityTransform, TMVA::VariableNormalizeTransform, TMVA::VariablePCATransform, and TMVA::VariableRearrangeTransform.; Definition at line 708 of file VariableTransformBase.cxx. ◆ ReadTransformationFromStream(). virtual void TMVA::VariableTransformBase::ReadTransformationFromStream ; (; std::istream & ; istr, . const TString & ; classname = """" . ). pure virtual . Implemented in TMVA::VariableDecorrTransform, TMVA::VariableGaussTransform, TMVA::VariableIdentityTransform, TMVA::VariableNormalizeTransform, TMVA::VariablePCATransform, and TMVA::VariableRearrangeTransform. ◆ SelectInput(). void TMVA::VariableTransformBase::SelectInput ; (; const TString & ; inputVariables, . Bool_t ; putIntoVariables = kFALSE . ). virtual . select the variables/targets/spectators which serve as input to the transformation ; Definition at line 110 of file VariableTransformBase.cxx. ◆ SetCreated(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html:23120,variab,variables,23120,doc/master/classTMVA_1_1VariableTransformBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html,1,['variab'],['variables']
Modifiability,"riableInfo & TMVA::DataSetInfo::AddVariable ; (; const TString & ; expression, . const TString & ; title = """", . const TString & ; unit = """", . Double_t ; min = 0, . Double_t ; max = 0, . char ; varType = 'F', . Bool_t ; normalized = kTRUE, . void * ; external = nullptr . ). add a variable (can be a complex expression) to the set of variables used in the MV analysis ; Definition at line 207 of file DataSetInfo.cxx. ◆ AddVariable() [2/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddVariable ; (; const VariableInfo & ; varInfo). add variable with given VariableInfo ; Definition at line 226 of file DataSetInfo.cxx. ◆ AddVariablesArray(). void TMVA::DataSetInfo::AddVariablesArray ; (; const TString & ; expression, . Int_t ; size, . const TString & ; title = """", . const TString & ; unit = """", . Double_t ; min = 0, . Double_t ; max = 0, . char ; type = 'F', . Bool_t ; normalized = kTRUE, . void * ; external = nullptr . ). add an array of variables identified by an expression corresponding to an array entry in the tree ; Definition at line 235 of file DataSetInfo.cxx. ◆ Class(). static TClass * TMVA::DataSetInfo::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::DataSetInfo::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::DataSetInfo::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 244 of file DataSetInfo.h. ◆ ClearDataSet(). void TMVA::DataSetInfo::ClearDataSet ; (; ); const. Definition at line 98 of file DataSetInfo.cxx. ◆ CorrelationMatrix(). const TMatrixD * TMVA::DataSetInfo::CorrelationMatrix ; (; const TString & ; className); const. Definition at line 197 of file DataSetInfo.cxx. ◆ CreateCorrelationMatrixHist(). TH2 * TMVA::DataSetInfo::CreateCorrelationMatrixHist ; (; const TMatrixD * ; m, . const TString & ; hName, . const TString & ; hTitle . ); const. Definition at line 429 of file DataSetInfo.cxx. ◆ Decl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html:19777,variab,variables,19777,doc/master/classTMVA_1_1DataSetInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html,1,['variab'],['variables']
Modifiability,"riableLowerLimit ; (; unsigned int ; ivar, . double ; lower . ). overridevirtual . set the lower-limit of an already existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 309 of file Minuit2Minimizer.cxx. ◆ SetVariableStepSize(). bool ROOT::Minuit2::Minuit2Minimizer::SetVariableStepSize ; (; unsigned int ; ivar, . double ; step . ). overridevirtual . set the step size of an already existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 299 of file Minuit2Minimizer.cxx. ◆ SetVariableUpperLimit(). bool ROOT::Minuit2::Minuit2Minimizer::SetVariableUpperLimit ; (; unsigned int ; ivar, . double ; upper . ). overridevirtual . set the upper-limit of an already existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 318 of file Minuit2Minimizer.cxx. ◆ SetVariableValue(). bool ROOT::Minuit2::Minuit2Minimizer::SetVariableValue ; (; unsigned int ; ivar, . double ; val . ). overridevirtual . set variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 279 of file Minuit2Minimizer.cxx. ◆ SetVariableValues(). bool ROOT::Minuit2::Minuit2Minimizer::SetVariableValues ; (; const double * ; x). overridevirtual . set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 288 of file Minuit2Minimizer.cxx. ◆ State(). const ROOT::Minuit2::MnUserParameterState & ROOT::Minuit2::Minuit2Minimizer::State ; (; ). inline . return the minimizer state (containing values, step size , etc..) ; Definition at line 276 of file Minuit2Minimizer.h. ◆ VariableIndex(). int ROOT::Minuit2::Minuit2Minimizer::VariableIndex ; (; const std::string & ; name); const. overridevirtual . get index of variable given a variable given a name return -1 if variable is not found ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 272 of file Minuit2Minimizer.cxx. ◆ VariableName(). std::string ROOT::Minuit2:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:29142,variab,variable,29142,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,1,['variab'],['variable']
Modifiability,"riableMinimTransformVariable(double value); ROOT::Math::MinimTransformVariableMinimTransformVariable(const ROOT::Math::MinimTransformVariable& rhs); ROOT::Math::MinimTransformVariableMinimTransformVariable(double lower, ROOT::Math::SqrtLowVariableTransformation* trafo); ROOT::Math::MinimTransformVariableMinimTransformVariable(double upper, ROOT::Math::SqrtUpVariableTransformation* trafo); ROOT::Math::MinimTransformVariableMinimTransformVariable(double lower, double upper, ROOT::Math::SinVariableTransformation* trafo); ROOT::Math::MinimTransformVariable&operator=(const ROOT::Math::MinimTransformVariable& rhs); doubleUpperBound() const. Data Members; private:. boolfBoundshas double bound; boolfFixfix variable; boolfLowBoundhas lower bound ; doublefLowerlower parameter limit; auto_ptr<ROOT::Math::MinimizerVariableTransformation>fTransformpointer to the minimizer transformation ; boolfUpBoundhas uppper bound param ; doublefUpperupper parameter limit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinimTransformVariable(). Default Constructor for an unlimited variable. {}. MinimTransformVariable(double value); constructor for fixed variable. {}. MinimTransformVariable(double lower, double upper, ROOT::Math::SinVariableTransformation* trafo); constructor for double bound variable. { }. MinimTransformVariable(double lower, SqrtLowVariableTransformation * trafo); constructor for lower bound variable. {}. MinimTransformVariable(double upper, SqrtUpVariableTransformation * trafo); constructor for upper bound variable. {}. MinimTransformVariable(const ROOT::Math::MinimTransformVariable& rhs); copy constructor. MinimTransformVariable & operator=(const ROOT::Math::MinimTransformVariable& rhs); assignment. bool IsFixed() const; { return fFix; }. bool IsLimited() const; { return fBounds || fLowBound || fUpBound; }. bool HasLowerBound() const; { return fLowBound || fBounds; }. bool HasUpperBound() const; { return fUpBound || fBounds; }. do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MinimTransformVariable.html:1728,Inherit,Inheritance,1728,root/html534/ROOT__Math__MinimTransformVariable.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MinimTransformVariable.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"riableTransformBase.h. ◆ fCreated. Bool_t TMVA::VariableTransformBase::fCreated. private . has been created ; Definition at line 154 of file VariableTransformBase.h. ◆ fDsi. DataSetInfo& TMVA::VariableTransformBase::fDsi. protected . Definition at line 130 of file VariableTransformBase.h. ◆ fDsiOutput. DataSetInfo* TMVA::VariableTransformBase::fDsiOutput. protected . Definition at line 131 of file VariableTransformBase.h. ◆ fEnabled. Bool_t TMVA::VariableTransformBase::fEnabled. private . has been enabled ; Definition at line 153 of file VariableTransformBase.h. ◆ fGet. VectorOfCharAndInt TMVA::VariableTransformBase::fGet. protected . get variables/targets/spectators ; Definition at line 143 of file VariableTransformBase.h. ◆ fLogger. MsgLogger* TMVA::VariableTransformBase::fLogger. mutableprotected . ! message logger ; Definition at line 174 of file VariableTransformBase.h. ◆ fNormalise. Bool_t TMVA::VariableTransformBase::fNormalise. private . normalise input variables ; Definition at line 155 of file VariableTransformBase.h. ◆ fNSpectators. UInt_t TMVA::VariableTransformBase::fNSpectators. mutableprivate . number of spectators to be transformed ; Definition at line 165 of file VariableTransformBase.h. ◆ fNTargets. UInt_t TMVA::VariableTransformBase::fNTargets. mutableprivate . number of targets to be transformed ; Definition at line 164 of file VariableTransformBase.h. ◆ fNVariables. UInt_t TMVA::VariableTransformBase::fNVariables. mutableprivate . number of variables to be transformed ; Definition at line 163 of file VariableTransformBase.h. ◆ fNVars. UInt_t TMVA::VariableTransformBase::fNVars. private . number of variables ; Definition at line 156 of file VariableTransformBase.h. ◆ fPut. VectorOfCharAndInt TMVA::VariableTransformBase::fPut. protected . put variables/targets/spectators ; Definition at line 144 of file VariableTransformBase.h. ◆ fSortGet. Bool_t TMVA::VariableTransformBase::fSortGet. private . if true, sort the variables into the order as defined",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html:29898,variab,variables,29898,doc/master/classTMVA_1_1VariableTransformBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html,1,['variab'],['variables']
Modifiability,"riables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); static RooFormulaVar*RooResolutionModel::identity(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; Bool_tRooResolutionModel::isBasisSupported(const char* name) const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; Bool_tRooResolutionModel::isConvolved(); virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooGaussModel.html:20205,Inherit,InheritsFrom,20205,root/html534/RooGaussModel.html,https://root.cern,https://root.cern/root/html534/RooGaussModel.html,9,['Inherit'],['InheritsFrom']
Modifiability,"riables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); static RooFormulaVar*RooResolutionModel::identity(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; Bool_tRooResolutionModel::isBasisSupported(const char* name) const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; Bool_tRooResolutionModel::isConvolved(); virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tisDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAddModel.html:20630,Inherit,InheritsFrom,20630,root/html534/RooAddModel.html,https://root.cern,https://root.cern/root/html534/RooAddModel.html,3,['Inherit'],['InheritsFrom']
Modifiability,"riables. void WriteFoamsToFile() const; Write PDEFoams to file. void ReadWeightsFromStream(istream& i); read options and internal parameters. void ReadWeightsFromXML(void* wghtnode); read PDEFoam variables from xml weight file. TMVA::PDEFoam* ReadClonedFoamFromFile(TFile* , const TString& ); Reads a foam with name 'foamname' from file, and returns a clone; of the foam. The given ROOT file must be open. (The ROOT file; will not be closed in this function.). Parameters:. - file - an open ROOT file. - foamname - name of foam to load from the file. Returns:. If a foam with name 'foamname' exists in the file, then it is; read from the file, cloned and returned. If a foam with name; 'foamname' does not exist in the file or the clone operation; does not succeed, then NULL is returned. void ReadFoamsFromFile(); read foams from file. TMVA::ETargetSelection UIntToTargetSelection(UInt_t its); convert UInt_t to ETargetSelection (used for reading weight files). void FillVariableNamesToFoam() const; store the variable names in all foams. void MakeClassSpecific(ostream& , const TString& ) const; write PDEFoam-specific classifier response; NOT IMPLEMENTED YET!. void GetHelpMessage() const; provide help message. MethodPDEFoam(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& dsi, const TString& theOption = ""PDEFoam"", TDirectory* theTargetDir = 0). EKernel GetKernel( void ); helper functions to convert enum types to UInt_t and back. { return fKernel; }. UInt_t KernelToUInt(TMVA::MethodPDEFoam::EKernel ker) const; { return UInt_t(ker); }. EKernel UIntToKernel(UInt_t iker). UInt_t TargetSelectionToUInt(TMVA::ETargetSelection ts) const; { return UInt_t(ts); }. » Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt » Copyright (c) 2008, 2010: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__MethodPDEFoam.html:26759,variab,variable,26759,root/html604/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html604/TMVA__MethodPDEFoam.html,2,['variab'],['variable']
Modifiability,"riables. void WriteFoamsToFile() const; Write PDEFoams to file. void ReadWeightsFromStream(istream& i); read options and internal parameters. void ReadWeightsFromXML(void* wghtnode); read PDEFoam variables from xml weight file. TMVA::PDEFoam* ReadClonedFoamFromFile(TFile* , const TString& ); Reads a foam with name 'foamname' from file, and returns a clone; of the foam. The given ROOT file must be open. (The ROOT file; will not be closed in this function.). Parameters:. - file - an open ROOT file. - foamname - name of foam to load from the file. Returns:. If a foam with name 'foamname' exists in the file, then it is; read from the file, cloned and returned. If a foam with name; 'foamname' does not exist in the file or the clone operation; does not succeed, then NULL is returned. void ReadFoamsFromFile(); read foams from file. TMVA::ETargetSelection UIntToTargetSelection(UInt_t its); convert UInt_t to ETargetSelection (used for reading weight files). void FillVariableNamesToFoam() const; store the variable names in all foams. void MakeClassSpecific(ostream& , const TString& ) const; write PDEFoam-specific classifier response; NOT IMPLEMENTED YET!. void GetHelpMessage() const; provide help message. MethodPDEFoam(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& dsi, const TString& theOption = ""PDEFoam"", TDirectory* theTargetDir = 0). EKernel GetKernel( void ); helper functions to convert enum types to UInt_t and back. { return fKernel; }. UInt_t KernelToUInt(TMVA::MethodPDEFoam::EKernel ker) const; { return UInt_t(ker); }. EKernel UIntToKernel(UInt_t iker). UInt_t TargetSelectionToUInt(TMVA::ETargetSelection ts) const; { return UInt_t(ts); }. » Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt » Copyright (c) 2008, 2010: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodPDEFoam.html:26751,variab,variable,26751,root/html602/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodPDEFoam.html,2,['variab'],['variable']
Modifiability,"riably. Set the thresholds at the desired bin boundaries, and construct the data hist as a function of the threshold category instead of the real variable. ; Definition at line 118 of file RooDataHist.cxx. ◆ RooDataHist() [3/9]. RooDataHist::RooDataHist ; (; RooStringView ; name, . RooStringView ; title, . const RooArgSet & ; vars, . const RooAbsData & ; data, . double ; wgt = 1.0 . ). Constructor of a data hist from an existing data collection (binned or unbinned) The RooArgSet 'vars' defines the dimensions of the histogram. ; The range and number of bins in each dimensions are taken from getMin(), getMax(), getBins() of each argument passed.; For real dimensions, the fit range and number of bins can be set independently of the plot range and number of bins, but it is advisable to keep the ratio of the plot bin width and the fit bin width an integer value. For category dimensions, the fit ranges always comprises all defined states and each state is always has its individual bin; To effectively bin real dimensions with variable bin sizes, construct a RooThresholdCategory of the real dimension to be binned variably. Set the thresholds at the desired bin boundaries, and construct the data hist as a function of the threshold category instead of the real variable.; If the constructed data hist has less dimensions that in source data collection, all missing dimensions will be projected. ; Definition at line 154 of file RooDataHist.cxx. ◆ RooDataHist() [4/9]. RooDataHist::RooDataHist ; (; RooStringView ; name, . RooStringView ; title, . const RooArgList & ; vars, . const TH1 * ; hist, . double ; wgt = 1.0 . ). Constructor of a data hist from an TH1,TH2 or TH3 The RooArgSet 'vars' defines the dimensions of the histogram. ; The ranges and number of bins are taken from the input histogram, and the corresponding values are set accordingly on the arguments in 'vars' ; Definition at line 216 of file RooDataHist.cxx. ◆ RooDataHist() [5/9]. RooDataHist::RooDataHist ; (; RooStringV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataHist.html:45633,variab,variable,45633,doc/master/classRooDataHist.html,https://root.cern,https://root.cern/doc/master/classRooDataHist.html,2,['variab'],"['variable', 'variably']"
Modifiability,"rial &);  Transient framework-defined extension to materials. ;  ; TGeoMaterial & operator= (const TGeoMaterial &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fAmixture;  ; TObjArray * fElements;  ; Int_t * fNatoms;  ; Int_t fNelements;  ; Double_t * fVecNbOfAtomsPerVolume;  ; Double_t * fWeights;  ; Double_t * fZmixture;  ;  Protected Attributes inherited from TGeoMaterial; Double_t fA;  ; TObject * fCerenkov;  ; TList fConstProperties;  ; Double_t fDensity;  ; TGeoElement * fElement;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to materials. ;  ; Int_t fIndex;  ; Double_t fIntLen;  ; Double_t fPressure;  ; TList fProperties;  ; Double_t fRadLen;  ; TObject * fShader;  ; EGeoMaterialState fState;  ; Double_t fTemperature;  ; TGeoExtension * fUserExtension;  ; Double_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TGeoMaterial; enum  EGeoMaterial { kMatUsed = (1ULL << ( 17 )); , kMatSavePrimitive = (1ULL << ( 18 )); };  ; enum  EGeoMaterialState { kMatStateUndefined; , kMatStateSolid; , kMatStateLiquid; , kMatStateGas; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoMixture.html:19357,inherit,inherited,19357,doc/master/classTGeoMixture.html,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html,2,['inherit'],['inherited']
Modifiability,"rialised as separate branches. . ReturnsPointer to the TBranch that was created. The branch is owned by the tree. ; Definition at line 353 of file TTree.h. ◆ Branch() [11/13]. TBranch * TTree::Branch ; (; const char * ; name, . void * ; address, . const char * ; leaflist, . Int_t ; bufsize = 32000 . ). virtual . Create a new TTree Branch. ; This Branch constructor is provided to support non-objects in a Tree. The variables described in leaflist may be simple variables or structures. // See the two following constructors for writing objects in a Tree.; By default the branch buffers are stored in the same file as the Tree. use TBranch::SetFile to specify a different file. address is the address of the first item of a structure.; leaflist is the concatenation of all the variable names and types separated by a colon character : The variable name and the variable type are separated by a slash (/). The variable type may be 0,1 or 2 characters. If no type is given, the type of the variable is assumed to be the same as the previous variable. If the first variable does not have a type, it is assumed of type F by default. The list of currently supported types is given below:; C : a character string terminated by the 0 character; B : an 8 bit signed integer (Char_t); Treated as a character when in an array.; b : an 8 bit unsigned integer (UChar_t); S : a 16 bit signed integer (Short_t); s : a 16 bit unsigned integer (UShort_t); I : a 32 bit signed integer (Int_t); i : a 32 bit unsigned integer (UInt_t); F : a 32 bit floating point (Float_t); f : a 24 bit floating point with truncated mantissa (Float16_t); D : a 64 bit floating point (Double_t); d : a 24 bit truncated floating point (Double32_t); L : a 64 bit signed integer (Long64_t); l : a 64 bit unsigned integer (ULong64_t); G : a long signed integer, stored as 64 bit (Long_t); g : a long unsigned integer, stored as 64 bit (ULong_t); O : [the letter o, not a zero] a boolean (bool). Arrays of values are supported with the fol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:84425,variab,variable,84425,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,4,['variab'],['variable']
Modifiability,"rials/geom/runplugin.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. runplugin.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Creates and runs a simple iterator plugin connected to TGeoPainter iterator. ; It demonstrates the possibility to dynamically change the color of drawn volumes according some arbitrary criteria WITHOUT changing the color of the same volume drawn on branches that do not match the criteria.; To run:; root[0] .L iterplugin.cxx+; root[1] .x runplugin.C; root[2] select(2,kMagenta);; root[3] select(3,kBlue); ...; kMagenta@ kMagentaDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; iterpluginDefinition iterplugin.cxx:10; ; #include ""iterplugin.cxx""; ; iterplugin *plugin = nullptr;; ; void runplugin(); {; ; ; TString tutdir = gROOT->GetTutorialDir();; gROOT->ProcessLine("".x "" + tutdir + ""/geom/rootgeom.C"");; plugin = new iterplugin();; gGeoManager->GetGeomPainter()->SetIteratorPlugin(plugin);; }; ; void select(Int_t replica=1, Int_t color=kGreen); {; // Change current color. Replica range: 1-4; plugin->Select(replica, color);; gGeoManager->GetGeomPainter()->ModifiedPad();; }; Int_tint Int_tDefinition RtypesCore.h:45; kGreen@ kGreenDefinition Rtypes.h:66; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; gROOT#define gROOTDefinition TROOT.h:406; TGeoManager::GetGeomPainterTVirtualGeoPainter * GetGeomPainter()Make a default painter if none present. Returns pointer to it.Definition TGeoManager.cxx:2916; TStringBasic string class.Definition TString.h:139; TVirtualGeoPainter::ModifiedPadvirtual void ModifiedPad(Bool_t update=kFALSE) const =0; TVirtualGeoPainter::SetIteratorPluginvirtual void SetIteratorPlugin(TGeoIteratorPlugin *plugin)=0; iterplugin::Selectvoid Select(Int_t replica, Int_t color)Definition iterplugin.cxx:16; iterplugin.cxx; AuthorAndrei Gheata ; Definition in file runplugin.C. tutorialsgeomrunplugin.C. ROOT master - Reference Guide ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/runplugin_8C.html:931,plugin,plugin,931,doc/master/runplugin_8C.html,https://root.cern,https://root.cern/doc/master/runplugin_8C.html,2,['plugin'],['plugin']
Modifiability,"riangleUp; 23 full triangle down kFullTriangleDown; 24 open circle kOpenCircle; 25 open square kOpenSquare; 26 open triangle up kOpenTriangleUp; 27 open diamond kOpenDiamond; 28 open cross kOpenCross; 29 full star kFullStar; 30 open star kOpenStar; 31 *; 32 open triangle down; 33 full diamond; 34 full cross. Picture; Source. {; TCanvas *c = new TCanvas(""c"",""Marker types"",0,0,500,200);; TMarker marker;; marker.DisplayMarkerTypes();; return c;; }. Marker size; Various marker sizes are shown in the figure below. The default marker size=1; is shown in the top left corner. Marker sizes smaller than 1 can be; specified. The marker size does not refer to any coordinate systems, it is an; absolute value. Therefore the marker size is not affected by any change; in TPad's scale. A marker size equl to 1 correspond to 8 pixels.; That is, a square marker with size 1 will be drawn with a side equal to 8; pixels on the screen.; The marker size of any class inheriting from TAttMarker can; be changed using the method SetMarkerSize and retrieved using the; method GetMarkerSize. Picture; Source. {; c = new TCanvas(""c"",""Marker sizes"",0,0,500,200);; TMarker marker;; marker.SetMarkerStyle(3);; Double_t x = 0;; Double_t dx = 1/6.0;; for (Int_t i=1; i<6; i++) {; x += dx;; marker.SetMarkerSize(i*0.2); marker.DrawMarker(x,.165);; marker.SetMarkerSize(i*0.8); marker.DrawMarker(x,.495);; marker.SetMarkerSize(i*1.0); marker.DrawMarker(x,.835);; }; return c;; }. Note that the marker styles number 1 6 and 7 (the dots), cannot be scaled. They; are meant to be very fast to draw and are always drawn with the same number of; pixels; therefore SetMarkerSize does not apply on them. To have a; ""scalable dot"" a filled circle should be used instead, i.e. the marker style; number 20. By default (if SetMarkerStyle is not specified), the marker; style used is 1. That's the most common one to draw scatter plots.; . Function Members (Methods); public:. TAttMarker(); TAttMarker(const TAttMarker&); TAttMarker(Col",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAttMarker.html:3220,inherit,inheriting,3220,root/html534/TAttMarker.html,https://root.cern,https://root.cern/root/html534/TAttMarker.html,2,['inherit'],['inheriting']
Modifiability,"riangleUp; 23 full triangle down kFullTriangleDown; 24 open circle kOpenCircle; 25 open square kOpenSquare; 26 open triangle up kOpenTriangleUp; 27 open diamond kOpenDiamond; 28 open cross kOpenCross; 29 full star kFullStar; 30 open star kOpenStar; 31 *; 32 open triangle down; 33 full diamond; 34 full cross. Picture; Source. {; TCanvas *c = new TCanvas(""c"",""Marker types"",0,0,500,200);; TMarker marker;; marker.DisplayMarkerTypes();; return c;; }. Marker size; Various marker sizes are shown in the figure below. The default marker size=1; is shown in the top left corner. Marker sizes smaller than 1 can be; specified. The marker size does not refer to any coordinate systems, it is an; absolute value. Therefore the marker size is not affected by any change; in TPad's scale. A marker size equl to 1 correspond to 8 pixels.; That is, a square marker with size 1 will be drawn with a side equal to 8; pixels on the screen.; The marker size of any class inheriting from TAttMarker can; be changed using the method SetMarkerSize and retrieved using the; method GetMarkerSize. Picture; Source. {; c = new TCanvas(""c"",""Marker sizes"",0,0,500,200);; TMarker marker;; marker.SetMarkerStyle(3);; Double_t x = 0;; Double_t dx = 1/6.0;; for (Int_t i=1; i<6; i++) {; x += dx;; marker.SetMarkerSize(i*0.2); marker.DrawMarker(x,.165);; marker.SetMarkerSize(i*0.8); marker.DrawMarker(x,.495);; marker.SetMarkerSize(i*1.0); marker.DrawMarker(x,.835);; }; return c;; }. Note that the marker styles number 1 6 and 7 (the dots), cannot be scaled. They; are meant to be very fast to draw and are always drawn with the same number of; pixels; therefore SetMarkerSize does not apply on them. To have a; ""scalable dot"" a filled circle should be used instead, i.e. the marker style; number 20. By default (if SetMarkerStyle is not specified), the marker; style used is 1. That's the most common one to draw scatter plots.; . Function Members (Methods); public:. virtual~TAttMarker(); static TClass*Class(); voidCopy(TAttM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TAttMarker.html:3217,inherit,inheriting,3217,root/html602/TAttMarker.html,https://root.cern,https://root.cern/root/html602/TAttMarker.html,4,['inherit'],['inheriting']
Modifiability,"riangleUp; 23 full triangle down kFullTriangleDown; 24 open circle kOpenCircle; 25 open square kOpenSquare; 26 open triangle up kOpenTriangleUp; 27 open diamond kOpenDiamond; 28 open cross kOpenCross; 29 full star kOpenStar; 30 open star kFullStar; 31 *; 32 open triangle down; 33 full diamond; 34 full cross. Picture; Source. {; TCanvas *c = new TCanvas(""c"",""Marker types"",0,0,500,200);; TMarker marker;; marker.DisplayMarkerTypes();; return c;; }. Marker size; Various marker sizes are shown in the figure below. The default marker size=1; is shown in the top left corner. Marker sizes smaller than 1 can be; specified. The marker size does not refer to any coordinate systems, it is an; absolute value. Therefore the marker size is not affected by any change; in TPad's scale. A marker size equl to 1 correspond to 8 pixels.; That is, a square marker with size 1 will be drawn with a side equal to 8; pixels on the screen.; The marker size of any class inheriting from TAttMarker can; be changed using the method SetMarkerSize and retrieved using the; method GetMarkerSize. Picture; Source. {; c = new TCanvas(""c"",""Marker sizes"",0,0,500,200);; TMarker marker;; marker.SetMarkerStyle(3);; Double_t x = 0;; Double_t dx = 1/6.0;; for (Int_t i=1; i<6; i++) {; x += dx;; marker.SetMarkerSize(i*0.2); marker.DrawMarker(x,.165);; marker.SetMarkerSize(i*0.8); marker.DrawMarker(x,.495);; marker.SetMarkerSize(i*1.0); marker.DrawMarker(x,.835);; }; return c;; }. Note that the marker styles number 1 6 and 7 (the dots), cannot be scaled. They; are meant to be very fast to draw and are always drawn with the same number of; pixels; therefore SetMarkerSize does not apply on them. To have a; ""scalable dot"" a filled circle should be used instead, i.e. the marker style; number 20. By default (if SetMarkerStyle is not specified), the marker; style used is 1. That's the most common one to draw scatter plots.; . Function Members (Methods); public:. TAttMarker(); TAttMarker(const TAttMarker&); TAttMarker(Col",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TAttMarker.html:2691,inherit,inheriting,2691,root/html530/TAttMarker.html,https://root.cern,https://root.cern/root/html530/TAttMarker.html,3,['inherit'],['inheriting']
Modifiability,"riate values.; Returns kFALSE in case of an error. Bool_t ParseVarExp(); Split variables and parse name and parameters in brackets. Bool_t ParseOption(); Check if options contain some data important for choosing the type of the; drawn object. Bool_t Parse(const char* varexp, const char* selection, Option_t* option); Parses parameters from TTree::Draw().; varexp - Variable expression; see TTree::Draw(); selection - selection expression; see TTree::Draw(); option - Drawnig option; see TTree::Draw. TString GetProofSelectorName() const; Returns apropriate TSelector class name for proof for the object that is to be drawn; assumes that Parse() method has been called before. Double_t GetParameter(int num) const; returns *num*-th parameter from brackets in the expression; in case of an error (wrong number) returns 0.0; num - number of parameter (counted from 0). Double_t GetIfSpecified(Int_t num, Double_t def) const; num - parameter number; def - default value of the parameter; returns the value of *num*-th parameter from the brackets in the variable expression; if the parameter of that number wasn't specified returns *def*. Bool_t IsSpecified(int num) const; returns kTRUE if the *num*-th parameter was specified; otherwise returns fFALSE; in case of an error (wrong num) prints an error message and; returns kFALSE. TString GetVarExp(Int_t num) const; Returns the *num*-th variable string; in case of an error prints an error message and returns an empty string. TString GetVarExp() const; Returns the variable string, i.e. [var1[:var2[:var2[:var4]]]]. TString GetObjectTitle() const; Returns the desired plot title. TTreeDrawArgsParser::EOutputType DefineType(). TTreeDrawArgsParser(). Bool_t GetAdd() const; { return fAdd; }. Int_t GetDimension() const; { return fDimension; }. Bool_t GetShouldDraw() const; { return fShouldDraw; }. TString GetExp() const; { return fExp; }. Int_t GetNoParameters() const; { return fNoParameters; }. TString GetObjectName() const; { return fName; }. Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreeDrawArgsParser.html:9222,variab,variable,9222,root/html528/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html528/TTreeDrawArgsParser.html,10,['variab'],['variable']
Modifiability,"ribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,bool>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:15:38 2015 » Last generated: 2015-03-10 17:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction4Binding_double_double_double_double_bool_.html:37622,variab,variable,37622,root/html534/RooCFunction4Binding_double_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html534/RooCFunction4Binding_double_double_double_double_bool_.html,2,['variab'],['variable']
Modifiability,"ribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,bool>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Mon Jul 4 15:22:15 2011 » Last generated: 2011-07-04 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction4Binding_double_double_double_double_bool_.html:35071,variab,variable,35071,root/html530/RooCFunction4Binding_double_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html530/RooCFunction4Binding_double_double_double_double_bool_.html,1,['variab'],['variable']
Modifiability,"ribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,bool>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Nov 3 20:07:34 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCFunction4Binding_double_double_double_double_bool_.html:35450,variab,variable,35450,root/html532/RooCFunction4Binding_double_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html532/RooCFunction4Binding_double_double_double_double_bool_.html,1,['variab'],['variable']
Modifiability,"ribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,int>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Sep 23 19:59:05 2010 » Last generated: 2010-09-23 19:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooCFunction4Binding_double_double_double_double_int_.html:34543,variab,variable,34543,root/html528/RooCFunction4Binding_double_double_double_double_int_.html,https://root.cern,https://root.cern/root/html528/RooCFunction4Binding_double_double_double_double_int_.html,1,['variab'],['variable']
Modifiability,"ribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,double>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 13:08:13 2015 » Last generated: 2015-06-02 13:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction4Binding_double_double_double_double_double_.html:39113,variab,variable,39113,root/html602/RooCFunction4Binding_double_double_double_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction4Binding_double_double_double_double_double_.html,2,['variab'],['variable']
Modifiability,"ribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,double>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 15:29:28 2015 » Last generated: 2015-06-02 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction4Binding_double_double_double_double_double_.html:39113,variab,variable,39113,root/html604/RooCFunction4Binding_double_double_double_double_double_.html,https://root.cern,https://root.cern/root/html604/RooCFunction4Binding_double_double_double_double_double_.html,2,['variab'],['variable']
Modifiability,"ribe ();  Return information about the dataframe. ;  ; ColumnNames_t GetColumnNames ();  Returns the names of the available columns. ;  ; std::string GetColumnType (std::string_view column);  Return the type of a given column as a string. ;  ; ColumnNames_t GetDefinedColumnNames ();  Returns the names of the defined columns. ;  ; unsigned int GetNFiles ();  ; unsigned int GetNRuns () const;  Gets the number of event loops run. ;  ; unsigned int GetNSlots () const;  Gets the number of data processing slots. ;  ; RVariationsDescription GetVariations () const;  Return a descriptor for the systematic variations registered in this branch of the computation graph. ;  ; bool HasColumn (std::string_view columnName);  Checks if a column is present in the dataset. ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::RDF::RInterface< RDFDetail::RLoopManager >;  RInterface (const std::shared_ptr< RDFDetail::RLoopManager > &proxied, RLoopManager &lm, const RDFInternal::RColumnRegister &colRegister);  ; const std::shared_ptr< RDFDetail::RLoopManager > & GetProxiedPtr () const;  ;  Protected Member Functions inherited from ROOT::RDF::RInterfaceBase; void AddDefaultColumns ();  ; template<typename... ColumnTypes> ; void CheckAndFillDSColumns (ColumnNames_t validCols, TTraits::TypeList< ColumnTypes... > typeList);  ; void CheckIMTDisabled (std::string_view callerName);  ; template<typename ActionTag , typename... ColTypes, typename ActionResultType , typename RDFNode , typename HelperArgType = ActionResultType, std::enable_if_t< RDFInternal::RNeedJitting< ColTypes... >::value, int > = 0> ; RResultPtr< ActionResultType > CreateAction (const ColumnNames_t &columns, const std::shared_ptr< ActionResultType > &r, const std::shared_ptr< HelperArgType > &helperArg, const std::shared_ptr< RDFNode > &proxiedPtr, const int nColumns=-1);  Create RAction object, return RResultPtr for the action Overload for the case in which one or more column types were not specif",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html:103234,inherit,inherited,103234,doc/v632/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html,2,['inherit'],['inherited']
Modifiability,"ribe ();  Return information about the dataframe. ;  ; ColumnNames_t GetColumnNames ();  Returns the names of the available columns. ;  ; std::string GetColumnType (std::string_view column);  Return the type of a given column as a string. ;  ; ColumnNames_t GetDefinedColumnNames ();  Returns the names of the defined columns. ;  ; unsigned int GetNFiles ();  ; unsigned int GetNRuns () const;  Gets the number of event loops run. ;  ; unsigned int GetNSlots () const;  Gets the number of data processing slots. ;  ; RVariationsDescription GetVariations () const;  Return a descriptor for the systematic variations registered in this branch of the computation graph. ;  ; bool HasColumn (std::string_view columnName);  Checks if a column is present in the dataset. ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::RDF::RInterface< RDFDetail::RLoopManager >;  RInterface (const std::shared_ptr< RDFDetail::RLoopManager > &proxied, RLoopManager &lm, const RDFInternal::RColumnRegister &colRegister);  ; const std::shared_ptr< RDFDetail::RLoopManager > & GetProxiedPtr () const;  ;  Protected Member Functions inherited from ROOT::RDF::RInterfaceBase; void AddDefaultColumns ();  ; template<typename... ColumnTypes> ; void CheckAndFillDSColumns (ColumnNames_t validCols, TTraits::TypeList< ColumnTypes... > typeList);  ; void CheckIMTDisabled (std::string_view callerName);  ; template<typename ActionTag , typename... ColTypes, typename ActionResultType , typename RDFNode , typename HelperArgType = ActionResultType, std::enable_if_t< RDFInternal::RNeedJitting< ColTypes... >::value, int > = 0> ; RResultPtr< ActionResultType > CreateAction (const ColumnNames_t &columns, const std::shared_ptr< ActionResultType > &r, const std::shared_ptr< HelperArgType > &helperArg, const std::shared_ptr< RDFNode > &proxiedPtr, const int nColumns=-1, const bool vector2RVec=true);  Create RAction object, return RResultPtr for the action Overload for the case in which one or more",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDataFrame.html:110572,inherit,inherited,110572,doc/master/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDataFrame.html,2,['inherit'],['inherited']
Modifiability,"ribe graphically a data distribution (D) with only the five numbers. It was invented in 1977 by John Tukey. The five numbers are:. The minimum value of the distribution D (Min).; The lower quartile (Q1): 25% of the data points in D are less than Q1.; The median (M): 50% of the data points in D are less than M.; The upper quartile (Q3): 75% of the data points in D are less than Q3.; The maximum value of the distribution D (Max). A box plot describes a distribution with only five numbers. In ROOT Box Plots (Candle Plots) can be produced from a TTree using the “candle” option in TTree::Draw().; tree->Draw(“px:cos(py):sin(pz)”,””,”candle”);; 12.20.9 Using TTree::Scan. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection.; root[] MyTree->Scan();; will print the first 8 variables of the tree.; root[] MyTree->Scan(""*"");; will print all the variable of the tree.; Specific variables of the tree can be explicit selected by list them in column separated list:; root[] MyTree->Scan(""var1:var2:var3"");; will print the values of var1, var2 and var3. A selection can be applied in the second argument:; root[] MyTree->Scan(""var1:var2:var3"",""var1==0"");; will print the values of var1, var2 and var3 for the entries where var1 is exactly 0.; TTree::Scan returns the number of entries passing the selection. By default 50 rows are shown before TTree::Scan pauses and ask you to press the Enter key to see the next 50 rows. You can change the default number of rows to be shown before <CR> via mytree->SetScanfield(maxrows) where maxrows is 50 by default. If maxrows is set to 0 all rows of the Tree are shown. This option is interesting when dumping the contents of a Tree to an ascii file, eg from the command line:; root[] tree->SetScanField(0);; root[] tree->Scan(""*""); >tree.log; will create a file tree.log.; Arrays (within an entry) are printed in their linear forms. If several arrays with multiple dimensions are printed together, they will NOT be synchr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:618870,variab,variables,618870,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,"ributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TParticle; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classJet.html:13834,inherit,inherited,13834,doc/master/classJet.html,https://root.cern,https://root.cern/doc/master/classJet.html,4,['inherit'],['inherited']
Modifiability,"ributes inherited from TAttBBox; Float_t * fBBox;  ;  Protected Attributes inherited from TEvePointSelectorConsumer; ETreeVarType_e fSourceCS;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions; TEvePointSet & operator= (const TEvePointSet &);  . Friends; class TEvePointSetArray;  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEvePointSelectorConsumer; enum  ETreeVarType_e { kTVT_XYZ; , kTVT_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePointSet.html:42849,inherit,inherited,42849,doc/master/classTEvePointSet.html,https://root.cern,https://root.cern/doc/master/classTEvePointSet.html,2,['inherit'],['inherited']
Modifiability,"ributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompLU.h>. Inheritance diagram for TDecompLU:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompLU() [1/5]. TDecompLU::TDecompLU ; (; ). Default constructor. ; Definition at line 45 of file TDecompLU.cxx. ◆ TDecompLU() [2/5]. TDecompLU::TDecompLU ; (; Int_t ; nrows). explicit . Constructor for (nrows x nrows) matrix. ; Definition at line 56 of file TDecompLU.cxx. ◆ TDecompLU() [3/5]. TDecompLU::TDecompLU ; (; Int_t ; row_lwb, . Int_t ; row_upb . ). Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) matrix. ; Definition at line 69 of file TDecompLU.cxx. ◆ TDecompLU() [4/5]. TDecompLU::TDecompLU ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompLU.html:14777,inherit,inherited,14777,doc/master/classTDecompLU.html,https://root.cern,https://root.cern/doc/master/classTDecompLU.html,1,['inherit'],['inherited']
Modifiability,"ributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDecompSparse.h>. Inheritance diagram for TDecompSparse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompSparse() [1/5]. TDecompSparse::TDecompSparse ; (; ). Default constructor. ; Definition at line 30 of file TDecompSparse.cxx. ◆ TDecompSparse() [2/5]. TDecompSparse::TDecompSparse ; (; Int_t ; nRows, . Int_t ; nr_nonZeros, . Int_t ; verbose . ). Constructor for a matrix with nrows and unspecified number of columns . ; nr_nonZeros is the total number of non-zero entries in the matrix . ; Definition at line 41 of file TDecompSparse.cxx. ◆ TDecompSparse() [3/5]. TDecompSparse::TDecompSparse ; (; Int_t ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompSparse.html:17159,inherit,inherited,17159,doc/master/classTDecompSparse.html,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html,1,['inherit'],['inherited']
Modifiability,"ributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . #include <TDecompBK.h>. Inheritance diagram for TDecompBK:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompBK() [1/5]. TDecompBK::TDecompBK ; (; ). Default constructor. ; Definition at line 64 of file TDecompBK.cxx. ◆ TDecompBK() [2/5]. TDecompBK::TDecompBK ; (; Int_t ; nrows). explicit . Constructor for (nrows x nrows) symmetric matrix. ; Definition at line 73 of file TDecompBK.cxx. ◆ TDecompBK() [3/5]. TDecompBK::TDecompBK ; (; Int_t ; row_lwb, . Int_t ; row_up",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompBK.html:14331,inherit,inherited,14331,doc/master/classTDecompBK.html,https://root.cern,https://root.cern/doc/master/classTDecompBK.html,1,['inherit'],['inherited']
Modifiability,"ributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . #include <TDecompChol.h>. Inheritance diagram for TDecompChol:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDecompChol() [1/6]. TDecompChol::TDecompChol ; (; ). inline . Definition at line 34 of file TDecompChol.h. ◆ TDecompChol() [2/6]. TDecompChol::TDecompChol ; (; Int_t ; nrows). explicit . Constructor for (nrows x nrows) matrix. ; Definition at line 35 of file TDecompChol.cxx. ◆ TDecompChol() [3/6]. TDecompChol::TDecompChol ; (; Int_t ; row_lwb, . Int_t ; row_up",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompChol.html:13323,inherit,inherited,13323,doc/master/classTDecompChol.html,https://root.cern,https://root.cern/doc/master/classTDecompChol.html,1,['inherit'],['inherited']
Modifiability,"ributes inherited from TEvePointSelectorConsumer; ETreeVarType_e fSourceCS;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Private Member Functions; TEveTrack & operator= (const TEveTrack &);  . Friends; class TEveTrackGL;  ; class TEveTrackList;  ; class TEveTrackPropagator;  . Additional Inherited Members;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEvePointSet; void AssertIntIdsSize ();  Assert that size of IntId array is compatible with the size of the point array. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrack.html:49326,inherit,inherited,49326,doc/master/classTEveTrack.html,https://root.cern,https://root.cern/doc/master/classTEveTrack.html,2,['inherit'],['inherited']
Modifiability,"ributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGMdiDecorFrame;  ; class TGMdiMainFrame;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiTitleBar.html:29473,inherit,inherited,29473,doc/master/classTGMdiTitleBar.html,https://root.cern,https://root.cern/doc/master/classTGMdiTitleBar.html,1,['inherit'],['inherited']
Modifiability,"ributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGMdiDecorFrame;  ; class TGMdiMainFrame;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiFrame.html:28850,inherit,inherited,28850,doc/master/classTGMdiFrame.html,https://root.cern,https://root.cern/doc/master/classTGMdiFrame.html,1,['inherit'],['inherited']
Modifiability,"ributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList) const;  ; std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooFit/ModelConfig.h>. Inheritance diagram for RooStats::ModelConfig:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ModelConfig() [1/3]. RooStats::ModelConfig::ModelConfig ; (; RooWorkspace * ; ws = nullptr). inline . Definition at line 38 of file ModelConfig.h. ◆ ModelConfig() [2/3]. RooStats::ModelConfig::ModelConfig ; (; const char * ; name, . RooWorkspace * ; ws = nullptr . ). inline . Definition at line 44 of file ModelConfig.h. ◆ ModelConfig() [3/3]. RooStats::ModelConfig::ModelConfig ; (; const char * ; name, . const char * ; title, . RooWorkspace * ; ws = nullptr . ). inline . Definition at line 50 of file ModelConfig.h. Member Function Documentation. ◆ Class(). static TClass * RooStats::ModelConfig::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooStats::ModelConfig::Class_Name ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ModelConfig.html:20816,inherit,inherited,20816,doc/master/classRooStats_1_1ModelConfig.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ModelConfig.html,1,['inherit'],['inherited']
Modifiability,"ributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMaterial.h>. Inheritance diagram for TMaterial:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMaterial() [1/3]. TMaterial::TMaterial ; (; ). Material default constructor. ; Definition at line 27 of file TMaterial.cxx. ◆ TMaterial() [2/3]. TMaterial::TMaterial ; (; const char * ; name, . const char * ; title, . Float_t ; a, . Float_t ; z, . Float_t ; density . ). Material normal constructor. ; Definition at line 40 of file TMaterial.cxx. ◆ TMaterial() [3/3]. TMaterial::TMaterial ; (; const char * ; name, . const char * ; title, . Float_t ; a, . Float_t ; z, . Float_t ; density, . Float_t ; radl, . Float_t ; inter . ). Material normal constructor. ; Definition at line 56 of file TMaterial.cxx. ◆ ~TMaterial(). TMaterial::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMaterial.html:13165,inherit,inherited,13165,doc/master/classTMaterial.html,https://root.cern,https://root.cern/doc/master/classTMaterial.html,2,['inherit'],['inherited']
Modifiability,"ributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMixture.h>. Inheritance diagram for TMixture:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMixture() [1/2]. TMixture::TMixture ; (; ). Mixture default constructor. ; Definition at line 27 of file TMixture.cxx. ◆ TMixture() [2/2]. TMixture::TMixture ; (; const char * ; name, . const char * ; title, . Int_t ; nmixt . ). Mixture normal constructor. ; Defines mixture OR COMPOUND as composed by the basic nmixt materials defined later by DefineElement.; If nmixt > 0 then Wmixt contains the PROPORTION BY WEIGHTS of each basic material in the mixture.; If nmixt < 0 then Wmixt contains the number of atoms of a given kind into the molecule of the COMPOUND In this case, Wmixt is changed to relative weights.; nb : the radiation l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMixture.html:14037,inherit,inherited,14037,doc/master/classTMixture.html,https://root.cern,https://root.cern/doc/master/classTMixture.html,2,['inherit'],['inherited']
Modifiability,"ributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static Bool_t GetDefaultSmooth ();  Get default value for smooth-line drawing flag. ;  ; static void SetDefaultSmooth (Bool_t r);  Set default value for smooth-line drawing flag (default kFALSE). ;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fRnrLine;  ; Bool_t fRnrPoints;  ; Bool_t fSmooth;  ;  Protected Attributes inherited from ROOT::Experimental::REvePointSet; int fCapacity {0};  ; std::vector< REveVector > fPoints;  ; int fSize {0};  ; int fTexX {0};  ; int fTexY {0};  ;  Protected Attributes inherited fro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveLine.html:20570,inherit,inherited,20570,doc/master/classROOT_1_1Experimental_1_1REveLine.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveLine.html,1,['inherit'],['inherited']
Modifiability,"ributes. For more information, please refer to the TDirectory documentation.; In addition to the attribute syntax, one can inspect a TDirectoryFile in Python via the Get method. In this case, the subdirectory/object name is specified as a string: # Access a subdirectory; d.Get('subdir'); ; # We can go further down in the hierarchy of directories; d.Get('subdir/subsubdir'); ; # Access an object (e.g. a histogram) in the directory; d.Get('obj'); ; # ... or in a subdirectory; d.Get('subdir/obj'); ; # Wrong attribute: returns null; x = d.Get('wrongAttr') # x points to null; Furthermore, TDirectoryFile inherits a WriteObject Python method from TDirectory. Such method allows to write an object into a TDirectoryFile with the following syntax: # Write object obj with identifier 'keyName'; d.WriteObject(obj, 'keyName'). Definition at line 32 of file TDirectoryFile.h. Public Types; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDirectoryFile ();  Default TDirectoryFile constructor. ;  ;  TDirectoryFile (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new TDirectoryFile. ;  ;  ~TDirectoryFile () override;  Destructor. ;  ; void Add (TObject *obj, Bool_t replace=kFALSE) override;  ; void Append (TObject *obj, Bool_t replace=kFALSE) override;  Append object to t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDirectoryFile.html:1851,inherit,inherited,1851,doc/master/classTDirectoryFile.html,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html,1,['inherit'],['inherited']
Modifiability,"ributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:41:44 2015 » Last generated: 2015-09-08 17:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction2PdfBinding_double_double_double_.html:46554,variab,variable,46554,root/html604/RooCFunction2PdfBinding_double_double_double_.html,https://root.cern,https://root.cern/root/html604/RooCFunction2PdfBinding_double_double_double_.html,2,['variab'],['variable']
Modifiability,"ributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t resultDefinition TGWin32VirtualXProxy.cxx:174; TGraph.h; TMath.h; TRandom3.h; ROOT::Fit::FitConfig::ParSettingsconst ParameterSettings & ParSettings(unsigned int i) constget the parameter settings for the i-th parameter (const method)Definition FitConfig.h:76; ROOT::Fit::FitResultclass containing the result of the fit and all the related information (fitted parameter values,...Definition FitResult.h:47; ROOT::Fit::FitterFitter class, entry point for performing all type of fits.Definition Fitter.h:77; ROOT::Fit::Fitter::Resultconst FitResult & Result() constget fit resultDefinition Fitter.h:394; ROOT::Fit::Fitter::FitFCNbool FitFCN(unsigned int npar, Function &fcn, const double *params=nullptr, unsigned int dataSize=0, int fitType=0)Fit using the a generic FCN function as a C++ callable object implementing double () (const double *)...Definition Fitter.h:649; ROOT::Fit::Fitter::Configconst FitConfig & Config() constaccess to the fit configuration (const method)Definition Fitter.h:422; ROOT::Fit::Fitter::SetFCNbool SetFCN(unsigned int npar, Function &fcn, const double *params=nullptr, unsigned int dataSize=0, int fitType=0)Set a generic FCN function as a C++ callable object implementing double () (const double *) Note that...Definition Fitter.h:656; ROOT::Fit::ParameterSettings::SetNamevoid SetName(const std::string &name)interactionDefinition ParameterSettings.h:113; ROOT::Math::FunctorDocumentation for class Functor class.Definition Functor.h:47; TArcCreate an Arc.Definition TArc.h:26; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TAttMarker::SetMarkerStylevirtual void SetMarkerStyle(Style_t mstyle=1)Set the marker st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitCircle_8C.html:4986,config,configuration,4986,doc/master/fitCircle_8C.html,https://root.cern,https://root.cern/doc/master/fitCircle_8C.html,1,['config'],['configuration']
Modifiability,"ributesvirtual void SaveLineAttributes(std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1)Save line attributes as C++ statement(s) on output stream out.Definition TAttLine.cxx:275; TAttMarker::SaveMarkerAttributesvirtual void SaveMarkerAttributes(std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1)Save line attributes as C++ statement(s) on output stream out.Definition TAttMarker.cxx:348; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TBranchA TTree is a list of TBranches.Definition TBranch.h:93; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; TClass::InheritsFromBool_t InheritsFrom(const char *cl) const overrideReturn kTRUE if this class inherits from a class with name ""classname"".Definition TClass.cxx:4941; TDatimeThis class stores the date and time with a precision of one second in an unsigned 32 bit word (950130...Definition TDatime.h:37; TDatime::AsStringconst char * AsString() constReturn the date & time as a string (ctime() format).Definition TDatime.cxx:102; TDirectory::GetFilevirtual TFile * GetFile() constDefinition TDirectory.h:220; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TFile::GetReadaheadSizestatic Int_t GetReadaheadSize()Static function returning the readahead buffer size.Definition TFile.cxx:4599; TFile::GetRelOffsetLong64_t GetRelOffset() constDefinition TFile.h:251; TFile::GetBytesReadExtravirtual Long64_t GetBytesReadExtra() constDefinition TFile.h:242; TFile::GetCacheReadTFileCacheRead * GetCacheRead(const TObject *tree=nullptr) constReturn a pointer to the current read cache.Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreePerfStats_8cxx_source.html:31950,inherit,inherits,31950,doc/master/TTreePerfStats_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTreePerfStats_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"ributes”; 9.4.4 Markers; A marker is a point with a fancy shape! The possible markers are shown in the next figure. Markers. The marker constructor is:; TMarker(Double_t x,Double_t y,Int_t marker); The parameters x and y are the marker coordinates and marker is the marker type, shown in the previous figure. Suppose the pointer ma is a valid marker. The marker size is set via ma->SetMarkerSize(size), where size is the desired size. Note, that the marker types 1, 6 and 7 (the dots) cannot be scaled. They are always drawn with the same number of pixels. SetMarkerSize does not apply on them. To have a “scalable dot” a circle shape should be used instead, for example, the marker type 20. The default marker type is 1, if SetMarkerStyle is not specified. It is the most common one to draw scatter plots. Different marker sizes. Different marker sizes. The user interface for changing the marker color, style and size looks like shown in this picture. It takes place in the editor frame anytime the selected object inherits the class TAttMarker.; Non-symmetric symbols should be used carefully in plotting. The next two graphs show how the misleading a careless use of symbols can be. The two plots represent the same data sets but because of a bad symbol choice, the two on the top appear further apart from the next example. The use of non-symmetric markers. A TPolyMaker is defined by an array on N points in a 2D space. At each point x[i], y[i] a marker is drawn. The list of marker types is shown in the previous paragraph. The marker attributes are managed by the class TAttMarker and are described in “Graphical Objects Attributes”. The TPolyMarker constructor is:; TPolyMarker(Int_t n,Double_t *x,Double_t *y,Option_t *option); Where x and y are arrays of coordinates for the n points that form the poly-marker.; 9.4.5 Curly and Wavy Lines for Feynman Diagrams; This is a peculiarity of particle physics, but we do need sometimes to draw Feynman diagrams. Our friends working in banking can",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:323941,inherit,inherits,323941,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inherits']
Modifiability,"ribution in most cases; should be ""owned"" by the FOAM object and should not be replaced by another one after initialization. void SetRhoInt(void* Rho); User may use this to set pointer to the global function (not descending; from TFoamIntegrand) serving as a distribution for FOAM.; It is useful for simple interactive applications.; Note that persistency for FOAM object will not work in the case of such; a distribution. Double_t Eval(Double_t* ); Internal subprogram.; Evaluates distribution to be generated. void GenerCel2(TFoamCell*& ); Internal subprogram.; Return randomly chosen active cell with probability equal to its; contribution into total driver integral using interpolation search. void MakeEvent(void); User subprogram.; It generates randomly point/vector according to user-defined distribution.; Prior initialization with help of Initialize() is mandatory.; Generated MC point/vector is available using GetMCvect and the MC weight with GetMCwt.; MC point is generated with wt=1 or with variable weight, see OptRej switch. void GetMCvect(Double_t* ); User may get generated MC point/vector with help of this method. Double_t GetMCwt(Double_t& ); User may get weight MC weight using this method. void GetMCwt(Double_t& ); User may get weight MC weight using this method. Double_t MCgenerate(Double_t* MCvect); User subprogram which generates MC event and returns MC weight. void GetIntegMC(Double_t& , Double_t& ); User subprogram.; It provides the value of the integral calculated from the averages of the MC run; May be called after (or during) the MC run. void GetIntNorm(Double_t& , Double_t& ); User subprogram.; It returns NORMALIZATION integral to be combined with the average weights; and content of the histograms in order to get proper absolute normalization; of the integrand and distributions.; It can be called after initialization, before or during the MC run. void GetWtParams(Double_t , Double_t& , Double_t& , Double_t& ); May be called optionally after the MC run.; R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFoam.html:20910,variab,variable,20910,root/html528/TFoam.html,https://root.cern,https://root.cern/root/html528/TFoam.html,10,['variab'],['variable']
Modifiability,"ric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 13:07:17 2015 » Last generated: 2015-06-02 13:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction2Binding_double_int_int_.html:38767,variab,variable,38767,root/html602/RooCFunction2Binding_double_int_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction2Binding_double_int_int_.html,2,['variab'],['variable']
Modifiability,"ric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 15:28:29 2015 » Last generated: 2015-06-02 15:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction2Binding_double_int_int_.html:38767,variab,variable,38767,root/html604/RooCFunction2Binding_double_int_int_.html,https://root.cern,https://root.cern/root/html604/RooCFunction2Binding_double_int_int_.html,2,['variab'],['variable']
Modifiability,"ric, and may be expensive to calculate, especially if there are a lot of free parameters and the problem is very non-linear.; \(\mbox{MINOS}\) can only operate after a good minimum has already been found, and the error matrix has been calculated, so the \(\mbox{MINOS}\) error analysis will normally follow a \(\mbox{MIGRAD}\) minimization. The \(\mbox{MINOS}\) error for a given parameter is defined as the change in the value of that parameter which causes \({\displaystyle F'}\) to increase by the amount FCNBase::up(), where \({\displaystyle F'}\) is the minimum of \(\mbox{FCN}\) with respect to all other free parameters, and FCNBase::up() is the return value of the error definition specified by the user (default = 1.).; The algorithm for finding the positive and negative \(\mbox{MINOS}\) errors for parameter \(\mbox{n}\) consists of varying parameter \(\mbox{n}\), each time minimizing \(\mbox{FCN}\) with respect to all the other \(\mbox{npar - 1}\) variable parameters, to find numerically the two values of parameter \(\mbox{n}\) for which the minimum of \(\mbox{FCN}\) takes on the values \(\displaystyle F_{\mathrm{min}} + \mbox{up}\), where \(\displaystyle F_{\mathrm{min}}\) is the minimum of \(\mbox{FCN}\) with respect to all \(\mbox{npar}\) parameters. In order to make the procedure as fast as possible, \(\mbox{MINOS}\) uses the error matrix to predict the values of all parameters at the various sub-minima which it will have to find in the course of the calculation, and in the limit that the problem is nearly linear, the predictions of \(\mbox{MINOS}\) will be nearly exact, requiring very few iterations. On the other hand, when the problem is very non-linear (i.e., \(\mbox{FCN}\) is far from a quadratic function of its parameters), is precisely the situation when \(\mbox{MINOS}\) is needed in order to indicate the correct parameter errors.; 2.5.4 \(\mbox{CONTOURS}\) plotting; M offers a procedure for finding \(\mbox{FCN}\) \(\mbox{CONTOURS}\) (provided via the clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:24169,variab,variable,24169,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,4,['variab'],['variable']
Modifiability,"rical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; vector<double>_high; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; vector<double>_low; static Int_tRooPrintable::_nameLength; double_nominal; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; TIterator*_paramIter! do not persist; RooListProxy_paramList; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__HistFactory__LinInterpVar.html:32511,config,configuration,32511,root/html528/RooStats__HistFactory__LinInterpVar.html,https://root.cern,https://root.cern/root/html528/RooStats__HistFactory__LinInterpVar.html,2,['config'],['configuration']
Modifiability,"ride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; Double_tfErrorTol; Bool_tfForceSum; Bool_tfHasIssuedConvWarning; Bool_tfHasIssuedSumWarning; Int_tfMaxIters; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyk; RooRealProxylambda; RooRealProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNonCentralChiSquare.html:43512,config,configuration,43512,root/html534/RooNonCentralChiSquare.html,https://root.cern,https://root.cern/root/html534/RooNonCentralChiSquare.html,4,['config'],['configuration']
Modifiability,"ride;  ; TClass * IsA () const override;  ; Bool_t IsCylType () const override;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const override;  ; void Safety_v (const Double_t *points, const Bool_t *inside, Double_t *safe, Int_t vecsize) const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetDimensions (Double_t *param) override;  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void SetVertex (Double_t *vertex) const;  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBBox;  TGeoBBox ();  ;  TGeoBBox (const char *name, Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  TGeoBBox (Double_t *param);  ;  TGeoBBox (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  ~TGeoBBox () override;  ; Bool_t CouldBeCrossed (const Double_t *point, const Double_t *dir) const override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Computes distance from point (px,py) to the object. ;  ; const char * GetAxisName (Int_t iaxis) const override;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections, Bool_t localFrame) const override;  Stub implementation to avoid forcing implementation at this stage. ;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; void GetMeshNumbers (Int_t &nvert, Int_t &nsegs, Int_t &npols) const override;  ; Int_t GetNmeshVertices () const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; Bool_t GetPointsOnSegments (Int_t npoints, Double_t *array) const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrd1.html:3310,inherit,inherited,3310,doc/master/classTGeoTrd1.html,https://root.cern,https://root.cern/doc/master/classTGeoTrd1.html,2,['inherit'],['inherited']
Modifiability,"ride;  ; bool initialize (void) override;  ; TClass * IsA () const override;  ; RooDataSet * merge ();  ; void SetParamPoint (const RooArgSet &paramPoint);  ; void SetRandomSeed (unsigned int seed);  ; void SetToyMCSampler (ToyMCSampler &t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsStudy;  RooAbsStudy ()=default;  ;  RooAbsStudy (const char *name, const char *title);  Constructor. ;  ;  RooAbsStudy (const RooAbsStudy &other);  Copy constructor. ;  ;  ~RooAbsStudy () override;  Destructor. ;  ; virtual bool attach (RooWorkspace &);  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; RooLinkedList * detailedData ();  ; virtual void dump ();  ; void releaseDetailData ();  ; void storeDetailedOutput (bool flag);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; RooDataSet * summaryData ();  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ToyMCStudy.html:1888,inherit,inherited,1888,doc/master/classRooStats_1_1ToyMCStudy.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ToyMCStudy.html,1,['inherit'],['inherited']
Modifiability,"ride;  ; virtual Int_t DistancetoPrimitiveHelper (TGraph *theGraph, Int_t px, Int_t py)=0;  ; virtual void DrawPanelHelper (TGraph *theGraph)=0;  ; virtual void ExecuteEventHelper (TGraph *theGraph, Int_t event, Int_t px, Int_t py)=0;  ; virtual char * GetObjectInfoHelper (TGraph *theGraph, Int_t px, Int_t py) const =0;  ; TClass * IsA () const override;  ; virtual void PaintGraph (TGraph *theGraph, Int_t npoints, const Double_t *x, const Double_t *y, Option_t *chopt)=0;  ; virtual void PaintGrapHist (TGraph *theGraph, Int_t npoints, const Double_t *x, const Double_t *y, Option_t *chopt)=0;  ; virtual void PaintHelper (TGraph *theGraph, Option_t *option)=0;  ; virtual void PaintScatter (TScatter *theScatter, Option_t *option)=0;  ; virtual void PaintStats (TGraph *theGraph, TF1 *fit)=0;  ; virtual void SetHighlight (TGraph *theGraph)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGraphPainter.html:1589,inherit,inherited,1589,doc/master/classTVirtualGraphPainter.html,https://root.cern,https://root.cern/doc/master/classTVirtualGraphPainter.html,1,['inherit'],['inherited']
Modifiability,"ride;  ; void Layout () override;  Layout container. ;  ; void RemoveAll () override;  Remove all entries in this container. ;  ; virtual void RemoveEntries (Int_t from_ID, Int_t to_ID);  Remove entries from from_ID to to_ID (including). ;  ; virtual void RemoveEntry (Int_t id);  Remove the entry with specified id from the listbox container. ;  ; virtual TGLBEntry * Select (Int_t id);  Select the entry with the specified id. ;  ; virtual TGLBEntry * Select (Int_t id, Bool_t sel);  Select / deselect the entry with the specified id. ;  ; virtual void SetListBox (TGListBox *lb);  ; virtual void SetMultipleSelections (Bool_t multi);  Enables and disables multiple selections of entries. ;  ; void SetVsbPosition (Int_t newPos) override;  Set new vertical scroll bar position. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGContainer;  TGContainer (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kSunkenFrame, Pixel_t back=GetDefaultFrameBackground());  Create a canvas container. ;  ;  TGContainer (TGCanvas *p, UInt_t options=kSunkenFrame, Pixel_t back=GetDefaultFrameBackground());  Create a canvas container. ;  ;  ~TGContainer () override;  Delete canvas container. ;  ; virtual void AdjustPosition ();  Move content to position of highlighted/activated frame. ;  ; virtual void ClearViewPort ();  Clear view port and redraw full content. ;  ; virtual void Clicked (TGFrame *f, Int_t btn);  Emit Clicked() signal. ;  ; virtual void Clicked (TGFrame *f, Int_t btn, Int_t x, Int_t y);  Emit Clicked() signal. ;  ; virtual void CurrentChanged (Int_t x, Int_t y);  Emit signal when current position changed. ;  ; virtual void CurrentChanged (TGFrame *f);  Emit signal when current selected frame changed. ;  ; virtual void DoubleClicked (TGFrame *f, Int_t btn);  Emit DoubleClicked() signal. ;  ; virtual void DoubleClicked (TGFrame *f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLBContainer.html:3259,inherit,inherited,3259,doc/master/classTGLBContainer.html,https://root.cern,https://root.cern/doc/master/classTGLBContainer.html,1,['inherit'],['inherited']
Modifiability,"ride;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Timeout ();  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLRedrawTimer.html:2607,inherit,inherited,2607,doc/master/classTGLRedrawTimer.html,https://root.cern,https://root.cern/doc/master/classTGLRedrawTimer.html,1,['inherit'],['inherited']
Modifiability,"ride;  Calculate and return the current value. ;  ; bool redirectServersHook (const RooAbsCollection &, bool, bool, bool) override;  The cache manager. ;  ; void selectNormalization (const RooArgSet *depSet=nullptr, bool force=false) override;  Interface function used by test statistics to freeze choice of observables for interpretation of fraction coefficients. ;  ; void selectNormalizationRange (const char *rangeName=nullptr, bool force=false) override;  Interface function used by test statistics to freeze choice of range for interpretation of fraction coefficients. ;  ; void updateCoefficients (AddCacheElem &cache, const RooArgSet *nset, bool syncCoefValues=true) const;  Update the coefficient values in the given cache element: calculate new remainder fraction, normalize fractions obtained from extended ML terms to unity, and multiply the various range and dimensional corrections needed in the current use context. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if normSet is the currently active normalization set of this PDF, meaning is exactly the same object as the one the _normSet member points to (or both are nullptr). ;  ; double normalizeWithNaNPacking (double rawVal, double normVal) const;  ; RooPlot * plotOn (RooPlot *frame, PlotOpt o) const override;  Plot oneself on 'frame'. ;  ; Int_t * randomizeProtoOrder (Int_t nProto, Int_t nGen, bool resample=false) const;  Return lookup table with randomized order for nProto prototype events. ;  ; virtual bool syncNormalization (const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:64359,inherit,inherited,64359,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,2,['inherit'],['inherited']
Modifiability,"ride;  Delete a tool tip object. ;  ; void DrawBorder () override;  Draw border of tool tip window. ;  ; const TGString * GetText () const;  Get the tool tip text. ;  ; Bool_t HandleTimer (TTimer *t) override;  If tool tip delay timer times out show tool tip window. ;  ; void Hide ();  Hide tool tip window. ;  ; TClass * IsA () const override;  ; void Reset ();  Reset tool tip popup delay timer. ;  ; void Reset (const TVirtualPad *parent);  Reset tool tip popup delay timer. ;  ; void SetDelay (Long_t delayms);  Set delay in milliseconds. ;  ; void SetPosition (Int_t x, Int_t y);  Set popup position within specified frame (as specified in the ctor). ;  ; void SetText (const char *new_text);  Set new tool tip text. ;  ; void Show (Int_t x, Int_t y);  Show tool tip window. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGToolTip.html:2412,inherit,inherited,2412,doc/master/classTGToolTip.html,https://root.cern,https://root.cern/doc/master/classTGToolTip.html,1,['inherit'],['inherited']
Modifiability,"ride;  Draw a TParallelCoordRange. ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the entry. ;  ; virtual Double_t GetMax ();  ; virtual Double_t GetMin ();  ; TParallelCoordSelect * GetSelection ();  ; TParallelCoordVar * GetVar ();  ; TClass * IsA () const override;  ; bool IsIn (Double_t evtval);  Evaluate if the given value is within the range or not. ;  ; void Paint (Option_t *options) override;  Paint a TParallelCoordRange. ;  ; void Print (Option_t *options) const override;  Print info about the range. ;  ; virtual void SendToBack ();  Make the selection which owns the range to be drawn under all the others. ;  ; void SetLineColor (Color_t col) override;  Set the selection line color. ;  ; void SetLineWidth (Width_t wid) override;  Set the selection line width. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoordRange.html:2777,inherit,inherited,2777,doc/master/classTParallelCoordRange.html,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html,1,['inherit'],['inherited']
Modifiability,"ride;  Draw the dock button, i.e. two vertical lines. ;  ; void DrawBorder () override;  Draw borders of dock button. ;  ;  Protected Member Functions inherited from TGButton; virtual void EmitSignals (Bool_t wasUp);  Emit button signals. ;  ; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; ULong_t fHiBg;  highlighted background color ;  ; Bool_t fMouseOn;  true when mouse on button ;  ; ULong_t fNormBg;  normal background color ;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockButton.html:25061,inherit,inherited,25061,doc/master/classTGDockButton.html,https://root.cern,https://root.cern/doc/master/classTGDockButton.html,3,['inherit'],['inherited']
Modifiability,"ride;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; Int_t getGenerator (const RooArgSet &directVars, RooArgSet &generateVars, bool staticInitOK=true) const override;  Load generatedVars with the subset of directVars that we can generate events for, and return a code that specifies the generator algorithm we will use. ;  ; RooAbsReal const & getMean () const;  Get the mean parameter. ;  ; RooAbsReal const & getSigma () const;  Get the sigma parameter. ;  ; RooAbsReal const & getX () const;  Get the x variable. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; std::uni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussian.html:2420,inherit,inherited,2420,doc/master/classRooGaussian.html,https://root.cern,https://root.cern/doc/master/classRooGaussian.html,1,['inherit'],['inherited']
Modifiability,"ride;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystemDirectory.html:5204,inherit,inherited,5204,doc/master/classTSystemDirectory.html,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html,2,['inherit'],['inherited']
Modifiability,"ride;  Return binning definition with name. ;  ; std::list< std::string > getBinningNames () const override;  Get a list of all binning names. ;  ; double getError () const;  ; double getErrorHi () const;  ; double getErrorLo () const;  ; double getValV (const RooArgSet *nset=nullptr) const override;  Return value of variable. ;  ; bool hasAsymError (bool allowZero=true) const;  ; bool hasBinning (const char *name) const override;  Returns true if variable has a binning named 'name'. ;  ; bool hasError (bool allowZero=true) const;  ; TClass * IsA () const override;  ; bool isDerived () const override;  Does value or shape of this arg depend on any other arg? ;  ; bool isFundamental () const override;  Is this object a fundamental type that can be added to a dataset? Fundamental-type subclasses override this method to return true. ;  ; virtual RooAbsArg & operator= (double newValue);  Assignment operator from a double. ;  ; void printExtras (std::ostream &os) const override;  Print extras of variable: (asymmetric) error, constant flag, limits and binning. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Detailed printing interface. ;  ; void printValue (std::ostream &os) const override;  Print value of variable. ;  ; bool readFromStream (std::istream &is, bool compact, bool verbose=false) override;  Read object contents from given stream. ;  ; void removeAsymError ();  ; void removeError ();  ; void removeMax (const char *name=nullptr);  Remove upper range limit for binning with given name. Empty name means default range. ;  ; void removeMin (const char *name=nullptr);  Remove lower range limit for binning with given name. Empty name means default range. ;  ; void removeRange (const char *name=nullptr);  Remove range limits for binning with given name. Empty name means default range. ;  ; void setAsymError (double lo, double hi);  ; void setBinning (const RooAbsBinning &binning, const char *name=nullpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:3549,variab,variable,3549,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['variab'],['variable']
Modifiability,"ride;  Save layout hints as a C++ statement(s) on output stream out. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGLayoutHints;  TGLayoutHints (const TGLayoutHints &lh);  Constructor. ;  ;  TGLayoutHints (ULong_t hints=kLHintsNormal, Int_t padleft=0, Int_t padright=0, Int_t padtop=0, Int_t padbottom=0);  ;  ~TGLayoutHints () override;  Destructor. ;  ; ULong_t GetLayoutHints () const;  ; Int_t GetPadBottom () const;  ; Int_t GetPadLeft () const;  ; Int_t GetPadRight () const;  ; Int_t GetPadTop () const;  ; void ls (Option_t *option="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void Print (Option_t *option="""") const override;  Printing. ;  ; virtual void SetLayoutHints (ULong_t lh);  ; virtual void SetPadBottom (Int_t v);  ; virtual void SetPadLeft (Int_t v);  ; virtual void SetPadRight (Int_t v);  ; virtual void SetPadTop (Int_t v);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableLayoutHints.html:2924,inherit,inherited,2924,doc/master/classTGTableLayoutHints.html,https://root.cern,https://root.cern/doc/master/classTGTableLayoutHints.html,1,['inherit'],['inherited']
Modifiability,"ride;  Virtual function called before a window is undocked. ;  ; void Redraw (Bool_t resetCameras=kFALSE);  Redraw viewer immediately. ;  ; void RemoveElementLocal (TEveElement *el) override;  Remove element 'el' from the list of children and also remove appropriate GLScene from GLViewer's list of scenes. ;  ; void RemoveElementsLocal () override;  Remove all children, forwarded to GLViewer. ;  ; void SetGLViewer (TGLViewer *viewer, TGFrame *frame);  Set TGLViewer that is represented by this object. ;  ; TGLEmbeddedViewer * SpawnGLEmbeddedViewer (TGedEditor *ged=nullptr, Int_t border=0);  Spawn new GLViewer and adopt it. ;  ; TGLSAViewer * SpawnGLViewer (TGedEditor *ged=nullptr, Bool_t stereo=kFALSE, Bool_t quad_buf=kTRUE);  Spawn new GLViewer and adopt it. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SwitchStereo ();  Switch stereo mode. ;  ;  Public Member Functions inherited from TEveWindowFrame;  TEveWindowFrame (TGFrame *frame, const char *n=""TEveWindowFrame"", const char *t="""");  Constructor. ;  ;  ~TEveWindowFrame () override;  Destructor. ;  ; TGCompositeFrame * GetGUICompositeFrame ();  Returns the registered top-frame of this eve-window dynamic-casted to composite-frame. ;  ; TGFrame * GetGUIFrame () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveWindow;  TEveWindow (const char *n=""TEveWindow"", const char *t="""");  ;  ~TEveWindow () override;  Destructor. ;  ; virtual Bool_t CanMakeNewSlots () const;  ; void ClearEveFrame ();  Clears eve-frame associated with this window. ;  ; virtual void DestroyWindow ();  Destroy eve-window - replace it with an empty frame-slot. ;  ; virtual void DestroyWindowAndSlot ();  Destroy eve-window and its frame-slot. ;  ; void FlipShowTitleBar ();  ; TEveCompositeFrame * GetEveFrame ();  ; Bool_t GetShowTitleBar ()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveViewer.html:2732,inherit,inherited,2732,doc/master/classTEveViewer.html,https://root.cern,https://root.cern/doc/master/classTEveViewer.html,1,['inherit'],['inherited']
Modifiability,"ridevirtual . Send exactly length bytes from buffer. ; Use opt to send out-of-band data (see TSocket). Returns the number of bytes sent or -1 in case of error. Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET). ; Reimplemented from TSystem.; Definition at line 3405 of file TUnixSystem.cxx. ◆ SetDisplay(). void TUnixSystem::SetDisplay ; (; ). overridevirtual . Set DISPLAY environment variable based on utmp entry. Only for UNIX. ; Reimplemented from TSystem.; Definition at line 663 of file TUnixSystem.cxx. ◆ SetDynamicPath(). void TUnixSystem::SetDynamicPath ; (; const char * ; path). overridevirtual . Set the dynamic path to a new value. ; If the value of 'path' is zero, the dynamic path is reset to its default value. ; Reimplemented from TSystem.; Definition at line 4748 of file TUnixSystem.cxx. ◆ Setenv(). void TUnixSystem::Setenv ; (; const char * ; name, . const char * ; value . ). overridevirtual . Set environment variable. ; Reimplemented from TSystem.; Definition at line 2129 of file TUnixSystem.cxx. ◆ SetFPEMask(). Int_t TUnixSystem::SetFPEMask ; (; Int_t ; mask = kDefaultMask). overridevirtual . Set which conditions trigger a floating point exception. ; Return the previous set of conditions. ; Reimplemented from TSystem.; Definition at line 999 of file TUnixSystem.cxx. ◆ SetProgname(). void TUnixSystem::SetProgname ; (; const char * ; name). overridevirtual . Set the application name (from command line, argv[0]) and copy it in gProgName. ; Copy the application pathname in gProgPath. If name is 0 let the system set the actual executable name and path (works on MacOS X and Linux). ; Reimplemented from TSystem.; Definition at line 641 of file TUnixSystem.cxx. ◆ SetSockOpt(). int TUnixSystem::SetSockOpt ; (; int ; sock, . int ; option, . int ; val . ). overridevirtual . Set socket option. ; Reimplemented from TSystem.; Definition at line 3437 of file TUnixSystem.cxx. ◆ SigAlarmInterruptsSysc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem.html:67487,variab,variable,67487,doc/master/classTUnixSystem.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem.html,1,['variab'],['variable']
Modifiability,"ridevirtual . return errors at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 140 of file TMinuitMinimizer.h. ◆ Fcn(). void TMinuitMinimizer::Fcn ; (; int & ; , . double * ; , . double & ; f, . double * ; x, . int ;  . ). staticprotected . implementation of FCN for Minuit ; Definition at line 224 of file TMinuitMinimizer.cxx. ◆ FcnGrad(). void TMinuitMinimizer::FcnGrad ; (; int & ; , . double * ; g, . double & ; f, . double * ; x, . int ; iflag . ). staticprotected . implementation of FCN for Minuit when user provided gradient is used ; Definition at line 230 of file TMinuitMinimizer.cxx. ◆ FixVariable(). bool TMinuitMinimizer::FixVariable ; (; unsigned int ; ivar). overridevirtual . fix an existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 388 of file TMinuitMinimizer.cxx. ◆ GetCovMatrix(). bool TMinuitMinimizer::GetCovMatrix ; (; double * ; cov); const. overridevirtual . Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ; The array will be filled as cov[i *ndim + j] The ordering of the variables is the same as in errors and parameter value. This is different from the direct interface of Minuit2 or TMinuit where the values were obtained only to variable parameters ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 670 of file TMinuitMinimizer.cxx. ◆ GetHessianMatrix(). bool TMinuitMinimizer::GetHessianMatrix ; (; double * ; h); const. overridevirtual . Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ; The array will be filled as h[i *ndim + j] ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 682 of file TMinuitMinimizer.cxx. ◆ GetMinosError(). bool TMinuitMinimizer::GetMinosError ; (; unsigned int ; i, . double & ; errLow, . double & ; err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:16459,variab,variable,16459,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,1,['variab'],['variable']
Modifiability,"ries and subentries in a TTree or TChain. More...;  ; class  TEntryListBlock;  Used by TEntryList to store the entry numbers. More...;  ; class  TEntryListFromFile;  Manages entry lists from different files, when they are not loaded in memory at the same time. More...;  ; class  TEventList;   Legacy Code TEventList is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TEventList might still be a valid solution. More...;  ; class  TFriendElement;  A TFriendElement TF describes a TTree object TF in a file. More...;  ; class  ROOT::TIOFeatures;  TIOFeatures provides the end-user with the ability to change the IO behavior of data written via a TTree. More...;  ; class  TLeaf;  A TLeaf describes individual elements of a TBranch See TBranch structure in TTree. More...;  ; class  TLeafB;  A TLeaf for an 8 bit Integer data type. More...;  ; class  TLeafC;  A TLeaf for a variable length string. More...;  ; class  TLeafD;  A TLeaf for a 64 bit floating point data type. More...;  ; class  TLeafD32;  A TLeaf for a 24 bit truncated floating point data type. More...;  ; class  TLeafElement;  A TLeaf for the general case when using the branches created via a TStreamerInfo (i.e. More...;  ; class  TLeafF;  A TLeaf for a 32 bit floating point data type. More...;  ; class  TLeafF16;  A TLeaf for a 24 bit truncated floating point data type. More...;  ; class  TLeafG;  A TLeaf for a 64 bit Integer data type. More...;  ; class  TLeafI;  A TLeaf for an Integer data type. More...;  ; class  TLeafL;  A TLeaf for a 64 bit Integer data type. More...;  ; class  TLeafO;  A TLeaf for a bool data type. More...;  ; class  TLeafObject;  A TLeaf for a general object derived from TObject. More...;  ; class  TLeafS;  A TLeaf for a 16 bit Integer data type. More...;  ; class  TMethodBrowsable;  This helper object allows the browsing of methods of objects stored in branches",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tree.html:3751,variab,variable,3751,doc/master/group__tree.html,https://root.cern,https://root.cern/doc/master/group__tree.html,1,['variab'],['variable']
Modifiability,"ries min and max; Parameters:; type = 1 - histogram of x variable #nvar; = 2 - histogram of y variable #nvar; = 3 - histogram of y_pdf for y #nvar and species #nspecies; = 4 - histogram of x variable #nvar, species #nspecies, WITH sWeights; = 5 - histogram of y variable #nvar, species #nspecies, WITH sWeights. TH1D * GetSWeightsHist(Int_t ixvar, Int_t ispecies, Int_t iyexcl = -1); Returns the histogram of a variable, weithed with sWeights; If histograms have not been already filled, they are filled with default binning 50; If parameter ixvar!=-1, the histogram of x-variable #ixvar is returned for species ispecies; If parameter ixvar==-1, the histogram of y-variable #iyexcl is returned for species ispecies; If the histogram has already been filled and the binning is different from the parameter nbins; all histograms with old binning will be deleted and refilled. void SetTree(TTree* tree); Set the input Tree. void SetTreeSelection(const char* varexp = """", const char* selection = """", Long64_t firstentry = 0); Specifies the variables from the tree to be used for splot. Variables fNx, fNy, fNSpecies and fNEvents should already be set!. In the 1st parameter it is assumed that first fNx variables are x(control variables),; then fNy y variables (discriminating variables),; then fNy*fNSpecies ypdf variables (probability distribution functions of dicriminating; variables for different species). The order of pdfs should be: species0_y0, species0_y1,...; species1_y0, species1_y1,...species[fNSpecies-1]_y0...; The 2nd parameter allows to make a cut; TTree::Draw method description contains more details on specifying expression and selection. Bool_t IsFolder() const; { return kTRUE;}. Int_t GetNevents(); {return fNevents;}. Int_t GetNspecies(); {return fNSpecies;}. TString* GetTreeName(); {return fTreename;}. TString* GetTreeSelection(); {return fSelection;}. TString* GetTreeExpression(); {return fVarexp;}. void SetNX(Int_t nx); {fNx=nx;}. void SetNY(Int_t ny); {fNy=ny;}. void SetN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSPlot.html:20071,variab,variables,20071,root/html528/TSPlot.html,https://root.cern,https://root.cern/root/html528/TSPlot.html,6,['variab'],['variables']
Modifiability,"ries min and max; Parameters:; type = 1 - histogram of x variable #nvar; = 2 - histogram of y variable #nvar; = 3 - histogram of y_pdf for y #nvar and species #nspecies; = 4 - histogram of x variable #nvar, species #nspecies, WITH sWeights; = 5 - histogram of y variable #nvar, species #nspecies, WITH sWeights. TH1D * GetSWeightsHist(Int_t ixvar, Int_t ispecies, Int_t iyexcl = -1); Returns the histogram of a variable, weithed with sWeights; If histograms have not been already filled, they are filled with default binning 50; If parameter ixvar!=-1, the histogram of x-variable #ixvar is returned for species ispecies; If parameter ixvar==-1, the histogram of y-variable #iyexcl is returned for species ispecies; If the histogram has already been filled and the binning is different from the parameter nbins; all histograms with old binning will be deleted and refilled. void SetTree(TTree* tree); Set the input Tree. void SetTreeSelection(const char* varexp = """", const char* selection = """", Long64_t firstentry = 0); Specifies the variables from the tree to be used for splot. Variables fNx, fNy, fNSpecies and fNEvents should already be set!. In the 1st parameter it is assumed that first fNx variables are x(control variables),; then fNy y variables (discriminating variables),; then fNy*fNSpecies ypdf variables (probability distribution functions of dicriminating; variables for different species). The order of pdfs should be: species0_y0, species0_y1,...; species1_y0, species1_y1,...species[fNSpecies-1]_y0...; The 2nd parameter allows to make a cut; TTree::Draw method description contains more details on specifying expression and selection. TSPlot(). Bool_t IsFolder() const; { return kTRUE;}. Int_t GetNevents(); {return fNevents;}. Int_t GetNspecies(); {return fNSpecies;}. TString* GetTreeName(); {return fTreename;}. TString* GetTreeSelection(); {return fSelection;}. TString* GetTreeExpression(); {return fVarexp;}. void SetNX(Int_t nx); {fNx=nx;}. void SetNY(Int_t ny); {fNy=ny;}.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSPlot.html:20630,variab,variables,20630,root/html602/TSPlot.html,https://root.cern,https://root.cern/root/html602/TSPlot.html,4,['variab'],['variables']
Modifiability,"ries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; TList*THashList::GetListForObject(const char* name) const; TList*THashList::GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TList::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tIsLoaded() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*TList::Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*TList::LastLink() const; voidLoad(); virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*TList::MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; Long64_tTSeqCollection",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TListOfDataMembers.html:4318,Inherit,InheritsFrom,4318,root/html602/TListOfDataMembers.html,https://root.cern,https://root.cern/root/html602/TListOfDataMembers.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; TList*THashList::GetListForObject(const char* name) const; TList*THashList::GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TList::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*TList::Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*TList::LastLink() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*TList::MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; Long64_tTSeqCollection::Merge(TCollection* list); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSelectorList.html:4336,Inherit,InheritsFrom,4336,root/html534/TSelectorList.html,https://root.cern,https://root.cern/root/html534/TSelectorList.html,3,['Inherit'],['InheritsFrom']
Modifiability,"ries. Function documentation; MethodCuts(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""MC:150:10000:"", TDirectory* theTargetFile = 0); standard constructor. MethodCuts(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); construction from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); Cuts can only handle classification with 2 classes. void Init( void ); default initialisation called by all constructors. ~MethodCuts( void ); destructor. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; Method <string> Minimisation method; available values are: MC Monte Carlo <default>; GA Genetic Algorithm; SA Simulated annealing. EffMethod <string> Efficiency selection method; available values are: EffSel <default>; EffPDF. VarProp <string> Property of variable 1 for the MC method (taking precedence over the; globale setting. The same values as for the global option are available. Variables 1..10 can be; set this way. CutRangeMin/Max <float> user-defined ranges in which cuts are varied. void ProcessOptions(); process user options; sanity check, do not allow the input variables to be normalised, because this; only creates problems when interpreting the cuts. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); cut evaluation: returns 1.0 if event passed, 0.0 otherwise. void PrintCuts(Double_t effS) const; print cuts. Double_t GetCuts(Double_t effS, Double_t* cutMin, Double_t* cutMax) const; retrieve cut values for given signal efficiency; assume vector of correct size !!. Double_t GetCuts(Double_t effS, vector<Double_t>& cutMin, vector<Double_t>& cutMax) const; retrieve cut values for given signal efficiency. void Train( void ); training method: here the cuts are optimised for the training sample. void TestClassification(); nothing to test. Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodCuts.html:21382,variab,variable,21382,root/html528/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodCuts.html,6,['variab'],['variable']
Modifiability,"riesReshuffled bit set and cannot have friends nor can be added as a friend unless the ""; 1254 ""main tree has a TTreeIndex on the friend tree '%s'. You can also unset the bit manually if you know what you ""; 1255 ""are doing; note that you risk associating wrong TTree entries of the friend with those of the main TTree!"";; 1256 Error(""AddFriend"", msg, reshuffledTreeName, friendTree.GetName());; 1257 return false;; 1258 }; 1259 return true;; 1260}; 1261 ; 1262////////////////////////////////////////////////////////////////////////////////; 1263/// Add a TFriendElement to the list of friends.; 1264///; 1265/// This function:; 1266/// - opens a file if filename is specified; 1267/// - reads a Tree with name treename from the file (current directory); 1268/// - adds the Tree to the list of friends; 1269/// see other AddFriend functions; 1270///; 1271/// A TFriendElement TF describes a TTree object TF in a file.; 1272/// When a TFriendElement TF is added to the list of friends of an; 1273/// existing TTree T, any variable from TF can be referenced in a query; 1274/// to T.; 1275///; 1276/// A tree keeps a list of friends. In the context of a tree (or a chain),; 1277/// friendship means unrestricted access to the friends data. In this way; 1278/// it is much like adding another branch to the tree without taking the risk; 1279/// of damaging it. To add a friend to the list, you can use the TTree::AddFriend; 1280/// method. The tree in the diagram below has two friends (friend_tree1 and; 1281/// friend_tree2) and now has access to the variables a,b,c,i,j,k,l and m.; 1282///; 1283/// \image html ttree_friend1.png; 1284///; 1285/// The AddFriend method has two parameters, the first is the tree name and the; 1286/// second is the name of the ROOT file where the friend tree is saved.; 1287/// AddFriend automatically opens the friend file. If no file name is given,; 1288/// the tree called ft1 is assumed to be in the same file as the original tree.; 1289///; 1290/// tree.AddFriend",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:45524,variab,variable,45524,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"right)\right)^2; \]. is evaluated. The relative error over the test sample ; \[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \]. should not be to low or high compared to \( R\) from the training sample. Also, multiple correlation coefficient from both samples should be fairly close, otherwise one of the samples is not representative of the problem. A large difference in the reduced \( \chi^2\) over the two samples indicate an over fit, and the maximum number of terms in the parameterisation should be reduced.; It's possible to use 4 to further improve the fit, using the test sample.; Christian Holm. Bibliography. Philip R. Bevington and D. Keith Robinson. Data Reduction and Error Analysis for the Physical Sciences. McGraw-Hill, 2 edition, 1992.; R. Brun et al. Long writeup DD/75-23, CERN, 1980.; Gene H. Golub and Charles F. van Loan. Matrix Computations. John Hopkins University Press, Baltimore, 3 edition, 1996.; F. James. Minuit. Long writeup D506, CERN, 1998.; H. Wind. Function parameterization. Proceedings of the 1972 CERN Computing and Data Processing School, volume 72-21 of Yellow report. CERN, 1972.; H. Wind. 1. principal component analysis, 2. pattern recognition for track finding, 3. interpolation and functional representation. Yellow report EP/81-12, CERN, 1981. . Definition at line 15 of file TMultiDimFit.h. Public Types; enum  EMDFPolyType { kMonomials; , kChebyshev; , kLegendre; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:17439,parameteriz,parameterization,17439,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['parameteriz'],['parameterization']
Modifiability,"riginal HTI to be alive. ~HypoTestInverter(); destructor (delete the HypoTestInverterResult). TestStatistic * GetTestStatistic() const; return the test statistic which is or will be used by the class. bool SetTestStatistic(RooStats::TestStatistic& stat); set the test statistic to use. void Clear(); delete contained result and graph. void CreateResults() const; create a new HypoTestInverterResult to hold all computed results. HypoTestInverterResult* GetInterval() const; Run a fixed scan or the automatic scan depending on the configuration; Return if needed a copy of the result object which will be managed by the user. HypoTestResult * Eval(RooStats::HypoTestCalculatorGeneric& hc, bool adaptive, double clsTarget) const; Run the Hypothesis test at a previous configured point; (internal function called by RunOnePoint). bool RunFixedScan(int nBins, double xMin, double xMax) const; Run a Fixed scan in npoints between min and max. bool RunOnePoint(double thisX, bool adaptive = false, double clTarget = -1) const; run only one point at the given POI value. bool RunLimit(double& limit, double& limitErr, double absTol = 0, double relTol = 0, const double* hint = 0) const; run an automatic scan until the desired accurancy is reached; Start by default from the full interval (min,max) of the POI and then via bisection find the line crossing; the target line; Optionally an hint can be provided and the scan will be done closer to that value; If by bisection the desired accuracy will not be reached a fit to the points is performed. SamplingDistribution * GetLowerLimitDistribution(bool rebuild = false, int nToys = 100); get the distribution of lower limit; if rebuild = false (default) it will re-use the results of the scan done; for obtained the observed limit and no extra toys will be generated; if rebuild a new set of B toys will be done and the procedure will be repeted; for each toy. SamplingDistribution * GetUpperLimitDistribution(bool rebuild = false, int nToys = 100); get the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__HypoTestInverter.html:8770,adapt,adaptive,8770,root/html530/RooStats__HypoTestInverter.html,https://root.cern,https://root.cern/root/html530/RooStats__HypoTestInverter.html,3,['adapt'],['adaptive']
Modifiability,"rimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGHorizontal3DLine(const TGWindow* p = 0, UInt_t w = 4, UInt_t h = 2, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); constructor. void SavePrimitive(ostream& out, Option_t* option = """"); Save an vertical 3D line as a C++ statement(s) on output stream out. TGHorizontal3DLine(const TGWindow* p = 0, UInt_t w = 4, UInt_t h = 2, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()). void DrawBorder(). » Author: Fons Rademakers 6/09/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:50; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGHorizontal3DLine.html:17907,Inherit,Inheritance,17907,root/html604/TGHorizontal3DLine.html,https://root.cern,https://root.cern/root/html604/TGHorizontal3DLine.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGHorizontal3DLine(const TGWindow* p = 0, UInt_t w = 4, UInt_t h = 2, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); constructor. void SavePrimitive(ostream& out, Option_t* option = """"); Save an vertical 3D line as a C++ statement(s) on output stream out. TGHorizontal3DLine(const TGWindow* p = 0, UInt_t w = 4, UInt_t h = 2, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()). void DrawBorder(). » Author: Fons Rademakers 6/09/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:51; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGHorizontal3DLine.html:17907,Inherit,Inheritance,17907,root/html602/TGHorizontal3DLine.html,https://root.cern,https://root.cern/root/html602/TGHorizontal3DLine.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; TGTextButton*fRSEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrackEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoEditPropagator(); Slot for EditPropagator. TEveTrackEditor(const TEveTrackEditor& ). TEveTrackEditor& operator=(const TEveTrackEditor& ). virtual ~TEveTrackEditor(); {}. » Last changed: root/eve:$Id: TEveTrackEditor.h 25245 2008-08-25 21:44:09Z matevz $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveTrackEditor.html:19744,Inherit,Inheritance,19744,root/html532/TEveTrackEditor.html,https://root.cern,https://root.cern/root/html532/TEveTrackEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tfValidkTRUE if resource information was processed correctly. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TProofResources(); { }. TProofNodeInfo * GetMaster(). TList * GetSubmasters(). TList * GetWorkers(). Bool_t IsValid() const; { return fValid; }. » Author: Paul Nilsson 7/12/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id: TProofResources.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofResources.html:5655,Inherit,Inheritance,5655,root/html532/TProofResources.html,https://root.cern,https://root.cern/root/html532/TProofResources.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rimitive(ostream& out, Option_t* option = """"); voidselectDefaultAlgorithm(); voidselectFastAlgorithm(); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooVoigtian.html:27872,config,config,27872,root/html530/RooVoigtian.html,https://root.cern,https://root.cern/root/html530/RooVoigtian.html,1,['config'],['config']
Modifiability,"rimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static TStringTVirtualPadEditor::fgEditorNamename of the default pad editor ""Ged""; static TList*fgExtraEditors; static TGedEditor*TGedEditor::fgFrameCreator; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static Int_tfgMaxExtraEditors; static TVirtualPadEditor*TVirtualPadEditor::fgPadEditorsingleton editor dialog; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGedEditor(TCanvas* canvas = 0, UInt_t width = 250, UInt_t height = 400); Constructor. ~TEveGedEditor(); Destructor. void CloseWindow(); Called from window-manger close button.; Unregister from global list and delete the window. void DeleteWindow(); This is exact clone of TGFrame::DeleteWindow().; Needs to be overriden together with CloseWindow() otherwise CINT; goes kaboom in timer execution. TGedFrame* CreateNameFrame(const TGWindow* parent, const char* tab_name); Create name-frame for a tab. TEveElement* GetEveElement() const; Return eve-element if it is the model object. void DisplayElement(TEveElement* re); Show a TEveElement in editor. void DisplayObject(TObject* obj); Show a TObject in editor. void SetModel(TVirtualPad* pad, TObject* obj, Int_t event); Set model object. void Update(TGedFrame* gframe = 0); Virtual method from TGedEditor, called on every change.; Propagates changes to TEveElement and TEveManager. void SpawnNewE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveGedEditor.html:26492,Inherit,Inheritance,26492,root/html602/TEveGedEditor.html,https://root.cern,https://root.cern/root/html602/TEveGedEditor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. const TBox*fBoxbox in pad to which tooltip is associated; TTimer*fDelaypopup delay timer; TGLayoutHints*fL1layout used to place text in frame; TGLabel*fLabelhelp text; const TVirtualPad*fPadpad to which tooltip is associated; const TGFrame*fWindowframe to which tool tip is associated; Int_tfXX position in fWindow where to popup; Int_tfYY position in fWindow where to popup. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGToolTip(const TGWindow* p = 0, const TGFrame* f = 0, const char* text = 0, Long_t delayms = 350); Create a tool tip. P is the tool tips parent window (normally; fClient->GetRoot(), f is the frame to which the tool tip is associated,; text is the tool tip one-liner and delayms is the delay in ms before; the tool tip is shown. TGToolTip(const TGWindow* p, const TBox* b, const char* text, Long_t delayms); Create a tool tip. P is the tool tips parent window (normally; fClient->GetRoot(), box is the area to which the tool tip is associated,; text is the tool tip one-liner and delayms is the delay in ms before; the tool tip is shown. When using this ctor with the box argument; you have to use Reset(const TVirtualPad *parent). TGToolTip(const TBox* b, const char* text, Long_t delayms); Create a tool tip in the parent window gClient->GetRoot(),; box is the area to which the tool tip is associated,; text is the tool tip one-liner and delayms ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGToolTip.html:19773,Inherit,Inheritance,19773,root/html532/TGToolTip.html,https://root.cern,https://root.cern/root/html532/TGToolTip.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ring &name, double val, double step, double lower,; 35 double upper); 36{; 37 MATH_WARN_MSG(""Minimizer::SetLimitedVariable"", ""Setting of limited variable not implemented - set as unlimited"");; 38 MATH_UNUSED(lower);; 39 MATH_UNUSED(upper);; 40 return SetVariable(ivar, name, val, step);; 41}; 42 ; 43/// set a new fixed variable (override if minimizer supports them ); 44bool Minimizer::SetFixedVariable(unsigned int ivar, const std::string &name, double val); 45{; 46 MATH_ERROR_MSG(""Minimizer::SetFixedVariable"", ""Setting of fixed variable not implemented"");; 47 MATH_UNUSED(ivar);; 48 MATH_UNUSED(name);; 49 MATH_UNUSED(val);; 50 return false;; 51}; 52/// set the value of an already existing variable; 53bool Minimizer::SetVariableValue(unsigned int ivar, double value); 54{; 55 MATH_ERROR_MSG(""Minimizer::SetVariableValue"", ""Set of a variable value not implemented"");; 56 MATH_UNUSED(ivar);; 57 MATH_UNUSED(value);; 58 return false;; 59}; 60 ; 61/// set the step size of an already existing variable; 62bool Minimizer::SetVariableStepSize(unsigned int ivar, double value); 63{; 64 MATH_ERROR_MSG(""Minimizer::SetVariableStepSize"", ""Setting an existing variable step size not implemented"");; 65 MATH_UNUSED(ivar);; 66 MATH_UNUSED(value);; 67 return false;; 68}; 69/// set the lower-limit of an already existing variable; 70bool Minimizer::SetVariableLowerLimit(unsigned int ivar, double lower); 71{; 72 MATH_ERROR_MSG(""Minimizer::SetVariableLowerLimit"", ""Setting an existing variable limit not implemented"");; 73 MATH_UNUSED(ivar);; 74 MATH_UNUSED(lower);; 75 return false;; 76}; 77/// set the upper-limit of an already existing variable; 78bool Minimizer::SetVariableUpperLimit(unsigned int ivar, double upper); 79{; 80 MATH_ERROR_MSG(""Minimizer::SetVariableUpperLimit"", ""Setting an existing variable limit not implemented"");; 81 MATH_UNUSED(ivar);; 82 MATH_UNUSED(upper);; 83 return false;; 84}; 85 ; 86/// fix an existing variable; 87bool Minimizer::FixVariable(unsigned int ivar); 88{; 89 MATH_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8cxx_source.html:2093,variab,variable,2093,doc/master/Minimizer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ring &token="""");  Configures connection token (default none) When specified, in URL of webpage such token should be provided as &token=value parameter, otherwise web window will refuse connection. ;  ; void SetDataCallBack (WebWindowDataCallback_t func);  Set call-back function for data, received from the clients via websocket. ;  ; void SetDefaultPage (const std::string &page);  Set content of default window HTML page This page returns when URL address of the window will be requested Either HTML code or file name in the form ""file:/home/user/data/file.htm"" One also can using default locations like ""file:rootui5sys/canv/canvas.html"". ;  ; void SetDisconnectCallBack (WebWindowConnectCallback_t func);  Set call-back function for disconnecting. ;  ; void SetGeometry (unsigned width, unsigned height);  Set window geometry. Will be applied if supported by used web display (like CEF or Chromium) ;  ; void SetMaxQueueLength (unsigned len=10);  configures maximal queue length of data which can be held by window ;  ; void SetNativeOnlyConn (bool on=true);  configures that only native (own-created) connections are allowed ;  ; void SetOperationTmout (float tm=50.);  Set timeout for synchronous WebWindow operations. ;  ; void SetPanelName (const std::string &name);  Configure window to show some of existing JSROOT panels It uses ""file:rootui5sys/panel/panel.html"" as default HTML page At the moment only FitPanel is existing. ;  ; void SetPosition (unsigned x, unsigned y);  Set window position. Will be applied if supported by used web display (like CEF or Chromium) ;  ; void SetRequireAuthKey (bool on);  Configure if authentication key in connection string is required. ;  ; void SetUseCurrentDir (bool on=true);  Configure if window can access local files via currentdir/ path of http server. ;  ; void SetUserArgs (const std::string &args);  Set arbitrary JSON data, which is accessible via conn.getUserArgs() method in JavaScript This JSON code injected into main HTML document into ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html:8610,config,configures,8610,doc/v632/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html,4,['config'],['configures']
Modifiability,"ring & ; json, . bool ; node_ids = false . ). protected . convert JSON into stack array ; Definition at line 164 of file RGeomViewer.cxx. ◆ GetTitle(). const std::string & ROOT::RGeomViewer::GetTitle ; (; ); const. inline . Definition at line 59 of file RGeomViewer.hxx. ◆ GetWindowAddr(). std::string RGeomViewer::GetWindowAddr ; (; ); const. Return web window address (name) used for geometry viewer. ; Definition at line 133 of file RGeomViewer.cxx. ◆ GetWindowUrl(). std::string RGeomViewer::GetWindowUrl ; (; bool ; remote). Return web window URL which can be used for connection See ROOT::RWebWindow::GetUrl docu for more details. ; Definition at line 142 of file RGeomViewer.cxx. ◆ ProcessSignal(). void RGeomViewer::ProcessSignal ; (; const std::string & ; kind). protected . Process signal from geom description when it changed by any means. ; Definition at line 365 of file RGeomViewer.cxx. ◆ SaveAsMacro(). void RGeomViewer::SaveAsMacro ; (; const std::string & ; fname). Save viewer configuration as macro. ; Definition at line 397 of file RGeomViewer.cxx. ◆ SaveImage(). void RGeomViewer::SaveImage ; (; const std::string & ; fname = ""geometry.png"", . int ; width = 0, . int ; height = 0 . ). Produce PNG image of the geometry If web-browser is shown and drawing completed, image is requested from the browser. ; In this case method executed asynchronously - it returns immediately and image will stored shortly afterwards when received from the client Height and width parameters are ignored in that case and derived from actual drawing size in the browser. Another possibility is to invoke headless browser, providing positive width and height parameter explicitely ; Definition at line 231 of file RGeomViewer.cxx. ◆ SelectVolume(). void RGeomViewer::SelectVolume ; (; const std::string & ; volname). Select visible top volume, all other volumes will be disabled. ; Definition at line 84 of file RGeomViewer.cxx. ◆ SendGeometry(). void RGeomViewer::SendGeometry ; (; unsigned ; connid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomViewer.html:6230,config,configuration,6230,doc/v632/classROOT_1_1RGeomViewer.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomViewer.html,1,['config'],['configuration']
Modifiability,"ring & ; json, . bool ; node_ids = false . ). protected . convert JSON into stack array ; Definition at line 172 of file RGeomViewer.cxx. ◆ GetTitle(). const std::string & ROOT::RGeomViewer::GetTitle ; (; ); const. inline . Definition at line 59 of file RGeomViewer.hxx. ◆ GetWindowAddr(). std::string RGeomViewer::GetWindowAddr ; (; ); const. Return web window address (name) used for geometry viewer. ; Definition at line 141 of file RGeomViewer.cxx. ◆ GetWindowUrl(). std::string RGeomViewer::GetWindowUrl ; (; bool ; remote). Return web window URL which can be used for connection See ROOT::RWebWindow::GetUrl docu for more details. ; Definition at line 150 of file RGeomViewer.cxx. ◆ ProcessSignal(). void RGeomViewer::ProcessSignal ; (; const std::string & ; kind). protected . Process signal from geom description when it changed by any means. ; Definition at line 373 of file RGeomViewer.cxx. ◆ SaveAsMacro(). void RGeomViewer::SaveAsMacro ; (; const std::string & ; fname). Save viewer configuration as macro. ; Definition at line 405 of file RGeomViewer.cxx. ◆ SaveImage(). void RGeomViewer::SaveImage ; (; const std::string & ; fname = ""geometry.png"", . int ; width = 0, . int ; height = 0 . ). Produce PNG image of the geometry If web-browser is shown and drawing completed, image is requested from the browser. ; In this case method executed asynchronously - it returns immediately and image will stored shortly afterwards when received from the client Height and width parameters are ignored in that case and derived from actual drawing size in the browser. Another possibility is to invoke headless browser, providing positive width and height parameter explicitely ; Definition at line 239 of file RGeomViewer.cxx. ◆ SelectVolume(). void RGeomViewer::SelectVolume ; (; const std::string & ; volname). Select visible top volume, all other volumes will be disabled. ; Definition at line 92 of file RGeomViewer.cxx. ◆ SendGeometry(). void RGeomViewer::SendGeometry ; (; unsigned ; connid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomViewer.html:6276,config,configuration,6276,doc/master/classROOT_1_1RGeomViewer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomViewer.html,1,['config'],['configuration']
Modifiability,"ring & ; treeName = """", . ULong64_t ; nToProcess = 0, . ULong64_t ; jFirst = 0 . ). Definition at line 296 of file TTreeProcessorMP.cxx. ◆ Process() [4/20]. TList * ROOT::TTreeProcessorMP::Process ; (; const std::string & ; fileName, . TSelector & ; selector, . TEntryList & ; entries, . const std::string & ; treeName = """", . ULong64_t ; nToProcess = 0, . ULong64_t ; jFirst = 0 . ). TSelector-based tree processing: dataset as a single file. ; Definition at line 278 of file TTreeProcessorMP.cxx. ◆ Process() [5/20]. template<class F > . auto ROOT::TTreeProcessorMP::Process ; (; const std::vector< std::string > & ; fileNames, . F ; procFunc, . const std::string & ; treeName = """", . ULong64_t ; nToProcess = 0, . ULong64_t ; jFirst = 0 . ); -> InvokeResult_t<F, std::reference_wrapper<TTreeReader>>. Process a TTree dataset with a functor: version without entry list. ; No TEntryList versions of generic processor.; Template Parameters. Ffunctor returning a pointer to TObject or inheriting classes and taking a TTreeReader& (both enforced at compile-time). Dataset definition: Parameters. [in]fileNamesvector of strings with the paths of the files with the TTree to process ; [in]fileNamestring with the path of the files with the TTree to process ; [in]collectionTFileCollection with the files with the TTree to process ; [in]chainTChain with the files with the TTree to process ; [in]treeTTree to process; [in]treeNameName of the TTree to process ; [in]nToProcessNumber of entries to process (0 means all) ; [in]jFirstFirst entry to process (0 means the first of the first file) . Definition at line 356 of file TTreeProcessorMP.hxx. ◆ Process() [6/20]. template<class F > . auto ROOT::TTreeProcessorMP::Process ; (; const std::vector< std::string > & ; fileNames, . F ; procFunc, . TEntryList & ; entries, . const std::string & ; treeName = """", . ULong64_t ; nToProcess = 0, . ULong64_t ; jFirst = 0 . ); -> InvokeResult_t<F, std::reference_wrapper<TTreeReader>>. Process a TTree dataset with ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TTreeProcessorMP.html:15583,inherit,inheriting,15583,doc/v632/classROOT_1_1TTreeProcessorMP.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TTreeProcessorMP.html,2,['inherit'],['inheriting']
Modifiability,"ring attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooProfileLL(); Default constructor; Should only be used by proof. RooProfileLL(const char* name, const char* title, RooAbsReal& nll, const RooArgSet& observables); Constructor of profile likelihood given input likelihood nll w.r.t; the given set of variables. The input log likelihood is minimized w.r.t; to all other variables of the likelihood at each evaluation and the; value of the global log likelihood minimum is always subtracted. RooProfileLL(const RooProfileLL& other, const char* name = 0); Copy constructor. ~RooProfileLL(); Destructor. const RooArgSet& bestFitParams() const. const RooArgSet& bestFitObs() const. RooAbsReal* createProfile(const RooArgSet& paramsOfInterest); Optimized implementation of createProfile for profile likelihoods.; Return profile of original function in terms of stated parameters; of interest rather than profiling recursively. void initializeMinimizer() const. Double_t evaluate() const; Evaluate profile likelihood by minimizing likelihood w.r.t. all; parameters that are not considered observables of this profile; likelihood object. void validateAbsMin() const; Check that parameters and likelihood value for 'best fit' are still valid. If not,; because the best fit has never been calculated, or because constant parameters have; changed value or parameters have changed const/float status, the minimum is recalculated. Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooProfileLL.html:38778,variab,variables,38778,root/html602/RooProfileLL.html,https://root.cern,https://root.cern/root/html602/RooProfileLL.html,4,['variab'],['variables']
Modifiability,"ring if layout<=0, no any spaces or newlines will be placed between xmlnodes. ;  ; void SetNodeContent (XMLNodePointer_t xmlnode, const char *content, Int_t len=0);  set content of the xmlnode if old node content was exists, it will be replaced ;  ; void SetSkipComments (Bool_t on=kTRUE);  ; void ShiftToNext (XMLNodePointer_t &xmlnode, Bool_t realnode=kTRUE);  shifts specified node to next if realnode==kTRUE, any special nodes in between will be skipped ;  ; void SkipEmpty (XMLNodePointer_t &xmlnode);  Skip all current empty nodes and locate on first ""true"" node. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnlinkFreeNode (XMLNodePointer_t xmlnode);  combined operation. Unlink node and free used memory ;  ; void UnlinkNode (XMLNodePointer_t node);  unlink (detach) xmlnode from parent ;  ; Bool_t ValidateDocument (XMLDocPointer_t, Bool_t=kFALSE);  ; Bool_t ValidateVersion (XMLDocPointer_t doc, const char *version=nullptr);  check that first node is xml processing instruction with correct xml version number ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLEngine.html:8039,inherit,inherited,8039,doc/master/classTXMLEngine.html,https://root.cern,https://root.cern/doc/master/classTXMLEngine.html,1,['inherit'],['inherited']
Modifiability,"ring indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  A buffer for reading values from trees. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsArg; static void setDirtyInhibit (bool flag);  Control global dirty inhibit mode. ;  ; static void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given am",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCategory.html:34712,inherit,inherited,34712,doc/master/classRooAbsCategory.html,https://root.cern,https://root.cern/doc/master/classRooAbsCategory.html,2,['inherit'],['inherited']
Modifiability,"ring message of maximum max length. ;  ; Int_t Recv (Int_t &status, Int_t &kind) override;  Receives a status and a message type. ;  ; Int_t Recv (TMessage *&mess) override;  Receive a TMessage object. ;  ; Int_t RecvRaw (void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Receive a raw buffer of specified length bytes. ;  ; Int_t Send (const char *mess, Int_t kind=kMESS_STRING) override;  Send a character string buffer. ;  ; Int_t Send (const TMessage &mess) override;  Send a TMessage object. ;  ; Int_t Send (Int_t kind) override;  Send a single message opcode. ;  ; Int_t Send (Int_t status, Int_t kind) override;  Send a status and a single message opcode. ;  ; Int_t SendRaw (const void *buffer, Int_t length, ESendRecvOptions opt=kDefault) override;  Send a raw buffer of specified length. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSocket;  TSocket (const char *host, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (const char *host, Int_t port, Int_t tcpwindowsize=-1);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TSocket (const TSocket &s);  TSocket copy ctor. ;  ;  TSocket (Int_t descriptor);  Create a socket. ;  ;  TSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TSocket (TInetAddress address, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (TInetAddress address, Int_t port, Int_t tcpwindowsize=-1);  Create a socket. ;  ; virtual ~TSocket ();  ; UInt_t GetBytesRecv () const;  ; UInt_t GetBytesSent () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Int_t GetDescriptor () const;  ; Int_t GetErrorCode () const;  Returns erro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSSLSocket.html:2270,inherit,inherited,2270,doc/master/classTSSLSocket.html,https://root.cern,https://root.cern/doc/master/classTSSLSocket.html,1,['inherit'],['inherited']
Modifiability,"ring should follow the printf format specification. The value given will be prefixed by % and, if no conversion specifier is given, will be suffixed by the letter g. before being passed to fprintf. If no format is specified for a column, the default is used (aka ${colsize}.${precision}g ). For example: tree->Scan(""a:b:c"","""",""colsize=30 precision=3 col=::20.10:#x:5ld"");; Will print 3 columns, the first 2 columns will be 30 characters long, the third columns will be 20 characters long. The printing format used for the columns (assuming they are numbers) will be respectively: %30.3g %30.3g %20.10g %#x %5ld; d#define d(i)Definition RSha256.hxx:102; g#define g(i)Definition RSha256.hxx:105. Implements TVirtualTreePlayer.; Definition at line 2445 of file TTreePlayer.cxx. ◆ ScanRedirected(). bool TTreePlayer::ScanRedirected ; (; ). inline . Definition at line 118 of file TTreePlayer.h. ◆ SetEstimate(). void TTreePlayer::SetEstimate ; (; Long64_t ; n). overridevirtual . Set number of entries to estimate variable limits. ; Implements TVirtualTreePlayer.; Definition at line 2957 of file TTreePlayer.cxx. ◆ SetScanFileName(). void TTreePlayer::SetScanFileName ; (; const char * ; name). inline . Definition at line 123 of file TTreePlayer.h. ◆ SetScanRedirect(). void TTreePlayer::SetScanRedirect ; (; bool ; on = false). inline . Definition at line 122 of file TTreePlayer.h. ◆ SetTree(). void TTreePlayer::SetTree ; (; TTree * ; t). inlineoverridevirtual . Implements TVirtualTreePlayer.; Definition at line 124 of file TTreePlayer.h. ◆ StartViewer(). void TTreePlayer::StartViewer ; (; Int_t ; ww, . Int_t ; wh . ). overridevirtual . Start the TTreeViewer on this TTree. . ww is the width of the canvas in pixels; wh is the height of the canvas in pixels . Implements TVirtualTreePlayer.; Definition at line 2968 of file TTreePlayer.cxx. ◆ Streamer(). void TTreePlayer::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ Strea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreePlayer.html:49004,variab,variable,49004,doc/master/classTTreePlayer.html,https://root.cern,https://root.cern/doc/master/classTTreePlayer.html,1,['variab'],['variable']
Modifiability,"ring& jobName, const TString& methodTitle, TMVA::DataSetInfo& dsi, const TString& theOption = ""Fisher"", TDirectory* theTargetDir = 0); virtual Bool_tTMVA::MethodBase::MonitorBoost(TMVA::MethodBoost*); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filena",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodFisher.html:11376,Config,Configurable,11376,root/html532/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodFisher.html,1,['Config'],['Configurable']
Modifiability,"ring& name, double val, double step, double upper); set a upper limited variable; since is not supported in TMinuit , just use a artificial large negative value. bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool SetVariableValue(unsigned int , double ); set the value of an existing variable; parameter must exist or return false. bool SetVariableStepSize(unsigned int , double ); set the step-size of an existing variable; parameter must exist or return false. bool SetVariableLowerLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableUpperLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an existing variable; parameter must exist or return false. bool FixVariable(unsigned int ); Fix an existing variable. bool ReleaseVariable(unsigned int ); Fix an existing variable. bool IsFixedVariable(unsigned int ) const; query if variable is fixed. bool GetVariableSettings(unsigned int , ROOT::Fit::ParameterSettings& ) const; retrieve variable settings (all set info on the variable). std::string VariableName(unsigned int ivar) const; return the variable name. int VariableIndex(const string& name) const; return variable index. bool Minimize(); perform the minimization using the algorithm chosen previously by the user; By default Migrad is used.; Return true if the found minimum is valid and update internal chached values of; minimum values, errors and covariance matrix.; Status of minimizer is set to:; migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult. void RetrieveParams(); retrieve from TMinuit minimum parameter values; and errors. void RetrieveErrorMatrix(); get covariance error matrix from TMinuit; when some parameters are fixed filled the corresponding rows and column with zero's. unsigned int NCalls() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMinuitMinimizer.html:9806,variab,variable,9806,root/html534/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html534/TMinuitMinimizer.html,2,['variab'],['variable']
Modifiability,"ring& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); virtual voidGetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; virtual voidInit(); voidInitEventSample(); voidInitMonitorNtuple(); Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidMakeClassLinear(ostream&) const; voidMakeClassRuleCuts(ostream&) const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t *const err, Double_t *const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); voidTrainJFRuleFit(); voidTrainTMVARuleFit(); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareOptions(); virtual voidProcessOptions(). Data Memb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodRuleFit.html:13824,Config,Configurable,13824,root/html534/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodRuleFit.html,6,['Config'],['Configurable']
Modifiability,"ring& theWeightFile, TDirectory* theTargetDir = __null); TMVA::MethodHMatrixMethodHMatrix(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodHMatrix&operator=(const TMVA::MethodHMatrix&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodHMatrix.html:10668,Config,Configurable,10668,root/html602/TMVA__MethodHMatrix.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodHMatrix.html,2,['Config'],['Configurable']
Modifiability,"ring& theWeightFile, TDirectory* theTargetDir = __null); TMVA::MethodRuleFitMethodRuleFit(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodRuleFit&operator=(const TMVA::MethodRuleFit&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodRuleFit.html:10752,Config,Configurable,10752,root/html602/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodRuleFit.html,2,['Config'],['Configurable']
Modifiability,"ring&TMVA::MethodBase::GetMethodName() const; TMVA::Types::EMVATMVA::MethodBase::GetMethodType() const; TStringTMVA::MethodBase::GetMethodTypeName() const; Double_tGetMinFracNEve() const; virtual vector<Float_t>TMVA::MethodBase::GetMulticlassEfficiency(vector<std::vector<Float_t> >& purity); virtual vector<Float_t>TMVA::MethodBase::GetMulticlassTrainingEfficiency(vector<std::vector<Float_t> >& purity); virtual const vector<Float_t>&TMVA::MethodBase::GetMulticlassValues(); virtual Double_tGetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); virtual const char*TMVA::MethodBase::GetName() const; Int_tGetNCuts() const; UInt_tTMVA::MethodBase::GetNEvents() const; UInt_tTMVA::MethodBase::GetNTargets() const; Int_tGetNTrees() const; UInt_tTMVA::MethodBase::GetNvar() const; UInt_tTMVA::MethodBase::GetNVariables() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual Double_tTMVA::MethodBase::GetProba(Double_t mvaVal, Double_t ap_sig); const TStringTMVA::MethodBase::GetProbaName() const; TMVA::DecisionTree::EPruneMethodGetPruneMethod() const; Double_tGetPruneStrength() const; virtual Double_tTMVA::MethodBase::GetRarity(Double_t mvaVal, TMVA::Types::ESBType reftype = Types::kBackground) const; virtual voidTMVA::MethodBase::GetRegressionDeviation(UInt_t tgtNum, TMVA::Types::ETreeType type, Double_t& stddev, Double_t& stddev90Percent) const; virtual const vector<Float_t>&TMVA::MethodBase::GetRegressionValues(); Int_tGetRFNendnodes() const; Int_tGetRFNrules() const; const TStringGetRFWorkDir() const; Double_tTMVA::MethodBase::GetRMS(Int_t ivar) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TH1F* histS, TH1F* histB) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TMVA::PDF* pdfS = 0, TMVA::PDF* pdfB = 0) const; const TMVA::RuleFit*GetRuleFitConstPtr() const; TMVA::RuleFit*GetRuleFitPtr(); virtual Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodRuleFit.html:5044,Config,Configurable,5044,root/html532/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodRuleFit.html,1,['Config'],['Configurable']
Modifiability,"ring&TMVA::MethodBase::GetMethodName() const; TMVA::Types::EMVATMVA::MethodBase::GetMethodType() const; TStringTMVA::MethodBase::GetMethodTypeName() const; Double_tGetMinFracNEve() const; virtual vector<Float_t>TMVA::MethodBase::GetMulticlassEfficiency(vector<std::vector<Float_t> >& purity); virtual vector<Float_t>TMVA::MethodBase::GetMulticlassTrainingEfficiency(vector<std::vector<Float_t> >& purity); virtual const vector<Float_t>&TMVA::MethodBase::GetMulticlassValues(); virtual Double_tGetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); virtual const char*TMVA::MethodBase::GetName() const; Int_tGetNCuts() const; UInt_tTMVA::MethodBase::GetNEvents() const; UInt_tTMVA::MethodBase::GetNTargets() const; Int_tGetNTrees() const; UInt_tTMVA::MethodBase::GetNvar() const; UInt_tTMVA::MethodBase::GetNVariables() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual Double_tTMVA::MethodBase::GetProba(const TMVA::Event* ev); virtual Double_tTMVA::MethodBase::GetProba(Double_t mvaVal, Double_t ap_sig); const TStringTMVA::MethodBase::GetProbaName() const; TMVA::DecisionTree::EPruneMethodGetPruneMethod() const; Double_tGetPruneStrength() const; virtual Double_tTMVA::MethodBase::GetRarity(Double_t mvaVal, TMVA::Types::ESBType reftype = Types::kBackground) const; virtual voidTMVA::MethodBase::GetRegressionDeviation(UInt_t tgtNum, TMVA::Types::ETreeType type, Double_t& stddev, Double_t& stddev90Percent) const; virtual const vector<Float_t>&TMVA::MethodBase::GetRegressionValues(); const vector<Float_t>&TMVA::MethodBase::GetRegressionValues(const TMVA::Event *const ev); Int_tGetRFNendnodes() const; Int_tGetRFNrules() const; const TStringGetRFWorkDir() const; Double_tTMVA::MethodBase::GetRMS(Int_t ivar) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TH1D* histS, TH1D* histB) const; virtual Double_tTMVA::MethodBase",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodRuleFit.html:5131,Config,Configurable,5131,root/html534/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodRuleFit.html,1,['Config'],['Configurable']
Modifiability,"ring(gMainDict, const_cast<char *>(label), bound) == 0;; 535 Py_DECREF(bound);; 536 ; 537 return bOk;; 538 }; 539 }; 540 ; 541 return kFALSE;; 542}; 543 ; 544////////////////////////////////////////////////////////////////////////////////; 545/// Enter an interactive python session (exit with ^D). State is preserved; 546/// between successive calls.; 547 ; 548void TPython::Prompt(); 549{; 550 // setup; 551 if (!Initialize()) {; 552 return;; 553 }; 554 ; 555 PyGILRAII gilRaii;; 556 ; 557 // enter i/o interactive mode; 558 PyRun_InteractiveLoop(stdin, const_cast<char *>(""\0""));; 559}; 560 ; 561////////////////////////////////////////////////////////////////////////////////; 562/// Test whether the type of the given pyobject is of CPPInstance type or any; 563/// derived type.; 564 ; 565Bool_t TPython::CPPInstance_Check(PyObject *pyobject); 566{; 567 // setup; 568 if (!Initialize()); 569 return kFALSE;; 570 ; 571 PyGILRAII gilRaii;; 572 ; 573 // detailed walk through inheritance hierarchy; 574 return CPyCppyy::Instance_Check(pyobject);; 575}; 576 ; 577////////////////////////////////////////////////////////////////////////////////; 578/// Test whether the type of the given pyobject is CPPinstance type.; 579 ; 580Bool_t TPython::CPPInstance_CheckExact(PyObject *pyobject); 581{; 582 // setup; 583 if (!Initialize()); 584 return kFALSE;; 585 ; 586 PyGILRAII gilRaii;; 587 ; 588 // direct pointer comparison of type member; 589 return CPyCppyy::Instance_CheckExact(pyobject);; 590}; 591 ; 592////////////////////////////////////////////////////////////////////////////////; 593/// Test whether the type of the given pyobject is of CPPOverload type or any; 594/// derived type.; 595 ; 596Bool_t TPython::CPPOverload_Check(PyObject *pyobject); 597{; 598 // setup; 599 if (!Initialize()); 600 return kFALSE;; 601 ; 602 PyGILRAII gilRaii;; 603 ; 604 // detailed walk through inheritance hierarchy; 605 return CPyCppyy::Overload_Check(pyobject);; 606}; 607 ; 608//////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPython_8cxx_source.html:18961,inherit,inheritance,18961,doc/master/TPython_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPython_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"ring);  translates options from option string into TMlpANN language ;  ; void DeclareOptions ();  define the options (their key words) that can be set in the option string ;  ; void Init (void);  default initialisations ;  ; void ProcessOptions ();  builds the neural network as specified by the user ;  . Private Attributes; TString fHiddenLayer;  string containing the hidden layer structure ;  ; TString fLayerSpec;  Layer specification option. ;  ; TString fLearningMethod;  the learning method (given via option string) ;  ; TTree * fLocalTrainingTree;  local copy of training tree ;  ; TMultiLayerPerceptron * fMLP;  the TMLP ;  ; TString fMLPBuildOptions;  option string to build the mlp ;  ; Int_t fNcycles;  number of training cycles ;  ; Double_t fValidationFraction;  fraction of events in training tree used for cross validation ;  . Additional Inherited Members;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TMVA::MethodBase; Bool_t fSetupCompleted;  ; TrainingHistory fTrainHistory;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TMVA::MethodBase; Types::EAnalysisType fAnalysisType;  ; UInt_t fBackgroundClass;  ; bool fExitFromTraining = false;  ; std::vector< TString > * fInputVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodTMlpANN.html:27074,inherit,inherited,27074,doc/master/classTMVA_1_1MethodTMlpANN.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodTMlpANN.html,2,['inherit'],['inherited']
Modifiability,"ring,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,int>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registered name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 30 14:31:20 2015 » Last generated: 2015-06-30 14:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction1PdfBinding_double_int_.html:46381,variab,variable,46381,root/html602/RooCFunction1PdfBinding_double_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction1PdfBinding_double_int_.html,2,['variab'],['variable']
Modifiability,"ring::Tokenize(TString& tok, Ssiz_t& from, const char* delim = "" "") const; voidTString::ToLower(); voidTString::ToUpper(); static TStringTString::UItoa(UInt_t value, Int_t base); static TStringTString::ULLtoa(ULong64_t value, Int_t base); static voidTString::WriteString(TBuffer& b, const TString* a). protected:. static Ssiz_tTString::AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap); static Ssiz_tTString::Align(Ssiz_t s); voidTString::AssertElement(Ssiz_t nc) const; voidTString::Clobber(Ssiz_t nc); voidTString::InitChar(char c); static Ssiz_tTString::Recommend(Ssiz_t s). Data Members; public:. static TString::EStripTypeTString::kBoth; static TString::ECaseCompareTString::kExact; static TString::ECaseCompareTString::kIgnoreCase; static TString::EStripTypeTString::kLeading; static const Ssiz_tTString::kNPOS; static TString::EStripTypeTString::kTrailing. protected:. TString::Rep_tTString::fRep! String data; static TString::(anonymous)TString::kAlignment. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGString(const TGString* s); cconstructor. void Draw(Drawable_t id, GContext_t gc, Int_t x, Int_t y); Draw string. void DrawWrapped(Drawable_t id, GContext_t gc, Int_t x, Int_t y, UInt_t w, FontStruct_t font); Draw a string in a column with width w. If string is longer than; w wrap it to next line. Int_t GetLines(FontStruct_t font, UInt_t w); Get number of lines of width w the string would take using a certain font. TGString(); { }. TGString(const char* s); { }. TGString(Int_t number); { *this += number; }. TGString(const TGString* s). virtual ~TGString(); { }. Int_t GetLength() const; { return Length(); }. const char * GetString() const; { return Data(); }. void SetString(const char* s); { *this = s; }. » Author: Fons Rademakers 05/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:57; This page has been automatically generated. For comments or suggestions r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGString.html:8780,Inherit,Inheritance,8780,root/html604/TGString.html,https://root.cern,https://root.cern/root/html604/TGString.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ring::Tokenize(TString& tok, Ssiz_t& from, const char* delim = "" "") const; voidTString::ToLower(); voidTString::ToUpper(); static TStringTString::UItoa(UInt_t value, Int_t base); static TStringTString::ULLtoa(ULong64_t value, Int_t base); static voidTString::WriteString(TBuffer& b, const TString* a). protected:. static Ssiz_tTString::AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap); static Ssiz_tTString::Align(Ssiz_t s); voidTString::AssertElement(Ssiz_t nc) const; voidTString::Clobber(Ssiz_t nc); voidTString::InitChar(char c); static Ssiz_tTString::Recommend(Ssiz_t s). Data Members; public:. static TString::EStripTypeTString::kBoth; static TString::ECaseCompareTString::kExact; static TString::ECaseCompareTString::kIgnoreCase; static TString::EStripTypeTString::kLeading; static const Ssiz_tTString::kNPOS; static TString::EStripTypeTString::kTrailing. protected:. TString::Rep_tTString::fRep! String data; static TString::(anonymous)TString::kAlignment. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGString(const TGString* s); cconstructor. void Draw(Drawable_t id, GContext_t gc, Int_t x, Int_t y); Draw string. void DrawWrapped(Drawable_t id, GContext_t gc, Int_t x, Int_t y, UInt_t w, FontStruct_t font); Draw a string in a column with width w. If string is longer than; w wrap it to next line. Int_t GetLines(FontStruct_t font, UInt_t w); Get number of lines of width w the string would take using a certain font. TGString(); { }. TGString(const char* s); { }. TGString(Int_t number); { *this += number; }. TGString(const TGString* s). virtual ~TGString(); { }. Int_t GetLength() const; { return Length(); }. const char * GetString() const; { return Data(); }. void SetString(const char* s); { *this = s; }. » Author: Fons Rademakers 05/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:57; This page has been automatically generated. For comments or suggestions r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGString.html:8724,Inherit,Inheritance,8724,root/html602/TGString.html,https://root.cern,https://root.cern/root/html602/TGString.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxypeak; RooRealProxytail; RooRealProxywidth; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNovosibirsk(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _peak, RooAbsReal& _width, RooAbsReal& _tail); The two addresses refer to our first dependent variable and; parameter, respectively, as declared in the rdl file. RooNovosibirsk(const RooNovosibirsk& other, const char* name = 0). Double_t evaluate() const; If tail=eta=0 the Belle distribution becomes gaussian. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. RooNovosibirsk(); Your constructor needs a name and title and then a list of the; dependent variables and parameters used by this PDF. Use an; underscore in the variable names to distinguish them from your; own local versions. {}. TObject* clone(const char* newname) const; { return new RooNovosibirsk(*this,newname);	}. virtual ~RooNovosibirsk(); An empty constructor is usually ok. { }. » Last changed: Tue Jun 2 15:32:36 2015 » Last generated: 2015-06-02 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooNovosibirsk.html:45560,variab,variables,45560,root/html604/RooNovosibirsk.html,https://root.cern,https://root.cern/root/html604/RooNovosibirsk.html,4,['variab'],"['variable', 'variables']"
Modifiability,"ringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; const ROOT::Math::IBaseFunctionOneDim*funcFunctor; RooRealProxyvarArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooFunctor1DPdfBinding.html:44366,config,configuration,44366,root/html602/RooFunctor1DPdfBinding.html,https://root.cern,https://root.cern/root/html602/RooFunctor1DPdfBinding.html,8,['config'],['configuration']
Modifiability,"ringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Bool_tRooResolutionModel::_ownBasisFlag indicating ownership of _basis ; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyRooResolutionModel::xDependent/convolution variable.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooTruthModel.html:40421,config,configuration,40421,root/html528/RooTruthModel.html,https://root.cern,https://root.cern/root/html528/RooTruthModel.html,3,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"ringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction2PdfBinding_double_int_int_.html:42366,config,configuration,42366,root/html534/RooCFunction2PdfBinding_double_int_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction2PdfBinding_double_int_int_.html,4,['config'],['configuration']
Modifiability,"ringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction2PdfBinding_double_unsigned_int_double_.html:44663,config,configuration,44663,root/html602/RooCFunction2PdfBinding_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction2PdfBinding_double_unsigned_int_double_.html,8,['config'],['configuration']
Modifiability,"ringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxyalphaInterpolation parameter; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxypdf1First input shape; RooRealProxypdf2Second input shape; RooRealProxyxObservable.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooIntegralMorph.html:44465,config,configuration,44465,root/html528/RooIntegralMorph.html,https://root.cern,https://root.cern/root/html528/RooIntegralMorph.html,1,['config'],['configuration']
Modifiability,"ringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsRealLValue(const char* name, const char* title, const char* unit = """"); Constructor. RooAbsRealLValue(const RooAbsRealLValue& other, const char* name =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsRealLValue.html:40559,config,configuration,40559,root/html602/RooAbsRealLValue.html,https://root.cern,https://root.cern/root/html602/RooAbsRealLValue.html,4,['config'],['configuration']
Modifiability,"ringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsSelfCachedReal(const char* name, const char* title, Int_t ipOrder = 0); Constructor. RooAbsSelfCachedReal(const RooAbsSelfCachedReal& other, const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsSelfCachedReal.html:38303,config,configuration,38303,root/html602/RooAbsSelfCachedReal.html,https://root.cern,https://root.cern/root/html602/RooAbsSelfCachedReal.html,4,['config'],['configuration']
Modifiability,"ringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooGenProdProj(); Default constructor. RooGenProdProj(const char* name, const char* title, const RooArgSet& _prodSet, const RooArgSet& _intSet, const RooArgS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooGenProdProj.html:37305,config,configuration,37305,root/html602/RooGenProdProj.html,https://root.cern,https://root.cern/root/html602/RooGenProdProj.html,4,['config'],['configuration']
Modifiability,"ringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooProduct(); Default constructor. ~RooProduct(); Destructor. RooProduct(const char* name, const char* title, const RooArgList& _prodSet); Construct function",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooProduct.html:36711,config,configuration,36711,root/html602/RooProduct.html,https://root.cern,https://root.cern/root/html602/RooProduct.html,4,['config'],['configuration']
Modifiability,"ringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Bool_t_disableCacheFlag to run object in passthrough (= non-caching mode). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsCachedReal(const char* name, const char* title, Int_t ipOrder = 0)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsCachedReal.html:38094,config,configuration,38094,root/html602/RooAbsCachedReal.html,https://root.cern,https://root.cern/root/html602/RooAbsCachedReal.html,4,['config'],['configuration']
Modifiability,"ringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooListProxy_catListAccept/reject categories; RooListProxy_effFuncListEfficiency functions per category; Bool_t_ignoreNonVisibleIgnore combination of only rejects (since invisible). Class Charts. Inheritance; Inherited Members; Includes; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMultiBinomial.html:36954,config,configuration,36954,root/html602/RooMultiBinomial.html,https://root.cern,https://root.cern/root/html602/RooMultiBinomial.html,4,['config'],['configuration']
Modifiability,"ringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TIterator*_boundIter! do not persist; RooListProxy_boundaryList; TIterator*_coefIter! do not persist; RooListProxy_coefList; Bool_t_interpolate; RooRealProxy_x. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStepFunction.html:36855,config,configuration,36855,root/html602/RooStepFunction.html,https://root.cern,https://root.cern/root/html602/RooStepFunction.html,4,['config'],['configuration']
Modifiability,"ringTMVA::MethodBase::GetTrainingTMVAVersionString() const; Double_tTMVA::MethodBase::GetTrainTime() const; TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; TStringTMVA::MethodBase::GetWeightFileName() const; Double_tTMVA::MethodBase::GetXmax(Int_t ivar) const; Double_tTMVA::MethodBase::GetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTMVA::IMethod::HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual ULong_tTObject::Hash() const; Bool_tTMVA::MethodBase::HasMVAPdfs() const; TMVA::IMethodTMVA::IMethod::IMethod(); TMVA::IMethodTMVA::IMethod::IMethod(const TMVA::IMethod&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTMVA::MethodBase::Init(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTMVA::MethodBase::IsSignalLike(); virtual Bool_tTMVA::MethodBase::IsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTMVA::MethodBase::MakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TMVA::MethodBaseTMVA::MethodBase::MethodBase(const TMVA::MethodBase&); TMVA::MethodBaseTMVA::MethodBase::MethodBase(TMVA::Types::EMVA methodType, TMVA::DataSetInfo& dsi, const TString& weightFile, TDirectory* theBaseDir = 0); TMVA::MethodBaseTMVA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCompositeBase.html:7967,Inherit,InheritsFrom,7967,root/html602/TMVA__MethodCompositeBase.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCompositeBase.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ringTMVA::MethodBase::GetTrainingTMVAVersionString() const; Double_tTMVA::MethodBase::GetTrainTime() const; TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; TStringTMVA::MethodBase::GetWeightFileName() const; Double_tTMVA::MethodBase::GetXmax(Int_t ivar) const; Double_tTMVA::MethodBase::GetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTMVA::IMethod::HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual ULong_tTObject::Hash() const; Bool_tTMVA::MethodBase::HasMVAPdfs() const; TMVA::IMethodTMVA::IMethod::IMethod(); TMVA::IMethodTMVA::IMethod::IMethod(const TMVA::IMethod&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTMVA::MethodBase::Init(); voidInitANNBase(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTMVA::MethodBase::IsSignalLike(); virtual Bool_tTMVA::MethodBase::IsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTMVA::MethodBase::MakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TMVA::MethodANNBaseMethodANNBase(const TMVA::MethodANNBase&); TMVA::MethodANNBaseMethodANNBase(TMVA::Types::EMVA methodType, TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir); TMVA::MethodANNBa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodANNBase.html:7691,Inherit,InheritsFrom,7691,root/html602/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodANNBase.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ring fName;  name of picture ;  ; Pixmap_t fPic;  picture pixmap ;  ; Bool_t fScaled;  kTRUE if picture is scaled ;  ;  Protected Attributes inherited from TRefCnt; UInt_t fRefs;  . Static Protected Attributes; static TGGC * fgSelectedGC = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TRefCnt; enum  EReferenceFlag { kStaticInit; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGPicture.h>. Inheritance diagram for TGSelectedPicture:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGSelectedPicture() [1/2]. TGSelectedPicture::TGSelectedPicture ; (; const TGSelectedPicture & ; gp). inlineprotected . Definition at line 75 of file TGPicture.h. ◆ TGSelectedPicture() [2/2]. TGSelectedPicture::TGSelectedPicture ; (; const TGClient * ; client, . const TGPicture * ; p . ). Create a ""selected"" looking picture based on the original TGPicture. ; Definition at line 396 of file TGPicture.cxx. ◆ ~TGSelectedPicture(). TGSelectedPicture::~TGSelectedPicture ; (; ). override . Delete selected picture. ; Definition at line 430 of file TGPicture.cxx. Member Function Documentation. ◆ Class(). static TClass * TGSelectedPicture::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSelectedPicture.html:11957,inherit,inherited,11957,doc/master/classTGSelectedPicture.html,https://root.cern,https://root.cern/doc/master/classTGSelectedPicture.html,2,['inherit'],['inherited']
Modifiability,"ring fTitle;  . Static Protected Attributes; static std::map< std::string, IFace * > * _hooks =nullptr;  ; static RooFactoryWSTool * _of = nullptr;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooFactoryWSTool.h>. Inheritance diagram for RooFactoryWSTool:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooFactoryWSTool() [1/2]. RooFactoryWSTool::RooFactoryWSTool ; (; RooWorkspace & ; ws). inline . Definition at line 52 of file RooFactoryWSTool.h. ◆ RooFactoryWSTool() [2/2]. RooFactoryWSTool::RooFactoryWSTool ; (; const RooFactoryWSTool & ; ). delete . Member Function Documentation. ◆ add(). RooAddPdf * RooFactoryWSTool::add ; (; const char * ; objName, . const char * ; specList, . bool ; recursiveCoefs = false . ). Definition at line 476 of file RooFactoryWSTool.cxx. ◆ ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFactoryWSTool.html:20591,inherit,inherited,20591,doc/master/classRooFactoryWSTool.html,https://root.cern,https://root.cern/doc/master/classRooFactoryWSTool.html,1,['inherit'],['inherited']
Modifiability,"ring fgDefaultOption = "">"";  Default Arrow shapes. ;  . Additional Inherited Members;  Public Types inherited from TLine; enum  { kLineNDC = (1ULL << ( 14 )); , kVertical = (1ULL << ( 15 )); , kHorizontal = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TArrow.h>. Inheritance diagram for TArrow:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TArrow() [1/3]. TArrow::TArrow ; (; ). Arrow default constructor. ; Definition at line 47 of file TArrow.cxx. ◆ TArrow() [2/3]. TArrow::TArrow ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2, . Float_t ; arrowsize = 0.05, . Option_t * ; option = "">"" . ). Arrow normal constructor. ; Define an arrow between points x1,y1 and x2,y2 the arrowsize is in percentage of the pad height Opening angle between the two sides of the arrow is fAngle (60 degrees) option = "">"" -------->; option = ""|->"" |------->; option = ""<"" <--------; option = ""<-|"" <-------|; option = ""->-"" ---->----; option = ""-<-"" ----<----; option = ""-|>-"" ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArrow.html:19929,inherit,inherited,19929,doc/master/classTArrow.html,https://root.cern,https://root.cern/doc/master/classTArrow.html,2,['inherit'],['inherited']
Modifiability,"rint extras of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; virtual void printTree (std::ostream &os, TString indent="""") const;  Interface for tree structure printing of object. ;  ; virtual void printValue (std::ostream &os) const;  Interface to print value of object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGraphAsymmErrors; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGraph; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t CompareArg (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if point number ""left""'s argument (angle with respect to positive x-axis) is bigger than that of point number ""right"". ;  ; static Bool_t CompareRadius (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if point number ""left""'s distance to origin is bigger than that of point number ""right"". ;  ; static Bool_t CompareX (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if fX[left] > fX[right]. Can be used by Sort. ;  ; static Bool_t CompareY (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if fY[left] > fY[right]. Can be used by Sort. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHist.html:33357,inherit,inherited,33357,doc/master/classRooHist.html,https://root.cern,https://root.cern/doc/master/classRooHist.html,2,['inherit'],['inherited']
Modifiability,"rint streams configuration; RooMsgService::instance().Print();; cout << endl;; ; // Add Integration topic to existing INFO stream; RooMsgService::instance().getStream(1).addTopic(Integration);; ; // Construct integral over gauss to demonstrate new message stream; std::unique_ptr<RooAbsReal> igauss{gauss.createIntegral(x)};; igauss->Print();; ; // Print streams configuration in verbose, which also shows inactive streams; cout << endl;; RooMsgService::instance().Print();; cout << endl;; ; // Remove stream; RooMsgService::instance().getStream(1).removeTopic(Integration);; ; // E x a m p l e s o f p d f v a l u e t r a c i n g s t r e a m; // -----------------------------------------------------------------------; ; // Show DEBUG level message on function tracing, trace RooGaussian only; RooMsgService::instance().addStream(DEBUG, Topic(Tracing), ClassName(""RooGaussian""));; ; // Perform a fit to generate some tracing messages; model.fitTo(*data, Verbose(true));; ; // Reset message service to default stream configuration; RooMsgService::instance().reset();; ; // Show DEBUG level message on function tracing on all objects, redirect output to file; RooMsgService::instance().addStream(DEBUG, Topic(Tracing), OutputFile(""rf506_debug.log""));; ; // Perform a fit to generate some tracing messages; model.fitTo(*data, Verbose(true));; ; // Reset message service to default stream configuration; RooMsgService::instance().reset();; ; // E x a m p l e o f a n o t h e r d e b u g g i n g s t r e a m; // ---------------------------------------------------------------------; ; // Show DEBUG level messages on client/server link state management; RooMsgService::instance().addStream(DEBUG, Topic(LinkStateMgmt));; RooMsgService::instance().Print(""v"");; ; // Clone composite pdf g to trigger some link state management activity; RooAbsArg *gprime = gauss.cloneTree();; gprime->Print();; ; // Reset message service to default stream configuration; RooMsgService::instance().reset();; }; DEBUG#define",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf506__msgservice_8C.html:2596,config,configuration,2596,doc/master/rf506__msgservice_8C.html,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html,1,['config'],['configuration']
Modifiability,"rintLevel(-1));; auto hcorr = fitres->correlationHist();; ; // E x t r a c t p o s t f i t d i s t r i b u t i o n; // a n d p l o t w i t h i n i t i a l; // h i s t o g r a m; // ---------------------------------------------; auto postfit_hist = morphfunc.createTH1(""morphing_postfit_hist"");; RooDataHist postfit_dh(""morphing_postfit_dh"", ""morphing_postfit_dh"", RooArgList(obsvar), postfit_hist);; ; auto frame0 = obsvar.frame(Title(""Fitted histogram of p_{T}^{V}""));; postfit_dh.plotOn(frame0, Name(""postfit_dist""), DrawOption(""C""), LineColor(kBlue), DataError(RooAbsData::None),; XErrorSize(0));; pseudo_dh->plotOn(frame0, Name(""input""));; ; // D r a w p l o t s o n c a n v a s; // ---------------------------------------------; TCanvas *c1 = new TCanvas(""fig3"", ""fig3"", 800, 400);; c1->Divide(2, 1);; ; c1->cd(1);; gPad->SetLeftMargin(0.15);; gPad->SetRightMargin(0.05);; ; model.paramOn(frame0, Layout(0.50, 0.75, 0.9), Parameters(config.couplings));; frame0->GetXaxis()->SetTitle(""p_{T}^{V}"");; frame0->Draw();; ; c1->cd(2);; gPad->SetLeftMargin(0.15);; gPad->SetRightMargin(0.15);; gStyle->SetPaintTextFormat(""4.1f"");; gStyle->SetOptStat(0);; hcorr->SetMarkerSize(3.);; hcorr->SetTitle(""correlation matrix"");; hcorr->GetYaxis()->SetTitleOffset(1.4);; hcorr->GetYaxis()->SetLabelSize(0.1);; hcorr->GetXaxis()->SetLabelSize(0.1);; hcorr->GetYaxis()->SetBinLabel(1, ""c_{HDD}"");; hcorr->GetYaxis()->SetBinLabel(2, ""c_{Hl^{(3)}}"");; hcorr->GetYaxis()->SetBinLabel(3, ""c_{Hq^{(3)}}"");; hcorr->GetXaxis()->SetBinLabel(3, ""c_{HDD}"");; hcorr->GetXaxis()->SetBinLabel(2, ""c_{Hl^{(3)}}"");; hcorr->GetXaxis()->SetBinLabel(1, ""c_{Hq^{(3)}}"");; hcorr->Draw(""colz text"");; c1->SaveAs(""rf712_lagrangianmorphfit.png"");; }; RooDataHist.h; RooFitResult.h; RooLagrangianMorphFunc.h; RooPlot.h; RooRealVar.h; kBlue@ kBlueDefinition Rtypes.h:66; TAxis.h; TCanvas.h; TH2.h; gROOT#define gROOTDefinition TROOT.h:406; TStyle.h; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html:4122,coupling,couplings,4122,doc/master/rf712__lagrangianmorphfit_8C.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html,1,['coupling'],['couplings']
Modifiability,"rintable ();  ; virtual ~RooPrintable ();  ; virtual StyleOption defaultPrintStyle (Option_t *opt) const;  ; virtual void printExtras (std::ostream &os) const;  Interface to print extras of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooFormulaVar * identity ();  Return identity formula pointer. ;  ;  Static Public Member Functions inherited from RooAbsPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig * defaultGeneratorConfig ();  Returns the default numeric MC generator configuration for all RooAbsReals. ;  ; static int verboseEval ();  Return global level of verbosity for p.d.f. evaluations. ;  ; static void verboseEval (Int_t stat);  Change global level of verbosity for p.d.f. evaluations. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current ev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooResolutionModel.html:58483,inherit,inherited,58483,doc/master/classRooResolutionModel.html,https://root.cern,https://root.cern/doc/master/classRooResolutionModel.html,2,"['config', 'inherit']","['configuration', 'inherited']"
Modifiability,"rintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. static Bool_t_addDirStatusstatic flag controlling AutoDirectoryAdd feature; Double_t_defYmaxDefault maximum for Yaxis (as calculated from contents); Double_t_defYminDefault minimum for Yaxis (as calculated from contents); TDirectory*_dir! non-persistent; TH1*_histHistogram that we uses as basis for drawing the content; RooList_itemsA list of the items we contain.; TIterator*_iterator! non-persistent; static Int_tRooPrintable::_nameLength; Double_t_normBinWidthHistogram bin width (for normalization); Double_t_normNumEvtsNumber of events in histogram (for normalization); const RooPlotable*_normObj! Pointer to normalization object ;; RooArgSet*_normVarsVariables that PDF plots should be normalized over; Double_t_padFactorScale our y-axis to _padFactor of our maximum contents.; RooAbsRealLValue*_plotVarCloneA clone of the variable we are plotting.; RooArgSet*_plotVarSetA list owning the cloned tree nodes of the plotVarClone; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t addDirectoryStatus(); { return _addDirStatus ; }. Bool_t setAddDirectoryStatus(Bool_t flag); { Bool_t ret = flag ; _addDirStatus = flag ; return ret ; }. RooPlot(); Default constructor; coverity[UNINIT_CTOR]. RooPlot(Double_t xmin, Double_t xmax); Constructor of RooPlot with range [xmin,xmax]. RooPlot(Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax); Construct of a two-dimensioanl RooPlot with ranges [xmin,xmax] x [ymin,ymax]. RooPlot(const RooAbsRealLValue& var1, const RooAbsRealLValue& var2); Construct a two-dimensional RooPlot with ranges and properties taken; from variables var1 and var2. RooPlot(const RooAbsRealLValue& var1, const RooAbsRealLValue& var2, Double_t xmin, Double_t xmax, Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooPlot.html:13869,variab,variable,13869,root/html602/RooPlot.html,https://root.cern,https://root.cern/root/html602/RooPlot.html,4,['variab'],['variable']
Modifiability,"rinted for each leaf or branch node; modification. The returned head node owns all cloned branch nodes; that were created in the cloning proces. RooAbsArg* build(const char* masterCatState, Bool_t verbose = kFALSE); Build a clone of the prototype executing all registered 'replace'; rules and 'split' rules for the masterCat state named; 'masterCatState'. If verbose is set a message is printed for; each leaf or branch node modification. The returned composite arg; is owned by the customizer. This function cannot be called on; customizer build with the sterile constructor. RooAbsArg* doBuild(const char* masterCatState, Bool_t verbose); Back-end implementation of the p.d.f building functionality. void printName(ostream& os) const; Print name of customizer. void printTitle(ostream& os) const; Print title of customizer. void printClassName(ostream& os) const; Print class name of customizer. void printArgs(ostream& os) const; Print arguments of customizer, i.e. input p.d.f and input master category (if any). void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print customizer configuration details. void setCloneBranchSet(RooArgSet& cloneBranchSet); Install the input RooArgSet as container in which all cloned branches; will be stored. RooCustomizer(const RooAbsArg& pdf, const RooAbsCategoryLValue& masterCat, RooArgSet& splitLeafListOwned, RooArgSet* splitLeafListAll = 0); Constructors, assignment etc. void setOwning(Bool_t flag); If flag is true, make customizer own all created components. const RooArgSet& cloneBranchList() const; Return list of cloned branch nodes. const RooArgSet& cloneLeafList() const; Return list of cloned leaf nodes. void Print(Option_t* options = 0) const; Printing interface. » Last changed: Mon Dec 7 13:47:18 2009 » Last generated: 2009-12-07 13:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCustomizer.html:14646,config,configuration,14646,root/html526/RooCustomizer.html,https://root.cern,https://root.cern/root/html526/RooCustomizer.html,1,['config'],['configuration']
Modifiability,"rinted for each leaf or branch node; modification. The returned head node owns all cloned branch nodes; that were created in the cloning proces. RooAbsArg* build(const char* masterCatState, Bool_t verbose = kFALSE); Build a clone of the prototype executing all registered 'replace'; rules and 'split' rules for the masterCat state named; 'masterCatState'. If verbose is set a message is printed for; each leaf or branch node modification. The returned composite arg; is owned by the customizer. This function cannot be called on; customizer build with the sterile constructor. RooAbsArg* doBuild(const char* masterCatState, Bool_t verbose); Back-end implementation of the p.d.f building functionality. void printName(ostream& os) const; Print name of customizer. void printTitle(ostream& os) const; Print title of customizer. void printClassName(ostream& os) const; Print class name of customizer. void printArgs(ostream& os) const; Print arguments of customizer, i.e. input p.d.f and input master category (if any). void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print customizer configuration details. void setCloneBranchSet(RooArgSet& cloneBranchSet); Install the input RooArgSet as container in which all cloned branches; will be stored. RooCustomizer(const RooAbsArg& pdf, const RooAbsCategoryLValue& masterCat, RooArgSet& splitLeafListOwned, RooArgSet* splitLeafListAll = 0); Constructors, assignment etc. void setOwning(Bool_t flag); If flag is true, make customizer own all created components. const RooArgSet& cloneBranchList() const; Return list of cloned branch nodes. const RooArgSet& cloneLeafList() const; Return list of cloned leaf nodes. void Print(Option_t* options = 0) const; Printing interface. » Last changed: Mon Jul 4 15:22:35 2011 » Last generated: 2011-07-04 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCustomizer.html:14701,config,configuration,14701,root/html530/RooCustomizer.html,https://root.cern,https://root.cern/root/html530/RooCustomizer.html,1,['config'],['configuration']
Modifiability,"rinted for each leaf or branch node; modification. The returned head node owns all cloned branch nodes; that were created in the cloning proces. RooAbsArg* build(const char* masterCatState, Bool_t verbose = kFALSE); Build a clone of the prototype executing all registered 'replace'; rules and 'split' rules for the masterCat state named; 'masterCatState'. If verbose is set a message is printed for; each leaf or branch node modification. The returned composite arg; is owned by the customizer. This function cannot be called on; customizer build with the sterile constructor. RooAbsArg* doBuild(const char* masterCatState, Bool_t verbose); Back-end implementation of the p.d.f building functionality. void printName(ostream& os) const; Print name of customizer. void printTitle(ostream& os) const; Print title of customizer. void printClassName(ostream& os) const; Print class name of customizer. void printArgs(ostream& os) const; Print arguments of customizer, i.e. input p.d.f and input master category (if any). void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print customizer configuration details. void setCloneBranchSet(RooArgSet& cloneBranchSet); Install the input RooArgSet as container in which all cloned branches; will be stored. RooCustomizer(const RooAbsArg& pdf, const RooAbsCategoryLValue& masterCat, RooArgSet& splitLeafListOwned, RooArgSet* splitLeafListAll = 0); Constructors, assignment etc. void setOwning(Bool_t flag); If flag is true, make customizer own all created components. const RooArgSet& cloneBranchList() const; Return list of cloned branch nodes. const RooArgSet& cloneLeafList() const; Return list of cloned leaf nodes. void Print(Option_t* options = 0) const; Printing interface. » Last changed: Sat Oct 9 22:38:39 2010 » Last generated: 2010-10-09 22:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooCustomizer.html:14632,config,configuration,14632,root/html528/RooCustomizer.html,https://root.cern,https://root.cern/root/html528/RooCustomizer.html,1,['config'],['configuration']
Modifiability,"rinted for each leaf or branch node; modification. The returned head node owns all cloned branch nodes; that were created in the cloning proces. RooAbsArg* build(const char* masterCatState, Bool_t verbose = kFALSE); Build a clone of the prototype executing all registered 'replace'; rules and 'split' rules for the masterCat state named; 'masterCatState'. If verbose is set a message is printed for; each leaf or branch node modification. The returned composite arg; is owned by the customizer. This function cannot be called on; customizer build with the sterile constructor. RooAbsArg* doBuild(const char* masterCatState, Bool_t verbose); Back-end implementation of the p.d.f building functionality. void printName(ostream& os) const; Print name of customizer. void printTitle(ostream& os) const; Print title of customizer. void printClassName(ostream& os) const; Print class name of customizer. void printArgs(ostream& os) const; Print arguments of customizer, i.e. input p.d.f and input master category (if any). void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print customizer configuration details. void setCloneBranchSet(RooArgSet& cloneBranchSet); Install the input RooArgSet as container in which all cloned branches; will be stored. RooCustomizer(const RooAbsArg& pdf, const RooAbsCategoryLValue& masterCat, RooArgSet& splitLeafListOwned, RooArgSet* splitLeafListAll = 0); Constructors, assignment etc. void setOwning(Bool_t flag); If flag is true, make customizer own all created components. const RooArgSet& cloneBranchList() const; Return list of cloned branch nodes. const RooArgSet& cloneLeafList() const; Return list of cloned leaf nodes. void Print(Option_t* options = 0) const; Printing interface. » Last changed: Thu Nov 3 20:07:53 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCustomizer.html:14701,config,configuration,14701,root/html532/RooCustomizer.html,https://root.cern,https://root.cern/root/html532/RooCustomizer.html,2,['config'],['configuration']
Modifiability,"rinting contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; virtual void printTree (std::ostream &os, TString indent="""") const;  Interface for tree structure printing of object. ;  ; virtual void printValue (std::ostream &os) const;  Interface to print value of object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::list< double > * plotSamplingHintForBinBoundaries (std::span< const double > boundaries, double xlo, double xhi);  Returns sampling hints for a histogram with given boundaries. ;  ;  Static Public Member Functions inherited from TGraph; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t CompareArg (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if point number ""left""'s argument (angle with respect to positive x-axis) is bigger than that of point number ""right"". ;  ; static Bool_t CompareRadius (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if point number ""left""'s distance to origin is bigger than that of point number ""right"". ;  ; static Bool_t CompareX (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if fX[left] > fX[right]. Can be used by Sort. ;  ; static Bool_t CompareY (const TGraph *gr, Int_t left, Int_t right);  Return kTRUE if fY[left] > fY[right]. Can be used by Sort. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCurve.html:31322,inherit,inherited,31322,doc/master/classRooCurve.html,https://root.cern,https://root.cern/doc/master/classRooCurve.html,1,['inherit'],['inherited']
Modifiability,"riority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGNumberEntry * MakeLabeledNEntry (TGCompositeFrame *p, const char *name, Int_t labelw, Int_t nd=7, Int_t s=5);  Helper function to create fixed width TGLabel and TGNumberEntry in same row. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLViewerEditor.html:24266,inherit,inherited,24266,doc/master/classTGLViewerEditor.html,https://root.cern,https://root.cern/doc/master/classTGLViewerEditor.html,2,['inherit'],['inherited']
Modifiability,"ript is; run through ACLiC (.x filename+); context - line shown verbatim at the top of the page; e.g. for links.; If context is non-empty it is expected to also print the; title. NOTE: Output file name is the same as filename, but with extension .html. void GetModuleNameForClass(TString& module, TClass* cl) const; Return the module name for a given class.; Use the cached information from fDocEntityInfo.fClasses. void CreateListOfClasses(const char* filter); Create the list of all known classes. void CreateListOfTypes(); Create index of all data types and a page for each typedef-to-class. Bool_t CopyFileFromEtcDir(const char* filename) const; Copy a file from $ROOTSYS/etc/html into GetOutputDir(). void CreateHierarchy(); Create the inheritance hierarchy diagram for all classes. void CreateJavascript() const; Write the default ROOT style sheet. void CreateStyleSheet() const; Write the default ROOT style sheet. void GetDerivedClasses(TClass* cl, map<TClass*,Int_t>& derived) const; fill derived with all classes inheriting from cl and their inheritance; distance to cl. void GetHtmlFileName(TClass* classPtr, TString& filename) const; Return real HTML filename. Input: classPtr - pointer to a class; filename - string containing a full name; of the corresponding HTML file after the function returns. const char* GetHtmlFileName(const char* classname) const; Get the html file name for a class named classname.; Returns 0 if the class is not documented. TClass * GetClass(const char* name) const; Return pointer to class with name*-*-*-*-*-*-*-*-; *-* =================================. bool GetDeclFileName(TClass* cl, Bool_t filesys, TString& out_name) const; Return declaration file name; return the full path if filesys is true. bool GetImplFileName(TClass* cl, Bool_t filesys, TString& out_name) const; Return implementation file name. bool GetDeclImplFileName(TClass* cl, bool filesys, bool decl, TString& out_name) const; Combined implementation for GetDeclFileName(), GetImplFileNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THtml.html:30596,inherit,inheriting,30596,root/html528/THtml.html,https://root.cern,https://root.cern/root/html528/THtml.html,2,['inherit'],"['inheritance', 'inheriting']"
Modifiability,"ription of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsCachedReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedReal.html:46561,config,configuration,46561,doc/master/classRooCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooCachedReal.html,2,['config'],['configuration']
Modifiability,"ription of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsHiddenReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindCPAsymVar.html:47041,config,configuration,47041,doc/master/classRooUnblindCPAsymVar.html,https://root.cern,https://root.cern/doc/master/classRooUnblindCPAsymVar.html,4,['config'],['configuration']
Modifiability,"ription; function members; data members; class charts. ROOT; » GRAF3D; » GL; » TGLPShapeRef. class TGLPShapeRef. Base class for references to TGLPysicalShape that need to be notified; when the shape is destroyed.; Could also deliver 'change' notifications. Function Members (Methods); public:. TGLPShapeRef(); TGLPShapeRef(TGLPhysicalShape* shape); virtual~TGLPShapeRef(); static TClass*Class(); TGLPhysicalShape*GetPShape() const; virtual TClass*IsA() const; virtual voidPShapeModified(); virtual voidSetPShape(TGLPhysicalShape* shape); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. TGLPShapeRef(const TGLPShapeRef&); TGLPShapeRef&operator=(const TGLPShapeRef&). Data Members; protected:. TGLPhysicalShape*fPShapePointer to referenced physical shape. private:. TGLPShapeRef*fNextPSRefInternal pointer to the next reference (used by TGLPhysicalShape directly). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLPShapeRef(); Default contructor. TGLPShapeRef(TGLPhysicalShape* shape); Constructor with known shape - reference it. ~TGLPShapeRef(); Destructor - unreference the shape if set. void SetPShape(TGLPhysicalShape* shape); Set the shape. Unreference the old and reference the new.; This is virtual so that sub-classes can perform other tasks; on change. This function should be called first from there. This is also called from destructor of the refereced physical; shape with 0 argument. void PShapeModified(); This is called from physical shape when it is modified.; Sub-classes can override and take appropriate action. TGLPShapeRef(const TGLPShapeRef& ). TGLPShapeRef& operator=(const TGLPShapeRef& ). TGLPhysicalShape * GetPShape() const; { return fPShape; }. » Author: Matevz Tadel, Feb 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-03-13 19:25; This page has been automati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLPShapeRef.html:1143,Inherit,Inheritance,1143,root/html534/TGLPShapeRef.html,https://root.cern,https://root.cern/root/html534/TGLPShapeRef.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ription; function members; data members; class charts. ROOT; » IO; » IO; » TCollectionStreamer. class TCollectionStreamer. TGenCollectionProxy. Proxy around an arbitrary container, which implements basic; functionality and iteration. The purpose of this implementation; is to shield any generated dictionary implementation from the; underlying streamer/proxy implementation and only expose; the creation functions. In particular this is used to implement splitting and abstract; element access of any container. Access to compiled code is necessary; to implement the abstract iteration sequence and functionality like; size(), clear(), resize(). resize() may be a void operation. Function Members (Methods); public:. virtual~TCollectionStreamer(); voidAdoptStreamer(TGenCollectionProxy* streamer); voidStreamer(TBuffer& refBuffer, void* obj, int siz, TClass* onFileClass); TCollectionStreamer(); TCollectionStreamer(const TCollectionStreamer& c). protected:. voidInvalidProxyError(). private:. TCollectionStreamer&operator=(const TCollectionStreamer&). Data Members; protected:. TGenCollectionProxy*fStreamer/ Pointer to worker streamer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void InvalidProxyError(); Issue Error about invalid proxy. TCollectionStreamer(); Initializing constructor. TCollectionStreamer(const TCollectionStreamer& c); Copy constructor. ~TCollectionStreamer(); Standard destructor. void AdoptStreamer(TGenCollectionProxy* streamer); Attach worker proxy. void Streamer(TBuffer& refBuffer, void* obj, int siz, TClass* onFileClass); Streamer for I/O handling. TCollectionStreamer& operator=(const TCollectionStreamer& ). » Author: Markus Frank 28/10/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-06-30 14:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCollectionStreamer.html:1327,Inherit,Inheritance,1327,root/html602/TCollectionStreamer.html,https://root.cern,https://root.cern/root/html602/TCollectionStreamer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ription; function members; data members; class charts. ROOT; » IO; » IO; » TCollectionStreamer. class TCollectionStreamer. TGenCollectionProxy. Proxy around an arbitrary container, which implements basic; functionality and iteration. The purpose of this implementation; is to shield any generated dictionary implementation from the; underlying streamer/proxy implementation and only expose; the creation functions. In particular this is used to implement splitting and abstract; element access of any container. Access to compiled code is necessary; to implement the abstract iteration sequence and functionality like; size(), clear(), resize(). resize() may be a void operation. Function Members (Methods); public:. virtual~TCollectionStreamer(); voidAdoptStreamer(TGenCollectionProxy* streamer); voidStreamer(TBuffer& refBuffer, void* obj, int siz, TClass* onFileClass); TCollectionStreamer(); TCollectionStreamer(const TCollectionStreamer& c). protected:. voidInvalidProxyError(). private:. TCollectionStreamer&operator=(const TCollectionStreamer&). Data Members; protected:. TGenCollectionProxy*fStreamer/ Pointer to worker streamer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void InvalidProxyError(); Issue Error about invalid proxy. TCollectionStreamer(); Initializing constructor. TCollectionStreamer(const TCollectionStreamer& c); Copy constructor. ~TCollectionStreamer(); Standard destructor. void AdoptStreamer(TGenCollectionProxy* streamer); Attach worker proxy. void Streamer(TBuffer& refBuffer, void* obj, int siz, TClass* onFileClass); Streamer for I/O handling. TCollectionStreamer& operator=(const TCollectionStreamer& ). » Author: Markus Frank 28/10/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-09-08 17:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TCollectionStreamer.html:1327,Inherit,Inheritance,1327,root/html604/TCollectionStreamer.html,https://root.cern,https://root.cern/root/html604/TCollectionStreamer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ription_x; // x axis description; char *raster_description_y; // y axis description; char *raster_description_z; // z axis description; int pen_color; // color of spectrum; int pen_dash; // style of pen; int pen_width; // width of line; int chanmark_en_dis; // decides whether the channel marks are shown; int chanmark_style; // style of channel marks; int chanmark_width; // width of channel marks; int chanmark_height; // height of channel marks; int chanmark_color; // color of channel marks; int chanline_en_dis; // decides whether the channel lines (grid) are shown. // auxiliary variables, transformation coefficients for internal use only; double kx;; double ky;; double mxx;; double mxy;; double myx;; double myy;; double txx;; double txy;; double tyx;; double tyy;; double tyz;; double vx;; double vy;; double nu_sli;. // auxiliary internal variables, working place; double z,zeq,gbezx,gbezy,dxspline,dyspline;; int xt,yt,xs,ys,xe,ye,priamka,z_preset_value;; unsigned short obal[MAXIMUM_XSCREEN_RESOLUTION];; unsigned short obal_cont[MAXIMUM_XSCREEN_RESOLUTION];; TPoint bz[4];; };; The examples using different display parameters are shown in the next few Figures. Display mode-bars, pen width=2. Display mode-triangles, log scale. Display mode-contours. Display mode surface shading according to height. Display mode-surface shading according to light point. Display mode-surface shading according to height+light position with ratio 50:50, CMY color model. Display mode bars shaded according to height. Display mode- surface shading according to light position with shadows. Display mode- surface shading according to height with 10 levels of contours. Display mode- surface shading according to height, sqrt scale, channel marks and lines shown. Display mode- surface shading according to height-contours, rasters allowing to localize interesting parts are shown. 8 References; [1] M. Morháč, J. Kliman, V. Matoušek, M. Veselský, I. Turzo.: Background elimination methods for multidimensi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/spectrum/Spectrum.html:76188,variab,variables,76188,root/htmldoc/guides/spectrum/Spectrum.html,https://root.cern,https://root.cern/root/htmldoc/guides/spectrum/Spectrum.html,2,['variab'],['variables']
Modifiability,"ription_x; // x axis description; char *raster_description_y; // y axis description; char *raster_description_z; // z axis description; int pen_color; // color of spectrum; int pen_dash; // style of pen; int pen_width; // width of line; int chanmark_en_dis; // decides whether the channel marks are shown; int chanmark_style; // style of channel marks; int chanmark_width; // width of channel marks; int chanmark_height; // height of channel marks; int chanmark_color; // color of channel marks; int chanline_en_dis; // decides whether the channel lines (grid) are shown. // auxiliary variables, transformation coefficients for internal use only; double kx;; double ky;; double mxx;; double mxy;; double myx;; double myy;; double txx;; double txy;; double tyx;; double tyy;; double tyz;; double vx;; double vy;; double nu_sli;. // auxiliary internal variables, working place; double z,zeq,gbezx,gbezy,dxspline,dyspline;; int xt,yt,xs,ys,xe,ye,priamka,z_preset_value;; unsigned short obal[MAXIMUM_XSCREEN_RESOLUTION];; unsigned short obal_cont[MAXIMUM_XSCREEN_RESOLUTION];; TPoint bz[4];; };; The examples using different display parameters are shown in the next few Figures. Display mode-bars, pen width=2. Display mode-triangles, log scale. Display mode-contours. Display mode surface shading according to height. Display mode-surface shading according to light point. Display mode-surface shading according to height+light position with ratio 50:50, CMY color model. Display mode bars shaded according to height. Display mode- surface shading according to light position with shadows. Display mode- surface shading according to height with 10 levels of contours. Display mode- surface shading according to height, sqrt scale, channel marks and lines shown. Display mode- surface shading according to height-contours, rasters allowing to localize interesting parts are shown. References; [1] M. Morháč, J. Kliman, V. Matoušek, M. Veselský, I. Turzo.: Background elimination methods for multidimension",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/spectrum/Spectrum.html:75199,variab,variables,75199,root/html534/guides/spectrum/Spectrum.html,https://root.cern,https://root.cern/root/html534/guides/spectrum/Spectrum.html,2,['variab'],['variables']
Modifiability,"ritance diagram for TH1S:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TH1S() [1/5]. TH1S::TH1S ; (; ). Constructor. ; Definition at line 9659 of file TH1.cxx. ◆ TH1S() [2/5]. TH1S::TH1S ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . Double_t ; xlow, . Double_t ; xup . ). Create a 1-Dim histogram with fix bins of type short (see TH1::TH1 for explanation of parameters) ; Definition at line 9670 of file TH1.cxx. ◆ TH1S() [3/5]. TH1S::TH1S ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Float_t * ; xbins . ). Create a 1-Dim histogram with variable bins of type short (see TH1::TH1 for explanation of parameters) ; Definition at line 9684 of file TH1.cxx. ◆ TH1S() [4/5]. TH1S::TH1S ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins . ). Create a 1-Dim histogram with variable bins of type short (see TH1::TH1 for explanation of parameters) ; Definition at line 9696 of file TH1.cxx. ◆ TH1S() [5/5]. TH1S::TH1S ; (; const TH1S & ; h1s). Copy constructor. ; The list of functions is not copied. (Use Clone() if needed) ; Definition at line 9715 of file TH1.cxx. ◆ ~TH1S(). TH1S::~TH1S ; (; ). override . Destructor. ; Definition at line 9707 of file TH1.cxx. Member Function Documentation. ◆ AddBinContent() [1/2]. void TH1S::AddBinContent ; (; Int_t ; bin). overridevirtual . Increment bin content by 1. ; Passing an out-of-range bin leads to undefined behavior ; Reimplemented from TH1.; Definition at line 9724 of file TH1.cxx. ◆ AddBinContent() [2/2]. void TH1S::AddBinContent ; (; Int_t ; bin, . Double_t ; w . ). overridevirtual . Increment bin content by w. ; WarningThe value of w is cast to Int_t before being added. Passing an out-of-range bin leads to undefined behavior ; Reimplemented from TH1.; Definition at line 9734 of file TH1.cxx. ◆ Class(). static TClass * TH1S::Class ; (; ). static . Ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1S.html:52361,variab,variable,52361,doc/master/classTH1S.html,https://root.cern,https://root.cern/doc/master/classTH1S.html,1,['variab'],['variable']
Modifiability,"rite (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Double_t fRealPart;  ; TVector3 fVectorPart;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQuaternion.h>. Inheritance diagram for TQuaternion:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQuaternion.html:17890,inherit,inherited,17890,doc/master/classTQuaternion.html,https://root.cern,https://root.cern/doc/master/classTQuaternion.html,1,['inherit'],['inherited']
Modifiability,"rite (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TObjArray * Get (const char *name);  Static function called by TROOT to search name in the geometry. ;  ; static void UpdateTempMatrix (Double_t *dx1, Double_t *rmat1, Double_t x, Double_t y, Double_t z, Double_t *matrix, Double_t *dxnew, Double_t *rmatnew);  Compute new translation vector and global matrix. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeometry (const TGeometry &);  copy constructor ;  ; TGeometry & operator= (const TGeometry &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Float_t fBomb;  Pointers to shapes. ;  ; TNode * fCurrentNode;  Pointers to current rotation matrices. ;  ; Int_t fGeomLevel;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeometry.html:15025,inherit,inherited,15025,doc/master/classTGeometry.html,https://root.cern,https://root.cern/doc/master/classTGeometry.html,2,['inherit'],['inherited']
Modifiability,"rite mask; TStringTNamed::fNameobject identifier; Int_tTSystem::fNfdNumber of fd's in masks; TStringTSystem::fObjExtExtension of object files (.o, .obj, etc.); TSeqCollection*TSystem::fOnExitListList of items to be cleaned-up on exit; TFdSet*TSystem::fReadmask!Files that should be checked for read events; TFdSet*TSystem::fReadready!Files with reads waiting; Int_tTSystem::fSigcntNumber of pending signals; TSeqCollection*TSystem::fSignalHandlerList of signal handlers; TFdSet*TSystem::fSignals!Signals that were trapped; TStringTSystem::fSoExtExtension of shared library (.so, .sl, .a, .dll, etc.); TSeqCollection*TSystem::fStdExceptionHandlerList of std::exception handlers; TSeqCollection*TSystem::fTimersList of timers; TStringTNamed::fTitleobject title; TStringTSystem::fWdpathWorking directory; TFdSet*TSystem::fWritemask!Files that should be checked for write events; TFdSet*TSystem::fWriteready!Files with writes waiting. private:. set<void*>fDirPtrs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TNetXNGSystem(Bool_t owner = kTRUE); Constructor: Create system class without connecting to server. param owner: (unused). TNetXNGSystem(const char* url, Bool_t owner = kTRUE); Constructor: Create system class and connect to server. param url: URL of the entry-point server to be contacted; param owner: (unused). ~TNetXNGSystem(); Destructor. void* OpenDirectory(const char* dir); Open a directory. param dir: the name of the directory to open; returns: a non-zero pointer (with no special purpose) in case of; success, 0 in case of error. Int_t MakeDirectory(const char* dir); Create a directory. param dir: the directory name; returns: 0 on success, -1 otherwise. void FreeDirectory(void* dirp); Free a directory. param dirp: the pointer to the directory to be freed. const char* GetDirEntry(void* dirp); Get a directory entry. param dirp: the directory pointer; returns: 0 in case there are no more entries. Int_t GetPathInfo(const char* path, F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNetXNGSystem.html:19227,Inherit,Inheritance,19227,root/html534/TNetXNGSystem.html,https://root.cern,https://root.cern/root/html534/TNetXNGSystem.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rite this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; std::map< Int_t, AcceptanceRegion > fAcceptanceRegions;  ; Int_t fParameterPointIndex;  ; TRef fSamplingDistribution;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <RooStats/ConfidenceBelt.h>. Inheritance diagram for RooStats::SamplingSummary:. This browser is not able to show SVG: try Firefox,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SamplingSummary.html:9267,inherit,inherited,9267,doc/master/classRooStats_1_1SamplingSummary.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SamplingSummary.html,1,['inherit'],['inherited']
Modifiability,"rite this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t _inSharedList;  ! Is in shared list ;  ; Int_t _refCount;  ! Use count ;  ; TUUID _uuid;  Unique object ID. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <RooSharedProperties.h>. Inheritance diagram for RooSharedProperties:. This browser is not able to show SVG: try Firefox, Chrome, S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSharedProperties.html:9871,inherit,inherited,9871,doc/master/classRooSharedProperties.html,https://root.cern,https://root.cern/doc/master/classRooSharedProperties.html,1,['inherit'],['inherited']
Modifiability,"rite this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  { kSizeMax = 5; };  ; enum  { kWorkMax = 100; };  ; enum  EVectorStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void Allocate (Int_t nrows, Int_t row_lwb=0, Int_t init=0);  Allocate new vector. ;  ; void Delete_m (Int_t size, Element *&);  Delete data pointer m, if it was assigned on the heap. ;  ; Int_t Memcpy_m (Element *newp, const Element *oldp, Int_t copySize, Int_t newSize, Int_t oldSize);  Copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  default kTRUE, when Use array kFALSE ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [kSizeMax];  ; Element * fElements {nullptr};  ; Bool_t fIsOwner {kTRUE};  data container ;  ; Int_t fNrows {0};  ; Int_t fRowLwb {0};  . Additional Inherited Members;  Public Types inherited from T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVectorT.html:16959,inherit,inherited,16959,doc/master/classTVectorT.html,https://root.cern,https://root.cern/doc/master/classTVectorT.html,1,['inherit'],['inherited']
Modifiability,"rite(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. double*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray& operator=(const TNDArrayT<double>& ). TNDArrayRef<T> operator[](Int_t idx) const. T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNDArrayT_double_.html:7008,Inherit,Inheritance,7008,root/html602/TNDArrayT_double_.html,https://root.cern,https://root.cern/root/html602/TNDArrayT_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rite(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. double*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray& operator=(const TNDArrayT<double>& ). TNDArrayRef<T> operator[](Int_t idx) const. T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TNDArrayT_double_.html:7008,Inherit,Inheritance,7008,root/html604/TNDArrayT_double_.html,https://root.cern,https://root.cern/root/html604/TNDArrayT_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rite(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. voidRooAbsStudy::aggregateSummaryOutput(TList* chunkList); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidRooAbsStudy::registerSummaryOutput(const RooArgSet& allVars, const RooArgSet& varsWithError = RooArgSet(), const RooArgSet& varsWithAsymError = RooArgSet()); voidRooAbsStudy::storeDetailedOutput(TNamed& object); voidRooAbsStudy::storeSummaryOutput(const RooArgSet& vars). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; RooArgSetfParamPointOfInterest; TStringTNamed::fTitleobject title; RooStats::ToyMCSampler*fToyMCSampler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t initialize(void). Bool_t execute(void). Bool_t finalize(void). Bool_t merge(RooStats::SamplingDistribution& result); returns true if there was an error. ToyMCStudy(const char* name = ""ToyMCStudy"", const char* title = ""ToyMCStudy""); need to have constructor without arguments for proof. RooAbsStudy* clone(const char* = """") const; { return new ToyMCStudy(*this) ; }. virtual ~ToyMCStudy(). void SetToyMCSampler(RooStats::ToyMCSampler& t); { fToyMCSampler = &t; }. void SetParamPoint(const RooArgSet& poi); { fParamPointOfInterest.add(poi); }. » Author: Sven Kreiss and Kyle Cranmer June 2010 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id: ToyMCStudy.h 39928 2011-06-24 08:18:59Z moneta $ » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__ToyMCStudy.html:6526,Inherit,Inheritance,6526,root/html532/RooStats__ToyMCStudy.html,https://root.cern,https://root.cern/root/html532/RooStats__ToyMCStudy.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rite(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidSPlots(Double_t* covmat, Int_t i_excl). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMatrixDfMinmaxmins and maxs of variables for histogramming; Int_tfNSpeciesNumber of species; Int_tfNeventsTotal number of events; Double_t*fNumbersOfEvents[fNSpecies] estimates of numbers of events in each species; Int_tfNxNumber of control variables; Int_tfNyNumber of discriminating variables; TMatrixDfPdfTot!; TMatrixDfSWeightscomputed sWeights; TObjArrayfSWeightsHistshistograms of weighted variables; TString*fSelectionSelection on the tree; TTree*fTree!; TString*fTreenameThe name of the data tree; TString*fVarexpVariables used for splot; TMatrixDfXvar!; TObjArrayfXvarHistshistograms of control variables; TMatrixDfYpdf!; TObjArrayfYpdfHistshistograms of pdfs; TMatrixDfYvar!; TObjArrayfYvarHistshistograms of discriminating variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSPlot(); default constructor (used by I/O only). TSPlot(Int_t nx, Int_t ny, Int_t ne, Int_t ns, TTree* tree); normal TSPlot constructor; nx : number of control variables; ny : number of discriminating variables; ne : total number of events; ns : number of species; tree: input data. ~TSPlot(); destructor. void Browse(TBrowser* b); To browse the histograms. void SetInitialNumbersOfSpecies(Int_t* numbers); Set the initial number of events of each species - used; as initial estimates in minuit. void MakeSPlot(Option_t* option = ""v"")",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSPlot.html:14956,variab,variables,14956,root/html528/TSPlot.html,https://root.cern,https://root.cern/root/html528/TSPlot.html,36,['variab'],['variables']
Modifiability,"rite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. RooAbsArg*_argPointer to content of proxy; Bool_t_isFundIf true proxy contains an lvalue; RooArgSet*RooAbsProxy::_nset! Normalization set to be used for evaluation of RooAbsPdf contents; Bool_t_ownArgIf true proxy owns contents; RooAbsArg*_ownerPointer to owner of proxy; Bool_t_shapeServerIf true contents is shape server of owner; Bool_t_valueServerIf true contents is value server of owner; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooArgProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t valueServer, Bool_t shapeServer, Bool_t proxyOwnsArg = kFALSE); Constructor with owner and proxied variable. RooArgProxy(const char* name, const char* desc, RooAbsArg* owner, RooAbsArg& arg, Bool_t valueServer, Bool_t shapeServer, Bool_t proxyOwnsArg = kFALSE); Constructor with owner and proxied variable. The valueServer and shapeServer booleans; control if the inserted client-server link in the owner propagates value and/or; shape dirty flags. If proxyOwnsArg is true, the proxy takes ownership of its component. RooArgProxy(const char* name, RooAbsArg* owner, const RooArgProxy& other); Copy constructor. ~RooArgProxy(); Destructor. Bool_t changePointer(const RooAbsCollection& newServerSet, Bool_t nameChange = kFALSE, Bool_t factoryInitMode = kFALSE); Change proxied object to object of same name in given list. If nameChange is true; the replacement object can have a different name and is identified as the replacement object by; the existence of a boolean attribute ""origName:MyName"" where MyName is the name of this instance. void changeDataSet(const RooArgSet* newNormSet); Change the normalization set that should be offered to the; content objects getVal() when evaluated. void print(ostream&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooArgProxy.html:8109,variab,variable,8109,root/html602/RooArgProxy.html,https://root.cern,https://root.cern/root/html602/RooArgProxy.html,4,['variab'],['variable']
Modifiability,"rite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTArchiveMember::fCommentComment field; Long64_tTArchiveMember::fCsizeCompressed size; Bool_tTArchiveMember::fDirectoryFlag indicating this is a directory; Long64_tTArchiveMember::fDsizeDecompressed size; Long64_tTArchiveMember::fFilePositionByte position in archive where member data starts; TDatimeTArchiveMember::fModTimeModification time; TStringTArchiveMember::fNameName of member; Long64_tTArchiveMember::fPositionByte position in archive. private:. UInt_tfAttrExtExternal file attributes; UInt_tfAttrIntInternal file attributes; UInt_tfCRC32CRC-32 for all decompressed data; void*fGlobalExtra directory data; UInt_tfGlobalLenLength of extra directory data; UInt_tfLevelCompression level; void*fLocalExtra file header data; UInt_tfLocalLenLength of extra file header data; UInt_tfMethodCompression type. Class Charts. Inheritance Chart:. TObject. ←; TArchiveMember. ←; TZIPMember. Function documentation; TZIPMember(); Default ctor. TZIPMember(const char* name); Create ZIP member file. TZIPMember(const TZIPMember& member); Copy ctor. TZIPMember & operator=(const TZIPMember& rhs); Assignment operator. ~TZIPMember(); Cleanup. void Print(Option_t* option = """") const; Pretty print basic ZIP member info. void * GetLocal() const; { return fLocal; }. UInt_t GetLocalLen() const; { return fLocalLen; }. void * GetGlobal() const; { return fGlobal; }. UInt_t GetGlobalLen() const; { return fGlobalLen; }. UInt_t GetCRC32() const; { return fCRC32; }. UInt_t GetAttrInt() const; { return fAttrInt; }. UInt_t GetAttrExt() const; { return fAttrExt; }. UInt_t GetMethod() const; { return fMethod; }. UInt_t GetLevel() const; { return fLevel; }. » Author: Fons Rademakers 30/6/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-06-02 16:35; This page has been automaticall",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TZIPMember.html:9171,Inherit,Inheritance,9171,root/html604/TZIPMember.html,https://root.cern,https://root.cern/root/html604/TZIPMember.html,1,['Inherit'],['Inheritance']
Modifiability,"rite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTArchiveMember::fCommentComment field; Long64_tTArchiveMember::fCsizeCompressed size; Bool_tTArchiveMember::fDirectoryFlag indicating this is a directory; Long64_tTArchiveMember::fDsizeDecompressed size; Long64_tTArchiveMember::fFilePositionByte position in archive where member data starts; TDatimeTArchiveMember::fModTimeModification time; TStringTArchiveMember::fNameName of member; Long64_tTArchiveMember::fPositionByte position in archive. private:. UInt_tfAttrExtExternal file attributes; UInt_tfAttrIntInternal file attributes; UInt_tfCRC32CRC-32 for all decompressed data; void*fGlobalExtra directory data; UInt_tfGlobalLenLength of extra directory data; UInt_tfLevelCompression level; void*fLocalExtra file header data; UInt_tfLocalLenLength of extra file header data; UInt_tfMethodCompression type. Class Charts. Inheritance Chart:. TObject. ←; TArchiveMember. ←; TZIPMember. Function documentation; TZIPMember(); Default ctor. TZIPMember(const char* name); Create ZIP member file. TZIPMember(const TZIPMember& member); Copy ctor. TZIPMember & operator=(const TZIPMember& rhs); Assignment operator. ~TZIPMember(); Cleanup. void Print(Option_t* option = """") const; Pretty print basic ZIP member info. void * GetLocal() const; { return fLocal; }. UInt_t GetLocalLen() const; { return fLocalLen; }. void * GetGlobal() const; { return fGlobal; }. UInt_t GetGlobalLen() const; { return fGlobalLen; }. UInt_t GetCRC32() const; { return fCRC32; }. UInt_t GetAttrInt() const; { return fAttrInt; }. UInt_t GetAttrExt() const; { return fAttrExt; }. UInt_t GetMethod() const; { return fMethod; }. UInt_t GetLevel() const; { return fLevel; }. » Author: Fons Rademakers 30/6/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-06-30 15:32; This page has been automaticall",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TZIPMember.html:9171,Inherit,Inheritance,9171,root/html602/TZIPMember.html,https://root.cern,https://root.cern/root/html602/TZIPMember.html,1,['Inherit'],['Inheritance']
Modifiability,"riteDelete; };. public:. static Int_tfgMaxDimension= 4; static Int_tfgMaxParameters= 9. protected:. Bool_tfAddvalues should be added to an existing object; Int_tfDimensiondimension of the histogram/plot; Bool_tfDrawProfiletrue if the options contain :""prof""; Bool_tfEntryListif fill a TEntryList; TStringfExpcomplete variable expression; TStringfNamehistogram's/plot's name; Int_tfNoParametersif dimensions of the plot was specified; TStringfOptiondraw options; Bool_tfOptionSameif option contained ""same""; TObject*fOriginaloriginal plot (if it is to be reused); TTreeDrawArgsParser::EOutputTypefOutputTypetype of the output; Bool_tfParameterGiven[9]true if the parameter was given, otherwise false; Double_tfParameters[9]parameters in brackets; TStringfSelectionselection expression; Bool_tfShouldDrawif to draw the plot; TStringfVarExp[4]variable expression 0 - X, 1 - Y, 2 - Z, 3 - W. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTreeDrawArgsParser(); Constructor - cleans all the class variables. ~TTreeDrawArgsParser(); Destructor. Int_t GetMaxDimension(); return fgMaxDimension (cannot be inline). void ClearPrevious(); Resets all the variables of the class. Bool_t SplitVariables(TString variables); Parse expression [var1 [:var2 [:var3] ...]],; number of variables cannot be greater than fgMaxDimension.; A colon which is followed by (or that follows) another semicolon; is not regarded as a separator.; If there are more separating : than fgMaxDimension - 1 then; all characters after (fgMaxDimension - 1)th colon is put into; the last variable.; fDimension := <number of variables>; fVarExp[0] := <first variable string>; fVarExp[1] := <second variable string>; ..; Returns kFALSE in case of an error. Bool_t ParseName(TString name); Syntax:; [' '*][[\+][' '*]name[(num1 [, [num2] ] [, [num3] ] ...)]]; num's are floating point numbers; sets the fileds fNoParameters, fParameterGiven, fParameters, fAdd, fName; to apropriate values.; Returns kF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreeDrawArgsParser.html:7233,variab,variables,7233,root/html528/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html528/TTreeDrawArgsParser.html,6,['variab'],['variables']
Modifiability,"riteFastArrayString (const Char_t *c, Long64_t n)=0;  ; virtual void WriteFloat (Float_t f)=0;  ; virtual void WriteFloat16 (Float_t *f, TStreamerElement *ele=nullptr)=0;  ; virtual void WriteInt (Int_t i)=0;  ; virtual void WriteLong (Long_t l)=0;  ; virtual void WriteLong64 (Long64_t l)=0;  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ; virtual void WriteObject (const TObject *obj, Bool_t cacheReuse)=0;  ; virtual Int_t WriteObjectAny (const void *obj, const TClass *ptrClass, Bool_t cacheReuse=kTRUE)=0;  ; virtual UShort_t WriteProcessID (TProcessID *pid)=0;  Always return 0 (current processID). ;  ; virtual void WriteShort (Short_t s)=0;  ; virtual void WriteStdString (const std::string *s)=0;  ; virtual void WriteStdString (std::string &s);  ; virtual void WriteString (const char *s)=0;  ; virtual void WriteTString (const TString &s)=0;  ; virtual void WriteUChar (UChar_t c)=0;  ; virtual void WriteUInt (UInt_t i)=0;  ; virtual void WriteULong (ULong_t l)=0;  ; virtual void WriteULong64 (ULong64_t l)=0;  ; virtual void WriteUShort (UShort_t s)=0;  ; virtual UInt_t WriteVersion (const TClass *cl, Bool_t useBcnt=kFALSE)=0;  ; virtual UInt_t WriteVersionMemberWise (const TClass *cl, Bool_t useBcnt=kFALSE)=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBuffer.html:15932,inherit,inherited,15932,doc/master/classTBuffer.html,https://root.cern,https://root.cern/doc/master/classTBuffer.html,1,['inherit'],['inherited']
Modifiability,"riteLock () override;  Take the Write Lock of the mutex. ;  ; void WriteUnLock (Hint_t *) override;  Release the read lock of the mutex. ;  ;  Public Member Functions inherited from ROOT::TVirtualRWMutex; Int_t CleanUp () override;  ; TClass * IsA () const override;  ; Int_t Lock () override;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TryLock () override;  ; Int_t UnLock () override;  ;  Public Member Functions inherited from TVirtualMutex;  TVirtualMutex (Bool_t=kFALSE);  ; virtual ~TVirtualMutex ();  ; Int_t Acquire ();  ; Int_t Release ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from ROOT::TVirtualRWMutex; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualMutex; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; ROOT::TReentrantRWLock< MutexT, RecurseCountsT > fMutexImp;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/thread/src/TRWMutexImp.h>. Inheritance diagram for ROOT::TRWMutexImp< MutexT, RecurseCountsT >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ Apply(). template<typename MutexT , typename RecurseCountsT > . void ROOT::TRWMutexImp< MutexT, RecurseCountsT >::Apply ; (; std::unique_ptr< StateDelta > && ; delta). overridevirtual . Apply the mutex state delta. ; In pseudo-code: current_lock_count += delta; ; Implements ROOT::TVirt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1TRWMutexImp.html:2194,inherit,inherited,2194,doc/master/classROOT_1_1TRWMutexImp.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1TRWMutexImp.html,2,['inherit'],['inherited']
Modifiability,"riteLock () override;  Take the Write Lock of the mutex. ;  ; void WriteUnLock (Hint_t *) override;  Release the read lock of the mutex. ;  ;  Public Member Functions inherited from ROOT::TVirtualRWMutex; Int_t CleanUp () override;  ; TClass * IsA () const override;  ; Int_t Lock () override;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TryLock () override;  ; Int_t UnLock () override;  ;  Public Member Functions inherited from TVirtualMutex;  TVirtualMutex (Bool_t=kFALSE);  ; virtual ~TVirtualMutex ();  ; Int_t Acquire ();  ; Int_t Release ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from ROOT::TVirtualRWMutex; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualMutex; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; ROOT::TReentrantRWLock< MutexT, RecurseCountsT > fMutexImp;  . #include </home/sftnight/build/workspace/root-makedoc-v632/rootspi/rdoc/src/v6-32-00-patches/core/thread/src/TRWMutexImp.h>. Inheritance diagram for ROOT::TRWMutexImp< MutexT, RecurseCountsT >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ Apply(). template<typename MutexT , typename RecurseCountsT > . void ROOT::TRWMutexImp< MutexT, RecurseCountsT >::Apply ; (; std::unique_ptr< StateDelta > && ; delta). overridevirtual . Apply the mutex state delta. ; In pseudo-code: current_lock_count += delta; ; Implements ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TRWMutexImp.html:2193,inherit,inherited,2193,doc/v632/classROOT_1_1TRWMutexImp.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TRWMutexImp.html,2,['inherit'],['inherited']
Modifiability,"riteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidTMVA::MethodBase::MakeClassSpecific(ostream&, const TString& = """") const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t*const err, Double_t*const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidInit(). Data Members; public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when test",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodDT.html:16895,Config,Configurable,16895,root/html602/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodDT.html,12,['Config'],['Configurable']
Modifiability,"riteProcessIDvirtual UShort_t WriteProcessID(TProcessID *pid)=0Always return 0 (current processID).Definition TBuffer.cxx:353; TBuffer::GetParentTObject * GetParent() constReturn pointer to parent of this buffer.Definition TBuffer.cxx:262; TBuffer::GetPidOffsetvirtual UShort_t GetPidOffset() const =0; TBuffer::IsReadingBool_t IsReading() constDefinition TBuffer.h:86; TBuffer::WriteVersionvirtual UInt_t WriteVersion(const TClass *cl, Bool_t useBcnt=kFALSE)=0; TBuffer::SkipVersionvirtual void SkipVersion(const TClass *cl=nullptr)=0; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClass::Drawvoid Draw(Option_t *option="""") overrideDraw detailed class inheritance structure.Definition TClass.cxx:2554; TClass::DynamicCastvoid * DynamicCast(const TClass *base, void *obj, Bool_t up=kTRUE)Cast obj of this class type up to baseclass cl if up is true.Definition TClass.cxx:4982; TClass::AutoBrowsestatic Int_t AutoBrowse(TObject *obj, TBrowser *browser)Browse external object inherited from TObject.Definition TClass.cxx:2033; TClass::Dumpvoid Dump() const overrideDump contents of object on stdout.Definition TClass.h:398; TClass::InheritsFromBool_t InheritsFrom(const char *cl) const overrideReturn kTRUE if this class inherits from a class with name ""classname"".Definition TClass.cxx:4941; TGuiFactory::CreateInspectorImpvirtual TInspectorImp * CreateInspectorImp(const TObject *obj, UInt_t width, UInt_t height)Create a batch version of TInspectorImp.Definition TGuiFactory.cxx:182; TListIterIterator of linked list.Definition TList.h:193; TListIter::GetOptionOption_t * GetOption() const overrideReturns the object option stored in the list.Definition TList.cxx:1140; TListIter::SetOptionvoid SetOption(Option_t *option)Sets the object option stored in the list.Definition TList.cxx:1149; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; TNamed::GetNameconst char * GetName() const overri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8cxx_source.html:47209,inherit,inherited,47209,doc/master/TObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObject_8cxx_source.html,1,['inherit'],['inherited']
Modifiability,"riteRfStatus ; (; ). protected . written by rf_go.exe; write rulefit status ; Definition at line 356 of file RuleFitAPI.cxx. ◆ WriteRuleFitMod(). Bool_t TMVA::RuleFitAPI::WriteRuleFitMod ; (; ). protected . written by rf_go.exe (NOTE:Format unknown!) ; Definition at line 365 of file RuleFitAPI.cxx. ◆ WriteRuleFitSum(). Bool_t TMVA::RuleFitAPI::WriteRuleFitSum ; (; ). protected . written by rf_go.exe (NOTE: format unknown!) ; Definition at line 374 of file RuleFitAPI.cxx. ◆ WriteTest(). Bool_t TMVA::RuleFitAPI::WriteTest ; (; ). protected . Write test data. ; Definition at line 418 of file RuleFitAPI.cxx. ◆ WriteTrain(). Bool_t TMVA::RuleFitAPI::WriteTrain ; (; ). protected . write training data, column wise ; Definition at line 383 of file RuleFitAPI.cxx. ◆ WriteVarImp(). Bool_t TMVA::RuleFitAPI::WriteVarImp ; (; ). protected . Definition at line 462 of file RuleFitAPI.cxx. ◆ WriteVarNames(). Bool_t TMVA::RuleFitAPI::WriteVarNames ; (; ). protected . write variable names, ascii ; Definition at line 450 of file RuleFitAPI.cxx. ◆ WriteYhat(). Bool_t TMVA::RuleFitAPI::WriteYhat ; (; ). protected . written by rf_go.exe ; Definition at line 473 of file RuleFitAPI.cxx. Member Data Documentation. ◆ fLogger. MsgLogger TMVA::RuleFitAPI::fLogger. mutableprivate . ! message logger ; Definition at line 193 of file RuleFitAPI.h. ◆ fMethodRuleFit. const MethodRuleFit* TMVA::RuleFitAPI::fMethodRuleFit. private . parent method - set in constructor ; Definition at line 180 of file RuleFitAPI.h. ◆ fModelType. TString TMVA::RuleFitAPI::fModelType. private . model type string ; Definition at line 191 of file RuleFitAPI.h. ◆ fRFIntParms. IntParms TMVA::RuleFitAPI::fRFIntParms. private . integer parameters ; Definition at line 187 of file RuleFitAPI.h. ◆ fRFLx. std::vector<int> TMVA::RuleFitAPI::fRFLx. private . variable selector ; Definition at line 189 of file RuleFitAPI.h. ◆ fRFProgram. ERFProgram TMVA::RuleFitAPI::fRFProgram. private . what to run ; Definition at line 190 of file Rule",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleFitAPI.html:13924,variab,variable,13924,doc/master/classTMVA_1_1RuleFitAPI.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleFitAPI.html,1,['variab'],['variable']
Modifiability,"rited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooIntegrator2D, is parameters and capabilities with RooNumIntFactory. RooIntegrator2D(); Default constructor. RooIntegrator2D(const RooAbsFunc& function, RooIntegrator1D::SummationRule rule = RooIntegrator1D::Trapezoid, Int_t maxSteps = 0, Double_t eps = 0); Constructor with a given function binding, summation rule,; maximum number of steps and conversion tolerance. The integration; limits are taken from the definition in the function binding. RooIntegrator2D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, RooIntegrator1D::SummationRule rule = Trapezoid, Int_t maxSteps = 0, Double_t eps = 0); Constructor with a given function binding, summation rule,; maximum number of steps, conversion tolerance and an explicit; choice of integration limits on both dimensions. RooIntegrator2D(const RooAbsFunc& function, const RooNumIntConfig& config); Constructor with a function binding and a configuration object.; The integration limits are taken from the definition in the function; binding. RooIntegrator2D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, const RooNumIntConfig& config); Constructor with a function binding, a configuration object and; an explicit definition of the integration limits. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Clone integrator with new function and configuration. Needed to support RooNumIntFactory. ~RooIntegrator2D(); Destructor. Bool_t checkLimits() const; Verify that the limits are OK for this integrator (i.e. no open-ended ranges). RooIntegrator2D(); Constructors, assignment etc. Bool_t canIntegrate1D() const; { return kFALSE ; }. Bool_t canIntegrate2D() const; { return kTRUE ; }. Bool_t canIntegrateND() const; { return kFALSE ; }. Bool_t canIntegrateOpenEnded() const; { return kFALSE ; }. » Last changed: ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooIntegrator2D.html:9525,config,config,9525,root/html526/RooIntegrator2D.html,https://root.cern,https://root.cern/root/html526/RooIntegrator2D.html,22,['config'],"['config', 'configuration']"
Modifiability,"rited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGEventHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLEventHandler.html:17240,inherit,inherited,17240,doc/master/classTGLEventHandler.html,https://root.cern,https://root.cern/doc/master/classTGLEventHandler.html,3,['inherit'],['inherited']
Modifiability,"rited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Private Member Functions; double _DEBUG_getVal (const RooArgSet *normalisationSet) const;  Debug version of getVal(), which is slow and does error checking. ;  . Friends; class AddCacheElem;  ; class BatchInterfaceAccessor;  ; class RooAddHelpers;  ; class RooAddModel;  ; class RooAddPdf;  ; class RooFit::EvalContext;  ; class RooRealBinding;  ; class RooRealSumFunc;  ; class RooRealSumPdf;  ; class RooVectorDataStore;  . Additional Inherited Members;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooAbsReal.h>. Inheritance diagram for RooAbsReal:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ value_type. using RooAbsReal::value_type = double. Definition at line 61 of file RooAbsReal.h. Member Enumeration Documentation. ◆ ErrorLoggingMode. enum RooAbsReal::ErrorLoggingMode. EnumeratorPrintErrors ; CollectErrors ; CountErrors ; Ignore . Definition at line 317 of file RooAbsReal.h. ◆ ScaleType. enum RooAbsReal::ScaleType. EnumeratorRaw ; Relative ; NumEvent ; RelativeExpected . Definition at line 276 of file RooAbsReal.h. Constructor & Destructor Documentation. ◆ RooAbsReal() [1/4]. RooAbsReal::RooAbsReal ; (; ). coverity[UNINIT_CTOR] Default constructor ; Definition at line 199 of file RooAbsReal.cxx. ◆ RooAbsReal() [2/4]. RooAbsReal::RooAbsReal ; (; const char * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:60498,inherit,inherited,60498,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['inherit'],['inherited']
Modifiability,"rited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Attributes; TString fLabel;  Text associated with the entry, will become latex. ;  ; TObject * fObject;  pointer to object being represented by this entry ;  ; TString fOption;  Options associated with this entry. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions; TLegendEntry & operator= (const TLegendEntry &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 ));",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLegendEntry.html:17506,inherit,inherited,17506,doc/master/classTLegendEntry.html,https://root.cern,https://root.cern/doc/master/classTLegendEntry.html,1,['inherit'],['inherited']
Modifiability,"rited from TBasket; static constexpr int kIOBitCount = 1;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TBasket; virtual void ReadResetBuffer (Int_t basketnumber);  Reset the read basket TBuffer memory allocation if needed. ;  ;  Protected Member Functions inherited from TKey; void Build (TDirectory *motherDir, const char *classname, Long64_t filepos);  Method used in all TKey constructor to initialize basic data fields. ;  ; virtual void Create (Int_t nbytes, TFile *f=nullptr);  Create a TKey object of specified size. ;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; void Reset ();  Reset the key as it had not been 'filled' yet. ;  ; virtual Int_t WriteFileKeepBuffer (TFile *f=nullptr);  Write the encoded object supported by this key. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TBasketSQL.h>. Inheritance diagram for TBasketSQL:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TBasketSQL() [1/3]. TBasketSQL::TBasketSQL ; (; const TBasketSQL & ; ). private . ◆ TBasketSQL() [2/3]. TBasketSQL::TBasketSQL ; (; ). Default constructor. ; Definition at line 34 of file TBasketSQL.cxx. ◆ TBasketSQL() [3/3]. TBasketSQL::TBasketSQL ; (; const char * ; name, . const char * ; title, . TBranch * ; branch, . TSQLResult ** ; rs, . TString * ; insert_query, . std::vector< Int_t > * ; vc, . TSQLRow ** ; row . ). Regular constructor. ; Definition at line 41 of file TBasketSQL.cxx. ◆ ~TBasketSQL(). TBasketSQL::~TBasketSQL ; (; ). override . Destructor. ; Definition at line 75 of file TBasketSQL.cxx. Member Function Documentation. ◆ Class(). static TClass * TBas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBasketSQL.html:20966,inherit,inherited,20966,doc/master/classTBasketSQL.html,https://root.cern,https://root.cern/doc/master/classTBasketSQL.html,1,['inherit'],['inherited']
Modifiability,"rited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Static Protected Attributes inherited from TEveWindow; static Pixel_t fgCurrentBackgroundColor = 0x80A0C0;  ; static UInt_t fgMainFrameDefHeight = 480;  ; static UInt_t fgMainFrameDefWidth = 640;  ; static Pixel_t fgMiniBarBackgroundColor = 0x80C0A0;  . #include <TEveWindow.h>. Inheritance diagram for TEveWindowSlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveWindowSlot() [1/2]. TEveWindowSlot::TEveWindowSlot ; (; const TEveWindowSlot & ; ). private . ◆ TEveWindowSlot() [2/2]. TEveWindowSlot::TEveWindowSlot ; (; const char * ; n = ""TEveWindowSlot"", . const char * ; t = """" . ). Constructor. ; Definition at line 1137 of file TEveWindow.cxx. ◆ ~TEveWindowSlot(). TEveWindowSlot::~TEveWindowSlot ; (; ). override . Destructor. ; Definition at line 1152 of file TEveWindow.cxx. Member Function Documentation. ◆ Class(). static TClass * TEveWindowSlot::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEveWindowSlot::Class_Name ; (; ). static . ReturnsName of this class .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindowSlot.html:37451,inherit,inherited,37451,doc/master/classTEveWindowSlot.html,https://root.cern,https://root.cern/doc/master/classTEveWindowSlot.html,1,['inherit'],['inherited']
Modifiability,"rited from TEvePointSelectorConsumer; enum  ETreeVarType_e { kTVT_XYZ; , kTVT_RPhiZ; };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLineProjected.html:48216,inherit,inherited,48216,doc/master/classTEveLineProjected.html,https://root.cern,https://root.cern/doc/master/classTEveLineProjected.html,8,['inherit'],['inherited']
Modifiability,"rited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGStatusBar (const TGStatusBar &)=delete;  ; TGStatusBar & operator= (const TGStatusBar &)=delete;  . Friends; class TGStatusBarPart;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGStatusBar.h>. Inheritance diagram for TGStatusBar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGStatusBar() [1/2]. TGStatusBar::TGS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGStatusBar.html:31682,inherit,inherited,31682,doc/master/classTGStatusBar.html,https://root.cern,https://root.cern/doc/master/classTGStatusBar.html,1,['inherit'],['inherited']
Modifiability,"rited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  ELockingKinds { kLockFree = 0; , kLockBusy = 1; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void AddIdEntry (Long64_t tableid, Int_t subid, Int_t type, const char *name, const char *sqlname, const char *info);  Add entry into IdsTable, where all tables names and columns names are listed. ;  ; TString CodeLongString (Long64_t objid, Int_t strid);  Produces id which will be placed in column instead of string itself. ;  ; void CreateBasicTables ();  Creates initial tables in database This is table with configurations and table with keys Function called once when first object is stored to the file. ;  ; Bool_t CreateClassTable (TSQLClassInfo *sqlinfo, TObjArray *colinfos);  Create normal class table if required. ;  ; Bool_t CreateRawTable (TSQLClassInfo *sqlinfo);  Create the raw table. ;  ; Long64_t DefineNextKeyId ();  Returns next possible key identifier. ;  ; TString DefineTableName (const char *clname, Int_t version, Bool_t rawtable);  Proposes table name for class. ;  ; void DeleteKeyFromDB (Long64_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLFile.html:40570,inherit,inherited,40570,doc/master/classTSQLFile.html,https://root.cern,https://root.cern/doc/master/classTSQLFile.html,1,['inherit'],['inherited']
Modifiability,"rited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; RInside * fR;  ; TThread * th;  . Private Member Functions;  TRInterface (const Int_t argc=0, const Char_t *argv[]=NULL, const Bool_t loadRcpp=true, const Bool_t verbose=false, const Bool_t interactive=true);  The command line arguments are by default argc=0 and argv=NULL, The verbose mode is by default disabled but you can enable it to show procedures information in stdout/stderr. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRInterface.h>. Inheritance diagram for ROOT::R::TRInterface:. This browser is not able to show SVG: try Firefox, Chrome, Safari, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRInterface.html:17161,inherit,inherited,17161,doc/master/classROOT_1_1R_1_1TRInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRInterface.html,1,['inherit'],['inherited']
Modifiability,"rited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::unique_ptr< const RooArgList > fAllTestStatisticsData;  for the case of multiple test statistics, holds all the results ;  ; std::unique_ptr< RooDataSet > fAltDetailedOutput;  ; std::unique_ptr< SamplingDistribution > fAltDistr;  ; double fAlternatePValue;  p-value for the alternate hypothesis (small number means disfavoured) ;  ; double fAlternatePValueError;  error of p-value for the alternate hypothesis (small number means disfavoured) ;  ; bool fBackgroundIsAlt;  ; std::unique_ptr< RooDataSet > fFitInfo;  ; std::unique_ptr< RooDataSet > fNullDetailedOutput;  ; std::unique_ptr< SamplingDistribution > fNullDistr;  ; double fNullPValue;  p-value for the null hypothesis (small number means disfavoured) ;  ; double fNullPValueError;  error of p-value for the null hypothesis (small number means disfavoured) ;  ; bool fPValueIsRightTail;  ; double fTestStatisticData;  result of the test statistic evaluated on data ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; void UpdatePValue (const SamplingDistribution *distr, double &pvalue, double &perror, bool pIsRightTail);  updates the pvalue if sufficient data is available ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HypoTestResult.html:15574,inherit,inherited,15574,doc/master/classRooStats_1_1HypoTestResult.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HypoTestResult.html,1,['inherit'],['inherited']
Modifiability,"rited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; double _defYmax = 1.0;  Default maximum for Yaxis (as calculated from contents) ;  ; double _defYmin = 1e-5;  Default minimum for Yaxis (as calculated from contents) ;  ; TDirectory * _dir = nullptr;  ! non-persistent ;  ; TH1 * _hist = nullptr;  Histogram that we uses as basis for drawing the content. ;  ; Items _items;  A list of the items we contain. ;  ; double _normBinWidth = 0;  Histogram bin width (for normalization) ;  ; double _normNumEvts = 0;  Number of events in histogram (for normalization) ;  ; const RooPlotable * _normObj = nullptr;  ! Pointer to normalization object ; ;  ; RooArgSet * _normVars = nullptr;  Variables that PDF plots should be normalized over. ;  ; double _padFactor;  Scale our y-axis to _padFactor of our maximum contents. ;  ; RooAbsRealLValue * _plotVar = nullptr;  The variable we are plotting. ;  ; RooArgSet * _plotVarSet = nullptr;  A list owning the cloned tree nodes of the plotVarClone. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static bool _addDirStatus = true;  static flag controlling AutoDirectoryAdd feature ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooPlot.h>. Inheritance diagram for RooPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Items. using RooPlot::Items = std::vector<std::pair<TObject*,std::string> >. Definition at line 47 of file RooPlot.h. Constructor & Destructor Documentation. ◆ RooPlot() [1/9]. RooPlot::RooPlot ; (; ). Default constructor coverity[UNINIT_CTOR]. ; Definition at line 85 o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:26313,variab,variable,26313,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['variab'],['variable']
Modifiability,"rited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TCanvas (const TCanvas &canvas)=delete;  ; void Build ();  Build a canvas. Called by all constructors. ;  ; void CopyPixmaps () override;  Copy the canvas pixmap of the pad to the canvas. ;  ; void CreatePainter ();  Probably, TPadPainter must be placed in a separate ROOT module - ""padpainter"" (the same as ""histpainter""). ;  ; void DrawEventStatus (Int_t event, Int_t x, Int_t y, TObject *selected);  Report name and title of primitive below the cursor. ;  ; TCanvas & operator= (const TCanvas &rhs)=delete;  ; void RunAutoExec ();  Execute the list of TExecs in the current pad. ;  . Friends; class TCanvasImp;  ; class TInterpreter;  ; class TThread;  ; class TWebCanvas;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . #include <TCanvas.h>. Inheritance diagram for TCanvas:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. ano",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:61570,inherit,inherited,61570,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,4,['inherit'],['inherited']
Modifiability,"riter &)=delete;  ; TSQLMonitoringWriter & operator= (const TSQLMonitoringWriter &)=delete;  . Private Attributes; TSQLServer * fDB;  ; Long64_t fMaxBulkSize;  ; TString fTable;  ; Bool_t fVerbose;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualMonitoringWriter; TList * fTmpOpenPhases;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TSQLMonitoring.h>. Inheritance diagram for TSQLMonitoringWriter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSQLMonitoringWriter() [1/2]. TSQLMonitoringWriter::TSQLMonitoringWriter ; (; const TSQLMonitoringWriter & ; ). privatedelete . ◆ TSQLMonitoringWriter() [2/2]. TSQLMonitoringWriter::TSQLMonitoringWriter ; (; const char * ; serv, . const char * ; user, . const char * ; pass, . const char * ; table . ). Constructor. ; Definition at line 31 of file TSQLMonitoring.cxx. ◆ ~TSQLMonitoringWriter(). TSQLMonitoringWriter::~TSQLMonitoringWriter ; (; ). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLMonitoringWriter.html:12501,inherit,inherited,12501,doc/master/classTSQLMonitoringWriter.html,https://root.cern,https://root.cern/doc/master/classTSQLMonitoringWriter.html,2,['inherit'],['inherited']
Modifiability,"rites multiple baskets to disk in parallel; 521 /// - TTreeCacheUnzip decompresses the baskets contained in a TTreeCache in parallel; 522 /// - THx::Fit performs in parallel the evaluation of the objective function over the data; 523 /// - TMVA::DNN trains the deep neural networks in parallel; 524 /// - TMVA::BDT trains the classifier in parallel and multiclass BDTs are evaluated in parallel; 525 ///; 526 /// EnableImplicitMT calls in turn EnableThreadSafety.; 527 /// The 'numthreads' parameter allows to control the number of threads to; 528 /// be used by the implicit multi-threading. However, this parameter is just; 529 /// a hint for ROOT: it will try to satisfy the request if the execution; 530 /// scenario allows it. For example, if ROOT is configured to use an external; 531 /// scheduler, setting a value for 'numthreads' might not have any effect.; 532 /// The maximum number of threads can be influenced by the environment; 533 /// variable `ROOT_MAX_THREADS`: `export ROOT_MAX_THREADS=2` will try to set; 534 /// the maximum number of active threads to 2, if the scheduling library; 535 /// (such as tbb) ""permits"".; 536 ///; 537 /// \note Use `DisableImplicitMT()` to disable multi-threading (some locks will remain in place as; 538 /// described in EnableThreadSafety()). `EnableImplicitMT(1)` creates a thread-pool of size 1.; 539 void EnableImplicitMT(UInt_t numthreads); 540 {; 541#ifdef R__USE_IMT; 542 if (ROOT::Internal::IsImplicitMTEnabledImpl()); 543 return;; 544 EnableThreadSafety();; 545 static void (*sym)(UInt_t) = (void(*)(UInt_t))Internal::GetSymInLibImt(""ROOT_TImplicitMT_EnableImplicitMT"");; 546 if (sym); 547 sym(numthreads);; 548 ROOT::Internal::IsImplicitMTEnabledImpl() = true;; 549#else; 550 ::Warning(""EnableImplicitMT"", ""Cannot enable implicit multi-threading with %d threads, please build ROOT with -Dimt=ON"", numthreads);; 551#endif; 552 }; 553 ; 554 ////////////////////////////////////////////////////////////////////////////////; 555 /// Disables th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:20086,variab,variable,20086,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['variab'],['variable']
Modifiability,"rithmetic and Comparison Operators; The TLorentzVector class provides operators to add subtract or compare four-vectors:; v3 = -v1;; v1 = v2+v3;; v1+= v3;; v1 = v2 + v3;; v1-= v3;; if (v1 == v2) {...}; if (v1 != v3) {...}; 17.4.5 Magnitude/Invariant mass, beta, gamma, scalar product; The scalar product of two four-vectors is calculated with the (-,-,-,+)metric:; s = v1*v2 = t1*t2-x1*x2-y1*y2-z1*z2; The magnitude squared mag2 of a four-vector is therefore:; mag2 = v*v = t*t-x*x-y*y-z*z; If mag2 is negative: mag = -Sqrt(-mag*mag). The methods are:; Double_t s, s2;; s = v1.Dot(v2);// scalar product; s = v1*v2;// scalar product; s2 = v.Mag2();ors2 = v.M2();; s = v.Mag();s = v.M();; Since in case of momentum and energy the magnitude has the meaning of invariant mass TLorentzVector provides the more meaningful aliases M2() and M(). The methods Beta() and Gamma() returns beta and gamma = 1/Sqrt(1-beta*beta).; 17.4.6 Lorentz Boost; A boost in a general direction can be parameterized with three parameters which can be taken as the components of a three vector b=(bx,by,bz). With x=(x,y,z) and gamma=1/Sqrt(1-beta*beta) (beta being the module of vector b), an arbitrary active Lorentz boost transformation (from the rod frame to the original frame) can be written as:; x = x' + (gamma-1)/(beta*beta)*(b*x')*b + gamma*t'*b; t = gamma(t'+ b*x'); The Boost() method performs a boost transformation from the rod frame to the original frame. BoostVector() returns a TVector3 of the spatial components divided by the time component:; TVector3 b;; v.Boost(bx,by,bz);; v.Boost(b);; b = v.BoostVector();// b=(x/t,y/t,z/t); 17.4.7 Rotations; There are four sets of functions to rotate the TVector3 component of a TLorentzVector:; Around Axes:; v.RotateX(TMath::Pi()/2.);; v.RotateY(.5);; v.RotateZ(.99);; Around an arbitrary axis:; v.Rotate(TMath::Pi()/4., v1); // rotation around v1; Transformation from rotated frame:; v.RotateUz(direction); // direction must be a unit TVector3; Rotation by TRotation:;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:869727,parameteriz,parameterized,869727,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['parameteriz'],['parameterized']
Modifiability,"rition used in Regression; TMVA::SeparationBase*fSepTypethe separation crition; UInt_tfSigClassclass which is treated as signal when building the tree; Int_tfTreeIDjust an ID number given to the tree.. makes debugging easier as tree knows who he is.; Bool_tfUseExclusiveVarsindividual variables already used in fisher criterium are not anymore analysed individually for node splitting; Bool_tfUseFisherCutsuse multivariate splits using the Fisher criterium; Int_tfUseNvarsthe number of variables used in randomised trees;; Bool_tfUsePoissonNvarsuse ""fUseNvars"" not as fixed number but as mean of a possion distr. in each split; Bool_tfUseSearchTreecut scan done with binary trees or simple event loop.; vector<Double_t>fVariableImportancethe relative importance of the different variables; static const Int_tfgDebugLeveldebug level determining some printout/control plots etc.; static const Int_tfgRandomSeedset nonzero for debugging and zero for random seeds. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; DecisionTree(); default constructor using the GiniIndex as separation criterion,; no restrictions on minium number of events in a leave note or the; separation gain in the node splitting. DecisionTree(TMVA::SeparationBase* sepType, Float_t minSize, Int_t nCuts, TMVA::DataSetInfo* = __null, UInt_t cls = 0, Bool_t randomisedTree = kFALSE, Int_t useNvars = 0, Bool_t usePoissonNvars = kFALSE, UInt_t nMaxDepth = 9999999, Int_t iSeed = fgRandomSeed, Float_t purityLimit = 0.5, Int_t treeID = 0); constructor specifying the separation type, the min number of; events in a no that is still subjected to further splitting, the; number of bins in the grid used in applying the cut for the node; splitting. DecisionTree(const TMVA::DecisionTree& d); copy constructor that creates a true copy, i.e. a completely independent tree; the node copy will recursively copy all the nodes. ~DecisionTree(); destructor. void SetParentTreeInNodes(TMVA::Node* n = __nul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__DecisionTree.html:8642,Inherit,Inheritance,8642,root/html602/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html602/TMVA__DecisionTree.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rity (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TRootCanvas * fCanvas;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContainer.html:21229,inherit,inherited,21229,doc/master/classTRootContainer.html,https://root.cern,https://root.cern/doc/master/classTRootContainer.html,1,['inherit'],['inherited']
Modifiability,"rivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . void ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >::UseSumOfWeightSquare ; (; bool ; on = true). inline . Definition at line 173 of file PoissonLikelihoodFCN.h. Member Data Documentation. ◆ fExecutionPolicy. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . ::ROOT::EExecutionPolicy ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >::fExecutionPolicy. private . Execution policy. ; Definition at line 210 of file PoissonLikelihoodFCN.h. ◆ fGrad. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . std::vector<double> ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >::fGrad. mutableprivate . for derivatives ; Definition at line 208 of file PoissonLikelihoodFCN.h. ◆ fIsExtended. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . bool ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >::fIsExtended. private . flag to indicate if is extended (when false is a Multinomial likelihood), default is true ; Definition at line 203 of file PoissonLikelihoodFCN.h. ◆ fNEffPoints. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . unsigned int ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >::fNEffPoints. mutableprivate . number of effective points used in the fit ; Definition at line 206 of file PoissonLikelihoodFCN.h. ◆ fWeight. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . int ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >::fWeight. private . flag to indicate if needs to evaluate using weight or weight squared (default weight = 0) ; Definition at line 204 of file PoissonLikelihoodFCN.h. math/mathcore/inc/Fit/PoissonLikelihoodFCN.h. ROOTFitPoissonLikelihoodFCN. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN.html:14454,extend,extended,14454,doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN.html,1,['extend'],['extended']
Modifiability,"rivFunType, ModelFunType >inlinevirtual; HasHessian() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlinevirtual; Hessian(const double *x, double *hess) constROOT::Math::BasicFitMethodFunction< DerivFunType >inlinevirtual; IGradModelFunction typedefROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; IModelFunction typedefROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >; IsAGradFCN()ROOT::Math::BasicFitMethodFunction< DerivFunType >inlinestatic; IsAGradFCN()ROOT::Math::BasicFitMethodFunction< DerivFunType >inline; kLeastSquare enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; kLogLikelihood enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; kPoissonLikelihood enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; kUndefined enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; LogLikelihoodFCN(const std::shared_ptr< UnBinData > &data, const std::shared_ptr< IModelFunction > &func, int weight=0, bool extended=false, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential)ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inline; LogLikelihoodFCN(const UnBinData &data, const IModelFunction &func, int weight=0, bool extended=false, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential)ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inline; LogLikelihoodFCN(const LogLikelihoodFCN &f)ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inline; ModelFunction() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlinevirtual; ModelFunctionPtr() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inline; NCalls() constROOT::Math::BasicFitMethodFunction< DerivFunType >inlinevirtual; NDim() const overrideROOT::Math::BasicFitMethodFunction< DerivFunType >inline; NFitPoints() constROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inlinevirtual; NPoints() constROOT::Math::BasicFitMethodF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html:3402,extend,extended,3402,doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html,1,['extend'],['extended']
Modifiability,"rivate . Definition at line 139 of file TPluginManager.h. ◆ GetOrigin(). const char * TPluginHandler::GetOrigin ; (; ); const. inlineprivate . Definition at line 140 of file TPluginManager.h. ◆ GetPlugin(). const char * TPluginHandler::GetPlugin ; (; ); const. inlineprivate . Definition at line 138 of file TPluginManager.h. ◆ GetRegexp(). const char * TPluginHandler::GetRegexp ; (; ); const. inlineprivate . Definition at line 137 of file TPluginManager.h. ◆ IsA(). TClass * TPluginHandler::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 254 of file TPluginManager.h. ◆ LoadPlugin(). Int_t TPluginHandler::LoadPlugin ; (; ). Load the plugin library for this handler. ; Returns 0 on successful loading and -1 in case the library does not exist or in case of error. ; Definition at line 293 of file TPluginManager.cxx. ◆ LoadPluginImpl(). void TPluginHandler::LoadPluginImpl ; (; ). private . Load the plugin library for this handler. ; Sets status to 0 on successful loading and -1 in case the library does not exist or in case of error. ; Definition at line 274 of file TPluginManager.cxx. ◆ operator=(). TPluginHandler & TPluginHandler::operator= ; (; const TPluginHandler & ; ). privatedelete . ◆ Print(). void TPluginHandler::Print ; (; Option_t * ; opt = """"); const. overridevirtual . Print info about the plugin handler. ; If option is ""a"" print also the ctor's that will be used. ; Reimplemented from TObject.; Definition at line 341 of file TPluginManager.cxx. ◆ SetupCallEnv(). void TPluginHandler::SetupCallEnv ; (; ). private . Setup ctor or static method call environment. ; Definition at line 198 of file TPluginManager.cxx. ◆ Streamer(). void TPluginHandler::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TPluginHandler::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginHandler.html:17360,plugin,plugin,17360,doc/master/classTPluginHandler.html,https://root.cern,https://root.cern/doc/master/classTPluginHandler.html,1,['plugin'],['plugin']
Modifiability,"rivate . the weight used to boost the next classifier ; Definition at line 182 of file MethodBoost.h. ◆ fBTrainBgdMVAHist. std::vector< TH1* > TMVA::MethodBoost::fBTrainBgdMVAHist. private . Definition at line 174 of file MethodBoost.h. ◆ fBTrainSigMVAHist. std::vector< TH1* > TMVA::MethodBoost::fBTrainSigMVAHist. private . Definition at line 173 of file MethodBoost.h. ◆ fDataSetManager. DataSetManager* TMVA::MethodBoost::fDataSetManager. private . DSMTEST. ; Definition at line 193 of file MethodBoost.h. ◆ fDetailedMonitoring. Bool_t TMVA::MethodBoost::fDetailedMonitoring. private . produce detailed monitoring histograms (boost-wise) ; Definition at line 157 of file MethodBoost.h. ◆ fHistoricBoolOption. Bool_t TMVA::MethodBoost::fHistoricBoolOption. private . historic variable, only needed for ""CompatibilityOptions"" ; Definition at line 195 of file MethodBoost.h. ◆ fHistoricOption. TString TMVA::MethodBoost::fHistoricOption. private . historic variable, only needed for ""CompatibilityOptions"" ; Definition at line 194 of file MethodBoost.h. ◆ fMethodError. Double_t TMVA::MethodBoost::fMethodError. private . estimation of the level error of the classifier ; Definition at line 183 of file MethodBoost.h. ◆ fMonitorBoostedMethod. Bool_t TMVA::MethodBoost::fMonitorBoostedMethod. private . monitor the MVA response of every classifier ; Definition at line 167 of file MethodBoost.h. ◆ fMonitorTree. TTree* TMVA::MethodBoost::fMonitorTree. private . tree to monitor values during the boosting ; Definition at line 181 of file MethodBoost.h. ◆ fMVAvalues. std::vector<Float_t>* TMVA::MethodBoost::fMVAvalues. private . mva values for the last trained method ; Definition at line 191 of file MethodBoost.h. ◆ fOverlap_integral. Double_t TMVA::MethodBoost::fOverlap_integral. private . Definition at line 189 of file MethodBoost.h. ◆ fRandomSeed. UInt_t TMVA::MethodBoost::fRandomSeed. private . seed for random number generator used for bagging ; Definition at line 160 of file MethodBoost.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBoost.html:44006,variab,variable,44006,doc/master/classTMVA_1_1MethodBoost.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBoost.html,1,['variab'],['variable']
Modifiability,"rivate Attributes |; List of all members ; TGLSAFrame Class ReferenceGraphics » 3D Graphics » OpenGL rendering. ; Standalone GL Viewer GUI main frame. ; Is aggregated in TGLSAViewer - top level standalone viewer object. ; Definition at line 28 of file TGLSAFrame.h. Public Member Functions;  TGLSAFrame (const TGWindow *parent, TGLSAViewer &viewer);  Construct GUI frame, bound to passed 'viewer'. ;  ;  TGLSAFrame (TGLSAViewer &viewer);  Construct GUI frame, bound to passed 'viewer'. ;  ;  ~TGLSAFrame () override;  Destroy the GUI frame. ;  ; void CloseWindow () override;  Close the GUI frame. ;  ; TClass * IsA () const override;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process GUI message - deferred back up to TGLSAViewer::ProcessFrameMessage() ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMainFrame () override;  TGMainFrame destructor. ;  ; virtual Bool_t BindKey (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Bind key to a window. ;  ; void DontCallClose ();  Typically call this method in the slot connected to the CloseWindow() signal to prevent the calling of the default or any derived CloseWindow() methods to prevent premature or double deletion of this window. ;  ; TList * GetBindList () const;  ; void GetClassHints (const char *&className, const char *&resourceName) const;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; const char * GetIconPixmap () const;  ; void GetMWMHints (UInt_t &value, UInt_t &funcs, UInt_t &input) const;  ; const char * GetWindowName () const;  ; void GetWMPosition (Int_t &x, Int_t &y) const;  ; void GetWMSize (UInt_t &w, UInt_t &h) const;  ; void GetWMSizeHi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLSAFrame.html:1200,inherit,inherited,1200,doc/master/classTGLSAFrame.html,https://root.cern,https://root.cern/doc/master/classTGLSAFrame.html,1,['inherit'],['inherited']
Modifiability,"rivate Attributes; void * fDirp;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebSystem.html:30152,inherit,inherited,30152,doc/master/classTWebSystem.html,https://root.cern,https://root.cern/doc/master/classTWebSystem.html,2,['inherit'],['inherited']
Modifiability,"rivate Member Functions |; List of all members ; TODBCRow Class Reference. . Definition at line 28 of file TODBCRow.h. Public Member Functions;  TODBCRow (SQLHSTMT stmt, Int_t fieldcount);  Single row of query result. ;  ; virtual ~TODBCRow ();  Destroy row object. ;  ; void Close (Option_t *opt="""") final;  Close row. ;  ; const char * GetField (Int_t field) final;  Get specified field from row (0 <= field < GetFieldCount()). ;  ; ULong_t GetFieldLength (Int_t field) final;  Get length in bytes of specified field. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSQLRow; virtual ~TSQLRow ();  ; TClass * IsA () const override;  ; const char * operator[] (Int_t field);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTODBCRow.html:1273,inherit,inherited,1273,doc/master/classTODBCRow.html,https://root.cern,https://root.cern/doc/master/classTODBCRow.html,1,['inherit'],['inherited']
Modifiability,"rivate copy ctor. ;  ; Int_t AcquireSemaphore ();  Acquire semaphore. Returns 0 if OK, -1 on error. ;  ; void CreateSemaphore (Int_t pid=0);  Create semaphore used for synchronizing access to shared memory. ;  ; void DeleteSemaphore ();  Delete the semaphore. ;  ; TMapFile * FindShadowMapFile ();  Returns shadow map file. ;  ; Int_t GetBestBuffer ();  Return the best buffer size for objects in this file. ;  ; void InitDirectory ();  Create the directory associated to this mapfile. ;  ; TMapFile & operator= (const TMapFile &rhs)=delete;  ; Int_t ReleaseSemaphore ();  Release semaphore. Returns 0 if OK, -1 on error. ;  ; TObject * Remove (const char *name, Bool_t lock);  Remove object by name from shared memory. ;  ; TObject * Remove (TObject *obj, Bool_t lock);  Remove object from shared memory. ;  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void * MapToAddress ();  Return the base address at which we would like the next TMapFile's mapped data to start. ;  . Private Attributes; ULongptr_t fBaseAddr;  Base address of mapped memory region. ;  ; TList * fBrowseList;  List of KeyMapFile objects. ;  ; TDirectory * fDirectory;  Pointer to directory associated to this mapfile. ;  ; Longptr_t fFd;  Descriptor of mapped file. ;  ; TMapRec * fFirst;  List of streamed objects is shared memory. ;  ; TObject * fGetting;  Don't deadlock in update mode, when from Get() Add() is called. ;  ; ULongptr_t fhSemaphore;  HANDLE of WIN32 Mutex object to implement semaphore. ;  ; TMapRec * fLast;  Last object in list of shared objects. ;  ; void * fMmallocDesc;  Pointer to mmalloc descriptor. ;  ; char * fName;  Name of mapped file. ;  ; Longptr_t fOffset;  Offset in bytes for region",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMapFile.html:14991,inherit,inherited,14991,doc/master/classTMapFile.html,https://root.cern,https://root.cern/doc/master/classTMapFile.html,1,['inherit'],['inherited']
Modifiability,"rivate:. ROOT::Math::GSLNLSMinimizerGSLNLSMinimizer(const ROOT::Math::GSLNLSMinimizer&); ROOT::Math::GSLNLSMinimizer&operator=(const ROOT::Math::GSLNLSMinimizer& rhs). Data Members; protected:. ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::fOptionsminimizer options; intROOT::Math::Minimizer::fStatusstatus of minimizer ; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. const ROOT::Math::FitMethodFunction*fChi2Funcpointer to Least square function; vector<double>fCovMatrixcov matrix (stored as cov[ i * dim + j] ; doublefEdmedm value; vector<double>fErrors; ROOT::Math::GSLMultiFit*fGSLMultiFitpointer to GSL multi fit solver ; doublefLSToleranceLine Search Tolerance; unsigned intfNFreedimension of the internal function to be minimized ; vector<LSResidualFunc>fResiduals! transient Vector of the residual functions; unsigned intfSizenumber of fit points (residuals). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; operator=(const ROOT::Math::GSLNLSMinimizer& rhs). GSLNLSMinimizer(int type = 0). Default constructor. ~GSLNLSMinimizer(). Destructor (no operations). GSLNLSMinimizer(const ROOT::Math::GSLNLSMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool Minimize(); method to perform the minimization. double Edm() const; return expected distance reached from the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. { return (fChi2Func) ? fChi2Func->NCalls() : 0; }. bool ProvidesError() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the tot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GSLNLSMinimizer.html:7345,Inherit,Inheritance,7345,root/html534/ROOT__Math__GSLNLSMinimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GSLNLSMinimizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rivative(const double* x, const double* p, unsigned int ipar) const. Data Members; private:. unsigned intfDimcached value of dimension; TF1*fFuncpointer to ROOT function; boolfLinearflag for linear functions ; vector<double>fParamscached vector with parameter values; boolfPolynomialflag for polynomial functions ; static doublefgEpsepsilon used in derivative calculation h ~ eps |p|. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; WrappedMultiTF1(TF1& f, unsigned int dim = 0). constructor from a function pointer to a TF1; If dim = 0 dimension is taken from TF1::GetNdim().; IN case of multi-dimensional function created using directly TF1 object the dimension; returned by TF1::GetNdim is always 1. The user must then pass the correct value of dim. virtual ~WrappedMultiTF1(). Destructor (no operations). Function pointer is not owned. {}. WrappedMultiTF1(const ROOT::Math::WrappedMultiTF1& rhs). Copy constructor. IMultiGenFunction * Clone() const; @name interface inherited from IFunction . Clone the wrapper but not the original function. unsigned int NDim() const; function dimension. const double * Parameters() const; @name interface inherited from IParamFunction ; get the parameter values (return values cached inside, those inside TF1 might be different). void SetParameters(const double* p); set parameter values (only the cached one in this class,leave unchanges those of TF1). unsigned int NPar() const; return number of parameters. std::string ParameterName(unsigned int i) const; return parameter name (from TF1). void ParameterGradient(const double* x, const double* par, double* grad) const; evaluate the derivative of the function with respect to the parameters. void SetDerivPrecision(double eps); precision value used for calculating the derivative step-size; h = eps * |x|. The default is 0.001, give a smaller in case function changes rapidly. double GetDerivPrecision(); get precision value used for calculating the derivative step",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__WrappedMultiTF1.html:2540,inherit,inherited,2540,root/html526/ROOT__Math__WrappedMultiTF1.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__WrappedMultiTF1.html,1,['inherit'],['inherited']
Modifiability,"rivative, 2=second derivative; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TGraph*TSpline::fGraphGraph for drawing the knots; TH1F*TSpline::fHistogramTemporary histogram; Bool_tTSpline::fKstepTrue of equidistant knots; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; Int_tTSpline::fNpNumber of knots; Int_tTSpline::fNpxNumber of points used for graphical representation; TSplinePoly3*fPoly[fNp] Array of polynomial terms; TStringTNamed::fTitleobject title; Double_tfValBegInitial value of first or second derivative; Double_tfValEndEnd value of first or second derivative; Double_tTSpline::fXmaxMaximum value of abscissa; Double_tTSpline::fXminMinimum value of abscissa. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSpline3(const char *title, Double_t x[], Double_t y[], Int_t n, const char *opt, Double_t valbeg, Double_t valend); Third spline creator given an array of; arbitrary knots in increasing abscissa order and; possibly end point conditions. TSpline3(const char *title, Double_t xmin, Double_t xmax, Double_t y[], Int_t n, const char *opt, Double_t valbeg, Double_t valend); Third spline creator given an array of; arbitrary function values on equidistant n abscissa; values from xmin to xmax and possibly end point conditions. TSpline3(const char* title, Double_t* x, const TF1* func, Int_t n, const char* opt = 0, Double_t valbeg = 0, Double_t valend = 0); Third spline creator given an array of; arbitrary abscissas in increasing order and a function; to interpolate and possibly end point conditions. TSpline3(const char* title, Double_t xmin, Double_t xmax, const TF1* func, Int_t n, const char* opt = 0, Double_t valbeg = 0, Double_t valend = 0); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSpline3.html:9690,Inherit,Inheritance,9690,root/html532/TSpline3.html,https://root.cern,https://root.cern/root/html532/TSpline3.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rivatives for Monte Carlo multi-dimensional integration algorithm More...;  ; struct  ROOT::Math::MiserParameters;  Structure collecting parameters for MISER multidimensional integration. More...;  ; struct  ROOT::Math::VegasParameters;  Structures collecting parameters for VEGAS multidimensional integration For implementation of default parameters see file mathmore/src/GSLMCIntegrationWorkspace.h. More...;  . Typedefs; typedef double(* ROOT::Math::GSLMonteFuncPointer) (double *, size_t, void *);  Class for adapting any multi-dimension C++ functor class to C function pointers used by GSL MonteCarlo integration algorithms. ;  . Enumerations; enum  ROOT::Math::IntegrationMultiDim::Type { ;   ROOT::Math::IntegrationMultiDim::kDEFAULT = -1; , ROOT::Math::IntegrationMultiDim::kADAPTIVE; , ROOT::Math::IntegrationMultiDim::kVEGAS; , ROOT::Math::IntegrationMultiDim::kMISER; , ;   ROOT::Math::IntegrationMultiDim::kPLAIN. };  enumeration specifying the integration types. More...;  . Typedef Documentation. ◆ GSLMonteFuncPointer. typedef double(* ROOT::Math::GSLMonteFuncPointer)(double *, size_t, void *). Class for adapting any multi-dimension C++ functor class to C function pointers used by GSL MonteCarlo integration algorithms. ; The templated C++ function class must implement:; double operator( const double * x); This class defines static methods with will be used to fill the gsl_monte_function used by GSL. See for examples the GSL online manual ; Definition at line 56 of file GSLMonteFunctionAdapter.h. Enumeration Type Documentation. ◆ Type. enum ROOT::Math::IntegrationMultiDim::Type. enumeration specifying the integration types. . EnumeratorkDEFAULT default type specified in the static option . kADAPTIVE adaptive multi-dimensional integration . kVEGAS MC integration. . kMISER MC integration. . kPLAIN MC integration. . Definition at line 47 of file AllIntegrationTypes.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__MCIntegration.html:2093,adapt,adapting,2093,doc/master/group__MCIntegration.html,https://root.cern,https://root.cern/doc/master/group__MCIntegration.html,2,['adapt'],"['adapting', 'adaptive']"
Modifiability,"rivatives using cached parameter values. ;  ; virtual bool ParameterHessian (const T *, const double *, T *) const;  Evaluate the all the Hessian (second derivatives matrix) of the function with respect to the parameters at a point x. ;  ;  Public Member Functions inherited from ROOT::Math::IParametricFunctionMultiDimTempl< T >; T operator() (const T *x) const;  ; T operator() (const T *x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; virtual IBaseFunctionMultiDimTempl< T > * Clone () const =0;  Clone a function. ;  ; virtual bool HasGradient () const;  ; virtual unsigned int NDim () const =0;  Retrieve the dimension of the function. ;  ; T operator() (const T *x) const;  Evaluate the function at a point x[]. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  ; virtual unsigned int NPar () const =0;  Return the number of Parameters. ;  ; virtual std::string ParameterName (unsigned int i) const;  Return the name of the i-th parameter (starting from zero) Overwrite if want to avoid the default name (""Par_0, Par_1, ..."") ;  ; virtual const double * Parameters () const =0;  Access the parameter values. ;  ; virtual void SetParameters (const double *p)=0;  Set the parameter values. ;  . Private Member Functions; T DoEval (const T *x) const override;  Implement the ROOT::Math::IBaseFunctionMultiDim interface DoEval(x) using the cached parameter values. ;  ; T DoEvalPar (const T *x, const double *p) const override=0;  Implementation of the evaluation function using the x values and the parameters. ;  ; virtual T DoParameterDerivative (const T *x, const double *p, unsigned int ipar) const =0;  Evaluate the partial derivative w.r.t a parameter ipar , to be implemented by the derived classes. ;  . #include <Math/IParamFun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionMultiDimTempl.html:3492,inherit,inherited,3492,doc/master/classROOT_1_1Math_1_1IParametricGradFunctionMultiDimTempl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionMultiDimTempl.html,1,['inherit'],['inherited']
Modifiability,"rived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodBayesClassifier(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodBayesClassifier(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); Variable can handle classification with 2 classes. void Init( void ); default initialisation. void DeclareOptions(); define the options (their key words) that can be set in the option string. void ProcessOptions(); the option string is decoded, for availabel options see ""DeclareOptions"". ~MethodBayesClassifier( void ); destructor. void Train( void ); some training. void AddWeightsXMLTo(void* parent) const. void ReadWeightsFromStream(istream& istr); read back the training results from a file (stream). Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns MVA value for given event. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". void ReadWeightsFromXML(void* ); {}. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Abhishek Narain » Copyright (c) 2005-2006: *; » Last changed: root/tmva $Id: MethodBayesClassifier.h 36966 2010-11-26 09:50:13Z evt $ » Last generated: 2010-11-26 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBayesClassifier.html:16863,variab,variables,16863,root/html528/TMVA__MethodBayesClassifier.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBayesClassifier.html,1,['variab'],['variables']
Modifiability,"rived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. Float_tfBparmfree plane coefficient ; Float_tfCostcost value; Float_tfDoubleSigmaSquaredfor RBF Kernel; Float_tfGammaRBF Kernel parameter; vector<TMVA::SVEvent*>*fInputDatavector of training data in SVM format; Float_tfKappafor Sigmoidal Kernel; UInt_tfMaxItermax number of iteration; TVectorD*fMaxVarsfor normalization //is it still needed?? ; TVectorD*fMinVarsfor normalization //is it still needed?? ; UShort_tfNSubSetsnr of subsets, default 1; Int_tfOrderfor Polynomial Kernel ( polynomial order ); TMVA::SVKernelFunction*fSVKernelFunctionkernel function; vector<TMVA::SVEvent*>*fSupportVectorscontains support vectors; TStringfTheKernelkernel name; Float_tfThetafor Sigmoidal Kernel; Float_tfTolerancetolerance parameter; TMVA::SVWorkingSet*fWgSetsvm working set . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodSVM(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodSVM(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. ~MethodSVM(); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); SVM can handle classification with 2 classes and regression with one regression-target. void Init(); default initialisation. void DeclareOptions(); declare options available for this method. void DeclareCompatibilityOptions(). void ProcessOptions(); option post processing (if necessary). void Train(); Train SVM. void AddWeightsXMLTo(void* parent) const; write configuration to xml file. void ReadWeightsFromXML(void* wghtnode). void WriteWeightsToStream(TFile& fout) const; TODO write IT; write training sample (TT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodSVM.html:16809,Inherit,Inheritance,16809,root/html532/TMVA__MethodSVM.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodSVM.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. Float_tfBparmfree plane coefficient ; Float_tfCostcost value; Float_tfDoubleSigmaSquaredfor RBF Kernel; Float_tfGammaRBF Kernel parameter; vector<TMVA::SVEvent*>*fInputDatavector of training data in SVM format; Float_tfKappafor Sigmoidal Kernel; UInt_tfMaxItermax number of iteration; TVectorD*fMaxVarsfor normalization //is it still needed?? ; TVectorD*fMinVarsfor normalization //is it still needed?? ; UShort_tfNSubSetsnr of subsets, default 1; Int_tfOrderfor Polynomial Kernel ( polynomial order ); TMVA::SVKernelFunction*fSVKernelFunctionkernel function; vector<TMVA::SVEvent*>*fSupportVectorscontains support vectors; TStringfTheKernelkernel name; Float_tfThetafor Sigmoidal Kernel; Float_tfTolerancetolerance parameter; TMVA::SVWorkingSet*fWgSetsvm working set . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodSVM(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodSVM(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. ~MethodSVM(); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); SVM can handle classification with 2 classes and regression with one regression-target. void Init(); default initialisation. void DeclareOptions(); declare options available for this method. void DeclareCompatibilityOptions(); options that are used ONLY for the READER to ensure backward compatibility. void ProcessOptions(); option post processing (if necessary). void Train(); Train SVM. void AddWeightsXMLTo(void* parent) const; write configuration to xml file. void ReadWeightsFromXML(void* wghtnode). void Write",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodSVM.html:16782,Inherit,Inheritance,16782,root/html534/TMVA__MethodSVM.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodSVM.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rix () const override;  Return new matrix of type used by this finder. ;  ; TGeoNode * FindNode (Double_t *point, const Double_t *dir=nullptr) override;  find the node containing the query point ;  ; Int_t GetDivAxis () override;  ; TClass * IsA () const override;  ; Bool_t IsOnBoundary (const Double_t *point) const override;  Checks if the current point is on division boundary. ;  ; TGeoPatternFinder * MakeCopy (Bool_t reflect=kFALSE) override;  Make a copy of this finder. Reflect by Z if required. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TGeoVolume. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateMatrix (Int_t idiv, TGeoHMatrix &matrix) const override;  Fills external matrix with the local one corresponding to the given division index. ;  ;  Public Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder ();  Default constructor. ;  ;  TGeoPatternFinder (TGeoVolume *vol, Int_t ndiv);  Default constructor. ;  ;  ~TGeoPatternFinder () override;  Destructor. ;  ; virtual TGeoNode * CdNext ();  Make next node (if any) current. ;  ; void ClearThreadData () const;  ; void CreateThreadData (Int_t nthreads);  Create thread data for n threads max. ;  ; virtual Int_t GetByteCount () const;  ; Int_t GetCurrent ();  Return current index. ;  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternCylPhi.html:1900,inherit,inherited,1900,doc/master/classTGeoPatternCylPhi.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html,1,['inherit'],['inherited']
Modifiability,"rix elements <= val? ;  ; Bool_t operator== (Element val) const;  Are all matrix elements equal to val? ;  ; Bool_t operator> (Element val) const;  Are all matrix elements > val? ;  ; Bool_t operator>= (Element val) const;  Are all matrix elements >= val? ;  ; void Print (Option_t *name="""") const override;  Print the matrix as a table of elements. ;  ; virtual Element RowNorm () const;  Row matrix norm, MAX{ SUM{ |M(i,j)|, over j}, over i}. ;  ; Element SetTol (Element tol);  ; virtual TMatrixTBase< Element > & Sqr ();  Square each element of the matrix. ;  ; virtual TMatrixTBase< Element > & Sqrt ();  Take square root of all elements. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Element Sum () const;  Compute sum of elements. ;  ; virtual TMatrixTBase< Element > & UnitMatrix ();  Make a unit matrix (matrix need not be a square one). ;  ; virtual TMatrixTBase< Element > & Zero ();  Set matrix elements to zero. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTSym.html:13147,inherit,inherited,13147,doc/master/classTMatrixTSym.html,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html,1,['inherit'],['inherited']
Modifiability,"rix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoCompositeShape (const TGeoCompositeShape &)=delete;  ; TGeoCompositeShape & operator= (const TGeoCompositeShape &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TGeoBoolNode * fNode;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCompositeShape.html:29937,inherit,inherited,29937,doc/master/classTGeoCompositeShape.html,https://root.cern,https://root.cern/doc/master/classTGeoCompositeShape.html,1,['inherit'],['inherited']
Modifiability,"rixTColumn_const TMatrixTColumn; TMatrixTDiag_const TMatrixTDiag; TMatrixTFlat_const TMatrixTFlat; TMatrixTSub_const TMatrixTSub; TMatrixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. Function Members (Methods); public:. virtual~TMatrixTDiag_const<double>(); static TClass*Class(); Int_tGetInc() const; const TMatrixTBase<double>*GetMatrix() const; Int_tGetNdiags() const; const double*GetPtr() const; virtual TClass*IsA() const; const double&operator()(Int_t i) const; TMatrixTDiag_const<double>&operator=(const TMatrixTDiag_const<double>& trc); const double&operator[](Int_t i) const; virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMatrixTDiag_const<double>(); TMatrixTDiag_const<double>(const TMatrixT<double>& matrix); TMatrixTDiag_const<double>(const TMatrixTSym<double>& matrix); TMatrixTDiag_const<double>(const TMatrixTDiag_const<double>& trc). Data Members; protected:. Int_tfIncif ptr=@a[i,i], then ptr+inc = @a[i+1,i+1]; TMatrixTBase<double>*fMatrixthe matrix I am the diagonal of; Int_tfNdiagnumber of diag elems, min(nrows,ncols); const double*fPtrpointer to the a[0,0]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TMatrixTDiag_const<double>& trc); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. Int_t GetInc() const; { return fInc; }. const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Int_t GetNdiags() const; { return fNdiag; }. » Last changed: root/matrix:$Id$ » Last generated: 2015-06-30 15:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMatrixTDiag_const_double_.html:1812,Inherit,Inheritance,1812,root/html602/TMatrixTDiag_const_double_.html,https://root.cern,https://root.cern/root/html602/TMatrixTDiag_const_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rixTColumn_const TMatrixTColumn; TMatrixTDiag_const TMatrixTDiag; TMatrixTFlat_const TMatrixTFlat; TMatrixTSub_const TMatrixTSub; TMatrixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. Function Members (Methods); public:. virtual~TMatrixTDiag_const<double>(); static TClass*Class(); Int_tGetInc() const; const TMatrixTBase<double>*GetMatrix() const; Int_tGetNdiags() const; const double*GetPtr() const; virtual TClass*IsA() const; const double&operator()(Int_t i) const; TMatrixTDiag_const<double>&operator=(const TMatrixTDiag_const<double>& trc); const double&operator[](Int_t i) const; virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMatrixTDiag_const<double>(); TMatrixTDiag_const<double>(const TMatrixT<double>& matrix); TMatrixTDiag_const<double>(const TMatrixTSym<double>& matrix); TMatrixTDiag_const<double>(const TMatrixTDiag_const<double>& trc). Data Members; protected:. Int_tfIncif ptr=@a[i,i], then ptr+inc = @a[i+1,i+1]; TMatrixTBase<double>*fMatrixthe matrix I am the diagonal of; Int_tfNdiagnumber of diag elems, min(nrows,ncols); const double*fPtrpointer to the a[0,0]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TMatrixTDiag_const<double>& trc); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. Int_t GetInc() const; { return fInc; }. const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Int_t GetNdiags() const; { return fNdiag; }. » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMatrixTDiag_const_double_.html:1812,Inherit,Inheritance,1812,root/html604/TMatrixTDiag_const_double_.html,https://root.cern,https://root.cern/root/html604/TMatrixTDiag_const_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rixTFlat_const TMatrixTFlat; TMatrixTSub_const TMatrixTSub; TMatrixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. This class is also known as (typedefs to this class)TMatrixTRow_const<Float_t>, TMatrixFRow_const. Function Members (Methods); public:. TMatrixTRow_const<float>(); TMatrixTRow_const<float>(const TMatrixTRow_const<float>& trc); TMatrixTRow_const<float>(const TMatrixT<float>& matrix, Int_t row); TMatrixTRow_const<float>(const TMatrixTSym<float>& matrix, Int_t row); virtual~TMatrixTRow_const<float>(); static TClass*Class(); Int_tGetInc() const; const TMatrixTBase<float>*GetMatrix() const; const float*GetPtr() const; Int_tGetRowIndex() const; virtual TClass*IsA() const; const float&operator()(Int_t i) const; TMatrixTRow_const<float>&operator=(const TMatrixTRow_const<float>& trc); const float&operator[](Int_t i) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. Int_tfIncif ptr = @a[row,i], then ptr+inc = @a[row,i+1]; TMatrixTBase<float>*fMatrixthe matrix I am a row of; const float*fPtrpointer to the a[row,0]; Int_tfRowIndeffective row index. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TMatrixTRow_const<float>& trc); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. Int_t GetRowIndex() const; { return fRowInd; }. Int_t GetInc() const; { return fInc; }. const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixTRow_const_float_.html:1851,Inherit,Inheritance,1851,root/html534/TMatrixTRow_const_float_.html,https://root.cern,https://root.cern/root/html534/TMatrixTRow_const_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. This class is also known as (typedefs to this class)TMatrixDSparseRow_const, TMatrixTSparseRow_const<Double_t>. Function Members (Methods); public:. TMatrixTSparseRow_const<double>(); TMatrixTSparseRow_const<double>(const TMatrixTSparseRow_const<double>& trc); TMatrixTSparseRow_const<double>(const TMatrixTSparse<double>& matrix, Int_t row); virtual~TMatrixTSparseRow_const<double>(); static TClass*Class(); const Int_t*GetColPtr() const; const double*GetDataPtr() const; const TMatrixTBase<double>*GetMatrix() const; Int_tGetNindex() const; Int_tGetRowIndex() const; virtual TClass*IsA() const; doubleoperator()(Int_t i) const; TMatrixTSparseRow_const<double>&operator=(const TMatrixTSparseRow_const<double>& trc); doubleoperator[](Int_t i) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. const Int_t*fColPtrcolumn index pointer; const double*fDataPtrdata pointer; TMatrixTSparse<double>*fMatrixthe matrix I am a row of; Int_tfNindexindex range; Int_tfRowIndeffective row index. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TMatrixTSparseRow_const<double>& trc); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. Int_t GetRowIndex() const; { return fRowInd; }. const Element & operator()(Int_t i) const. const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. const Element * GetDataPtr() const; { return fDataPtr; }. const Int_t * GetColPtr() const; { return fColPtr; }. Int_t GetNindex() const; { return fNindex; }. » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixTSparseRow_const_double_.html:1904,Inherit,Inheritance,1904,root/html534/TMatrixTSparseRow_const_double_.html,https://root.cern,https://root.cern/root/html534/TMatrixTSparseRow_const_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. This class is also known as (typedefs to this class)TMatrixDColumn_const, TMatrixTColumn_const<Double_t>. Function Members (Methods); public:. TMatrixTColumn_const<double>(); TMatrixTColumn_const<double>(const TMatrixTColumn_const<double>& trc); TMatrixTColumn_const<double>(const TMatrixT<double>& matrix, Int_t col); TMatrixTColumn_const<double>(const TMatrixTSym<double>& matrix, Int_t col); virtual~TMatrixTColumn_const<double>(); static TClass*Class(); Int_tGetColIndex() const; Int_tGetInc() const; const TMatrixTBase<double>*GetMatrix() const; const double*GetPtr() const; virtual TClass*IsA() const; const double&operator()(Int_t i) const; TMatrixTColumn_const<double>&operator=(const TMatrixTColumn_const<double>& trc); const double&operator[](Int_t i) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. Int_tfColIndeffective column index; Int_tfIncif ptr = @a[i,col], then ptr+inc = @a[i+1,col]; TMatrixTBase<double>*fMatrixthe matrix I am a column of; const double*fPtrpointer to the a[0,col] column. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TMatrixTColumn_const<double>& trc); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. Int_t GetInc() const; { return fInc; }. const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Int_t GetColIndex() const; { return fColInd; }. » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixTColumn_const_double_.html:1923,Inherit,Inheritance,1923,root/html534/TMatrixTColumn_const_double_.html,https://root.cern,https://root.cern/root/html534/TMatrixTColumn_const_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rk classes used by the list of classes in classes ; Definition at line 863 of file TClassTree.cxx. ◆ ShowClassesUsing(). void TClassTree::ShowClassesUsing ; (; const char * ; classes). virtual . mark classes using any class in the list of classes in classes ; Definition at line 894 of file TClassTree.cxx. ◆ ShowCod(). void TClassTree::ShowCod ; (; ). protectedvirtual . Draw the Code References relationships. ; Definition at line 925 of file TClassTree.cxx. ◆ ShowHas(). void TClassTree::ShowHas ; (; ). protectedvirtual . Draw the ""Has a"" relationships. ; Definition at line 963 of file TClassTree.cxx. ◆ ShowLinks(). void TClassTree::ShowLinks ; (; Option_t * ; option = ""HMR""). virtual . Set link options in the ClassTree object. . ""C"" show References from code; ""H"" show Has a relations; ""M"" show Multiple Inheritance; ""R"" show References from data members . Definition at line 1008 of file TClassTree.cxx. ◆ ShowMul(). void TClassTree::ShowMul ; (; ). protectedvirtual . Draw the Multiple inheritance relationships. ; Definition at line 1023 of file TClassTree.cxx. ◆ ShowRef(). void TClassTree::ShowRef ; (; ). protectedvirtual . Draw the References relationships (other than inheritance or composition) ; Definition at line 1061 of file TClassTree.cxx. ◆ Streamer(). void TClassTree::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TClassTree. ; the status of the object is saved and can be replayed in a subsequent session ; Reimplemented from TObject.; Definition at line 1105 of file TClassTree.cxx. ◆ StreamerNVirtual(). void TClassTree::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 78 of file TClassTree.h. Member Data Documentation. ◆ fClasses. TString TClassTree::fClasses. protected . List of classes to be drawn. ; Definition at line 25 of file TClassTree.h. ◆ fCnames. TString** TClassTree::fCnames {nullptr}. protected . ![fNclasses] class names ; Definition at line 39 of file TClassTree.h. ◆ fCparent. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassTree.html:26765,inherit,inheritance,26765,doc/master/classTClassTree.html,https://root.cern,https://root.cern/doc/master/classTClassTree.html,1,['inherit'],['inheritance']
Modifiability,"rk directory on remote servers; Int_tfWorkersToMergeCurrent total number of workers, which have not been yet assigned to any merger; static TPluginHandler*fgLogViewerLog dialog box plugin; static TList*fgProofEnvListList of TNameds defining environment. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProof(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Create a PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). Masterurl is of; the form: [proof[s]://]host[:port]. Conffile is the name of the config; file describing the remote PROOF cluster (this argument alows you to; describe different cluster configurations).; The default is proof.conf. Confdir is the directory where the config; file and other PROOF related files are (like motd and noproof files).; Loglevel is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. TProof(); Protected constructor to be used by classes deriving from TProof; (they have to call Init themselves and override StartSlaves; appropriately). This constructor simply closes any previous gProof and sets gProof; to this instance. void InitMembers(); Default initializations. ~TProof(); Clean up PROOF environment. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProof.html:32494,config,config,32494,root/html530/TProof.html,https://root.cern,https://root.cern/root/html530/TProof.html,3,['config'],['config']
Modifiability,"rk directory on remote servers; Int_tfWorkersToMergeCurrent total number of workers, which have not been yet assigned to any merger; static TPluginHandler*fgLogViewerLog dialog box plugin; static TList*fgProofEnvListList of TNameds defining environment. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProof(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Create a PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). Masterurl is of; the form: [proof[s]://]host[:port]. Conffile is the name of the config; file describing the remote PROOF cluster (this argument alows you to; describe different cluster configurations).; The default is proof.conf. Confdir is the directory where the config; file and other PROOF related files are (like motd and noproof files).; Loglevel is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. TProof(); Protected constructor to be used by classes deriving from TProof; (they have to call Init themselves and override StartSlaves; appropriately). This constructor simply closes any previous gProof and sets gProof; to this instance. void InitMembers(); Default initializations. ~TProof(); Clean up PROOF environment. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:32258,config,config,32258,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,1,['config'],['config']
Modifiability,"rk with it. We open the file with the intent to update it, and list its contents.; root[] TFile f (""hsimple.root"",""UPDATE""); root[] f.ls(); TFile** hsimple.root; TFile* hsimple.root; KEY: TH1F hpx;1 This is the px distribution; KEY: TH2F hpxpy;1 py vs px; KEY: TProfile hprof;1 Profile of pz versus px; KEY: TNtuple ntuple;1 Demo ntuple; It shows the two lines starting with TFile followed by four lines starting with the word “KEY”. The four keys tell us that there are four objects on disk in this file. The syntax of the listing is:; KEY: <class> <variable>;<cycle number> <title>; For example, the first line in the list means there is an object in the file on disk, called hpx. It is of the class TH1F (one-dimensional histogram of floating numbers). The object’s title is “This is the px distribution”. If the line starts with OBJ, the object is in memory. The <class> is the name of the ROOT class (T-something). The <variable> is the name of the object. The cycle number along with the variable name uniquely identifies the object. The <title> is the string given in the constructor of the object as title. The structure of TFile. The figure shows a TFile with five objects in the top directory (kObjA;1, kObjA;2, kObjB;1, kObjC;1 and kObjD;1). ObjA is on file twice with two different cycle numbers. It also shows four objects in memory (mObjE, mObjeF, mObjM, mObjL). It also shows several subdirectories.; 11.2.2 The Current Directory; When you create a TFile object, it becomes the current directory. Therefore, the last file to be opened is always the current directory. To check your current directory you can type:; root[] gDirectory->pwd(); Rint:/; This means that the current directory is the ROOT session (Rint). When you create a file, and repeat the command the file becomes the current directory.; root[] TFile f1(""AFile1.root"");; root[] gDirectory->pwd(); AFile1.root:/; If you create two files, the last becomes the current directory.; root[] TFile f2(""AFile2.root"");; root[] gD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:446766,variab,variable,446766,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"rker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Test ();  Test method for TSpline5. ;  ;  Static Public Member Functions inherited from TSpline; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline3.html:16354,inherit,inherited,16354,doc/master/classTSpline3.html,https://root.cern,https://root.cern/doc/master/classTSpline3.html,6,['inherit'],['inherited']
Modifiability,"rker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void PaintH3 (TH1 *h, Option_t *option);  Paint 3-d histogram h with 3-d polymarkers. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class (); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPolyMarker3D.html:12939,inherit,inherited,12939,doc/master/classTPolyMarker3D.html,https://root.cern,https://root.cern/doc/master/classTPolyMarker3D.html,1,['inherit'],['inherited']
Modifiability,"rker,To> {; 2097 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2098 {; 2099 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2100 UInt_t temp;; 2101 const Int_t offset = config->fOffset;; 2102 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2103 buf >> temp;; 2104 ; 2105 if ((temp & kIsReferenced) != 0) {; 2106 HandleReferencedTObject(buf,*(void**)iter,config);; 2107 }; 2108 ; 2109 To *x = (To*)( ((char*) (*(void**)iter) ) + offset );; 2110 *x = (To)temp;; 2111 }; 2112 return 0;; 2113 }; 2114 };; 2115 ; 2116 template <typename From, typename To>; 2117 struct ConvertBasicType<WithFactorMarker<From>,To> {; 2118 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2119 {; 2120 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2121 TConfWithFactor *conf = (TConfWithFactor *)config;; 2122 From temp;; 2123 const Int_t offset = config->fOffset;; 2124 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2125 buf.ReadWithFactor(&temp, conf->fFactor, conf->fXmin);; 2126 To *x = (To*)( ((char*) (*(void**)iter) ) + offset );; 2127 *x = (To)temp;; 2128 }; 2129 return 0;; 2130 }; 2131 };; 2132 ; 2133 template <typename From, typename To>; 2134 struct ConvertBasicType<NoFactorMarker<From>,To> {; 2135 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2136 {; 2137 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2138 TConfNoFactor *conf = (TConfNoFactor *)config;; 2139 From temp;; 2140 const Int_t offset = config->fOffset;; 2141 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2142 buf.ReadWithNbits(&temp, conf->fNbits);; 2143 To *x = (To*)( ((char*) (*(void**)iter) ) + offset );; 2144 *x = (To)temp;; 2145 }; 2146 return 0;; 2147 }; 2148 };; 2149 ; 2150 template <typename T>; 2151 static INLINE_TEMPLATE_ARGS Int_t Writ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:86979,config,config,86979,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,"rker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TObject*fObjectpointer to object being represented by this entry; TStringfOptionOptions associated with this entry; Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLegendEntry(); TLegendEntry do-nothing default constructor. TLegendEntry(const TObject* obj, const char* label = 0, Option_t* option = ""lpf""); TLegendEntry normal constructor for one entry in a TLegend; obj is the object this entry will represent. If obj has; line/fill/marker attributes, then the TLegendEntry will display; these attributes.; label is the text that will describe the entry, it is displayed using; TLatex, so may have a complex format.; option may have values; L draw line associated w/ TAttLine if obj inherits from TAttLine; P draw polymarker assoc. w/ TAttMarker if obj inherits from TAttMarker; F draw a box with fill associated w/ TAttFill if obj inherits TAttFill; default is object = ""LPF"". TLegendEntry(const TLegendEntry& entry); TLegendEntry copy constructor. ~TLegendEntry(); TLegendEntry default destructor. void Copy(TObject& obj) const; copy this TLegendEntry into obj. void Print(Option_t* option = """") const; dump this TLegendEntry to cout. void SaveEntry(ostream& out, const char* name); Save this TLegendEntry as C++ statements on output stream out; to be used with the SaveAs .C option. void SetObject(TObject* obj); (re)set the obj pointed to by this entry. void SetObject(const char* objectName); (re)set the obj pointed to by this entry. const char * GetLabel() const; { return fLabel.Data(); }. TObject * GetObject() const; { return fObject; }. Option_t * GetOption() const; { return fOption.Data(); }. void SetLabel(const char* label = """"); { fLabel = label; }. void Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLegendEntry.html:9476,inherit,inherits,9476,root/html528/TLegendEntry.html,https://root.cern,https://root.cern/root/html528/TLegendEntry.html,6,['inherit'],['inherits']
Modifiability,"rker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TObject*fObjectpointer to object being represented by this entry; TStringfOptionOptions associated with this entry; Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLegendEntry(); TLegendEntry do-nothing default constructor. TLegendEntry(const TObject* obj, const char* label = 0, Option_t* option = ""lpf""); TLegendEntry normal constructor for one entry in a TLegend; obj is the object this entry will represent. If obj has; line/fill/marker attributes, then the TLegendEntry will display; these attributes.; label is the text that will describe the entry, it is displayed using; TLatex, so may have a complex format.; option may have values; L draw line associated w/ TAttLine if obj inherits from TAttLine; P draw polymarker assoc. w/ TAttMarker if obj inherits from TAttMarker; F draw a box with fill associated w/ TAttFill if obj inherits TAttFill; default is object = ""LPF"". TLegendEntry(const TLegendEntry& entry); TLegendEntry copy constructor. ~TLegendEntry(); TLegendEntry default destructor. void Copy(TObject& obj) const; copy this TLegendEntry into obj. void Print(Option_t* option = """") const; dump this TLegendEntry to std::cout. void SaveEntry(ostream& out, const char* name); Save this TLegendEntry as C++ statements on output stream out; to be used with the SaveAs .C option. void SetObject(TObject* obj); (re)set the obj pointed to by this entry. void SetObject(const char* objectName); (re)set the obj pointed to by this entry. const char * GetLabel() const; { return fLabel.Data(); }. TObject * GetObject() const; { return fObject; }. Option_t * GetOption() const; { return fOption.Data(); }. void SetLabel(const char* label = """"); { fLabel = label; }. vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLegendEntry.html:10321,inherit,inherits,10321,root/html602/TLegendEntry.html,https://root.cern,https://root.cern/root/html602/TLegendEntry.html,4,['inherit'],['inherits']
Modifiability,"rker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Member Functions;  TVirtualGeoTrack (const TVirtualGeoTrack &)=delete;  ; TVirtualGeoTrack & operator= (const TVirtualGeoTrack &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fId {-1};  ; TVirtualGeoTrack * fParent {nullptr};  ; TObject * fParticle {nullptr};  ; Int_t fPDG {0};  ; TObjArray * fTracks {nullptr};  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGeoTrack.html:17232,inherit,inherited,17232,doc/master/classTVirtualGeoTrack.html,https://root.cern,https://root.cern/doc/master/classTVirtualGeoTrack.html,2,['inherit'],['inherited']
Modifiability,"rkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Attributes; Double_t * fColor {nullptr};  [fNpoints] array of colors ;  ; TGraph * fGraph {nullptr};  Pointer to graph holding X and Y positions. ;  ; TH2F * fHistogram {nullptr};  Pointer to histogram used for drawing axis. ;  ; Double_t fMargin {.1};  Margin around the plot in %. ;  ; Double_t fMaxMarkerSize {5.};  Largest marker size used to paint the markers. ;  ; Int_t fMaxSize {-1};  !Current dimension of arrays fX and fY ;  ; Double_t fMinMarkerSize {1.};  Smallest marker size used to paint the markers. ;  ; Int_t fNpoints {-1};  Number of points <= fMaxSize. ;  ; Double_t * fSize {nullptr};  [fNpoints] array of marker sizes ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsRefe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTScatter.html:19022,inherit,inherited,19022,doc/master/classTScatter.html,https://root.cern,https://root.cern/doc/master/classTScatter.html,2,['inherit'],['inherited']
Modifiability,"rkerOpenTriangleUp ; (; CGContextRef ; ctx, . unsigned ; n, . const TPoint * ; xy, . Size_t ; markerSize . ). Definition at line 229 of file QuartzMarker.mm. ◆ DrawMarkerPlus(). void ROOT::Quartz::DrawMarkerPlus ; (; CGContextRef ; ctx, . unsigned ; n, . const TPoint * ; xy, . Size_t ; markerSize . ). Definition at line 30 of file QuartzMarker.mm. ◆ DrawMarkerStar(). void ROOT::Quartz::DrawMarkerStar ; (; CGContextRef ; ctx, . unsigned ; n, . const TPoint * ; xy, . Size_t ; markerSize . ). Definition at line 53 of file QuartzMarker.mm. ◆ DrawMarkerX(). void ROOT::Quartz::DrawMarkerX ; (; CGContextRef ; ctx, . unsigned ; n, . const TPoint * ; xy, . Size_t ; markerSize . ). Definition at line 118 of file QuartzMarker.mm. ◆ DrawPattern(). void ROOT::Quartz::DrawPattern ; (; void * ; data, . CGContextRef ; ctx . ). Definition at line 327 of file QuartzFillArea.mm. ◆ DrawPolygonWithGradientFill(). void ROOT::Quartz::DrawPolygonWithGradientFill ; (; CGContextRef ; ctx, . const TColorGradient * ; extendedColor, . const CGSize & ; sizeOfDrawable, . Int_t ; nPoints, . const TPoint * ; xy, . Bool_t ; drawShadow . ). Definition at line 479 of file QuartzFillArea.mm. ◆ DrawPolyLine(). void ROOT::Quartz::DrawPolyLine ; (; CGContextRef ; ctx, . Int_t ; n, . TPoint * ; xy . ). Definition at line 135 of file QuartzLine.mm. ◆ DrawPolyMarker() [1/2]. void ROOT::Quartz::DrawPolyMarker ; (; CGContextRef ; ctx, . const std::vector< TPoint > & ; marker, . Size_t ; markerSize, . Style_t ; markerStyle . ). Definition at line 1025 of file QuartzMarker.mm. ◆ DrawPolyMarker() [2/2]. void ROOT::Quartz::DrawPolyMarker ; (; CGContextRef ; ctx, . unsigned ; nPoints, . const TPoint * ; marker, . Size_t ; markerSize, . Style_t ; markerStyle . ). Definition at line 908 of file QuartzMarker.mm. ◆ DrawTextLineNoKerning(). void ROOT::Quartz::DrawTextLineNoKerning ; (; CGContextRef ; ctx, . CTFontRef ; font, . const std::vector< UniChar > & ; text, . Int_t ; x, . Int_t ; y . ). Definition at line 319 of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Quartz.html:13506,extend,extendedColor,13506,doc/master/namespaceROOT_1_1Quartz.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Quartz.html,2,['extend'],['extendedColor']
Modifiability,"rkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooPlotable; TObject * crossCast ();  Return cast of RooPlotable as TObject. ;  ; const char * getYAxisLabel () const;  ; double getYAxisMax () const;  ; double getYAxisMin () const;  ; TClass * IsA () const override;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print detailed information. ;  ; void setYAxisLabel (const char *label);  ; void setYAxisLimits (double ymin, double ymax);  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void updateYAxisLimits (double y);  ;  Public Member Functions inherited from RooPrintable;  RooPrintable ();  ; virtual ~RooPrintable ();  ; virtual Int_t defaultPrintContents (Option_t *opt) const;  Default choice of contents to be printed (name and value) ;  ; virtual StyleOption defaultPrintStyle (Option_t *opt) const;  ; virtual void printAddress (std::ostream &os) const;  Print class name of object. ;  ; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCurve.html:29141,inherit,inherited,29141,doc/master/classRooCurve.html,https://root.cern,https://root.cern/doc/master/classRooCurve.html,3,['inherit'],['inherited']
Modifiability,"rkerStyle;  Marker style. ;  . Private Types; enum  EStatusBits { kOldInterpolation = (1ULL << ( 15 )); };  . Private Member Functions; void CreateInterpolator (Bool_t oldInterp);  Add a TGraphDelaunay in the list of the fHistogram's functions. ;  . Private Attributes; Bool_t fUserHisto;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGraph2D.h>. Inheritance diagram for TGraph2D:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TGraph2D::EStatusBits. private . EnumeratorkOldInterpolation . Definition at line 69 of file TGraph2D.h. Constructor & Destructor Documentation. ◆ TGraph2D() [1/9]. TGraph2D::TGraph2D ; (; ). Graph2D default constructor. ; Definition at line 238 of file TGraph2D.cxx. ◆ TGraph2D() [2/9]. TGraph2D::TGraph2D ; (; Int_t ; n). Graph2D constructor. ; The arrays fX, fY and fZ should be filled via calls to SetPoint ; Definition at line 382 of file TGraph2D.cxx. ◆ TGraph2D() [3/9]. TGraph2D::TGraph2D ; (; Int_t ; n, . Int_t * ; x, . Int_t * ; y, . Int_t * ; z . ). Graph2D constructor with three vectors of ints as input. ; Definition at line 264 of file TGraph2D.cxx. ◆ TGraph2D() [4/9]. TGraph2D::TGraph2D ; (; Int_t ; n, . Float_t * ; x, . Floa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2D.html:34563,inherit,inherited,34563,doc/master/classTGraph2D.html,https://root.cern,https://root.cern/doc/master/classTGraph2D.html,1,['inherit'],['inherited']
Modifiability,"rks on POD-like data types and is out of line to reduce code duplication. ;  ; bool Owns () const;  If false, the RVec is in ""memory adoption"" mode, i.e. it is acting as a view on a memory buffer it does not own. ;  . Private Types; using SuperClass = Internal::VecOps::SmallVectorTemplateBase< T >;  . Additional Inherited Members;  Static Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorTemplateBase< T, bool >; static void destroy_range (T *S, T *E);  ; template<typename It1 , typename It2 > ; static void uninitialized_copy (It1 I, It1 E, It2 Dest);  Copy the range [I, E) onto the uninitialized memory starting with ""Dest"", constructing elements as needed. ;  ; template<typename It1 , typename It2 > ; static void uninitialized_move (It1 I, It1 E, It2 Dest);  Move the range [I, E) into the uninitialized memory starting with ""Dest"", constructing elements as needed. ;  ;  Static Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorBase; static void report_at_maximum_capacity ();  Report that this vector is already at maximum capacity. ;  ; static void report_size_overflow (size_t MinSize);  Report that MinSize doesn't fit into this vector's size type. ;  ; static constexpr size_t SizeTypeMax ();  The maximum value of the Size_T used. ;  ;  Protected Attributes inherited from ROOT::Internal::VecOps::SmallVectorBase; void * fBeginX;  ; Size_T fCapacity;  Always >= -1. fCapacity == -1 indicates the RVec is in ""memory adoption"" mode. ;  ; Size_T fSize = 0;  Always >= 0. ;  . #include <ROOT/RVec.hxx>. Inheritance diagram for ROOT::Detail::VecOps::RVecImpl< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ const_iterator. template<typename T > . using ROOT::Detail::VecOps::RVecImpl< T >::const_iterator = typename SuperClass::const_iterator. Definition at line 566 of file RVec.hxx. ◆ iterator. template<typename T > . using ROOT::Detail::VecOps",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1VecOps_1_1RVecImpl.html:6773,inherit,inherited,6773,doc/master/classROOT_1_1Detail_1_1VecOps_1_1RVecImpl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1VecOps_1_1RVecImpl.html,1,['inherit'],['inherited']
Modifiability,"rlap(const TGLBoundingBox& box) const; const TGLPlane&FrustumPlane(TGLCamera::EFrustumPlane plane) const; const TGLMatrix&GetCamBase() const; const TGLMatrix&GetCamTrans() const; Double_t*GetCenterVec(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Bool_tGetExternalCenter(); Double_tGetFarClip() const; Double_t*GetFixDefCenterVec(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Double_tGetNearClip() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetTheta() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Float_tGetVAxisMinAngle(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; voidIncTimeStamp(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsCacheDirty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOrthographic() const; virtual Bool_tIsPerspective() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tOfInterest(const TGLBoundingBox& box, Bool_t ignoreSize) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLCamera.html:4019,Inherit,InheritsFrom,4019,root/html534/TGLCamera.html,https://root.cern,https://root.cern/root/html534/TGLCamera.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rlap(const TGLBoundingBox& box) const; const TGLPlane&FrustumPlane(TGLCamera::EFrustumPlane plane) const; const TGLMatrix&GetCamBase() const; const TGLMatrix&GetCamTrans() const; Double_t*GetCenterVec(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Bool_tGetExternalCenter(); Double_tGetFarClip() const; Double_t*GetFixDefCenterVec(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Double_tGetNearClip() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetTheta() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Float_tGetVAxisMinAngle(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; voidIncTimeStamp(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsCacheDirty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOrthographic() const; virtual Bool_tIsPerspective() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tOfInterest(const TGLBoundingBox& box, Bool_t ignoreSize) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLCamera.html:4021,Inherit,InheritsFrom,4021,root/html602/TGLCamera.html,https://root.cern,https://root.cern/root/html602/TGLCamera.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rlaps(Int_t inode) const; Double_t*GetBoxes() const; Int_t*GetCheckList(Int_t& nelem, TGeoStateInfo& td) const; virtual Int_t*GetCheckList(const Double_t* point, Int_t& nelem, TGeoStateInfo& td); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_t*GetNextCandidates(const Double_t* point, Int_t& ncheck, TGeoStateInfo& td); virtual Int_t*GetNextVoxel(const Double_t* point, const Double_t* dir, Int_t& ncheck, TGeoStateInfo& td); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInvalid() const; Bool_tTObject::IsOnHeap() const; Bool_tIsSafeVoxel(const Double_t* point, Int_t inode, Double_t minsafe) const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Bool_tNeedRebuild() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoVoxelFinder.html:2872,Inherit,InheritsFrom,2872,root/html534/TGeoVoxelFinder.html,https://root.cern,https://root.cern/root/html534/TGeoVoxelFinder.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rlaps(Int_t inode) const; Double_t*GetBoxes() const; Int_t*GetCheckList(Int_t& nelem, TGeoStateInfo& td) const; virtual Int_t*GetCheckList(const Double_t* point, Int_t& nelem, TGeoStateInfo& td); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_t*GetNextCandidates(const Double_t* point, Int_t& ncheck, TGeoStateInfo& td); virtual Int_t*GetNextVoxel(const Double_t* point, const Double_t* dir, Int_t& ncheck, TGeoStateInfo& td); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInvalid() const; Bool_tTObject::IsOnHeap() const; Bool_tIsSafeVoxel(const Double_t* point, Int_t inode, Double_t minsafe) const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Bool_tNeedRebuild() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoVoxelFinder.html:2819,Inherit,InheritsFrom,2819,root/html602/TGeoVoxelFinder.html,https://root.cern,https://root.cern/root/html602/TGeoVoxelFinder.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rlcat(curname, occur,1000);; 1914 }; 1915 TBranchElement* br = (TBranchElement*) Bronch(curname, obj->ClassName(), add, bufsize, splitlevel - 1);; 1916 if (br) br->SetBranchFolder();; 1917 }; 1918 }; 1919 delete[] curname;; 1920 return GetListOfBranches()->GetEntries() - nbranches;; 1921}; 1922 ; 1923////////////////////////////////////////////////////////////////////////////////; 1924/// Create a new TTree Branch.; 1925///; 1926/// This Branch constructor is provided to support non-objects in; 1927/// a Tree. The variables described in leaflist may be simple; 1928/// variables or structures. // See the two following; 1929/// constructors for writing objects in a Tree.; 1930///; 1931/// By default the branch buffers are stored in the same file as the Tree.; 1932/// use TBranch::SetFile to specify a different file; 1933///; 1934/// * address is the address of the first item of a structure.; 1935/// * leaflist is the concatenation of all the variable names and types; 1936/// separated by a colon character :; 1937/// The variable name and the variable type are separated by a slash (/).; 1938/// The variable type may be 0,1 or 2 characters. If no type is given,; 1939/// the type of the variable is assumed to be the same as the previous; 1940/// variable. If the first variable does not have a type, it is assumed; 1941/// of type F by default. The list of currently supported types is given below:; 1942/// - `C` : a character string terminated by the 0 character; 1943/// - `B` : an 8 bit signed integer (`Char_t`); Treated as a character when in an array.; 1944/// - `b` : an 8 bit unsigned integer (`UChar_t`); 1945/// - `S` : a 16 bit signed integer (`Short_t`); 1946/// - `s` : a 16 bit unsigned integer (`UShort_t`); 1947/// - `I` : a 32 bit signed integer (`Int_t`); 1948/// - `i` : a 32 bit unsigned integer (`UInt_t`); 1949/// - `F` : a 32 bit floating point (`Float_t`); 1950/// - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); 1951/// - `D` : a 64 bit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:75514,variab,variable,75514,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,3,['variab'],['variable']
Modifiability,"rlopt);; 363 }; 364 return where;; 365}; RConfig.hxx; RLogger.hxx; RWebDisplayArgs.hxx; RWebWindow.hxx; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; heightOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t heightDefinition TGWin32VirtualXProxy.cxx:164; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; ROOT::Experimental::RLogChannelA log configuration for a channel, e.g.Definition RLogger.hxx:101; ROOT::RWebDisplayArgsHolds different arguments for starting browser with RWebDisplayHandle::Display() method.Definition RWebDisplayArgs.hxx:33; ROOT::RWebDisplayArgs::GetBrowserNamestd::string GetBrowserName() constReturns configured browser name.Definition RWebDisplayArgs.cxx:248; ROOT::RWebDisplayArgs::~RWebDisplayArgsvirtual ~RWebDisplayArgs()Destructor.; ROOT::RWebDisplayArgs::GetBrowserKindEBrowserKind GetBrowserKind() constreturns configured browser kind, see EBrowserKind for supported valuesDefinition RWebDisplayArgs.hxx:98; ROOT::RWebDisplayArgs::SetUrlOptRWebDisplayArgs & SetUrlOpt(const std::string &opt)set window url optionsDefinition RWebDisplayArgs.hxx:148; ROOT::RWebDisplayArgs::SetPosAsStrbool SetPosAsStr(const std::string &str)Set position of web browser window as string like ""100,100"".Definition RWebDisplayArgs.cxx:120; ROOT::RWebDisplayArgs::fExecstd::string fExec! string to run browser, used with kCustom typeDefinition RWebDisplayArgs.hxx:71; ROOT::RWebDisplayArgs::SetSizeRWebDisplayArgs & SetSize(int w, int h)set preferable web window width and heightDefinition RWebDisplayArgs.hxx:173; ROOT::RWebDisplayArgs::fUrlOptstd::string fUrlOpt! extra URL options, which are append to window URLDefinition RWebDisplayArgs.hxx:70; ROOT::RWebDisplayArgs::GetUrlconst std::string & GetUrl() constreturns window urlDefinition RWebDisplayArgs.hxx:129; ROOT::RWebDisplayArgs::SetCustomExecvoid SetCustomExec(const std::stri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebDisplayArgs_8cxx_source.html:13307,config,configured,13307,doc/v632/RWebDisplayArgs_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebDisplayArgs_8cxx_source.html,1,['config'],['configured']
Modifiability,"rlopt);; 368 }; 369 return where;; 370}; RConfig.hxx; RLogger.hxx; RWebDisplayArgs.hxx; RWebWindow.hxx; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; heightOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t heightDefinition TGWin32VirtualXProxy.cxx:164; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; ROOT::Experimental::RLogChannelA log configuration for a channel, e.g.Definition RLogger.hxx:101; ROOT::RWebDisplayArgsHolds different arguments for starting browser with RWebDisplayHandle::Display() method.Definition RWebDisplayArgs.hxx:33; ROOT::RWebDisplayArgs::GetBrowserNamestd::string GetBrowserName() constReturns configured browser name.Definition RWebDisplayArgs.cxx:252; ROOT::RWebDisplayArgs::~RWebDisplayArgsvirtual ~RWebDisplayArgs()Destructor.; ROOT::RWebDisplayArgs::GetBrowserKindEBrowserKind GetBrowserKind() constreturns configured browser kind, see EBrowserKind for supported valuesDefinition RWebDisplayArgs.hxx:99; ROOT::RWebDisplayArgs::SetUrlOptRWebDisplayArgs & SetUrlOpt(const std::string &opt)set window url optionsDefinition RWebDisplayArgs.hxx:149; ROOT::RWebDisplayArgs::SetPosAsStrbool SetPosAsStr(const std::string &str)Set position of web browser window as string like ""100,100"".Definition RWebDisplayArgs.cxx:120; ROOT::RWebDisplayArgs::fExecstd::string fExec! string to run browser, used with kCustom typeDefinition RWebDisplayArgs.hxx:72; ROOT::RWebDisplayArgs::SetSizeRWebDisplayArgs & SetSize(int w, int h)set preferable web window width and heightDefinition RWebDisplayArgs.hxx:174; ROOT::RWebDisplayArgs::fUrlOptstd::string fUrlOpt! extra URL options, which are append to window URLDefinition RWebDisplayArgs.hxx:71; ROOT::RWebDisplayArgs::GetUrlconst std::string & GetUrl() constreturns window urlDefinition RWebDisplayArgs.hxx:130; ROOT::RWebDisplayArgs::SetCustomExecvoid SetCustomExec(const std::stri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebDisplayArgs_8cxx_source.html:13438,config,configured,13438,doc/master/RWebDisplayArgs_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RWebDisplayArgs_8cxx_source.html,1,['config'],['configured']
Modifiability,"rlying connection module; Bool_tfDontTimeoutIf true wait forever for incoming messages; TXHandler*fHandlerHandler of asynchronous events (input, error); TStringfHostRemote host; Bool_tfIForwardWhether the interrupt should be propagated; intfILevHighest received interrupt; TMutex*fIMtxTo protect interrupt queue; Int_tfLogLevelLog level to be transmitted to servers; charfMode'e' (def) or 'i' (internal - proofsrv); Int_tfPid; Int_tfPortRemote port; Bool_tfRDInterruptTo interrupt waiting for messages; TObject*fReferenceGeneric object reference of this socket; intfSendOptOptions for sending messages; Short_tfSessionIDproofsrv: remote ID of connected session; TStringfUserUsername used for login; Int_tfXrdProofdVersion; static Bool_tfgInitDoneAvoid initializing more than once; static TStringfgLocLocation string; static TXSockPipefgPipePipe for input monitoring; static TMutexfgSMtxTo protect spare list; static list<TXSockBuf*>fgSQuelist of spare buffers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t PickUpReady(); Manage asynchronous message. TXSockBuf * PopUpSpare(Int_t sz). void PushBackSpare(). void PostMsg(Int_t type, const char* msg = 0); Post a message into the queue for asynchronous processing. Int_t GetLowSocket() const; Auxilliary. { return (fConn ? fConn->GetLowSocket() : -1); }. void SetLocation(const char* loc = """"). void InitEnvs(). TXSocket(const char* url, Char_t mode = 'M', Int_t psid = -1, Char_t ver = -1, const char* logbuf = 0, Int_t loglevel = -1, TXHandler* handler = 0). virtual ~TXSocket(). void Close(Option_t* opt = """"). Bool_t Create(Bool_t attach = kFALSE). void DisconnectSession(Int_t id, Option_t* opt = """"). void DoError(int level, const char* location, const char* fmt, va_list va) const. Int_t GetClientID() const; { return -1; }. Int_t GetClientIDSize() const; { return 1; }. Int_t GetLogConnID() const; { return (fConn ? fConn->GetLogConnID() : -1); }. Int_t GetOpenError() const; { return (fConn ? ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TXSocket.html:12515,Inherit,Inheritance,12515,root/html534/TXSocket.html,https://root.cern,https://root.cern/root/html534/TXSocket.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rm (see manual) . Definition at line 547 of file TSpectrumTransform.cxx. ◆ Haar(). void TSpectrumTransform::Haar ; (; Double_t * ; working_space, . Int_t ; num, . Int_t ; direction . ). protected . This function calculates Haar transform of a part of data Function parameters: . working_space-pointer to vector of transformed data; num-length of processed data; direction-forward or inverse transform . Definition at line 96 of file TSpectrumTransform.cxx. ◆ IsA(). TClass * TSpectrumTransform::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 71 of file TSpectrumTransform.h. ◆ SetDirection(). void TSpectrumTransform::SetDirection ; (; Int_t ; direction). This function sets the direction of the transform: . direction (forward or inverse) . Definition at line 2278 of file TSpectrumTransform.cxx. ◆ SetEnhanceCoeff(). void TSpectrumTransform::SetEnhanceCoeff ; (; Double_t ; enhanceCoeff). This function sets the enhancement coefficient: . enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. . Definition at line 2300 of file TSpectrumTransform.cxx. ◆ SetFilterCoeff(). void TSpectrumTransform::SetFilterCoeff ; (; Double_t ; filterCoeff). This function sets the filter coefficient: . filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. . Definition at line 2291 of file TSpectrumTransform.cxx. ◆ SetRegion(). void TSpectrumTransform::SetRegion ; (; Int_t ; xmin, . Int_t ; xmax . ). This function sets the filtering or enhancement region: . xmin, xmax . Definition at line 2264 of file TSpectrumTransform.cxx. ◆ SetTransformType(). void TSpectrumTransform::SetTransformType ; (; Int_t ; transType, . Int_t ; degree . ). This function sets the following parameters for transform: . transType - type of transform (Haar, Walsh, Cosine, Sin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:27629,enhance,enhancement,27629,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['enhance'],['enhancement']
Modifiability,"rm(double, RooArgSet const *, double, bool) const, where the number of observed events and observables to be used as the normalization set for the pdf is extracted from a RooAbsData.; For successful operation, the PDF implementation must indicate that it is extendable by overloading canBeExtended(), and must implement the expectedEvents() function.; Parameters. [in]dataThe RooAbsData to retrieve the set of observables and number of expected events. ; [in]weightSquaredIf set to true, the extended term will be scaled by the ratio of squared event weights over event weights: \( \sum w_{i}^2 / \sum w_{i} \). Intended to be used by fits with the SumW2Error() option that can be passed to RooAbsPdf::fitTo() (see the documentation of said function to learn more about the interpretation of fits with squared weights). ; [in]doOffsetSee RooAbsPdf::extendedTerm(double, RooArgSet const*, double, bool) const. . Definition at line 793 of file RooAbsPdf.cxx. ◆ extendMode(). virtual ExtendMode RooAbsPdf::extendMode ; (; ); const. inlinevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented in RooAddModel, RooAddPdf, RooBinSamplingPdf, RooExtendedTerm, RooExtendPdf, RooProdPdf, RooProjectedPdf, RooRealSumPdf, RooSimultaneous, RooNormalizedPdf, RooFixedProdPdf, and xRooProjectedPdf.; Definition at line 216 of file RooAbsPdf.h. ◆ fitTo(). template<typename... CmdArgs_t> . RooAbsPdf::fitTo ; (; RooAbsData & ; data, . CmdArgs_t const &... ; cmdArgs . ). inline . Fit PDF to given dataset. ; If dataset is unbinned, an unbinned maximum likelihood is performed. If the dataset is binned, a binned maximum likelihood is performed. By default the fit is executed through the MINUIT commands MIGRAD, HESSE in succession.; Parameters. dataReference to a RooAbsData object representing the dataset. ; cmdArgsVariadic template arguments representing",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:103354,extend,extendMode,103354,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['extend'],['extendMode']
Modifiability,"rm2(256,256);�� ; �� t->SetTransformType(t->kTransformCos,0);��. ��; t->SetRegion(0,255,128,255);; ��; t->FilterZonal(source,dest);���� ; �� for (i = 0; i < nbinsx; i++){; ���� for (j = 0; j <; nbinsy; j++){; �� ������������ ����source[i][j] = dest[i][j]; ; �� ������������ �}; �� }�� ; ��; t->SetRegion(128,255,0,255);; �� t->FilterZonal(source,dest);�������. ��; trans->Draw(""SURF"");���� ; }. void Enhance(const Float_t** fSource, Float_t** fDest). TWO-DIMENSIONAL ENHANCE ZONAL FUNCTION; This function transforms the source spectrum. The calling program; should fill in input parameters. Then it multiplies transformed; coefficients in the given region by the given; enhance_coeff and transforms it back. Function parameters:; fSource-pointer to the matrix of source spectrum, its size should; be fSizeX*fSizeY; fDest-pointer to the matrix of destination data, its size should be; fSizeX*fSizeY. . Example of enhancement;  ; Function:; void TSpectrumTransform2::Enhance(const; float; **fSource, float; **fDest);  ; This function transforms the; source spectrum (for details see Transform function). �Before the Enhance; function is called the class must be created by constructor and the type of the; transform as well as some other parameters must be set using a set of setter; functions. The Enhance function multiplies transformed coefficients in the given; region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; back. Enhanced data are written into dest spectrum.; Example � script Enhance2.c:. Fig. 1 Original two-dimensional noisy spectrum. Fig. 2 Enhanced spectrum of; the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63); were multiplied by 5) ;  ; Script:; // Example to illustrate; enhancement (class TSpectrumTransform2).; // To execute this example,; do; // root > .x Enhance2.C; �; void Enhance2() {; �� Int_t i, j;; �� Int_t nbinsx =; 256;; �� Int_t nbinsy =; 256;�� ; �� Int_t xmin� = 0;; �� Int_t xmax� =; nbinsx;; �� Int_t ymin� =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrum2Transform.html:21831,enhance,enhancement,21831,root/html528/TSpectrum2Transform.html,https://root.cern,https://root.cern/root/html528/TSpectrum2Transform.html,8,"['Enhance', 'enhance']","['Enhance', 'enhancement']"
Modifiability,"rm3DTransform3D(double* begin, double* end); ROOT::Math::Transform3DTransform3D(const ROOT::Math::Transform3D::Point& fr0, const ROOT::Math::Transform3D::Point& fr1, const ROOT::Math::Transform3D::Point& fr2, const ROOT::Math::Transform3D::Point& to0, const ROOT::Math::Transform3D::Point& to1, const ROOT::Math::Transform3D::Point& to2); ROOT::Math::Transform3DTransform3D(double xx, double xy, double xz, double dx, double yx, double yy, double yz, double dy, double zx, double zy, double zz, double dz); ROOT::Math::Translation3DTranslation() const. protected:. voidAssignFrom(const ROOT::Math::Rotation3D& r); voidAssignFrom(const ROOT::Math::Transform3D::Vector& v); voidAssignFrom(const ROOT::Math::Rotation3D& r, const ROOT::Math::Transform3D::Vector& v); voidSetIdentity(). Data Members; public:. enum ETransform3DMatrixIndex { kXX; kXY; kXZ; kDX; kYX; kYY; kYZ; kDY; kZX; kZY; kZZ; kDZ; };. private:. doublefM[12]transformation elements (3x4 matrix) . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Transform3D(). Default constructor (identy rotation) + zero translation. SetIdentity(). Transform3D(IT begin, IT end). Construct given a pair of pointers or iterators defining the; beginning and end of an array of 12 Scalars. SetComponents(double* begin, double* end). Transform3D( const Rotation3D & r, const Vector & v). Construct from a rotation and then a translation described by a Vector. AssignFrom(const ROOT::Math::Rotation3D& r, const ROOT::Math::Transform3D::Vector& v). Transform3D( const Rotation3D & r, const Translation3D & t). Construct from a rotation and then a translation described by a Translation3D class. AssignFrom(const ROOT::Math::Rotation3D& r, const ROOT::Math::Transform3D::Vector& v). Transform3D( const ARotation & r, const DisplacementVector3D<CoordSystem,Tag> & v). Construct from a rotation (any rotation object) and then a translation; (represented by any DisplacementVector); The requirements on the rotation and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__Transform3D.html:7162,Inherit,Inheritance,7162,root/html532/ROOT__Math__Transform3D.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__Transform3D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,rm;  ; int fNInput;  ; int fNText;  ; int fNToken;  ; ColorStruct_t * fOldLinkColor;  ; int fOverrideColors;  ; int fOverrideFonts;  ; int fParaAlignment;  ; TGHtmlElement * fPFirst;  ; TGHtmlBlock * fPInsBlock;  ; TGHtmlElement * fPLast;  ; TGHtmlScript * fPScript;  ; TGHtmlBlock * fPSelEndBlock;  ; TGHtmlBlock * fPSelStartBlock;  ; int fRadioIdx;  ; int fRowAlignment;  ; int fRulePadding;  ; int fRuleRelief;  ; SHtmlIndex_t fSelBegin;  ; ColorStruct_t * fSelectionColor;  ; SHtmlIndex_t fSelEnd;  ; Html_16_t fSelEndIndex;  ; Html_16_t fSelStartIndex;  ; SHtmlStyleStack_t * fStyleStack;  ; int fTableBorderMin;  ; int fTableRelief;  ; THashTable * fUidTable;  ; int fUnderlineLinks;  ; int fVarId;  ; int fVarind;  ; const char * fZBase;  ; char * fZBaseHref;  ; char * fZGoto;  ; char * fZText;  ;  Protected Attributes inherited from TGView; TGViewFrame * fCanvas;  frame containing the text ;  ; Atom_t fClipboard;  clipboard property ;  ; TGRectangle fExposedRegion;  exposed area ;  ; TGHScrollBar * fHsb;  horizontal scrollbar ;  ; TGLongPosition fMousePos;  position of mouse ;  ; Int_t fScrolling;  scrolling direction ;  ; TGLongPosition fScrollVal;  scroll value ;  ; TGDimension fVirtualSize;  the current virtual window size ;  ; TGLongPosition fVisible;  position of visible region ;  ; TGVScrollBar * fVsb;  vertical scrollbar ;  ; TGGC fWhiteGC;  graphics context used for scrolling generates GraphicsExposure events ;  ; UInt_t fXMargin;  x margin ;  ; UInt_t fYMargin;  y margin ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtml.html:42417,inherit,inherited,42417,doc/master/classTGHtml.html,https://root.cern,https://root.cern/doc/master/classTGHtml.html,2,['inherit'],['inherited']
Modifiability,"rmInterruptsSyscalls(Bool_t); static const char*TSystem::StripOffProto(const char* path, const char* proto). private:. virtual void*GetDirPtr() const. Data Members; public:. enum TSystem::EAclicMode { kDefault; kDebug; kOpt; };; enum TSystem::EAclicProperties { kFlatBuildDir; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSystem::EAclicModeTSystem::fAclicModeWhether the compilation should be done debug or opt; Int_tTSystem::fAclicPropertiesVarious boolean flag for change ACLiC's behavior.; Int_tTSystem::fBeepDurationUsed by Beep(); Int_tTSystem::fBeepFreqUsed by Beep(); TStringTSystem::fBuildArchArchitecure for which ROOT was built (passed to ./configure); TStringTSystem::fBuildCompilerCompiler used to build this ROOT; TStringTSystem::fBuildCompilerVersionCompiler version used to build this ROOT; TStringTSystem::fBuildDirLocation where to build ACLiC shared library and use as scratch area.; TStringTSystem::fBuildNodeDetailed information where ROOT was built; TSeqCollection*TSystem::fCompiledList of shared libs from compiled macros to be deleted; Bool_tTSystem::fDoneTrue if eventloop should be finished; TSeqCollection*TSystem::fFileHandlerList of file handlers; TStringTSystem::fFlagsDebugFlags for debug compilation; TStringTSystem::fFlagsOptFlags for optimized compilation; TSeqCollection*TSystem::fHelpersList of helper classes for alternative file/directory access; TStringTSystem::fHostnameHostname; Bool_tTSystem::fInControlTrue if in eventloop; TStringTSystem::fIncludePathUsed to expand $IncludePath in the directives given to SetMakeSharedLib and SetMakeExe; Bool_tTSystem::fInsideNotifyUsed by DispatchTimers(); Int_tTSystem::fLevelLevel of nested eventloops; TStringTSystem::fLinkdefSuffixDefault suffix for linkdef files to be used by ACLiC (see EA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TWebSystem.html:16310,config,configure,16310,root/html534/TWebSystem.html,https://root.cern,https://root.cern/root/html534/TWebSystem.html,2,['config'],['configure']
Modifiability,"rmInterruptsSyscalls(Bool_t); static const char*TSystem::StripOffProto(const char* path, const char* proto). private:. virtual void*GetDirPtr() const. Data Members; public:. enum TSystem::EAclicMode { kDefault; kDebug; kOpt; };; enum TSystem::EAclicProperties { kFlatBuildDir; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSystem::EAclicModeTSystem::fAclicModeWhether the compilation should be done debug or opt; Int_tTSystem::fAclicPropertiesVarious boolean flag for change ACLiC's behavior.; Int_tTSystem::fBeepDurationUsed by Beep(); Int_tTSystem::fBeepFreqUsed by Beep(); TStringTSystem::fBuildArchArchitecure for which ROOT was built (passed to ./configure); TStringTSystem::fBuildCompilerCompiler used to build this ROOT; TStringTSystem::fBuildCompilerVersionCompiler version used to build this ROOT; TStringTSystem::fBuildDirLocation where to build ACLiC shared library and use as scratch area.; TStringTSystem::fBuildNodeDetailed information where ROOT was built; TSeqCollection*TSystem::fCompiledList of shared libs from compiled macros to be deleted; Bool_tTSystem::fDoneTrue if eventloop should be finished; TSeqCollection*TSystem::fFileHandlerList of file handlers; TStringTSystem::fFlagsDebugFlags for debug compilation; TStringTSystem::fFlagsOptFlags for optimized compilation; TSeqCollection*TSystem::fHelpersList of helper classes for alternative file/directory access; TStringTSystem::fHostnameHostname; Bool_tTSystem::fInControlTrue if in eventloop; TStringTSystem::fIncludePathUsed to expand $IncludePath in the directives given to SetMakeSharedLib and SetMakeExe; Bool_tTSystem::fInsideNotifyUsed by DispatchTimers(); TStringTSystem::fLastErrorStringLast system error message; Int_tTSystem::fLevelLevel of nested eventloops; TStringTSystem::fLinkdefSuffixD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDCacheSystem.html:15937,config,configure,15937,root/html528/TDCacheSystem.html,https://root.cern,https://root.cern/root/html528/TDCacheSystem.html,11,['config'],['configure']
Modifiability,"rmMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooListProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooUniform.html:38610,config,configuration,38610,root/html528/RooUniform.html,https://root.cern,https://root.cern/root/html528/RooUniform.html,2,['config'],['configuration']
Modifiability,"rmRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxyc; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym; RooRealProxym0; RooRealProxyp.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooArgusBG.html:39792,config,configuration,39792,root/html532/RooArgusBG.html,https://root.cern,https://root.cern/root/html532/RooArgusBG.html,2,['config'],['configuration']
Modifiability,"rmRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; RooRealProxy_t; RooRealProxy_tau; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; RooBDecay::DecayType_type; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooBDecay.html:41868,config,configuration,41868,root/html532/RooBDecay.html,https://root.cern,https://root.cern/root/html532/RooBDecay.html,2,['config'],['configuration']
Modifiability,"rmVariable.h:111; ROOT::Math::MinimTransformVariable::DerivativeIntToExtdouble DerivativeIntToExt(double x) constDefinition MinimTransformVariable.h:129; ROOT::Math::MinimTransformVariable::fBoundsbool fBoundshas double boundDefinition MinimTransformVariable.h:143; ROOT::Math::MinimTransformVariable::fLowerdouble fLowerlower parameter limitDefinition MinimTransformVariable.h:145; ROOT::Math::MinimTransformVariable::fUpBoundbool fUpBoundhas upper bound paramDefinition MinimTransformVariable.h:142; ROOT::Math::SinVariableTransformationSin Transformation class for dealing with double bounded variables.Definition MinimizerVariableTransformation.h:38; ROOT::Math::SqrtLowVariableTransformationSqrt Transformation class for dealing with lower bounded variables.Definition MinimizerVariableTransformation.h:58; ROOT::Math::SqrtUpVariableTransformationSqrt Transformation class for dealing with upper bounded variables.Definition MinimizerVariableTransformation.h:74; xDouble_t x[n]Definition legend1.C:17; MathNamespace for new Math classes and functions.; ROOT::Math::EMinimVariableTypeEMinimVariableTypeEnumeration describing the status of the variable The enumeration are used in the minimizer classes t...Definition MinimTransformVariable.h:27; ROOT::Math::kFix@ kFixfixed variableDefinition MinimTransformVariable.h:29; ROOT::Math::kUpBound@ kUpBoundvariable has an upper boundsDefinition MinimTransformVariable.h:32; ROOT::Math::kBounds@ kBoundsvariable has two boundsDefinition MinimTransformVariable.h:30; ROOT::Math::kLowBound@ kLowBoundvariable has a lower boundDefinition MinimTransformVariable.h:31; ROOT::Math::kDefault@ kDefaultfree variable (unlimited)Definition MinimTransformVariable.h:28; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4. mathmathcoreincMathMinimTransformVariable.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:40 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MinimTransformVariable_8h_source.html:9379,variab,variable,9379,doc/master/MinimTransformVariable_8h_source.html,https://root.cern,https://root.cern/doc/master/MinimTransformVariable_8h_source.html,3,['variab'],"['variable', 'variableDefinition']"
Modifiability,"rmalPriority);  Create thread with a name. ;  ;  TThread (Long_t id=0);  Create a TThread for a already running thread. ;  ;  TThread (VoidFunc_t fn, void *arg=nullptr, EPriority pri=kNormalPriority);  Create a detached thread. ;  ;  TThread (VoidRtnFunc_t fn, void *arg=nullptr, EPriority pri=kNormalPriority);  Create a thread. ;  ; virtual ~TThread ();  Cleanup the thread. ;  ; void Delete (Option_t *option="""") override;  Delete this object. ;  ; Long_t GetId () const;  ; EPriority GetPriority () const;  ; EState GetState () const;  ; TClass * IsA () const override;  ; Long_t Join (void **ret=nullptr);  Join this thread. ;  ; Int_t Kill ();  Kill this thread. ;  ; Int_t Run (void *arg=nullptr, const int affinity=-1);  Start the thread. ;  ; void SetPriority (EPriority pri);  Set thread priority. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTThread.html:3115,inherit,inherited,3115,doc/master/classTThread.html,https://root.cern,https://root.cern/doc/master/classTThread.html,1,['inherit'],['inherited']
Modifiability,"rmalization integral (owned by _normMgr); RooObjCacheManager_normMgrThe cache manager; TString_normRangeNormalization range; static TString_normRangeOverride; RooArgSet*_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_t_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_t_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_t_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_t_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_t_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsPdf.html:42237,config,configuration,42237,root/html530/RooAbsPdf.html,https://root.cern,https://root.cern/root/html530/RooAbsPdf.html,2,['config'],['configuration']
Modifiability,"rmalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; const RooArgSet*_nset! Normalization set to be used in evaluation; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooRealProxy_pdfProbability Density function; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooEffProd.html:44375,config,configuration,44375,root/html602/RooEffProd.html,https://root.cern,https://root.cern/root/html602/RooEffProd.html,8,['config'],['configuration']
Modifiability,"rmalizeTransformVariableNormalizeTransform(TMVA::DataSetInfo& dsi); TMVA::VariableNormalizeTransformVariableNormalizeTransform(const TMVA::VariableNormalizeTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream&) const. protected:. voidTMVA::VariableTransformBase::CalcNorm(const vector<const TMVA::Event*,allocator<const TMVA::Event*> >&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Int_tTMVA::VariableTransformBase::GetNClasses() const; UInt_tTMVA::VariableTransformBase::GetNSpectators() const; UInt_tTMVA::VariableTransformBase::GetNTargets() const; UInt_tTMVA::VariableTransformBase::GetNVariables() const; voidTObject::MakeZombie(); voidTMVA::VariableTransformBase::SetCreated(Bool_t c = kTRUE); voidTMVA::VariableTransformBase::SetName(const TString& c); voidTMVA::VariableTransformBase::SetNVariables(UInt_t i); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables(). private:. voidCalcNormalizationParams(const vector<TMVA::Event*,allocator<TMVA::Event*> >& events). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::Variab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableNormalizeTransform.html:7398,Variab,VariableTransformBase,7398,root/html534/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableNormalizeTransform.html,15,['Variab'],"['VariableInfo', 'VariableTransformBase', 'Variables']"
Modifiability,"rmalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidsetAnaIntZ(Double_t z); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooMultiVarGaussian.html:28070,config,config,28070,root/html530/RooMultiVarGaussian.html,https://root.cern,https://root.cern/root/html530/RooMultiVarGaussian.html,1,['config'],['config']
Modifiability,"rmally; *-* 1: command is blank, ignored; *-* 2: command line unreadable, ignored; *-* 3: unknown command, ignored; *-* 4: abnormal termination (e.g., MIGRAD not converged); *-* 5: command is a request to read PARAMETER definitions; *-* 6: 'SET INPUT' command; *-* 7: 'SET TITLE' command; *-* 8: 'SET COVAR' command; *-* 9: reserved; *-* 10: END command; *-* 11: EXIT or STOP command; *-* 12: RETURN command; -; *. void mncont(Int_t ke1, Int_t ke2, Int_t nptu, Double_t* xptu, Double_t* yptu, Int_t& ierrf); Find points along a contour where FCN is minimum; *-* ================================================; *-* Find NPTU points along a contour where the function; *-* FMIN (X(KE1),X(KE2)) = AMIN+UP; *-* where FMIN is the minimum of FCN with respect to all; *-* the other NPAR-2 variable parameters (if any).; *-* IERRF on return will be equal to the number of points found:; *-* NPTU if normal termination with NPTU points found; *-* -1 if errors in the calling sequence (KE1, KE2 not variable); *-* 0 if less than four points can be found (using MNMNOT); *-* n>3 if only n points can be found (n < NPTU); -; *-* input arguments: parx, pary, devs, ngrid; *; System generated locals. void mncrck(TString crdbuf, Int_t maxcwd, TString& comand, Int_t& lnc, Int_t mxp, Double_t* plist, Int_t& llist, Int_t& ierr, Int_t isyswr); Cracks the free-format input*-; *-* ============================; *-* Cracks the free-format input, expecting zero or more; *-* alphanumeric fields (which it joins into COMAND(1:LNC)); *-* followed by one or more numeric fields separated by; *-* blanks and/or one comma. The numeric fields are put into; *-* the LLIST (but at most MXP) elements of PLIST.; *-* IERR = 0 if no errors,; *-* = 1 if error(s).; -; *; Initialized data. void mncros(Double_t& aopt, Int_t& iercr); Find point where MNEVAL=AMIN+UP*-; *-* ===============================; *-* Find point where MNEVAL=AMIN+UP, along the line through; *-* XMIDCR,YMIDCR with direction XDIRCR,YDIRCR, where X and Y; *-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMinuit.html:37324,variab,variable,37324,root/html528/TMinuit.html,https://root.cern,https://root.cern/root/html528/TMinuit.html,10,['variab'],['variable']
Modifiability,"rmat.; Click in the canvas area, near the edges, with the right mouse button and select the Print context menu entry. This will generate a file of canvas pointed to by c1. You can select the name of the PostScript file. If the file name is xxx.ps, you will generate a PostScript file named xxx.ps. If the file name is xxx.eps, you generate an encapsulated Postscript file instead. In your program (or script), you can type:. c1->Print(""xxx.ps"") // or; c1->Print(""xxx.eps""); Next example prints the picture in the pad pointed by pad1.; pad1->Print(""xxx.ps""); The TPad::Print method has a second parameter called option. Its value can be:. 0 which is the default and is the same as “ps”; “ps” a Postscript file is produced; “Portrait” a Postscript file is produced with Portrait orientation; “Landscape” a Postscript file is produced with Landscape orientation; “eps”an Encapsulated Postscript file; “Preview”an Encapsulated Postscript file with preview is produced; “gif” a Graphics Interchange Format file; “cxx” a C++ macro file is generated; “pdf”a Portable Document Format file; “xml” a eXtensible Mark-up Language file; “jpg”a Joint Photographic Experts Group file; “png” a Portable Network Graphics Format (PNG file); “xpm” a X11 Pixel Map Format; “svg” a Scalable Vector Graphics file; “tiff” a Tagged-Image File Format; “root”a ROOT binary file is produced. You do not need to specify this second parameter; you can indicate by the filename extension what format you want to save a canvas in (i.e. canvas.ps, canvas.gif, canvas.C, etc).; The size of the PostScript picture, by default, is computed to keep the aspect ratio of the picture on the screen, where the size along x is always 20 cm. You can set the size of the PostScript picture before generating the picture with a command such as:; TPostScript myps(""myfile.ps"",111); myps.Range(xsize,ysize);; object->Draw();; myps.Close();; The first parameter in the TPostScript constructor is the name of the file; the second one is the format o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:374382,Portab,Portable,374382,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['Portab'],['Portable']
Modifiability,"rmat:. [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>. Where <SystemName> is either Unix, WinNT, MacOS or Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$ROOTSYS/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for all ROOT; based applications. Function Members (Methods); public:. TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEnvRec.html:1831,config,config,1831,root/html528/TEnvRec.html,https://root.cern,https://root.cern/root/html528/TEnvRec.html,12,['config'],['config']
Modifiability,"rmat:. [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>. Where <SystemName> is either Unix, WinNT, MacOS or Vms,; <RootName> the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; <ProgName> the current program name and <name> the resource name,; with optionally a type specification. <value> can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resouce name. E.g.:. Unix.Rint.Root.DynamicPath: .:$ROOTSYS/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.MemStat: 1. <SystemName> and <ProgName> or <RootName> may be the wildcard ""*"".; A # in the first column starts comment line. For the currently defined resources (and their default values) see; $ROOTSYS/etc/system.rootrc. Note that the .rootrc config files contain the config for all ROOT; based applications. To add new entries to a TEnv:; TEnv env("".myfile"");; env.SetValue(""myname"",""value"");; env.SaveLevel(kEnvLocal);. All new entries will be saved in the file corresponding to the; first SaveLevel() command. If Save() is used, new entries go; into the local file by default. Function Members (Methods); public:. TEnv(const char* name = """"); virtual~TEnv(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; Bool_tDefined(const char* name); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEnv.html:1848,config,config,1848,root/html528/TEnv.html,https://root.cern,https://root.cern/root/html528/TEnv.html,8,['config'],['config']
Modifiability,"rmation (peaks) from useless; information (background). method is based on Sensitive Nonlinear Iterative Peak (SNIP) clipping; algorithm.; new value in the channel ""i"" is calculated. where p = 1, 2, ..., numberIterations. In fact it represents second order; difference filter (-1,2,-1).; One can also change the; direction of the change of the clipping window, the order of the clipping; filter, to include smoothing, to set width of smoothing window and to include; the estimation of Compton edges. On successful completion it returns 0. On; error it returns pointer to the string describing error.; Parameters:. spectrum: pointer to the vector of source spectrum; ssize: length of the spectrum vector; numberIterations: maximal width of clipping window,; direction: direction of change of clipping window.; Possible values: kBackIncreasingWindow, kBackDecreasingWindow; filterOrder: order of clipping filter.; Possible values: kBackOrder2, kBackOrder4, kBackOrder6, kBackOrder8; smoothing: logical variable whether the smoothing operation in the; estimation of background will be included.; Possible values: kFALSE, kTRUE; smoothWindow: width of smoothing window.; Possible values: kBackSmoothing3, kBackSmoothing5, kBackSmoothing7,; kBackSmoothing9, kBackSmoothing11, kBackSmoothing13, kBackSmoothing15.; compton: logical variable whether the estimation of Compton edge will be; included. Possible values: kFALSE, kTRUE. References:. C. G Ryan et al.: SNIP, a statistics-sensitive background treatment for the; quantitative analysis of PIXE spectra in geoscience applications. NIM, B34; (1988), 396-402.; M. Morh�č, J. Kliman, V. Matou�ek, M. Veselsk�, I. Turzo:; Background elimination methods for multidimensional gamma-ray spectra. NIM,; A401 (1997) 113-132.; D. D. Burgess, R. J. Tervo: Background estimation for gamma-ray; spectroscopy. NIM 214 (1983), 431-434. Example 1 script Background_incr.c:. Figure 1 Example of the estimation of background for number of iterations=6.; Original spectru",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrum.html:14425,variab,variable,14425,root/html528/TSpectrum.html,https://root.cern,https://root.cern/root/html528/TSpectrum.html,10,['variab'],['variable']
Modifiability,"rmation in all parents cells up to the root cell. ;  ; Double_t GetIntg () const;  ; TFoamCell * GetPare () const;  ; Double_t GetPrim () const;  ; Int_t GetSerial () const;  ; Int_t GetStat () const;  ; Double_t GetVolume () const;  ; Double_t GetXdiv () const;  ; TClass * IsA () const override;  ; TFoamCell & operator= (const TFoamCell &)=delete;  ; TFoamCell & operator= (TFoamCell &&)=delete;  ; void Print (Option_t *option) const override;  Printout of the cell geometry parameters for the debug purpose. ;  ; void SetBest (Int_t Best);  ; void SetCells (TFoamCell **cells);  ; void SetDau0 (TFoamCell *Daug);  ; void SetDau1 (TFoamCell *Daug);  ; void SetDriv (Double_t Driv);  ; void SetIntg (Double_t Intg);  ; void SetPrim (Double_t Prim);  ; void SetSerial (Int_t Serial);  ; void SetStat (Int_t Stat);  ; void SetXdiv (Double_t Xdiv);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFoamCell.html:2511,inherit,inherited,2511,doc/master/classTFoamCell.html,https://root.cern,https://root.cern/doc/master/classTFoamCell.html,1,['inherit'],['inherited']
Modifiability,"rmed data are written into dest spectrum.; Function parameters:; fSource-pointer to the matrix of source spectrum, its size should be fSizex*fSizey except for inverse FOURIER, FOUR-WALSH, FOUR-HAAR transform. These need fSizex*2*fSizey length to supply real and imaginary coefficients.; fDest-pointer to the matrix of destination data, its size should be fSizex*fSizey except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These need fSizex*2*fSizey length to store real and imaginary coefficients; fSizex,fSizey-basic dimensions of source and dest spectra. Transform methods; Goal: to analyse experimental data using orthogonal transforms. orthogonal transforms can be successfully used for the processing of nuclear spectra (not only); they can be used to remove high frequency noise, to increase signal-to-background ratio as well as to enhance low intensity components [1], to carry out e.g. Fourier analysis etc.; we have implemented the function for the calculation of the commonly used orthogonal transforms as well as functions for the filtration and enhancement of experimental data. References:; [1] C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy. NIM A353 (1994) 280-284.; [2] Morhac M., Matouoek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; [3] Morhac M., Matouoek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; [4] Morhac M., Matouoek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. Example 1 - script Transform2.c:. Fig. 1 Original two-dimensional noisy spectrum. Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; Script:; Example to illustrate Transform function (class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Transform.html:31282,enhance,enhancement,31282,doc/master/classTSpectrum2Transform.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Transform.html,1,['enhance'],['enhancement']
Modifiability,"rmed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. vector<vector<TH1F*> >fCumulativeDist! The Cummulative distributions; vector<vector<TMVA::PDF*> >fCumulativePDFThe cumulative PDF; UInt_tfElementsperbinav number of events stored per bin in cum dist; Bool_tfFlatNotGauss; Int_tfPdfMaxSmooth; Int_tfPdfMinSmooth. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableGaussTransform(TMVA::DataSetInfo& dsi, TString strcor = """"); constructor; can only be applied one after the other when they are created. But in order to; determine the Gauss transformation. ~VariableGaussTransform( void ); destructor. void Initialize(). Bool_t PrepareTransformation(const vector<TMVA::Event*>& ); calculate the cumulative distributions. const TMVA::Event* Transform(const TMVA::Event*const , Int_t cls) const; apply the Gauss transformation. const TMVA::Event* InverseTransform(const TMVA::Event*const , Int_t cls) const; apply the inverse Gauss or inverse uniform transformation. void GetCumulativeDist(const vector<TMVA::Event*>& ); fill the cumulative distributions. void WriteTransformationToStream(ostream& ) const. void CleanUpCumulativeArrays(TString opt = ""ALL""); clean up of cumulative arrays. void AttachXMLTo(void* parent); create XML description of Gauss transformation. void ReadFromXML(void* trfnode); Read the transformation matrices from the xml node. void ReadTransformationFromStream(istream& , const TString& ); Read",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableGaussTransform.html:10409,Variab,VariableGaussTransform,10409,root/html602/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableGaussTransform.html,2,['Variab'],['VariableGaussTransform']
Modifiability,"rminant det = d1*TMath::Power(2.,d2) ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; virtual Int_t GetNcols () const =0;  ; virtual Int_t GetNrows () const =0;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; TClass * IsA () const override;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; void Print (Option_t *opt="""") const override;  Print class members. ;  ; Double_t SetTol (Double_t tol);  ; virtual TVectorD Solve (const TVectorD &b, Bool_t &ok)=0;  ; virtual Bool_t Solve (TMatrixDColumn &b)=0;  ; virtual Bool_t Solve (TVectorD &b)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual TVectorD TransSolve (const TVectorD &b, Bool_t &ok)=0;  ; virtual Bool_t TransSolve (TMatrixDColumn &b)=0;  ; virtual Bool_t TransSolve (TVectorD &b)=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an obj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompBase.html:5894,inherit,inherited,5894,doc/master/classTDecompBase.html,https://root.cern,https://root.cern/doc/master/classTDecompBase.html,1,['inherit'],['inherited']
Modifiability,"rmination of Process() requested?; Float_tTVirtualPacketizer::fTimeUpdttime between updates; Long64_tTVirtualPacketizer::fTotalEntriestotal number of entries to be distributed;; TVirtualPacketizer::EUseEstOptTVirtualPacketizer::fUseEstOptControl usage of estimated values for the progress info; Bool_tTVirtualPacketizer::fValidConstructed properly?. private:. Long64_tfAssignedEntries processed or being processed.; Double_tfCalibFracSize of the calibrating packet as fraction of Ntot/Nwrk; Bool_tfFixedNumWhether we must assign a fixed number of cycles per worker; Long64_tfNumPerWorkerNumber of cycles per worker, if this option; Long64_tfPacketSeqSequential number of the last packet assigned; TList*fPacketsAll processed packets; Long64_tfProcessingEvent being processed; TStopwatch*fStopwatchFor measuring the start time of each packet; TList*fWrkExcludedList of nodes excluded from distribution; TMap*fWrkStatsWorker status, keyed by correspondig TSlave. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPacketizerUnit(TList* slaves, Long64_t num, TList* input, TProofProgressStatus* st = 0); Constructor. Int_t AssignWork(TDSet* , Long64_t , Long64_t num); Assign work to be done to this packetizer. ~TPacketizerUnit(); Destructor. Double_t GetCurrentTime(); Get current time. Float_t GetCurrentRate(Bool_t& all); Get Estimation of the current rate; just summing the current rates of; the active workers. TDSetElement * GetNextPacket(TSlave* sl, TMessage* r); Get next packet. Int_t AddWorkers(TList* workers); Adds new workers. Returns the number of workers added, or -1 on failure. TPacketizerUnit(). TPacketizerUnit(const TPacketizerUnit& ). void operator=(const TPacketizerUnit& ). Int_t GetActiveWorkers(); { return fWrkStats->GetSize(); }. » Author: Long Tran-Thanh 22/07/07 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-03-14 16:46; This page has been automatically ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPacketizerUnit.html:10152,Inherit,Inheritance,10152,root/html534/TPacketizerUnit.html,https://root.cern,https://root.cern/root/html534/TPacketizerUnit.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rming a linear fit we need the basis functions, which are the partial derivatives with respect to the parameters of the model function. bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool Minimize(); find directly the minimum of the chi2 function; solving the linear equation. Use TVirtualFitter::Eval. bool SetVariable(unsigned int , const string& , double , double ); set free variable (dummy impl. ). { return false; }. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. { return 0; }. const double * X() const; return pointer to X values at the minimum. { return &fParams.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fNFree; }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. { return (fErrors.empty()) ? 0 : &fErrors.front(); }. double CovMatrix(unsigned int i, unsigned int j) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. int CovMatrixStatus() const; return covariance matrix status. » Author: L. Moneta Wed Oct 25 16:28:55 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/minuit:$Id: TLinearMinimizer.h 34753 2010-08-10 10:02:27Z moneta $ » Last generated: 2010-10-04 18:52; This page has been automatically generated. For comments or suggestions regarding the documentation or RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLinearMinimizer.html:6717,variab,variables,6717,root/html528/TLinearMinimizer.html,https://root.cern,https://root.cern/root/html528/TLinearMinimizer.html,1,['variab'],['variables']
Modifiability,"rming a linear fit we need the basis functions, which are the partial derivatives with respect to the parameters of the model function. bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool Minimize(); find directly the minimum of the chi2 function; solving the linear equation. Use TVirtualFitter::Eval. bool SetVariable(unsigned int , const string& , double , double ); set free variable (dummy impl. ). { return false; }. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. { return 0; }. const double * X() const; return pointer to X values at the minimum. { return &fParams.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fNFree; }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. { return (fErrors.empty()) ? 0 : &fErrors.front(); }. double CovMatrix(unsigned int i, unsigned int j) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. int CovMatrixStatus() const; return covariance matrix status. » Author: L. Moneta Wed Oct 25 16:28:55 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/minuit:$Id: TLinearMinimizer.h 34753 2010-08-10 10:02:27Z moneta $ » Last generated: 2011-07-04 15:33; This page has been automatically generated. For comments or suggestions regarding the documentation or RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TLinearMinimizer.html:7065,variab,variables,7065,root/html530/TLinearMinimizer.html,https://root.cern,https://root.cern/root/html530/TLinearMinimizer.html,1,['variab'],['variables']
Modifiability,"rming a linear fit we need the basis functions, which are the partial derivatives with respect to the parameters of the model function. bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool Minimize(); find directly the minimum of the chi2 function; solving the linear equation. Use TVirtualFitter::Eval. bool SetVariable(unsigned int , const string& , double , double ); set free variable (dummy impl. ). { return false; }. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. { return 0; }. const double * X() const; return pointer to X values at the minimum. { return &fParams.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fNFree; }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. { return (fErrors.empty()) ? 0 : &fErrors.front(); }. double CovMatrix(unsigned int i, unsigned int j) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. int CovMatrixStatus() const; return covariance matrix status. » Author: L. Moneta Wed Oct 25 16:28:55 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/minuit:$Id: TLinearMinimizer.h 34753 2010-08-10 10:02:27Z moneta $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLinearMinimizer.html:7065,variab,variables,7065,root/html532/TLinearMinimizer.html,https://root.cern,https://root.cern/root/html532/TLinearMinimizer.html,2,['variab'],['variables']
Modifiability,"rms of variables that occur in 'vars'. The returned object is an instance of the object you just defined; connected to the variables listed in 'vars'. The name of the; object is 'name', its class name Roo<name>Class. This function is an effective compiled replacement of RooGenericPdf. You can add optional expressions for analytical integrals to be; advertised by your class in the syntax; ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; where <intObsName> a name of the observable integrated over and; <CPPAnaIntExpression> is the C++ expression that calculates that; integral. RooAbsPdf* makePdfInstance(const char* className, const char* name, const char* expression, const RooArgList& vars, const char* intExpression = 0); Write, compile and load code and instantiate object for a; RooAbsPdf implementation with class name 'name', taking all; elements of 'vars' as constructor arguments. The initial value; expression is taken to be 'expression' which can be any one-line; C++ expression in terms of variables that occur in 'vars'. The returned object is an instance of the object you just defined; connected to the variables listed in 'vars'. The name of the; object is 'name', its class name Roo<name>Class. This function is an effective compiled replacement of RooGenericPdf. You can add optional expressions for analytical integrals to be; advertised by your class in the syntax; ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; where <intObsName> a name of the observable integrated over and; <CPPAnaIntExpression> is the C++ expression that calculates that; integral. Bool_t makePdf(const char* name, const char* realArgNames = 0, const char* catArgNames = 0, const char* expression = ""1.0"", Bool_t hasAnaInt = kFALSE, Bool_t hasIntGen = kFALSE, const char* intExpression = 0); Write code for a RooAbsPdf implementation with class name 'name',; taking RooAbsReal arguments with names listed in argNames and; RooAbsCate",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooClassFactory.html:12983,variab,variables,12983,root/html526/RooClassFactory.html,https://root.cern,https://root.cern/root/html526/RooClassFactory.html,11,['variab'],['variables']
Modifiability,"rmula = formula;; 1801 // save formula to parse variable and parameters for Cling; 1802 fClingInput = formula;; 1803 // replace all { and }; 1804 fFormula.ReplaceAll(""{"","""");; 1805 fFormula.ReplaceAll(""}"","""");; 1806 ; 1807 // std::cout << ""functors are extracted formula is "" << std::endl;; 1808 // std::cout << fFormula << std::endl << std::endl;; 1809 ; 1810 fFuncs.sort();; 1811 fFuncs.unique();; 1812 ; 1813 // use inputFormula for Cling; 1814 ProcessFormula(fClingInput);; 1815 ; 1816 // for pre-defined functions (need after processing); 1817 if (fNumber != 0) SetPredefinedParamNames();; 1818 ; 1819 return fReadyToExecute && fClingInitialized;; 1820}; 1821 ; 1822////////////////////////////////////////////////////////////////////////////////; 1823/// Extracts functors from formula, and put them in fFuncs.; 1824/// Simple grammar:; 1825/// - `<function>` := name(arg1,arg2...); 1826/// - `<variable>` := name; 1827/// - `<parameter>` := [number]; 1828/// - `<name>` := String containing lower and upper letters, numbers, underscores; 1829/// - `<number>` := Integer number; 1830/// Operators are omitted.; 1831 ; 1832void TFormula::ExtractFunctors(TString &formula); 1833{; 1834 // std::cout << ""Commencing ExtractFunctors on "" << formula << std::endl;; 1835 ; 1836 TString name = """";; 1837 TString body = """";; 1838 // printf(""formula is : %s \n"",formula.Data() );; 1839 for (Int_t i = 0; i < formula.Length(); ++i) {; 1840 ; 1841 // std::cout << ""loop on character : "" << i << "" "" << formula[i] << std::endl;; 1842 // case of parameters; 1843 if (formula[i] == '[') {; 1844 Int_t tmp = i;; 1845 i++;; 1846 TString param = """";; 1847 while (i < formula.Length() && formula[i] != ']') {; 1848 param.Append(formula[i++]);; 1849 }; 1850 i++;; 1851 // rename parameter name XX to pXX; 1852 // std::cout << ""examine parameters "" << param << std::endl;; 1853 int paramIndex = -1;; 1854 if (param.IsDigit()) {; 1855 paramIndex = param.Atoi();; 1856 param.Insert(0, 'p'); // needed for the replaceme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:69065,variab,variable,69065,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variable']
Modifiability,"rmula corresponding to the majorname in parent tree T. ;  ; TTreeFormula * GetMinorFormulaParent (const TTree *parent);  Return a pointer to the TreeFormula corresponding to the minorname in parent tree T. ;  ; std::pair< TVirtualIndex *, Int_t > GetSubTreeIndex (Long64_t major, Long64_t minor) const;  Returns a TVirtualIndex for a tree which holds the entry with the specified major and minor values and the number of that tree. ;  ; void ReleaseSubTreeIndex (TVirtualIndex *index, Int_t treeNo) const;  Releases the tree index got using GetSubTreeIndex. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< TChainIndexEntry > fEntries;  Pointer to minor TreeFormula in Parent tree (if any) ;  ; TTreeFormula * fMajorFormulaParent;  ; TString fMajorName;  ; TTreeFormula * fMinorFormulaParent;  Pointer to major TreeFormula in Parent tree (if any) ;  ; TString fMinorName;  ;  Protected Attributes inherited from TVirtualIndex; TTree * fTree;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TChain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTChainIndex.html:13438,inherit,inherited,13438,doc/master/classTChainIndex.html,https://root.cern,https://root.cern/doc/master/classTChainIndex.html,2,['inherit'],['inherited']
Modifiability,"rmula functions) ;  ; TObject * fParent {nullptr};  ! Parent object hooking this function (if one) ;  ; std::vector< Double_t > fParErrors;  Array of errors of the fNpar parameters. ;  ; std::vector< Double_t > fParMax;  Array of upper limits of the fNpar parameters. ;  ; std::vector< Double_t > fParMin;  Array of lower limits of the fNpar parameters. ;  ; std::vector< Double_t > fSave;  Array of fNsave function values. ;  ; EFType fType {EFType::kTemplScalar};  ; Double_t fXmax {-1111};  Upper bounds for the range. ;  ; Double_t fXmin {-1111};  Lower bounds for the range. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TF1; enum class  EAddToList { kDefault; , kAdd; , kNo; };  Add to list behavior. More...;  ; enum  EStatusBits { kNotGlobal = (1ULL << ( 10 )); , kNotDraw = (1ULL << ( 9 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF12.html:37863,inherit,inherited,37863,doc/master/classTF12.html,https://root.cern,https://root.cern/doc/master/classTF12.html,3,['inherit'],['inherited']
Modifiability,"rmula functions) ;  ; TObject * fParent {nullptr};  ! Parent object hooking this function (if one) ;  ; std::vector< Double_t > fParErrors;  Array of errors of the fNpar parameters. ;  ; std::vector< Double_t > fParMax;  Array of upper limits of the fNpar parameters. ;  ; std::vector< Double_t > fParMin;  Array of lower limits of the fNpar parameters. ;  ; std::vector< Double_t > fSave;  Array of fNsave function values. ;  ; EFType fType {EFType::kTemplScalar};  ; Double_t fXmax {-1111};  Upper bounds for the range. ;  ; Double_t fXmin {-1111};  Lower bounds for the range. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Static Protected Attributes; static std::atomic< Bool_t > fgAbsValue;  ; static std::atomic< Bool_t > fgAddToGlobList;  ; static TF1 * fgCurrent = nullptr;  ; static Bool_t fgRejectPoint = kFALSE;  . Private Member Functions; void DefineNSUMTerm (TObjArray *newFuncs, TObjArray *coeffNames, TString &fullFormula, TString &formula, int termStart, int termEnd, Double_t xmin, Double_t xmax);  Helper functions for NSUM parsing. ;  ; template<class T > ; T EvalParTempl (const T *data, const Double_t *params=nullptr);  Eval for vectorized functions. ;  ; int TermCoeffLength (TString &term);  . Friends; template<class Func > ; struct ROOT::Internal::TF1Builder;  . #include <TF1.h>. Inheritance diagram for TF1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EAddToList. enum class T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1.html:48232,inherit,inherited,48232,doc/master/classTF1.html,https://root.cern,https://root.cern/doc/master/classTF1.html,1,['inherit'],['inherited']
Modifiability,"rmula); Handle Linear functions identified with ""@"" operator. void PreProcessFormula(TString& formula); -; *-* Preprocessing of formula; *-* Replace all ** by ^, and removes spaces.; *-* Handle also parametrized functions like polN,gaus,expo,landau; *-* and exponentiation.; *-* Similar functionality should be added here.; -. Bool_t PrepareFormula(TString& formula); prepare the formula to be executed; normally is called with fFormula. void ExtractFunctors(TString& formula); -; *-* Extracts functors from formula, and put them in fFuncs.; *-* Simple grammar:; *-* <function> := name(arg1,arg2...); *-* <variable> := name; *-* <parameter> := [number]; *-* <name> := String containing lower and upper letters, numbers, underscores; *-* <number> := Integer number; *-* Operators are omitted.; -. void ProcessFormula(TString& formula); -; *-* Iterates through funtors in fFuncs and performs the appropriate action.; *-* If functor has 0 arguments (has only name) can be:; *-* - variable; *-* * will be replaced with x[num], where x is an array containing value of this variable under num.; *-* - pre-defined formula; *-* * will be replaced with formulas body; *-* - constant; *-* * will be replaced with constant value; *-* - parameter; *-* * will be replaced with p[num], where p is an array containing value of this parameter under num.; *-* If has arguments it can be :; *-* - function shortcut, eg. sin; *-* * will be replaced with fullname of function, eg. sin -> TMath::Sin; *-* - function from cling environment, eg. TMath::BreitWigner(x,y,z); *-* * first check if function exists, and has same number of arguments, then accept it and set as found.; *-* If all functors after iteration are matched with corresponding action,; *-* it inputs C++ code of formula into cling, and sets flag that formula is ready to evaluate.; -. void SetPredefinedParamNames(). const TObject* GetLinearPart(Int_t i) const; Return linear part. void AddVariable(const TString& name, Double_t value = 0); -; *-* Adds v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFormula.html:13978,variab,variable,13978,root/html604/TFormula.html,https://root.cern,https://root.cern/root/html604/TFormula.html,4,['variab'],['variable']
Modifiability,"rmula. class TTreeFormula: public TFormula. TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; TFormLeafInfo; TFormLeafInfoDirect; TFormLeafInfoNumerical; TFormLeafInfoClones; TFormLeafInfoCollection; TFormLeafInfoPointer; TFormLeafInfoMethod; TFormLeafInfoMultiVarDim; TFormLeafInfoMultiVarDimDirect; TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. AddOffset(Int_t offset, TStreamerElement* element); GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; GetObjectAddress(TLeafElement* leaf) : Returns the the location of the object pointed to.; GetMultiplicity() : Returns info on the variability of the number of elements; GetNdata(TLeaf* leaf) : Returns the number of elements; GetNdata() : Used by GetNdata(TLeaf* leaf); GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; IsString(); ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; Update() : react to the possible loading of a shared library. Function Members (Methods); public:. TTreeFormula(); TTreeFormula(const char* name, const char* formula, TTree* tree); virtual~TTreeFormula(); voidTObject::AbstractMethod(const char* method) const; virtual voidTFormula::Analyze(const char* schain, Int_t& err, Int_t offset = 0); virtual Bool_tTFormula::AnalyzeFunction(TString& chaine, Int_t& err, Int_t offset = 0); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTFormula::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreeFormula.html:998,variab,variability,998,root/html528/TTreeFormula.html,https://root.cern,https://root.cern/root/html528/TTreeFormula.html,6,['variab'],['variability']
Modifiability,"rmula. class TTreeFormula: public TFormula. TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; TFormLeafInfo; TFormLeafInfoDirect; TFormLeafInfoNumerical; TFormLeafInfoClones; TFormLeafInfoCollection; TFormLeafInfoPointer; TFormLeafInfoMethod; TFormLeafInfoMultiVarDim; TFormLeafInfoMultiVarDimDirect; TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. AddOffset(Int_t offset, TStreamerElement* element); GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; GetObjectAddress(TLeafElement* leaf) : Returns the the location of the object pointed to.; GetMultiplicity() : Returns info on the variability of the number of elements; GetNdata(TLeaf* leaf) : Returns the number of elements; GetNdata() : Used by GetNdata(TLeaf* leaf); GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; IsString(); ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; Update() : react to the possible loading of a shared library. Function Members (Methods); public:. virtual~TTreeFormula(); voidTObject::AbstractMethod(const char* method) const; virtual voidTFormula::Analyze(const char* schain, Int_t& err, Int_t offset = 0); virtual Bool_tTFormula::AnalyzeFunction(TString& chaine, Int_t& err, Int_t offset = 0); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTFormula::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tTFormula::Compile(const char* expression = """"); virtual voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeFormula.html:1022,variab,variability,1022,root/html602/TTreeFormula.html,https://root.cern,https://root.cern/root/html602/TTreeFormula.html,2,['variab'],['variability']
Modifiability,"rmula.cxx. ◆ ~TFormula(). TFormula::~TFormula ; (; ). override . Definition at line 465 of file TFormula.cxx. ◆ TFormula() [2/4]. TFormula::TFormula ; (; const char * ; name, . const char * ; formula = """", . bool ; addToGlobList = true, . bool ; vectorize = false . ). Definition at line 482 of file TFormula.cxx. ◆ TFormula() [3/4]. TFormula::TFormula ; (; const char * ; name, . const char * ; formula, . int ; ndim, . int ; npar, . bool ; addToGlobList = true . ). Constructor from a full compile-able C++ expression. ; Definition at line 528 of file TFormula.cxx. ◆ TFormula() [4/4]. TFormula::TFormula ; (; const TFormula & ; formula). Definition at line 575 of file TFormula.cxx. Member Function Documentation. ◆ AddParameter(). void TFormula::AddParameter ; (; const TString & ; name, . Double_t ; value = 0 . ). inline . Definition at line 194 of file TFormula.h. ◆ AddVariable(). void TFormula::AddVariable ; (; const TString & ; name, . Double_t ; value = 0 . ). Adds variable to known variables, and reprocess formula. ; Definition at line 2569 of file TFormula.cxx. ◆ AddVariables(). void TFormula::AddVariables ; (; const TString * ; vars, . const Int_t ; size . ). Adds multiple variables. ; First argument is an array of pairs<TString,Double>, where first argument is name of variable, second argument represents value. size - number of variables passed in first argument ; Definition at line 2602 of file TFormula.cxx. ◆ Class(). static TClass * TFormula::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFormula::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFormula::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 289 of file TFormula.h. ◆ Clear(). void TFormula::Clear ; (; Option_t * ; option = """"). overridevirtual . Clear the formula setting expression to empty and reset the variables and parameters containers. ; Reimpleme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:30893,variab,variable,30893,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,2,['variab'],"['variable', 'variables']"
Modifiability,"rmula::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooAbsArg*getParameter(const char* name) const; RooAbsArg*getParameter(Int_t index) const; Double_tROOT::v5::TFormula::GetParameter(Int_t ipar) const; Double_tROOT::v5::TFormula::GetParameter(const char* name) const; virtual Double_t*ROOT::v5::TFormula::GetParameters() const; virtual voidROOT::v5::TFormula::GetParameters(Double_t* params); virtual const char*ROOT::v5::TFormula::GetParName(Int_t ipar) const; virtual Int_tROOT::v5::TFormula::GetParNumber(const char* name) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tROOT::v5::TFormula::IsLinear() const; virtual Bool_tROOT::v5::TFormula::IsNormalized() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tok(); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooFormula.html:4773,Inherit,InheritsFrom,4773,root/html604/RooFormula.html,https://root.cern,https://root.cern/root/html604/RooFormula.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rmula;  TFormula ();  Formula default constructor. ;  ;  TFormula (const char *name, const char *formula);  Normal Formula constructor. ;  ;  TFormula (const TFormula &formula);  Default constructor. ;  ;  ~TFormula () override;  Formula default destructor. ;  ; virtual void Analyze (const char *schain, Int_t &err, Int_t offset=0);  Analyze a sub-expression in one formula. ;  ; virtual Bool_t AnalyzeFunction (TString &chaine, Int_t &err, Int_t offset=0);  Check if the chain as function call. ;  ; void Clear (Option_t *option="""") override;  Resets the objects. ;  ; virtual Int_t Compile (const char *expression="""");  Compile expression already stored in fTitle. ;  ; void Copy (TObject &formula) const override;  Copy this formula. ;  ; virtual char * DefinedString (Int_t code);  Return address of string corresponding to special code. ;  ; virtual Double_t DefinedValue (Int_t code);  Return value corresponding to special code. ;  ; virtual Int_t DefinedVariable (TString &variable, Int_t &action);  Check if expression is in the list of defined variables. ;  ; virtual Double_t Eval (Double_t x, Double_t y=0, Double_t z=0, Double_t t=0) const;  Evaluate this formula. ;  ; virtual Double_t EvalPar (const Double_t *x, const Double_t *params=nullptr);  ; virtual Double_t EvalParOld (const Double_t *x, const Double_t *params=nullptr);  Evaluate this formula. ;  ; virtual TString GetExpFormula (Option_t *option="""") const;  Reconstruct the formula expression from the internal TFormula member variables. ;  ; virtual const TObject * GetLinearPart (Int_t i);  Return linear part. ;  ; virtual Int_t GetNdim () const;  ; virtual Int_t GetNpar () const;  ; virtual Int_t GetNumber () const;  ; Double_t GetParameter (const char *name) const;  Return value of parameter named parName. ;  ; Double_t GetParameter (Int_t ipar) const;  Return value of parameter number ipar. ;  ; virtual Double_t * GetParameters () const;  ; virtual void GetParameters (Double_t *params);  ; virtual const char * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1v5_1_1TF1Data.html:1852,variab,variable,1852,doc/master/structROOT_1_1v5_1_1TF1Data.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1v5_1_1TF1Data.html,2,['variab'],"['variable', 'variables']"
Modifiability,rmulaExpression(). std::string RooLegacyExpPoly::getFormulaExpression ; (; bool ; expand); const. Definition at line 299 of file RooLegacyExpPoly.cxx. ◆ getLogVal(). double RooLegacyExpPoly::getLogVal ; (; const RooArgSet * ; set); const. overridevirtual . Return the log of the current value with given normalization An error message is printed if the argument of the log is negative. ; Reimplemented from RooAbsPdf.; Definition at line 191 of file RooLegacyExpPoly.cxx. ◆ IsA(). TClass * RooLegacyExpPoly::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 57 of file RooLegacyExpPoly.h. ◆ lowestOrder(). int RooLegacyExpPoly::lowestOrder ; (; ); const. inline . Return the order for the first coefficient in the list. ; Definition at line 33 of file RooLegacyExpPoly.h. ◆ Streamer(). void RooLegacyExpPoly::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooLegacyExpPoly::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 57 of file RooLegacyExpPoly.h. ◆ x(). RooAbsReal const & RooLegacyExpPoly::x ; (; ); const. inline . Get the x variable. ; Definition at line 27 of file RooLegacyExpPoly.h. Member Data Documentation. ◆ _coefList. RooListProxy RooLegacyExpPoly::_coefList. protected . Definition at line 46 of file RooLegacyExpPoly.h. ◆ _lowestOrder. int RooLegacyExpPoly::_lowestOrder. protected . Definition at line 47 of file RooLegacyExpPoly.h. ◆ _x. RooRealProxy RooLegacyExpPoly::_x. protected . Definition at line 45 of file RooLegacyExpPoly.h. Libraries for RooLegacyExpPoly:. [legend]; The documentation for this class was generated from the following files:; roofit/roofit/inc/RooLegacyExpPoly.h; roofit/roofit/src/RooLegacyExpPoly.cxx. RooLegacyExpPoly. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:58 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLegacyExpPoly.html:79973,variab,variable,79973,doc/master/classRooLegacyExpPoly.html,https://root.cern,https://root.cern/doc/master/classRooLegacyExpPoly.html,1,['variab'],['variable']
Modifiability,"rmulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; Note that x[i] is an expression reserved for TFormula. All variable references are automatically converted to the TFormula-native format. If a variable with the name x is given, the RooFormula interprets x[i] as a list position, but x without brackets as the name of a RooFit object.; The last two versions, while slightly less readable, are more versatile because the names of the arguments are not hard coded. ; Definition at line 25 of file RooGenericPdf.h. Public Member Functions;  RooGenericPdf ();  ;  RooGenericPdf (const char *name, const char *title, const char *formula, const RooArgList &dependents);  Constructor with a name, title, formula expression and a list of variables. ;  ;  RooGenericPdf (const char *name, const char *title, const RooArgList &dependents);  Constructor with formula expression and list of input variables. ;  ;  RooGenericPdf (const RooGenericPdf &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooGenericPdf () override;  ; TObject * clone (const char *newname) const override;  ; const RooArgList & dependents () const;  ; void dumpFormula ();  ; const char * expression () const;  ; RooAbsArg * getParameter (const char *name) const;  Return pointer to parameter with given name. ;  ; RooAbsArg * getParameter (Int_t index) const;  Return pointer to parameter at given index. ;  ; TClass * IsA () const override;  ; size_t nParameters () const;  Return the number of parameters. ;  ; void printMetaArgs (std::ostream &os) const override;  Add formula expression as meta argument in printing interface. ;  ; void printMul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenericPdf.html:2118,variab,variables,2118,doc/master/classRooGenericPdf.html,https://root.cern,https://root.cern/doc/master/classRooGenericPdf.html,1,['variab'],['variables']
Modifiability,"rmulaVar::RooFormulaVar ; (; ). Definition at line 65 of file RooFormulaVar.cxx. ◆ ~RooFormulaVar(). RooFormulaVar::~RooFormulaVar ; (; ). override . Definition at line 67 of file RooFormulaVar.cxx. ◆ RooFormulaVar() [2/4]. RooFormulaVar::RooFormulaVar ; (; const char * ; name, . const char * ; title, . const char * ; inFormula, . const RooArgList & ; dependents, . bool ; checkVariables = true . ). Constructor with formula expression and list of input variables. ; Parameters. [in]nameName of the formula. ; [in]titleTitle of the formula. ; [in]inFormulaExpression to be evaluated. ; [in]dependentsVariables that should be passed to the formula. ; [in]checkVariablesCheck that all variables from dependents are used in the expression. . Definition at line 79 of file RooFormulaVar.cxx. ◆ RooFormulaVar() [3/4]. RooFormulaVar::RooFormulaVar ; (; const char * ; name, . const char * ; title, . const RooArgList & ; dependents, . bool ; checkVariables = true . ). Constructor with formula expression, title and list of input variables. ; Parameters. [in]nameName of the formula. ; [in]titleFormula expression. Will also be used as the title. ; [in]dependentsVariables that should be passed to the formula. ; [in]checkVariablesCheck that all variables from dependents are used in the expression. . Definition at line 102 of file RooFormulaVar.cxx. ◆ RooFormulaVar() [4/4]. RooFormulaVar::RooFormulaVar ; (; const RooFormulaVar & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 122 of file RooFormulaVar.cxx. Member Function Documentation. ◆ binBoundaries(). std::list< double > * RooFormulaVar::binBoundaries ; (; RooAbsRealLValue & ; obs, . double ; xlo, . double ; xhi . ); const. overridevirtual . Forward the plot sampling hint from the p.d.f. that defines the observable obs. ; Reimplemented from RooAbsReal.; Definition at line 237 of file RooFormulaVar.cxx. ◆ Class(). static TClass * RooFormulaVar::Class ; (; ). static . ReturnsTClass describing this cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFormulaVar.html:63667,variab,variables,63667,doc/master/classRooFormulaVar.html,https://root.cern,https://root.cern/doc/master/classRooFormulaVar.html,1,['variab'],['variables']
Modifiability,"rm{Fit range}} \mathrm{model}(x) \; \mathrm{d}x }{; // \int_{\mathrm{Full range}} \mathrm{model}(x) \; \mathrm{d}x }.; // \f]; // `N` will therefore return the count extrapolated to the full range instead of the fit range.; //; // **Note**: When using a RooAddPdf for extending the likelihood, the same effect can be achieved with; // [RooAddPdf::fixCoefRange()](https://root.cern/doc/master/classRooAddPdf.html#ab631caf4b59e4c4221f8967aecbf2a65),; ; RooRealVar N(""N"", ""Extended term"", 0, 20000);; RooExtendPdf extmodel(""extmodel"", ""Extended model"", model, N, ""FULL"");; ; ; // It can be instructive to fit the above model to either the LEFT or RIGHT range. `N` should approximately converge to the expected number; // of events in the full range. One may try to leave out `""FULL""` in the constructor, or the interpretation of `N` changes.; extmodel.fitTo(*data, Range(""LEFT""), PrintLevel(-1));; N.Print();; ; ; // If we now do a simultaneous fit to the extended model, instead of the original model, the LEFT and RIGHT range will each correct their local; // `N` such that it refers to the `FULL` range.; //; // This joint fit of the extmodel will include (w.r.t. the plain model fit) a product of extended terms; // \f[; // L_\mathrm{ext} = L; // \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{LEFT} | N_\mathrm{exp} / \mathrm{frac LEFT} \right); // \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); // \f]; ; ; TCanvas* c = new TCanvas(""c"", ""c"", 2100, 700);; c->Divide(3);; c->cd(1);; ; std::unique_ptr<RooFitResult> r{model.fitTo(*data, Range(""LEFT,RIGHT""), PrintLevel(-1), Save())};; r->Print();; ; RooPlot* frame = x.frame();; data->plotOn(frame);; model.plotOn(frame, VisualizeError(*r));; model.plotOn(frame);; model.paramOn(frame, Label(""Non-extended fit""));; frame->Draw();; ; c->cd(2);; ; std::unique_ptr<RooFitResult> r2{extmodel.fitTo(*data, Range(""LEFT,RIGHT""), PrintLevel(-1), Save())};; r2->Print();; RooPlot* frame2 = x.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:4363,extend,extended,4363,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,1,['extend'],['extended']
Modifiability,"rn a TSQLResult object containing entries following selection. ;  ; virtual Long64_t ReadFile (const char *filename, const char *branchDescriptor="""", char delimiter=' ');  Create or simply read branches from filename. ;  ; virtual Long64_t ReadStream (std::istream &inputStream, const char *branchDescriptor="""", char delimiter=' ');  Create or simply read branches from an input stream. ;  ; void RecursiveRemove (TObject *obj) override;  Make sure that obj (which is being deleted or will soon be) is no longer referenced by this TTree. ;  ; virtual void Refresh ();  Refresh contents of this tree and its branches from the current status on disk. ;  ; virtual void RegisterExternalFriend (TFriendElement *);  Record a TFriendElement that we need to warn when the chain switches to a new file (typically this is because this chain is a friend of another TChain) ;  ; virtual void RemoveExternalFriend (TFriendElement *);  Removes external friend. ;  ; virtual bool SetAlias (const char *aliasName, const char *aliasFormula);  Set a tree variable alias. ;  ; virtual void SetAutoFlush (Long64_t autof=-30000000);  This function may be called at the start of a program to change the default value for fAutoFlush. ;  ; virtual void SetAutoSave (Long64_t autos=-300000000);  In case of a program crash, it will be possible to recover the data in the tree up to the last AutoSave point. ;  ; virtual void SetBasketSize (const char *bname, Int_t buffsize=16000);  Set a branch's basket size. ;  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T **add, TBranch **ptr=nullptr);  ; template<class T > ; Int_t SetBranchAddress (const char *bname, T *add, TBranch **ptr=nullptr);  ; virtual Int_t SetCacheEntryRange (Long64_t first, Long64_t last);  interface to TTreeCache to set the cache entry range ;  ; virtual void SetCacheLearnEntries (Int_t n=10);  Interface to TTreeCache to set the number of entries for the learning phase. ;  ; virtual void SetChainOffset (Long64_t offset=0);  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:24940,variab,variable,24940,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,3,['variab'],['variable']
Modifiability,"rn current index. ;  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex (Int_t index);  ; void SetNext (Int_t index);  Set index of next division. ;  ; void SetRange (Double_t start, Double_t step, Int_t ndivisions);  Set division range. Use this method only when dividing an assembly. ;  ; void SetSpacedOut (Bool_t flag);  ; void SetVolume (TGeoVolume *vol);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternCylPhi.html:3384,inherit,inherited,3384,doc/master/classTGeoPatternCylPhi.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html,2,['inherit'],['inherited']
Modifiability,"rn destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; Long64_t DavixPReadBuffer (Davix_fd *fd, char *buf, Long64_t pos, Int_t len);  ; Long64_t DavixReadBuffer (Davix_fd *fd, char *buf, Int_t len);  ; Long64_t DavixReadBuffers (Davix_fd *fd, char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  ; Int_t DavixStat (struct stat *st) const;  ; Long64_t DavixWriteBuffer (Davix_fd *fd, const char *buf, Int_t len);  ; Double_t eventStart ();  ; void eventStop (Double_t t, Long64_t len, bool read=true);  set TFile state info ;  ; void Init (Bool_t init);  Initialize a TFile object. ;  . Private Attributes; TDavixFileInternal * d_ptr;  . Additional Inherited Members;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kClos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDavixFile.html:29941,inherit,inherited,29941,doc/master/classTDavixFile.html,https://root.cern,https://root.cern/doc/master/classTDavixFile.html,1,['inherit'],['inherited']
Modifiability,"rn destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; MsgLogger & Log () const;  ; TString SecToText (Double_t, Bool_t) const;  pretty string output ;  . Private Attributes; Bool_t fColourfulOutput;  flag for use of colors ;  ; MsgLogger * fLogger;  ! the output logger ;  ; Int_t fNcounts;  reference number of ""counts"" ;  ; Bool_t fOutputToFile;  ; TString fPrefix;  prefix for outputs ;  ; Int_t fPreviousProgress;  ; TString fPreviousTimeEstimate;  ; Int_t fProgressBarStringLength;  . Static Private Attributes; static const TString fgClassName = ""Timer"";  used for output ;  ; static const Int_t fgNbins = 16;  number of bins in progress bar ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/Timer.h>. Inheritance diagram for TMVA::Timer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Timer.html:12568,inherit,inherited,12568,doc/master/classTMVA_1_1Timer.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Timer.html,1,['inherit'],['inherited']
Modifiability,"rn destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoTessellated (const TGeoTessellated &)=delete;  Temporary map used to deduplicate vertices. ;  ; TGeoTessellated & operator= (const TGeoTessellated &)=delete;  . Private Attributes; bool fClosedBody = false;  Shape fully defined. ;  ; bool fDefined = false;  ; std::vector< TGeoFacet > fFacets;  ; int fNfacets = 0;  ; int fNseg = 0;  ; int fNvert = 0;  ; std::vector< Vertex_t > fVertices;  ; std::multimap< long, int > fVerticesMap;  . Additional Inherited Members;  Public Attributes inherited from TGeoBBox; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoSha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTessellated.html:22952,inherit,inherited,22952,doc/master/classTGeoTessellated.html,https://root.cern,https://root.cern/doc/master/classTGeoTessellated.html,3,['inherit'],['inherited']
Modifiability,"rn destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Float_t fMaximum;  Maximum value if leaf range is specified. ;  ; Float_t fMinimum;  Minimum value if leaf range is specified. ;  ; Float_t ** fPointer;  ! Address of pointer to data buffer! ;  ; Float_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do not own the branch) ;  ; bool fIsRange;  (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TLeaf; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExternal; , kInPlace; , ;   kZeroCopy. };  ; enum  EStatusBits { kIndirectAddress = (1ULL << ( 11 )); , kNewValue = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 ))",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafF.html:14503,variab,variable,14503,doc/master/classTLeafF.html,https://root.cern,https://root.cern/doc/master/classTLeafF.html,1,['variab'],['variable']
Modifiability,"rn destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMatrixTLazy (const TMatrixTLazy< Element > &);  ; void operator= (const TMatrixTLazy< Element > &);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fColLwb;  ; Int_t fColUpb;  ; Int_t fRowLwb;  ; Int_t fRowUpb;  . Private Member Functions; virtual void FillIn (TMatrixT< Element > &m) const =0;  . Friends; class TMatrixT< Element >;  ; class TMatrixTBase< Element >;  ; class TVectorT< Element >;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMatrixTLazy.h>. Inheritance diagram for TMatrixTLazy< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMatrixTLazy() [1/4]. template<class Element > . TMatrixTLazy< Element >::TMatrixTLazy ; (; const TMatrixTLazy< Element > & ; ). inlinep",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTLazy.html:10322,inherit,inherited,10322,doc/master/classTMatrixTLazy.html,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html,1,['inherit'],['inherited']
Modifiability,"rn destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttImage; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; EImageFileTypes GetFileType (const char *ext);  Return file type depending on specified extension. ;  ; void MapFileTypes (EImageFileTypes &type, UInt_t &astype, Bool_t toas=kTRUE);  Map file type to/from AfterImage types. ;  ; void MapQuality (EImageQuality &quality, UInt_t &asquality, Bool_t toas=kTRUE);  Map quality to/from AfterImage quality. ;  ;  Protected Member Functions inherited from TImage;  TImage ();  ;  TImage (const char *file);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t InitVisual ();  Static function to initialize the ASVisual. ;  . Protected Attributes; Bool_t fEditable;  ! kTRUE image can be resized, moved by resizing/moving gPad ;  ; ASImage * fGrayImage;  ! gray image ;  ; ASImage * fImage;  ! pointer to image structure of original image ;  ; Bool_t fIsGray;  ! kTRUE if image is gray ;  ; Double_t fMaxValue;  ! max value in image ;  ; Double_t fMinValue;  ! min value in image ;  ; Int_t fPaintMode;  ! 1 - fast mode, 0 - low memory slow mode ;  ; TASImage * fScaledImage;  ! temporary scaled and zoomed image produced from original image ;  ; UInt_t fZoomHeight;  ! hight of zoomed image in image pixels ;  ; UInt_t fZoomOffX;  ! X - offset for zooming in image pixels ;  ; UInt_t fZoomOffY;  ! Y - offset for zooming im image pixels ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASImage.html:26796,inherit,inherited,26796,doc/master/classTASImage.html,https://root.cern,https://root.cern/doc/master/classTASImage.html,2,['inherit'],['inherited']
Modifiability,"rn fCreated; }. Bool_t IsNormalised() const; { return fNormalise; }. void ToggleInputSortOrder(Bool_t sortOrder); { fSortGet = sortOrder; }. void SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); { fDsiOutput = outputDsi; }. void SetUseSignalTransform(Bool_t e = kTRUE); { fUseSignalTransform = e; }. Bool_t UseSignalTransform() const; { return fUseSignalTransform; }. const char* GetName() const; { return fTransformName.Data(); }. TString GetShortName() const; { TString a(fTransformName); a.ReplaceAll(""Transform"",""""); return a; }. void WriteTransformationToStream(ostream& o) const. void ReadTransformationFromStream(istream& istr, const TString& classname = """"). Types::EVariableTransform GetVariableTransform() const; { return fVariableTransform; }. void PrintTransformation(ostream& ); {}. const std::vector<TMVA::VariableInfo>& Variables() const; { return fVariables; }. const std::vector<TMVA::VariableInfo>& Targets() const; { return fTargets; }. const std::vector<TMVA::VariableInfo>& Spectators() const; { return fSpectators; }. void SetTMVAVersion(TMVA::TMVAVersion_t v); { fTMVAVersion = v; }. void SetCreated(Bool_t c = kTRUE); { fCreated = c; }. void SetNVariables(UInt_t i); { fNVars = i; }. void SetName(const TString& c); { fTransformName = c; }. UInt_t GetNVariables() const; { return fDsi.GetNVariables(); }. UInt_t GetNTargets() const; { return fDsi.GetNTargets(); }. UInt_t GetNSpectators() const; { return fDsi.GetNSpectators(); }. std::vector<TMVA::VariableInfo>& Variables(); { return fVariables; }. std::vector<TMVA::VariableInfo>& Targets(); { return fTargets; }. std::vector<TMVA::VariableInfo>& Spectators(); { return fSpectators; }. Int_t GetNClasses() const; { return fDsi.GetNClasses(); }. » Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableTransformBase.html:11966,Variab,VariableInfo,11966,root/html534/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableTransformBase.html,1,['Variab'],['VariableInfo']
Modifiability,"rn fCreated; }. Bool_t IsNormalised() const; { return fNormalise; }. void ToggleInputSortOrder(Bool_t sortOrder); { fSortGet = sortOrder; }. void SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); { fDsiOutput = outputDsi; }. void SetUseSignalTransform(Bool_t e = kTRUE); { fUseSignalTransform = e; }. Bool_t UseSignalTransform() const; { return fUseSignalTransform; }. const char* GetName() const; { return fTransformName.Data(); }. TString GetShortName() const; { TString a(fTransformName); a.ReplaceAll(""Transform"",""""); return a; }. void WriteTransformationToStream(ostream& o) const. void ReadTransformationFromStream(istream& istr, const TString& classname = """"). Types::EVariableTransform GetVariableTransform() const; { return fVariableTransform; }. void PrintTransformation(ostream& ); {}. const std::vector<TMVA::VariableInfo>& Variables() const; { return fVariables; }. const std::vector<TMVA::VariableInfo>& Targets() const; { return fTargets; }. const std::vector<TMVA::VariableInfo>& Spectators() const; { return fSpectators; }. void SetTMVAVersion(TMVA::TMVAVersion_t v); { fTMVAVersion = v; }. void SetCreated(Bool_t c = kTRUE); { fCreated = c; }. void SetNVariables(UInt_t i); { fNVars = i; }. void SetName(const TString& c); { fTransformName = c; }. UInt_t GetNVariables() const; { return fDsi.GetNVariables(); }. UInt_t GetNTargets() const; { return fDsi.GetNTargets(); }. UInt_t GetNSpectators() const; { return fDsi.GetNSpectators(); }. std::vector<TMVA::VariableInfo>& Variables(); { return fVariables; }. std::vector<TMVA::VariableInfo>& Targets(); { return fTargets; }. std::vector<TMVA::VariableInfo>& Spectators(); { return fSpectators; }. Int_t GetNClasses() const; { return fDsi.GetNClasses(); }. » Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__VariableTransformBase.html:12802,Variab,VariableInfo,12802,root/html604/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html604/TMVA__VariableTransformBase.html,1,['Variab'],['VariableInfo']
Modifiability,"rn fCreated; }. Bool_t IsNormalised() const; { return fNormalise; }. void ToggleInputSortOrder(Bool_t sortOrder); { fSortGet = sortOrder; }. void SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); { fDsiOutput = outputDsi; }. void SetUseSignalTransform(Bool_t e = kTRUE); { fUseSignalTransform = e; }. Bool_t UseSignalTransform() const; { return fUseSignalTransform; }. const char* GetName() const; { return fTransformName.Data(); }. TString GetShortName() const; { TString a(fTransformName); a.ReplaceAll(""Transform"",""""); return a; }. void WriteTransformationToStream(ostream& o) const. void ReadTransformationFromStream(istream& istr, const TString& classname = """"). Types::EVariableTransform GetVariableTransform() const; { return fVariableTransform; }. void PrintTransformation(ostream& ); {}. const std::vector<TMVA::VariableInfo>& Variables() const; { return fVariables; }. const std::vector<TMVA::VariableInfo>& Targets() const; { return fTargets; }. const std::vector<TMVA::VariableInfo>& Spectators() const; { return fSpectators; }. void SetTMVAVersion(TMVA::TMVAVersion_t v); { fTMVAVersion = v; }. void SetCreated(Bool_t c = kTRUE); { fCreated = c; }. void SetNVariables(UInt_t i); { fNVars = i; }. void SetName(const TString& c); { fTransformName = c; }. UInt_t GetNVariables() const; { return fDsi.GetNVariables(); }. UInt_t GetNTargets() const; { return fDsi.GetNTargets(); }. UInt_t GetNSpectators() const; { return fDsi.GetNSpectators(); }. std::vector<TMVA::VariableInfo>& Variables(); { return fVariables; }. std::vector<TMVA::VariableInfo>& Targets(); { return fTargets; }. std::vector<TMVA::VariableInfo>& Spectators(); { return fSpectators; }. Int_t GetNClasses() const; { return fDsi.GetNClasses(); }. » Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableTransformBase.html:12794,Variab,VariableInfo,12794,root/html602/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableTransformBase.html,1,['Variab'],['VariableInfo']
Modifiability,"rn fCreated; }. Bool_t IsNormalised() const; { return fNormalise; }. void ToggleInputSortOrder(Bool_t sortOrder); { fSortGet = sortOrder; }. void SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); { fDsiOutput = outputDsi; }. void SetUseSignalTransform(Bool_t e = kTRUE); { fUseSignalTransform = e; }. Bool_t UseSignalTransform() const; { return fUseSignalTransform; }. const char* GetName() const; { return fTransformName.Data(); }. TString GetShortName() const; { TString a(fTransformName); a.ReplaceAll(""Transform"",""""); return a; }. void WriteTransformationToStream(ostream& o) const. void ReadTransformationFromStream(istream& istr, const TString& classname = """"). Types::EVariableTransform GetVariableTransform() const; { return fVariableTransform; }. void PrintTransformation(ostream& ); {}. const std::vector<TMVA::VariableInfo>& Variables() const; { return fVariables; }. const std::vector<TMVA::VariableInfo>& Targets() const; { return fTargets; }. const std::vector<TMVA::VariableInfo>& Spectators() const; { return fSpectators; }. void SetTMVAVersion(TMVA::TMVAVersion_t v); { fTMVAVersion = v; }. void SetCreated(Bool_t c = kTRUE); { fCreated = c; }. void SetNVariables(UInt_t i); { fNVars = i; }. void SetName(const TString& c); { fTransformName = c; }. UInt_t GetNVariables() const; { return fDsi.GetNVariables(); }. UInt_t GetNTargets() const; { return fDsi.GetNTargets(); }. UInt_t GetNSpectators() const; { return fDsi.GetNSpectators(); }. std::vector<TMVA::VariableInfo>& Variables(); { return fVariables; }. std::vector<TMVA::VariableInfo>& Targets(); { return fTargets; }. std::vector<TMVA::VariableInfo>& Spectators(); { return fSpectators; }. Int_t GetNClasses() const; { return fDsi.GetNClasses(); }. » Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: VariableTransformBase.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-12-02 14:28; This page has been automatically generated. For com",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableTransformBase.html:11923,Variab,VariableInfo,11923,root/html532/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableTransformBase.html,1,['Variab'],['VariableInfo']
Modifiability,"rn false if Minos failed A minimizaiton must be performed befre, return false if no minimization has been done In case of Minos failed the status error is updated as following status += 10 * minosStatus. ; The Minos status of last Minos run can also be retrieved by calling MinosStatus() ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 852 of file Minuit2Minimizer.cxx. ◆ GetVariableSettings(). bool ROOT::Minuit2::Minuit2Minimizer::GetVariableSettings ; (; unsigned int ; ivar, . ROOT::Fit::ParameterSettings & ; varObj . ); const. overridevirtual . get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 367 of file Minuit2Minimizer.cxx. ◆ GlobalCC(). double ROOT::Minuit2::Minuit2Minimizer::GlobalCC ; (; unsigned int ; i); const. overridevirtual . get global correlation coefficient for the variable i. ; This is a number between zero and one which gives the correlation between the i-th variable and that linear combination of all other variables which is most strongly correlated with i. If the variable is fixed or const the return value is zero ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 835 of file Minuit2Minimizer.cxx. ◆ Hesse(). bool ROOT::Minuit2::Minuit2Minimizer::Hesse ; (; ). overridevirtual . perform a full calculation of the Hessian matrix for error calculation If a valid minimum exists the calculation is done on the minimum point otherwise is performed in the current set values of parameters Status code of minimizer is updated according to the following convention (in case Hesse failed) status += 100*hesseStatus where hesse status is: status = 1 : hesse failed status = 2 : matrix inversion failed status = 3 : matrix is not pos defined ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 1204 of file Minuit2Minimizer.cxx. ◆ IsFixedVariable(). bool ROOT::Minuit2::Minuit2Minimizer::IsFixedVariable ; (; unsigned int ; ivar); const. overrid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:18773,variab,variable,18773,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,2,['variab'],"['variable', 'variables']"
Modifiability,"rn number of array dimensions. ;  ; virtual DeclId_t GetDeclId () const;  ; virtual Int_t GetMaxIndex (Int_t dim) const;  Return maximum index for array dimension ""dim"". ;  ; TClass * IsA () const override;  ; virtual Bool_t IsValid ();  Return true if this global object is pointing to a currently loaded global. ;  ; TGlobal & operator= (const TGlobal &);  Assignment operator. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool Update (DataMemberInfo_t *info);  Update the TFunction to reflect the new info. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TDictionary & operator= (const TDictionary &other);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnumConstant.html:2243,inherit,inherited,2243,doc/master/classTEnumConstant.html,https://root.cern,https://root.cern/doc/master/classTEnumConstant.html,2,['inherit'],['inherited']
Modifiability,"rn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecCmdEvent:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRecCmdEvent(). TRecCmdEvent::TRecCmdEvent ; (; ). inline . Definition at line 97 of file TRecorder.h. Member Function Documentation. ◆ Class(). static TClass * TRecCmdEvent::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecCmdEvent::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRecCmdEvent::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 122 of file TRecorder.h. ◆ DeclFileName(). static const char * TRecCmdEvent::DeclFileName ; (; ). inlinestatic . ReturnsName of the fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRecCmdEvent.html:10458,inherit,inherited,10458,doc/master/classTRecCmdEvent.html,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html,2,['inherit'],['inherited']
Modifiability,"rn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TString fText;  . Additional Inherited Members;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRecorder.h>. Inheritance diagram for TRecExtraEvent:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRecExtraEvent(). TRecExtraEvent::TRecExtraEvent ; (; ). inline . Definition at line 142 of file TRecorder.h. Member Function Documentation. ◆ Class(). static TClass * TRecExtraEvent::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRecExtraEvent::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRecExtraEvent::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 167 of file TRecorder.h. ◆ DeclFileName(). static const char * TRecExtraEvent::DeclFileName ; (; ). inlinestatic . Retu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRecExtraEvent.html:10347,inherit,inherited,10347,doc/master/classTRecExtraEvent.html,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html,2,['inherit'],['inherited']
Modifiability,"rn the asymmetric errors on the current weight. ; See alsoweightError(ErrorType) const for symmetric error. ; Parameters. [out]loLow error. ; [out]hiHigh error. ; [in]etypeType of error to compute. May throw if not supported. Supported errors are; Poisson Default. Asymmetric Poisson errors (68% CL).; SumW2 The square root of the sum of weights. (Symmetric).; None Return zero. . Reimplemented from RooAbsData.; Definition at line 1570 of file RooDataHist.cxx. ◆ weightError() [2/2]. double RooDataHist::weightError ; (; ErrorType ; etype = Poisson); const. inlineoverridevirtual . Return the symmetric error on the current weight. ; See also weightError(double&,double&,ErrorType) const for asymmetric errors. ; Reimplemented from RooAbsData.; Definition at line 125 of file RooDataHist.h. ◆ weightFast(). double RooDataHist::weightFast ; (; const RooArgSet & ; bin, . int ; intOrder, . bool ; correctForBinSize, . bool ; cdfBoundaries . ). A faster version of RooDataHist::weight that assumes the passed arguments are aligned with the histogram variables. ; Parameters. [in]binCoordinates for which the weight should be calculated. Has to be aligned with the internal histogram variables. ; [in]intOrderInterpolation order, i.e. how many neighbouring bins are used for the interpolation. If zero, the bare weight for the bin enclosing the coordinatesis returned. ; [in]correctForBinSizeEnable the inverse bin volume correction factor. ; [in]cdfBoundariesEnable the special boundary condition for a cdf: underflow bins are assumed to have weight zero and overflow bins have weight one. Otherwise, the histogram is mirrored at the boundaries for the interpolation. . Definition at line 1399 of file RooDataHist.cxx. ◆ weightInterpolated(). double RooDataHist::weightInterpolated ; (; const RooArgSet & ; bin, . int ; intOrder, . bool ; correctForBinSize, . bool ; cdfBoundaries . ). private . Return the weight at given coordinates with interpolation. ; Parameters. [in]binCoordinates for which the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataHist.html:83011,variab,variables,83011,doc/master/classRooDataHist.html,https://root.cern,https://root.cern/doc/master/classRooDataHist.html,1,['variab'],['variables']
Modifiability,"rn the size in bytes of the file header. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsiz=0) const override;  One can not save a const TDirectory object. ;  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsiz=0) override;  Write memory objects to this file. ;  ; virtual void WriteFree ();  Write FREE linked list on the file. ;  ; virtual void WriteHeader ();  Write File Header. ;  ; virtual UShort_t WriteProcessID (TProcessID *pid);  Check if the ProcessID pidd is already in the file, if not, add it and return the index number in the local file list. ;  ; virtual void WriteStreamerInfo ();  Write the list of TStreamerInfo as a single object in this file The class Streamer description for all classes written to this file is saved. ;  ;  Public Member Functions inherited from TDirectoryFile;  TDirectoryFile ();  Default TDirectoryFile constructor. ;  ;  TDirectoryFile (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new TDirectoryFile. ;  ;  ~TDirectoryFile () override;  Destructor. ;  ; void Add (TObject *obj, Bool_t replace=kFALSE) override;  ; void Append (TObject *obj, Bool_t replace=kFALSE) override;  Append object to this directory. ;  ; Int_t AppendKey (TKey *key) override;  Insert key in the linked list of keys of this directory. ;  ; void Browse (TBrowser *b) override;  Browse the content of the directory. ;  ; void Build (TFile *motherFile=nullptr, TDirectory *motherDir=nullptr) override;  ; Bool_t cd () override;  Change current directory to ""this"" directory. ;  ; Bool_t cd (const char *path) override;  Change current directory the directory described by the path if given one. ;  ; TObject * CloneObject (const TObject *obj, Bool_t autoadd=kTRUE) override;  Make a clone of an object using the Streamer facilit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetFile.html:10010,inherit,inherited,10010,doc/master/classTNetFile.html,https://root.cern,https://root.cern/doc/master/classTNetFile.html,2,['inherit'],['inherited']
Modifiability,"rn the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TQCommand * fCurrent;  ; TObjLink * fCursor;  ; UInt_t fLimit;  ; TList * fLogBook;  ; Bool_t fLogging;  ;  Protected Attributes inherited from TQCommand; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL <<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQUndoManager.html:25286,inherit,inherited,25286,doc/master/classTQUndoManager.html,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html,5,['inherit'],['inherited']
Modifiability,"rn true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetPortParam (Int_t lower=-1, Int_t upper=-1, Int_t attempts=-1);  Set port parameters for tunnelling. A value of -1 means unchanged. ;  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationRemote.html:16021,inherit,inherited,16021,doc/master/classTApplicationRemote.html,https://root.cern,https://root.cern/doc/master/classTApplicationRemote.html,1,['inherit'],['inherited']
Modifiability,"rn-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. Bool_tfAutomaticuse user given prune strength or automatically determined one using a validation sample ; Double_tfDeltaPruneStrengthstep size in pruning, is adjusted according to experience of previous trees ; Double_tfErrorFractionntuple var: misclassification error fraction ; vector<Event*>fEventSamplethe training events; UInt_tfMaxDepthmax depth; Int_tfMinNodeEventsmin number of events in node; Float_tfMinNodeSizemin percentage of training events in node; TStringfMinNodeSizeSstring containing min percentage of training events in node; Int_tfNCutsgrid used in cut applied in node splitting; Double_tfNodePurityLimitpurity limit for sig/bkg nodes; Bool_tfPruneBeforeBoostaincient variable, only needed for ""CompatibilityOptions"" ; TMVA::DecisionTree::EPruneMethodfPruneMethodmethod used for prunig ; TStringfPruneMethodSprune method option String; Double_tfPruneStrengtha parameter to set the ""amount"" of pruning..needs to be adjusted; Bool_tfRandomisedTreeschoose a random subset of possible cut variables at each node during training; TMVA::SeparationBase*fSepTypethe separation used in node splitting; TStringfSepTypeSthe separation (option string) used in node splitting; TMVA::DecisionTree*fTreethe decision tree; Int_tfUseNvarsthe number of variables used in the randomised tree splitting; Bool_tfUsePoissonNvarsfUseNvars is used as a poisson mean, and the actual value of useNvars is at each step drawn form that distribution; Bool_tfUseYesNoLea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodDT.html:19930,variab,variable,19930,root/html534/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodDT.html,2,['variab'],['variable']
Modifiability,"rn-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. Bool_tfAutomaticuse user given prune strength or automatically determined one using a validation sample; Double_tfDeltaPruneStrengthstep size in pruning, is adjusted according to experience of previous trees; Double_tfErrorFractionntuple var: misclassification error fraction; vector<TMVA::Event*>fEventSamplethe training events; UInt_tfMaxDepthmax depth; Int_tfMinNodeEventsmin number of events in node; Float_tfMinNodeSizemin percentage of training events in node; TStringfMinNodeSizeSstring containing min percentage of training events in node; Int_tfNCutsgrid used in cut applied in node splitting; Double_tfNodePurityLimitpurity limit for sig/bkg nodes; Bool_tfPruneBeforeBoostaincient variable, only needed for ""CompatibilityOptions""; TMVA::DecisionTree::EPruneMethodfPruneMethodmethod used for prunig; TStringfPruneMethodSprune method option String; Double_tfPruneStrengtha parameter to set the ""amount"" of pruning..needs to be adjusted; Bool_tfRandomisedTreeschoose a random subset of possible cut variables at each node during training; TMVA::SeparationBase*fSepTypethe separation used in node splitting; TStringfSepTypeSthe separation (option string) used in node splitting; TMVA::DecisionTree*fTreethe decision tree; Int_tfUseNvarsthe number of variables used in the randomised tree splitting; Bool_tfUsePoissonNvarsfUseNvars is used as a poisson mean, and the actual value of useNvars is at each step drawn form that distribution; Bool_tfUseYesNoLea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodDT.html:21093,variab,variable,21093,root/html602/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodDT.html,4,['variab'],['variable']
Modifiability,"rn.ch |; | (c) 1995-2017, The ROOT Team |; | Built for macosx64 |; | From heads/v6-10-00-patches@v6-10-00-25-g9f78c3a, Jul 03 2017, 11:39:44 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------------------------------------. root [0]; To start ROOT you can type root at the system prompt. This starts up Cling, the ROOT command line C/C++ interpreter, and it gives you the ROOT prompt (root[0]).; It is possible to launch ROOT with some command line options, as shown below:; % root -?; Usage: root [-l] [-b] [-n] [-q] [dir] [[file:]data.root]; [file1.C ... fileN.C]; Options:; -b : run in batch mode without graphics; -n : do not execute logon and logoff macros as specified in .rootrc; -q : exit after processing command line macro files; -l : do not show splash screen; -x : exit on exception; dir : if dir is a valid directory cd to it before executing. -? : print usage; -h : print usage; --help : print usage; -config : print ./configure options. -b ROOT session runs in batch mode, without graphics display. This mode is useful in case one does not want to set the DISPLAY or cannot do it for some reason.; -n usually, launching a ROOT session will execute a logon script and quitting will execute a logoff script. This option prevents the execution of these two scripts.; it is also possible to execute a script without entering a ROOT session. One simply adds the name of the script(s) after the ROOT command. Be warned: after finishing the execution of the script, ROOT will normally enter a new session.; -q process command line script files and exit. For example if you would like to run a script myMacro.C in the background, redirect the output into a file myMacro.log, and exit after the script execution, use the following syntax:; root -b -q myMacro.C > myMacro.log; If you need to pass a parameter to the script use:; root -b -q 'myMacro.C(3)' > myMacro.log; Be mindful of the quotes, i.e. if you need to pass a string as a pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:33259,config,configure,33259,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['config'],['configure']
Modifiability,"rnTypeName () const;  Get full type description of function return type, e,g.: ""class TDirectory*"". ;  ; std::string GetReturnTypeNormalizedName () const;  Get the normalized name of the return type. ;  ; const char * GetSignature ();  Return signature of function. ;  ; void * InterfaceMethod () const;  Return pointer to the interface method. ;  ; void ls (Option_t *option="""") const override;  List TFunction name and title. ;  ; TFunction & operator= (const TFunction &rhs);  Assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TFunction name and title. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TDictionary & operator= (const TDictionary &other);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMethod.html:3882,inherit,inherited,3882,doc/master/classTMethod.html,https://root.cern,https://root.cern/doc/master/classTMethod.html,2,['inherit'],['inherited']
Modifiability,"rnal variable (int, long, double, float) - to be done JS ; Definition at line 110 of file VariableInfo.h. ◆ fInternalName. TString TMVA::VariableInfo::fInternalName. private . internal variable name (needs to be regular expression) ; Definition at line 98 of file VariableInfo.h. ◆ fLabel. TString TMVA::VariableInfo::fLabel. private . variable label, set by ""mylabel := var1 + var2"", this is a shortcut ; Definition at line 99 of file VariableInfo.h. ◆ fNormalized. Bool_t TMVA::VariableInfo::fNormalized. private . variable gets normalized ; Definition at line 108 of file VariableInfo.h. ◆ fUnit. TString TMVA::VariableInfo::fUnit. private . unit for axis labels in plots; set by third string in AddVariable ; Definition at line 101 of file VariableInfo.h. ◆ fVarCounter. Int_t TMVA::VariableInfo::fVarCounter. private . dummy variable ; Definition at line 111 of file VariableInfo.h. ◆ fVarType. Char_t TMVA::VariableInfo::fVarType. private . the variable type to be used internally ('F'-default or 'I') ; Definition at line 102 of file VariableInfo.h. ◆ fXmaxNorm. Double_t TMVA::VariableInfo::fXmaxNorm. private . maximum value for correlated/decorrelated/PCA variable ; Definition at line 104 of file VariableInfo.h. ◆ fXmeanNorm. Double_t TMVA::VariableInfo::fXmeanNorm. private . mean value for correlated/decorrelated/PCA variable ; Definition at line 105 of file VariableInfo.h. ◆ fXminNorm. Double_t TMVA::VariableInfo::fXminNorm. private . minimum value for correlated/decorrelated/PCA variable ; Definition at line 103 of file VariableInfo.h. ◆ fXrmsNorm. Double_t TMVA::VariableInfo::fXrmsNorm. private . rms value for correlated/decorrelated/PCA variable ; Definition at line 106 of file VariableInfo.h. ◆ fXvarianceNorm. Double_t TMVA::VariableInfo::fXvarianceNorm. private . variance value for correlated/decorrelated/PCA variable ; Definition at line 107 of file VariableInfo.h. Libraries for TMVA::VariableInfo:. [legend]; The documentation for this class was generated from the f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableInfo.html:21148,variab,variable,21148,doc/master/classTMVA_1_1VariableInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableInfo.html,1,['variab'],['variable']
Modifiability,"rnate = 202; , kAlternateString = 203; , ;   kMinIf = 204; , kMaxIf = 205. };  ; enum  EStatusBits { kIsCharacter = (1ULL << ( 12 )); , kMissingLeaf = (1ULL << ( 15 )); , kIsInteger = (1ULL << ( 17 )); , kNeedEntries = (1ULL << ( 18 )); };  ;  Protected Types inherited from ROOT::v5::TFormula; enum  { ;   kEnd = 0; , kAdd = 1; , kSubstract = 2; , kMultiply = 3; , ;   kDivide = 4; , kModulo = 5; , kcos = 10; , ksin = 11; , ;   ktan = 12; , kacos = 13; , kasin = 14; , katan = 15; , ;   katan2 = 16; , kfmod = 17; , kpow = 20; , ksq = 21; , ;   ksqrt = 22; , kstrstr = 23; , kmin = 24; , kmax = 25; , ;   klog = 30; , kexp = 31; , klog10 = 32; , kpi = 40; , ;   kabs = 41; , ksign = 42; , kint = 43; , kSignInv = 44; , ;   krndm = 50; , kAnd = 60; , kOr = 61; , kEqual = 62; , ;   kNotEqual = 63; , kLess = 64; , kGreater = 65; , kLessThan = 66; , ;   kGreaterThan = 67; , kNot = 68; , kcosh = 70; , ksinh = 71; , ;   ktanh = 72; , kacosh = 73; , kasinh = 74; , katanh = 75; , ;   kStringEqual = 76; , kStringNotEqual = 77; , kBitAnd = 78; , kBitOr = 79; , ;   kLeftShift = 80; , kRightShift = 81; , kJumpIf = 82; , kJump = 83; , ;   kexpo = 100; , kxexpo = 100; , kyexpo = 101; , kzexpo = 102; , ;   kxyexpo = 105; , kgaus = 110; , kxgaus = 110; , kygaus = 111; , ;   kzgaus = 112; , kxygaus = 115; , klandau = 120; , kxlandau = 120; , ;   kylandau = 121; , kzlandau = 122; , kxylandau = 125; , kpol = 130; , ;   kxpol = 130; , kypol = 131; , kzpol = 132; , kParameter = 140; , ;   kConstant = 141; , kBoolOptimize = 142; , kStringConst = 143; , kVariable = 144; , ;   kFunctionCall = 145; , kData = 146; , kUnary = 147; , kBinary = 148; , ;   kThree = 149; , kDefinedVariable = 150; , kDefinedString = 151; , kPlusD = 152; , ;   kPlusDD = 153; , kMultD = 154; , kMultDD = 155; , kBoolOptimizeOr = 156; , ;   kBoolOptimizeAnd = 157; , kBoolSet = 158; , kFDM = 159; , kFD0 = 160; , ;   kFD1 = 161; , kFD2 = 162; , kFD3 = 163. };  ; typedef Double_t(TObject::* TFuncG) (const Double_t *, const Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:19404,inherit,inherited,19404,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,1,['inherit'],['inherited']
Modifiability,"rned by getAnalyticalIntegral, except code zero.; 379 ; 380double RooAbsReal::analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName) const; 381{; 382// cout << ""RooAbsReal::analyticalIntegralWN("" << GetName() << "") code = "" << code << "" normSet = "" << (normSet?*normSet:RooArgSet()) << std::endl ;; 383 if (code==0) return getVal(normSet) ;; 384 return analyticalIntegral(code,rangeName) ;; 385}; 386 ; 387 ; 388 ; 389////////////////////////////////////////////////////////////////////////////////; 390/// Implements the actual analytical integral(s) advertised by; 391/// getAnalyticalIntegral. This functions will only be called with; 392/// codes returned by getAnalyticalIntegral, except code zero.; 393 ; 394double RooAbsReal::analyticalIntegral(Int_t code, const char* /*rangeName*/) const; 395{; 396 // By default no analytical integrals are implemented; 397 coutF(Eval) << ""RooAbsReal::analyticalIntegral("" << GetName() << "") code "" << code << "" not implemented"" << std::endl ;; 398 return 0 ;; 399}; 400 ; 401 ; 402 ; 403////////////////////////////////////////////////////////////////////////////////; 404/// Get the label associated with the variable; 405 ; 406const char *RooAbsReal::getPlotLabel() const; 407{; 408 return _label.IsNull() ? fName.Data() : _label.Data();; 409}; 410 ; 411 ; 412 ; 413////////////////////////////////////////////////////////////////////////////////; 414/// Set the label associated with this variable; 415 ; 416void RooAbsReal::setPlotLabel(const char *label); 417{; 418 _label= label;; 419}; 420 ; 421 ; 422 ; 423////////////////////////////////////////////////////////////////////////////////; 424///Read object contents from stream (dummy for now); 425 ; 426bool RooAbsReal::readFromStream(std::istream& /*is*/, bool /*compact*/, bool /*verbose*/); 427{; 428 return false ;; 429}; 430 ; 431 ; 432 ; 433////////////////////////////////////////////////////////////////////////////////; 434///Write object contents to stream (dum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:14298,variab,variable,14298,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variable']
Modifiability,rnelBase←. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamTarget. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamVect. TMVA::PDF. TMVA::Reader. TMVA::RootFinder. TMVA::SdivSqrtSplusB. TMVA::SimulatedAnnealingFitter. TMVA::TActivationIdentity. TMVA::TActivationRadial. TMVA::TActivationSigmoid. TMVA::TActivationTanh. TMVA::TNeuron. TMVA::TNeuronInputAbs. TMVA::TNeuronInputSqSum. TMVA::TNeuronInputSum. TMVA::TSpline1. TMVA::TSpline2. TMVA::TSynapse. TMVA::Timer. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMVA::VariableTransformBase←. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMacro←. TEveMacro. TMap. TMapFile. TMapIter. TMarker. TMarker3DBox. TMaterial←. TMixture. TMathText. TMatrixT<double>. TMatrixT<float>. TMatrixTBase<double>←. TMatrixT<double>. TMatrixTSparse<double>. TMatrixTSym<double>. TMatrixTBase<float>←. TMatrixT<float>. TMatrixTSparse<float>. TMatrixTSym<float>. TMatrixTColumn<double>. TMatrixTColumn<float>. TMatrixTDiag<double>. TMatrixTDiag<float>. TMatrixTFlat<double>. TMatrixTFlat<float>. TMatrixTLazy<double>←. THaarMatrixT<double>. THilbertMatrixT<double>. TMatrixTLazy<float>←. THaarMatrixT<float>. THilbertMatrixT<float>. TMatrixTRow<double>. TMatrixTRow<float>. TMatrixTSparse<double>. TMatrixTSparse<float>. TMatrixTSparseDiag<double>. TMatrixTSparseDiag<float>. TMatrixTSparseRow<double>. TMatrixTSparseRow<float>. TMatrixTSub<double>. TMatrixTSub<float>. TMatrixTSym<double>. TMatrixTSym<float>. TMatrixTSymLazy<double>←. THilbertMatrixTSym<double>. TMatrixTSymLazy<float>←. THilbertMatrixTSym<float>. TMehrotraSolver. TMemFi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassHierarchy.html:77467,Variab,VariableRearrangeTransform,77467,root/html534/ClassHierarchy.html,https://root.cern,https://root.cern/root/html534/ClassHierarchy.html,2,['Variab'],['VariableRearrangeTransform']
Modifiability,rnelTrivial.h;  PDEFoamMultiTarget.h;  PDEFoamTarget.h;  PDEFoamTargetDensity.h;  PDEFoamVect.h;  PDF.h;  QuickMVAProbEstimator.h;  Ranking.h;  Reader.h;  RegressionVariance.h;  Results.h;  ResultsClassification.h;  ResultsMulticlass.h;  ResultsRegression.h;  ROCCalc.h;  RootFinder.h;  Rule.h;  RuleCut.h;  RuleEnsemble.h;  RuleFit.h;  RuleFitAPI.h;  RuleFitParams.h;  SdivSqrtSplusB.h;  SeparationBase.h;  SimulatedAnnealing.h;  SimulatedAnnealingFitter.h;  SVEvent.h;  SVKernelFunction.h;  SVKernelMatrix.h;  SVWorkingSet.h;  TActivation.h;  TActivationChooser.h;  TActivationIdentity.h;  TActivationRadial.h;  TActivationReLU.h;  TActivationSigmoid.h;  TActivationTanh.h;  Timer.h;  TNeuron.h;  TNeuronInput.h;  TNeuronInputAbs.h;  TNeuronInputChooser.h;  TNeuronInputSqSum.h;  TNeuronInputSum.h;  Tools.h;  TransformationHandler.h;  TSpline1.h;  TSpline2.h;  TSynapse.h;  Types.h;  VariableDecorrTransform.h;  VariableGaussTransform.h;  VariableIdentityTransform.h;  VariableInfo.h;  VariableNormalizeTransform.h;  VariablePCATransform.h;  VariableRearrangeTransform.h;  VariableTransformBase.h;  Version.h;  Volume.h;  LinkDef.h;  LinkDef1.h;  LinkDef2.h;  LinkDef3.h;  LinkDef4.h;  LinkDef5.h;  ► src;  BDTEventWrapper.cxx;  BinarySearchTree.cxx;  BinarySearchTreeNode.cxx;  BinaryTree.cxx;  CCPruner.cxx;  CCTreeWrapper.cxx;  ClassifierFactory.cxx;  ClassInfo.cxx;  Config.cxx;  Configurable.cxx;  ConvergenceTest.cxx;  CostComplexityPruneTool.cxx;  CrossEntropy.cxx;  DataInputHandler.cxx;  DataSet.cxx;  DataSetFactory.cxx;  DataSetInfo.cxx;  DataSetManager.cxx;  DecisionTree.cxx;  DecisionTreeNode.cxx;  Event.cxx;  ExpectedErrorPruneTool.cxx;  Factory.cxx;  FitterBase.cxx;  GeneticAlgorithm.cxx;  GeneticFitter.cxx;  GeneticGenes.cxx;  GeneticPopulation.cxx;  GeneticRange.cxx;  GiniIndex.cxx;  GiniIndexWithLaplace.cxx;  IFitterTarget.cxx;  IMethod.cxx;  Interval.cxx;  KDEKernel.cxx;  LDA.cxx;  LogInterval.cxx;  MCFitter.cxx;  MethodANNBase.cxx;  MethodBase.cxx;  MethodBayesClassifie,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/files.html:91313,Variab,VariableNormalizeTransform,91313,root/html606/files.html,https://root.cern,https://root.cern/root/html606/files.html,1,['Variab'],['VariableNormalizeTransform']
Modifiability,"rning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; static Double_tFindBlocking(TVectorD& w, TVectorD& wstep, TVectorD& u, TVectorD& ustep, Double_t maxStep, Double_t& w_elt, Double_t& wstep_elt, Double_t& u_elt, Double_t& ustep_elt, int& first_or_second); static Double_tFindBlockingSub(Int_t n, Double_t* w, Int_t incw, Double_t* wstep, Int_t incwstep, Double_t* u, Int_t incu, Double_t* ustep, Int_t incustep, Double_t maxStep, Double_t& w_elt, Double_t& wstep_elt, Double_t& u_elt, Double_t& ustep_elt, Int_t& first_or_second); voidTObject::MakeZombie(); static Double_tStepBound(TVectorD& v, TVectorD& dir, Double_t maxStep). Data Members; public:. TVectorDfGamma; TVectorDfLambda; Int_tfNComplementaryVariablesnumber of complementary primal-dual variables.; TVectorDfPhi; TVectorDfPi; TVectorDfS; TVectorDfT; TVectorDfU; TVectorDfV; TVectorDfW; TVectorDfX; TVectorDfY; TVectorDfZ; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie; static TQpVar::EVarBlockkgamma_block; static TQpVar::EVarBlockklambda_block; static TQpVar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQpVar.html:6518,variab,variables,6518,root/html602/TQpVar.html,https://root.cern,https://root.cern/root/html602/TQpVar.html,4,['variab'],['variables']
Modifiability,"rning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TGeoMatrix::EGeoTransfTypes { kGeoIdentity; kGeoTranslation; kGeoRotation; kGeoScale; kGeoReflection; kGeoRegistered; kGeoSavePrimitive; kGeoMatrixOwned; kGeoCombiTrans; kGeoGenTrans; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; Double_tfScale[3]scale (x, y, z); TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoScale(); default constructor. TGeoScale(const TGeoScale& other); Copy constructor. TGeoScale(Double_t sx, Double_t sy, Double_t sz); default constructor. TGeoScale(const char* name, Double_t sx, Double_t sy, Double_t sz); default constructor. ~TGeoScale(); destructor. TGeoMatrix& Inverse() const; Return a temporary inverse of this. void SetScale(Double_t sx, Double_t sy, Double_t sz); scale setter. void LocalToMaster(const Double_t* local, Double_t* master) const; Convert a local point to the master frame. Double_t LocalToMaster(Double_t dist, const Double_t* dir = 0) const; Convert the local distance along unit vector DIR to master frame. If DIR; is not specified perform a conversion such as the returned distance is the; the minimum for all possible directions. TGeoMatrix * MakeClone() const; Make a clone of this matrix. void MasterToLocal(const Double_t* master, Double_t* local) const; Convert a global point to local frame. Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoScale.html:14468,Inherit,Inheritance,14468,root/html532/TGeoScale.html,https://root.cern,https://root.cern/root/html532/TGeoScale.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rningMethod. enum TMultiLayerPerceptron::ELearningMethod. EnumeratorkStochastic ; kBatch ; kSteepestDescent ; kRibierePolak ; kFletcherReeves ; kBFGS . Definition at line 30 of file TMultiLayerPerceptron.h. Constructor & Destructor Documentation. ◆ TMultiLayerPerceptron() [1/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; ). Default constructor. ; Definition at line 264 of file TMultiLayerPerceptron.cxx. ◆ TMultiLayerPerceptron() [2/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; const char * ; layout, . TTree * ; data = nullptr, . const char * ; training = ""Entry$%2==0"", . const char * ; test = """", . TNeuron::ENeuronType ; type = TNeuron::kSigmoid, . const char * ; extF = """", . const char * ; extD = """" . ). The network is described by a simple string: The input/output layers are defined by giving the branch names separated by comas. ; Hidden layers are just described by the number of neurons. The layers are separated by colons.; Ex: ""x,y:10:5:f""; The output can be prepended by '@' if the variable has to be normalized. The output can be followed by '!' to use Softmax neurons for the output layer only.; Ex: ""x,y:10:5:c1,c2,c3!""; Input and outputs are taken from the TTree given as second argument. training and test are two cuts (see TTreeFormula) defining events to be used during the neural net training and testing.; Example: ""Entry$%2"", ""(Entry$+1)%2"".; Both the TTree and the cut can be defined in the constructor, or later with the suited setter method. ; Definition at line 446 of file TMultiLayerPerceptron.cxx. ◆ TMultiLayerPerceptron() [3/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; const char * ; layout, . const char * ; weight, . TTree * ; data = nullptr, . const char * ; training = ""Entry$%2==0"", . const char * ; test = """", . TNeuron::ENeuronType ; type = TNeuron::kSigmoid, . const char * ; extF = """", . const char * ; extD = """" . ). The network is described by a simple string: The input/output layers are defined by giving the branch names se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:29602,variab,variable,29602,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,1,['variab'],['variable']
Modifiability,"rns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferFile; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherited from TBuffer; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer. ;  ; Bool_t fMode;  ; TObject * fParent;  ; ReAllocCharFun_t fReAllocFunc;  ; Int_t fVersion;  ;  Static Protected Attributes inherited from TBufferIO; static Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferSQL.html:37188,inherit,inherited,37188,doc/master/classTBufferSQL.html,https://root.cern,https://root.cern/doc/master/classTBufferSQL.html,1,['inherit'],['inherited']
Modifiability,"rns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); Long64_tTSelectorDraw::fOldEstimatevalue of Tree fEstimate when selector is called; TH1*TSelectorDraw::fOldHistogram! Pointer to previously used histogram; TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TSelectorDraw::fSelectPointer to selection formula; Bool_tTSelectorDraw::fSelectMultipletrue if selection has a variable index; Long64_tTSelectorDraw::fSelectedRowsNumber of selected entries; Long64_tTSelector::fStatusSelector status; TTree*TSelectorDraw::fTreePointer to current Tree; TObject*TSelectorDraw::fTreeElistpointer to Tree Event list; TEntryListArray*TSelectorDraw::fTreeElistArray! pointer to Tree Event list array; Double_t**TSelectorDraw::fVal![fSelectedRows][fDimension] Local buffer for the variables; Int_tTSelectorDraw::fValSize; TTreeFormula**TSelectorDraw::fVar![fDimension] Array of pointers to variables formula; Bool_t*TSelectorDraw::fVarMultiple![fDimension] true if fVar[i] has a variable index; Double_t*TSelectorDraw::fVmax![fDimension] Maxima of varexp columns; Double_t*TSelectorDraw::fVmin![fDimension] Minima of varexp columns; Double_t*TSelectorDraw::fW![fSelectedRows]Local buffer for weights; Double_tTSelectorDraw::fWeightTree weight (see TTree::SetWeight). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveSelectorToEventList(TEventList* evl, const char* sel); Constructor. Bool_t Process(Long64_t entry); Process entry. TEveSelectorToEventList(const TEveSelectorToEventList& ). TEveSelectorToEventList& operator=(const TEveSelectorToEventList& ). Int_t Version() const; { return 1; }. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveSelectorToEventList.html:10467,Inherit,Inheritance,10467,root/html534/TEveSelectorToEventList.html,https://root.cern,https://root.cern/root/html534/TEveSelectorToEventList.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <RooFit/xRooFit/xRooNLLVar.h>. Inheritance diagram for ROOT::Experimental::XRooFit::xRooNLLVar::xRooHypoSpace:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ xRooHypoSpace() [1/2]. BEGIN_XROOFIT_NAMESPACE xRooNLLVar::xRooHypoSpace::xRooHypoSpace ; (; const char * ; name = """", . const char * ; title = """" . ). Definition at line 42 of file xRooHypoSpace.cxx. ◆ xRooHypoSpace() [2/2]. xRooNLLVar::xRooHypoSpace::xRooHypoSpace ; (; const RooStats::HypoTestInverterResult * ; result). Definition at line 50 of file xRooHypoSpace.cxx. Member Function Documentation. ◆ AddModel(). bool xRooNLLVar::xRooHypoSpace",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html:18641,inherit,inherited,18641,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html,1,['inherit'],['inherited']
Modifiability,"ro describing how to use the special mathematical functions taking full advantage of the precision and speed of the C99 compliant environments ;  mathcoreStatFunc.C Example macro showing some major probability density functions in ROOT ;  mathcoreVectorCollection.C Example showing how to write and read a std vector of ROOT::Math LorentzVector in a ROOT tree ;  mathcoreVectorFloatIO.C Macro illustrating I/O with Lorentz Vectors of floats The dictionary for LorentzVector of float is not in the libMathCore, therefore is generated when parsed the file with CINT ;  mathcoreVectorIO.C Example of I/O of a mathcore Lorentz Vectors in a Tree and comparison with a TLorentzVector ;  mathGammaNormal.C Tutorial illustrating the use of TMath::GammaDist and TMath::LogNormal ;  mathLaplace.C Test the TMath::LaplaceDist and TMath::LaplaceDistI functions ;  mathmoreIntegration.C Example on the usage of the adaptive 1D integration algorithm of MathMore it calculates the numerically cumulative integral of a distribution (like in this case the BreitWigner) to execute the macro type it (you need to compile with AClic) ;  mathStudent.C Tutorial illustrating the use of the Student and F distributions ;  multidimSampling.C Example of sampling a multi-dim distribution using the DistSampler class NOTE: This tutorial must be run with ACLIC ;  normalDist.C Tutorial illustrating the new statistical distributions functions (pdf, cdf and quantile) ;  permute.C Tutorial illustrating the use of TMath::Permute can be run with: ;  principal.C Principal Components Analysis (PCA) example ;  quantiles.C Demo for quantiles ;  quasirandom.C Example of generating quasi-random numbers ;  Rolke.C Example of the usage of the TRolke class The TRolke class computes the profile likelihood confidence limits for 7 different model assumptions on systematic/statistical uncertainties ;  testrandom.C Performance test of all the ROOT random generator (TRandom, TRandom1, TRandom2 and TRandom3) Tests the generator TRandom3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:131410,adapt,adaptive,131410,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['adapt'],['adaptive']
Modifiability,"ro distance is given by the user as fifth argument of CheckPoint, this distance will be used as radius of the safety sphere. Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and it will draw this volume with current visualization settings. Random points are generated in the bounding box of the top drawn volume. The points are classified and drawn with the color of their deepest container. Only points in visible nodes will be drawn. Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of volumes) and will shoot rays from a given point in the local reference frame with random directions. The intersections with displayed nodes will appear as segments having the color of the touched node. Drawn geometry will be then made invisible in order to enhance rays. Definition at line 44 of file TGeoManager.h. Public Types; enum  EDefaultUnits { kG4Units = 0; , kRootUnits = 1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoManager ();  Default constructor. ;  ;  TGeoManager (const char *name, const char *title);  Constructor. ;  ;  ~TGeoManager () override;  Destructor. ;  ; void AddBorderSurface (TGeoBorderSurface *surf);  Add border surface;. ;  ; void AddGDMLMatrix (TGDMLMatrix *mat);  Add GDML matrix;. ;  ; Int_t AddMaterial (const TGeoMaterial *material);  Add a material to the list. Returns index ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoManager.html:19498,inherit,inherited,19498,doc/master/classTGeoManager.html,https://root.cern,https://root.cern/doc/master/classTGeoManager.html,1,['inherit'],['inherited']
Modifiability,"ro. double GlobalCC(unsigned int ) const. return global correlation coefficient for variable i; This is a number between zero and one which gives; the correlation between the i-th parameter and that linear combination of all; other parameters which is most strongly correlated with i.; Minimizer must overload method if implemented. { return -1; }. bool GetMinosError(unsigned int , double& errLow, double& errUp, int = 0). minos error for variable i, return false if Minos failed or not supported; and the lower and upper errors are returned in errLow and errUp; An extra flag specifies if only the lower (runopt=-1) or the upper (runopt=+1) error calculation is run; (This feature isnot yet implemented). bool Hesse(). perform a full calculation of the Hessian matrix for error calculation. { return false; }. bool Scan(unsigned int , unsigned int& , double* , double* , double = 0, double = 0). scan function minimum for variable i. Variable and function must be set before using Scan; Return false if an error or if minimizer does not support this functionality. bool Contour(unsigned int , unsigned int , unsigned int& , double* , double* ). find the contour points (xi,xj) of the function for parameter i and j around the minimum; The contour will be find for value of the function = Min + ErrorUp();. void PrintResults(); return reference to the objective function; virtual const ROOT::Math::IGenFunction & Function() const = 0;; print the result according to set level (implemented for TMinuit for mantaining Minuit-style printing). {}. std::string VariableName(unsigned int ) const; get name of variables (override if minimizer support storing of variable names); return an empty string if variable is not found. { return std::string();}. int VariableIndex(const string& ) const; get index of variable given a variable given a name; return -1 if variable is not found. { return -1; }. int PrintLevel() const; minimizer configuration parameters ; set print level. { return fDebug; }. unsigned ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__Minimizer.html:8916,Variab,Variable,8916,root/html532/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__Minimizer.html,1,['Variab'],['Variable']
Modifiability,"rob = 0.5, . const char * ; name = ""_qx"" . ); const. Compute the X distribution of quantiles in the other variable Y name is the name of the returned histogram prob is the probability content for the quantile (0.5 is the default for the median) An approximate error for the quantile is computed assuming that the distribution in the other variable is normal. ; According to this approximate formula the error on the quantile is estimated as sqrt( p (1-p) / ( n * f(q)^2) ), where p is the probability content of the quantile and n is the number of events used to compute the quantile and f(q) is the probability distribution for the other variable evaluated at the obtained quantile. In the error estimation the probability is then assumed to be a normal distribution. ; Definition at line 2505 of file TH2.cxx. ◆ QuantilesY(). TH1D * TH2::QuantilesY ; (; Double_t ; prob = 0.5, . const char * ; name = ""_qy"" . ); const. Compute the Y distribution of quantiles in the other variable X name is the name of the returned histogram prob is the probability content for the quantile (0.5 is the default for the median) An approximate error for the quantile is computed assuming that the distribution in the other variable is normal. ; Definition at line 2518 of file TH2.cxx. ◆ Rebin(). TH2 * TH2::Rebin ; (; Int_t ; ngroup = 2, . const char * ; newname = """", . const Double_t * ; xbins = nullptr . ). overridevirtual . Override TH1::Rebin as TH2::RebinX Rebinning in variable binning as for TH1 is not allowed If a non-null pointer is given an error is flagged see RebinX and Rebin2D. ; Reimplemented from TH1.; Definition at line 1663 of file TH2.cxx. ◆ Rebin2D(). TH2 * TH2::Rebin2D ; (; Int_t ; nxgroup = 2, . Int_t ; nygroup = 2, . const char * ; newname = """" . ). virtual . Rebin this histogram grouping nxgroup/nygroup bins along the xaxis/yaxis together. ; if newname is not blank a new temporary histogram hnew is created. else the current histogram is modified (default) The parameter nxgroup/nyg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:102062,variab,variable,102062,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,1,['variab'],['variable']
Modifiability,"rocess formula.; -. void AddVariables(const TString* vars, const Int_t size); -; *-* Adds multiple variables.; *-* First argument is an array of pairs<TString,Double>, where; *-* first argument is name of variable,; *-* second argument represents value.; *-* size - number of variables passed in first argument; -. void SetName(const char* name); Set the name of the formula. We need to allow the list of function to; properly handle the hashes. void SetVariables(const pair<TString,Double_t>* vars, const Int_t size); -; *-* Sets multiple variables.; *-* First argument is an array of pairs<TString,Double>, where; *-* first argument is name of variable,; *-* second argument represents value.; *-* size - number of variables passed in first argument; -. Double_t GetVariable(const char* name) const; -; *-* Returns variable value.; -. Int_t GetVarNumber(const char* name) const; -; *-* Returns variable number (positon in array) given its name; -. TString GetVarName(Int_t ivar) const; -; *-* Returns variable name given its position in the array; -. void SetVariable(const TString& name, Double_t value); -; *-* Sets variable value.; -. void DoAddParameter(const TString& name, Double_t value, bool processFormula); -; *-* Adds parameter to known parameters.; *-* User should use SetParameter, because parameters are added during initialization part,; *-* and after that adding new will be pointless.; -. Int_t GetParNumber(const char* name) const; return parameter index given a name (return -1 for not existing parameters); non need to print an error. Double_t GetParameter(const char* name) const; -; *-* Returns parameter value given by string.; -. Double_t GetParameter(Int_t param) const; -; *-* Return parameter value given by integer.; -; -; TString name = TString::Format(""%d"",param);. const char * GetParName(Int_t ipar) const; -; *-* Return parameter name given by integer.; -. Double_t* GetParameters() const. void GetParameters(Double_t* params) const. void SetParameter(const char* na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFormula.html:16039,variab,variable,16039,root/html604/TFormula.html,https://root.cern,https://root.cern/root/html604/TFormula.html,2,['variab'],['variable']
Modifiability,"rocess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TProfile2D*fProfile; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* ); See TProofDraw::Init(). void DefVar(); Define relevant variables. void Begin(TTree* t); See TProofDraw::Begin(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the histogram with the given values. void Terminate(void); See TProofDraw::Terminate(). TProofDrawProfile2D(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofDraw.h 30068 2009-09-08 15:19:38Z ganis $ » Last generated: 2010-10-05 21:01; This page has been automatically generated. For comments or suggestions regarding ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofDrawProfile2D.html:7439,variab,variable,7439,root/html528/TProofDrawProfile2D.html,https://root.cern,https://root.cern/root/html528/TProofDrawProfile2D.html,1,['variab'],['variable']
Modifiability,"rocessAfterFit(Int_t ); Method called after fit has been performed. RooFitResult* refit(RooAbsData* inGenSample = 0); Interface methods to RooMCStudy objects,; which are only functional after module has been attached to a RooMCStudy object. RooAbsData* genSample(); Return generate sample. RooAbsPdf* genModel(); Return generator pdf. RooAbsGenContext* genContext(); Accessor for generator context, generator parameters,	prototype data and projected dependents. RooArgSet* genInitParams(); Return initial value of generator model parameters. RooArgSet* genParams(); Return current value of generator model parameters. const RooDataSet* genProtoData(); Return generator prototype data provided by user. RooArgSet* projDeps(); Return projected observables. RooArgSet* dependents(); Accessors for fit observables, fit model, current and initial fit parameters and NLL value. RooArgSet* allDependents(); Returna all observables. RooAbsPdf* fitModel(); Return fit model. RooArgSet* fitInitParams(); Return initial value of parameters of fit model. RooArgSet* fitParams(); Return current value of parameters of fit model. RooRealVar* nllVar(); Return pointer to RooRealVar holding minimized -log(L) value. const char* fitOptions(); Accessors for fit options, generator annd MCstudy configuration flags. RooLinkedList* fitOptList(); Return list of fit options provided by user. Bool_t extendedGen(); If true extended mode generation is requested. Bool_t binGenData(); If true binning of data between generating and fitting is requested. Double_t numExpGen(); Return expected number of events from generator model. Bool_t randProto(); If true randomization of prototype data order is requested. Bool_t verboseGen(); If true verbose message in the generation step is requested. » Last changed: Mon Dec 7 13:45:40 2009 » Last generated: 2009-12-07 13:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsMCStudyModule.html:9668,config,configuration,9668,root/html526/RooAbsMCStudyModule.html,https://root.cern,https://root.cern/root/html526/RooAbsMCStudyModule.html,3,"['config', 'extend']","['configuration', 'extended', 'extendedGen']"
Modifiability,"rocessAfterFit(Int_t ); Method called after fit has been performed. RooFitResult* refit(RooAbsData* inGenSample = 0); Interface methods to RooMCStudy objects,; which are only functional after module has been attached to a RooMCStudy object. RooAbsData* genSample(); Return generate sample. RooAbsPdf* genModel(); Return generator pdf. RooAbsGenContext* genContext(); Accessor for generator context, generator parameters,	prototype data and projected dependents. RooArgSet* genInitParams(); Return initial value of generator model parameters. RooArgSet* genParams(); Return current value of generator model parameters. const RooDataSet* genProtoData(); Return generator prototype data provided by user. RooArgSet* projDeps(); Return projected observables. RooArgSet* dependents(); Accessors for fit observables, fit model, current and initial fit parameters and NLL value. RooArgSet* allDependents(); Returna all observables. RooAbsPdf* fitModel(); Return fit model. RooArgSet* fitInitParams(); Return initial value of parameters of fit model. RooArgSet* fitParams(); Return current value of parameters of fit model. RooRealVar* nllVar(); Return pointer to RooRealVar holding minimized -log(L) value. const char* fitOptions(); Accessors for fit options, generator annd MCstudy configuration flags. RooLinkedList* fitOptList(); Return list of fit options provided by user. Bool_t extendedGen(); If true extended mode generation is requested. Bool_t binGenData(); If true binning of data between generating and fitting is requested. Double_t numExpGen(); Return expected number of events from generator model. Bool_t randProto(); If true randomization of prototype data order is requested. Bool_t verboseGen(); If true verbose message in the generation step is requested. » Last changed: Mon Jul 4 15:21:24 2011 » Last generated: 2011-07-04 15:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsMCStudyModule.html:9723,config,configuration,9723,root/html530/RooAbsMCStudyModule.html,https://root.cern,https://root.cern/root/html530/RooAbsMCStudyModule.html,3,"['config', 'extend']","['configuration', 'extended', 'extendedGen']"
Modifiability,"rocessAfterFit(Int_t ); Method called after fit has been performed. RooFitResult* refit(RooAbsData* inGenSample = 0); Interface methods to RooMCStudy objects,; which are only functional after module has been attached to a RooMCStudy object. RooAbsData* genSample(); Return generate sample. RooAbsPdf* genModel(); Return generator pdf. RooAbsGenContext* genContext(); Accessor for generator context, generator parameters,	prototype data and projected dependents. RooArgSet* genInitParams(); Return initial value of generator model parameters. RooArgSet* genParams(); Return current value of generator model parameters. const RooDataSet* genProtoData(); Return generator prototype data provided by user. RooArgSet* projDeps(); Return projected observables. RooArgSet* dependents(); Accessors for fit observables, fit model, current and initial fit parameters and NLL value. RooArgSet* allDependents(); Returna all observables. RooAbsPdf* fitModel(); Return fit model. RooArgSet* fitInitParams(); Return initial value of parameters of fit model. RooArgSet* fitParams(); Return current value of parameters of fit model. RooRealVar* nllVar(); Return pointer to RooRealVar holding minimized -log(L) value. const char* fitOptions(); Accessors for fit options, generator annd MCstudy configuration flags. RooLinkedList* fitOptList(); Return list of fit options provided by user. Bool_t extendedGen(); If true extended mode generation is requested. Bool_t binGenData(); If true binning of data between generating and fitting is requested. Double_t numExpGen(); Return expected number of events from generator model. Bool_t randProto(); If true randomization of prototype data order is requested. Bool_t verboseGen(); If true verbose message in the generation step is requested. » Last changed: Thu Nov 3 20:06:44 2011 » Last generated: 2011-11-03 20:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsMCStudyModule.html:9723,config,configuration,9723,root/html532/RooAbsMCStudyModule.html,https://root.cern,https://root.cern/root/html532/RooAbsMCStudyModule.html,3,"['config', 'extend']","['configuration', 'extended', 'extendedGen']"
Modifiability,"rocessAfterFit(Int_t ); Method called after fit has been performed. RooFitResult* refit(RooAbsData* inGenSample = 0); Interface methods to RooMCStudy objects,; which are only functional after module has been attached to a RooMCStudy object. RooAbsData* genSample(); Return generate sample. RooAbsPdf* genModel(); Return generator pdf. RooAbsGenContext* genContext(); Accessor for generator context, generator parameters,	prototype data and projected dependents. RooArgSet* genInitParams(); Return initial value of generator model parameters. RooArgSet* genParams(); Return current value of generator model parameters. const RooDataSet* genProtoData(); Return generator prototype data provided by user. RooArgSet* projDeps(); Return projected observables. RooArgSet* dependents(); Accessors for fit observables, fit model, current and initial fit parameters and NLL value. RooArgSet* allDependents(); Returna all observables. RooAbsPdf* fitModel(); Return fit model. RooArgSet* fitInitParams(); Return initial value of parameters of fit model. RooArgSet* fitParams(); Return current value of parameters of fit model. RooRealVar* nllVar(); Return pointer to RooRealVar holding minimized -log(L) value. const char* fitOptions(); Accessors for fit options, generator annd MCstudy configuration flags. RooLinkedList* fitOptList(); Return list of fit options provided by user. Bool_t extendedGen(); If true extended mode generation is requested. Bool_t binGenData(); If true binning of data between generating and fitting is requested. Double_t numExpGen(); Return expected number of events from generator model. Bool_t randProto(); If true randomization of prototype data order is requested. Bool_t verboseGen(); If true verbose message in the generation step is requested. » Last changed: Tue Jun 2 15:27:10 2015 » Last generated: 2015-06-02 15:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooAbsMCStudyModule.html:10203,config,configuration,10203,root/html604/RooAbsMCStudyModule.html,https://root.cern,https://root.cern/root/html604/RooAbsMCStudyModule.html,6,"['config', 'extend']","['configuration', 'extended', 'extendedGen']"
Modifiability,"rocessing rate running avg vs query time; TFile*fFileThe open performance file; TStringfFileResultFile where to save basics of a run when requested; TSortedListfFilesInfoSorted list of files info; Float_tfInitTimeEnd of initialization time for this query; Double_tfLatencyMaxMax retrieval latency per packet; TH1F*fMBRateByte processing rate vs query time; Double_tfMBRateAvgAverage MB processing rate; Double_tfMBRateAvgMaxMax running MB processing rate; Double_tfMBRateMaxMax MB processing rate per packet; TH1F*fMBRateRunByte processing rate running avg vs query time; Float_tfMaxTimeMax time for this query (slowest worker); Float_tfMergeTimeBegin of merging time for this query; TH1F*fPacketsPacket distribution per worker; Bool_tfSaveResultWhether to save the results of a run; TTree*fTreeThe performance tree; TStringfTreeNameThe name of the performance tree; TSortedListfWrksInfoSorted list of workers info; static Bool_tfgDebugGlobal verbosity on/off. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t CompareOrd(const char* ord1, const char* ord2). void FillFileDist(TH1F* hf, TH1F* hb, TH2F* hx, Bool_t wdet = kFALSE). void FillFileDistOneSrv(TH1F* hx, Bool_t wdet = kFALSE). void FillWrkInfo(Bool_t force = kFALSE). void FillFileInfo(Bool_t force = kFALSE). TString GetCanvasTitle(const char* t). void GetWrkFileList(TList* wl, TList* sl). void LoadTree(TDirectory* dir). void DoDraw(TObject* o, Option_t* opt = """", const char* name = 0). TProofPerfAnalysis(const char* perffile, const char* title = """", const char* treename = ""PROOF_PerfStats""). virtual ~TProofPerfAnalysis(). Bool_t IsValid() const; { return (fFile && fTree) ? kTRUE : kFALSE; }. Bool_t WrkInfoOK() const; { return (fWrksInfo.GetSize() > 0) ? kTRUE : kFALSE; }. void EventDist(). void FileDist(Bool_t writedet = kFALSE). void LatencyPlot(const char* wrks = 0). void RatePlot(const char* wrks = 0). void WorkerActivity(). void PrintWrkInfo(Int_t showlast = 10). void PrintWr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofPerfAnalysis.html:8388,Inherit,Inheritance,8388,root/html534/TProofPerfAnalysis.html,https://root.cern,https://root.cern/root/html534/TProofPerfAnalysis.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rocessing rate running avg vs query time; TFile*fFileThe open performance file; TStringfFileResultFile where to save basics of a run when requested; TSortedListfFilesInfoSorted list of files info; Float_tfInitTimeEnd of initialization time for this query; Double_tfLatencyMaxMax retrieval latency per packet; TH1F*fMBRateByte processing rate vs query time; Double_tfMBRateAvgAverage MB processing rate; Double_tfMBRateAvgMaxMax running MB processing rate; Double_tfMBRateMaxMax MB processing rate per packet; TH1F*fMBRateRunByte processing rate running avg vs query time; Float_tfMaxTimeMax time for this query (slowest worker); Float_tfMergeTimeBegin of merging time for this query; TH1F*fPacketsPacket distribution per worker; Bool_tfSaveResultWhether to save the results of a run; TTree*fTreeThe performance tree; TStringfTreeNameThe name of the performance tree; TSortedListfWrksInfoSorted list of workers info; static Bool_tfgDebugGlobal verbosity on/off. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofPerfAnalysis(const char* perffile, const char* title = """", const char* treename = ""PROOF_PerfStats""); Constructor: open the file and attach to the tree. TProofPerfAnalysis(TTree* tree, const char* title = """"); Constructor: open the file and attach to the tree. ~TProofPerfAnalysis(); Destructor: detach the tree and close the file. TString GetCanvasTitle(const char* t); If defined, add '- <this title>' to the canvas title 't'. void LoadTree(TDirectory* dir); Load tree fTreeName from directory 'dir'. If not found, look for the; first TTree in the directory (and sub-directories) with the name containing; fTreeName.; The tree pointer is saved in fTree. void FileDist(Bool_t writedet = kFALSE); Analyse the file distribution. If writedet, underling details are; written out to a text file. void GetWrkFileList(TList* wl, TList* sl); Fill file info. Int_t CompareOrd(const char* ord1, const char* ord2); Return -1 if ord1 comes before ord2, 0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofPerfAnalysis.html:8932,Inherit,Inheritance,8932,root/html604/TProofPerfAnalysis.html,https://root.cern,https://root.cern/root/html604/TProofPerfAnalysis.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"roduce; correlations not known to the internal generator. RooDataHist * generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1,				 const RooCmdArg& arg2, const RooCmdArg& arg3,const RooCmdArg& arg4, const RooCmdArg& arg5); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; ExpectedData() -- Return a binned dataset _without_ statistical fluctuations (also aliased as Asimov()). RooDataHist * generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1,const RooCmdArg& arg2,				 const RooCmdArg& arg3,const RooCmdArg& arg4, const RooCmdArg& arg5,const RooCmdArg& arg6); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; NumEvent(int nevt) -- Generate specified number of events; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:63913,extend,extended,63913,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,1,['extend'],['extended']
Modifiability,"roduced in; the numerical calculation of the FCN value. The effects of; non-linearity and numerical roundoff both become more important as the; external value gets closer to one of the limits (expressed as the distance; to nearest limit divided by distance between limits). The user must; therefore be aware of the fact that, for example, if they put limits of; (0,10^10 ) on a parameter, then the values 0.0 and 1. 0 will be; indistinguishable to the accuracy of most machines. The transformation also affects the parameter error matrix, of course, so; MINUIT does a transformation of the error matrix (and the ``parabolic''; parameter errors) when there are parameter limits. Users should however; realize that the transformation is only a linear approximation, and that; it cannot give a meaningful result if one or more parameters is very close; to a limit, where partial Pext /partial Pint #0. Therefore, it is; recommended that:. Limits on variable parameters should be used only when needed in order; to prevent the parameter from taking on unphysical values.; When a satisfactory minimum has been found using limits, the limits; should then be removed if possible, in order to perform or re-perform the; error analysis without limits. How to get the right answer from MINUIT. MINUIT offers the user a choice of several minimization algorithms. The; MIGRAD algorithm is in general the best minimizer for; nearly all functions. It is a variable-metric method with inexact line; search, a stable metric updating scheme, and checks for; positive-definiteness. Its main weakness is that it depends heavily on; knowledge of the first derivatives, and fails miserably if they are very; inaccurate. If parameter limits are needed, in spite of the side effects, then the; user should be aware of the following techniques to alleviate problems; caused by limits:. Getting the right minimum with limits. If MIGRAD converges normally to a point where no parameter is near one of; its limits, then the exis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMinuit.html:4533,variab,variable,4533,root/html602/TMinuit.html,https://root.cern,https://root.cern/root/html602/TMinuit.html,4,['variab'],['variable']
Modifiability,"rofile likelihood ratio; can be used to construct a LikelihoodInterval.; (In the future, this class could be extended to use toy Monte Carlo to calibrate the distribution of the test statistic). Usage: It uses the interface of the CombinedCalculator, so that it can be configured by specifying:. a model common model (eg. a family of specific models which includes both the null and alternate),; a data set, ; a set of parameters of interest. The nuisance parameters will be all other parameters of the model ; a set of parameters of which specify the null hypothesis (including values and const/non-const status) . The interface allows one to pass the model, data, and parameters either directly or via a ModelConfig class.; The alternate hypothesis leaves the parameter free to take any value other than those specified by the null hypotesis. There is therefore no need to ; specify the alternate parameters. . After configuring the calculator, one only needs to ask GetHypoTest() (which will return a HypoTestResult pointer) or GetInterval() (which will return an ConfInterval pointer). The concrete implementations of this interface should deal with the details of how the nuisance parameters are; dealt with (eg. integration vs. profiling) and which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the problem in a common way for several concrete calculators. Function Members (Methods); public:. virtual~ProfileLikelihoodCalculator(); static TClass*Class(); RooStats::CombinedCalculatorRooStats::CombinedCalculator::CombinedCalculator(); RooStats::CombinedCalculatorRooStats::CombinedCalculator::CombinedCalculator(const RooStats::CombinedCalculator&); RooStats::CombinedCalculatorRooStats::CombinedCalculator::CombinedCalculator(RooAbsData& data, const RooStats::ModelConfig& model, Double_t size = 0.050000000000000003); RooStats::CombinedCalculatorRooStats::CombinedCalculator::CombinedCalculator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__ProfileLikelihoodCalculator.html:1828,config,configuring,1828,root/html602/RooStats__ProfileLikelihoodCalculator.html,https://root.cern,https://root.cern/root/html602/RooStats__ProfileLikelihoodCalculator.html,4,['config'],['configuring']
Modifiability,"rofile likelihood ratio; can be used to construct a LikelihoodInterval.; (In the future, this class could be extended to use toy Monte Carlo to calibrate the distribution of the test statistic). Usage: It uses the interface of the CombinedCalculator, so that it can be configured by specifying:. a model common model (eg. a family of specific models which includes both the null and alternate),; a data set, ; a set of parameters of interest. The nuisance parameters will be all other parameters of the model ; a set of parameters of which specify the null hypothesis (including values and const/non-const status) . The interface allows one to pass the model, data, and parameters either directly or via a ModelConfig class.; The alternate hypothesis leaves the parameter free to take any value other than those specified by the null hypotesis. There is therefore no need to ; specify the alternate parameters. . After configuring the calculator, one only needs to ask GetHypoTest() (which will return a HypoTestResult pointer) or GetInterval() (which will return an ConfInterval pointer). The concrete implementations of this interface should deal with the details of how the nuisance parameters are; dealt with (eg. integration vs. profiling) and which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the problem in a common way for several concrete calculators. Function Members (Methods); public:. virtual~ProfileLikelihoodCalculator(); static TClass*Class(); virtual Double_tRooStats::CombinedCalculator::ConfidenceLevel() const; virtual RooStats::HypoTestResult*GetHypoTest() const; virtual RooStats::LikelihoodInterval*GetInterval() const; virtual TClass*IsA() const; RooStats::ProfileLikelihoodCalculator&operator=(const RooStats::ProfileLikelihoodCalculator&); RooStats::ProfileLikelihoodCalculatorProfileLikelihoodCalculator(); RooStats::ProfileLikelihoodCalculatorProfileLikelihoodCalculator(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__ProfileLikelihoodCalculator.html:1818,config,configuring,1818,root/html528/RooStats__ProfileLikelihoodCalculator.html,https://root.cern,https://root.cern/root/html528/RooStats__ProfileLikelihoodCalculator.html,6,['config'],['configuring']
Modifiability,"rofile likelihood ratio; can be used to construct a LikelihoodInterval.; (In the future, this class could be extended to use toy Monte Carlo to calibrate the distribution of the test statistic). Usage: It uses the interface of the CombinedCalculator, so that it can be configured by specifying:. a model common model (eg. a family of specific models which includes both the null and alternate),; a data set, ; a set of parameters of interest. The nuisance parameters will be all other parameters of the model ; a set of parameters of which specify the null hypothesis (including values and const/non-const status) . The interface allows one to pass the model, data, and parameters either directly or via a ModelConfig class.; The alternate hypothesis leaves the parameter free to take any value other than those specified by the null hypotesis. There is therefore no need to ; specify the alternate parameters. . After configuring the calculator, one only needs to ask GetHypoTest() (which will return a HypoTestResult pointer) or GetInterval() (which will return an ConfInterval pointer). The concrete implementations of this interface should deal with the details of how the nuisance parameters are; dealt with (eg. integration vs. profiling) and which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the problem in a common way for several concrete calculators. Function Members (Methods); public:. virtual~ProfileLikelihoodCalculator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Double_tRooStats::CombinedCalculator::ConfidenceLevel() const; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__ProfileLikelihoodCalculator.html:1843,config,configuring,1843,root/html526/RooStats__ProfileLikelihoodCalculator.html,https://root.cern,https://root.cern/root/html526/RooStats__ProfileLikelihoodCalculator.html,1,['config'],['configuring']
Modifiability,"rofile() [4/7]. TProfile::TProfile ; (; const char * ; name, . const char * ; title, . Int_t ; nbins, . const Float_t * ; xbins, . Option_t * ; option = """" . ). Constructor for Profile histograms with variable bin size. ; See TProfile::BuildOptions() for more explanations on errors see also comments in the TH1 base class constructors ; Definition at line 138 of file TProfile.cxx. ◆ TProfile() [5/7]. TProfile::TProfile ; (; const char * ; name, . const char * ; title, . Int_t ; nbins, . const Double_t * ; xbins, . Option_t * ; option = """" . ). Constructor for Profile histograms with variable bin size. ; See TProfile::BuildOptions for more explanations on errors see also comments in the TH1 base class constructors ; Definition at line 150 of file TProfile.cxx. ◆ TProfile() [6/7]. TProfile::TProfile ; (; const char * ; name, . const char * ; title, . Int_t ; nbins, . const Double_t * ; xbins, . Double_t ; ylow, . Double_t ; yup, . Option_t * ; option = """" . ). Constructor for Profile histograms with variable bin size. ; See TProfile::BuildOptions for more explanations on errors; see also comments in the TH1 base class constructors ; Definition at line 162 of file TProfile.cxx. ◆ TProfile() [7/7]. TProfile::TProfile ; (; const TProfile & ; profile). Copy constructor. ; Definition at line 244 of file TProfile.cxx. ◆ ~TProfile(). TProfile::~TProfile ; (; ). override . Default destructor for Profile histograms. ; Definition at line 100 of file TProfile.cxx. Member Function Documentation. ◆ Add() [1/3]. Bool_t TProfile::Add ; (; const TH1 * ; h1, . const TH1 * ; h2, . Double_t ; c1 = 1, . Double_t ; c2 = 1 . ). overridevirtual . Replace contents of this profile by the addition of h1 and h2. ; this = c1*h1 + c2*h2; c1 and c2 are considered as weights applied to the two summed profiles. The operation acts therefore like merging the two profiles with a weight c1 and c2 ; Reimplemented from TH1.; Definition at line 291 of file TProfile.cxx. ◆ Add() [2/3]. Bool_t TProfile::Add ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:60714,variab,variable,60714,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,1,['variab'],['variable']
Modifiability,"rofile::SetBins ; (; Int_t ; nx, . const Double_t * ; xbins . ). overridevirtual . Redefine x axis parameters. ; Reimplemented from TH1.; Definition at line 1718 of file TProfile.cxx. ◆ SetBins() [4/7]. void TProfile::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins, . Int_t ; ny, . const Double_t * ; yBins . ). inlineoverrideprivatevirtual . Redefine x and y axis parameters with variable bin sizes. ; The X and Y axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1 ; Reimplemented from TH1.; Definition at line 70 of file TProfile.h. ◆ SetBins() [5/7]. void TProfile::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins, . Int_t ; ny, . const Double_t * ; yBins, . Int_t ; nz, . const Double_t * ; zBins . ). inlineoverrideprivatevirtual . Redefine x, y and z axis parameters with variable bin sizes. ; The X, Y and Z axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1, zBins is supposed to be of length nz+1 ; Reimplemented from TH1.; Definition at line 74 of file TProfile.h. ◆ SetBins() [6/7]. void TProfile::SetBins ; (; Int_t ; nx, . Double_t ; xmin, . Double_t ; xmax, . Int_t ; ny, . Double_t ; ymin, . Double_t ; ymax . ). inlineoverrideprivatevirtual . Redefine x and y axis parameters. ; The X and Y axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange ; Reimplemented from TH1.; Definition at line 68 of file TProfile.h. ◆ SetBins() [7/7]. void TProfile::SetBins ; (; Int_t ; nx, . Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:85964,variab,variable,85964,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,1,['variab'],['variable']
Modifiability,"rofileLL;  Implements the profile likelihood estimator for a given likelihood and set of parameters of interest. More...;  ; class  RooProjectedPdf;  A RooAbsPdf implementation that represent a projection of a given input p.d.f and the object returned by RooAbsPdf::createProjection. More...;  ; class  RooPullVar;  Represents the pull of a measurement w.r.t. More...;  ; class  RooQuasiRandomGenerator;  This class generates the quasi-random (aka ""low discrepancy"") sequence for dimensions up to 12 using the Niederreiter base 2 algorithm described in Bratley, Fox, Niederreiter, ACM Trans. More...;  ; class  RooRandom;  This class provides a static interface for generating random numbers. More...;  ; class  RooRandomizeParamMCSModule;  Add-on module to RooMCStudy that allows you to randomize input generation parameters. More...;  ; class  RooRangeBinning;  Binning/range definition that only defines a range but no binning. More...;  ; class  RooRangeBoolean;  Returns 1.0 if variable is within given a range and 0.0 otherwise. More...;  ; class  RooRatio;  Represents the ratio of two RooAbsReal objects. More...;  ; class  RooRealBinding;  Lightweight interface adaptor that binds a RooAbsReal object to a subset of its servers and present it as a simple array oriented interface. More...;  ; class  RooRealConstant;  Provides static functions to create and keep track of RooRealVar constants. More...;  ; class  RooRealIntegral;  Performs hybrid numerical/analytical integrals of RooAbsReal objects. More...;  ; class  RooFit::TestStatistics::RooRealL;  RooAbsReal that wraps RooAbsL likelihoods for use in RooFit outside of the RooMinimizer context. More...;  ; class  RooRealMPFE;  Multi-processor front-end for parallel calculation of RooAbsReal objects. More...;  ; class  RooRealSumPdf;  Implements a PDF constructed from a sum of functions: More...;  ; class  RooRealVar;  Variable that can be changed from the outside. More...;  ; class  RooRealVarSharedProperties;  Implementation o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Roofitcore.html:16896,variab,variable,16896,doc/master/group__Roofitcore.html,https://root.cern,https://root.cern/doc/master/group__Roofitcore.html,1,['variab'],['variable']
Modifiability,"rofiledLikelihoodsTestStat(RooAbsPdf& nullPdf, RooAbsPdf& altPdf, const RooArgSet* altPOI = 0); static voidSetAlwaysReuseNLL(Bool_t flag); virtual voidSetConditionalObservables(const RooArgSet& set); voidSetMinimizer(const char* minimizer); voidSetPrintLevel(Int_t printLevel); voidSetReuseNLL(Bool_t flag); voidSetStrategy(Int_t strategy); voidSetSubtractMLE(bool subtract); voidSetTolerance(Double_t tol); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); RooStats::TestStatisticRooStats::TestStatistic::TestStatistic(); RooStats::TestStatisticRooStats::TestStatistic::TestStatistic(const RooStats::TestStatistic&). Data Members; private:. RooArgSet*fAltPOI; RooStats::ProfileLikelihoodTestStatfAltProfile; RooArgSet*fDetailedOutput; boolfDetailedOutputEnabled; RooStats::ProfileLikelihoodTestStatfNullProfile; Bool_tfSubtractMLE; static Bool_tfgAlwaysReuseNll. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetAlwaysReuseNLL(Bool_t flag); { fgAlwaysReuseNll = flag ; }. Double_t ProfiledLikelihood(RooAbsData& data, RooArgSet& poi, RooAbsPdf& pdf); returns -logL(poi, conditonal MLE of nuisance params); subtract off the global MLE or not depending on the option; It is the numerator or the denominator of the ratio (depending on the pdf); L.M. : not sure why this method is needed now. Double_t Evaluate(RooAbsData& data, RooArgSet& nullParamsOfInterest); evaluate the ratio of profile likelihood. RatioOfProfiledLikelihoodsTestStat(); Proof constructor. Don't use. RatioOfProfiledLikelihoodsTestStat(RooAbsPdf& nullPdf, RooAbsPdf& altPdf, const RooArgSet* altPOI = 0). Calculates the ratio of profiled likelihoods. 	 By default the calculation is:. 	 Lambda(mu_alt , conditional MLE for alt nuisance); 	log --------------------------------------------; 	 Lambda(mu_null , conditional MLE for null nuisance). 	where Lambda is the profile likeihood ra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__RatioOfProfiledLikelihoodsTestStat.html:2260,Inherit,Inheritance,2260,root/html602/RooStats__RatioOfProfiledLikelihoodsTestStat.html,https://root.cern,https://root.cern/root/html602/RooStats__RatioOfProfiledLikelihoodsTestStat.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rogress. ;  ; Bool_t IsMacro () const;  Returns kTRUE if neither redo nor undo action specified. ;  ; Bool_t IsRedoing () const;  Redo action is in progress. ;  ; virtual Bool_t IsSetter () const;  Returns kTRUE is command if Redo is the same as Undo function and is the setter action. ;  ; Bool_t IsUndoing () const;  Undo action is in progress. ;  ; virtual Long64_t Merge (TCollection *, TFileMergeInfo *);  Merge a collection of TQCommand. ;  ; virtual void Merge (TQCommand *c);  Add command to the list of merged commands. ;  ; virtual void SetArgs (Int_t nargs,...);  Set do/redo and undo parameters. ;  ; virtual void SetName (const char *name);  Sets name of the command. ;  ; virtual void SetRedoArgs (Int_t nargs,...);  Set redo parameters. ;  ; virtual void SetTitle (const char *title);  Sets description of the command. ;  ; virtual void SetUndoArgs (Int_t nargs,...);  Set undo parameters. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; virtual void AddFirst (TObject *obj, Option_t *opt);  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQUndoManager.html:4739,inherit,inherited,4739,doc/master/classTQUndoManager.html,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html,1,['inherit'],['inherited']
Modifiability,rogressbool progressDefinition RooAbsReal.h:490; RooAbsReal::PlotOpt::doeevalbool doeevalDefinition RooAbsReal.h:489; RooAbsReal::PlotOpt::addToWgtSelfdouble addToWgtSelfDefinition RooAbsReal.h:482; RooAbsReal::PlotOpt::shiftToZerobool shiftToZeroDefinition RooAbsReal.h:471; RooAbsReal::PlotOpt::projDataSetconst RooArgSet * projDataSetDefinition RooAbsReal.h:472; RooAbsReal::PlotOpt::binProjDatabool binProjDataDefinition RooAbsReal.h:468; RooAbsReal::PlotOpt::stypeScaleType stypeDefinition RooAbsReal.h:466; RooAbsReal::PlotOpt::curveNameSuffixconst char * curveNameSuffixDefinition RooAbsReal.h:486; RooAbsReal::PlotOpt::addToCurveNameconst char * addToCurveNameDefinition RooAbsReal.h:481; RooAbsReal::PlotOpt::numeeInt_t numeeDefinition RooAbsReal.h:487; RooAbsReal::PlotOpt::errorFRconst RooFitResult * errorFRDefinition RooAbsReal.h:491; RooAbsReal::PlotOpt::rangeHidouble rangeHiDefinition RooAbsReal.h:475; RooAbsReal::PlotOpt::numCPUInt_t numCPUDefinition RooAbsReal.h:484; RooAbsReal::PlotOpt::projSetconst RooArgSet * projSetDefinition RooAbsReal.h:469; RooAbsReal::PlotOpt::postRangeFracScalebool postRangeFracScaleDefinition RooAbsReal.h:476; RooAbsReal::PlotOpt::curveInvisiblebool curveInvisibleDefinition RooAbsReal.h:479; RooAbsReal::PlotOpt::curveNameconst char * curveNameDefinition RooAbsReal.h:480; RooAbsReal::PlotOpt::projDataconst RooAbsData * projDataDefinition RooAbsReal.h:467; RooAbsReal::PlotOpt::drawOptionsOption_t * drawOptionsDefinition RooAbsReal.h:464; RooAbsReal::PlotOpt::rangeLodouble rangeLoDefinition RooAbsReal.h:474; RooFit::UniqueIdA UniqueId can be added as a class member to enhance any class with a unique identifier for each inst...Definition UniqueId.h:39; RooFit::UniqueId::Value_tunsigned long Value_tDefinition UniqueId.h:41; TreeReadBufferDefinition TreeReadBuffer.h:18; mTMarker mDefinition textangle.C:8. roofitroofitcoreincRooAbsReal.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:50 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:61186,enhance,enhance,61186,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,1,['enhance'],['enhance']
Modifiability,"rojectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveProjected; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TEveElementListProjected (const TEveElementListProjected &);  ; TEveElementListProjected & operator= (const TEveElementListProjected &);  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator Pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveElementListProjected.html:29936,inherit,inherited,29936,doc/master/classTEveElementListProjected.html,https://root.cern,https://root.cern/doc/master/classTEveElementListProjected.html,2,['inherit'],['inherited']
Modifiability,"rojected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main transparency of projecteds if their transparency is the same as the old one. ;  ; virtual void PropagateRenderState (Bool_t rnr_self, Bool_t rnr_children);  Set render state of projecteds. ;  ; virtual void PropagateVizParams (TEveElement *el=nullptr);  Set visualization parameters of projecteds. ;  ; virtual void RemoveProjected (TEveProjected *p);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElementList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveProjectionManager.html:29106,inherit,inherited,29106,doc/master/classTEveProjectionManager.html,https://root.cern,https://root.cern/doc/master/classTEveProjectionManager.html,1,['inherit'],['inherited']
Modifiability,"rojectedAsElement ; (; ). inlineoverridevirtual . Returns this projected dynamic-casted to TEveElement. ; This is needed as class TEveProjected is used as secondary inheritance. ; Reimplemented from TEveProjected.; Definition at line 76 of file TEveTrackProjected.h. ◆ IsA(). TClass * TEveTrackListProjected::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TEveTrackList.; Definition at line 81 of file TEveTrackProjected.h. ◆ operator=(). TEveTrackListProjected & TEveTrackListProjected::operator= ; (; const TEveTrackListProjected & ; ). private . ◆ SetDepth() [1/2]. void TEveTrackListProjected::SetDepth ; (; Float_t ; d). overridevirtual . Set depth of all children inheriting from TEveTrackProjected. ; Reimplemented from TEveProjected.; Definition at line 290 of file TEveTrackProjected.cxx. ◆ SetDepth() [2/2]. void TEveTrackListProjected::SetDepth ; (; Float_t ; d, . TEveElement * ; el . ). virtual . Set depth of all children of el inheriting from TEveTrackProjected. ; Definition at line 298 of file TEveTrackProjected.cxx. ◆ SetDepthLocal(). void TEveTrackListProjected::SetDepthLocal ; (; Float_t ; d). overrideprotectedvirtual . This is not needed for functionality as SetDepth(Float_t d) is overriden – but SetDepthLocal() is abstract. ; Just emits a warning if called. ; Reimplemented from TEveProjected.; Definition at line 282 of file TEveTrackProjected.cxx. ◆ SetProjection(). void TEveTrackListProjected::SetProjection ; (; TEveProjectionManager * ; proj, . TEveProjectable * ; model . ). overridevirtual . This is virtual method from base-class TEveProjected. ; Reimplemented from TEveProjected.; Definition at line 268 of file TEveTrackProjected.cxx. ◆ Streamer(). void TEveTrackListProjected::Streamer ; (; TBuffer & ; ). overridevirtual . Reimplemented from TEveTrackList. ◆ StreamerNVirtual(). void TEveTrackListProjected::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 81 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackListProjected.html:44770,inherit,inheriting,44770,doc/master/classTEveTrackListProjected.html,https://root.cern,https://root.cern/doc/master/classTEveTrackListProjected.html,1,['inherit'],['inheriting']
Modifiability,"rojectedList;  ;  Protected Attributes inherited from TAttBBox; Float_t * fBBox;  ;  Protected Attributes inherited from TEveProjected; Float_t fDepth;  ; TEveProjectionManager * fManager;  ; TEveProjectable * fProjectable;  . Static Protected Attributes; static Bool_t fgDebugCornerPoints = kFALSE;  . Private Member Functions;  TEveBoxProjected (const TEveBoxProjected &);  ; TEveBoxProjected & operator= (const TEveBoxProjected &);  . Friends; class TEveBoxProjectedGL;  . Additional Inherited Members;  Public Types inherited from TEveShape; typedef std::vector< TEveVector2 >::iterator vVector2_i;  ; typedef std::vector< TEveVector2 > vVector2_t;  ;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBoxProjected.html:36395,inherit,inherited,36395,doc/master/classTEveBoxProjected.html,https://root.cern,https://root.cern/doc/master/classTEveBoxProjected.html,3,['inherit'],['inherited']
Modifiability,"rojectedPdf, RooWrapperPdf, and RooFixedProdPdf.; Definition at line 164 of file RooAbsReal.h. ◆ forceNumInt(). virtual void RooAbsReal::forceNumInt ; (; bool ; flag = true). inlinevirtual . Definition at line 169 of file RooAbsReal.h. ◆ functor(). RooFunctor * RooAbsReal::functor ; (; const RooArgList & ; obs, . const RooArgList & ; pars = RooArgList(), . const RooArgSet & ; nset = RooArgSet() . ); const. Return a RooFunctor object bound to this RooAbsReal with given definition of observables and parameters. ; Definition at line 3887 of file RooAbsReal.cxx. ◆ getAnalyticalIntegral(). Int_t RooAbsReal::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. virtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integration can be performed, zero should be returned. ; Reimplemented in RooArgusBG, RooBernstein, RooBifurGauss, RooBreitWigner, RooCBShape, RooChebychev, RooChiSquarePdf, RooCrystalBall, RooDstD0BG, RooExponential, RooGamma, RooGaussian, RooGaussModel, RooGExpModel, RooJohnson, RooKeysPdf, RooLandau, RooLegacyExpPoly, RooLognormal, RooNDKeysPdf, RooNovosibirsk, RooParametricStepFunction, RooPoisson, RooPolynomial, RooPowerSum, RooUniform, RooConvCoefVar, RooEfficiency, RooHistFunc, RooHistPdf, RooMultiVarGaussian, RooPolyVar, RooTruthModel, RooLegendre, RooNonCentralChiSquare, RooSpHarmonic, RooAddition, RooBinSamplingPdf, RooWrapperPdf, and RooFixedProdPdf.; Definition at line 368 of file RooAbsReal.cxx. ◆ getAnalyticalIntegralWN(). Int_t RooAbsReal::getAnalyticalIntegralWN ; (; RooArgSet & ; allDeps, . RooArgSet & ; analDeps, . const RooArgSet * ; normSet, . const char * ; rangeName = nullpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:107821,config,configuration,107821,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"rojectedPdf, RooWrapperPdf, and RooFixedProdPdf.; Definition at line 164 of file RooAbsReal.h. ◆ forceNumInt(). virtual void RooAbsReal::forceNumInt ; (; bool ; flag = true). inlinevirtual . Definition at line 169 of file RooAbsReal.h. ◆ functor(). RooFunctor * RooAbsReal::functor ; (; const RooArgList & ; obs, . const RooArgList & ; pars = RooArgList(), . const RooArgSet & ; nset = RooArgSet() . ); const. Return a RooFunctor object bound to this RooAbsReal with given definition of observables and parameters. ; Definition at line 3963 of file RooAbsReal.cxx. ◆ getAnalyticalIntegral(). Int_t RooAbsReal::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. virtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integration can be performed, zero should be returned. ; Reimplemented in RooArgusBG, RooBernstein, RooBifurGauss, RooBreitWigner, RooCBShape, RooChebychev, RooChiSquarePdf, RooCrystalBall, RooDstD0BG, RooExponential, RooGamma, RooGaussian, RooGaussModel, RooGExpModel, RooJohnson, RooKeysPdf, RooLandau, RooLegacyExpPoly, RooLognormal, RooNDKeysPdf, RooNovosibirsk, RooParametricStepFunction, RooPoisson, RooPolynomial, RooPowerSum, RooUniform, RooConvCoefVar, RooEfficiency, RooHistFunc, RooHistPdf, RooMultiVarGaussian, RooPolyVar, RooTruthModel, RooLegendre, RooNonCentralChiSquare, RooSpHarmonic, RooAddition, RooBinSamplingPdf, RooWrapperPdf, and RooFixedProdPdf.; Definition at line 366 of file RooAbsReal.cxx. ◆ getAnalyticalIntegralWN(). Int_t RooAbsReal::getAnalyticalIntegralWN ; (; RooArgSet & ; allDeps, . RooArgSet & ; analDeps, . const RooArgSet * ; normSet, . const char * ; rangeName = nullpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:109080,config,configuration,109080,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"rojection of the tree will be filled in histogram hname.; Note that the dimension of hname must match with the dimension of varexp. TSQLResult* Query(const char* varexp = """", const char* selection = """", Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); Loop over entries and return a TSQLResult object containing entries following selection. Long64_t ReadFile(const char* filename, const char* branchDescriptor = """"); Create or simply read branches from filename. if branchDescriptor = """" (default), it is assumed that the Tree descriptor; is given in the first line of the file with a syntax like; A/D:Table[2]/F:Ntracks/I:astring/C; otherwise branchDescriptor must be specified with the above syntax.; -If the type of the first variable is not specified, it is assumed to be ""/F""; -if the type of any other variable is not specified, the type of the previous; variable is assumed. eg; x:y:z (all variables are assumed of type ""F""; x/D:y:z (all variables are of type ""D""; x:y/D:z (x is type ""F"", y and z of type ""D""; -If the type is a string of characters. This will read; subsequent characters until a whitespace is found (whitespace; characters are considered to be blank, newline and tab). Lines in the input file starting with ""#"" are ignored.; This function will read and ignore any whitespace characters; (this includes blank spaces and the newline and tab characters). A TBranch object is created for each variable in the expression.; The total number of rows read from the file is returned. FILLING a TTree WITH MULTIPLE INPUT TEXT FILES. To fill a TTree with multiple input text files, proceed as indicated above; for the first input file and omit the second argument for subsequent calls; T.ReadFile(""file1.dat"",""branch descriptor"");; T.ReadFile(""file2.dat"");. Long64_t ReadStream(istream& inputStream, const char* branchDescriptor = """"); Create or simply read branches from an input stream. See reference information for TTree::ReadFile. void RecursiveRemove",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:111441,variab,variables,111441,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,2,['variab'],['variables']
Modifiability,"rojectionND (Int_t ndim, const Int_t *dim, Option_t *option="""") const;  ; void RebinnedAdd (const THnBase *h, Double_t c=1.);  Add contents of h scaled by c to this histogram: this = this + c * h Note that if h has Sumw2 set, Sumw2 is automatically called for this if not already set. ;  ; void Scale (Double_t c);  Scale contents and errors of this histogram by c: this = this * c It does not modify the histogram's number of entries. ;  ; void SetBinContent (const Int_t *idx, Double_t v);  ; void SetBinEdges (Int_t idim, const Double_t *bins);  Set the axis # of bins and bin limits on dimension idim. ;  ; void SetBinError (const Int_t *idx, Double_t e);  ; void SetBinError (Long64_t bin, Double_t e);  ; void SetEntries (Double_t entries);  ; void SetTitle (const char *title) override;  Change (i.e. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHn.html:9995,inherit,inherited,9995,doc/master/classTHn.html,https://root.cern,https://root.cern/doc/master/classTHn.html,1,['inherit'],['inherited']
Modifiability,"rojections or other mappings that need to be made to plot a multi-dimensional object onto a one-dimensional plot. ; Definition at line 45 of file RooPlot.h. Classes; class  DrawOpt;  . Public Types; using Items = std::vector< std::pair< TObject *, std::string > >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  . Public Member Functions;  RooPlot ();  Default constructor coverity[UNINIT_CTOR]. ;  ;  RooPlot (const char *name, const char *title, const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins) R__DEPRECATED(6;  Create an 1-dimensional with all properties taken from 'var', but with an explicit range [xmin,xmax] and a default binning of 'nbins'. ;  ;  RooPlot (const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins);  Create an 1-dimensional with all properties taken from 'var', but with an explicit range [xmin,xmax] and a default binning of 'nbins'. ;  ;  RooPlot (const RooAbsRealLValue &var1, const RooAbsRealLValue &var2);  Construct a two-dimensional RooPlot with ranges and properties taken from variables var1 and var2. ;  ;  RooPlot (const RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:2726,inherit,inherited,2726,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['inherit'],['inherited']
Modifiability,"rol printing of function evaluation counter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumIntConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumIntConfig(); Constructor. ~RooNumIntConfig(); Destructor. RooNumIntConfig(const RooNumIntConfig& other); Copy constructor. RooNumIntConfig& operator=(const RooNumIntConfig& other); Assignment operator from other RooNumIntConfig. Bool_t addConfigSection(const RooAbsIntegrator* proto, const RooArgSet& defaultConfig); Add a configuration section for a particular integrator. Integrator name and capabilities are; automatically determined from instance passed as 'proto'. The defaultConfig object is associated; as the default configuration for the integrator. RooArgSet& getConfigSection(const char* name); Return section with configuration parameters for integrator with given (class) name. const RooArgSet& getConfigSection(const char* name) const; Retrieve configuration information specific to integrator with given name. void setEpsAbs(Double_t newEpsAbs); Set absolute convergence criteria (convergence if abs(Err)<newEpsAbs). RooPrintable::StyleOption defaultPrintStyle(Option_t* opt) const. void setEpsRel(Double_t newEpsRel); Set relative convergence criteria (convergence if abs(Err)/abs(Int)<newEpsRel). void printMultiline(ostream& os, Int_t content, Bool_t verbose, TString indent = """") const; Detailed printing interface. RooCategory& method1D(); Return selected integration techniques for 1,2,N dimensional integrals. { return _method1D ; }. RooCategory& method2D(); { return _method2D ; }. RooCategory& methodND(); { return _methodND ; }. const RooCategory& method1D() const; { return _method1D ; }. const RooCategory& method2D() const; { return _method2D ; }. const RooCategory& methodND() const; { return _m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNumIntConfig.html:9007,config,configuration,9007,root/html528/RooNumIntConfig.html,https://root.cern,https://root.cern/root/html528/RooNumIntConfig.html,10,['config'],['configuration']
Modifiability,"rol printing of function evaluation counter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumIntConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumIntConfig(); Constructor. ~RooNumIntConfig(); Destructor. RooNumIntConfig(const RooNumIntConfig& other); Copy constructor. RooNumIntConfig& operator=(const RooNumIntConfig& other); Assignment operator from other RooNumIntConfig. Bool_t addConfigSection(const RooAbsIntegrator* proto, const RooArgSet& defaultConfig); Add a configuration section for a particular integrator. Integrator name and capabilities are; automatically determined from instance passed as 'proto'. The defaultConfig object is associated; as the default configuration for the integrator. RooArgSet& getConfigSection(const char* name); Return section with configuration parameters for integrator with given (class) name. const RooArgSet& getConfigSection(const char* name); Retrieve configuration information specific to integrator with given name. void setEpsAbs(Double_t newEpsAbs); Set absolute convergence criteria (convergence if abs(Err)<newEpsAbs). RooPrintable::StyleOption defaultPrintStyle(Option_t* opt) const. void setEpsRel(Double_t newEpsRel); Set relative convergence criteria (convergence if abs(Err)/abs(Int)<newEpsRel). void printMultiline(ostream& os, Int_t content, Bool_t verbose, TString indent = """") const; Detailed printing interface. RooCategory& method1D(); Return selected integration techniques for 1,2,N dimensional integrals. { return _method1D ; }. RooCategory& method2D(); { return _method2D ; }. RooCategory& methodND(); { return _methodND ; }. const RooCategory& method1D(); { return _method1D ; }. const RooCategory& method2D(); { return _method2D ; }. const RooCategory& methodND(); { return _methodND ; }. RooCategory",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumIntConfig.html:9021,config,configuration,9021,root/html526/RooNumIntConfig.html,https://root.cern,https://root.cern/root/html526/RooNumIntConfig.html,1,['config'],['configuration']
Modifiability,"rols precision, set fixed number of digits; AutoPrecision(int n) -- Controls precision. Number of shown digits is calculated from error; + n specified additional digits (1 is sensible default); VerbatimName(Bool_t flag) -- Put variable name in a \verb+ + clause. RooPlot* statOn(RooPlot* frame, const char* what, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.14999999999999999, Double_t xmax = 0.65000000000000002, Double_t ymax = 0.84999999999999998, const char* cutSpec = 0, const char* cutRange = 0, const RooCmdArg* formatCmd = 0); Implementation back-end of statOn() mehtod with named arguments. TH1 * fillHistogram(TH1* hist, const RooArgList& plotVars, const char* cuts = """", const char* cutRange = 0) const; Loop over columns of our tree data and fill the input histogram. Returns a pointer to the; input histogram, or zero in case of an error. The input histogram can be any TH1 subclass, and; therefore of arbitrary dimension. Variables are matched with the (x,y,...) dimensions of the input; histogram according to the order in which they appear in the input plotVars list. TList* split(const RooAbsCategory& splitCat, Bool_t createEmptyDataSets = kFALSE) const; Split dataset into subsets based on states of given splitCat in this dataset.; A TList of RooDataSets is returned in which each RooDataSet is named; after the state name of splitCat of which it contains the dataset subset.; The observables splitCat itself is no longer present in the sub datasets.; If createEmptyDataSets is kFALSE (default) this method only creates datasets for states; which have at least one entry The caller takes ownership of the returned list and its contents. RooPlot* plotOn(RooPlot* frame, const RooLinkedList& cmdList) const; Plot dataset on specified frame. By default an unbinned dataset will use the default binning of; the target frame. A binned dataset will by default retain its intrinsic binning. The following optional named arguments can be used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsData.html:31005,Variab,Variables,31005,root/html602/RooAbsData.html,https://root.cern,https://root.cern/root/html602/RooAbsData.html,2,['Variab'],['Variables']
Modifiability,"rom RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  . Protected Attributes; value_type _currentIndex {std::numeric_limits<int>::min()};  Current category state. ;  ; std::vector< std::string > _insertionOrder;  Keeps track in which order state numbers have been inserted. Make sure this is updated in recomputeShape(). ;  ; std::map< value_type, std::unique_ptr< RooCatType, std::function< void(RooCatType *)> > > _legacyStates;  ! Map holding pointers to RooCatType instances. Only for legacy interface. Don't use if possible. ;  ; std::map< std::string, value_type > _stateNames;  Map state names to index numbers. Make sure state names are updated in recomputeShape(). ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCategory.html:41656,inherit,inherited,41656,doc/master/classRooAbsCategory.html,https://root.cern,https://root.cern/doc/master/classRooAbsCategory.html,1,['inherit'],['inherited']
Modifiability,"rom TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void AssignCaloVizParameters (TEveCaloViz *cv);  Assign parameters from given model. ;  ; virtual void BuildCellIdCache ()=0;  ; void SetupColorHeight (Float_t value, Int_t slice, Float_t &height) const;  Set color and height for a given value and slice using slice color or TEveRGBAPalette. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCaloViz.html:32571,inherit,inherited,32571,doc/master/classTEveCaloViz.html,https://root.cern,https://root.cern/doc/master/classTEveCaloViz.html,1,['inherit'],['inherited']
Modifiability,"rom TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveSecondarySelectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static Int_t SizeofAtom (EQuadType_e qt);  Return size of given atom type. ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . Protected Attributes; Float_t fDefCoord;  ; Float_t fDefHeight;  ; Float_t fDefWidth;  ; EQuadType_e fQuadType;  ;  Protected Attributes inherited from TEveDigitSet; Bool_t fAntiFlick;  ; Callback_foo fCallbackFoo;  ; Color_t fColor;  The last / current idx added",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveQuadSet.html:39276,inherit,inherited,39276,doc/master/classTEveQuadSet.html,https://root.cern,https://root.cern/doc/master/classTEveQuadSet.html,1,['inherit'],['inherited']
Modifiability,"rom TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TPCON (const TPCON &);  copy constructor ;  ; virtual void FillTableOfCoSin (Double_t phi, Double_t angstep, Int_t n) const;  Fill the table of cos and sin to prepare drawing. ;  ; virtual void MakeTableOfCoSin () const;  Make table of cosine and sine. ;  ; TPCON & operator= (const TPCON &);  assignment operator ;  ; void SetPoints (Double_t *points) const override;  Create PCON points. ;  ; virtual Bool_t SetSegsAndPols (TBuffer3D &buffer) const;  Set segments and polygons. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fCoTab;  Table of sin(fPhi1) .... sin(fPhil+fDphi1) ;  ; Float_t fDphi1;  ; Float_t * fDz;  ; Int_t fNdiv;  ; Int_t fNz;  ; Float_t fPhi1;  Table of cos(fPhi1) .... cos(fPhil+fDphi1) ;  ; Float_t * fRmax;  ; Float_t * fRmin;  ; Double_t * fSiTab;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPCON.html:16523,inherit,inherited,16523,doc/master/classTPCON.html,https://root.cern,https://root.cern/doc/master/classTPCON.html,1,['inherit'],['inherited']
Modifiability,"rom TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Types inherited from ROOT::Experimental::REveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = BIT(0); , kCSCBTakeMotherAsMaster = BIT(1); , kCSCBApplyMainColorToAllChildren = BIT(2); , kCSCBApplyMainColorToMatchingChildren = BIT(3); , ;   kCSCBApplyMainTransparencyToAllChildren = BIT(4); , kCSCBApplyMainTransparencyToMatchingChildren = BIT(5). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Member Functions inherited from ROOT::Experimental::REveElement; virtual void AnnihilateRecursively ();  Protected member function called from REveElement::Annihilate(). ;  ; void assign_element_id_recurisvely ();  ; void assign_scene_recursively (REveScene *s);  ; ElementId_t get_mother_id () const;  ; ElementId_t get_scene_id () const;  ; virtual void PreDeleteElement ();  Vertex / normal / triangle index information for rendering. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html:22671,inherit,inherited,22671,doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,2,['inherit'],['inherited']
Modifiability,"rom TEvePointSelectorConsumer; enum  ETreeVarType_e { kTVT_XYZ; , kTVT_RPhiZ; };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEvePointSet; void AssertIntIdsSize ();  Assert that size of IntId array is compatible with the size of the point array. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TPointSet3D; void CopyIds (const TPointSet3D &t);  Copy id objects from point-set 't'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLine.html:47370,inherit,inherited,47370,doc/master/classTEveLine.html,https://root.cern,https://root.cern/doc/master/classTEveLine.html,2,['inherit'],['inherited']
Modifiability,"rom TGLScene; TGLContextIdentity * fGLCtxIdentity;  ; Bool_t fInSmartRefresh;  ; Float_t fLastLineWidthScale;  ; Float_t fLastPointSizeScale;  ; LogicalShapeMap_t fLogicalShapes;  ; PhysicalShapeMap_t fPhysicalShapes;  ; LogicalShapeMap_t fSmartRefreshCache;  ;  Protected Attributes inherited from TGLSceneBase; Bool_t fAutoDestruct;  ; TGLBoundingBox fBoundingBox;  ; Bool_t fBoundingBoxValid;  ; TGLClip * fClip;  ; Bool_t fDoClipCheck;  ; Bool_t fDoFrustumCheck;  ; Short_t fLOD;  ; UInt_t fMinorStamp;  ; TString fName;  ; Float_t fOLLineW;  ; UInt_t fSceneID;  ; Bool_t fSelectable;  ; Short_t fStyle;  ; UInt_t fTimeStamp;  ; TString fTitle;  ; ViewerList_t fViewers;  ; Float_t fWFLineW;  ;  Protected Attributes inherited from TGLLockable; ELock fLock;  . Private Member Functions;  TGLScenePad (const TGLScenePad &)=delete;  ; TGLScenePad & operator= (const TGLScenePad &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGLScene; typedef std::vector< DrawElement_t * >::iterator DrawElementPtrVec_i;  ; typedef std::vector< DrawElement_t * > DrawElementPtrVec_t;  ; typedef std::vector< DrawElement_t >::iterator DrawElementVec_i;  ; typedef std::vector< DrawElement_t > DrawElementVec_t;  ; typedef std::map< TObject *, TGLLogicalShape * > LogicalShapeMap_t;  ; typedef LogicalShapeMap_t::const_iterator LogicalShapeMapCIt_t;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLScenePad.html:23001,inherit,inherited,23001,doc/master/classTGLScenePad.html,https://root.cern,https://root.cern/doc/master/classTGLScenePad.html,1,['inherit'],['inherited']
Modifiability,rom TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fColor;  color value of the button ;  ; TGColorPopup * fColorPopup;  color popup associated ;  ; TGGC fDrawGC;  drawing GC ;  ; TGPosition fPressPos;  position of frame on button press event ;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorSelect.html:31478,inherit,inherited,31478,doc/master/classTGColorSelect.html,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html,4,['inherit'],['inherited']
Modifiability,"rom TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TH1Editor.h>. Inheritance diagram for TH1Editor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TH1Editor(). TH1Editor::TH1Editor ; (; const TGWindow * ; p = nullptr, . Int_t ; width = 140, . Int_t ; height = 30, . UInt_t ; options = kChildFrame, . Pixel_t ; back = GetDefaultFrameBackground() . ). Constructor of histogram attribute GUI. ; Definition at line 150 of file TH1Editor.cxx. ◆ ~TH1Editor(). TH1Editor::~TH1Editor ; (; ). override . Destructor of TH1 editor. ; Definition at line 514 of file TH1Editor.cxx. Member Function Documentation. ◆ AcceptModel(). Bool_t TH1Editor::AcceptModel ; (; TObject * ; model). overridevirtual . Check if object is able to configure with this editor. ; Reimplemented from TGedFrame.; Definition at line 588 of file TH1Editor.cxx. ◆ BuildHistAddComboBox(). TGComboBox * TH1Editor::BuildHistAddComboBox ; (; TGFrame * ; parent, . Int_t ; id . ). staticprotected . Create Line/Bar combo box. ; Definition at line 2337 of file TH1Editor.cxx. ◆ BuildHistCoordsComboBox(). TGComboBox * TH1Editor::BuildHistCoordsComboBox ; (; TGFrame * ; parent, . Int_t ; id . ). staticprotected . Create coordinate system type combo box. ; Definition at line 2302 of file TH1Editor.cxx. ◆ BuildHistErrorComboBox(). TGComboBox * TH1Editor::BuildHistErrorComboBox ; (; TGFrame * ; parent, . Int_t ; id . ). staticprotected . Create error type combo box. ; Definition at line 2320 of file TH1Editor.cxx. ◆ BuildHistTypeComboBox(). TGComboBox * TH1Editor::BuildHistTypeComboBox ; (; TGFrame * ; parent, . Int_t ; id . ). staticprotected . Create histogram type combo box. ; Definition at line 2282 of file TH1Editor.cxx. ◆ BuildPercentComboBox(). T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1Editor.html:44844,config,configure,44844,doc/master/classTH1Editor.html,https://root.cern,https://root.cern/doc/master/classTH1Editor.html,1,['config'],['configure']
Modifiability,"rom TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context in use. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . Protected Attributes; Bool_t f3DCorner;  draw 3D corner (drawn by default) ;  ; Int_t fNpart;  number of parts ;  ; Int_t * fParts;  size of parts (in percent of total width) ;  ; TGStatusBarPart ** fStatusPart;  frames containing statusbar text ;  ; Int_t * fXt;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGStatusBar.html:27023,inherit,inherited,27023,doc/master/classTGStatusBar.html,https://root.cern,https://root.cern/doc/master/classTGStatusBar.html,1,['inherit'],['inherited']
Modifiability,"rom TGraph; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGraphErrors; Double_t ** Allocate (Int_t size) override;  Allocate internal data structures for newsize points. ;  ; void CopyAndRelease (Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) override;  Copy and release. ;  ; Bool_t CopyPoints (Double_t **arrays, Int_t ibegin, Int_t iend, Int_t obegin) override;  Copy errors from fEX and fEY to arrays[0] and arrays[1] or to fEX and fEY if arrays == 0 and ibegin != iend. ;  ; Bool_t CtorAllocate ();  Constructor allocate. ;  ; Bool_t DoMerge (const TGraph *g) override;  Protected function to perform the merge operation of a graph with errors. ;  ; void FillZero (Int_t begin, Int_t end, Bool_t from_ctor=kTRUE) override;  Set zero values for point arrays in the range [begin, end]. ;  ; void SwapPoints (Int_t pos1, Int_t pos2) override;  Swap points. ;  ; void UpdateArrays (const std::vector< Int_t > &sorting_indices, Int_t numSortedPoints, Int_t low) override;  Update the fX, fY, fEX, and fEY arrays with the sorted v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPolar.html:33550,inherit,inherited,33550,doc/master/classTGraphPolar.html,https://root.cern,https://root.cern/doc/master/classTGraphPolar.html,2,['inherit'],['inherited']
Modifiability,"rom TMVA::MethodBase; virtual std::vector< Double_t > GetDataMvaValues (DataSet *data=nullptr, Long64_t firstEvt=0, Long64_t lastEvt=-1, Bool_t logProgress=false);  get all the MVA values for the events of the given Data type ;  ; const TString & GetInternalVarName (Int_t ivar) const;  ; const TString & GetOriginalVarName (Int_t ivar) const;  ; const TString & GetWeightFileDir () const;  ; Bool_t HasTrainingTree () const;  ; Bool_t Help () const;  ; Bool_t IgnoreEventsWithNegWeightsInTraining () const;  ; Bool_t IsConstructedFromWeightFile () const;  ; Bool_t IsNormalised () const;  ; virtual void MakeClassSpecific (std::ostream &, const TString &="""") const;  ; virtual void MakeClassSpecificHeader (std::ostream &, const TString &="""") const;  ; void NoErrorCalc (Double_t *const err, Double_t *const errUpper);  ; void SetNormalised (Bool_t norm);  ; void SetWeightFileDir (TString fileDir);  set directory of weight file ;  ; void SetWeightFileName (TString);  set the weight file name (depreciated) ;  ; void Statistics (Types::ETreeType treeType, const TString &theVarName, Double_t &, Double_t &, Double_t &, Double_t &, Double_t &, Double_t &);  calculates rms,mean, xmin, xmax of the event variable this can be either done for the variables as they are or for normalised variables (in the range of 0-1) if ""norm"" is set to kTRUE ;  ; Bool_t TxtWeightsOnly () const;  ; Bool_t Verbose () const;  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnabled () const;  ; void ResetSetFlag ();  resets the IsSet flag for all declare options to be called before options are read from stream ;  ; void WriteOptionsReferenceToFile ();  write complete options to output stream ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodC50.html:23303,variab,variable,23303,doc/master/classTMVA_1_1MethodC50.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodC50.html,55,"['inherit', 'variab']","['inherited', 'variable', 'variables']"
Modifiability,"rom TMaterial; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Float_t * fAmixt;  ; Int_t fNmixt;  ; Float_t * fWmixt;  ; Float_t * fZmixt;  ;  Protected Attributes inherited from TMaterial; Float_t fA;  ; Float_t fDensity;  ; Float_t fInterLength;  ; Int_t fNumber;  ; Float_t fRadLength;  ; Float_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  ESta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMixture.html:12690,inherit,inherited,12690,doc/master/classTMixture.html,https://root.cern,https://root.cern/doc/master/classTMixture.html,1,['inherit'],['inherited']
Modifiability,"rom TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TH1 * fHistogram;  resulting histogram ;  ; Int_t fMaxPeaks;  Maximum number of peaks to be found. ;  ; Int_t fNPeaks;  number of peaks found ;  ; Double_t * fPosition;  [fNPeaks] array of current peak positions ;  ; Double_t * fPositionX;  [fNPeaks] X position of peaks ;  ; Double_t * fPositionY;  [fNPeaks] Y position of peaks ;  ; Double_t fResolution;  NOT USED resolution of the neighboring peaks ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Int_t fgAverageWindow = 3;  Average window of searched peaks. ;  ; static Int_t fgIterations = 3;  Maximum number of decon iterations (default=3) ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSpectrum2.h>. Inheritance diagram for TSpectrum2:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkBackIncreasingWindow ; kBackDecreasingWindow ; kBac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2.html:15592,inherit,inherited,15592,doc/master/classTSpectrum2.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2.html,1,['inherit'],['inherited']
Modifiability,"rom TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TH1 * fHistogram;  resulting histogram ;  ; Int_t fMaxPeaks;  Maximum number of peaks to be found. ;  ; Int_t fNPeaks;  number of peaks found ;  ; Double_t * fPosition;  [fNPeaks] array of current peak positions ;  ; Double_t * fPositionX;  [fNPeaks] X position of peaks ;  ; Double_t * fPositionY;  [fNPeaks] Y position of peaks ;  ; Double_t fResolution;  NOT USED resolution of the neighboring peaks ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Int_t fgAverageWindow = 3;  Average window of searched peaks. ;  ; static Int_t fgIterations = 3;  Maximum number of decon iterations (default=3) ;  . Private Member Functions;  TSpectrum (const TSpectrum &);  ; TSpectrum & operator= (const TSpectrum &);  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSpectrum.h>. Inheritance diagram for TSpectrum:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Docume",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum.html:15470,inherit,inherited,15470,doc/master/classTSpectrum.html,https://root.cern,https://root.cern/doc/master/classTSpectrum.html,1,['inherit'],['inherited']
Modifiability,"rom TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void GetAlignPoint (Double_t &x0, Double_t &y0, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length, const Short_t align);  Alignment. ;  ; void GetSize (Double_t &x0, Double_t &y0, Double_t &x1, Double_t &y1, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Get the text bounding box. ;  ; TMathText & operator= (const TMathText &);  TMathText Painter. ;  ; void Render (const Double_t x, const Double_t y, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Render the text. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMathText.html:21409,inherit,inherited,21409,doc/master/classTMathText.html,https://root.cern,https://root.cern/doc/master/classTMathText.html,3,['inherit'],['inherited']
Modifiability,rom TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; double fZ {0};  Z position of text. ;  ;  Protected Attributes inherited from TLatex; const Char_t * fError {nullptr};  ! error code ;  ; Double_t fFactorPos;  ! Relative position of subscripts and superscripts ;  ; Double_t fFactorSize;  ! Relative size of subscripts and superscripts ;  ; Bool_t fItalic;  ! Currently inside italic operator ;  ; Int_t fLimitFactorSize;  lower bound for subscripts/superscripts size ;  ; Double_t fOriginSize;  Font size of the starting font. ;  ; Bool_t fShow;  ! is true during the second pass (Painting) ;  ; std::vector< TLatexFormSize > fTabSize;  ! array of values for the different zones ;  ;  Protected Attributes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAnnotation.html:25122,inherit,inherited,25122,doc/master/classTAnnotation.html,https://root.cern,https://root.cern/doc/master/classTAnnotation.html,3,['inherit'],['inherited']
Modifiability,"rom TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; TLatexFormSize Anal1 (const TextSpec_t &spec, const Char_t *t, Int_t length);  Analyse function. ;  ; TLatexFormSize Analyse (Double_t x, Double_t y, const TextSpec_t &spec, const Char_t *t, Int_t length);  Analyse and paint the TLatex formula. ;  ; Int_t CheckLatexSyntax (TString &text);  Check if the Latex syntax is correct. ;  ; void DrawCircle (Double_t x1, Double_t y1, Double_t r, const TextSpec_t &spec);  Draw an arc of ellipse in a Latex formula (right or left parenthesis) ;  ; void DrawLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2, const TextSpec_t &spec);  Draw a line in a Latex formula. ;  ; void DrawParenthesis (Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLatex.html:28347,inherit,inherited,28347,doc/master/classTLatex.html,https://root.cern,https://root.cern/doc/master/classTLatex.html,3,['inherit'],['inherited']
Modifiability,rom TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Attributes; bool fAsyncReading;  ; Int_t fCycle;  ; bool fEmpty;  ; std::unique_ptr< TMutex > fIOMutex;  ; Int_t fNFound;  ! number of blocks that were found in the cache ;  ; Int_t fNMissed;  ! number of blocks that were not found in the cache and were unzipped ;  ; Int_t fNseekMax;  ! fNseek can change so we need to know its max size ;  ; Int_t fNStalls;  ! number of hits which caused a stall ;  ; Int_t fNUnzip;  ! number of blocks that were unzipped ;  ; bool fParallel;  Indicate if we want to activate the parallelism (for this instance) ;  ; Long64_t fUnzipBufferSize;  ! Max Size for the ready unzipped blocks (default is 2*fBufferSize) ;  ; Int_t fUnzipGroupSize;  ! Min accumulated size of a group of baskets ready to be unzipped by a IMT task ;  ; UnzipState_t fUnzipState;  ; std::unique_ptr< ROOT::Experimental::TTaskGroup > fUnzipTaskGroup;  ;  Protected Attributes inherited from TTreeCache; bool fAutoCreated {false};  ! true if cache was automatically created ;  ; TObjArray * fBranches {nullptr};  ! List of branches to be stored in the cache ;  ; TList * fBrNames {nullptr};  ! list of branch names in the cache ;  ; Long64_t fCurrentClusterStart {-1};  ! Start of the cluster(s) where the current content was picked out ;  ; bool fEnabled {true};  ! cache enabled for cached reading ;  ; Long64_t fEntryCurrent {-1};  ! current lowest entry number in the cache ;  ; Long64_t fEntryMax {1};  ! last entry in the cache ;  ; Long64_t fEntryMin {0};  ! first entry in the cache ;  ; Long64_t fEntryNext {-1};  ! next entry number where cache must be filled ;  ; Int_t fFillTimes {0};  ! how many times we can fill the current buffer ;  ; bool fFirstBuffer {true};  ! true if first buffer is used for prefetching ;  ; Long64_t fFirstEntry {-1};  ! save the value of the first entry ;  ; Long64_t fFirstMiss {-1};  ! set to the event # of the first miss. ;  ; bool fFirstTime {true};  ! save the fact that we proc,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTreeCacheUnzip.html:19943,inherit,inherited,19943,doc/v632/classTTreeCacheUnzip.html,https://root.cern,https://root.cern/doc/v632/classTTreeCacheUnzip.html,2,['inherit'],['inherited']
Modifiability,"rom TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TCondition.h>. Inheritance diagram for TCondition:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TCondition() [1/2]. TCondition::TCondition ; (; const TCondition & ; ). privatedelete . ◆ TCondition() [2/2]. TCondition::TCondition ; (; TMutex * ; m = nullptr). Create a condition variable. ; The actual condition implementation will be provided via the TThreadFactory. If no external mutex is provided one will be created. Use GetMutex() to get this mutex and use it before calling Signal() or Broadcast(). ; Definition at line 36 of file TCondition.cxx. ◆ ~TCondition(). TCondition::~TCondition ; (; ). virtual . Clean up condition variable. ; Definition at line 54 of file TCondition.cxx. Member Function Documentation. ◆ Broadcast(). Int_t TCondition::Broadcast ; (; ). inline . Definition at line 54 of file TCondition.h. ◆ Class(). static TClass * TCondition::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TCondition::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TCondition::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 56 of file TCondition.h. ◆ DeclFileName(). static const char * TCondition::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 56 of file TCondition.h. ◆ GetMutex(). TMutex * TCondition::GetMutex ; (; ); const. Get internally created mutex. ; Use it to lock resources before calling Signal() or Broadcast(). Returns 0 if external mutex was provided in TCondition ctor. ; Definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCondition.html:11244,variab,variable,11244,doc/master/classTCondition.html,https://root.cern,https://root.cern/doc/master/classTCondition.html,1,['variab'],['variable']
Modifiability,"rom TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMatrixD fU;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 ))",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompChol.html:12494,inherit,inherited,12494,doc/master/classTDecompChol.html,https://root.cern,https://root.cern/doc/master/classTDecompChol.html,1,['inherit'],['inherited']
Modifiability,"rom TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooSimWSTool.h>. Inheritance diagram for RooSimWSTool::SplitRule:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ SplitRule(). RooSimWSTool::SplitRule::SplitRule ; (; const char * ; pdfName = """"). inline . Definition at line 77 of file RooSimWSTool.h. Member Function Documentation. ◆ configure(). void RooSimWSTool::SplitRule::configure ; (; const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {} . ). protected . Construct the SplitRule object from a list of named arguments past to RooSimWSTool::build This method parses any SplitParam and SplitParamComstrained argument in the list. ; Definition at line 692 of file RooSimWSTool.cxx. ◆ splitParameter(). void RooSimWSTool::SplitRule::splitParameter ; (; const char * ; paramList, . const char * ; categoryList . ). Specify that parameters names listed in paramNameList be split in (product of) category(s) listed in categoryNameList. ; Definition at line 636 of file RooSimWSTool.cxx. ◆ splitParameterConstrained(). void RooSimWSTool::SplitRule::splitParameterConstrained ; (; const char * ; paramNameList, . const char * ; categoryNameList, . const char * ; remainderStateName . ). Specify that parameters names listed in paramNameList be sp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html:12301,config,configure,12301,doc/master/classRooSimWSTool_1_1SplitRule.html,https://root.cern,https://root.cern/doc/master/classRooSimWSTool_1_1SplitRule.html,1,['config'],['configure']
Modifiability,"rom TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; RooFormula & getFormula () const;  Return reference to internal RooFormula object. ;  . Private Attributes; RooListProxy _actualVars;  Actual parameters used by formula engine. ;  ; TString _formExpr;  Formula expression string. ;  ; RooFormula * _formula = nullptr;  ! Formula engine ;  ; RooArgSet * _nset {nullptr};  ! Normalization set to be passed along to contents ;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFormulaVar.html:57419,inherit,inherited,57419,doc/master/classRooFormulaVar.html,https://root.cern,https://root.cern/doc/master/classRooFormulaVar.html,3,['inherit'],['inherited']
Modifiability,"rom TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; Int_t fCAMax;  ; Int_t fCAMin;  ; UChar_t * fColorArray;  ; Color_t fDefaultColor;  ; UChar_t fDefaultRGBA [4];  ; Bool_t fFixColorRange;  ; Int_t fHighLimit;  ; Bool_t fInterpolate;  ; Int_t fLowLimit;  ; Int_t fMaxVal;  ; Int_t fMinVal;  ; Int_t fNBins;  ; Color_t fOverColor;  ; Int_t fOverflowAction;  ; UChar_t fOverRGBA [4];  ; Bool_t fShowDefValue;  ; Double_t fUIc;  ; Bool_t fUIDoubleRep;  ; Double_t fUIf;  ; Color_t fUnderColor;  ; Int_t fUnderflowAction;  ; UChar_t fUnderRGBA [4];  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TEveRefCnt; Int_t fRefCount;  . Static Protected Attributes; static TEveRGBAPalette * fgDefaultPalette;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TEveRGBAPalette (const TEveRGBAPalette &);  ; TEveRGBAPalette & operator= (const TEveRGBAPalette &);  . Friends; class TEveRGBAPaletteEditor;  ; class TEveRGBAPaletteOverlay;  ; class TEveRGBAPaletteSubEditor;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *rece",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveRGBAPalette.html:18258,inherit,inherited,18258,doc/master/classTEveRGBAPalette.html,https://root.cern,https://root.cern/doc/master/classTEveRGBAPalette.html,1,['inherit'],['inherited']
Modifiability,"rom XML, produced by ConvertToXML() method. ;  ; static TString ConvertToXML (const TObject *obj, Bool_t GenericLayout=kFALSE, Bool_t UseNamespaces=kFALSE);  Converts object, inherited from TObject class, to XML string GenericLayout defines layout choice for XML file UseNamespaces allow XML namespaces. ;  ; static TString ConvertToXML (const void *obj, const TClass *cl, Bool_t GenericLayout=kFALSE, Bool_t UseNamespaces=kFALSE);  Converts any type of object to XML string. ;  ; static const char * DeclFileName ();  ; template<class T > ; static Bool_t FromXML (T *&obj, const char *xml, Bool_t GenericLayout=kFALSE, Bool_t UseNamespaces=kFALSE);  ; template<class T > ; static TString ToXML (const T *obj, Bool_t GenericLayout=kFALSE, Bool_t UseNamespaces=kFALSE);  ;  Static Public Member Functions inherited from TBufferText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CompactFloatString (char *buf, unsigned len);  method compress float string, excluding exp and/or move float point ;  ; static const char * ConvertDouble (Double_t v, char *buf, unsigned len, Bool_t not_optimize=kFALSE);  convert float to string with configured format ;  ; static const char * ConvertFloat (Float_t v, char *buf, unsigned len, Bool_t not_optimize=kFALSE);  convert float to string with configured format ;  ; static const char * DeclFileName ();  ; static const char * GetDoubleFormat ();  return current printf format for double members, default ""%.14e"" ;  ; static const char * GetFloatFormat ();  return current printf format for float members, default ""%e"" ;  ; static void SetDoubleFormat (const char *fmt=""%.14e"");  set printf format for double members, default ""%.14e"" use it after SetFloatFormat, which also overwrites format for doubles ;  ; static void SetFloatFormat (const char *fmt=""%e"");  set printf format for float/double members, default ""%e"" to change format only for doubles, use SetDoubleFormat ;  ;  Stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferXML.html:35401,inherit,inherited,35401,doc/master/classTBufferXML.html,https://root.cern,https://root.cern/doc/master/classTBufferXML.html,3,"['config', 'inherit']","['configured', 'inherited']"
Modifiability,"rom allDeps to analDeps. Bool_t matchArgs(const RooArgSet& allDeps, RooArgSet& analDeps, 			 const RooArgSet& refset); Utility function for use in getAnalyticalIntegral(). If the; contents of 'refset' occur in set 'allDeps' then the arguments; held in 'refset' are copied from allDeps to analDeps. Bool_t matchArgsByName(const RooArgSet& allArgs, RooArgSet& matchedArgs, const TList& nameList) const; Check if allArgs contains matching elements for each name in nameList. If it does,; add the corresponding args from allArgs to matchedArgs and return kTRUE. Otherwise; return kFALSE and do not change matchedArgs. RooNumIntConfig* defaultIntegratorConfig(); Returns the default numeric integration configuration for all RooAbsReals. RooNumIntConfig* specialIntegratorConfig() const; Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned. RooNumIntConfig* specialIntegratorConfig(Bool_t createOnTheFly); Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned,; unless createOnTheFly is kTRUE in which case a clone of the default integrator; configuration is created, installed as specialized configuration, and returned. const RooNumIntConfig* getIntegratorConfig(); Return the numeric integration configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. RooNumIntConfig* getIntegratorConfig(); Return the numeric integration configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. void setIntegratorConfig(const RooNumIntConfig& config); Set the given integrator configuration as default numeric integration; configurat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:59022,config,configuration,59022,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,1,['config'],['configuration']
Modifiability,"rom proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooCFunction2Ref< VO, VI1, VI2 > func;  ; RooRealProxy x;  ; RooRealProxy y;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction2PdfBinding.html:67935,config,configuration,67935,doc/master/classRooCFunction2PdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction2PdfBinding.html,1,['config'],['configuration']
Modifiability,"rom slave); TStringfGroupslave's group id; TStringfImageslave's image name; TFileHandler*fInputinput handler related to this slave; TStringfMsdmass storage domain of slave; TStringfNameslave's hostname; TStringfOrdinalslave's ordinal number; Int_tfParallelnumber of active slaves; Int_tfPerfIdxrelative CPU performance index; Int_tfPortslave's port number; TProof*fProofproof cluster to which slave belongs; TStringfProofWorkDirbase proofserv working directory (info obtained from slave); Int_tfProtocolslave's protocol level; TStringfROOTVersROOT version run by worker; Float_tfRealTimereal time spent executing commands (info obtained from slave); TStringfSessionTagunique tag for ths worker process; TSlave::ESlaveTypefSlaveTypetype of slave (either kMaster or kSlave); TSocket*fSocketsocket to slave; Int_tfStatusremote return status; TStringfUserslave's user id; TStringfWorkDirslave's working directory (info obtained from slave). private:. static TSlave_tfgTXSlaveHook. Class Charts. Inheritance Chart:. TObject. ←; TSlave. ←. TSlaveLite. TXSlave. Function documentation; TSlave(const char* host, const char* ord, Int_t perf, const char* image, TProof* proof, Int_t stype, const char* workdir, const char* msd, Int_t = 1); Create a PROOF slave object. Called via the TProof ctor. TSlave(); Default constructor used by derived classes. void Init(const char* host, Int_t port, Int_t stype); Init a PROOF slave object. Called via the TSlave ctor.; The Init method is technology specific and is overwritten by derived; classes. Int_t SetupServ(Int_t stype, const char* conffile); Init a PROOF slave object. Called via the TSlave ctor.; The Init method is technology specific and is overwritten by derived; classes. void Init(TSocket* s, Int_t stype); Init a PROOF slave object using the connection opened via s. Used to; avoid double opening when an attempt via TXSlave found a remote proofd. ~TSlave(); Destroy slave. void Close(Option_t* opt = """"); Close slave socket. Int_t Compare(const TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSlave.html:9013,Inherit,Inheritance,9013,root/html602/TSlave.html,https://root.cern,https://root.cern/root/html602/TSlave.html,2,['Inherit'],['Inheritance']
Modifiability,"rom streamer classtable Data returned in form of statement, where direct access to values are possible. ;  ; Int_t GetLocking ();  Return current locking mode for that file. ;  ; Bool_t GetLongString (Long64_t objid, Int_t strid, TString &value);  Returns value of string, extracted from special table, where long strings are stored. ;  ; TSQLResult * GetNormalClassData (Long64_t objid, TSQLClassInfo *sqlinfo);  Method return request result for specified objid from normal classtable. ;  ; TSQLResult * GetNormalClassDataAll (Long64_t minobjid, Long64_t maxobjid, TSQLClassInfo *sqlinfo);  Return data for several objects from the range from normal class table. ;  ; InfoListRet GetStreamerInfoListImpl (bool) final;  Read back streamer infos from database List of streamer infos is always stored with key:id 0, which is not shown in normal keys list. ;  ; Bool_t HasTable (const char *name);  Test if table name exists. ;  ; void IncrementModifyCounter ();  Update value of modify counter in config table Modify counter used to indicate that something was changed in database. ;  ; void InitSqlDatabase (Bool_t create);  initialize sql database and correspondent structures identical to TFile::Init() function ;  ; Int_t IsLongStringCode (Long64_t objid, const char *value);  Checks if this is long string code returns 0, if not or string id. ;  ; Bool_t IsReadAccess ();  dummy, in future should check about read access to database ;  ; Bool_t IsTablesExists ();  Checks if main keys table is existing. ;  ; Bool_t IsWriteAccess ();  Checkis, if lock is free in configuration tables. ;  ; Bool_t ProduceClassSelectQuery (TVirtualStreamerInfo *info, TSQLClassInfo *sqlinfo, TString &columns, TString &tables, Int_t &tablecnt);  used by MakeClassSelectQuery method to add columns from table of class, specified by TVirtualStreamerInfo structure ;  ; Bool_t ReadConfigurations ();  read table configurations as special table ;  ; TObject * ReadSpecialObject (Long64_t keyid, TObject *obj=nullptr);  R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLFile.html:43702,config,config,43702,doc/master/classTSQLFile.html,https://root.cern,https://root.cern/doc/master/classTSQLFile.html,1,['config'],['config']
Modifiability,"rom training. Double_t GetSumWeights(const TMVA::DecisionTree::EventConstList* validationSample) const; calculate the normalization factor for a pruning validation sample. UInt_t CountLeafNodes(TMVA::Node* n = NULL); return the number of terminal nodes in the sub-tree below Node n. void DescendTree(TMVA::Node* n = NULL); descend a tree to find all its leaf nodes. void PruneNode(TMVA::DecisionTreeNode* node); prune away the subtree below the node. void PruneNodeInPlace(TMVA::DecisionTreeNode* node); prune a node temporaily (without actually deleting its decendants; which allows testing the pruned tree quality for many different; pruning stages without ""touching"" the tree. TMVA::Node* GetNode(ULong_t sequence, UInt_t depth); retrieve node from the tree. Its position (up to a maximal tree depth of 64); is coded as a sequence of left-right moves starting from the root, coded as; 0-1 bit patterns stored in the ""long-integer"" (i.e. 0:left ; 1:right. void GetRandomisedVariables(Bool_t* useVariable, UInt_t* variableMap, UInt_t& nVars). Double_t TrainNodeFast(const TMVA::DecisionTree::EventConstList& eventSample, TMVA::DecisionTreeNode* node); Decide how to split a node using one of the variables that gives; the best separation of signal/background. In order to do this, for each; variable a scan of the different cut values in a grid (grid = fNCuts) is; performed and the resulting separation gains are compared.; in addition to the individual variables, one can also ask for a fisher; discriminant being built out of (some) of the variables and used as a; possible multivariate split. std::vector<Double_t> GetFisherCoefficients(const TMVA::DecisionTree::EventConstList& eventSample, UInt_t nFisherVars, UInt_t* mapVarInFisher); calculate the fisher coefficients for the event sample and the variables used. Double_t TrainNodeFull(const TMVA::DecisionTree::EventConstList& eventSample, TMVA::DecisionTreeNode* node). TMVA::DecisionTreeNode* GetEventNode(const TMVA::Event& e) const; get ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__DecisionTree.html:13154,variab,variableMap,13154,root/html534/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html534/TMVA__DecisionTree.html,2,['variab'],['variableMap']
Modifiability,"rom versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; 2117/// In case of error returns the ""!"" string.; 2118 ; 2119TString TString::UItoa(UInt_t value, Int_t base); 2120{; 2121 std::string buf;; 2122 // check that the base if valid; 2123 if (base < 2 || base > 36) {; 2124 Error(""TString::UItoa"", ""base %d is not supported. Supported bases are {2,3,...,36}."",base);; 2125 return (TString(""!""));; 2126 }; 2127 buf.reserve(35); // Pre-allocate enough space (35=kMaxDigits); 2128 UInt_t quotient = value;; 2129 // Translating number to string with base:; 2130 do {; 2131 buf += ""0123456789abcdefghijklmnopqrstuvwxyz""[ quotient % base ];; 2132 quotient /= base;; 2133 } while (quotient);; 2134 std::reverse(buf.begin(), buf.end());; 2135 return (TString(buf.data()));; 2136}; 2137 ; 2138////////////////////////////////////////////////////////////////////////////////; 2139/// Converts a Long64_t to a TString with respect to the base specified (2-36).; 2140/// Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; 2141/// http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; 2142/// In case of error returns the ""!"" string.; 2143 ; 2144TString TString::LLtoa(Long64_t value, Int_t base); 2145{; 2146 std::string buf;; 2147 // check that the base if valid; 2148 if (base < 2 || base > 36) {; 2149 Error(""TString::LLtoa"", ""base %d is not supported. Supported bases are {2,3,...,36}."",base);; 2150 return (TString(""!""));; 2151 }; 2152 buf.reserve(35); // Pre-allocate enough space (35=kMaxDigits); 2153 Long64_t quotient = value;; 2154 // Translating number to string with base:; 2155 do {; 2156 buf += ""0123456789abcdefghijklmnopqrstuvwxyz""[ TMath::Abs(quotient % base) ];; 2157 quotient /= base;; 2158 } while (quotient);; 2159 // Append the negative sign; 2160 if (value < 0) buf += '-';; 2161 std::reverse(buf.begin(), buf.end());; 2162 return (TString(buf.data()));; 2163}; 2164 ; 2165////////////////////////////////////////////////////////////////////////////////; 2166//",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8cxx_source.html:67514,enhance,enhanced,67514,doc/master/TString_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TString_8cxx_source.html,2,"['adapt', 'enhance']","['adapted', 'enhanced']"
Modifiability,"rom weight file ; Definition at line 157 of file MethodFisher.cxx. ◆ ~MethodFisher(). TMVA::MethodFisher::~MethodFisher ; (; void ; ). virtual . destructor ; Definition at line 216 of file MethodFisher.cxx. Member Function Documentation. ◆ AddWeightsXMLTo(). void TMVA::MethodFisher::AddWeightsXMLTo ; (; void * ; parent); const. virtual . create XML description of Fisher classifier ; Implements TMVA::MethodBase.; Definition at line 618 of file MethodFisher.cxx. ◆ Class(). static TClass * TMVA::MethodFisher::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::MethodFisher::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::MethodFisher::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 154 of file MethodFisher.h. ◆ CreateRanking(). const TMVA::Ranking * TMVA::MethodFisher::CreateRanking ; (; ). virtual . computes ranking of input variables ; Implements TMVA::MethodBase.; Definition at line 541 of file MethodFisher.cxx. ◆ DeclareOptions(). void TMVA::MethodFisher::DeclareOptions ; (; ). privatevirtual . MethodFisher options: format and syntax of option string: ""type"" where type is ""Fisher"" or ""Mahalanobis"". ; Implements TMVA::MethodBase.; Definition at line 194 of file MethodFisher.cxx. ◆ DeclFileName(). static const char * TMVA::MethodFisher::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 154 of file MethodFisher.h. ◆ GetCov_BetweenClass(). void TMVA::MethodFisher::GetCov_BetweenClass ; (; void ; ). private . the matrix of covariance 'between class' reflects the dispersion of the events of a class relative to the global center of gravity of all the class hence the separation between classes ; Definition at line 417 of file MethodFisher.cxx. ◆ GetCov_Full(). void TMVA::MethodFisher::GetCov_Full ; (; void ; ). private . compute full covariance matrix fro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html:34258,variab,variables,34258,doc/master/classTMVA_1_1MethodFisher.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html,1,['variab'],['variables']
Modifiability,"rom' on disk to a 'To' in memory.; 1418 From temp;; 1419 buf >> temp;; 1420 *(To*)( ((char*)addr) + config->fOffset ) = (To)temp;; 1421 return 0;; 1422 }; 1423 };; 1424 ; 1425 template <typename To>; 1426 struct ConvertBasicType<BitsMarker,To> {; 1427 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config); 1428 {; 1429 // Simple conversion from a 'From' on disk to a 'To' in memory; 1430 UInt_t temp;; 1431 buf >> temp;; 1432 ; 1433 if ((temp & kIsReferenced) != 0) {; 1434 HandleReferencedTObject(buf,addr,config);; 1435 }; 1436 ; 1437 *(To*)( ((char*)addr) + config->fOffset ) = (To)temp;; 1438 return 0;; 1439 }; 1440 };; 1441 ; 1442 template <typename From, typename To>; 1443 struct ConvertBasicType<WithFactorMarker<From>,To> {; 1444 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config); 1445 {; 1446 // Simple conversion from a 'From' on disk to a 'To' in memory.; 1447 TConfWithFactor *conf = (TConfWithFactor *)config;; 1448 From temp;; 1449 buf.ReadWithFactor(&temp, conf->fFactor, conf->fXmin);; 1450 *(To*)( ((char*)addr) + config->fOffset ) = (To)temp;; 1451 return 0;; 1452 }; 1453 };; 1454 ; 1455 template <typename From, typename To>; 1456 struct ConvertBasicType<NoFactorMarker<From>,To> {; 1457 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config); 1458 {; 1459 // Simple conversion from a 'From' on disk to a 'To' in memory.; 1460 TConfNoFactor *conf = (TConfNoFactor *)config;; 1461 From temp;; 1462 buf.ReadWithNbits(&temp, conf->fNbits);; 1463 *(To*)( ((char*)addr) + config->fOffset ) = (To)temp;; 1464 return 0;; 1465 }; 1466 };; 1467 ; 1468 class TConfigurationPushDataCache : public TConfiguration {; 1469 // Configuration object for the PushDataCache case.; 1470 public:; 1471 TVirtualArray *fOnfileObject;; 1472 ; 1473 TConfigurationPushDataCache(TVirtualStreamerInfo *info, TVirtualArray *onfileObject, Int_t offset) :; 1474 TConfiguration(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:60292,config,config,60292,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"romDir(TObject* obj); virtual voidRooAbsData::resetCache(); virtual voidRooAbsData::setArgStatus(const RooArgSet& set, Bool_t active). Data Members; public:. enum RooAbsData::ErrorType { Poisson; SumW2; None; Auto; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. TIterator*RooAbsData::_cacheIter! Iterator over cached variables; RooArgSetRooAbsData::_cachedVars! External variables cached with this data set; TDirectory*RooDirItem::_dir! Associated directory; RooAbsDataStore*RooAbsData::_dstoreData storage implementation; TIterator*RooAbsData::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; RooArgSetRooAbsData::_varsDimensions of this data set; RooArgSet_varsNoWgtVars without weight variable ; RooRealVar*_wgtVarPointer to weight variable (if set) ; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDataSet(); Default constructor for persistence. RooDataSet(const char* name, const char* title, const RooArgSet& vars, RooCmdArg arg1, RooCmdArg arg2 = RooCmdArg(), RooCmdArg arg3 = RooCmdArg(), RooCmdArg arg4 = RooCmdArg(), RooCmdArg arg5 = RooCmdArg(), RooCmdArg arg6 = RooCmdArg(), RooCmdArg arg7 = RooCmdArg(), RooCmdArg arg8 = RooCmdArg()); Construct an unbinned dataset from a RooArgSet defining the dimensions of the data space. Optionally, data; can be imported at the time of construction. This constructor takes the following optional arguments. Import(TTree*) -- Import contents of given TTree",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDataSet.html:16372,variab,variables,16372,root/html526/RooDataSet.html,https://root.cern,https://root.cern/root/html526/RooDataSet.html,5,['variab'],"['variable', 'variables']"
Modifiability,"romDir(TObject* obj); virtual voidRooAbsData::resetCache(); virtual voidRooAbsData::setArgStatus(const RooArgSet& set, Bool_t active). Data Members; public:. enum RooAbsData::ErrorType { Poisson; SumW2; None; Auto; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. TIterator*RooAbsData::_cacheIter! Iterator over cached variables; RooArgSetRooAbsData::_cachedVars! External variables cached with this data set; TDirectory*RooDirItem::_dir! Associated directory; RooAbsDataStore*RooAbsData::_dstoreData storage implementation; TIterator*RooAbsData::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; RooArgSetRooAbsData::_varsDimensions of this data set; RooArgSet_varsNoWgtVars without weight variable ; RooRealVar*_wgtVarPointer to weight variable (if set) ; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDataSet(); Default constructor for persistence. RooDataSet(const char* name, const char* title, const RooArgSet& vars, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg()); Construct an unbinned dataset from a RooArgSet defining the dimensions of the data space. Optionally, data; can be imported at the time of construction. This constructor takes the following optional arg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooDataSet.html:16390,variab,variables,16390,root/html528/RooDataSet.html,https://root.cern,https://root.cern/root/html528/RooDataSet.html,5,['variab'],"['variable', 'variables']"
Modifiability,"romFile (const TEntryListFromFile &);  ; TEntryListFromFile & operator= (const TEntryListFromFile &);  . Additional Inherited Members;  Public Types inherited from TEntryList; enum  { kBlockSize = 64000; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEntryList; void GetFileName (const char *filename, TString &fn, bool *=nullptr);  To be able to re-localize the entry-list we identify the file by just the name and the anchor, i.e. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TEntryListFromFile.h>. Inheritance diagram for TEntryListFromFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEntryListFromFile() [1/3]. TEntryListFromFile::TEntryListFromFile ; (; const TEntryListFromFile & ; ). private . ◆ TEntryListFromFile() [2/3]. TEntryListFromFile::TEntryListFromFile ; (; ). Definition at line 43 of file TEntryListFromFile.cxx. ◆ TEntryListFromFile() [3/3]. TEntryListFromFile::TEntryListFromFile ; (; const char * ; filename, . const char * ; listname, . Int_t ; nfiles . ). File naming c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEntryListFromFile.html:19013,inherit,inherited,19013,doc/master/classTEntryListFromFile.html,https://root.cern,https://root.cern/doc/master/classTEntryListFromFile.html,2,['inherit'],['inherited']
Modifiability,"romStreamvoid ReadVarsFromStream(std::istream &istr)Read the variables (name, min, max) for a given data transformation method from the stream.Definition MethodBase.cxx:1725; TMVA::MethodBase::AddWeightsXMLTovirtual void AddWeightsXMLTo(void *parent) const =0; TMVA::MethodBase::Initvirtual void Init()=0; TMVA::MethodBase::ReadSpectatorsFromXMLvoid ReadSpectatorsFromXML(void *specnode)read spectator info from XMLDefinition MethodBase.cxx:1877; TMVA::MethodBase::GetTrainingHistoryvirtual const std::vector< Float_t > & GetTrainingHistory(const char *)Definition MethodBase.h:233; TMVA::MethodBase::fTmpEventconst Event * fTmpEventDefinition MethodBase.h:445; TMVA::MethodBase::fExitFromTrainingbool fExitFromTrainingDefinition MethodBase.h:449; TMVA::MethodBase::SetNormalisedvoid SetNormalised(Bool_t norm)Definition MethodBase.h:497; TMVA::MethodBase::SetTestvarNamevoid SetTestvarName(const TString &v="""")Definition MethodBase.h:341; TMVA::MethodBase::ReadVariablesFromXMLvoid ReadVariablesFromXML(void *varnode)read variable info from XMLDefinition MethodBase.cxx:1837; TMVA::MethodBase::fConstructedFromWeightFileBool_t fConstructedFromWeightFileDefinition MethodBase.h:620; TMVA::MethodBase::fHelpBool_t fHelphelp flagDefinition MethodBase.h:679; TMVA::MethodBase::GetNvarUInt_t GetNvar() constDefinition MethodBase.h:344; TMVA::MethodBase::OptimizeTuningParametersvirtual std::map< TString, Double_t > OptimizeTuningParameters(TString fomType=""ROCIntegral"", TString fitType=""FitGA"")call the Optimizer with the set of parameters and ranges that are meant to be tuned.Definition MethodBase.cxx:623; TMVA::MethodBase::SetTrainTimevoid SetTrainTime(Double_t trainTime)Definition MethodBase.h:161; TMVA::MethodBase::GetXmaxDouble_t GetXmax(Int_t ivar) constDefinition MethodBase.h:357; TMVA::MethodBase::GetMulticlassTrainingEfficiencyvirtual std::vector< Float_t > GetMulticlassTrainingEfficiency(std::vector< std::vector< Float_t > > &purity)Definition MethodBase.cxx:2715; TMVA::MethodBase::f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodBase_8h_source.html:57953,variab,variable,57953,doc/master/MethodBase_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodBase_8h_source.html,1,['variab'],['variable']
Modifiability,"rome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooNumIntConfig() [1/2]. RooNumIntConfig::RooNumIntConfig ; (; ). Constructor. ; Definition at line 67 of file RooNumIntConfig.cxx. ◆ RooNumIntConfig() [2/2]. RooNumIntConfig::RooNumIntConfig ; (; const RooNumIntConfig & ; other). Copy constructor. ; Definition at line 103 of file RooNumIntConfig.cxx. ◆ ~RooNumIntConfig(). RooNumIntConfig::~RooNumIntConfig ; (; ). override . Destructor. ; Definition at line 93 of file RooNumIntConfig.cxx. Member Function Documentation. ◆ addConfigSection(). bool RooNumIntConfig::addConfigSection ; (; std::string const & ; name, . const RooArgSet & ; inDefaultConfig, . bool ; canIntegrate1D, . bool ; canIntegrate2D, . bool ; canIntegrateND, . bool ; canIntegrateOpenEnded . ). Add a configuration section for a particular integrator. ; Integrator name and capabilities are automatically determined from instance passed as 'proto'. The defaultConfig object is associated as the default configuration for the integrator. ; Definition at line 166 of file RooNumIntConfig.cxx. ◆ Class(). static TClass * RooNumIntConfig::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooNumIntConfig::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooNumIntConfig::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 87 of file RooNumIntConfig.h. ◆ DeclFileName(). static const char * RooNumIntConfig::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 87 of file RooNumIntConfig.h. ◆ defaultConfig(). RooNumIntConfig & RooNumIntConfig::defaultConfig ; (; ). static . Return reference to instance of default numeric integrator configuration object. ; Definition at line 44 of file RooNumIntConfig.cxx. ◆ defaultPrintStyle(). RooPrintable::StyleOption RooNumIntConfig::defaultPrintSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumIntConfig.html:16120,config,configuration,16120,doc/master/classRooNumIntConfig.html,https://root.cern,https://root.cern/doc/master/classRooNumIntConfig.html,1,['config'],['configuration']
Modifiability,"rome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofLite() [1/3]. TProofLite::TProofLite ; (; const TProofLite & ; ). private . ◆ TProofLite() [2/3]. TProofLite::TProofLite ; (; ). inlineprotected . Definition at line 87 of file TProofLite.h. ◆ TProofLite() [3/3]. TProofLite::TProofLite ; (; const char * ; url, . const char * ; conffile = kPROOF_ConfFile, . const char * ; confdir = kPROOF_ConfDir, . Int_t ; loglevel = 0, . const char * ; alias = 0, . TProofMgr * ; mgr = 0 . ). Create a PROOF environment. ; Starting PROOF involves either connecting to a master server, which in turn will start a set of slave servers, or directly starting as master server (if master = """"). Masterurl is of the form: [proof[s]://]host[:port]. Conffile is the name of the config file describing the remote PROOF cluster (this argument alows you to describe different cluster configurations). The default is proof.conf. Confdir is the directory where the config file and other PROOF related files are (like motd and noproof files). Loglevel is the log level (default = 1). User specified custom config files will be first looked for in $HOME/.conffile. ; Definition at line 72 of file TProofLite.cxx. ◆ ~TProofLite(). TProofLite::~TProofLite ; (; ). override . Destructor. ; Definition at line 375 of file TProofLite.cxx. Member Function Documentation. ◆ CancelStagingDataSet(). Bool_t TProofLite::CancelStagingDataSet ; (; const char * ; dataset). overridevirtual . Cancels a dataset staging request. ; Returns kTRUE on success, kFALSE on failure. Dataset not found equals to a failure. PROOF-Lite re-implementation of the equivalent function in TProofServ. ; Reimplemented from TProof.; Definition at line 2195 of file TProofLite.cxx. ◆ Class(). static TClass * TProofLite::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofLite::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:47423,config,config,47423,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,1,['config'],['config']
Modifiability,"ronType GetType () const;  Returns the neuron type. ;  ; Double_t GetValue () const;  Computes the output using the appropriate function and all the weighted inputs, or uses the branch as input. ;  ; Double_t GetWeight () const;  ; TClass * IsA () const override;  ; void SetDEDw (Double_t in);  Sets the derivative of the total error wrt the neuron weight. ;  ; void SetNewEvent () const;  Inform the neuron that inputs of the network have changed, so that the buffered values have to be recomputed. ;  ; void SetNormalisation (Double_t mean, Double_t RMS);  Sets the normalization variables. ;  ; void SetWeight (Double_t w);  Sets the neuron weight to w. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TTreeFormula * UseBranch (TTree *, const char *);  Sets a formula that can be used to make the neuron an input. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNeuron.html:3902,inherit,inherited,3902,doc/master/classTNeuron.html,https://root.cern,https://root.cern/doc/master/classTNeuron.html,1,['inherit'],['inherited']
Modifiability,"ronment. void ClearInputFiles(); Clear list containing macro files passed as program arguments.; This method is called from TRint::Run() to ensure that the macro; files are only executed the first time Run() is called. char * Argv(Int_t index) const; Return specified argument. void GetOptions(Int_t* argc, char** argv); Get and handle command line options. Arguments handled are removed; from the argument array. The following arguments are handled:; -b : run in batch mode without graphics; -x : exit on exception; -e expression: request execution of the given C++ expression.; -n : do not execute logon and logoff macros as specified in .rootrc; -q : exit after processing command line macro files; -l : do not show splash screen; The last three options are only relevant in conjunction with TRint.; The following help and info arguments are supported:; -? : print usage; -h : print usage; --help : print usage; -config : print ./configure options; -memstat : run with memory usage monitoring; In addition to the above options the arguments that are not options,; i.e. they don't start with - or + are treated as follows (and also removed; from the argument array):; <dir> is considered the desired working directory and available; via WorkingDirectory(), if more than one dir is specified the; first one will prevail; <file> if the file exists its added to the InputFiles() list; <file>.root are considered ROOT files and added to the InputFiles() list,; the file may be a remote file url; <macro>.C are considered ROOT macros and also added to the InputFiles() list; In TRint we set the working directory to the <dir>, the ROOT files are; connected, and the macros are executed. If your main TApplication is not; TRint you have to decide yourself what to do whith these options.; All specified arguments (also the ones removed) can always be retrieved; via the TApplication::Argv() method. void HandleIdleTimer(); Handle idle timeout. When this timer expires the registered idle command; will be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TApplication.html:15398,config,configure,15398,root/html602/TApplication.html,https://root.cern,https://root.cern/root/html602/TApplication.html,4,['config'],['configure']
Modifiability,"roof and display it into a new text window. ;  ; void ShowStatus ();  Retrieve and display Proof status. ;  ; void StartupMessage (char *msg, Bool_t stat, Int_t curr, Int_t total);  Handle startup message (connection progress) coming from Proof session. ;  ; void StartViewer ();  Start TreeViewer from selected TChain. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate ();  Terminate Session : save configuration, clean temporary files and close Proof connections. ;  ; void UpdateListOfPackages ();  Update the list of packages. ;  ; void UpdateListOfProofs ();  Update list of existing Proof sessions. ;  ; void UpdateListOfSessions ();  Update list of existing Proof sessions. ;  ; void WriteConfiguration (const char *filename=nullptr);  Save actual configuration in config file ""filename"". ;  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMainFrame () override;  TGMainFrame destructor. ;  ; virtual Bool_t BindKey (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Bind key to a window. ;  ; void DontCallClose ();  Typically call this method in the slot connected to the CloseWindow() signal to prevent the calling of the default or any derived CloseWindow() methods to prevent premature or double deletion of this window. ;  ; TList * GetBindList () const;  ; void GetClassHints (const char *&className, const char *&resourceName) const;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; const char * GetIconPixmap () const;  ; void GetMWMHints (UInt_t &value, UInt_t &funcs, UInt_t &input) const;  ; const char * GetWindowName () const;  ; void GetWMPosition (Int_t &x, Int_t &y) const;  ; void GetWMSize (UInt_t &w, UInt_t &h) const;  ; void GetWMSizeHints (UInt_t &wmin, UInt_t &hmin, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionViewer.html:4849,inherit,inherited,4849,doc/master/classTSessionViewer.html,https://root.cern,https://root.cern/doc/master/classTSessionViewer.html,1,['inherit'],['inherited']
Modifiability,"roofDrawProfile2D ; (; ). inline . Definition at line 193 of file TProofDraw.h. Member Function Documentation. ◆ Begin(). void TProofDrawProfile2D::Begin ; (; TTree * ; t). overridevirtual . See TProofDraw::Begin(). ; Reimplemented from TProofDraw.; Definition at line 1416 of file TProofDraw.cxx. ◆ Class(). static TClass * TProofDrawProfile2D::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofDrawProfile2D::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProofDrawProfile2D::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 199 of file TProofDraw.h. ◆ DeclFileName(). static const char * TProofDrawProfile2D::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 199 of file TProofDraw.h. ◆ DefVar(). void TProofDrawProfile2D::DefVar ; (; ). overrideprotectedvirtual . Define relevant variables. ; Implements TProofDraw.; Definition at line 1353 of file TProofDraw.cxx. ◆ DoFill(). void TProofDrawProfile2D::DoFill ; (; Long64_t ; entry, . Double_t ; w, . const Double_t * ; v . ). overrideprotectedvirtual . Fills the histogram with the given values. ; Implements TProofDraw.; Definition at line 1523 of file TProofDraw.cxx. ◆ Init(). void TProofDrawProfile2D::Init ; (; TTree * ; tree). overridevirtual . See TProofDraw::Init(). ; Reimplemented from TProofDraw.; Definition at line 1330 of file TProofDraw.cxx. ◆ IsA(). TClass * TProofDrawProfile2D::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TProofDraw.; Definition at line 199 of file TProofDraw.h. ◆ SlaveBegin(). void TProofDrawProfile2D::SlaveBegin ; (; TTree * ; tree). overridevirtual . See TProofDraw::SlaveBegin(). ; Reimplemented from TProofDraw.; Definition at line 1449 of file TProofDraw.cxx. ◆ Streamer(). void TProofDrawProfile2D::Streamer ; (; TBuffer &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawProfile2D.html:15636,variab,variables,15636,doc/master/classTProofDrawProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProofDrawProfile2D.html,1,['variab'],['variables']
Modifiability,"root [2] l.Print(); TLine X1=0.000000 Y1=0.000000 X2=0.000000 Y2=0.000000; root [3] l.SetX1(10); root [4] l.SetY1(11); root [5] l.Print(); TLine X1=10.000000 Y1=11.000000 X2=0.000000 Y2=0.000000; root [6] .g l; .g l; ROOT_prompt_0 1 (address: NA) class TLine l, size = 72; root [7] l.GetX1();; root [8] l.GetX1(); (Double_t) 1.000000e+01; Note some of the features of the ROOT prompt: - Terminating with ‘;‘ is not required, see “C++ Extensions To Ease Scripting” below. - Emacs style command line editing. - Raw interpreter commands start with a dot; .g l for instance shows the interpreter information on the global called l. - To show the result of an expression just do not type the trailing ;.; For the further examples we will “abbreviate” root [0] etc by root [].; root [] .class TLine; ===========================================================================; class TLine; SIZE: 72 FILE: TLine.h LINE: 39; Base classes: --------------------------------------------------------; 0x20 public TAttBBox2D; List of member variables --------------------------------------------------; TLine.h 42 0x28 protected: Double_t fX1; TLine.h 43 0x30 protected: Double_t fY1; TLine.h 44 0x38 protected: Double_t fX2; TLine.h 45 0x40 protected: Double_t fY2; TLine.h 50 0x0 public: enum TLine::<anonymous at /home/axel/build/root/trunk/obj/include/TLine.h:49:4> kLineNDC; TLine.h 51 0x0 public: enum TLine::<anonymous at /home/axel/build/root/trunk/obj/include/TLine.h:49:4> kVertical; TLine.h 52 0x0 public: enum TLine::<anonymous at /home/axel/build/root/trunk/obj/include/TLine.h:49:4> kHorizontal; TLine.h 94 0x0 private: static class TClass *fgIsA; List of member functions :---------------------------------------------------; filename line:size busy function type and name; (compiled) (NA):(NA) 0 public: TLine();; (compiled) (NA):(NA) 0 public: TLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2);; (compiled) (NA):(NA) 0 public: TLine(const TLine &line);; (compiled) (NA):(NA) 0 public: virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:257652,variab,variables,257652,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,"root; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; number of variables is 300; vars_time0[0],vars_time0[1],vars_time0[2],vars_time0[3],vars_time0[4],vars_time0[5],vars_time0[6],vars_time0[7],vars_time0[8],vars_time0[9],vars_time0[10],vars_time0[11],vars_time0[12],vars_time0[13],vars_time0[14],vars_time0[15],vars_time0[16],vars_time0[17],vars_time0[18],vars_time0[19],vars_time0[20],vars_time0[21],vars_time0[22],vars_time0[23],vars_time0[24],vars_time0[25],vars_time0[26],vars_time0[27],vars_time0[28],vars_time0[29],vars_time1[0],vars_time1[1],vars_time1[2],vars_time1[3],vars_time1[4],vars_time1[5],vars_time1[6],vars_time1[7],vars_time1[8],vars_time1[9],vars_time1[10],vars_time1[11],vars_time1[12],vars_time1[13],vars_time1[14],vars_time1[15],vars_time1[16],vars_time1[17],vars_time1[18],vars_time1[19],vars_time1[20],vars_time1[21],vars_time1[22],vars_time1[23],vars_time1[24],vars_time1[25],vars_time1[26],vars_time1[27],vars_time1[28],vars_time1[29],vars_time2[0],vars_time2[1],vars_time2[2],vars_time2[3],vars_time2[4],vars_time2[5],vars_time2[6],vars_time2[7],vars_time2[8],vars_time2[9],vars_time2[10],vars_time2[11],vars_time2[12],vars_time2[13],vars_time2[14],vars_time2[15],vars_time2[16],vars_time2[17],vars_time2[18],vars_time2[19],vars_time2[20],vars_time2[21],vars_time2[22],vars_time2[23",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:755,variab,variables,755,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['variab'],['variables']
Modifiability,"roperties and checks. Beside reproducing the true distribution, ; bear remarkable properties:. Each -distribution is properly normalized:. (4). For any event:. (5). That is to say that, summing up the ; ; , one recovers the data sample distribution in , and summing up the number of events entering in a ; for a given species, one recovers the yield of the species, as provided by the fit. The property 4 is implemented in the TSPlot class as a check. the sum of the statistical uncertainties per bin. (6). reproduces the statistical uncertainty on the yield , as provided by the fit: ; .; Because of that and since the determination of the yields is optimal; when obtained using a Likelihood fit, one can conclude that the; technique is itself an optimal method to reconstruct distributions of control variables. Different steps followed by TSPlot. A maximum Likelihood fit is performed to obtain the yields of the various species.; The fit relies on discriminating variables  uncorrelated with a control variable :; the later is therefore totally absent from the fit. The weights are calculated using Eq. (2) where the covariance matrix is taken from Minuit. Histograms of  are filled by weighting the events with . Error bars per bin are given by Eq. (6). The ; reproduce the true distributions of the species in the control variable , within the above defined statistical uncertainties. Illustrations. To illustrate the technique, one considers an example derived from the analysis where . have been first used (charmless B decays). One is dealing with a data; sample in which two species are present: the first is termed signal and; the second background. A maximum Likelihood fit is performed to obtain; the two yields and . The fit relies on two discriminating variables collectively denoted  which are chosen within three possible variables denoted , and .; The variable which is not incorporated in  is used as the control variable . The six distributions of the three variables are assumed t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSPlot.html:4502,variab,variables,4502,root/html602/TSPlot.html,https://root.cern,https://root.cern/root/html602/TSPlot.html,8,['variab'],"['variable', 'variables']"
Modifiability,"roposal function for MCMC integration; Double_tfSizesize of the test (eg. specified rate of Type I error); TStringTNamed::fTitleobject title; Bool_tfUseKeyswhether to use kernel estimation to determine interval; Bool_tfUseSparseHistwhether to use sparse histogram (if using hist at all). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MCMCCalculator(); default constructor. MCMCCalculator(RooAbsData& data, RooAbsPdf& pdf, const RooArgSet& paramsOfInterest, RooAbsPdf& priorPdf); Constructor for automatic configuration with basic settings. Uses a; UniformProposal,10,000 iterations, 40 burn in steps, 50 bins for each; RooRealVar, determines interval by keys, and turns on sparse histogram; mode in the MCMCInterval. Finds a 95% confidence interval. MCMCCalculator(RooAbsData& data, RooAbsPdf& pdf, const RooArgSet& paramsOfInterest); same constructor as before but not passing a prior pdf. MCMCCalculator(RooAbsData& data, const RooStats::ModelConfig& model); Constructor for automatic configuration with basic settings. Uses a; UniformProposal,10,000 iterations, 40 burn in steps, 50 bins for each; RooRealVar, determines interval by keys, and turns on sparse histogram; mode in the MCMCInterval. Finds a 95% confidence interval. MCMCCalculator(RooAbsData& data, const RooStats::ModelConfig& model, RooStats::ProposalFunction& proposalFunction, Int_t numIters, RooArgList* axes = NULL, Double_t size = 0.05); alternate constructor, specifying many arguments. void SetModel(const RooStats::ModelConfig& model); set the model. MCMCCalculator(RooAbsData& data, RooAbsPdf& pdf, const RooArgSet& paramsOfInterest, RooAbsPdf& priorPdf, RooStats::ProposalFunction& proposalFunction, Int_t numIters, RooArgList* axes = NULL, Double_t size = 0.05). void SetupBasicUsage(); Setting automatic configuration with basic settings. Uses a; UniformProposal,10,000 iterations, 40 burn in steps, 50 bins for each; RooRealVar, determines interval by keys, and turns on spar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__MCMCCalculator.html:9365,config,configuration,9365,root/html526/RooStats__MCMCCalculator.html,https://root.cern,https://root.cern/root/html526/RooStats__MCMCCalculator.html,1,['config'],['configuration']
Modifiability,"ropy ();  ; virtual Double_t GetSeparationIndex (const Double_t s, const Double_t b);  Cross Entropy defined as: ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::SeparationBase;  SeparationBase ();  Constructor. ;  ;  SeparationBase (const SeparationBase &s);  Copy constructor. ;  ; virtual ~SeparationBase ();  ; const TString & GetName ();  ; virtual Double_t GetSeparationGain (const Double_t nSelS, const Double_t nSelB, const Double_t nTotS, const Double_t nTotB);  Separation Gain: the measure of how the quality of separation of the sample increases by splitting the sample e.g. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::SeparationBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMVA::SeparationBase; TString fName;  ; Double_t fPrecisionCut;  . #include <TMVA/CrossEntropy.h>. Inheritance diagram for TMVA::CrossEntropy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ CrossEntropy() [1/2]. TMVA::CrossEntropy::CrossEntropy ; (; ). inline . Definition at line 48 of file CrossEntropy.h. ◆ CrossEntropy() [2/2]. TMVA::CrossEntropy::CrossEntropy ; (; const CrossEntropy & ; g). inline . Definition at line 51 of file CrossEntropy.h. ◆ ~CrossEntropy(). virtual TMVA::CrossEntropy::~CrossEntropy ; (; ). inlinevirtual . Definition at line 54 of file CrossEntropy.h. Member Function Documentation. ◆ Class(). static TCl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1CrossEntropy.html:1539,inherit,inherited,1539,doc/master/classTMVA_1_1CrossEntropy.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1CrossEntropy.html,1,['inherit'],['inherited']
Modifiability,"ror (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetMaxDimension ();  return fgMaxDimension (cannot be inline) ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Static Public Attributes; static Int_t fgMaxDimension = 4;  = 4 ;  ; static Int_t fgMaxParameters = 9;  = 9 ;  . Protected Member Functions; void ClearPrevious ();  Resets all the variables of the class. ;  ; TTreeDrawArgsParser::EOutputType DefineType ();  Put the type of the draw result into fOutputType and return it. ;  ; bool ParseName (TString name);  Syntax: ;  ; bool ParseOption ();  Check if options contain some data important for choosing the type of the drawn object. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeDrawArgsParser.html:11027,inherit,inherited,11027,doc/master/classTTreeDrawArgsParser.html,https://root.cern,https://root.cern/doc/master/classTTreeDrawArgsParser.html,1,['inherit'],['inherited']
Modifiability,"ror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2C operator* (Float_t c1, TH2C const &h1);  Operator *. ;  ; TH2C operator* (TH2C const &h1, Float_t c1);  ; TH2C operator* (TH2C const &h1, TH2C const &h2);  Operator *. ;  ; TH2C operator+ (TH2C const &h1, TH2C const &h2);  Operator +. ;  ; TH2C operator- (TH2C const &h1, TH2C const &h2);  Operator -. ;  ; TH2C operator/ (TH2C const &h1, TH2C const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2C.html:54093,extend,extended,54093,doc/master/classTH2C.html,https://root.cern,https://root.cern/doc/master/classTH2C.html,1,['extend'],['extended']
Modifiability,"ror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2D operator* (Float_t c1, TH2D const &h1);  Operator *. ;  ; TH2D operator* (TH2D const &h1, Float_t c1);  ; TH2D operator* (TH2D const &h1, TH2D const &h2);  Operator *. ;  ; TH2D operator+ (TH2D const &h1, TH2D const &h2);  Operator +. ;  ; TH2D operator- (TH2D const &h1, TH2D const &h2);  Operator -. ;  ; TH2D operator/ (TH2D const &h1, TH2D const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2D.html:54369,extend,extended,54369,doc/master/classTH2D.html,https://root.cern,https://root.cern/doc/master/classTH2D.html,1,['extend'],['extended']
Modifiability,"ror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2I operator* (Float_t c1, TH2I const &h1);  Operator *. ;  ; TH2I operator* (TH2I const &h1, Float_t c1);  ; TH2I operator* (TH2I const &h1, TH2I const &h2);  Operator *. ;  ; TH2I operator+ (TH2I const &h1, TH2I const &h2);  Operator +. ;  ; TH2I operator- (TH2I const &h1, TH2I const &h2);  Operator -. ;  ; TH2I operator/ (TH2I const &h1, TH2I const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2I.html:54100,extend,extended,54100,doc/master/classTH2I.html,https://root.cern,https://root.cern/doc/master/classTH2I.html,1,['extend'],['extended']
Modifiability,"ror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2L operator* (Float_t c1, TH2L const &h1);  Operator *. ;  ; TH2L operator* (TH2L const &h1, Float_t c1);  ; TH2L operator* (TH2L const &h1, TH2L const &h2);  Operator *. ;  ; TH2L operator+ (TH2L const &h1, TH2L const &h2);  Operator +. ;  ; TH2L operator- (TH2L const &h1, TH2L const &h2);  Operator -. ;  ; TH2L operator/ (TH2L const &h1, TH2L const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2L.html:54170,extend,extended,54170,doc/master/classTH2L.html,https://root.cern,https://root.cern/doc/master/classTH2L.html,1,['extend'],['extended']
Modifiability,"ror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2S operator* (Float_t c1, TH2S const &h1);  Operator *. ;  ; TH2S operator* (TH2S const &h1, Float_t c1);  ; TH2S operator* (TH2S const &h1, TH2S const &h2);  Operator *. ;  ; TH2S operator+ (TH2S const &h1, TH2S const &h2);  Operator +. ;  ; TH2S operator- (TH2S const &h1, TH2S const &h2);  Operator -. ;  ; TH2S operator/ (TH2S const &h1, TH2S const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2S.html:54160,extend,extended,54160,doc/master/classTH2S.html,https://root.cern,https://root.cern/doc/master/classTH2S.html,1,['extend'],['extended']
Modifiability,"ror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3C operator* (Float_t c1, TH3C const &h1);  Operator *. ;  ; TH3C operator* (TH3C const &h1, Float_t c1);  ; TH3C operator* (TH3C const &h1, TH3C const &h2);  Operator *. ;  ; TH3C operator+ (TH3C const &h1, TH3C const &h2);  Operator +. ;  ; TH3C operator- (TH3C const &h1, TH3C const &h2);  Operator -. ;  ; TH3C operator/ (TH3C const &h1, TH3C const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3C.html:54931,extend,extended,54931,doc/master/classTH3C.html,https://root.cern,https://root.cern/doc/master/classTH3C.html,1,['extend'],['extended']
Modifiability,"ror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3D operator* (Float_t c1, TH3D const &h1);  Operator *. ;  ; TH3D operator* (TH3D const &h1, Float_t c1);  ; TH3D operator* (TH3D const &h1, TH3D const &h2);  Operator *. ;  ; TH3D operator+ (TH3D const &h1, TH3D const &h2);  Operator +. ;  ; TH3D operator- (TH3D const &h1, TH3D const &h2);  Operator -. ;  ; TH3D operator/ (TH3D const &h1, TH3D const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3D.html:55199,extend,extended,55199,doc/master/classTH3D.html,https://root.cern,https://root.cern/doc/master/classTH3D.html,1,['extend'],['extended']
Modifiability,"ror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3F operator* (Float_t c1, TH3F const &h1);  Operator *. ;  ; TH3F operator* (TH3F const &h1, Float_t c1);  ; TH3F operator* (TH3F const &h1, TH3F const &h2);  Operator *. ;  ; TH3F operator+ (TH3F const &h1, TH3F const &h2);  Operator +. ;  ; TH3F operator- (TH3F const &h1, TH3F const &h2);  Operator -. ;  ; TH3F operator/ (TH3F const &h1, TH3F const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3F.html:55059,extend,extended,55059,doc/master/classTH3F.html,https://root.cern,https://root.cern/doc/master/classTH3F.html,1,['extend'],['extended']
Modifiability,"ror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3I operator* (Float_t c1, TH3I const &h1);  Operator *. ;  ; TH3I operator* (TH3I const &h1, Float_t c1);  ; TH3I operator* (TH3I const &h1, TH3I const &h2);  Operator *. ;  ; TH3I operator+ (TH3I const &h1, TH3I const &h2);  Operator +. ;  ; TH3I operator- (TH3I const &h1, TH3I const &h2);  Operator _. ;  ; TH3I operator/ (TH3I const &h1, TH3I const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3I.html:55026,extend,extended,55026,doc/master/classTH3I.html,https://root.cern,https://root.cern/doc/master/classTH3I.html,1,['extend'],['extended']
Modifiability,"ror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3L operator* (Float_t c1, TH3L const &h1);  Operator *. ;  ; TH3L operator* (TH3L const &h1, Float_t c1);  ; TH3L operator* (TH3L const &h1, TH3L const &h2);  Operator *. ;  ; TH3L operator+ (TH3L const &h1, TH3L const &h2);  Operator +. ;  ; TH3L operator- (TH3L const &h1, TH3L const &h2);  Operator _. ;  ; TH3L operator/ (TH3L const &h1, TH3L const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3L.html:55096,extend,extended,55096,doc/master/classTH3L.html,https://root.cern,https://root.cern/doc/master/classTH3L.html,1,['extend'],['extended']
Modifiability,"ror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3S operator* (Float_t c1, TH3S const &h1);  Operator *. ;  ; TH3S operator* (TH3S const &h1, Float_t c1);  ; TH3S operator* (TH3S const &h1, TH3S const &h2);  Operator *. ;  ; TH3S operator+ (TH3S const &h1, TH3S const &h2);  Operator +. ;  ; TH3S operator- (TH3S const &h1, TH3S const &h2);  Operator -. ;  ; TH3S operator/ (TH3S const &h1, TH3S const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3S.html:54918,extend,extended,54918,doc/master/classTH3S.html,https://root.cern,https://root.cern/doc/master/classTH3S.html,1,['extend'],['extended']
Modifiability,"ror = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TClass*GetResClass() const; TDataMember*GetResMember() const; Int_tGetResNumChilds() const; void*GetResPtr() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsXml() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRootSnifferStore.html:2625,Inherit,InheritsFrom,2625,root/html602/TRootSnifferStore.html,https://root.cern,https://root.cern/root/html602/TRootSnifferStore.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ror = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TH1F*GetTH1F(const RooStats::SamplingDistribution* samplDist = __null); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__SamplingDistPlot.html:3410,Inherit,InheritsFrom,3410,root/html602/RooStats__SamplingDistPlot.html,https://root.cern,https://root.cern/root/html602/RooStats__SamplingDistPlot.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ror \( \epsilon\) (TMultiDimFit::SetMinRelativeError), and \( S\) will be considered minimized when. \[; R = \frac{S}{\sum_{j=1}^M D_j^2} < \epsilon; \]. Optionally, the user may impose a functional expression by specifying the powers of each variable in \( L\) specified functions \( F_1, \ldots,F_L\) (TMultiDimFit::SetPowers). In that case, only the coefficients \( c_l\) is calculated by the class. Limiting the Number of Terms; As always when dealing with fits, there's a real chance of over fitting. As is well-known, it's always possible to fit an \( N-1\) polynomial in \( x\) to \( N\) points \( (x,y)\) with \(\chi^2 = 0\), but the polynomial is not likely to fit new data at all 1. Therefore, the user is asked to provide an upper limit, \( L_{max}\) to the number of terms in \( D_p\) (TMultiDimFit::SetMaxTerms).; However, since there's an infinite number of \( F_l\) to choose from, the user is asked to give the maximum power. \( P_{max,i}\), of each variable \( x_i\) to be considered in the minimization of \( S\) (TMultiDimFit::SetMaxPowers).; One way of obtaining values for the maximum power in variable \( i\), is to perform a regular fit to the dependent quantity \( D\), using a polynomial only in \( x_i\). The maximum power is \( P_{max,i}\) is then the power that does not significantly improve the one-dimensional least-square fit over \( x_i\) to \( D\) 5.; There are still a huge amount of possible choices for \( F_l\); in fact there are \(\prod_{i=1}^{N} (P_{max,i} + 1)\) possible choices. Obviously we need to limit this. To this end, the user is asked to set a power control limit, \( Q\) (TMultiDimFit::SetPowerLimit), and a function \( F_l\) is only accepted if ; \[; Q_l = \sum_{i=1}^{N} \frac{P_{li}}{P_{max,i}} < Q; \]. where \( P_{li}\) is the leading power of variable \( x_i\) in function \( F_l\) (TMultiDimFit::MakeCandidates). So the number of functions increase with \( Q\) (1, 2 is fine, 5 is way out). Gram-Schmidt Orthogonalisation; To further reduce t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:4540,variab,variable,4540,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['variab'],['variable']
Modifiability,"ror and is true if calculation is successful in case of error return also a lower limit value of zero. ;  ; void SetConfidenceLevel (double cl) override;  set the confidence level for the interval (e.g 0.682 for a 1-sigma interval) ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; double UpperLimit (const RooRealVar &param);  return the upper bound of the interval on a given parameter ;  ; double UpperLimit (const RooRealVar &param, bool &status);  Compute upper limit, check first if limit has been computed status is a boolean flag which will b set to false in case of error and is true if calculation is successful in case of error return also a lower limit value of zero. ;  ;  Public Member Functions inherited from RooStats::ConfInterval;  ConfInterval (const char *name=nullptr);  constructor given name and title ;  ; ConfInterval & operator= (const ConfInterval &other);  operator= ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1LikelihoodInterval.html:4133,inherit,inherited,4133,doc/master/classRooStats_1_1LikelihoodInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1LikelihoodInterval.html,2,['inherit'],['inherited']
Modifiability,"ror matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 365 of file GeneticMinimizer.cxx. ◆ SetFixedVariable(). bool ROOT::Math::GeneticMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val . ). overridevirtual . set a new fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 165 of file GeneticMinimizer.cxx. ◆ SetFunction(). void ROOT::Math::GeneticMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the function to minimize ; Implements ROOT::Math::Minimizer.; Definition at line 137 of file GeneticMinimizer.cxx. ◆ SetLimitedVariable(). bool ROOT::Math::GeneticMinimizer::SetLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower, . double ; upper . ). overridevirtual . set a new upper/lower limited variable (override if minimizer supports them ) otherwise as default set an unlimited variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 146 of file GeneticMinimizer.cxx. ◆ SetOptions(). void ROOT::Math::GeneticMinimizer::SetOptions ; (; const ROOT::Math::MinimizerOptions & ; opt). virtual . Definition at line 217 of file GeneticMinimizer.cxx. ◆ SetParameters(). void ROOT::Math::GeneticMinimizer::SetParameters ; (; const GeneticMinimizerParameters & ; params). Definition at line 177 of file GeneticMinimizer.cxx. ◆ SetRandomSeed(). void ROOT::Math::GeneticMinimizer::SetRandomSeed ; (; int ; seed). inline . Definition at line 94 of file GeneticMinimizer.h. ◆ SetVariable(). bool ROOT::Math::GeneticMinimizer::SetVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step . ). overridevirtual . set a new free variable ; Implements ROOT::Math::Minimizer.; Definition at line 153 of file GeneticMinimizer.cxx. ◆ X(). const double * ROOT::Math::GeneticMinimizer::X ; (; ); const. overridevir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html:15777,variab,variable,15777,doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,2,['variab'],['variable']
Modifiability,"ror matrix. { return true; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const. return covariance matrices elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. int CovMatrixStatus() const. return the status of the covariance matrix. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int i) const. get global correlation coefficient for the variable i. This is a number between zero and one which gives; the correlation between the i-th variable and that linear combination of all other variables which; is most strongly correlated with i.; If the variable is fixed or const the return value is zero. bool GetMinosError(unsigned int i, double& errLow, double& errUp, int = 0). get the minos error for parameter i, return false if Minos failed; A minimizaiton must be performed befre, return false if no minimization has been done; In case of Minos failed the status error is updated as following; status += 10 * minosStatus where the minos status is:; status = 1 : maximum number of function calls exceeded when running for lower error; status = 2 : maximum number of function calls exceeded when running for upper error; status = 3 : new minimum found when running for lower error; status = 4 : new minimum found when running for upper error; status = 5 : any other failure. bool Scan(unsigned int i, unsigned int& nstep, double* x, double* y, double xmin = 0, double xmax = 0). scan a parameter i around the minimum. A minimization must have been done before,; return false if it is not the case. bool Contour(unsigned int i, unsigned int j, unsigned int& npoints, dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html:9074,variab,variable,9074,root/html526/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html,2,['variab'],['variable']
Modifiability,"ror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooSharedProperties; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::unordered_map< std::string, RooAbsBinning * > _altBinning;  Optional alternative ranges and binnings. ;  ; bool _ownBinnings {true};  ;  Protected Attributes inherited from RooSharedProperties; Int_t _inSharedList;  ! Is in shared list ;  ; Int_t _refCount;  ! Use count ;  ; TUUID _uuid;  Unique object ID. ;  . Friends; class RooRealVar;  . Additional Inherited Members;  Public Types",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVarSharedProperties.html:9735,inherit,inherited,9735,doc/master/classRooRealVarSharedProperties.html,https://root.cern,https://root.cern/doc/master/classRooRealVarSharedProperties.html,2,['inherit'],['inherited']
Modifiability,"ror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THtml::TFileSysEntry; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TList fDirs;  ; TList fFiles;  ;  Protected Attributes inherited from THtml::TFileSysEntry; Int_t fLevel;  ; TString fName;  ; TFileSysDir * fParent;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TFileSysDir.html:9021,inherit,inherited,9021,doc/master/classTHtml_1_1TFileSysDir.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TFileSysDir.html,2,['inherit'],['inherited']
Modifiability,"ror%03u."",; 4425 error_handler,; 4426 status);; 4427 break;; 4428 case 2: /* Handler for error group, e.g., 5xx error; 4429 * handler; 4430 * for all server errors (500-599) */; 4431 mg_snprintf(conn,; 4432 &truncated,; 4433 path_buf,; 4434 sizeof(path_buf) - 32,; 4435 ""%serror%01uxx."",; 4436 error_handler,; 4437 status / 100);; 4438 break;; 4439 default: /* Handler for all errors */; 4440 mg_snprintf(conn,; 4441 &truncated,; 4442 path_buf,; 4443 sizeof(path_buf) - 32,; 4444 ""%serror."",; 4445 error_handler);; 4446 break;; 4447 }; 4448 ; 4449 /* String truncation in buf may only occur if; 4450 * error_handler is too long. This string is; 4451 * from the config, not from a client. */; 4452 (void)truncated;; 4453 ; 4454 /* The following code is redundant, but it should avoid; 4455 * false positives in static source code analyzers and; 4456 * vulnerability scanners.; 4457 */; 4458 path_buf[sizeof(path_buf) - 32] = 0;; 4459 len = (int)strlen(path_buf);; 4460 if (len > (int)sizeof(path_buf) - 32) {; 4461 len = (int)sizeof(path_buf) - 32;; 4462 }; 4463 ; 4464 /* Start with the file extenstion from the configuration. */; 4465 tstr = strchr(error_page_file_ext, '.');; 4466 ; 4467 while (tstr) {; 4468 for (i = 1;; 4469 (i < 32) && (tstr[i] != 0) && (tstr[i] != ',');; 4470 i++) {; 4471 /* buffer overrun is not possible here, since; 4472 * (i < 32) && (len < sizeof(path_buf) - 32); 4473 * ==> (i + len) < sizeof(path_buf) */; 4474 path_buf[len + i - 1] = tstr[i];; 4475 }; 4476 /* buffer overrun is not possible here, since; 4477 * (i <= 32) && (len < sizeof(path_buf) - 32); 4478 * ==> (i + len) <= sizeof(path_buf) */; 4479 path_buf[len + i - 1] = 0;; 4480 ; 4481 if (mg_stat(conn, path_buf, &error_page_file.stat)) {; 4482 DEBUG_TRACE(""Check error page %s - found"",; 4483 path_buf);; 4484 page_handler_found = 1;; 4485 break;; 4486 }; 4487 DEBUG_TRACE(""Check error page %s - not found"",; 4488 path_buf);; 4489 ; 4490 /* Continue with the next file extenstion from the; 4491 * configurat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:133510,config,configuration,133510,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['configuration']
Modifiability,"ror%03u."",; 4426 error_handler,; 4427 status);; 4428 break;; 4429 case 2: /* Handler for error group, e.g., 5xx error; 4430 * handler; 4431 * for all server errors (500-599) */; 4432 mg_snprintf(conn,; 4433 &truncated,; 4434 path_buf,; 4435 sizeof(path_buf) - 32,; 4436 ""%serror%01uxx."",; 4437 error_handler,; 4438 status / 100);; 4439 break;; 4440 default: /* Handler for all errors */; 4441 mg_snprintf(conn,; 4442 &truncated,; 4443 path_buf,; 4444 sizeof(path_buf) - 32,; 4445 ""%serror."",; 4446 error_handler);; 4447 break;; 4448 }; 4449 ; 4450 /* String truncation in buf may only occur if; 4451 * error_handler is too long. This string is; 4452 * from the config, not from a client. */; 4453 (void)truncated;; 4454 ; 4455 /* The following code is redundant, but it should avoid; 4456 * false positives in static source code analyzers and; 4457 * vulnerability scanners.; 4458 */; 4459 path_buf[sizeof(path_buf) - 32] = 0;; 4460 len = (int)strlen(path_buf);; 4461 if (len > (int)sizeof(path_buf) - 32) {; 4462 len = (int)sizeof(path_buf) - 32;; 4463 }; 4464 ; 4465 /* Start with the file extenstion from the configuration. */; 4466 tstr = strchr(error_page_file_ext, '.');; 4467 ; 4468 while (tstr) {; 4469 for (i = 1;; 4470 (i < 32) && (tstr[i] != 0) && (tstr[i] != ',');; 4471 i++) {; 4472 /* buffer overrun is not possible here, since; 4473 * (i < 32) && (len < sizeof(path_buf) - 32); 4474 * ==> (i + len) < sizeof(path_buf) */; 4475 path_buf[len + i - 1] = tstr[i];; 4476 }; 4477 /* buffer overrun is not possible here, since; 4478 * (i <= 32) && (len < sizeof(path_buf) - 32); 4479 * ==> (i + len) <= sizeof(path_buf) */; 4480 path_buf[len + i - 1] = 0;; 4481 ; 4482 if (mg_stat(conn, path_buf, &error_page_file.stat)) {; 4483 DEBUG_TRACE(""Check error page %s - found"",; 4484 path_buf);; 4485 page_handler_found = 1;; 4486 break;; 4487 }; 4488 DEBUG_TRACE(""Check error page %s - not found"",; 4489 path_buf);; 4490 ; 4491 /* Continue with the next file extenstion from the; 4492 * configurat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:133542,config,configuration,133542,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['configuration']
Modifiability,"ror(). bool TLinearMinimizer::ProvidesError ; (; ); const. inlineoverridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 86 of file TLinearMinimizer.h. ◆ SetFixedVariable(). bool TLinearMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; , . double ; val . ). overridevirtual . set fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 190 of file TLinearMinimizer.cxx. ◆ SetFunction(). void TLinearMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the fit model function ; Implements ROOT::Math::Minimizer.; Definition at line 106 of file TLinearMinimizer.cxx. ◆ SetVariable(). bool TLinearMinimizer::SetVariable ; (; unsigned int ; , . const std::string & ; , . double ; , . double ;  . ). inlineoverridevirtual . set free variable (dummy impl. since there is no need to set variables in the Linear Fitter) ; Implements ROOT::Math::Minimizer.; Definition at line 54 of file TLinearMinimizer.h. ◆ Streamer(). virtual void TLinearMinimizer::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void TLinearMinimizer::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 126 of file TLinearMinimizer.h. ◆ X(). const double * TLinearMinimizer::X ; (; ); const. inlineoverridevirtual . return pointer to X values at the minimum ; Implements ROOT::Math::Minimizer.; Definition at line 69 of file TLinearMinimizer.h. Member Data Documentation. ◆ fCovar. std::vector<double> TLinearMinimizer::fCovar. private . Definition at line 121 of file TLinearMinimizer.h. ◆ fDim. unsigned int TLinearMinimizer::fDim. private . Definition at line 116 of file TLinearMinimizer.h. ◆ fErrors. std::vector<double> TLinearMinimizer::fErrors. private . Definition at line 120 of file TLinearMinimizer.h. ◆ fFitter. TLinearFitter* TLinearMinimizer::fFitter. private . Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearMinimizer.html:16224,variab,variables,16224,doc/master/classTLinearMinimizer.html,https://root.cern,https://root.cern/doc/master/classTLinearMinimizer.html,1,['variab'],['variables']
Modifiability,"ror(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMapfDescriptionMapstores the key, value pairs of the JDL; TMapfMapstores the key, value pairs of the JDL. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TGridJDL(); Cleanup. void Clear(Option_t* = 0); Clears the JDL information. void SetValue(const char* key, const char* value); Sets a value. If the entry already exists the old one is replaced. const char * GetValue(const char* key); Returns the value corresponding to the provided key. Return 0 in case; key is not found. void SetDescription(const char* key, const char* description); Sets a value. If the entry already exists the old one is replaced. const char * GetDescription(const char* key); Returns the value corresponding to the provided key. Return 0 in case; key is not found. TString AddQuotes(const char* value); Adds quotes to the provided string.; E.g. Value --> ""Value"". void AddToSet(const char* key, const char* value); Adds a value to a key value which hosts a set of values.; E.g. InputSandbox: {""file1"",""file2""}. void AddToSetDescription(const char* key, const char* description); Adds a value to a key value which hosts a set ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGridJDL.html:7471,Inherit,Inheritance,7471,root/html532/TGridJDL.html,https://root.cern,https://root.cern/root/html532/TGridJDL.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ror(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; RooWorkspace&wspace(). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. list<RooAbsStudy*>_studies; RooWorkspace*_ws; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooStudyPackage(). RooStudyPackage(RooWorkspace& w). RooStudyPackage(const RooStudyPackage& ). void addStudy(RooAbsStudy& study). void driver(Int_t nExperiments). void initialize(); Make iterator over copy of studies attached to workspace. void run(Int_t nExperiments). void runOne(). void finalize(); Finalize all studies. void exportData(TList* olist, Int_t seqno). Int_t initRandom(); Choose random seed for this process. void processFile(const char* infile, Int_t nexp); Read in study package. TObject* Clone(const char* = """") const; { return new RooStudyPackage(*this) ; }. RooWorkspace& wspace(); { return *_ws ; }. std::list<RooAbsStudy*>& studies(); { return _studies ; }. » Last changed: Thu Nov 3 20:09:55 2011 » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStudyPackage.html:5979,Inherit,Inheritance,5979,root/html532/RooStudyPackage.html,https://root.cern,https://root.cern/root/html532/RooStudyPackage.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ror(const char* where, Int_t i) const; virtual voidTCollection::PrintCollectionEntry(TObject* entry, Option_t* option, Int_t recurse) const; virtual voidTCollection::PrintCollectionHeader(Option_t* option) const. Data Members; public:. enum TCollection::[unnamed] { kIsOwner; kInitCapacity; kInitHashTableCapacity; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfLastLast element in array containing an object; Int_tfLowerBoundLower bound of the array; TStringTCollection::fNamename of the collection; TProcessID*fPIDPointer to Process Unique Identifier; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted; UInt_t*fUIDs[fSize] To store uids of referenced objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRefArray(TProcessID* pid = 0); default constructor. TRefArray(Int_t s, TProcessID* pid); Create an object array. Using s one can set the array size; and lowerBound can be used to set the array lowerbound; index (default is 0). TRefArray(Int_t s, Int_t lowerBound = 0, TProcessID* pid = 0); Create an object array. Using s one can set the array size; and lowerBound can be used to set the array lowerbound; index (default is 0). TRefArray(const TRefArray& a); Create a copy of TRefArray a. TRefArray& operator=(const TRefArray& a); Assignment operator. ~TRefArray(); Usual destructor (The object pointed to by the array are never deleted). Bool_t GetObjectUID(Int_t& uid, TObject* obj, const char* methodname); Private/static function, check for validity of pid. void AddFirst(TObject* obj); Add object in the first slot of the array. This will overwrite the; first element that might have been there. To have insertion semantics; use either a TList",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRefArray.html:12568,Inherit,Inheritance,12568,root/html534/TRefArray.html,https://root.cern,https://root.cern/root/html534/TRefArray.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ror(const char* where, Int_t i) const; virtual voidTCollection::PrintCollectionEntry(TObject* entry, Option_t* option, Int_t recurse) const; virtual voidTCollection::PrintCollectionHeader(Option_t* option) const. Data Members; public:. enum TCollection::[unnamed] { kIsOwner; kInitCapacity; kInitHashTableCapacity; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfLastLast element in array containing an object; Int_tfLowerBoundLower bound of the array; TStringTCollection::fNamename of the collection; TProcessID*fPIDPointer to Process Unique Identifier; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted; UInt_t*fUIDs[fSize] To store uids of referenced objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRefArray(TProcessID* pid = 0); default constructor. TRefArray(Int_t s, TProcessID* pid); Create an object array. Using s one can set the array size; and lowerBound can be used to set the array lowerbound; index (default is 0). TRefArray(Int_t s, Int_t lowerBound = 0, TProcessID* pid = 0); Create an object array. Using s one can set the array size; and lowerBound can be used to set the array lowerbound; index (default is 0). TRefArray(const TRefArray& a); Create a copy of TRefArray a. TRefArray& operator=(const TRefArray& a); Assignment operator. ~TRefArray(); Usual destructor (The object pointed to by the array are never deleted). void AddFirst(TObject* obj); Add object in the first slot of the array. This will overwrite the; first element that might have been there. To have insertion semantics; use either a TList or a TOrdCollection. void AddLast(TObject* obj); Add object in the next empty slot in the array. Expand the array; if nece",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRefArray.html:11220,Inherit,Inheritance,11220,root/html532/TRefArray.html,https://root.cern,https://root.cern/root/html532/TRefArray.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ror(int level, const char* location, const char* fmt, va_list va) const; virtual const TMatrixDBase&GetDecompMatrix() const; Int_tHager(Double_t& est, Int_t iter = 5); voidTObject::MakeZombie(); voidResetStatus(). Data Members; public:. enum EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfColLwbColumn lower bound of decomposed matrix; Double_tfConditionmatrix condition number; Double_tfDet1determinant mantissa; Double_tfDet2determinant exponent for powers of 2; Int_tfRowLwbRow lower bound of decomposed matrix; Double_tfTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t Hager(Double_t& est, Int_t iter = 5). void DiagProd(const TVectorD& diag, Double_t tol, Double_t& d1, Double_t& d2). Double_t Condition(); Matrix condition number. Bool_t MultiSolve(TMatrixD& B); Solve set of equations with RHS in columns of B. void Det(Double_t& d1, Double_t& d2); Matrix determinant det = d1*TMath::Power(2.,d2). void Print(Option_t* opt = """") const; Print class members. TDecompBase & operator=(const TDecompBase& source); Assignment operator. Double_t SetTol(Double_t newTol). void ResetStatus(); { for (Int_t i = 14; i < 22; i++) ResetBit(BIT(i)); }. const TMatrixDBase & GetDecompMatrix() const. virtual ~TDecompBase(); {}. Double_t GetTol() const; { return fTol; }. Double_t GetDet1() const; { return fDet1; }. Double_t GetDet2() const; { return fDet2; }. Double_t GetCondition() const; { return fCondition; }. Int_t GetNrows() const. Int_t GetNcols() const. Int_t GetRowLwb() const; { return fRowLwb; }. Int_t GetColLw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDecompBase.html:10270,Inherit,Inheritance,10270,root/html532/TDecompBase.html,https://root.cern,https://root.cern/root/html532/TDecompBase.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ror(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. TStreamerInfoActions::TConfiguredAction::(anonymous); TStreamerInfoActions::TConfiguration*fConfiguration; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void PrintDebug(TBuffer& buffer, void* object) const; Inform the user what we are about to stream. TConfiguredAction(); assignment operator must be the default because the 'copy' constructor is actually a move constructor and must be used. {}. TConfiguredAction(const TStreamerInfoActions::TConfiguredAction& rval); WARNING: Technically this is a move constructor ... TConfiguredAction & operator=(const TStreamerInfoActions::TConfiguredAction& rval); WARNING: Technically this is a move assignment!. TConfiguredAction(TStreamerInfoAction_t action, TConfiguration *conf); Usual constructor. TConfiguredAction(TStreamerInfoVecPtrLoopAction_t action, TConfiguration *conf); Usual constructor. TConfiguredAction(TStreamerInfoLoopAction_t action, TConfiguration *conf); Usual constructor. ~TConfiguredAction(); Usual destructor.; Idea: the configuration ownership might be moved to a single list so that; we can shared them between the optimized and non",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStreamerInfoActions__TConfiguredAction.html:6758,Inherit,Inheritance,6758,root/html604/TStreamerInfoActions__TConfiguredAction.html,https://root.cern,https://root.cern/root/html604/TStreamerInfoActions__TConfiguredAction.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ror(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TStringfIconNameicon name. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TSystemFile. ←. TSystemDirectory. Function documentation; TSystemFile(); TSystemFile default constructor. TSystemFile(const char* filename, const char* dirname); TSystemFile normal constructor. ~TSystemFile(); Delete TSystemFile object. Bool_t IsDirectory(const char* dir = 0) const; Check if object is a directory. void Browse(TBrowser* b); Execute default action for this system file (action is specified; in the $HOME/.root.mimes or $ROOTSYS/etc/root.mimes file. void Edit(); Invoke text editor on this file. void Copy(const char* to); copy this file. void Move(const char* to); move this file. void Delete(); delete this file. void Rename(const char* name); rename this file. void Inspect() const; inspect this file. void Dump() const; dump this file. TSystemFile(). void Delete(). void Copy(const char* to). void SetIconName(const char* name); { fIconName = name; }. const char * GetIconName() const; { return fIconName.Data(); }. void DrawClass() const; { }. T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSystemFile.html:6226,Inherit,Inheritance,6226,root/html602/TSystemFile.html,https://root.cern,https://root.cern/root/html602/TSystemFile.html,2,['Inherit'],['Inheritance']
Modifiability,"ror. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; NumEvent(int nevt) -- Generate specified number of events. AutoBinned(Bool_t flag) -- Automatically deploy binned generation for binned distributions (e.g. RooHistPdf, sums and products of RooHistPdfs etc); NB: Datasets that are generated in binned mode are returned as weighted unbinned datasets. GenBinned(const char* tag) -- Use binned generation for all component pdfs that have 'setAttribute(tag)' set; AllBinned() -- As above, but for all components. Note that the notion of components is only meaningful for simultaneous pdf; as binned generation is always executed at the top-level node for a regular; pdf, so for those it only mattes that the top-level node is tagged. Binned generation cannot be used when prototype data is supplied; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; ProtoData(const RooDataSet& data, -- Use specified dataset as prototype dataset. If randOrder is set to true; Bool_t randOrder, the order of the events in the dataset will be read in a random order; Bool_t resample) if the requested number of events to be generated does not match the; number of events in the prototype dataset. If resample is also set to; true, the prototype dataset will be resampled rather than be strictly; reshuffled. In this mode events of the protodata may be used more than; once. If ProtoData() is used, the specified existing dataset as a prototype: the new dataset will contain; the same number of events as the prototype (unless otherwise specified), and any prototype variables not in; whatVars will be copied into the new dataset for each generated event and also used to set our PDF parameters.; The user can specify a number of eve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsPdf.html:66235,Extend,Extended,66235,root/html534/RooAbsPdf.html,https://root.cern,https://root.cern/root/html534/RooAbsPdf.html,3,['Extend'],['Extended']
Modifiability,"rorBand (const std::vector< RooCurve * > &variations, double Z=1) const;  Construct filled RooCurve represented error band that captures alpha% of the variations of the curves passed through argument variations, where the percentage alpha corresponds to the central interval fraction of a significance Z. ;  ; void Print (Option_t *options=nullptr) const override;  This method must be overridden when a class wants to print itself. ;  ; void printClassName (std::ostream &os) const override;  Print the class name of this curve. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print the details of this curve. ;  ; void printName (std::ostream &os) const override;  Print name of object. ;  ; void printTitle (std::ostream &os) const override;  Print the title of this curve. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGraph;  TGraph ();  Graph default constructor. ;  ;  TGraph (const char *filename, const char *format=""%lg %lg"", Option_t *option="""");  Graph constructor reading input from filename. ;  ;  TGraph (const TF1 *f, Option_t *option="""");  Graph constructor importing its parameters from the TF1 object passed as argument. ;  ;  TGraph (const TGraph &gr);  Copy constructor for this graph. ;  ;  TGraph (const TH1 *h);  Graph constructor importing its parameters from the TH1 object passed as argument. ;  ;  TGraph (const TVectorD &vx, const TVectorD &vy);  Graph constructor with two vectors of doubles in input A graph is build with the X coordinates taken from vx and Y coord from vy The number of points in the graph is the minimum of number of points in vx and vy. ;  ;  TGraph (const TVectorF &vx, const TVectorF &vy);  Graph constructor with two vectors of floats in input A graph is build with the X coordinates taken from vx and Y coord from vy The number of poin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCurve.html:6495,inherit,inherited,6495,doc/master/classRooCurve.html,https://root.cern,https://root.cern/doc/master/classRooCurve.html,1,['inherit'],['inherited']
Modifiability,"rorHandler (protected). ;  ; void MakeZombie ();  . #include <RooStats/SPlot.h>. Inheritance diagram for RooStats::SPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. protected . EnumeratorkOwnData . Definition at line 74 of file SPlot.h. Constructor & Destructor Documentation. ◆ ~SPlot(). SPlot::~SPlot ; (; ). override . Definition at line 120 of file SPlot.cxx. ◆ SPlot() [1/5]. SPlot::SPlot ; (; ). Default constructor. ; Definition at line 130 of file SPlot.cxx. ◆ SPlot() [2/5]. SPlot::SPlot ; (; const SPlot & ; other). Copy Constructor from another SPlot. ; Definition at line 160 of file SPlot.cxx. ◆ SPlot() [3/5]. SPlot::SPlot ; (; const char * ; name, . const char * ; title . ). Definition at line 139 of file SPlot.cxx. ◆ SPlot() [4/5]. SPlot::SPlot ; (; const char * ; name, . const char * ; title, . const RooDataSet & ; data . ). Constructor from a RooDataSet No sWeighted variables are present. ; Definition at line 149 of file SPlot.cxx. ◆ SPlot() [5/5]. SPlot::SPlot ; (; const char * ; name, . const char * ; title, . RooDataSet & ; data, . RooAbsPdf * ; pdf, . const RooArgList & ; yieldsList, . const RooArgSet & ; projDeps = RooArgSet(), . bool ; useWeights = true, . bool ; cloneData = false, . const char * ; newName = """", . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ). Construct a new SPlot instance, calculate sWeights, and include them in the RooDataSet held by this instance. ; The constructor automatically calls AddSWeight() to add s weights to the dataset. These can be retrieved later using GetSWeight() or GetSDataSet(). Parameters. [in]nameName of the instance. ; [in]titleTitle of the instance. ; [in]dataDataset to fit to. ; [in]pdfPDF to compute s weights for. ; [in]yieldsListList of parameters in pdf that are yields. These must be RooRealVar or Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SPlot.html:19112,variab,variables,19112,doc/master/classRooStats_1_1SPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SPlot.html,1,['variab'],['variables']
Modifiability,"rorItems(). Double_t traceEval(const RooArgSet* set) const; Calculate current value of object, with error tracing wrapper. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Variant of getAnalyticalIntegral that is also passed the normalization set; that should be applied to the integrand of which the integral is request.; For certain operator p.d.f it is useful to overload this function rather; than analyticalIntegralWN() as the additional normalization information; may be useful in determining a more efficient decomposition of the; requested integral. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Interface function getAnalyticalIntergral advertises the; analytical integrals that are supported. 'integSet'; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to anaIntSet and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Implements the actual analytical integral(s) advertised by; getAnalyticalIntegral. This functions will only be called with; codes returned by getAnalyticalIntegral, except code zero. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const; Implements the actual analytical integral(s) advertised by; getAnalyticalIntegral. This functions will only be called with; codes returned by getAnalyticalIntegral, except code zero. const char * getPlotLabel() const; Get the label associated with the variable. void setPlotLabel(const char* label); Set the label associated with this variable. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Read object contents from stream (dummy for now). void writeToStream(o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsReal.html:33601,config,configuration,33601,root/html530/RooAbsReal.html,https://root.cern,https://root.cern/root/html530/RooAbsReal.html,8,['config'],['configuration']
Modifiability,"rorflag to control if errors have been validated (Hesse has been run in case of Minuit). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~Minimizer(). Destructor (no operations). {}. void Clear(); reset for consecutive minimizations - implement if needed. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set a function to minimize using gradient. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set a new free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set a new lower limit variable (override if minimizer supports them ). return SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower, double upper). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set a new upper limit variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int ivar, const string& name, double val); set a new fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double value); set the value of an already existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool SetVariableStepSize(unsigned int ivar, double value); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variable. bool SetVariableUpperLimit(unsigned int ivar, double upper); set the upper-limit of an already existing variable. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an already existing variable. bool FixVariable(unsigned int ivar); fix an existing variable",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Minimizer.html:5998,variab,variable,5998,root/html534/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Minimizer.html,2,['variab'],['variable']
Modifiability,"rorsvirtual const double * Errors() constreturn errors at the minimumDefinition Minimizer.h:246; ROOT::Math::Minimizer::VariableIndexvirtual int VariableIndex(const std::string &name) constget index of variable given a variable given a name return -1 if variable is not foundDefinition Minimizer.cxx:232; ROOT::Math::Minimizer::MaxFunctionCallsunsigned int MaxFunctionCalls() constmax number of function callsDefinition Minimizer.h:294; ROOT::Math::Minimizer::GetCovMatrixvirtual bool GetCovMatrix(double *covMat) constFill the passed array with the covariance matrix elements if the variable is fixed or const the value...Definition Minimizer.cxx:135; ROOT::Math::Minimizer::SetLowerLimitedVariablevirtual bool SetLowerLimitedVariable(unsigned int ivar, const std::string &name, double val, double step, double lower)set a new lower limit variable (override if minimizer supports them )Definition Minimizer.h:175; ROOT::Math::Minimizer::SetVariableStepSizevirtual bool SetVariableStepSize(unsigned int ivar, double value)set the step size of an already existing variableDefinition Minimizer.cxx:62; ROOT::Math::Minimizer::Precisiondouble Precision() constprecision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the l...Definition Minimizer.h:304; ROOT::Math::Minimizer::SetHessianFunctionvirtual void SetHessianFunction(std::function< bool(std::span< const double >, double *)>)set the function implementing Hessian computation (re-implemented by Minimizer using it)Definition Minimizer.h:142; ROOT::Math::Minimizer::SetCovarianceDiagvirtual bool SetCovarianceDiag(std::span< const double > d2, unsigned int n)set initial second derivativesDefinition Minimizer.cxx:15; ROOT::Math::Minimizer::Xvirtual const double * X() const =0return pointer to X values at the minimum; ROOT::Math::Minimizer::NIterationsvirtual unsigned int NIterations() constnumber of iterations to reach the minimumDefinition Minimizer.h:231; ROOT::Math::Minimizer::SetMaxIterationsvoid S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:21560,variab,variableDefinition,21560,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['variab'],['variableDefinition']
Modifiability,"rotation ;  CRotationZYXRotation class with the (3D) rotation represented by angles describing first a rotation of an angle phi (yaw) about the Z axis, followed by a rotation of an angle theta (pitch) about the new Y' axis, followed by a third rotation of an angle psi (roll) about the final X'' axis ;  CRowOffsetsStatic structure to keep the conversion from (i,j) to offsets in the storage data for a symmetric matrix ;  CSDeterminantDsfact ;  CSinVariableTransformationSin Transformation class for dealing with double bounded variables ;  CSInverterDsinv ;  CSkipFunction;  CSkipFunction< 0 >;  ►CSMatrixSMatrix: a generic fixed size D1 x D2 Matrix class ;  CSMatrixRow;  CSMatrixRow_const;  CSMatrixIdentity;  CSMatrixNoInit;  CSqrUnary Square Operation Class ;  CSqrtUnary Square Root Operation Class ;  CSqrtLowVariableTransformationSqrt Transformation class for dealing with lower bounded variables ;  CSqrtUpVariableTransformationSqrt Transformation class for dealing with upper bounded variables ;  CStdEngineClass to wrap engines fron the C++ standard random library in the ROOT Random interface ;  CStdEngineType;  CStdEngineType< std::knuth_b >;  CStdEngineType< std::minstd_rand >;  CStdEngineType< std::mt19937 >;  CStdEngineType< std::mt19937_64 >;  CStdEngineType< std::random_device >;  CStdEngineType< std::ranlux24 >;  CStdEngineType< std::ranlux48 >;  CStdRandomEngine;  CSVectorSVector: a generic fixed size Vector class ;  CTDataPoint;  CTDataPointN;  CTensorMulOpClass for Tensor Multiplication (outer product) of two vectors giving a matrix ;  CTRandomEngine;  CTransposeOpClass for Transpose Operations ;  CTranspPolicyMatrix transpose policy ;  CTranspPolicy< T, D1, D2, MatRepSym< T, D1 > >;  CUnaryOpUnaryOperation class A class representing unary operators in the parse tree ;  CVavilovBase class describing a Vavilov distribution ;  CVavilovAccurateClass describing a Vavilov distribution ;  CVavilovAccurateCdfClass describing the Vavilov cdf ;  CVavilovAccuratePdfClas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/annotated.html:56219,variab,variables,56219,doc/v612/annotated.html,https://root.cern,https://root.cern/doc/v612/annotated.html,1,['variab'],['variables']
Modifiability,"rotation ;  CRotationZYXRotation class with the (3D) rotation represented by angles describing first a rotation of an angle phi (yaw) about the Z axis, followed by a rotation of an angle theta (pitch) about the new Y' axis, followed by a third rotation of an angle psi (roll) about the final X'' axis ;  CRowOffsetsStatic structure to keep the conversion from (i,j) to offsets in the storage data for a symmetric matrix ;  CSDeterminantDsfact ;  CSinVariableTransformationSin Transformation class for dealing with double bounded variables ;  CSInverterDsinv ;  CSkipFunction;  CSkipFunction< 0 >;  ►CSMatrixSMatrix: a generic fixed size D1 x D2 Matrix class ;  CSMatrixRow;  CSMatrixRow_const;  CSMatrixIdentity;  CSMatrixNoInit;  CSqrUnary Square Operation Class ;  CSqrtUnary Square Root Operation Class ;  CSqrtLowVariableTransformationSqrt Transformation class for dealing with lower bounded variables ;  CSqrtUpVariableTransformationSqrt Transformation class for dealing with upper bounded variables ;  CStdEngineWrapper class for std::random generator to be included in ROOT ;  CStdEngineType;  CStdEngineType< std::knuth_b >;  CStdEngineType< std::minstd_rand >;  CStdEngineType< std::mt19937 >;  CStdEngineType< std::mt19937_64 >;  CStdEngineType< std::random_device >;  CStdEngineType< std::ranlux24 >;  CStdEngineType< std::ranlux48 >;  CStdRandomEngine;  CSVectorSVector: a generic fixed size Vector class ;  CTDataPoint;  CTDataPointN;  CTensorMulOpClass for Tensor Multiplication (outer product) of two vectors giving a matrix ;  CTRandomEngine;  CTransform3DBasic 3D Transformation class describing a rotation and then a translation The internal data are a 3D rotation data (represented as a 3x3 matrix) and a 3D vector data ;  CTranslation3DClass describing a 3 dimensional translation ;  CTransposeOpClass for Transpose Operations ;  CTranspPolicyMatrix transpose policy ;  CTranspPolicy< T, D1, D2, MatRepSym< T, D1 > >;  CUnaryOpUnaryOperation class A class representing unary opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:49333,variab,variables,49333,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,1,['variab'],['variables']
Modifiability,"rotation ;  CRotationZYXRotation class with the (3D) rotation represented by angles describing first a rotation of an angle phi (yaw) about the Z axis, followed by a rotation of an angle theta (pitch) about the new Y' axis, followed by a third rotation of an angle psi (roll) about the final X'' axis ;  CRowOffsetsStatic structure to keep the conversion from (i,j) to offsets in the storage data for a symmetric matrix ;  CSDeterminantDsfact ;  CSinVariableTransformationSin Transformation class for dealing with double bounded variables ;  CSInverterDsinv ;  CSkipFunction;  CSkipFunction< 0 >;  ►CSMatrixSMatrix: a generic fixed size D1 x D2 Matrix class ;  CSMatrixRow;  CSMatrixRow_const;  CSMatrixIdentity;  CSMatrixNoInit;  CSqrUnary Square Operation Class ;  CSqrtUnary Square Root Operation Class ;  CSqrtLowVariableTransformationSqrt Transformation class for dealing with lower bounded variables ;  CSqrtUpVariableTransformationSqrt Transformation class for dealing with upper bounded variables ;  CStdEngineWrapper class for std::random generator to be included in ROOT ;  CStdEngineType;  CStdEngineType< std::knuth_b >;  CStdEngineType< std::minstd_rand >;  CStdEngineType< std::mt19937 >;  CStdEngineType< std::mt19937_64 >;  CStdEngineType< std::random_device >;  CStdEngineType< std::ranlux24 >;  CStdEngineType< std::ranlux48 >;  CStdRandomEngine;  CSVectorSVector: a generic fixed size Vector class ;  CTDataPoint;  CTDataPointN;  CTensorMulOpClass for Tensor Multiplication (outer product) of two vectors giving a matrix ;  CTRandomEngine;  CTransposeOpClass for Transpose Operations ;  CTranspPolicyMatrix transpose policy ;  CTranspPolicy< T, D1, D2, MatRepSym< T, D1 > >;  CUnaryOpUnaryOperation class A class representing unary operators in the parse tree ;  CVavilovBase class describing a Vavilov distribution ;  CVavilovAccurateClass describing a Vavilov distribution ;  CVavilovAccurateCdfClass describing the Vavilov cdf ;  CVavilovAccuratePdfClass describing the Vavilov ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/annotated.html:50816,variab,variables,50816,doc/v610/annotated.html,https://root.cern,https://root.cern/doc/v610/annotated.html,1,['variab'],['variables']
Modifiability,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TBRIK.h>. Inheritance diagram for TBRIK:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TBRIK() [1/2]. TBRIK::TBRIK ; (; ). BRIK shape default constructor. ; Definition at line 38 of file TBRIK.cxx. ◆ TBRIK() [2/2]. TBRIK::TBRIK ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; dx, . Float_t ; dy, . Float_t ; dz . ). BRIK shape normal constructor. ; Definition at line 48 of file TBRIK.cxx. ◆ ~TBRIK(). TBRIK::~TBRIK ; (; ). override . BRIK shape default destructor. ; Definition at line 59 of file TBRIK.cxx. Member Function Documentation. ◆ Class(). static TClass * TBRIK::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TBRIK::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TBRIK::Class_Version ; (; ).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBRIK.html:17166,inherit,inherited,17166,doc/master/classTBRIK.html,https://root.cern,https://root.cern/doc/master/classTBRIK.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TCONE.h>. Inheritance diagram for TCONE:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TCONE() [1/3]. TCONE::TCONE ; (; ). CONE shape default constructor. ; Definition at line 38 of file TCONE.cxx. ◆ TCONE() [2/3]. TCONE::TCONE ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; dz, . Float_t ; rmin1, . Float_t ; rmax1, . Float_t ; rmin2, . Float_t ; rmax2 . ). CONE shape normal constructor. ; Definition at line 47 of file TCONE.cxx. ◆ TCONE() [3/3]. TCONE::TCONE ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; dz, . Float_t ; rmax1, . Float_t ; rmax2 = 0 . ). CONE shape ""simplified"" constructor. ; Definition at line 59 of file TCONE.cxx. ◆ ~TCONE(). TCONE::~TCONE ; (; ). override . CONE shape default destructor. ; Definition at line 69 of file TCONE.cxx. Member",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCONE.html:19091,inherit,inherited,19091,doc/master/classTCONE.html,https://root.cern,https://root.cern/doc/master/classTCONE.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TCONS.h>. Inheritance diagram for TCONS:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TCONS() [1/3]. TCONS::TCONS ; (; ). CONS shape default constructor. ; Definition at line 43 of file TCONS.cxx. ◆ TCONS() [2/3]. TCONS::TCONS ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; dz, . Float_t ; rmin1, . Float_t ; rmax1, . Float_t ; rmin2, . Float_t ; rmax2, . Float_t ; phi1, . Float_t ; phi2 . ). CONS shape normal constructor. ; Definition at line 52 of file TCONS.cxx. ◆ TCONS() [3/3]. TCONS::TCONS ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; rmax1, . Float_t ; dz, . Float_t ; phi1, . Float_t ; phi2, . Float_t ; rmax2 = 0 . ). CONS shape normal constructor. ; Definition at line 63 of file TCONS.cxx. ◆ ~TCONS(). TCONS::~TCONS ; (; ). override . CONS shape def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCONS.html:20317,inherit,inherited,20317,doc/master/classTCONS.html,https://root.cern,https://root.cern/doc/master/classTCONS.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TCTUB.h>. Inheritance diagram for TCTUB:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TCTUB() [1/3]. TCTUB::TCTUB ; (; ). CTUB shape default constructor. ; Definition at line 48 of file TCTUB.cxx. ◆ TCTUB() [2/3]. TCTUB::TCTUB ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; rmin, . Float_t ; rmax, . Float_t ; dz, . Float_t ; phi1, . Float_t ; phi2, . Float_t ; coslx, . Float_t ; cosly, . Float_t ; coslz, . Float_t ; coshx, . Float_t ; coshy, . Float_t ; coshz . ). CTUB shape normal constructor. ; Definition at line 61 of file TCTUB.cxx. ◆ TCTUB() [3/3]. TCTUB::TCTUB ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; rmin, . Float_t ; rmax, . Float_t ; dz, . Float_t ; phi1, . Float_t ; phi2, . Float_t * ; lowNormal, . Float_t * ; highNormal . ). CTUB shape nor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCTUB.html:20526,inherit,inherited,20526,doc/master/classTCTUB.html,https://root.cern,https://root.cern/doc/master/classTCTUB.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGTRA.h>. Inheritance diagram for TGTRA:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGTRA() [1/2]. TGTRA::TGTRA ; (; ). GTRA shape default constructor. ; Definition at line 67 of file TGTRA.cxx. ◆ TGTRA() [2/2]. TGTRA::TGTRA ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; dz, . Float_t ; theta, . Float_t ; phi, . Float_t ; twist, . Float_t ; h1, . Float_t ; bl1, . Float_t ; tl1, . Float_t ; alpha1, . Float_t ; h2, . Float_t ; bl2, . Float_t ; tl2, . Float_t ; alpha2 . ). GTRA shape normal constructor. ; Definition at line 83 of file TGTRA.cxx. ◆ ~TGTRA(). TGTRA::~TGTRA ; (; ). override . GTRA shape default destructor. ; Definition at line 102 of file TGTRA.cxx. Member Function Documentation. ◆ Class(). static TClass * TGTRA::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_N",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTRA.html:19877,inherit,inherited,19877,doc/master/classTGTRA.html,https://root.cern,https://root.cern/doc/master/classTGTRA.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TPARA.h>. Inheritance diagram for TPARA:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPARA() [1/2]. TPARA::TPARA ; (; ). PARA shape default constructor. ; Definition at line 42 of file TPARA.cxx. ◆ TPARA() [2/2]. TPARA::TPARA ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; dx, . Float_t ; dy, . Float_t ; dz, . Float_t ; alpha, . Float_t ; theta, . Float_t ; phi . ). PARA shape normal constructor. ; Definition at line 52 of file TPARA.cxx. ◆ ~TPARA(). TPARA::~TPARA ; (; ). override . PARA shape default destructor. ; Definition at line 63 of file TPARA.cxx. Member Function Documentation. ◆ Class(). static TClass * TPARA::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPARA::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPARA.html:18191,inherit,inherited,18191,doc/master/classTPARA.html,https://root.cern,https://root.cern/doc/master/classTPARA.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TPCON.h>. Inheritance diagram for TPCON:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPCON() [1/3]. TPCON::TPCON ; (; const TPCON & ; pc). protected . copy constructor ; Definition at line 91 of file TPCON.cxx. ◆ TPCON() [2/3]. TPCON::TPCON ; (; ). PCON shape default constructor. ; Definition at line 47 of file TPCON.cxx. ◆ TPCON() [3/3]. TPCON::TPCON ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; phi1, . Float_t ; dphi1, . Int_t ; nz . ). PCON shape normal constructor. ; Parameters of the nz positions must be entered via TPCON::DefineSection. ; Definition at line 65 of file TPCON.cxx. ◆ ~TPCON(). TPCON::~TPCON ; (; ). override . PCON shape default destructor. ; Definition at line 152 of file TPCON.cxx. Member Function Documentation. ◆ Class(). static TClass * TPCON::Class ; (; ). static . Retu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPCON.html:18540,inherit,inherited,18540,doc/master/classTPCON.html,https://root.cern,https://root.cern/doc/master/classTPCON.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TShape.h>. Inheritance diagram for TShape:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TShape() [1/3]. TShape::TShape ; (; ). Shape default constructor. ; Definition at line 50 of file TShape.cxx. ◆ TShape() [2/3]. TShape::TShape ; (; const char * ; name, . const char * ; title, . const char * ; material . ). Shape normal constructor. ; Definition at line 60 of file TShape.cxx. ◆ TShape() [3/3]. TShape::TShape ; (; const TShape & ; ts). copy constructor ; Definition at line 78 of file TShape.cxx. ◆ ~TShape(). TShape::~TShape ; (; ). override . Shape default destructor. ; Definition at line 109 of file TShape.cxx. Member Function Documentation. ◆ Class(). static TClass * TShape::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TShape::Class_Name ; (; ). static . ReturnsName of this class .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTShape.html:17032,inherit,inherited,17032,doc/master/classTShape.html,https://root.cern,https://root.cern/doc/master/classTShape.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TTRAP.h>. Inheritance diagram for TTRAP:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTRAP() [1/2]. TTRAP::TTRAP ; (; ). TRAP shape default constructor. ; Definition at line 57 of file TTRAP.cxx. ◆ TTRAP() [2/2]. TTRAP::TTRAP ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; dz, . Float_t ; theta, . Float_t ; phi, . Float_t ; h1, . Float_t ; bl1, . Float_t ; tl1, . Float_t ; alpha1, . Float_t ; h2, . Float_t ; bl2, . Float_t ; tl2, . Float_t ; alpha2 . ). TRAP shape normal constructor. ; Definition at line 72 of file TTRAP.cxx. ◆ ~TTRAP(). TTRAP::~TTRAP ; (; ). override . TRAP shape default destructor. ; Definition at line 89 of file TTRAP.cxx. Member Function Documentation. ◆ Class(). static TClass * TTRAP::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRAP.html:19088,inherit,inherited,19088,doc/master/classTTRAP.html,https://root.cern,https://root.cern/doc/master/classTTRAP.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TTRD1.h>. Inheritance diagram for TTRD1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTRD1() [1/2]. TTRD1::TTRD1 ; (; ). TRD1 shape default constructor. ; Definition at line 37 of file TTRD1.cxx. ◆ TTRD1() [2/2]. TTRD1::TTRD1 ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; dx1, . Float_t ; dx2, . Float_t ; dy, . Float_t ; dz . ). TRD1 shape normal constructor. ; Definition at line 45 of file TTRD1.cxx. ◆ ~TTRD1(). TTRD1::~TTRD1 ; (; ). override . TRD1 shape default destructor. ; Definition at line 54 of file TTRD1.cxx. Member Function Documentation. ◆ Class(). static TClass * TTRD1::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TTRD1::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TTRD1::Cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRD1.html:17796,inherit,inherited,17796,doc/master/classTTRD1.html,https://root.cern,https://root.cern/doc/master/classTTRD1.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TTRD2.h>. Inheritance diagram for TTRD2:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTRD2() [1/2]. TTRD2::TTRD2 ; (; ). TRD2 shape default constructor. ; Definition at line 37 of file TTRD2.cxx. ◆ TTRD2() [2/2]. TTRD2::TTRD2 ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; dx1, . Float_t ; dx2, . Float_t ; dy1, . Float_t ; dy2, . Float_t ; dz . ). TRD2 shape normal constructor. ; Definition at line 46 of file TTRD2.cxx. ◆ ~TTRD2(). TTRD2::~TTRD2 ; (; ). override . TRD2 shape default destructor. ; Definition at line 56 of file TTRD2.cxx. Member Function Documentation. ◆ Class(). static TClass * TTRD2::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TTRD2::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRD2.html:17943,inherit,inherited,17943,doc/master/classTTRD2.html,https://root.cern,https://root.cern/doc/master/classTTRD2.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TTUBE.h>. Inheritance diagram for TTUBE:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTUBE() [1/4]. TTUBE::TTUBE ; (; const TTUBE & ; tu). protected . Table of cos(fPhi1) .... cos(fPhil+fDphi1) ; copy constructor ; Definition at line 95 of file TTUBE.cxx. ◆ TTUBE() [2/4]. TTUBE::TTUBE ; (; ). TUBE shape default constructor. ; Definition at line 41 of file TTUBE.cxx. ◆ TTUBE() [3/4]. TTUBE::TTUBE ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; rmin, . Float_t ; rmax, . Float_t ; dz, . Float_t ; aspect = 1 . ). TUBE shape normal constructor. ; Definition at line 55 of file TTUBE.cxx. ◆ TTUBE() [4/4]. TTUBE::TTUBE ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; rmax, . Float_t ; dz . ). TUBE shape ""simplified"" constructor. ; Definition at line 75 of file TTU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTUBE.html:17848,inherit,inherited,17848,doc/master/classTTUBE.html,https://root.cern,https://root.cern/doc/master/classTTUBE.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TTUBS.h>. Inheritance diagram for TTUBS:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTUBS() [1/3]. TTUBS::TTUBS ; (; ). TUBS shape default constructor. ; Definition at line 46 of file TTUBS.cxx. ◆ TTUBS() [2/3]. TTUBS::TTUBS ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; rmin, . Float_t ; rmax, . Float_t ; dz, . Float_t ; phi1, . Float_t ; phi2 . ). TUBS shape normal constructor. ; Definition at line 55 of file TTUBS.cxx. ◆ TTUBS() [3/3]. TTUBS::TTUBS ; (; const char * ; name, . const char * ; title, . const char * ; material, . Float_t ; rmax, . Float_t ; dz, . Float_t ; phi1, . Float_t ; phi2 . ). TUBS shape ""simplified"" constructor. ; Definition at line 67 of file TTUBS.cxx. ◆ ~TTUBS(). TTUBS::~TTUBS ; (; ). override . TUBS shape default destructor. ; Definition at line 115 of file TTUBS.cx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTUBS.html:19007,inherit,inherited,19007,doc/master/classTTUBS.html,https://root.cern,https://root.cern/doc/master/classTTUBS.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes; Float_t fA1;  ; Float_t fA2;  ; Float_t fA3;  ; Bool_t fAsOK;  ; Bool_t fEditRotation;  ; Bool_t fEditScale;  ; Bool_t fEditTrans;  ; Double32_t fM [16];  ; Bool_t fUseTrans;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <ROOT/REveTrans.hxx>. Inheritance diagram for ROOT::Experimental::REveTrans:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ REveTrans() [1/4]. REveTrans::REveTrans ; (; ). Default constructor. ; Definition at line 72 of file REveTrans.cxx. ◆ REveTrans() [2/4]. REveTrans::REveTrans ; (; const REveTrans & ; t). Constructor. ; Definition at line 86 of file REveTrans.cxx. ◆ REveTrans() [3/4]. REveTrans::REveTrans ; (; const Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveTrans.html:15527,inherit,inherited,15527,doc/master/classROOT_1_1Experimental_1_1REveTrans.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveTrans.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes; RooRealProxy pdf;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendedBinding.html:55253,inherit,inherited,55253,doc/master/classRooExtendedBinding.html,https://root.cern,https://root.cern/doc/master/classRooExtendedBinding.html,1,['inherit'],['inherited']
Modifiability,"rotected Attributes; std::map< TString, ClassRelInfo > _c2fmap;  ; bool _compiledOK;  ; std::map< TString, ExtraHeader > _ehmap;  ; std::map< TString, ClassFiles > _fmap;  ; RooWorkspace * _wspace;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <RooWorkspace.h>. Inheritance diagram for RooWorkspace::CodeRepo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ CodeRepo() [1/2]. RooWorkspace::CodeRepo::CodeRepo ; (; RooWorkspace * ; wspace = nullptr). inline . Definition at line 170 of file RooWorkspace.h. ◆ CodeRepo() [2/2]. RooWorkspace::CodeRepo::CodeRepo ; (; const CodeRepo & ; other, . RooWorkspace * ; wspace = nullptr . ). inline . Definition at line 172 of file RooWorkspace.h. Member Function Documentation. ◆ autoImportClass(). bool RooWorkspace::CodeRepo::autoImportClass ; (; TClass * ; tc, . bool ; doReplace = false . ). Import code of class 'tc' into the repository. ; If code is already in repository it is only imported again if doReplace is false. The names ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace_1_1CodeRepo.html:10488,inherit,inherited,10488,doc/master/classRooWorkspace_1_1CodeRepo.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace_1_1CodeRepo.html,2,['inherit'],['inherited']
Modifiability,"rotected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Static Protected Attributes; static Long64_t fgLastEntry = -1;  ; static TString fgLastMsg;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions; Bool_t AcceptResults (Int_t connections, TVirtualProofPlayer *mergerPlayer);  Accept and merge results from a set of workers. ;  ; Int_t CatMotd ();  Print message of the day (in the file pointed by the env PROOFMOTD or from fConfDir/etc/proof/motd). ;  ; Int_t CleanupWaitingQueries (Bool_t del=kTRUE, TList *qls=0);  Cleanup the waiting queries list.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServ.html:25796,inherit,inherited,25796,doc/master/classTProofServ.html,https://root.cern,https://root.cern/doc/master/classTProofServ.html,1,['inherit'],['inherited']
Modifiability,"rotected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static void ErrorHandler (Int_t level, Bool_t abort, const char *location, const char *msg);  The error handler function. ;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationServer.html:18830,inherit,inherited,18830,doc/master/classTApplicationServer.html,https://root.cern,https://root.cern/doc/master/classTApplicationServer.html,1,['inherit'],['inherited']
Modifiability,"rotected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void LoadGraphicsLibs ();  Load shared libs necessary for graphics. ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationRemote.html:20764,inherit,inherited,20764,doc/master/classTApplicationRemote.html,https://root.cern,https://root.cern/doc/master/classTApplicationRemote.html,2,['inherit'],['inherited']
Modifiability,"rotected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connecti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationRemote.html:21648,inherit,inherited,21648,doc/master/classTApplicationRemote.html,https://root.cern,https://root.cern/doc/master/classTApplicationRemote.html,3,['inherit'],['inherited']
Modifiability,"rotected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TButton; TString fMethod;  Method to be executed by this button. ;  ;  Protected Attributes inherited from TPad; Bool_t fAbsCoord;  Use absolute coordinates. ;  ; Double_t fAbsHNDC;  Absolute Height of pad along Y in NDC. ;  ; Double_t fAbsPixeltoXk;  Conversion coefficient for absolute pixel to X World. ;  ; Double_t fAbsPixeltoYk;  Conversion coefficient for absolute pixel to Y World. ;  ; Double_t fAbsWNDC;  Absolute Width of pad along X in NDC. ;  ; Double_t fAbsXlowNDC;  Absolute X top left corner of pad in NDC [0,1]. ;  ; Double_t fAbsYlowNDC;  Absolute Y top left corner of pad in NDC [0,1]. ;  ; Double_t fAspectRatio;  ratio of w/h in case of fixed ratio ;  ; Short_t fBorderMode;  Bordermode (-1=down, 0 = no border, 1=up) ;  ; Short_t fBorderSize;  pad bordersize in pixels ;  ; TCanvas * fCanvas {nullptr};  ! Pointer to mother canvas ;  ; Int_t fCGnx;  ! Size of the collide grid along x ;  ; Int_t fCGny;  ! Size of the collide grid along y ;  ; std::vector< Bool_t > fCollideGrid;  ! Grid used to find empty space when adding a box (Legend) in a pad ;  ; Bool_t fCopyGLDevice;  ! ;  ; Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGroupButton.html:47067,inherit,inherited,47067,doc/master/classTGroupButton.html,https://root.cern,https://root.cern/doc/master/classTGroupButton.html,1,['inherit'],['inherited']
Modifiability,"rotected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::BasicMinimizer Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; Base Minimizer class, which defines the basic functionality of various minimizer implementations (apart from Minuit and Minuit2) It provides support for storing parameter values, step size, parameter transformation etc. ; . in case real minimizer implementations do not provide such functionality. This is an internal class and should not be used directly by the user ; Definition at line 54 of file BasicMinimizer.h. Public Member Functions;  BasicMinimizer ();  Default constructor. ;  ;  ~BasicMinimizer () override;  Destructor. ;  ; bool FixVariable (unsigned int ivar) override;  fix an existing variable ;  ; bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &varObj) const override;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; const ROOT::Math::IMultiGradFunction * GradObjFunction () const;  return pointer to used gradient object function (NULL if gradient is not supported) ;  ; bool IsFixedVariable (unsigned int ivar) const override;  query if an existing variable is fixed (i.e. ;  ; bool Minimize () override;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NDim () const override;  number of dimensions ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) ;  ; virtual unsigned int NPar () const;  total number of parameter defined ;  ; const ROOT::Math::IMultiGenFunction * ObjFunction () const;  return pointer to used objective function ;  ; void PrintResult () const;  print result of minimization ;  ; bool ReleaseVariable (unsigned int ivar) override;  release an existing variable ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html:994,variab,variable,994,doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,4,['variab'],['variable']
Modifiability,"rotected Member Functions;  TGeoExtension ();  ;  ~TGeoExtension () override;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoExtension.h>. Inheritance diagram for TGeoExtension:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoExtension(). TGeoExtension::TGeoExtension ; (; ). inlineprotected . Definition at line 19 of file TGeoExtension.h. ◆ ~TGeoExtension(). TGeoExtension::~TGeoExtension ; (; ). inlineoverrideprotected . Definition at line 20 of file TGeoExtension.h. Member Function Documentation. ◆ Class(). static TClass * TGeoExtension::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoExtension::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoExtension::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 30 of file TGeoExtension.h. ◆ DeclFileName(). static const char * TGeoExtension::DeclFileName ; (;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoExtension.html:10275,inherit,inherited,10275,doc/master/classTGeoExtension.html,https://root.cern,https://root.cern/doc/master/classTGeoExtension.html,1,['inherit'],['inherited']
Modifiability,"rotected Types; enum  { ;   attrLine = 0x1; , attrFill = 0x2; , attrMarker = 0x4; , attrText = 0x8; , ;   attrAll = 0xf. };  !< object to store all painting, owned by TWebPS object More...;  . Protected Member Functions; Float_t * StoreOperation (const std::string &oper, unsigned attrkind, int opersize=0);  Store operation identifier with appropriate attributes. ;  . Protected Attributes; TWebPainting * fPainting {nullptr};  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TWebPadPainter (const TWebPadPainter &rhs)=delete;  ;  TWebPadPainter (TWebPadPainter &&rhs)=delete;  ; TWebPadPainter & operator= (const TWebPadPainter &rhs)=delete;  ; TWebPadPainter & operator= (TWebPadPainter &&rhs)=delete;  . Friends; class TWebCanvas;  . Additional Inherited Members;  Public Types inherited from TVirtualPadPainter; enum  EBoxMode { kHollow; , kFilled; };  ; enum  ETextMode { kClear; , kOpaque; };  . #include <TWebPadPainter.h>. Inheritance diagram for TWebPadPainter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. protected . !< object to store all painting, owned by TWebPS object . EnumeratorattrLine ; attrFill ; attrMarker ; attrText ; attrAll . Definition at line 34 of file TWebPadPainter.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPadPainter.html:11655,inherit,inherited,11655,doc/master/classTWebPadPainter.html,https://root.cern,https://root.cern/doc/master/classTWebPadPainter.html,1,['inherit'],['inherited']
Modifiability,"rotected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). TImpProxy & operator=(const ROOT::TImpProxy<ULong64_t>& ). TClaImpProxy & operator=(const ROOT::TImpProxy<ULong64_t>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TImpProxy_ULong64_t_.html:4379,Inherit,Inheritance,4379,root/html602/ROOT__TImpProxy_ULong64_t_.html,https://root.cern,https://root.cern/root/html602/ROOT__TImpProxy_ULong64_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rotected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). TImpProxy & operator=(const ROOT::TImpProxy<ULong64_t>& ). TClaImpProxy & operator=(const ROOT::TImpProxy<ULong64_t>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TImpProxy_ULong64_t_.html:4379,Inherit,Inheritance,4379,root/html604/ROOT__TImpProxy_ULong64_t_.html,https://root.cern,https://root.cern/root/html604/ROOT__TImpProxy_ULong64_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rotected:. UInt_tfActiveButtonID; Float_tfArrowKeyFactor; TPointfButtonPushPos; Bool_tfDoInternalSelection; TGLViewer*fGLViewer; Bool_tfIgnoreButtonUp; Bool_tfInPointerGrab; UInt_tfLastEventState; TPointfLastGlobalPos; TPointfLastMouseOverPos; TGLPhysicalShape*fLastMouseOverShape; TPointfLastPos; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Float_tfMouseDragFactor; TTimer*fMouseTimermouse delay timer; Bool_tfMouseTimerRunning; Float_tfMouseWheelFactor; TStringTNamed::fNameobject identifier; Int_tfSecSelTypesecondary selection type; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TStringTNamed::fTitleobject title; TGToolTip*fTooltiptooltip for highlight; Int_tfTooltipPixelTolerance; TPointfTooltipPos; Bool_tfTooltipShown; Bool_tfViewerCentricControls; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLEventHandler(TGWindow* w, TObject* obj); Constructor. ~TGLEventHandler(); Destructor. void GrabMouse(); Acquire mouse grab. void UnGrabMouse(); Release mouse grab. void SelectForClicked(Event_t* event); Run selection (optionally with on secondary selection) and emit; corresponding Clicked() signals.; Protected method. void SelectForMouseOver(); Run selection (optionally with on secondary selection) and emit; corresponding MouseOver() signals.; Protected method. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Process event of type 'event' - one of EEventType types,; occuring at window location px, py; This is provided for use when embedding GL viewer into pad. Bool_t HandleEvent(Event_t* event); Handle generic Event_t type 'event' - provided to catch focus changes; and terminate any interaction in viewer. Bool_t HandleFocusChange(Event_t* event); Handle generic Event_t type 'event' - provided to catch focus changes; and terminate",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLEventHandler.html:11897,Inherit,Inheritance,11897,root/html532/TGLEventHandler.html,https://root.cern,https://root.cern/root/html532/TGLEventHandler.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rotected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGMenuEntry(const TGMenuEntry&); TGMenuEntry&operator=(const TGMenuEntry&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. UInt_tfEhwidth and height of entry; Int_tfEntryIdthe entry id (used for event processing); UInt_tfEw; Int_tfEx; Int_tfEyposition of entry; TGHotString*fLabelmenu entry label; const TGPicture*fPicmenu entry icon; TGPopupMenu*fPopuppointer to popup menu (in case of cascading menus); TGString*fShortcutmenu entry shortcut; Int_tfStatusentry status (OR of EMenuEntryState); EMenuEntryTypefTypetype of entry; void*fUserDatapointer to user data structure. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGMenuEntry(const TGMenuEntry& ). TGMenuEntry& operator=(const TGMenuEntry& ). TGMenuEntry(); { }. virtual ~TGMenuEntry(); { if (fLabel) delete fLabel; if (fShortcut) delete fShortcut; }. Int_t GetEntryId() const; { return fEntryId; }. const char * GetName() const; { return fLabel ? fLabel->GetString() : 0; }. const char * GetShortcutText() const; { return fShortcut ? fShortcut->GetString() : 0; }. Int_t GetStatus() const; { return fStatus; }. EMenuEntryType GetType() const; { return fType; }. TGPopupMenu * GetPopup() const; { return fPopup; }. TGHotString * GetLabel() const; { return fLabel; }. TGString * GetShortcut() const; { return fShortcut; }. Int_t GetEx() const; { return fEx; }. Int_t GetEy() const; { return fEy; }. UInt_t GetEw() const; { return fEw; }. UInt_t GetEh() const; { return fEh; }. const TGPicture * GetPic() const; { return fPic; }. void * GetUserData() const; { return fUserData; }. » Author: Fons Rademakers 09/01/98",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGMenuEntry.html:6060,Inherit,Inheritance,6060,root/html532/TGMenuEntry.html,https://root.cern,https://root.cern/root/html532/TGMenuEntry.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"roto,Int_t nGen,bool resample=false) const ;; 310 ; 311 // This also forces the definition of a copy ctor in derived classes; 312 RooAbsPdf(const RooAbsPdf& other, const char* name = nullptr);; 313 ; 314 static Int_t _verboseEval ;; 315 ; 316 virtual bool syncNormalization(const RooArgSet* dset, bool adjustProxies=true) const ;; 317 ; 318 mutable double _rawValue = 0;; 319 mutable RooAbsReal* _norm = nullptr; //! Normalization integral (owned by _normMgr); 320 mutable RooArgSet const* _normSet = nullptr; //! Normalization set with for above integral; 321 ; 322 class CacheElem : public RooAbsCacheElement {; 323 public:; 324 CacheElem(RooAbsReal& norm) : _norm(&norm) {} ;; 325 ~CacheElem() override ;; 326 RooArgList containedArgs(Action) override { return RooArgList(*_norm) ; }; 327 std::unique_ptr<RooAbsReal> _norm;; 328 } ;; 329 mutable RooObjCacheManager _normMgr ; //! The cache manager; 330 ; 331 bool redirectServersHook(const RooAbsCollection & newServerList, bool mustReplaceAll,; 332 bool nameChange, bool isRecursiveStep) override;; 333 ; 334 mutable Int_t _errorCount = 0; ///< Number of errors remaining to print; 335 mutable Int_t _traceCount = 0; ///< Number of traces remaining to print; 336 mutable Int_t _negCount = 0; ///< Number of negative probabilities remaining to print; 337 ; 338 bool _selectComp = false; ///< Component selection flag for RooAbsPdf::plotCompOn; 339 ; 340 std::unique_ptr<RooNumGenConfig> _specGeneratorConfig ; ///<! MC generator configuration specific for this object; 341 ; 342 TString _normRange ; ///< Normalization range; 343 static TString _normRangeOverride ;; 344 ; 345private:; 346 mutable RooFit::UniqueId<RooArgSet>::Value_t _normSetId = RooFit::UniqueId<RooArgSet>::nullval; ///<! Unique ID of the currently-active normalization set; 347 ; 348 friend class RooAbsReal;; 349 friend class RooChi2Var;; 350 ; 351 ClassDefOverride(RooAbsPdf,5) // Abstract PDF with normalization support; 352};; 353 ; 354 ; 355 ; 356 ; 357#endif; RooAbsReal.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8h_source.html:16578,config,configuration,16578,doc/master/RooAbsPdf_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8h_source.html,1,['config'],['configuration']
Modifiability,"rotocolclient ""protocol"" version. private:. SSL*fSSL; SSL_CTX*fSSLCtx; static charfgSSLCAFile[2147483647]; static charfgSSLCAPath[2147483647]; static charfgSSLUCert[2147483647]; static charfgSSLUKey[2147483647]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TSocket. ←; TSSLSocket. Function documentation; void WrapWithSSL(void); Wraps the socket with OpenSSL. TSSLSocket(TInetAddress addr, const char* service, Int_t tcpwindowsize = -1). TSSLSocket(TInetAddress addr, Int_t port, Int_t tcpwindowsize = -1). TSSLSocket(const char* host, const char* service, Int_t tcpwindowsize = -1). TSSLSocket(const char* url, Int_t port, Int_t tcpwindowsize = -1). TSSLSocket(const char* sockpath). TSSLSocket(Int_t desc). TSSLSocket(Int_t desc, const char* sockpath). TSSLSocket(const TSSLSocket& s). ~TSSLSocket(); Close gracefully the connection, and free SSL structures. void Close(Option_t* option = """"); Close the SSL connection. void SetUpSSL(const char* cafile, const char* capath, const char* ucert, const char* ukey); Set up the static configuration variables. Int_t Recv(TMessage*& mess). Int_t RecvRaw(void* buffer, Int_t length, ESendRecvOptions opt = kDefault); Receive a raw buffer of specified length bytes. Int_t Send(const TMessage& mess). Int_t SendRaw(const void* buffer, Int_t length, ESendRecvOptions opt = kDefault); Send a raw buffer of specified length. TSSLSocket(); {}. Int_t Recv(TMessage*& mess); The rest of the Send and Recv calls rely ultimately on these,; so it is enough to overload them. Int_t Send(const TMessage& mess). Int_t Send(Int_t kind); Issue with hidden method :(. { return TSocket::Send(kind); }. Int_t Send(Int_t status, Int_t kind); { return TSocket::Send(status, kind); }. Int_t Recv(Int_t& status, Int_t& kind); { return TSocket::Recv(status, kind); }. Int_t Recv(char* mess, Int_t max); { return TSocket::Recv(mess, max); }. » Author: Alejandro Alvarez 16/09/2011 » Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSSLSocket.html:11874,config,configuration,11874,root/html602/TSSLSocket.html,https://root.cern,https://root.cern/root/html602/TSSLSocket.html,8,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"rototype(TClass* cl, const char* method, const char* proto); virtual TEnv*GetMapfile() const; virtual Int_tGetMore() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*Getp2f2funcname(void*) const; virtual char*GetPrompt(); virtual TObjArray*GetRootMapFiles() const; virtual intGetSecurityError() const; virtual const char*GetSharedLibDeps(const char* lib); virtual const char*GetSharedLibs(); virtual const char*GetSTLIncludePath() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTopLevelMacroName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Int_tInitializeDictionaries(); virtual voidTObject::Inspect() constMENU ; static TInterpreter*&Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsErrorMessagesEnabled() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsLoaded(const char* filename) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsProcessLineLocked() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Int_tLoad(const char* filenam, Bool_t system = kFALSE); virtual intLoadFile(const char*) const; virtual Int_tLoadLibraryMap(const char* rootmapfile = 0); virtual voidLoadMacro(const char* filename, TInterpreter::EErrorCode* error = 0); virtual voidLoadText(const char*) const; virtual voidTNamed::ls(Option_t* option = """") const; virtual const char*MapCppName(const char*) const; voidTObject::MayNotUse(const char* method) const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TInterpreter.html:9539,Inherit,InheritsFrom,9539,root/html532/TInterpreter.html,https://root.cern,https://root.cern/root/html532/TInterpreter.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rough a ROOT::Fit::Fitter::FitFCN) ; Definition at line 433 of file Fitter.h. ◆ LeastSquareFit() [1/2]. bool ROOT::Fit::Fitter::LeastSquareFit ; (; const BinData & ; data, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Fit a binned data set using a least square fit copying the input data. ; Definition at line 172 of file Fitter.h. ◆ LeastSquareFit() [2/2]. bool ROOT::Fit::Fitter::LeastSquareFit ; (; const std::shared_ptr< BinData > & ; data, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Fit a binned data set using a least square fit NOT copying the input data. ; Definition at line 179 of file Fitter.h. ◆ LikelihoodFit() [1/5]. bool ROOT::Fit::Fitter::LikelihoodFit ; (; const BinData & ; data, . bool ; extended = true, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Binned Likelihood fit copying the input data. ; Default is extended. ; Definition at line 203 of file Fitter.h. ◆ LikelihoodFit() [2/5]. template<class Data , class Function > . bool ROOT::Fit::Fitter::LikelihoodFit ; (; const Data & ; data, . const Function & ; func, . bool ; extended . ). inline . Likelihood fit given a data set (Binned or Un-binned) using any generic model function. ; This interface copies the input data and the model function object ; Definition at line 239 of file Fitter.h. ◆ LikelihoodFit() [3/5]. bool ROOT::Fit::Fitter::LikelihoodFit ; (; const std::shared_ptr< BinData > & ; data, . bool ; extended = true, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Binned Likelihood fit using a shared_ptr for NOT copying the input data. ; Default is extended. ; Definition at line 212 of file Fitter.h. ◆ LikelihoodFit() [4/5]. bool ROOT::Fit::Fitter::LikelihoodFit ; (; const std::shared_ptr< UnBinData > & ; data, . bool ; extended = false, . const ROOT::EExecutionPolicy & ; ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html:29022,extend,extended,29022,doc/master/classROOT_1_1Fit_1_1Fitter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html,1,['extend'],['extended']
Modifiability,"round *; 12 * efficiency, using rectangular minimum and maximum requirements on *; 13 * input variables *; 14 * *; 15 * Authors (alphabetical): *; 16 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 17 * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; 18 * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; 19 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 20 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 21 * *; 22 * Copyright (c) 2005: *; 23 * CERN, Switzerland *; 24 * U. of Victoria, Canada *; 25 * MPI-K Heidelberg, Germany *; 26 * LAPP, Annecy, France *; 27 * *; 28 * Redistribution and use in source and binary forms, with or without *; 29 * modification, are permitted according to the terms listed in LICENSE *; 30 * (see tmva/doc/LICENSE) *; 31 **********************************************************************************/; 32 ; 33#ifndef ROOT_TMVA_MethodCuts; 34#define ROOT_TMVA_MethodCuts; 35 ; 36//////////////////////////////////////////////////////////////////////////; 37// //; 38// MethodCuts //; 39// //; 40// Multivariate optimisation of signal efficiency for given background //; 41// efficiency, using rectangular minimum and maximum requirements on //; 42// input variables //; 43// //; 44//////////////////////////////////////////////////////////////////////////; 45 ; 46#include <vector>; 47 ; 48 ; 49#include ""TMVA/MethodBase.h""; 50#include ""TMVA/BinarySearchTree.h""; 51#include ""TMVA/PDF.h""; 52#include ""TMatrixDfwd.h""; 53#include ""IFitterTarget.h""; 54 ; 55class TRandom;; 56 ; 57namespace TMVA {; 58 ; 59 class Interval;; 60 ; 61 class MethodCuts : public MethodBase, public IFitterTarget {; 62 ; 63 public:; 64 ; 65 MethodCuts( const TString& jobName,; 66 const TString& methodTitle,; 67 DataSetInfo& theData,; 68 const TString& theOption = ""MC:150:10000:"");; 69 ; 70 MethodCuts( DataSetInfo& theData,; 71 const TString& theWeightFile);; 72 ; 73 // this is a workaround which is ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8h_source.html:1891,variab,variables,1891,doc/master/MethodCuts_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8h_source.html,1,['variab'],['variables']
Modifiability,"round nodes, they still; get a small value of the purity. void Print(ostream& os) const; print the node. void PrintRec(ostream& os) const; recursively print the node and its daughters (--> print the 'tree'). Bool_t ReadDataRecord(istream& is, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); Read the data block. void ClearNodeAndAllDaughters(); clear the nodes (their S/N, Nevents etc), just keep the structure of the tree. void ResetValidationData(); temporary stored node values (number of events, etc.) that originate; not from the training but from the validation data (used in pruning). void PrintPrune(ostream& os) const; printout of the node (can be read in with ReadDataRecord). void PrintRecPrune(ostream& os) const; recursive printout of the node and its daughters. void SetCC(Double_t cc). Float_t GetSampleMin(UInt_t ivar) const; return the minimum of variable ivar from the training sample; that pass/end up in this node. Float_t GetSampleMax(UInt_t ivar) const; return the maximum of variable ivar from the training sample; that pass/end up in this node. void SetSampleMin(UInt_t ivar, Float_t xmin); set the minimum of variable ivar from the training sample; that pass/end up in this node. void SetSampleMax(UInt_t ivar, Float_t xmax); set the maximum of variable ivar from the training sample; that pass/end up in this node. void ReadAttributes(void* node, UInt_t tmva_Version_Code = TMVA_VERSION_CODE). void AddAttributesToNode(void* node) const; add attribute to xml. void SetFisherCoeff(Int_t ivar, Double_t coeff); set fisher coefficients. void AddContentToNode(stringstream& s) const; adding attributes to tree node (well, was used in BinarySearchTree,; and somehow I guess someone programmed it such that we need this in; this tree too, although we don't..). void ReadContent(stringstream& s); reading attributes from tree node (well, was used in BinarySearchTree,; and somehow I guess someone programmed it such that we need this in; this tree too, although we don't..). Node* C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__DecisionTreeNode.html:7795,variab,variable,7795,root/html528/TMVA__DecisionTreeNode.html,https://root.cern,https://root.cern/root/html528/TMVA__DecisionTreeNode.html,6,['variab'],['variable']
Modifiability,"round the desired value,; 1665/// but the generation happens a lot faster.; 1666/// Especially if the PDF is sharply peaked, the multinomial event generation necessary to generate *exactly* `nEvents` events can; 1667/// be very slow.; 1668///; 1669/// The binning used for generation of events is the currently set binning for the variables.; 1670/// It can e.g. be changed using; 1671/// ```; 1672/// x.setBins(15);; 1673/// x.setRange(-5., 5.);; 1674/// pdf.generateBinned(RooArgSet(x), 1000);; 1675/// ```; 1676///; 1677/// Any variables of this PDF that are not in `whatVars` will use their; 1678/// current values and be treated as fixed parameters.; 1679/// \return RooDataHist* owned by the caller. Returns `nullptr` in case of an error.; 1680RooFit::OwningPtr<RooDataHist> RooAbsPdf::generateBinned(const RooArgSet &whatVars, double nEvents, bool expectedData, bool extended) const; 1681{; 1682 // Create empty RooDataHist; 1683 auto hist = std::make_unique<RooDataHist>(""genData"",""genData"",whatVars);; 1684 ; 1685 // Scale to number of events and introduce Poisson fluctuations; 1686 if (nEvents<=0) {; 1687 if (!canBeExtended()) {; 1688 coutE(InputArguments) << ""RooAbsPdf::generateBinned("" << GetName() << "") ERROR: No event count provided and p.d.f does not provide expected number of events"" << endl ;; 1689 return nullptr;; 1690 } else {; 1691 ; 1692 // Don't round in expectedData or extended mode; 1693 if (expectedData || extended) {; 1694 nEvents = expectedEvents(&whatVars) ;; 1695 } else {; 1696 nEvents = std::round(expectedEvents(&whatVars));; 1697 }; 1698 }; 1699 }; 1700 ; 1701 // Sample p.d.f. distribution; 1702 fillDataHist(hist.get(),&whatVars,1,true) ;; 1703 ; 1704 vector<int> histOut(hist->numEntries()) ;; 1705 double histMax(-1) ;; 1706 Int_t histOutSum(0) ;; 1707 for (int i=0 ; i<hist->numEntries() ; i++) {; 1708 hist->get(i) ;; 1709 if (expectedData) {; 1710 ; 1711 // Expected data, multiply p.d.f by nEvents; 1712 double w=hist->weight()*nEvents ;; 1713 hist->se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:82249,extend,extended,82249,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"round); vector<TH1*>*fVarHistB_smoothsmoothed reference histograms (background); vector<TH1*>*fVarHistSreference histograms (signal); vector<TH1*>*fVarHistS_smoothsmoothed reference histograms (signal); vector<TMVA::PDF*>*fVarPdfBreference PDFs (background); vector<TMVA::PDF*>*fVarPdfSreference PDFs (signal); static TMVA::MethodCuts::EFitParameterskForceMax; static TMVA::MethodCuts::EFitParameterskForceMin; static TMVA::MethodCuts::EFitParameterskForceSmart; static TMVA::MethodCuts::EFitParameterskNotEnforced; static TMVA::MethodCuts::EFitMethodTypekUseEventScan; static TMVA::MethodCuts::EEffMethodkUseEventSelection; static TMVA::MethodCuts::EFitMethodTypekUseGeneticAlgorithm; static TMVA::MethodCuts::EFitMethodTypekUseMinuit; static TMVA::MethodCuts::EFitMethodTypekUseMonteCarlo; static TMVA::MethodCuts::EFitMethodTypekUseMonteCarloEvents; static TMVA::MethodCuts::EEffMethodkUsePDFs; static TMVA::MethodCuts::EFitMethodTypekUseSimulatedAnnealing. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodCuts(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""MC:150:10000:"", TDirectory* theTargetFile = 0); standard constructor. MethodCuts(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = __null); construction from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); Cuts can only handle classification with 2 classes. void Init( void ); default initialisation called by all constructors. ~MethodCuts( void ); destructor. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; Method <string> Minimisation method; available values are: MC Monte Carlo <default>; GA Genetic Algorithm; SA Simulated annealing. EffMethod <string> Efficiency selection method; available values are: EffSel <default>; EffPDF. VarProp <string> Property of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCuts.html:22771,Inherit,Inheritance,22771,root/html602/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCuts.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"round->SetBit (TH1::kCanRebin); */; 981 /* } */; 982 ; 983 /* fMonitoring->ProcessEvents (); */; 984 /* } */; 985 ; 986 void testSample (double error, double output, double target, double weight);; 987 ; 988 virtual void startTestCycle ();; 989 virtual void endTestCycle ();; 990 ; 991 ; 992 void setWeightSums (double sumOfSigWeights, double sumOfBkgWeights);; 993 void setResultComputation (std::string _fileNameNetConfig, std::string _fileNameResult, std::vector<Pattern>* _resultPatternContainer);; 994 ; 995 std::vector<double> m_input;; 996 std::vector<double> m_output;; 997 std::vector<double> m_targets;; 998 std::vector<double> m_weights;; 999 ; 1000 std::vector<double> m_ams;; 1001 std::vector<double> m_significances;; 1002 ; 1003 ; 1004 double m_sumOfSigWeights;; 1005 double m_sumOfBkgWeights;; 1006 size_t m_scaleToNumEvents;; 1007 ; 1008 double m_cutValue;; 1009 std::vector<Pattern>* m_pResultPatternContainer;; 1010 std::string m_fileNameResult;; 1011 std::string m_fileNameNetConfig;; 1012 ; 1013 ; 1014 /* TH2F* m_histROC; */; 1015 /* TH2F* m_histSignificance; */; 1016 ; 1017 /* TH1F* m_histError; */; 1018 /* TH1F* m_histOutputSignal; */; 1019 /* TH1F* m_histOutputBackground; */; 1020 };; 1021 ; 1022 ; 1023 ; 1024 ; 1025 ; 1026 ; 1027 ; 1028 ///< used to distinguish between different function signatures; 1029 enum class ModeOutput; 1030 {; 1031 FETCH; 1032 };; 1033 ; 1034 /*! \brief error functions to be chosen from; 1035 *; 1036 *; 1037 */; 1038 enum class ModeErrorFunction; 1039 {; 1040 SUMOFSQUARES = 'S',; 1041 CROSSENTROPY = 'C',; 1042 CROSSENTROPY_MUTUALEXCLUSIVE = 'M'; 1043 };; 1044 ; 1045 /*! \brief weight initialization strategies to be chosen from; 1046 *; 1047 *; 1048 */; 1049 enum class WeightInitializationStrategy; 1050 {; 1051 XAVIER, TEST, LAYERSIZE, XAVIERUNIFORM; 1052 };; 1053 ; 1054 ; 1055 ; 1056 /*! \brief neural net; 1057 *; 1058 * holds the structure of all layers and some data for the whole net; 1059 * does not know the layer data though (i.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8h_source.html:38183,layers,layers,38183,doc/master/NeuralNet_8h_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8h_source.html,1,['layers'],['layers']
Modifiability,"roundTree = inputFile->Get<TTree>(""bkg_tree"");; ; if (!signalTree) {; Error(""TMVA_CNN_Classification"", ""Could not find signal tree in file '%s'"", inputFileName.Data());; return;; }; if (!backgroundTree) {; Error(""TMVA_CNN_Classification"", ""Could not find background tree in file '%s'"", inputFileName.Data());; return;; }; ; int nEventsSig = signalTree->GetEntries();; int nEventsBkg = backgroundTree->GetEntries();; ; // global event weights per tree (see below for setting event-wise weights); Double_t signalWeight = 1.0;; Double_t backgroundWeight = 1.0;; ; // You can add an arbitrary number of signal or background trees; loader.AddSignalTree(signalTree, signalWeight);; loader.AddBackgroundTree(backgroundTree, backgroundWeight);; ; /// add event variables (image); /// use new method (from ROOT 6.20 to add a variable array for all image data); loader.AddVariablesArray(""vars"", imgSize);; ; // Set individual event weights (the variables must exist in the original TTree); // for signal : factory->SetSignalWeightExpression (""weight1*weight2"");; // for background: factory->SetBackgroundWeightExpression(""weight1*weight2"");; // loader.SetBackgroundWeightExpression( ""weight"" );; ; // Apply additional cuts on the signal and background samples (can be different); TCut mycuts = """"; // for example: TCut mycuts = ""abs(var1)<0.5 && abs(var2-0.5)<1"";; TCut mycutb = """"; // for example: TCut mycutb = ""abs(var1)<0.5"";; ; // Tell the factory how to use the training and testing events; //; // If no numbers of events are given, half of the events in the tree are used; // for training, and the other half for testing:; // loader.PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; // It is possible also to specify the number of training and testing events,; // note we disable the computation of the correlation matrix of the input variables; ; int nTrainSig = 0.8 * nEventsSig;; int nTrainBkg = 0.8 * nEventsBkg;; ; // build the string options for DataLoader::PrepareTrainingAndTestTree; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:52039,variab,variables,52039,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['variab'],['variables']
Modifiability,"roundTree(TTree* background, Double_t weight = 1.0); voidSetBackgroundWeightExpression(const TString& variable); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); voidSetCut(const TString& cut, const TString& className = """"); voidSetCut(const TCut& cut, const TString& className = """"); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetInputTrees(TTree* inputTree, const TCut& SigCut, const TCut& BgCut); voidSetInputTrees(const TString& signalFileName, const TString& backgroundFileName, Double_t signalWeight = 1.0, Double_t backgroundWeight = 1.0); voidSetInputTrees(TTree* signal, TTree* background, Double_t signalWeight = 1.0, Double_t backgroundWeight = 1.0); voidSetInputVariables(vector<TString>* theVariables); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetSignalTree(TTree* signal, Double_t weight = 1.0); voidSetSignalWeightExpression(const TString& variable); voidSetTree(TTree* tree, const TString& className, Double_t weight); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetVerbose(Bool_t v = kTRUE); voidSetWeightExpression(const TString& variable, const TString& className = """"); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; voidTestAllMethods(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTrainAllMethods(); voidTrainAllMethodsForClassification(); voidTrainAllMethodsForRegression(); virtual voidTObject::UseCurrentStyle(); Bool_tUserAssignEvents(UInt_t clIndex); Bool_tVerbose() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Factory.html:9331,Config,Configurable,9331,root/html532/TMVA__Factory.html,https://root.cern,https://root.cern/root/html532/TMVA__Factory.html,2,['Config'],['Configurable']
Modifiability,"roundTree(TTree* background, Double_t weight = 1.0); voidSetBackgroundWeightExpression(const TString& variable); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); voidSetCut(const TString& cut, const TString& className = """"); voidSetCut(const TCut& cut, const TString& className = """"); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetInputTrees(TTree* inputTree, const TCut& SigCut, const TCut& BgCut); voidSetInputTrees(const TString& signalFileName, const TString& backgroundFileName, Double_t signalWeight = 1.0, Double_t backgroundWeight = 1.0); voidSetInputTrees(TTree* signal, TTree* background, Double_t signalWeight = 1.0, Double_t backgroundWeight = 1.0); voidSetInputVariables(vector<TString>* theVariables); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetSignalTree(TTree* signal, Double_t weight = 1.0); voidSetSignalWeightExpression(const TString& variable); voidSetTree(TTree* tree, const TString& className, Double_t weight); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetVerbose(Bool_t v = kTRUE); voidSetWeightExpression(const TString& variable, const TString& className = """"); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; voidTestAllMethods(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTrainAllMethods(); voidTrainAllMethodsForClassification(); voidTrainAllMethodsForRegression(); virtual voidTObject::UseCurrentStyle(); Bool_tUserAssignEvents(UInt_t clIndex); Bool_tVerbose() const; virtual voidTObject::Warning(const char* method, const char*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Factory.html:9331,Config,Configurable,9331,root/html534/TMVA__Factory.html,https://root.cern,https://root.cern/root/html534/TMVA__Factory.html,2,['Config'],['Configurable']
Modifiability,"rounding errors (please; refer to CERN 72-21 pp. 54-106). The data is stored internally in a TVectorD, in the following; way:. With as defined in the class description.; ; */; . void Browse(TBrowser* b); Browse the TPrincipal object in the TBrowser. void Clear(Option_t* option = """"); Clear the data in Object. Notice, that's not possible to change; the dimension of the original data. const Double_t * GetRow(Int_t row); Return a row of the user supplied data.; If row is out of bounds, 0 is returned.; It's up to the user to delete the returned array.; Row 0 is the first row;. void MakeCode(const char* filename = ""pca"", Option_t* option = """"); Generates the file <filename>, with .C appended if it does; argument doesn't end in .cxx or .C. The file contains the implementation of two functions. void X2P(Double_t *x, Double *p); void P2X(Double_t *p, Double *x, Int_t nTest). which does the same as TPrincipal::X2P and TPrincipal::P2X; respectively. Please refer to these methods. Further, the static variables:. Int_t gNVariables; Double_t gEigenValues[]; Double_t gEigenVectors[]; Double_t gMeanValues[]; Double_t gSigmaValues[]. are initialized. The only ROOT header file needed is Rtypes.h. See TPrincipal::MakeRealCode for a list of options. void MakeHistograms(const char* name = ""pca"", Option_t* option = ""epsdx""); Make histograms of the result of the analysis.; The option string say which histograms to create; X Histogram original data; P Histogram principal components corresponding to; original data; D Histogram the difference between the original data; and the projection of principal unto a lower; dimensional subspace (2D histograms); E Histogram the eigenvalues; S Histogram the square of the residues; (see TPrincipal::SumOfSquareResidues); The histograms will be named <name>_<type><number>, where <name>; is the first argument, <type> is one of X,P,D,E,S, and <number>; is the variable. void MakeNormalised(); PRIVATE METHOD: Normalize the covariance matrix. void MakeMethods(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPrincipal.html:13866,variab,variables,13866,root/html528/TPrincipal.html,https://root.cern,https://root.cern/root/html528/TPrincipal.html,10,['variab'],['variables']
Modifiability,"roup. A button group widget makes it easier to deal with groups of buttons.; A button in a button group is associated with a unique identifier.; The button group emits a Clicked() signal with this identifier when; the button is clicked. Thus, a button group is an ideal solution; when you have several similar buttons and want to connect all their; Clicked() signals, for example, to one slot. An exclusive button group switches off all toggle buttons except; the one that was clicked. A button group is by default non-exclusive.; All radio buttons that are inserted, will be mutually exclusive even; if the button group is non-exclusive. There are two ways of using a button group:. The button group is a parent widget of a number of buttons,; i.e. the button group is the parent argument in the button; constructor. The buttons are assigned identifiers 1, 2, 3 etc.; in the order they are created or you can specify button id in ; the button constructor. A TGButtonGroup can display a frame and; a title because it inherits from TGGroupFrame. Example:. vertical frame without border and title; TGVButtonGroup *bg = new TGVButtonGroup(main_frame);. create text button with id=1; TGTextButton *button1 = new TGTextButton(bg,""some text"");. create another text button with id=2; TGTextButton *button2 = new TGTextButton(bg,""another text"");. map all buttons; bg->Show();. NOTE: there is no need to call AddFrame() since the buttons are; automatically added with a default layout hint to their parent,; i.e. the buttongroup. To override the default layout hints use the; SetLayoutHints() method. ButtonGroup Signals:. Pressed(Int_t id) --> is emitted when a button in the group is; pressed down. The id argument is the; button's identifier.; Released(Int_t id) --> is emitted when a button in the group is; released. The id argument is the button's; identifier.; Clicked(Int_t id) --> is emitted when a button in the group is; clicked. The id argument is the button's; identifier. The TGHButtonGroup widg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGButtonGroup.html:1378,inherit,inherits,1378,root/html528/TGButtonGroup.html,https://root.cern,https://root.cern/root/html528/TGButtonGroup.html,30,['inherit'],['inherits']
Modifiability,"routines set the Euler ; angles using the X-convention which is defined by a rotation about the Z-axis,; about the new X-axis, and about the new Z-axis. This is the convention used; in Landau and Lifshitz, Goldstein and other common physics texts. The ; Y-convention euler angles can be set with SetYEulerAngles(),; SetYPhi(), SetYTheta(), and SetYPsi(). The caveat ; is that Euler angles usually define the rotation of the new coordinate system ; with respect to the original system, however, the TRotation class specifies ; the rotation of the object in the original system (an active rotation). To ; recover the usual Euler rotations (ie. rotate the system not the object), you ; must take the inverse of the rotation.; The member functions SetXAxis(), SetYAxis(), and ; SetZAxis() will create a rotation which rotates the requested axis; of the object to be parallel to a vector. If used with one argument, the ; rotation about that axis is arbitrary. If used with two arguments, the; second variable defines the XY, YZ, or ZX ; respectively. Inverse rotation;   TRotation a,b;;   ...;   b = a.Inverse();  // b is inverse of a, a is unchanged;   b = a.Invert();   // invert a and set b = a. Compound Rotations; The operator * has been implemented in a way that follows the ; mathematical notation of a product of the two matrices which describe the ; two consecutive rotations. Therefore the second rotation should be placed ; first:;   r = r2 * r1;. Rotation of TVector3; The TRotation class provides an operator * which allows to express; a rotation of a TVector3 analog to the mathematical notation;   | x' |   | xx xy xz | | x |;   | y' | = | yx yy yz | | y |;   | z' |   | zx zy zz | | z |; e.g.:;   TVector3 v(1,1,1);;   v = r * v;; You can also use the Transform() member function or the operator; *= of the; TVector3 class:;   TVector3 v;;   TRotation r;;   v.Transform(r);;   v *= r;  //Attention v = r * v. Function Members (Methods); public:. TRotation(); TRotation(const TRotation&); T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRotation.html:4584,variab,variable,4584,root/html528/TRotation.html,https://root.cern,https://root.cern/root/html528/TRotation.html,6,['variab'],['variable']
Modifiability,"rovTest(const TH1 *h2, Option_t *option="""") constStatistical test of compatibility in shape between this histogram and h2, using Kolmogorov test.Definition TH1.cxx:8178; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; IMPORTANT NOTE: The returned values for GetMean and GetStdDev depend on how the histogram statistics are calculated. By default, if no range has been set, the returned values are the (unbinned) ones calculated at fill time. If a range has been set, however, the values are calculated using the bins in range; THIS IS TRUE EVEN IF THE RANGE INCLUDES ALL BINS–use TAxis::SetRange(0, 0) to unset the range. To ensure that the returned values are always those of the binned data stored in the histogram, call TH1::ResetStats. See TH1::GetStats. ; Definition at line 59 of file TH1.h. Public Types; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:22987,extend,extended,22987,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['extend'],['extended']
Modifiability,"rowser::BrowseObj ; (; TObject * ; obj). overridevirtual . Browse object. ; This, in turn, will trigger the calling of TRootBrowser::Add() which will fill the IconBox and the tree. Emits signal ""BrowseObj(TObject*)"". ; Reimplemented from TBrowserImp.; Definition at line 370 of file TRootBrowser.cxx. ◆ Checked(). void TRootBrowser::Checked ; (; TObject * ; obj, . Bool_t ; check . ). virtual . Emits signal when double clicking on icon. ; Definition at line 1253 of file TRootBrowser.cxx. ◆ Class(). static TClass * TRootBrowser::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRootBrowser::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRootBrowser::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 185 of file TRootBrowser.h. ◆ CloneBrowser(). void TRootBrowser::CloneBrowser ; (; ). Clone the browser. ; A new Browser will be created, with the same plugins executed in the current one. ; Definition at line 381 of file TRootBrowser.cxx. ◆ CloseTab(). void TRootBrowser::CloseTab ; (; Int_t ; id). virtual . Remove tab element id from right tab. ; Reimplemented in TEveBrowser.; Definition at line 398 of file TRootBrowser.cxx. ◆ CloseTabs(). void TRootBrowser::CloseTabs ; (; ). overridevirtual . Properly close the mainframes embedded in the different tabs. ; Reimplemented from TBrowserImp.; Definition at line 406 of file TRootBrowser.cxx. ◆ CloseWindow(). void TRootBrowser::CloseWindow ; (; ). overridevirtual . Called when window is closed via the window manager. ; Reimplemented from TGMainFrame.; Definition at line 508 of file TRootBrowser.cxx. ◆ CreateBrowser(). void TRootBrowser::CreateBrowser ; (; const char * ; name). Definition at line 164 of file TRootBrowser.cxx. ◆ DeclFileName(). static const char * TRootBrowser::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootBrowser.html:47424,plugin,plugins,47424,doc/master/classTRootBrowser.html,https://root.cern,https://root.cern/doc/master/classTRootBrowser.html,1,['plugin'],['plugins']
Modifiability,"roxiedPtr, fColRegister, columns);; 398 return RInterface<F_t, DS_t>(std::move(filterPtr), *fLoopManager, fColRegister);; 399 }; 400 ; 401 // clang-format off; 402 ////////////////////////////////////////////////////////////////////////////; 403 /// \brief Define a new column.; 404 /// \param[in] name The name of the defined column.; 405 /// \param[in] expression Function, lambda expression, functor class or any other callable object producing the defined value. Returns the value that will be assigned to the defined column.; 406 /// \param[in] columns Names of the columns/branches in input to the producer function.; 407 /// \return the first node of the computation graph for which the new quantity is defined.; 408 ///; 409 /// Define a column that will be visible from all subsequent nodes; 410 /// of the functional chain. The `expression` is only evaluated for entries that pass; 411 /// all the preceding filters.; 412 /// A new variable is created called `name`, accessible as if it was contained; 413 /// in the dataset from subsequent transformations/actions.; 414 ///; 415 /// Use cases include:; 416 /// * caching the results of complex calculations for easy and efficient multiple access; 417 /// * extraction of quantities of interest from complex objects; 418 ///; 419 /// An exception is thrown if the name of the new column is already in use in this branch of the computation graph.; 420 ///; 421 /// ### Example usage:; 422 /// ~~~{.cpp}; 423 /// // assuming a function with signature:; 424 /// double myComplexCalculation(const RVec<float> &muon_pts);; 425 /// // we can pass it directly to Define; 426 /// auto df_with_define = df.Define(""newColumn"", myComplexCalculation, {""muon_pts""});; 427 /// // alternatively, we can pass the body of the function as a string, as in Filter:; 428 /// auto df_with_define = df.Define(""newColumn"", ""x*x + y*y"");; 429 /// ~~~; 430 ///; 431 /// \note If the body of the string expression contains an explicit `return` statement (even if it is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:20183,variab,variable,20183,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['variab'],['variable']
Modifiability,"roxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooListProxy _highSet;  High-side variation. ;  ; std::vector< int > _interpCode;  ; RooListProxy _lowSet;  Low-side variation. ;  ; RooRealProxy _nominal;  The nominal value. ;  ; RooObjCacheManager _normIntMgr;  ! The integration cache manager ;  ; RooListProxy _normSet;  interpolation parameters ;  ; RooArgList _ownedList;  List of owned components. ;  ; RooListProxy _paramSet;  interpolation parameters ;  ; bool _positiveDefinite = false;  protect against negative and 0 bins. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPiecewiseInterpolation.html:56922,inherit,inherited,56922,doc/master/classPiecewiseInterpolation.html,https://root.cern,https://root.cern/doc/master/classPiecewiseInterpolation.html,1,['inherit'],['inherited']
Modifiability,"roxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool _negateCoefficient = false;  ; RooRealProxy c;  ; RooRealProxy x;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExponential.html:68154,config,configuration,68154,doc/master/classRooExponential.html,https://root.cern,https://root.cern/doc/master/classRooExponential.html,1,['config'],['configuration']
Modifiability,"roxy& proxy); voidRooAbsArg::registerProxy(RooListProxy& proxy); voidRooAbsArg::setProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsCategory::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsCategory::syncCache(const RooArgSet* set = 0); RooCatTypeRooAbsCategory::traceEval() const; virtual Bool_tRooAbsCategory::traceEvalHook(RooCatType) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. TString_bnameName of the binning specification to be used to perform the mapping; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); UChar_tRooAbsCategory::_byteValue! Transient cache for byte values from tree branches; deque<RooAbsCache*>RooAbsArg::_cacheListlist of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBinningCategory.html:19516,Config,ConfigChange,19516,root/html534/RooBinningCategory.html,https://root.cern,https://root.cern/root/html534/RooBinningCategory.html,1,['Config'],['ConfigChange']
Modifiability,"roxy& proxy); voidRooAbsArg::registerProxy(RooListProxy& proxy); voidRooAbsArg::setProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsCategory::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsCategory::syncCache(const RooArgSet* set = 0); RooCatTypeRooAbsCategory::traceEval() const; virtual Bool_tRooAbsCategory::traceEvalHook(RooCatType) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); UChar_tRooAbsCategory::_byteValue! Transient cache for byte values from tree branches; deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooThresholdCategory.html:19551,Config,ConfigChange,19551,root/html534/RooThresholdCategory.html,https://root.cern,https://root.cern/root/html534/RooThresholdCategory.html,1,['Config'],['ConfigChange']
Modifiability,"roxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; RooRealProxy alphaL_;  ; std::unique_ptr< RooRealProxy > alphaR_ = nullptr;  ; RooRealProxy nL_;  ; std::unique_ptr< RooRealProxy > nR_ = nullptr;  ; RooRealProxy sigmaL_;  ; RooRealProxy sigmaR_;  ; RooRealProxy x0_;  ; RooRealProxy x_;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCrystalBall.html:69098,inherit,inherited,69098,doc/master/classRooCrystalBall.html,https://root.cern,https://root.cern/doc/master/classRooCrystalBall.html,4,['inherit'],['inherited']
Modifiability,"roxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooListProxy _actualVars;  ; TString _formExpr;  Formula expression string. ;  ; RooFormula * _formula = nullptr;  ! Formula engine ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenericPdf.html:69694,config,configuration,69694,doc/master/classRooGenericPdf.html,https://root.cern,https://root.cern/doc/master/classRooGenericPdf.html,1,['config'],['configuration']
Modifiability,"roxy. Definition at line 879 of file TBranchProxy.h. ◆ TULong64Proxy. typedef TImpProxy<ULong64_t> ROOT::Internal::TULong64Proxy. Definition at line 881 of file TBranchProxy.h. ◆ TULongProxy. typedef TImpProxy<ULong_t> ROOT::Internal::TULongProxy. Definition at line 880 of file TBranchProxy.h. ◆ TUShortProxy. typedef TImpProxy<UShort_t> ROOT::Internal::TUShortProxy. Definition at line 882 of file TBranchProxy.h. Enumeration Type Documentation. ◆ ELocation. enum ROOT::Internal::ELocation. 0 for the general case, 1 when this a split clases inside a TClonesArray, 2 when this is a split classes inside an STL container. . EnumeratorkOut ; kClones ; kSTL . Definition at line 38 of file TTreeReaderGenerator.h. Function Documentation. ◆ CastToTG(). tbb::isolated_task_group * ROOT::Internal::CastToTG ; (; void * ; p). Definition at line 43 of file TTaskGroup.cxx. ◆ ContaineeInheritsFrom(). bool ROOT::Internal::ContaineeInheritsFrom ; (; TClass * ; cl, . TClass * ; base . ). Return true if 'cl' inherits from 'base'. ; Definition at line 831 of file TCollection.cxx. ◆ DefaultStreamer(). void ROOT::Internal::DefaultStreamer ; (; TBuffer & ; R__b, . const TClass * ; cl, . void * ; objpointer . ). Default streamer implementation used by ClassDefInline to avoid requirement to include TBuffer.h. ; Definition at line 30 of file TBuffer.cxx. ◆ DefineBehavior() [1/2]. const TQObjectInitBehavior * ROOT::Internal::DefineBehavior ; (; TQObject * ; , . TQObject * ;  . ). inline . Definition at line 74 of file TQClass.h. ◆ DefineBehavior() [2/2]. const TInitBehavior * ROOT::Internal::DefineBehavior ; (; void * ; , . void * ;  . ). Definition at line 44 of file TGenericClassInfo.cxx. ◆ DeleteChangesMemory(). bool ROOT::Internal::DeleteChangesMemory ; (; ). Definition at line 127 of file TObject.cxx. ◆ DeleteChangesMemoryImpl(). bool ROOT::Internal::DeleteChangesMemoryImpl ; (; ). Definition at line 76 of file TObject.cxx. ◆ DisableParBranchProcessing(). void ROOT::Internal::DisableParBranch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Internal.html:30923,inherit,inherits,30923,doc/v632/namespaceROOT_1_1Internal.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Internal.html,1,['inherit'],['inherits']
Modifiability,"roxy. Definition at line 915 of file TBranchProxy.h. ◆ TULong64Proxy. typedef TImpProxy<ULong64_t> ROOT::Internal::TULong64Proxy. Definition at line 917 of file TBranchProxy.h. ◆ TULongProxy. typedef TImpProxy<ULong_t> ROOT::Internal::TULongProxy. Definition at line 916 of file TBranchProxy.h. ◆ TUShortProxy. typedef TImpProxy<UShort_t> ROOT::Internal::TUShortProxy. Definition at line 918 of file TBranchProxy.h. Enumeration Type Documentation. ◆ ELocation. enum ROOT::Internal::ELocation. 0 for the general case, 1 when this a split clases inside a TClonesArray, 2 when this is a split classes inside an STL container. . EnumeratorkOut ; kClones ; kSTL . Definition at line 38 of file TTreeReaderGenerator.h. Function Documentation. ◆ CastToTG(). tbb::isolated_task_group * ROOT::Internal::CastToTG ; (; void * ; p). Definition at line 43 of file TTaskGroup.cxx. ◆ ContaineeInheritsFrom(). bool ROOT::Internal::ContaineeInheritsFrom ; (; TClass * ; cl, . TClass * ; base . ). Return true if 'cl' inherits from 'base'. ; Definition at line 831 of file TCollection.cxx. ◆ DefaultStreamer(). void ROOT::Internal::DefaultStreamer ; (; TBuffer & ; R__b, . const TClass * ; cl, . void * ; objpointer . ). Default streamer implementation used by ClassDefInline to avoid requirement to include TBuffer.h. ; Definition at line 30 of file TBuffer.cxx. ◆ DefineBehavior() [1/2]. const TQObjectInitBehavior * ROOT::Internal::DefineBehavior ; (; TQObject * ; , . TQObject * ;  . ). inline . Definition at line 74 of file TQClass.h. ◆ DefineBehavior() [2/2]. const TInitBehavior * ROOT::Internal::DefineBehavior ; (; void * ; , . void * ;  . ). Definition at line 45 of file TGenericClassInfo.cxx. ◆ DeleteChangesMemory(). bool ROOT::Internal::DeleteChangesMemory ; (; ). Definition at line 133 of file TObject.cxx. ◆ DeleteChangesMemoryImpl(). bool ROOT::Internal::DeleteChangesMemoryImpl ; (; ). Definition at line 76 of file TObject.cxx. ◆ DisableParBranchProcessing(). void ROOT::Internal::DisableParBranch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Internal.html:31265,inherit,inherits,31265,doc/master/namespaceROOT_1_1Internal.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Internal.html,1,['inherit'],['inherits']
Modifiability,"roxy<unsigned int>(unsigned int). Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(unsigned int ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id: TBranchProxy.h 41244 2011-10-06 19:42:35Z pcanal $ » Last generated: 2011-11-03 20:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__TClaImpProxy_unsigned_int_.html:4249,Inherit,Inheritance,4249,root/html532/ROOT__TClaImpProxy_unsigned_int_.html,https://root.cern,https://root.cern/root/html532/ROOT__TClaImpProxy_unsigned_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"roxy _set1;  Set of input fractions. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFracRemainder.html:55591,inherit,inherited,55591,doc/master/classRooFracRemainder.html,https://root.cern,https://root.cern/doc/master/classRooFracRemainder.html,1,['inherit'],['inherited']
Modifiability,"roy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; TRefArray*fDigitIdsArray holding references to external objects.; Bool_tfDisableLightingDisable lighting for rendering.; Bool_tfEmitSignalsEmit signals on secondary-select.; TEveFrameBox*fFramePointer to frame structure.; Bool_tTEveElement::fHighlighted!; set<int>TEveSecondarySelectable::fHighlightedSetHighlighted indices.; Bool_tfHistoButtonsShow histogram buttons in object editor.; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveDigitSet::DigitBase_t*fLastDigit! The last / current digit added to collection.; Int_tfLastIdx! The last / current idx added to collection.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tfOwnIdsFlag specifying if id-objects are owned by the TEveDigitSet.; TEveRGBAPalette*fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveChunkManagerfPlexContainer of digit data.; TEveDigitSet::ERenderMode_efRenderModeRender mode: as-is / line / filled.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; set<int>TEveSecondarySelectable::fSelectedSetSelected indices.; Bool_tTQObject::fSignalsBlocked! flag used f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveDigitSet.html:25500,variab,variable,25500,root/html528/TEveDigitSet.html,https://root.cern,https://root.cern/root/html528/TEveDigitSet.html,2,['variab'],['variable']
Modifiability,"royExternalViewer3D ();  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a box. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depending on the event type. ;  ; void PaintBorder (Color_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SetBatch (Bool_t batch=kTRUE) override;  Set pad in batch mode. ;  ;  Protected Member Functions inherited from TVirtualPad; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlider.html:51761,inherit,inherited,51761,doc/master/classTSlider.html,https://root.cern,https://root.cern/doc/master/classTSlider.html,2,['inherit'],['inherited']
Modifiability,"rph"");; morph_->plotOn(frame1, LineColor(kRed));; ; return frame1;; }; ; // Define the workspace; std::unique_ptr<RooWorkspace> build_ws(double mu_observed, double sigma); {; auto ws = std::make_unique<RooWorkspace>();; ws->factory(Form(""Gaussian::gauss(x[-5,15],mu[%f,0,4], %f)"", mu_observed, sigma));; return ws;; }; ; // Do the example; void rf616_morphing(); {; // Define the 'observed' mu; double mu_observed = 2.5;; double sigma = 1.5;; ; // Import variables from workspace; std::unique_ptr<RooWorkspace> ws = build_ws(mu_observed, sigma);; ; RooPlot *frame1 = perform_morphing(*ws, RooMomentMorphFuncND::Linear, sigma);; ; RooRealVar *x_var = ws->var(""x"");; RooRealVar *mu_var = ws->var(""mu"");; RooAbsPdf *gauss = ws->pdf(""gauss"");; RooDataSet *obs_data = gauss->generate(*x_var, n_samples);; ; // Create the exact negative log likelihood function for Gaussian model; RooAbsReal *nll_gauss = gauss->createNLL(*obs_data);; ; // Create the morphed negative log likelihood function; // TODO: Fix RooAddPdf::fixCoefNormalization(nset) warnings with new CPU backend; RooAbsReal *nll_morph = ws->pdf(""morph"")->createNLL(*obs_data, RooFit::EvalBackend(""legacy""));; ; // Plot the negative logarithmic summed likelihood; RooPlot *frame2 = mu_var->frame(Title(""Negative log Likelihood""));; nll_gauss->plotOn(frame2, LineColor(kBlue), ShiftToZero(), Name(""gauss""));; nll_morph->plotOn(frame2, LineColor(kRed), ShiftToZero(), Name(""morph""));; ; TCanvas *c = new TCanvas(""rf616_morphing"", ""rf616_morphing"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame1->GetYaxis()->SetTitleOffset(1.4);; frame1->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.8);; frame2->Draw();; ; // Compute the minimum of the nll via minuit; std::vector<RooAbsReal *> nlls = {nll_gauss, nll_morph};; for (auto nll : nlls) {; RooMinimizer minimizer(*nll);; minimizer.setPrintLevel(-1);; minimizer.minimize(""Minuit2"");; RooFitResult *result = minimizer.save();; result->Pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf616__morphing_8C.html:3586,variab,variables,3586,doc/master/rf616__morphing_8C.html,https://root.cern,https://root.cern/doc/master/rf616__morphing_8C.html,1,['variab'],['variables']
Modifiability,"rphing is a implementation of the method of Effective Lagrangian Morphing,...Definition RooLagrangianMorphFunc.h:77; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooWrapperPdfThe RooWrapperPdf is a class that can be used to convert a function into a PDF.Definition RooWrapperPdf.h:24; TCanvasThe Canvas class.Definition TCanvas.h:23; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; TStyle::SetPaintTextFormatvoid SetPaintTextFormat(const char *format=""g"")Definition TStyle.h:386; c1return c1Definition legend1.C:41; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf712_lagrangianmorphfitDefinition rf712_lagrangianmorphfit.py:1; RooLagrangianMorphFunc::ConfigDefinition RooLagrangianMorphFunc.h:85; RooLagrangianMorphFunc::Config::couplingsRooArgList couplingsDefinition RooLagrangianMorphFunc.h:92; RooLagrangianMorphFunc::Config::observableNamestd::string observableNameDefinition RooLagrangianMorphFunc.h:86; RooLagrangianMorphFunc::Config::fileNamestd::string fileNameDefinition RooLagrangianMorphFunc.h:88; RooLagrangianMorphFunc::Config::folderNamesstd::vector< std::string > folderNamesDefinition RooLagrangianMorphFunc.h:91; ; [#0] PROGRESS:InputArguments -- initializing physics inputs from file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master.build/tutorials/roofit/input_histos_rf_lagrangianmorph.root with object name(s) 'pTV'; [#0] PROGRESS:Caching -- creating cache from getCache function for 0x7ffd3a48dc68; [#0] PROGRESS:Caching -- current storage has size 10; [#0] PROGRESS:ObjectHandling -- observable: pTV; [#0] PROGRESS:ObjectHandling -- binWidth: binWidth_pTV; [#1] INFO:DataHandling -- RooDataHist::adjustBinning(pseudo_dh): fit range of variable pTV expanded to nearest bin boundaries: [10,600]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html:6625,coupling,couplingsRooArgList,6625,doc/master/rf712__lagrangianmorphfit_8C.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html,2,['coupling'],"['couplingsDefinition', 'couplingsRooArgList']"
Modifiability,"rpolation class based on GSL interpolation functions ;  CGSLMCIntegrationWorkspace;  CGSLMCIntegrator;  CGSLMinimizerGSLMinimizer class ;  CGSLMinimizer1DMinimizer for arbitrary one dimensional functions ;  CGSLMiserIntegrationWorkspaceWorkspace for MISER ;  CGSLMonteFunctionAdapter;  CGSLMonteFunctionWrapperWrapper to a multi-dim function withtout derivatives for Monte Carlo multi-dimensional integration algorithm ;  CGSLMultiFitGSLMultiFit, internal class for implementing GSL non linear least square GSL fitting ;  CGSLMultiFitFunctionAdapterClass for adapting a C++ functor class to C function pointers used by GSL MultiFit Algorithm The templated C++ function class must implement: ;  CGSLMultiFitFunctionWrapperWrapper to a multi-dim function withtout derivatives for multi-dimensional minimization algorithm ;  CGSLMultiMinDerivFunctionWrapperWrapper for a multi-dimensional function with derivatives used in GSL multidim minimization algorithm ;  CGSLMultiMinFunctionAdapterClass for adapting any multi-dimension C++ functor class to C function pointers used by GSL MultiMin algorithms ;  CGSLMultiMinFunctionWrapperWrapper to a multi-dim function withtout derivatives for multi-dimensional minimization algorithm ;  CGSLMultiMinimizerGSLMultiMinimizer class , for minimizing multi-dimensional function using derivatives ;  CGSLMultiRootBaseSolverGSLMultiRootBaseSolver, internal class for implementing GSL multi-root finders This is the base class for GSLMultiRootSolver (solver not using derivatives) and GSLMUltiRootDerivSolver (solver using derivatives) ;  CGSLMultiRootDerivFunctionWrapperWrapper to a multi-dim function with derivatives for multi roots algorithm ;  CGSLMultiRootDerivSolverGSLMultiRootDerivSolver, internal class for implementing GSL multi-root finders using derivatives ;  CGSLMultiRootFinderClass for Multidimensional root finding algorithms bassed on GSL ;  CGSLMultiRootFunctionAdapterClass for adapting a C++ functor class to C function pointers used by GSL Mul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:32116,adapt,adapting,32116,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,8,['adapt'],['adapting']
Modifiability,"rray * ; params, . int * ; error = nullptr . ). inlinefinalprivatevirtual . Execute method on this object with parameters stored in the TObjArray. ; The TObjArray should contain an argv vector like: argv[0] ... argv[n] = the list of TObjString parameters; TObjStringCollectable string class.Definition TObjString.h:28; nconst Int_t nDefinition legend1.C:16. Implements TInterpreter.; Definition at line 628 of file TCling.h. ◆ Execute() [3/5]. void TCling::Execute ; (; TObject * ; obj, . TClass * ; cl, . const char * ; method, . const char * ; params, . Bool_t ; objectIsConst, . int * ; error = nullptr . ). Execute a method from class cl with arguments params. ; FIXME: The cint-based version of this code does not check if the SetFunc() call works, and does not do any real checking for errors from the Exec() call. It did fetch the most recent cint security error and return that in error, but this does not really translate well to cling/clang. We should enhance these interfaces so that we can report compilation and runtime errors properly. ; Definition at line 5257 of file TCling.cxx. ◆ Execute() [4/5]. void TCling::Execute ; (; TObject * ; obj, . TClass * ; cl, . const char * ; method, . const char * ; params, . int * ; error = nullptr . ). finalvirtual . Implements TInterpreter.; Definition at line 5277 of file TCling.cxx. ◆ Execute() [5/5]. void TCling::Execute ; (; TObject * ; obj, . TClass * ; cl, . TMethod * ; method, . TObjArray * ; params, . int * ; error = nullptr . ). finalvirtual . Execute a method from class cl with the arguments in array params (params[0] ... params[n] = array of TObjString parameters). ; Convert the TObjArray array of TObjString parameters to a character string of comma separated parameters. The parameters of type 'char' are enclosed in double quotes and all internal quotes are escaped. ; Implements TInterpreter.; Definition at line 5291 of file TCling.cxx. ◆ ExecuteMacro(). Longptr_t TCling::ExecuteMacro ; (; const char * ; filename, . EErr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:85388,enhance,enhance,85388,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,1,['enhance'],['enhance']
Modifiability,"rray of X offsets; Int_tfNoylength of array of Y offsets; Int_tfNozlength of array of Z offsets; Int_t*fNsliceX[fNox] number of candidates in X slice; Int_t*fNsliceY[fNoy] number of candidates in Y slice; Int_t*fNsliceZ[fNoz] number of candidates in Z slice; Int_tfNxlength of array of X voxels; Int_tfNylength of array of Y voxels; Int_tfNzlength of array of Z voxels; Int_t*fOBx[fNox] offsets of daughter indices for slices X; Int_t*fOBy[fNoy] offsets of daughter indices for slices Y; Int_t*fOBz[fNoz] offsets of daughter indices for slices Z; Int_t*fOEx[fNox] offsets of extra indices for slices X; Int_t*fOEy[fNoy] offsets of extra indices for slices Y; Int_t*fOEz[fNoz] offsets of extra indices for slices Z; Int_tfPriority[3]priority for each axis; TGeoVolume*fVolumevolume to which applies; Double_t*fXb[fIbx] ordered array of X box boundaries; Double_t*fYb[fIby] ordered array of Y box boundaries; Double_t*fZb[fIbz] ordered array of Z box boundaries. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoVoxelFinder(); Default constructor. TGeoVoxelFinder(TGeoVolume* vol); Default constructor. TGeoVoxelFinder(const TGeoVoxelFinder& ); copy constructor. TGeoVoxelFinder& operator=(const TGeoVoxelFinder& ); assignment operator. ~TGeoVoxelFinder(); Destructor; printf(""deleting finder of %s\n"", fVolume->GetName());. Int_t GetNcandidates(TGeoStateInfo& td) const. Int_t* GetCheckList(Int_t& nelem, TGeoStateInfo& td) const. void BuildVoxelLimits(); build the array of bounding boxes of the nodes inside. void DaughterToMother(Int_t id, const Double_t* local, Double_t* master) const; convert a point from the local reference system of node id to reference; system of mother volume. Bool_t IsSafeVoxel(const Double_t* point, Int_t inode, Double_t minsafe) const; Computes squared distance from POINT to the voxel(s) containing node INODE. Returns 0; if POINT inside voxel(s). Double_t Efficiency(); --- Compute voxelization efficiency. void FindOverl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoVoxelFinder.html:9488,Inherit,Inheritance,9488,root/html534/TGeoVoxelFinder.html,https://root.cern,https://root.cern/root/html534/TGeoVoxelFinder.html,6,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rray will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetHessianMatrix(double* h) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. int CovMatrixStatus() const. return the status of the covariance matrix. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int i) const. get global correlation coefficient for the variable i. This is a number between zero and one which gives; the correlation between the i-th variable and that linear combination of all other variables which; is most strongly correlated with i.; If the variable is fixed or const the return value is zero. bool GetMinosError(unsigned int i, double& errLow, double& errUp, int = 0). get the minos error for parameter i, return false if Minos failed; A minimizaiton must be performed befre, return false if no minimization has been done; In case of Minos failed the status error is updated as following; status += 10 * minosStatus where the minos status is:; status = 1 : maximum number of function calls exceeded when running for lower error; status = 2 : maximum number of function calls exceeded when running for upper error; status = 3 : new minimum found when running for lower error; status = 4 : new minimum found when running for upper error; status = 5 : any other failure. bool Scan(unsigned int i, unsigned int& nstep, double* x, double* y, double xmin = 0, double xmax = 0). scan a parameter i around the minimum. A minimization must have be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html:10008,variab,variable,10008,root/html530/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html,6,['variab'],"['variable', 'variables']"
Modifiability,"rray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; TObject*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TObjectRefSpy.html:2723,Inherit,InheritsFrom,2723,root/html532/TObjectRefSpy.html,https://root.cern,https://root.cern/root/html532/TObjectRefSpy.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; TObject*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TObjectRefSpy.html:2659,Inherit,InheritsFrom,2659,root/html602/TObjectRefSpy.html,https://root.cern,https://root.cern/root/html602/TObjectRefSpy.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TColorGetColor() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Pixel_tGetPixel() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStructNodeProperty.html:2557,Inherit,InheritsFrom,2557,root/html532/TStructNodeProperty.html,https://root.cern,https://root.cern/root/html532/TStructNodeProperty.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TColorGetColor() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Pixel_tGetPixel() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStructNodeProperty.html:2426,Inherit,InheritsFrom,2426,root/html602/TStructNodeProperty.html,https://root.cern,https://root.cern/root/html602/TStructNodeProperty.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rray, several integers, a floating-point number, and an EventHeader object. The EventHeader class is described in the following paragraph. Event also has two pointers, one to a TClonesArray of tracks and one to a histogram. The string “->” in the comment field of the members *fTracks and *fH instructs the automatic Streamer to assume that the objects *fTracks and *fH are never null pointers and that fTracks->Streamer can be used instead of the more time consuming form R__b << fTracks.; class Event : public TObject {; private:; char fType[20];; Int_t fNtrack;; Int_t fNseg;; Int_t fNvertex;; UInt_t fFlag;; Float_t fTemperature;; EventHeader fEvtHdr;; TClonesArray *fTracks; //->; TH1F *fH; //->; Int_t fMeasures[10];; Float_t fMatrix[4][4];; Float_t *fClosestDistance; //[fNvertex]; static TClonesArray *fgTracks;; static TH1F *fgHist;; // ... list of methods; ClassDef(Event,1) //Event structure; };; 12.17.2 The EventHeader Class; The EventHeader class (also defined in Event.h) does not inherit from TObject. Beginning with ROOT 3.0, an object can be placed on a branch even though it does not inherit from TObject. In previous releases branches were restricted to objects inheriting from the TObject. However, it has always been possible to write a class not inheriting from TObject to a tree by encapsulating it in a TObject descending class as is the case in EventHeader and Event.; class EventHeader {; private:; Int_t fEvtNum;; Int_t fRun;; Int_t fDate;; // ... list of methods; ClassDef(EventHeader,1) //Event Header; };; 12.17.3 The Track Class; The Track class descends from TObject since tracks are in a TClonesArray (i.e. a ROOT collection class) and contains a selection of basic types and an array of vertices. Its TObject inheritance enables Track to be in a collection and in Event is a TClonesArray of Tracks.; class Track : public TObject {; private:; Float_t fPx; //X component of the momentum; Float_t fPy; //Y component of the momentum; Float_t fPz; //Z component of the mo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:576741,inherit,inherit,576741,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inherit']
Modifiability,"rray::RemoveAtTObject * RemoveAt(Int_t idx) overrideRemove object at index idx.Definition TObjArray.cxx:694; TObjArray::GetLastInt_t GetLast() const overrideReturn index of last object in array.Definition TObjArray.cxx:577; TObjArray::LowerBoundInt_t LowerBound() constDefinition TObjArray.h:91; TObjArray::Addvoid Add(TObject *obj) overrideDefinition TObjArray.h:68; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::ClassNamevirtual const char * ClassName() constReturns name of class to which the object belongs.Definition TObject.cxx:213; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::IsZombieR__ALWAYS_INLINE Bool_t IsZombie() constDefinition TObject.h:153; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TObject::MakeZombievoid MakeZombie()Definition TObject.h:53; TObject::ResetBitvoid ResetBit(UInt_t f)Definition TObject.h:198; TStorage::ReAllocIntstatic Int_t * ReAllocInt(Int_t *vp, size_t size, size_t oldsize)Reallocate (i.e.Definition TStorage.cxx:258; TStorage::ReAllocstatic void * ReAlloc(void *vp, size_t size, size_t oldsize)Reallocate (i.e.Definition TStorage.cxx:183; TStringBasic string class.Definition TString.h:139; TString::LengthSsiz_t Length() constDefinition TString.h:417; TString::ToLowervoid ToLower()Change string to lower-case.Definition TString.cxx:1182; TString::Clearvoid Clear()Clear string without changin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranch_8cxx_source.html:153443,inherit,inherits,153443,doc/master/TBranch_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranch_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"rrayF > eyL, std::vector< TArrayF > eyH, Int_t m=kOnlyFirst);  TGraphMultiErrors normal constructor with np points and ne y-errors. ;  ;  TGraphMultiErrors (Int_t np, Int_t ne=1);  TGraphMultiErrors normal constructor with np points and ne y-errors. ;  ;  ~TGraphMultiErrors () override;  TGraphMultiErrors default destructor. ;  ; virtual void AddYError (Int_t np, const Double_t *eyL=nullptr, const Double_t *eyH=nullptr);  Add a new y error to the graph and fill it with the values from eyL and eyH ;  ; void Apply (TF1 *f) override;  Apply a function to all data points \( y = f(x,y) \). ;  ; virtual void BayesDivide (const TH1 *pass, const TH1 *total, Option_t *opt="""");  This function is only kept for backward compatibility. ;  ; void ComputeRange (Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const override;  Compute Range. ;  ; virtual void DeleteYError (Int_t e);  Deletes the y error with the index e. ;  ; void Divide (const TH1 *pass, const TH1 *total, Option_t *opt=""cp"");  This function was adapted from the TGraphAsymmErrors class. ;  ; virtual TAttFill * GetAttFill (Int_t e);  Get AttFill pointer for specified error dimension. ;  ; virtual TAttLine * GetAttLine (Int_t e);  Get AttLine pointer for specified error dimension. ;  ; Double_t GetErrorX (Int_t i) const override;  Get error on x coordinate for point i. ;  ; Double_t GetErrorXhigh (Int_t i) const override;  Get high error on x coordinate for point i. ;  ; Double_t GetErrorXlow (Int_t i) const override;  Get low error on x coordinate for point i. ;  ; Double_t GetErrorY (Int_t i) const override;  Get error on y coordinate for point i. ;  ; virtual Double_t GetErrorY (Int_t i, Int_t e) const;  Get error e on y coordinate for point i. ;  ; Double_t GetErrorYhigh (Int_t i) const override;  Get high error on y coordinate for point i. ;  ; virtual Double_t GetErrorYhigh (Int_t i, Int_t e) const;  Get high error e on y coordinate for point i. ;  ; Double_t GetErrorYlow (Int_t i) const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:10197,adapt,adapted,10197,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['adapt'],['adapted']
Modifiability,"rrayL, TArrayF and TArrayD.; Data member is public for historical reasons. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TArray(); static TClass*Class(); virtual Double_tGetAt(Int_t i) const; Int_tGetSize() const; virtual TClass*IsA() const; TArray&operator=(const TArray& rhs); static TArray*ReadArray(TBuffer& b, const TClass* clReq); virtual voidSet(Int_t n); virtual voidSetAt(Double_t v, Int_t i); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TArray(); TArray(Int_t n); TArray(const TArray& a); static voidWriteArray(TBuffer& b, const TArray* a). protected:. Bool_tBoundsOk(const char* where, Int_t at) const; Bool_tOutOfBoundsError(const char* where, Int_t i) const. Data Members; public:. Int_tfNNumber of array elements. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t OutOfBoundsError(const char* where, Int_t i) const; Generate an out-of-bounds error. Always returns false. TArray * ReadArray(TBuffer& b, const TClass* clReq); Read TArray object from buffer. Simplified version of; TBuffer::ReadObject (does not keep track of multiple; references to same array). void WriteArray(TBuffer& b, const TArray* a); Write TArray object to buffer. Simplified version of; TBuffer::WriteObject (does not keep track of multiple; references to the same array). Bool_t BoundsOk(const char* where, Int_t at) const. TArray(); { }. TArray(Int_t n); { }. TArray(const TArray& a); { }. TArray & operator=(const TArray& rhs); {if(this!=&rhs) fN = rhs.fN; return *this; }. virtual ~TArray(); { fN = 0; }. Int_t GetSize() const; { return fN; }. void Set(Int_t n). Double_t GetAt(Int_t i) const. void SetAt(Double_t v, Int_t i). » Author: Fons Rademakers 21/10/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TArray.html:1311,Inherit,Inheritance,1311,root/html602/TArray.html,https://root.cern,https://root.cern/root/html602/TArray.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rrayL64 ();  Delete TArrayL64 object. ;  ; void AddAt (Long64_t c, Int_t i);  Add long64 c at position i. Check for out of bounds. ;  ; void Adopt (Int_t n, Long64_t *array);  Adopt array arr into TArrayL64, i.e. ;  ; Long64_t At (Int_t i) const;  ; void Copy (TArrayL64 &array) const;  ; Long64_t * GetArray ();  ; const Long64_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TArrayL64 & operator= (const TArrayL64 &rhs);  TArrayL64 assignment operator. ;  ; Long64_t & operator[] (Int_t i);  ; Long64_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Long64_t val);  ; void Set (Int_t n) override;  Set size of this array to n long64s. ;  ; void Set (Int_t n, const Long64_t *array);  Set size of this array to n long64s and set the contents. ;  ; void SetAt (Double_t v, Int_t i) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArray;  TArray ();  ;  TArray (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH1; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add of histograms in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: cannot be inlined on Windows/NT. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FitOptionsMake (Option_t *option, Foption_t &Foption);  Decode string choptin and fill fitOption structure. ;  ; static Int_t GetDefaultBufferSize ();  Static function return the defaul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1L.html:37695,inherit,inherited,37695,doc/master/classTH1L.html,https://root.cern,https://root.cern/doc/master/classTH1L.html,1,['inherit'],['inherited']
Modifiability,"rrayL64 ();  Delete TArrayL64 object. ;  ; void AddAt (Long64_t c, Int_t i);  Add long64 c at position i. Check for out of bounds. ;  ; void Adopt (Int_t n, Long64_t *array);  Adopt array arr into TArrayL64, i.e. ;  ; Long64_t At (Int_t i) const;  ; void Copy (TArrayL64 &array) const;  ; Long64_t * GetArray ();  ; const Long64_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TArrayL64 & operator= (const TArrayL64 &rhs);  TArrayL64 assignment operator. ;  ; Long64_t & operator[] (Int_t i);  ; Long64_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Long64_t val);  ; void Set (Int_t n) override;  Set size of this array to n long64s. ;  ; void Set (Int_t n, const Long64_t *array);  Set size of this array to n long64s and set the contents. ;  ; void SetAt (Double_t v, Int_t i) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArray;  TArray ();  ;  TArray (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH2; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH1; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add of histograms in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: cannot be inlined on Windows/NT. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2L.html:43544,inherit,inherited,43544,doc/master/classTH2L.html,https://root.cern,https://root.cern/doc/master/classTH2L.html,1,['inherit'],['inherited']
Modifiability,"rrayL64 ();  Delete TArrayL64 object. ;  ; void AddAt (Long64_t c, Int_t i);  Add long64 c at position i. Check for out of bounds. ;  ; void Adopt (Int_t n, Long64_t *array);  Adopt array arr into TArrayL64, i.e. ;  ; Long64_t At (Int_t i) const;  ; void Copy (TArrayL64 &array) const;  ; Long64_t * GetArray ();  ; const Long64_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TArrayL64 & operator= (const TArrayL64 &rhs);  TArrayL64 assignment operator. ;  ; Long64_t & operator[] (Int_t i);  ; Long64_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Long64_t val);  ; void Set (Int_t n) override;  Set size of this array to n long64s. ;  ; void Set (Int_t n, const Long64_t *array);  Set size of this array to n long64s and set the contents. ;  ; void SetAt (Double_t v, Int_t i) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArray;  TArray ();  ;  TArray (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH3; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH1; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add of histograms in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: cannot be inlined on Windows/NT. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3L.html:43334,inherit,inherited,43334,doc/master/classTH3L.html,https://root.cern,https://root.cern/doc/master/classTH3L.html,1,['inherit'],['inherited']
Modifiability,"rrayL64 assignment operator. ;  ; Long64_t & operator[] (Int_t i);  ; Long64_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Long64_t val);  ; void Set (Int_t n) override;  Set size of this array to n long64s. ;  ; void Set (Int_t n, const Long64_t *array);  Set size of this array to n long64s and set the contents. ;  ; void SetAt (Double_t v, Int_t i) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArray;  TArray ();  ;  TArray (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH2; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH1; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add of histograms in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: cannot be inlined on Windows/NT. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FitOptionsMake (Option_t *option, Foption_t &Foption);  Decode string choptin and fill fitOption structure. ;  ; static Int_t GetDefaultBufferSize ();  Static function return the default buffer size for automatic histograms the parameter fgBufferSize may be changed via SetDefaultBufferSize. ;  ; static Bool_t GetDefaultSumw2 ();  Return kTRUE if TH1::Sumw2 must be called when creating new histograms. ;  ; static void SetDefaultBufferSize (Int_t buff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2L.html:44011,inherit,inherited,44011,doc/master/classTH2L.html,https://root.cern,https://root.cern/doc/master/classTH2L.html,2,['inherit'],['inherited']
Modifiability,"rrayL64 assignment operator. ;  ; Long64_t & operator[] (Int_t i);  ; Long64_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Long64_t val);  ; void Set (Int_t n) override;  Set size of this array to n long64s. ;  ; void Set (Int_t n, const Long64_t *array);  Set size of this array to n long64s and set the contents. ;  ; void SetAt (Double_t v, Int_t i) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArray;  TArray ();  ;  TArray (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH3; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH1; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add of histograms in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: cannot be inlined on Windows/NT. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FitOptionsMake (Option_t *option, Foption_t &Foption);  Decode string choptin and fill fitOption structure. ;  ; static Int_t GetDefaultBufferSize ();  Static function return the default buffer size for automatic histograms the parameter fgBufferSize may be changed via SetDefaultBufferSize. ;  ; static Bool_t GetDefaultSumw2 ();  Return kTRUE if TH1::Sumw2 must be called when creating new histograms. ;  ; static void SetDefaultBufferSize (Int_t buff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3L.html:43801,inherit,inherited,43801,doc/master/classTH3L.html,https://root.cern,https://root.cern/doc/master/classTH3L.html,2,['inherit'],['inherited']
Modifiability,"rrection factor (Phys Rev. D50 3-1 (1994) page 1254) ;  ; void ComputeLradTsaiFactor ();  Compute Tsai's Expression for the Radiation Length (Phys Rev. D50 3-1 (1994) page 1254) ;  ; TGeoElement & operator= (const TGeoElement &other)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoElement.h>. Inheritance diagram for TGeoElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoElement. enum TGeoElement::EGeoElement. protected . EnumeratorkElemUsed ; kElemDefined ; kElementChecked . Definition at line 38 of file TGeoElement.h. Constructor & Destructor Documentation. ◆ TGeoElement() [1/5]. TGeoElement::TGeoElement ; (; const TGeoElement & ; other). privatedelete . ◆ TGeoElement() [2/5]. TGeoElement::TGeoElement ; (; ). Default constructor. ; Definition at line 90 of file TGeoElement.cxx. ◆ TGeoElement() [3/5]. TGeoElement::TGeoElement ; (; const char * ; name, . const char * ; title, . Int_t ; z, . Double_t ; a . ). Obsolete constructor. ; Definition at line 106 of file TGeoElement.cxx. ◆ TGeoElement() [4/5]. TGeoElement::TGeoElement ; (; cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoElement.html:13145,inherit,inherited,13145,doc/master/classTGeoElement.html,https://root.cern,https://root.cern/doc/master/classTGeoElement.html,1,['inherit'],['inherited']
Modifiability,"rrectly aligned. The dot, if last character of the string, is also; stripped, unless this option is specified. One can disable the option by; calling axis.SetDecimals(kTRUE).; Note the bit is set in fBits (as opposed to fBits2 in TAxis!); ; . void SetFunction(const char* funcname = """"). Specify a function to map the axis values.; ; . void SetMaxDigits(Int_t maxd = 5). Static function to set fgMaxDigits for axis.fgMaxDigits is; the maximum number of digits permitted for the axis labels above which the; notation with 10^N is used.For example, to accept 6 digits number like 900000; on an axis call TGaxis::SetMaxDigits(6). The default value is 5.; fgMaxDigits must be greater than 0.; ; . void SetName(const char* name). Change the name of the axis.; ; . void SetMoreLogLabels(Bool_t more = kTRUE). Set the kMoreLogLabels bit flag. When this option is selected more labels are; drawn when in logarithmic scale and there is a small number of decades (less than 3).; Note that this option is automatically inherited from TAxis; ; . void SetNoExponent(Bool_t noExponent = kTRUE). Set the NoExponent flag. By default, an exponent of the form 10^N is used; when the label values are either all very small or very large. One can disable; the exponent by calling axis.SetNoExponent(kTRUE).; ; . void SetOption(Option_t* option = """"). To set axis options.; ; . void SetTitle(const char* title = """"). Change the title of the axis.; ; . void SetTimeFormat(const char* tformat). Change the format used for time plotting.; The format string for date and time use the same options as the one used; in the standard strftime C function, i.e. :; ; for date :; ; %a abbreviated weekday name; %b abbreviated month name; %d day of the month (01-31); %m month (01-12); %y year without century; ; for time :; ; %H hour (24-hour clock); %I hour (12-hour clock); %p local equivalent of AM or PM; %M minute (00-59); %S seconds (00-61); %% %; ; . void SetTimeOffset(Double_t toffset, Option_t* option = ""local""). Change t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGaxis.html:38046,inherit,inherited,38046,root/html604/TGaxis.html,https://root.cern,https://root.cern/root/html604/TGaxis.html,2,['inherit'],['inherited']
Modifiability,"rrent directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fCx;  ; Int_t fCy;  ; Int_t fCz;  ; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ; EStepMode_e fMode;  ; Int_t fNx;  ; Int_t fNy;  ; Int_t fNz;  ; Float_t fOx;  ; Float_t fOy;  ; Float_t fOz;  . Private Member Functions;  TEveGridStepper (const TEveGridStepper &);  Internal traversal variables. ;  ; TEveGridStepper & operator= (const TEveGridStepper &);  . Private Attributes; Int_t * fLimitArr [3];  ; Int_t * fValueArr [3];  . Friends; class TEveGridStepperSubEditor;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TEveGridStepper.h>. Inheritance diagram for TEveGridStepper:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStepMode_e. enum TEveGridStepper::EStepMode_e. EnumeratorkSM_XYZ ; kSM_YXZ ; kSM_XZY . Definition at line 32 of file TEveGridStepper.h. Constructor & Destructor Documentation. ◆ TEveGridStepper() [1/2]. TEveGridStepper::TEveGridStepper ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGridStepper.html:11041,variab,variables,11041,doc/master/classTEveGridStepper.html,https://root.cern,https://root.cern/doc/master/classTEveGridStepper.html,1,['variab'],['variables']
Modifiability,"rrent directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static Int_t AddExec (const char *name);  If Exec with name does not exist in the list of Execs, it is created. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TObjArray * GetListOfExecs ();  Return a pointer to the static TObjArray holding the list of Execs. ;  ; static TObject * GetStaticObject ();  Returns the static object. ;  ; static void SetObject (TObject *obj);  static Obsolete function kept for back compatibility. ;  ; static void SetStaticObject (TObject *obj);  Static function to set the object found on the Action on Demand function. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TProcessID * fPID;  . Static Protected Attributes; static TObjArray * fgExecs = nullptr;  Pointer to ProcessID when TRef was written. ;  ; static TObject * fgObject = nullptr;  . Friends; Bool_t operator!= (const TRef &r1, const TRef &r2);  Return kTRUE if r1 and r2 do not point to the same object. ;  ; Bool_t operator== (const TRef &r1, const TRef &r2);  Return kTRUE if r1 and r2 point to the same object. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x080",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRef.html:20171,inherit,inherited,20171,doc/master/classTRef.html,https://root.cern,https://root.cern/doc/master/classTRef.html,1,['inherit'],['inherited']
Modifiability,"rrent marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEvePointSelectorConsumer;  TEvePointSelectorConsumer (ETreeVarType_e cs=kTVT_XYZ);  ; virtual ~TEvePointSelectorConsumer ();  ; ETreeVarType_e GetSourceCS () const;  ; void SetSourceCS (ETreeVarType_e cs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized des",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLine.html:32541,inherit,inherited,32541,doc/master/classTEveLine.html,https://root.cern,https://root.cern/doc/master/classTEveLine.html,6,['inherit'],['inherited']
Modifiability,"rrent normalization set. ;  . Additional Inherited Members;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooMomentMorphFunc.h>. Inheritance diagram for RooMomentMorphFunc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ Setting. enum RooMomentMorphFunc::Setting. EnumeratorLinear ; NonLinear ; NonLinearPosFractions ; NonLinearLinFractions ; SineLinear . Definition at line 32 of file RooMomentMorphFunc.h. Constructor & Destructor Documentation. ◆ RooMomentMorphFunc() [1/4]. RooMomentMorphFunc::RooMomentMorphFunc ; (; ). Definition at line 38 of file RooMomentMorphFunc.cxx. ◆ RooMomentMorphFunc() [2/4]. RooMomentMorphFunc::RooMomentMorphFunc ; (; const char * ; nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorphFunc.html:60419,inherit,inherited,60419,doc/master/classRooMomentMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorphFunc.html,1,['inherit'],['inherited']
Modifiability,"rrent style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Bool_t fAccObjects {kFALSE};  indicate that object writing started, should be closed in postprocess ;  ; Bool_t fBase64 {kFALSE};  if true, accumulate whole objects in values ;  ; Version_t fClVersion {0};  custom structure for stl container reading ;  ; TStreamerElement * fElem {nullptr};  ; std::unique_ptr< TArrayIndexProducer > fIndx;  indent level ;  ; TStreamerInfo * fInfo {nullptr};  ; Bool_t fIsElemOwner {kFALSE};  ; Bool_t fIsObjStarted {kFALSE};  indicate that value is written ;  ; Bool_t fIsPostProcessed {kFALSE};  ; Bool_t fIsStreamerInfo {kFALSE};  element in streamer info ;  ; Int_t fLevel {0};  pointer on members counter, can be inherit from parent stack objects ;  ; int fMemberCnt {1};  raw values ;  ; int * fMemberPtr {nullptr};  count number of object members, normally _typename is first member ;  ; nlohmann::json * fNode {nullptr};  producer of ndim indexes ;  ; std::unique_ptr< StlRead > fStlRead;  JSON node, used for reading. ;  ; std::vector< std::string > fValues;  enable base64 coding when writing array ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTJSONStackObj.html:9526,inherit,inherit,9526,doc/master/classTJSONStackObj.html,https://root.cern,https://root.cern/doc/master/classTJSONStackObj.html,1,['inherit'],['inherit']
Modifiability,"rrent transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Bool_t fBBoxOK;  ; TGeoVolumeAssembly * fVolume;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoShapeAssembly.html:19919,inherit,inherited,19919,doc/master/classTGeoShapeAssembly.html,https://root.cern,https://root.cern/doc/master/classTGeoShapeAssembly.html,3,['inherit'],['inherited']
Modifiability,"rrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. RooLinkedList_configSetsList of configuration sets for individual integration methods; static RooNumGenConfig*_default; RooCategory_method1DSelects integration method for 1D p.d.f.s; RooCategory_method1DCatSelects integration method for 1D p.d.f.s with categories; RooCategory_method1DCondSelects integration method for 1D conditional p.d.f.s; RooCategory_method1DCondCatSelects integration method for 1D conditional p.d.f.s with categories; RooCategory_method2DSelects integration method for 2D p.d.f.s; RooCategory_method2DCatSelects integration method for 2D p.d.f.s with categories; RooCategory_method2DCondSelects integration method for 2D conditional p.d.f.s; RooCategory_method2DCondCatSelects integration method for 2D conditional p.d.f.s with categories; RooCategory_methodNDSelects integration method for ND p.d.f.s; RooCategory_methodNDCatSelects integration method for ND p.d.f.s with categories; RooCategory_methodNDCondSelects integration method for ND conditional p.d.f.s; RooCategory_methodNDCondCatSelects integration method for ND conditional p.d.f.s with categories; st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumGenConfig.html:7098,config,configuration,7098,root/html526/RooNumGenConfig.html,https://root.cern,https://root.cern/root/html526/RooNumGenConfig.html,7,['config'],['configuration']
Modifiability,"rrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TX11GLManager(const TX11GLManager&); Bool_tCreateGLPixmap(TX11GLManager::TGLContext_t&); TX11GLManager&operator=(const TX11GLManager&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TX11GLManager::TX11GLImpl*fPimpl. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TX11GLManager(); Constructor. ~TX11GLManager(); Destructor. Int_t InitGLWindow(Window_t winID); Try to find correct visual. Int_t CreateGLContext(Int_t winInd); Context creation requires Display * and XVisualInfo; (was saved for such winInd). Bool_t MakeCurrent(Int_t devInd); Make GL context current. void Flush(Int_t ctxInd); Swaps buffers or copy pixmap. Bool_t CreateGLPixmap(TX11GLManager::TGLContext_t& ); Create GL pixmap. Bool_t AttachOffScreenDevice(Int_t ctxInd, Int_t x, Int_t y, UInt_t w, UInt_t h); Attach off screen device. Bool_t ResizeOffScreenDevice(Int_t devInd, Int_t x, Int_t y, UInt_t w, UInt_t h); Resize off screen devive. void SelectOffScreenDevice(Int_t devInd); Selects off-screen device to make it accessible by gVirtualX. void MarkForDirectCopy(Int_t devInd, Bool_t ); Selection-rotation support for TPad/TCanvas. void ReadGLBuffer(Int_t devInd); GL buffer is read info buffer, after that lines are reordered; into XImage",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TX11GLManager.html:6757,Inherit,Inheritance,6757,root/html532/TX11GLManager.html,https://root.cern,https://root.cern/root/html532/TX11GLManager.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rride if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fDim; }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. { return 0; }. double CovMatrix(unsigned int , unsigned int ) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. { return 0; }. » Author: L. Moneta Wed Dec 20 17:16:32 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLSimAnMinimizer.h 31604 2009-12-07 19:04:33Z moneta $ » Last generated: 2009-12-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__GSLSimAnMinimizer.html:7051,variab,variables,7051,root/html526/ROOT__Math__GSLSimAnMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__GSLSimAnMinimizer.html,4,['variab'],"['variable', 'variables']"
Modifiability,"rride if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fDim; }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. { return 0; }. double CovMatrix(unsigned int , unsigned int ) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. { return 0; }. » Author: L. Moneta Wed Dec 20 17:16:32 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLSimAnMinimizer.h 32583 2010-03-12 09:57:42Z moneta $ » Last generated: 2010-09-23 19:56; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__GSLSimAnMinimizer.html:7064,variab,variables,7064,root/html528/ROOT__Math__GSLSimAnMinimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__GSLSimAnMinimizer.html,4,['variab'],"['variable', 'variables']"
Modifiability,"rride if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fDim; }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. { return 0; }. double CovMatrix(unsigned int , unsigned int ) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. { return 0; }. » Author: L. Moneta Wed Dec 20 17:16:32 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLSimAnMinimizer.h 32583 2010-03-12 09:57:42Z moneta $ » Last generated: 2011-07-04 15:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Math__GSLSimAnMinimizer.html:7414,variab,variables,7414,root/html530/ROOT__Math__GSLSimAnMinimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Math__GSLSimAnMinimizer.html,4,['variab'],"['variable', 'variables']"
Modifiability,"rride if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fDim; }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. { return 0; }. double CovMatrix(unsigned int , unsigned int ) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. { return 0; }. » Author: L. Moneta Wed Dec 20 17:16:32 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLSimAnMinimizer.h 32583 2010-03-12 09:57:42Z moneta $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLSimAnMinimizer.html:7414,variab,variables,7414,root/html532/ROOT__Math__GSLSimAnMinimizer.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLSimAnMinimizer.html,8,['variab'],"['variable', 'variables']"
Modifiability,"rride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3PdfBinding_double_double_int_int_.html:44624,config,configuration,44624,root/html602/RooCFunction3PdfBinding_double_double_int_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3PdfBinding_double_double_int_int_.html,8,['config'],['configuration']
Modifiability,"rride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxysigma; RooRealProxywidth; RooRealProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooVoigtian.html:40213,config,configuration,40213,root/html532/RooVoigtian.html,https://root.cern,https://root.cern/root/html532/RooVoigtian.html,4,['config'],['configuration']
Modifiability,"rride;  ; RooFit::OwningPtr< RooArgSet > coefVars (Int_t coefIdx) const override;  Return set of parameters with are used exclusively by the coefficient functions. ;  ; void generateEvent (Int_t code) override;  Interface for generation of an event using the algorithm corresponding to the specified code. ;  ; Int_t getCoefAnalyticalIntegral (Int_t coef, RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Default implementation of function advertising integration capabilities. ;  ; Int_t getGenerator (const RooArgSet &directVars, RooArgSet &generateVars, bool staticInitOK=true) const override;  Load generatedVars with the subset of directVars that we can generate events for, and return a code that specifies the generator algorithm we will use. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsAnaConvPdf;  RooAbsAnaConvPdf ();  Default constructor, required for persistence. ;  ;  RooAbsAnaConvPdf (const char *name, const char *title, const RooResolutionModel &model, RooRealVar &convVar);  Constructor. ;  ;  RooAbsAnaConvPdf (const RooAbsAnaConvPdf &other, const char *name=nullptr);  ;  ~RooAbsAnaConvPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Return analytical integral defined by given code, which is returned by getAnalyticalIntegralWN() ;  ; virtual bool changeModel (const RooResolutionModel &newModel);  Change the current resolution model to newModel. ;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; RooAbsRealLValue * convVar ();  Retrieve the convolution variable. ;  ; const RooAbsRealLValue * convVar () const;  Retrieve the convolution variable. ;  ; Int_t declareB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBDecay.html:4024,inherit,inherited,4024,doc/master/classRooBDecay.html,https://root.cern,https://root.cern/doc/master/classRooBDecay.html,1,['inherit'],['inherited']
Modifiability,"rride;  ; virtual Bool_t IsNullBox () const;  ; Bool_t IsValidBox () const override;  ; TBuffer3D * MakeBuffer3D () const override;  ; Double_t Safety (const Double_t *point, Bool_t in=kTRUE) const override;  ; void Safety_v (const Double_t *points, const Bool_t *inside, Double_t *safe, Int_t vecsize) const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ; void SetDimensions (Double_t *param) override;  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void SetSegsAndPols (TBuffer3D &buffer) const override;  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoShape;  TGeoShape ();  Default constructor. ;  ;  TGeoShape (const char *name);  Default constructor. ;  ;  ~TGeoShape () override;  Destructor. ;  ; virtual void AfterStreamer ();  ; void CheckShape (Int_t testNo, Int_t nsamples=10000, Option_t *option="""");  Test for shape navigation methods. ;  ; virtual void ClearThreadData () const;  ; virtual void CreateThreadData (Int_t);  ; void Draw (Option_t *option="""") override;  Draw this shape. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute mouse actions on this shape. ;  ; Int_t GetId () const;  ; const char * GetName () const override;  Get the shape name. ;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; void InvertShapeBit (UInt_t f);  ; TClass * IsA () const override;  ; virtual Bool_t IsAssembly () const;  ; virtual Bool_t IsComposite () const;  ; virtual Bool_t IsReflected () const;  ; Bool_t IsRunTimeShape () const;  ; Bool_t IsVal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoArb8.html:7341,inherit,inherited,7341,doc/master/classTGeoArb8.html,https://root.cern,https://root.cern/doc/master/classTGeoArb8.html,2,['inherit'],['inherited']
Modifiability,"rride;  ; void Draw (Option_t *option="""") override;  Draw this button with its current attributes. ;  ; virtual Bool_t GetFraming ();  ; virtual const char * GetMethod () const;  ; void Paint (Option_t *option="""") override;  Paint this button with its current attributes. ;  ; void PaintModified () override;  Paint is modified. ;  ; void Range (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Set world coordinate system for the pad. ;  ; void SetBorderMode (Short_t bordermode) override;  ; virtual void SetFraming (Bool_t f=kTRUE);  if framing is set, button will be highlighted ;  ; void SetGrid (Int_t=1, Int_t=1) override;  ; void SetLogx (Int_t=1) override;  ; void SetLogy (Int_t=1) override;  ; virtual void SetMethod (const char *method);  ; void SetName (const char *name) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void x3d (Option_t *="""") override;  Deprecated: use TPad::GetViewer3D() instead. ;  ;  Public Member Functions inherited from TPad;  TPad ();  Pad default constructor. ;  ;  TPad (const char *name, const char *title, Double_t xlow, Double_t ylow, Double_t xup, Double_t yup, Color_t color=-1, Short_t bordersize=-1, Short_t bordermode=-2);  Pad constructor. ;  ;  ~TPad () override;  Pad destructor. ;  ; void AbsCoordinates (Bool_t set) override;  ; Double_t AbsPixeltoX (Int_t px) override;  ; virtual void AbsPixeltoXY (Int_t xpixel, Int_t ypixel, Double_t &x, Double_t &y);  Convert absolute pixel into X/Y coordinates. ;  ; Double_t AbsPixeltoY (Int_t py) override;  ; void Add (TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) override;  Add an object to list of primitives with speicified draw option When. ;  ; void AddExec (const char *name, const char *command) override;  Add a new TExec object to the list of Execs. ;  ; void AddFirst (TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) override;  Add an object as first in list of primitives with speicified draw option When. ;  ; virtual void AutoExe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGroupButton.html:3111,inherit,inherited,3111,doc/master/classTGroupButton.html,https://root.cern,https://root.cern/doc/master/classTGroupButton.html,1,['inherit'],['inherited']
Modifiability,"rride;  ; void MapOutputListToDataMembers () const;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Private Attributes; Bool_t fReturnFeedback;  ; TArrayI fSlaveActW;  ; TArrayL64 fSlaveBytesRead;  ; TArrayF fSlaveEffS;  ; TArrayF fSlaveEvtRti;  ; TArrayF fSlaveInitTime;  ; TArrayF fSlaveMBRti;  ; TArrayF fSlaveProcTime;  ; TArrayL64 fSlaveProgress;  ; TList fSlaves;  ; TArrayL64 fSlaveTotals;  ; TArrayI fSlaveTotS;  . Additional Inherited Members;  Public Types inherited from TProofPlayer; enum  EStatusBits { kDispatchOneEvent = (1ULL << ( 15 )); , kIsProcessing = (1ULL << ( 16 )); , kMaxProcTimeReached = (1ULL << ( 17 )); , kMaxProcTimeExtended = (1ULL << ( 18 )); };  ;  Public Types inherited from TVirtualProofPlayer; enum  EExitStatus { kFinished; , kStopped; , kAborted; };  ; enum  EStatusBits { kIsSubmerger = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerSuperMaster.html:22208,inherit,inherited,22208,doc/master/classTProofPlayerSuperMaster.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerSuperMaster.html,3,['inherit'],['inherited']
Modifiability,"rride;  Check if the file is open. ;  ; Bool_t ReadBuffer (char *buffer, Int_t length) override;  Read a data chunk of the given size. ;  ; Bool_t ReadBuffer (char *buffer, Long64_t position, Int_t length) override;  Read a data chunk of the given size, starting from the given offset. ;  ; Bool_t ReadBuffers (char *buffer, Long64_t *position, Int_t *length, Int_t nbuffs) override;  Read scattered data chunks in one operation. ;  ; Int_t ReOpen (Option_t *modestr) override;  Reopen the file with the new access mode. ;  ; void Seek (Long64_t offset, ERelativeTo position=kBeg) override;  Set the position within the file. ;  ; virtual void SetAsyncOpenStatus (EAsyncOpenStatus status);  Set the status of an asynchronous file open. ;  ; void Streamer (TBuffer &) override;  Stream a TFile object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WriteBuffer (const char *buffer, Int_t length) override;  Write a data chunk. ;  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Opens or creates a local ROOT file. ;  ;  ~TFile () override;  File destructor. ;  ; void Close (Option_t *option="""") override;  Close a file. ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; virtual Bool_t Cp (const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy this file to the dst URL. ;  ; virtual TKey * CreateKey (TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; virtual TKey * CreateKey (TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; void Delete (const char *namecycle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetXNGFile.html:2088,inherit,inherited,2088,doc/master/classTNetXNGFile.html,https://root.cern,https://root.cern/doc/master/classTNetXNGFile.html,1,['inherit'],['inherited']
Modifiability,"rride;  Read a long integer from std::istream s and store it into the branch buffer. ;  ; void SetAddress (void *add=nullptr) override;  Set leaf buffer data address. ;  ; virtual void SetMaximum (Long_t max);  ; virtual void SetMinimum (Long_t min);  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TLeaf;  TLeaf ();  ;  TLeaf (TBranch *parent, const char *name, const char *type);  Create a Leaf. ;  ;  ~TLeaf () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  Browse the content of this leaf. ;  ; virtual bool CanGenerateOffsetArray ();  ; virtual Int_t * GenerateOffsetArray (Int_t base, Int_t events);  ; TBranch * GetBranch () const;  ; virtual TString GetFullName () const;  Return the full name (including the parent's branch names) of the leaf. ;  ; virtual TLeaf * GetLeafCount () const;  If this leaf stores a variable-sized array or a multi-dimensional array whose last dimension has variable size, return a pointer to the TLeaf that stores such size. ;  ; virtual TLeaf * GetLeafCounter (Int_t &countval) const;  Return a pointer to the counter of this leaf (if any) or store the number of elements that the leaf contains in countval. ;  ; virtual const Counts_t * GetLeafCountValues (Long64_t start, Long64_t len);  If this branch is a branch count, return the set of collection size for the entry range requested start: first entry to read and return information about len: number of entries to read. ;  ; virtual Int_t GetLen () const;  Return the number of effective elements of this leaf, for the current entry. ;  ; virtual Int_t GetLenStatic () const;  Return the fixed length of this leaf. ;  ; virtual Int_t GetLenType () const;  ; virtual Int_t GetNdata () const;  ; virtual Int_t GetOffset () const;  ; template<typename T > ; T GetTypedValue (Int_t i=0) const;  ; virtual bool IsOnTerminalBranch () const;  ; virtual bool IsRange () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafG.html:3000,variab,variable-sized,3000,doc/master/classTLeafG.html,https://root.cern,https://root.cern/doc/master/classTLeafG.html,2,['variab'],"['variable', 'variable-sized']"
Modifiability,"rride;  Redraw the tree listbox entry. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fActive;  true if active ;  ; FontStruct_t fFontStruct;  font ;  ; GContext_t fNormGC;  entry drawing context ;  ; TGString * fPath;  entry path ;  ; const TGPicture * fPic;  entry picture ;  ; TGSelectedPicture * fSelPic;  selected picture ;  ; TGString * fText;  entry description ;  ; UInt_t fTHeight;  height of entry text ;  ; UInt_t fTWidth;  width of entry text ;  ;  Protected Attributes inherited from TGLBEntry; Bool_t fActive;  true if entry is active ;  ; Pixel_t fBkcolor;  entry background color ;  ; Int_t fEntryId;  message id of listbox entry ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTreeLBEntry.html:23508,inherit,inherited,23508,doc/master/classTGTreeLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGTreeLBEntry.html,1,['inherit'],['inherited']
Modifiability,"rride;  Return analytical integral defined by given scenario code. ;  ; std::list< double > * binBoundaries (RooAbsRealLValue &, double, double) const override;  Loop over components for plot sampling hints and merge them if there are multiple. ;  ; CacheMode canNodeBeCached () const override;  ; bool checkObservables (const RooArgSet *nset) const override;  Check if PDF is valid for given normalization set. ;  ; TObject * clone (const char *newname) const override;  ; const RooArgList & coefList () const;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; std::unique_ptr< RooAbsReal > createExpectedEventsFunc (const RooArgSet *nset) const override;  Returns an object that represents the expected number of events for a given normalization set, similar to how createIntegral() returns an object that returns the integral. ;  ; double expectedEvents (const RooArgSet *nset) const override;  Return expected number of events for extended likelihood calculation, which is the sum of all coefficients. ;  ; ExtendMode extendMode () const override;  Returns ability of PDF to provide extended likelihood terms. ;  ; void fixCoefNormalization (const RooArgSet &refCoefNorm);  By default the interpretation of the fraction coefficients is performed in the contextual choice of observables. ;  ; void fixCoefRange (const char *rangeName);  By default, fraction coefficients are assumed to refer to the default fit range. ;  ; bool forceAnalyticalInt (const RooAbsArg &) const override;  Force RooRealIntegral to offer all observables for internal integration. ;  ; Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &numVars, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Determine which part (if any) of given integral can be performed analytically. ;  ; const RooArgSet & getCoefNormalization () const;  ; const char * getCoefRange () const;  ; TClass * IsA () const override; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:4351,extend,extended,4351,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,2,['extend'],['extended']
Modifiability,"rride;  Write object contents to given stream. ;  ;  Public Member Functions inherited from RooAbsRealLValue;  RooAbsRealLValue ();  ;  RooAbsRealLValue (const char *name, const char *title, const char *unit="""");  Constructor. ;  ;  RooAbsRealLValue (const RooAbsRealLValue &other, const char *name=nullptr);  Copy constructor. ;  ; TH1F * createHistogram (const char *name, const char *yAxisLabel) const;  Create an empty 1D-histogram with appropriate scale and labels for this variable. ;  ; TH1F * createHistogram (const char *name, const char *yAxisLabel, const RooAbsBinning &bins) const;  Create an empty 1D-histogram with appropriate scale and labels for this variable. ;  ; TH1F * createHistogram (const char *name, const char *yAxisLabel, double xlo, double xhi, Int_t nBins) const;  Create an empty 1D-histogram with appropriate scale and labels for this variable. ;  ; TH2F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const char *zAxisLabel, const RooAbsBinning **bins) const;  Create an empty 2D-histogram with appropriate scale and labels for this variable (x) and the specified y variable. ;  ; TH2F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const char *zAxisLabel=nullptr, double *xlo=nullptr, double *xhi=nullptr, Int_t *nBins=nullptr) const;  Create an empty 2D-histogram with appropriate scale and labels for this variable (x) and the specified y variable. ;  ; TH3F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const RooAbsRealLValue &zvar, const char *tAxisLabel, const RooAbsBinning **bins) const;  ; TH3F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const RooAbsRealLValue &zvar, const char *tAxisLabel, double *xlo=nullptr, double *xhi=nullptr, Int_t *nBins=nullptr) const;  Create an empty 3D-histogram with appropriate scale and labels for this variable (x) and the specified y,z variables. ;  ; TH1 * createHistogram (const char *name, const RooCmdArg &arg1={}, const RooCmdArg &arg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:7291,variab,variable,7291,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,2,['variab'],['variable']
Modifiability,"rride;  get the node division containing the query point ;  ; Int_t GetDivAxis () override;  ; Double_t GetTxz () const;  ; Double_t GetTyz () const;  ; TClass * IsA () const override;  ; Bool_t IsOnBoundary (const Double_t *point) const override;  Checks if the current point is on division boundary. ;  ; TGeoPatternFinder * MakeCopy (Bool_t reflect=kFALSE) override;  Make a copy of this finder. Reflect by Z if required. ;  ; TGeoPatternTrapZ & operator= (const TGeoPatternTrapZ &);  assignment operator ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateMatrix (Int_t idiv, TGeoHMatrix &matrix) const override;  Fills external matrix with the local one corresponding to the given division index. ;  ;  Public Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder ();  Default constructor. ;  ;  TGeoPatternFinder (TGeoVolume *vol, Int_t ndiv);  Default constructor. ;  ;  ~TGeoPatternFinder () override;  Destructor. ;  ; virtual TGeoNode * CdNext ();  Make next node (if any) current. ;  ; void ClearThreadData () const;  ; void CreateThreadData (Int_t nthreads);  Create thread data for n threads max. ;  ; virtual Int_t GetByteCount () const;  ; Int_t GetCurrent ();  Return current index. ;  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex (Int_t index);  ; void SetNext (In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternTrapZ.html:2055,inherit,inherited,2055,doc/master/classTGeoPatternTrapZ.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternTrapZ.html,1,['inherit'],['inherited']
Modifiability,"rride;  resize web window - if possible ;  ;  Public Member Functions inherited from ROOT::RWebDisplayHandle;  RWebDisplayHandle (const std::string &url);  constructor ;  ; virtual ~RWebDisplayHandle ()=default;  required virtual destructor for correct cleanup at the end ;  ; const std::string & GetContent () const;  get content ;  ; const std::string & GetUrl () const;  returns url of start web display ;  ; void SetContent (const std::string &cont);  set content ;  . Static Public Member Functions; static void AddCreator ();  ;  Static Public Member Functions inherited from ROOT::RWebDisplayHandle; static bool CanProduceImages (const std::string &browser="""");  Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ;  ; static std::unique_ptr< RWebDisplayHandle > Display (const RWebDisplayArgs &args);  Create web display. ;  ; static bool DisplayUrl (const std::string &url);  Display provided url in configured web browser. ;  ; static bool NeedHttpServer (const RWebDisplayArgs &args);  Check if http server required for display. ;  ; static bool ProduceImage (const std::string &fname, const std::string &json, int width=800, int height=600, const char *batch_file=nullptr);  Produce image file using JSON data as source Invokes JSROOT drawing functionality in headless browser - Google Chrome or Mozilla Firefox. ;  ; static bool ProduceImages (const std::string &fname, const std::vector< std::string > &jsons, const std::vector< int > &widths, const std::vector< int > &heights, const char *batch_file=nullptr);  Produce image file(s) using JSON data as source Invokes JSROOT drawing functionality in headless browser - Google Chrome or Mozilla Firefox. ;  . Protected Attributes; RootWebView * fView {nullptr};  pointer on widget, need to release when handle is destroyed ;  . Additional Inherited Members;  Static Protected Member Functions inherited from ROOT::RWe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RQt5WebDisplayHandle.html:1605,config,configured,1605,doc/v632/classROOT_1_1RQt5WebDisplayHandle.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RQt5WebDisplayHandle.html,2,['config'],['configured']
Modifiability,"rride;  resize web window - if possible ;  ;  Public Member Functions inherited from ROOT::RWebDisplayHandle;  RWebDisplayHandle (const std::string &url);  constructor ;  ; virtual ~RWebDisplayHandle ()=default;  required virtual destructor for correct cleanup at the end ;  ; const std::string & GetContent () const;  get content ;  ; const std::string & GetUrl () const;  returns url of start web display ;  ; void SetContent (const std::string &cont);  set content ;  . Static Public Member Functions; static void AddCreator ();  ;  Static Public Member Functions inherited from ROOT::RWebDisplayHandle; static bool CanProduceImages (const std::string &browser="""");  Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ;  ; static std::unique_ptr< RWebDisplayHandle > Display (const RWebDisplayArgs &args);  Create web display. ;  ; static bool DisplayUrl (const std::string &url);  Display provided url in configured web browser. ;  ; static std::string GetImageFormat (const std::string &fname);  Detect image format There is special handling of "".screenshot.pdf"" and "".screenshot.png"" extensions Creation of such files relies on headless browser functionality and fully supported only by Chrome browser. ;  ; static bool NeedHttpServer (const RWebDisplayArgs &args);  Check if http server required for display. ;  ; static bool ProduceImage (const std::string &fname, const std::string &json, int width=800, int height=600, const char *batch_file=nullptr);  Produce image file using JSON data as source Invokes JSROOT drawing functionality in headless browser - Google Chrome or Mozilla Firefox. ;  ; static bool ProduceImages (const std::string &fname, const std::vector< std::string > &jsons, const std::vector< int > &widths, const std::vector< int > &heights, const char *batch_file=nullptr);  Produce image file(s) using JSON data as source Invokes JSROOT drawing functio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RQt5WebDisplayHandle.html:1606,config,configured,1606,doc/master/classROOT_1_1RQt5WebDisplayHandle.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RQt5WebDisplayHandle.html,2,['config'],['configured']
Modifiability,"rride;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower) override;  set lower limit variable (override if minimizer supports them ) ;  ; bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper) override;  set upper limit variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableLimits (unsigned int ivar, double lower, double upper) override;  set the limits of an already existing variable ;  ; bool SetVariableLowerLimit (unsigned int ivar, double lower) override;  set the lower-limit of an already existing variable ;  ; bool SetVariableStepSize (unsigned int ivar, double step) override;  set the step size of an already existing variable ;  ; bool SetVariableUpperLimit (unsigned int ivar, double upper) override;  set the upper-limit of an already existing variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; bool SetVariableValues (const double *x) override;  set the values of all existing variables (array must be dimensioned to the size of existing parameters) ;  ; virtual const double * StepSizes () const;  accessor methods ;  ; int VariableIndex (const std::string &name) const override;  get index of variable given a variable given a name return -1 if variable is not found ;  ; std::string VariableName (unsigned int ivar) const override;  get name of variables (override if minimizer support storing of variable names) ;  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Func",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html:3288,variab,variable,3288,doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,3,['variab'],['variable']
Modifiability,"rror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TDirectoryFile (const TDirectoryFile &directory)=delete;  ; void operator= (const TDirectoryFile &)=delete;  . Additional Inherited Members;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDirectory; static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDirectoryFile.html:23022,inherit,inherited,23022,doc/master/classTDirectoryFile.html,https://root.cern,https://root.cern/doc/master/classTDirectoryFile.html,1,['inherit'],['inherited']
Modifiability,"rror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooTemplateProxy< RooAbsPdf > _nominal;  ; RooListProxy _obsSet;  ; RooListProxy _paramSet;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooJeffreysPrior.html:68590,inherit,inherited,68590,doc/master/classRooJeffreysPrior.html,https://root.cern,https://root.cern/doc/master/classRooJeffreysPrior.html,1,['inherit'],['inherited']
Modifiability,"rror (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool _noRounding;  ; bool _protectNegative {true};  ; RooRealProxy mean;  ; RooRealProxy x;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPoisson.html:68210,inherit,inherited,68210,doc/master/classRooPoisson.html,https://root.cern,https://root.cern/doc/master/classRooPoisson.html,1,['inherit'],['inherited']
Modifiability,"rror = 0); Add a data point, with its coordinates specified in the 'data' argset, to the data set.; Layout and size of input argument data is ASSUMED to be the same as RooArgSet returned; RooDataSet::get(). Bool_t merge(RooDataSet* data1, RooDataSet* data2 = 0, RooDataSet* data3 = 0, RooDataSet* data4 = 0, RooDataSet* data5 = 0, RooDataSet* data6 = 0). Bool_t merge(list<RooDataSet*> dsetList); Merge columns of supplied data set(s) with this data set. All; data sets must have equal number of entries. In case of; duplicate columns the column of the last dataset in the list; prevails. void append(RooDataSet& data); Add all data points of given data set to this data set.; Observable in 'data' that are not in this dataset; with not be transferred. RooAbsArg* addColumn(RooAbsArg& var, Bool_t adjustRange = kTRUE); Add a column with the values of the given (function) argument; to this dataset. The function value is calculated for each; event using the observable values of each event in case the; function depends on variables with names that are identical; to the observable names in the dataset. RooArgSet* addColumns(const RooArgList& varList); Add a column with the values of the given list of (function); argument to this dataset. Each function value is calculated for; each event using the observable values of the event in case the; function depends on variables with names that are identical to; the observable names in the dataset. TH2F* createHistogram(const RooAbsRealLValue& var1, const RooAbsRealLValue& var2, const char* cuts = """", const char* name = ""hist"") const; Create a TH2F histogram of the distribution of the specified variable; using this dataset. Apply any cuts to select which events are used.; The variable being plotted can either be contained directly in this; dataset, or else be a function of the variables in this dataset.; The histogram will be created using RooAbsReal::createHistogram() with; the name provided (with our dataset name prepended). TH2F* createHis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDataSet.html:27048,variab,variables,27048,root/html526/RooDataSet.html,https://root.cern,https://root.cern/root/html526/RooDataSet.html,11,['variab'],['variables']
Modifiability,"rror are set. ;  ; double chopAt (double what, Int_t where) const;  Utility to calculate number of decimals to show based on magnitude of error. ;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache Warning: This function copies the cached values of source, it is the callers responsibility to make sure the cache is clean. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; void fillTreeBranch (TTree &t) override;  Overload RooAbsReal::fillTreeBranch to also fill tree branches with (asymmetric) errors if requested. ;  ; void installSharedProp (std::shared_ptr< RooRealVarSharedProperties > &&prop);  Install the shared property into the member _sharedProp. ;  ; void setExpensiveObjectCache (RooExpensiveObjectCache &) override;  variables don't need caches ;  ; void setValFast (double value) override;  ; std::shared_ptr< RooRealVarSharedProperties > sharedProp () const;  Hand out our shared property, create on the fly and register in shared map if necessary. ;  ;  Protected Member Functions inherited from RooAbsRealLValue; bool fitRangeOKForPlotting () const;  Check if fit range is usable as plot range, i.e. ;  ;  Protected Member Functions inherited from RooAbsReal; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:60483,variab,variables,60483,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['variab'],['variables']
Modifiability,"rror bar"" to external coordinates and reports the length of this transformed interval. Strictly speaking, it is now asymmetric, but since the origin of the asymmetry is only an artificial transformation it does not make much sense, so the transformed errors are symmetrized.; The result of all the above is that for parameters with limits, the error reported by Minuit is not exactly equal to the square root of the diagonal element of the error matrix. The difference is a measure of how much the limits deform the problem. If possible, it is suggested not to use limits on parameters, and the problem goes away. If for some reason limits are necessary, and you are sensitive to the difference between the two ways of calculating the errors, it is suggested to use Minos errors which take into account the non-linearities much more precisely. ; Definition at line 27 of file TMinuit.h. Public Types; enum  { kMAXWARN =100; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMinuit ();  Minuit normal constructor. ;  ;  TMinuit (Int_t maxpar);  Minuit normal constructor. ;  ;  ~TMinuit () override;  Minuit default destructor. ;  ; virtual void BuildArrays (Int_t maxpar=15);  Create internal Minuit arrays for the maxpar parameters. ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Command ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit.html:14296,inherit,inherited,14296,doc/master/classTMinuit.html,https://root.cern,https://root.cern/doc/master/classTMinuit.html,1,['inherit'],['inherited']
Modifiability,rror calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual const double * MinGradient () const;  return pointer to gradient values at the minimum ;  ; virtual bool Minimize ()=0;  method to perform the minimization ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual double MinValue () const =0;  return minimum function value ;  ; virtual unsigned int NCalls () const;  number of function calls to reach the minimum ;  ; virtual unsigned int NDim () const =0;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; virtual unsigned int NFree () const;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total (re-implement if minimizer supports bounded parameters) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; virtual bool ProvidesError () const;  minimizer provides error and error matrix ;  ; virtual bool ReleaseVariable (unsigned in,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:7930,variab,variables,7930,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,2,['variab'],['variables']
Modifiability,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TF1AbsComposition; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void InitializeDataMembers (const std::vector< TF1 * > &functions, const std::vector< Double_t > &coeffs, Double_t scale);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< Double_t > fCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1NormSum.html:10510,inherit,inherited,10510,doc/master/classTF1NormSum.html,https://root.cern,https://root.cern/doc/master/classTF1NormSum.html,2,['inherit'],['inherited']
Modifiability,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoIteratorPlugin; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Int_t fColor;  ; Int_t fReplica;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classiterplugin.html:8767,inherit,inherited,8767,doc/master/classiterplugin.html,https://root.cern,https://root.cern/doc/master/classiterplugin.html,2,['inherit'],['inherited']
Modifiability,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternCylR.html:11048,inherit,inherited,11048,doc/master/classTGeoPatternCylR.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylR.html,14,['inherit'],['inherited']
Modifiability,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fTxy = 0.;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternParaY.html:10977,inherit,inherited,10977,doc/master/classTGeoPatternParaY.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaY.html,2,['inherit'],['inherited']
Modifiability,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fTxz = 0.;  ; Double_t fTyz = 0.;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecated",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternParaZ.html:10977,inherit,inherited,10977,doc/master/classTGeoPatternParaZ.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaZ.html,4,['inherit'],['inherited']
Modifiability,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternCylPhi (const TGeoPatternCylPhi &pfc);  [2*fNdivisions] table of sines/cosines ;  ; TGeoPatternCylPhi & operator= (const TGeoPatternCylPhi &pfc);  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternCylPhi.html:10992,inherit,inherited,10992,doc/master/classTGeoPatternCylPhi.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternCylPhi.html,2,['inherit'],['inherited']
Modifiability,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternHoneycomb (const TGeoPatternHoneycomb &);  copy constructor ;  ; TGeoPatternHoneycomb & operator= (const TGeoPatternHoneycomb &);  assignment operator ;  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternHoneycomb.html:10541,inherit,inherited,10541,doc/master/classTGeoPatternHoneycomb.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternHoneycomb.html,2,['inherit'],['inherited']
Modifiability,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternSphPhi (const TGeoPatternSphPhi &pfc)=delete;  Sincos table. ;  ; Double_t * CreateSinCos ();  Create the sincos table if it does not exist. ;  ; TGeoPatternSphPhi & operator= (const TGeoPatternSphPhi &pfc)=delete;  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternSphPhi.html:10909,inherit,inherited,10909,doc/master/classTGeoPatternSphPhi.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternSphPhi.html,2,['inherit'],['inherited']
Modifiability,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THtml::THelperBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TModuleDefinition.html:8915,inherit,inherited,8915,doc/master/classTHtml_1_1TModuleDefinition.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TModuleDefinition.html,4,['inherit'],['inherited']
Modifiability,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THtml::THelperBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void ExpandSearchPath (TString &path) const;  Create all permutations of path and THtml's input path: path being PP/ and THtml's input being .:include/:src/ gives .:. ;  ; virtual bool GetFileName (const TClass *cl, bool decl, TString &out_filename, TString &out_fsys, TFileSysEntry **fse=0) const;  Common implementation for GetDeclFileName(), GetImplFileName() ;  ; TString MatchFileS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TFileDefinition.html:9223,inherit,inherited,9223,doc/master/classTHtml_1_1TFileDefinition.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TFileDefinition.html,2,['inherit'],['inherited']
Modifiability,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMrbSubevent_Caen; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fMer;  ; Int_t fPileup;  ; TString fSevtName;  ;  Protected Attributes inherited from TMrbSubevent_Caen; TUsrHitBuffer fHitBuffer;  ; Int_t fTimeStamp;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUsrSevtData1.html:8617,inherit,inherited,8617,doc/master/classTUsrSevtData1.html,https://root.cern,https://root.cern/doc/master/classTUsrSevtData1.html,4,['inherit'],['inherited']
Modifiability,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRootSnifferStore; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString & fBuf;  ! output buffer ;  ; Bool_t fCompact {kFALSE};  ! produce compact json code ;  ;  Protected Attributes inherited from TRootSnifferStore; TClass * fResClass {nullptr};  ! class of found item ;  ; TDataMember * fResMember {nullptr};  ! datamember pointer of found item ;  ; Int_t fResNumChilds {-1};  ! count of found childs, -1 by default ;  ; void * fResPtr {nullptr};  ! poi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootSnifferStoreJson.html:9568,inherit,inherited,9568,doc/master/classTRootSnifferStoreJson.html,https://root.cern,https://root.cern/doc/master/classTRootSnifferStoreJson.html,2,['inherit'],['inherited']
Modifiability,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TRootSnifferStore; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString & fBuf;  ! output buffer ;  ; Bool_t fCompact {kFALSE};  ! produce compact xml code ;  ;  Protected Attributes inherited from TRootSnifferStore; TClass * fResClass {nullptr};  ! class of found item ;  ; TDataMember * fResMember {nullptr};  ! datamember pointer of found item ;  ; Int_t fResNumChilds {-1};  ! count of found childs, -1 by default ;  ; void * fResPtr {nullptr};  ! poin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootSnifferStoreXml.html:9481,inherit,inherited,9481,doc/master/classTRootSnifferStoreXml.html,https://root.cern,https://root.cern/doc/master/classTRootSnifferStoreXml.html,2,['inherit'],['inherited']
Modifiability,"rror of a RooRealVar as a separate object. More...;  ; class  RooExpensiveObjectCache;  Singleton class that serves as repository for objects that are expensive to calculate. More...;  ; class  RooExtendedTerm;  A p.d.f with no observables that only introduces an extended ML term for a given number of expected events term when an extended ML is constructed. More...;  ; class  RooFactoryWSTool;  Implementation detail of the RooWorkspace. More...;  ; class  RooFFTConvPdf;  PDF for the numerical (FFT) convolution of two PDFs. More...;  ; class  RooFirstMoment;  ; class  RooFoamGenerator;  Generic Monte Carlo toy generator that implement the TFOAM sampling technique on any positively valued function. More...;  ; class  RooFormula;  Internally uses ROOT's TFormula to compute user-defined expressions of RooAbsArgs. More...;  ; class  RooFracRemainder;  Calculates the remainder fraction of a sum of RooAbsReal fraction, i.e (1 - sum_i a_i). More...;  ; class  RooFunctor;  Lightweight interface adaptor that exports a RooAbsPdf as a functor. More...;  ; class  RooGaussKronrodIntegrator1D;  Implements the Gauss-Kronrod integration algorithm. More...;  ; class  RooGenContext;  Implements a universal generator context for all RooAbsPdf classes that do not have or need a specialized generator context. More...;  ; class  RooGenericPdf;  Implementation of a probability density function that takes a RooArgList of servers and a C++ expression string defining how its value should be calculated from the given list of servers. More...;  ; class  RooGenFitStudy;  Abstract base class for RooStudyManager modules. More...;  ; class  RooGenProdProj;  General form of projected integral of product of PDFs, utility class for RooProdPdf. More...;  ; class  RooHist;  Graphical representation of binned data based on the TGraphAsymmErrors class. More...;  ; class  RooHistError;  Singleton class used to calculate the error bars for each bin of a RooHist object. More...;  ; class  RooHistFunc;  A real",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Roofitcore.html:10698,adapt,adaptor,10698,doc/master/group__Roofitcore.html,https://root.cern,https://root.cern/doc/master/group__Roofitcore.html,1,['adapt'],['adaptor']
Modifiability,"rror(Int_t axis = 1) const; virtual Double_tGetSkewness(Int_t axis = 1) const; virtual voidGetStats(Double_t* stats) const; Double_tGetStdDev(Int_t axis = 1) const; Double_tGetStdDevError(Int_t axis = 1) const; virtual Double_tGetSumOfWeights() const; virtual TArrayD*GetSumw2(); virtual const TArrayD*GetSumw2() const; virtual Int_tGetSumw2N() const; virtual Float_tGetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tGetTitleFont(Option_t* axis = ""X"") const; virtual Float_tGetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tGetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*GetXaxis() const; TAxis*GetYaxis() const; TAxis*GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tIntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tInterpolate(Double_t x); virtual Double_tInterpolate(Double_t x, Double_t y); virtual Double_tInterpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsBinOverflow(Int_t bin) const; Bool_tIsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tKolmogorovTest(const TH1* h2, Option_t* option = """") const; virtual voidLabelsDeflate(Option_t* axis = ""X""); virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH1.html:25960,Inherit,InheritsFrom,25960,root/html534/TH1.html,https://root.cern,https://root.cern/root/html534/TH1.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rror(RooAbsData::ErrorType etype = RooAbsData::Poisson) const. void weightError(Double_t& lo, Double_t& hi, RooAbsData::ErrorType etype = RooAbsData::Poisson) const. Bool_t isWeighted() const. void loadValues(const RooAbsDataStore* tds, const RooFormulaVar* select = 0, const char* rangeName = 0, Int_t nStart = 0, Int_t nStop = 2000000000). Bool_t changeObservableName(const char* from, const char* to); Change name of internal observable named 'from' into 'to'. RooAbsArg* addColumn(RooAbsArg& var, Bool_t adjustRange = kTRUE); WVE ownership issue here!! Caller (a RooAbsData) should take ownership of all; arguments, but only does for the first one here... RooArgSet* addColumns(const RooArgList& varList); WVE ownership issue here!! Caller (a RooAbsData) should take ownership of all; arguments, but only does for the first one here... RooAbsDataStore* merge(const RooArgSet& allvars, list<RooAbsDataStore*> dstoreList). void append(RooAbsDataStore& other). Int_t numEntries() const. void reset(). void cacheArgs(const RooAbsArg* owner, RooArgSet& varSet, const RooArgSet* nset = 0). void setArgStatus(const RooArgSet& set, Bool_t active). void attachCache(const RooAbsArg* newOwner, const RooArgSet& cachedVars); Initialize cache of dataset: attach variables of cache ArgSet; to the corresponding TTree branches. void resetCache(). void attachBuffers(const RooArgSet& extObs). void resetBuffers(). void dump(). RooAbsDataStore* clone(const char* newname = 0) const; Empty ctor. { return new RooCompositeDataStore(*this,newname) ; }. RooAbsDataStore* clone(const RooArgSet& vars, const char* newname = 0) const; { return new RooCompositeDataStore(*this,vars,newname) ; }. RooCategory* index(); { return _indexCat ; }. const RooAbsArg* cacheOwner(); { return 0 ; }. » Last changed: Fri Dec 2 14:26:43 2011 » Last generated: 2011-12-02 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCompositeDataStore.html:12203,variab,variables,12203,root/html532/RooCompositeDataStore.html,https://root.cern,https://root.cern/root/html532/RooCompositeDataStore.html,2,['variab'],['variables']
Modifiability,"rror(errno));; 15516 } else if (setuid(to_pw->pw_uid) == -1) {; 15517 mg_cry_ctx_internal(phys_ctx,; 15518 ""%s: setuid(%s): %s"",; 15519 __func__,; 15520 run_as_user,; 15521 strerror(errno));; 15522 } else {; 15523 success = 1;; 15524 }; 15525 }; 15526 }; 15527 ; 15528 return success;; 15529}; 15530#endif /* !_WIN32 */; 15531 ; 15532 ; 15533static void; 15534tls_dtor(void *key); 15535{; 15536 struct mg_workerTLS *tls = (struct mg_workerTLS *)key;; 15537 /* key == pthread_getspecific(sTlsKey); */; 15538 ; 15539 if (tls) {; 15540 if (tls->is_master == 2) {; 15541 tls->is_master = -3; /* Mark memory as dead */; 15542 mg_free(tls);; 15543 }; 15544 }; 15545 pthread_setspecific(sTlsKey, NULL);; 15546}; 15547 ; 15548 ; 15549#if defined(USE_MBEDTLS); 15550/* Check if SSL is required.; 15551 * If so, set up ctx->ssl_ctx pointer. */; 15552static int; 15553mg_sslctx_init(struct mg_context *phys_ctx, struct mg_domain_context *dom_ctx); 15554{; 15555 if (!phys_ctx) {; 15556 return 0;; 15557 }; 15558 ; 15559 if (!dom_ctx) {; 15560 dom_ctx = &(phys_ctx->dd);; 15561 }; 15562 ; 15563 if (!is_ssl_port_used(dom_ctx->config[LISTENING_PORTS])) {; 15564 /* No SSL port is set. No need to setup SSL. */; 15565 return 1;; 15566 }; 15567 ; 15568 dom_ctx->ssl_ctx = (SSL_CTX *)mg_calloc(1, sizeof(*dom_ctx->ssl_ctx));; 15569 if (dom_ctx->ssl_ctx == NULL) {; 15570 fprintf(stderr, ""ssl_ctx malloc failed\n"");; 15571 return 0;; 15572 }; 15573 ; 15574 return mbed_sslctx_init(dom_ctx->ssl_ctx, dom_ctx->config[SSL_CERTIFICATE]); 15575 == 0; 15576 ? 1; 15577 : 0;; 15578}; 15579 ; 15580#elif !defined(NO_SSL); 15581 ; 15582static int ssl_use_pem_file(struct mg_context *phys_ctx,; 15583 struct mg_domain_context *dom_ctx,; 15584 const char *pem,; 15585 const char *chain);; 15586static const char *ssl_error(void);; 15587 ; 15588 ; 15589static int; 15590refresh_trust(struct mg_connection *conn); 15591{; 15592 struct stat cert_buf;; 15593 int64_t t = 0;; 15594 const char *pem;; 15595 const char *chain;; 15596 in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:459867,config,config,459867,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"rror(errno));; 15517 } else if (setuid(to_pw->pw_uid) == -1) {; 15518 mg_cry_ctx_internal(phys_ctx,; 15519 ""%s: setuid(%s): %s"",; 15520 __func__,; 15521 run_as_user,; 15522 strerror(errno));; 15523 } else {; 15524 success = 1;; 15525 }; 15526 }; 15527 }; 15528 ; 15529 return success;; 15530}; 15531#endif /* !_WIN32 */; 15532 ; 15533 ; 15534static void; 15535tls_dtor(void *key); 15536{; 15537 struct mg_workerTLS *tls = (struct mg_workerTLS *)key;; 15538 /* key == pthread_getspecific(sTlsKey); */; 15539 ; 15540 if (tls) {; 15541 if (tls->is_master == 2) {; 15542 tls->is_master = -3; /* Mark memory as dead */; 15543 mg_free(tls);; 15544 }; 15545 }; 15546 pthread_setspecific(sTlsKey, NULL);; 15547}; 15548 ; 15549 ; 15550#if defined(USE_MBEDTLS); 15551/* Check if SSL is required.; 15552 * If so, set up ctx->ssl_ctx pointer. */; 15553static int; 15554mg_sslctx_init(struct mg_context *phys_ctx, struct mg_domain_context *dom_ctx); 15555{; 15556 if (!phys_ctx) {; 15557 return 0;; 15558 }; 15559 ; 15560 if (!dom_ctx) {; 15561 dom_ctx = &(phys_ctx->dd);; 15562 }; 15563 ; 15564 if (!is_ssl_port_used(dom_ctx->config[LISTENING_PORTS])) {; 15565 /* No SSL port is set. No need to setup SSL. */; 15566 return 1;; 15567 }; 15568 ; 15569 dom_ctx->ssl_ctx = (SSL_CTX *)mg_calloc(1, sizeof(*dom_ctx->ssl_ctx));; 15570 if (dom_ctx->ssl_ctx == NULL) {; 15571 fprintf(stderr, ""ssl_ctx malloc failed\n"");; 15572 return 0;; 15573 }; 15574 ; 15575 return mbed_sslctx_init(dom_ctx->ssl_ctx, dom_ctx->config[SSL_CERTIFICATE]); 15576 == 0; 15577 ? 1; 15578 : 0;; 15579}; 15580 ; 15581#elif !defined(NO_SSL); 15582 ; 15583static int ssl_use_pem_file(struct mg_context *phys_ctx,; 15584 struct mg_domain_context *dom_ctx,; 15585 const char *pem,; 15586 const char *chain);; 15587static const char *ssl_error(void);; 15588 ; 15589 ; 15590static int; 15591refresh_trust(struct mg_connection *conn); 15592{; 15593 struct stat cert_buf;; 15594 int64_t t = 0;; 15595 const char *pem;; 15596 const char *chain;; 15597 in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:459900,config,config,459900,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"rror(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. list<std::string>_miStateNameList; map<std::string,std::pair<std::list<std::string>,std::string> >_paramSplitMap<paramName,<list<splitCatSet>,remainderStateName>>; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void splitParameter(const char* paramList, const char* categoryList); Specify that parameters names listed in paramNameList be splitted in (product of) category(s); listed in categoryNameList. void splitParameterConstrained(const char* paramNameList, const char* categoryNameList, const char* remainderStateName); Specify that parameters names listed in paramNameList be splitted in constrained way in (product of) category(s); listed in categoryNameList and that remainder fraction formula be put in state with name remainderStateName. void configure(const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct the SplitRule object from a list of named arguments past to RooSimWSTool::build; This method parses any SplitParam and SplitParamComstrained argument in the list. SplitRule(const char* pdfName = """"); {}. virtual ~SplitRule(); {}. » Last changed: Mon Jul 4 15:24:02 2011 » Last generated: 2011-07-04 15:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooSimWSTool__SplitRule.html:10090,config,configure,10090,root/html530/RooSimWSTool__SplitRule.html,https://root.cern,https://root.cern/root/html530/RooSimWSTool__SplitRule.html,1,['config'],['configure']
Modifiability,"rror(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. list<std::string>_miStateNameList; map<std::string,std::pair<std::list<std::string>,std::string> >_paramSplitMap<paramName,<list<splitCatSet>,remainderStateName>>; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void splitParameter(const char* paramList, const char* categoryList); Specify that parameters names listed in paramNameList be splitted in (product of) category(s); listed in categoryNameList. void splitParameterConstrained(const char* paramNameList, const char* categoryNameList, const char* remainderStateName); Specify that parameters names listed in paramNameList be splitted in constrained way in (product of) category(s); listed in categoryNameList and that remainder fraction formula be put in state with name remainderStateName. void configure(const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct the SplitRule object from a list of named arguments past to RooSimWSTool::build; This method parses any SplitParam and SplitParamComstrained argument in the list. SplitRule(const char* pdfName = """"); {}. virtual ~SplitRule(); {}. » Last changed: Sat Oct 9 22:38:50 2010 » Last generated: 2010-10-09 22:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooSimWSTool__SplitRule.html:10021,config,configure,10021,root/html528/RooSimWSTool__SplitRule.html,https://root.cern,https://root.cern/root/html528/RooSimWSTool__SplitRule.html,1,['config'],['configure']
Modifiability,"rror(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. list<std::string>_miStateNameList; map<std::string,std::pair<std::list<std::string>,std::string> >_paramSplitMap<paramName,<list<splitCatSet>,remainderStateName>>; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void splitParameter(const char* paramList, const char* categoryList); Specify that parameters names listed in paramNameList be splitted in (product of) category(s); listed in categoryNameList. void splitParameterConstrained(const char* paramNameList, const char* categoryNameList, const char* remainderStateName); Specify that parameters names listed in paramNameList be splitted in constrained way in (product of) category(s); listed in categoryNameList and that remainder fraction formula be put in state with name remainderStateName. void configure(const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct the SplitRule object from a list of named arguments past to RooSimWSTool::build; This method parses any SplitParam and SplitParamComstrained argument in the list. SplitRule(const char* pdfName = """"); {}. virtual ~SplitRule(); {}. » Last changed: Thu Nov 3 20:09:18 2011 » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSimWSTool__SplitRule.html:10090,config,configure,10090,root/html532/RooSimWSTool__SplitRule.html,https://root.cern,https://root.cern/root/html532/RooSimWSTool__SplitRule.html,2,['config'],['configure']
Modifiability,"rror(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. list<std::string>_miStateNameList; map<std::string,std::pair<std::list<std::string>,std::string> >_paramSplitMap<paramName,<std::list<splitCatSet>,remainderStateName>>; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void splitParameter(const char* paramList, const char* categoryList); Specify that parameters names listed in paramNameList be split in (product of) category(s); listed in categoryNameList. void splitParameterConstrained(const char* paramNameList, const char* categoryNameList, const char* remainderStateName); Specify that parameters names listed in paramNameList be split in constrained way in (product of) category(s); listed in categoryNameList and that remainder fraction formula be put in state with name remainderStateName. void configure(const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct the SplitRule object from a list of named arguments past to RooSimWSTool::build; This method parses any SplitParam and SplitParamComstrained argument in the list. SplitRule(const char* pdfName = """"); {}. virtual ~SplitRule(); {}. » Last changed: Tue Mar 10 17:19:15 2015 » Last generated: 2015-03-10 17:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSimWSTool__SplitRule.html:10105,config,configure,10105,root/html534/RooSimWSTool__SplitRule.html,https://root.cern,https://root.cern/root/html534/RooSimWSTool__SplitRule.html,2,['config'],['configure']
Modifiability,"rror(unsigned int, double); voidSetError(const string&, double); voidSetLimits(unsigned int, double, double); voidSetLimits(const string&, double, double); voidSetLowerLimit(unsigned int, double); voidSetLowerLimit(const string&, double); voidSetPrecision(double eps); voidSetUpperLimit(unsigned int, double); voidSetUpperLimit(const string&, double); voidSetValue(unsigned int, double); voidSetValue(const string&, double); const ROOT::Minuit2::MnUserTransformation&Trafo() const; doubleValue(unsigned int) const; doubleValue(const string&) const; unsigned intVariableParameters() const. Data Members; private:. intfCovStatuscovariance matrix status ; ROOT::Minuit2::MnUserCovariancefCovariance; boolfCovarianceValid; doublefEDM; doublefFVal; boolfGCCValid; ROOT::Minuit2::MnGlobalCorrelationCoefffGlobalCC; ROOT::Minuit2::MnUserCovariancefIntCovariance; vector<double>fIntParameters; unsigned intfNFcn; ROOT::Minuit2::MnUserParametersfParameters; boolfValid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MnUserParameterState(); default constructor (invalid state). {}. MnUserParameterState(const std::vector<double>&, const std::vector<double>&); construct from user parameters (before minimization). MnUserParameterState(const MnUserParameters&). MnUserParameterState(const ROOT::Minuit2::MinimumState& , double , const ROOT::Minuit2::MnUserTransformation& ); construct from user parameters + covariance (before minimization). MnUserParameterState(const std::vector<double>&, const MnUserCovariance&). MnUserParameterState(const MnUserParameters&, const MnUserCovariance&). MnUserParameterState(const ROOT::Minuit2::MinimumState& , double , const ROOT::Minuit2::MnUserTransformation& ); construct from internal parameters (after minimization). ~MnUserParameterState(); {}. MnUserParameterState(const MnUserParameterState& state); {}. MnUserParameterState& operator=(const ROOT::Minuit2::MnUserParameterState& state). const MnGlobalCorrelationCoeff& Glo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__MnUserParameterState.html:3948,Inherit,Inheritance,3948,root/html532/ROOT__Minuit2__MnUserParameterState.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__MnUserParameterState.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rrorCount;  ; std::map< std::string, std::unique_ptr< std::ostream > > _files;  ; RooFit::MsgLevel _globMinLevel;  ; RooFit::MsgLevel _lastMsgLevel;  ; bool _showPid;  ; bool _silentMode;  ; std::vector< StreamConfig > _streams;  ; std::stack< std::vector< StreamConfig > > _streamsSaved;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooMsgService.h>. Inheritance diagram for RooMsgService:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~RooMsgService(). RooMsgService::~RooMsgService ; (; ). overridedefault . ◆ RooMsgService() [1/2]. RooMsgService::RooMsgService ; (; ). protected . Constructor. ; Defines names of message levels and mapping of topic codes to topic names Install default message streams. ; Definition at line 80 of file RooMsgService.cxx. ◆ RooMsgService() [2/2]. RooMsgService::RooMsgService ; (; const RooMsgService & ; ). protected . Member Function Documentation. ◆ activeStream(). template<class T > . Int_t RooMsgService::activeStream ; (; T ; self, . RooFit::MsgTopic ; topic, . RooFit::MsgLevel ; level . ). inlineprotected . Find appropriate logging stream for message from given object with given topic and message level. ; Definition at line 213 of file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMsgService.html:14785,inherit,inherited,14785,doc/master/classRooMsgService.html,https://root.cern,https://root.cern/doc/master/classRooMsgService.html,1,['inherit'],['inherited']
Modifiability,rrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool _allExtendable = false;  Flag indicating if all PDF components are extendable. ;  ; RooAICRegistry _codeReg = 10;  ! Registry of component analytical integration codes ;  ; std::vector< double > _coefCache;  ! Transient cache with transformed values of coefficients ;  ; Int_t _coefErrCount;  ! Coefficient error counter ;  ; RooListProxy _coefList;  List of coefficients. ;  ; bool _haveLastCoef = false;  Flag indicating if last PDFs coefficient was supplied in the constructor. ;  ; RooObjCacheManager _intCacheMgr;  ! Manager of cache with integrals ;  ; RooArgSet _ownedComps;  ! Owned components ;  ; RooListProxy _pdfList;  List of component PDFs. ;  ; RooObjCacheManager _projCacheMgr;  ! Manager of cache with coefficient projections and transformations ;  ; RooSetProxy _refCoefNorm;  ! Reference observable set for coefficient interpretation ;  ; TNamed * _refCoefRangeName = nullptr;  ! Reference range name for coefficient interpretation ;  ; RooArgList * _snormList {nullptr};  ! List of supplemental normalization factors ;  ;  Protected Attributes inherited from RooResolutionModel; RooFormulaVar * _basis = nullptr;  Basis function convolved with this resolution model. ;  ; Int_t _basisCode;  Identifier code for selected basis function. ;  ; bool _ownBasis;  Flag indicating ownership of _basis. ;  ; RooTemplateProxy< RooAbsRealLValue > x;  Dependent/convolution variable. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< Roo,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:72441,inherit,inherited,72441,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['inherit'],['inherited']
Modifiability,"rrorPruning =0; , kCostComplexityPruning; , kNoPruning; };  ; typedef std::vector< const TMVA::Event * > EventConstList;  ; typedef std::vector< TMVA::Event * > EventList;  . Public Member Functions;  DecisionTree (const DecisionTree &d);  copy constructor that creates a true copy, i.e. ;  ;  DecisionTree (SeparationBase *sepType, Float_t minSize, Int_t nCuts, DataSetInfo *=nullptr, UInt_t cls=0, Bool_t randomisedTree=kFALSE, Int_t useNvars=0, Bool_t usePoissonNvars=kFALSE, UInt_t nMaxDepth=9999999, Int_t iSeed=fgRandomSeed, Float_t purityLimit=0.5, Int_t treeID=0);  constructor specifying the separation type, the min number of events in a no that is still subjected to further splitting, the number of bins in the grid used in applying the cut for the node splitting. ;  ;  DecisionTree (void);  default constructor using the GiniIndex as separation criterion, no restrictions on minium number of events in a leave note or the separation gain in the node splitting ;  ; virtual ~DecisionTree (void);  destructor ;  ; void ApplyValidationSample (const EventConstList *validationSample) const;  run the validation sample through the (pruned) tree and fill in the nodes the variables NSValidation and NBValidadtion (i.e. ;  ; UInt_t BuildTree (const EventConstList &eventSample, DecisionTreeNode *node=nullptr);  building the decision tree by recursively calling the splitting of one (root-) node into two daughter nodes (returns the number of nodes) ;  ; Double_t CheckEvent (const TMVA::Event *, Bool_t UseYesNoLeaf=kFALSE) const;  the event e is put into the decision tree (starting at the root node) and the output is NodeType (signal) or (background) of the final node (basket) in which the given events ends up. ;  ; void CheckEventWithPrunedTree (const TMVA::Event *) const;  pass a single validation event through a pruned decision tree on the way down the tree, fill in all the ""intermediate"" information that would normally be there from training. ;  ; virtual const char * ClassName ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:3042,variab,variables,3042,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['variab'],['variables']
Modifiability,"rrors in column-wise representation. std::vector<double> Errors() const. void Add(const string& name, double val, double err); add free Parameter. void Add(const string& name, double val, double err, double , double ); add limited Parameter. void Add(const string& , double ); add const Parameter. void Fix(unsigned int ); interaction via external number of Parameter. void Release(unsigned int ). void SetValue(unsigned int , double ). void SetError(unsigned int , double ). void SetLimits(unsigned int , double , double ). void SetUpperLimit(unsigned int , double ). void SetLowerLimit(unsigned int , double ). void RemoveLimits(unsigned int ). double Value(unsigned int ) const. double Error(unsigned int ) const. void Fix(const string& ); interaction via Name of Parameter. void Release(const string& ). void SetValue(const string& , double ). void SetError(const string& , double ). void SetLimits(const string& , double , double ). void SetUpperLimit(const string& , double ). void SetLowerLimit(const string& , double ). void RemoveLimits(const string& ). double Value(const string& ) const. double Error(const string& ) const. unsigned int Index(const string& ) const; convert Name into external number of Parameter. const std::string & GetName(unsigned int ) const; convert external number into Name of Parameter. const char* Name(unsigned int ) const; mantain interface with const char * for backward compatibility. double Int2ext(unsigned int , double ) const; transformation internal <-> external. double Ext2int(unsigned int , double ) const. unsigned int IntOfExt(unsigned int ) const. unsigned int ExtOfInt(unsigned int ) const. unsigned int VariableParameters() const. void SetPrecision(double eps). » Last changed: root/minuit2:$Id: MnUserParameterState.h 42202 2011-11-23 17:07:20Z moneta $ » Last generated: 2011-12-02 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__MnUserParameterState.html:7704,Variab,VariableParameters,7704,root/html532/ROOT__Minuit2__MnUserParameterState.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__MnUserParameterState.html,1,['Variab'],['VariableParameters']
Modifiability,"rrors vectors ;  ; virtual int CovMatrixStatus () const;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; virtual double Edm () const;  return expected distance reached from the minimum (re-implement if minimizer provides it ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual const double * Errors () const;  return errors at the minimum ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:6024,variab,variable,6024,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,2,['variab'],"['variable', 'variables']"
Modifiability,"rs ------------------------------------------------; returns reference to data set. { return fDataSetInfo; }. UInt_t GetNEvents() const; event reference and update. { return Data()->GetNEvents(); }. Bool_t HasMVAPdfs() const; { return fHasMVAPdfs; }. void SetAnalysisType(TMVA::Types::EAnalysisType type); { fAnalysisType = type; }. Types::EAnalysisType GetAnalysisType() const; { return fAnalysisType; }. Bool_t DoRegression() const; { return fAnalysisType == Types::kRegression; }. Bool_t DoMulticlass() const; { return fAnalysisType == Types::kMulticlass; }. void DisableWriting(Bool_t setter); setter method for suppressing writing to XML and writing of standalone classes. { fDisableWriting = setter; }. const TString& GetWeightFileDir() const; { return fFileDir; }. Bool_t IsNormalised() const; are input variables normalised ?. { return fNormalise; }. void SetNormalised(Bool_t norm); { fNormalise = norm; }. Bool_t Verbose() const; set number of input variables (only used by MethodCuts, could perhaps be removed); void SetNvar( Int_t n ) { fNvar = n; }; verbose and help flags. { return fVerbose; }. Bool_t Help() const; { return fHelp; }. const TString& GetInternalVarName(Int_t ivar) const; ---------- protected event and tree accessors -----------------------------; names of input variables (if the original names are expressions, they are; transformed into regexps). { return (*fInputVars)[ivar]; }. const TString& GetOriginalVarName(Int_t ivar) const; { return DataInfo().GetVariableInfo(ivar).GetExpression(); }. Bool_t HasTrainingTree() const; { return Data()->GetNTrainingEvents() != 0; }. void MakeClassSpecific(ostream& , const TString& = """") const; ---------- protected auxiliary methods ------------------------------------; make ROOT-independent C++ class for classifier response (classifier-specific implementation). {}. void MakeClassSpecificHeader(ostream& , const TString& = """") const; header and auxiliary classes. {}. Bool_t TxtWeightsOnly() const; if TRUE, write weights ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodBase.html:35516,variab,variables,35516,root/html530/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodBase.html,3,['variab'],['variables']
Modifiability,"rs ; Definition at line 143 of file VariableTransformBase.h. ◆ fLogger. MsgLogger* TMVA::VariableTransformBase::fLogger. mutableprotected . ! message logger ; Definition at line 174 of file VariableTransformBase.h. ◆ fNormalise. Bool_t TMVA::VariableTransformBase::fNormalise. private . normalise input variables ; Definition at line 155 of file VariableTransformBase.h. ◆ fNSpectators. UInt_t TMVA::VariableTransformBase::fNSpectators. mutableprivate . number of spectators to be transformed ; Definition at line 165 of file VariableTransformBase.h. ◆ fNTargets. UInt_t TMVA::VariableTransformBase::fNTargets. mutableprivate . number of targets to be transformed ; Definition at line 164 of file VariableTransformBase.h. ◆ fNVariables. UInt_t TMVA::VariableTransformBase::fNVariables. mutableprivate . number of variables to be transformed ; Definition at line 163 of file VariableTransformBase.h. ◆ fNVars. UInt_t TMVA::VariableTransformBase::fNVars. private . number of variables ; Definition at line 156 of file VariableTransformBase.h. ◆ fPut. VectorOfCharAndInt TMVA::VariableTransformBase::fPut. protected . put variables/targets/spectators ; Definition at line 144 of file VariableTransformBase.h. ◆ fSortGet. Bool_t TMVA::VariableTransformBase::fSortGet. private . if true, sort the variables into the order as defined by the user at the var definition if false, sort the variables according to the order given for the var transformation ; Definition at line 167 of file VariableTransformBase.h. ◆ fSpectators. std::vector<TMVA::VariableInfo> TMVA::VariableTransformBase::fSpectators. private . event spectators [saved to weight file --> TODO ] ; Definition at line 160 of file VariableTransformBase.h. ◆ fTargets. std::vector<TMVA::VariableInfo> TMVA::VariableTransformBase::fTargets. private . event targets [saved to weight file --> TODO ] ; Definition at line 159 of file VariableTransformBase.h. ◆ fTMVAVersion. TMVAVersion_t TMVA::VariableTransformBase::fTMVAVersion. protected . Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html:30568,variab,variables,30568,doc/master/classTMVA_1_1VariableTransformBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html,1,['variab'],['variables']
Modifiability,rs = nullptr (default) to get values of all variables (including NLL value and weight); Note: caller owns the returned data set ; Definition at line 128 of file MarkovChain.cxx. ◆ GetAsSparseHist() [1/2]. virtual THnSparse * RooStats::MarkovChain::GetAsSparseHist ; (; RooAbsCollection & ; whichVars); const. inlinevirtual . Definition at line 103 of file MarkovChain.h. ◆ GetAsSparseHist() [2/2]. THnSparse * MarkovChain::GetAsSparseHist ; (; RooAbsCollection * ; whichVars = nullptr); const. virtual . Get a clone of the markov chain on which this interval is based as a sparse histogram. ; You own the returned THnSparse* ; Definition at line 181 of file MarkovChain.cxx. ◆ GetNLLVar(). virtual RooRealVar * RooStats::MarkovChain::GetNLLVar ; (; ); const. inlinevirtual . get a clone of the NLL variable ; Definition at line 107 of file MarkovChain.h. ◆ GetWeightVar(). virtual RooRealVar * RooStats::MarkovChain::GetWeightVar ; (; ); const. inlinevirtual . get a clone of the weight variable ; Definition at line 111 of file MarkovChain.h. ◆ IsA(). TClass * RooStats::MarkovChain::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 127 of file MarkovChain.h. ◆ NLL() [1/2]. double MarkovChain::NLL ; (; ); const. virtual . get the NLL value of the current (last indexed) entry ; Definition at line 237 of file MarkovChain.cxx. ◆ NLL() [2/2]. double MarkovChain::NLL ; (; Int_t ; i); const. virtual . get the NLL value of entry at position i ; Definition at line 229 of file MarkovChain.cxx. ◆ SetParameters(). void MarkovChain::SetParameters ; (; RooArgSet & ; parameters). virtual . set which of your parameters this chain should store ; Definition at line 55 of file MarkovChain.cxx. ◆ Size(). virtual Int_t RooStats::MarkovChain::Size ; (; ); const. inlinevirtual . get the number of steps in the chain ; Definition at line 52 of file MarkovChain.h. ◆ Streamer(). void RooStats::MarkovChain::Streamer ; (; TBuffe,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MarkovChain.html:20314,variab,variable,20314,doc/master/classRooStats_1_1MarkovChain.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MarkovChain.html,1,['variab'],['variable']
Modifiability,"rs are just described by the number of neurons. The layers are separated by colons.; Ex: ""x,y:10:5:f""; The output can be prepended by '@' if the variable has to be normalized. The output can be followed by '!' to use Softmax neurons for the output layer only.; Ex: ""x,y:10:5:c1,c2,c3!""; Input and outputs are taken from the TTree given as second argument. training and test are the two TEventLists defining events to be used during the neural net training. Both the TTree and the TEventLists can be defined in the constructor, or later with the suited setter method. ; Definition at line 318 of file TMultiLayerPerceptron.cxx. ◆ TMultiLayerPerceptron() [5/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; const char * ; layout, . const char * ; weight, . TTree * ; data, . TEventList * ; training, . TEventList * ; test, . TNeuron::ENeuronType ; type = TNeuron::kSigmoid, . const char * ; extF = """", . const char * ; extD = """" . ). The network is described by a simple string: The input/output layers are defined by giving the branch names separated by comas. ; Hidden layers are just described by the number of neurons. The layers are separated by colons.; Ex: ""x,y:10:5:f""; The output can be prepended by '@' if the variable has to be normalized. The output can be followed by '!' to use Softmax neurons for the output layer only.; Ex: ""x,y:10:5:c1,c2,c3!""; Input and outputs are taken from the TTree given as second argument. training and test are the two TEventLists defining events to be used during the neural net training. Both the TTree and the TEventLists can be defined in the constructor, or later with the suited setter method. ; Definition at line 380 of file TMultiLayerPerceptron.cxx. ◆ ~TMultiLayerPerceptron(). TMultiLayerPerceptron::~TMultiLayerPerceptron ; (; ). override . Destructor. ; Definition at line 581 of file TMultiLayerPerceptron.cxx. ◆ TMultiLayerPerceptron() [6/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; const TMultiLayerPerceptron & ; ). private . Me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:32720,layers,layers,32720,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,1,['layers'],['layers']
Modifiability,"rs per node. ;  ; void SetCPUPar (const char *par);  ; void SetCPUSel (const char *sel);  ; void SetDataGenPar (const char *par);  ; void SetDataGenSel (const char *sel);  ; void SetDataPar (const char *par);  ; void SetDataSel (const char *sel);  ; void SetDebug (Bool_t debug=kTRUE);  ; void SetHistType (TPBHistType *histtype);  ; void SetNFilesWrk (Int_t nf=0);  ; void SetNHist (Int_t nh);  ; void SetNTries (Int_t nt);  ; Int_t SetOutFile (const char *outfile, Bool_t verbose=kTRUE);  Set the output file Return 0 on success, -1 on error. ;  ; void SetProofDS (TProof *p);  Set the PROOF instance to be used for dataset operations, like releasing cache ... Use SetProofDS(0) to reset and using the default PROOF. ;  ; void SetReadType (TPBReadType *readtype);  ; void SetReleaseCache (Bool_t on=kTRUE);  ; void SetSelOption (const char *opt);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofBench.html:3211,inherit,inherited,3211,doc/master/classTProofBench.html,https://root.cern,https://root.cern/doc/master/classTProofBench.html,1,['inherit'],['inherited']
Modifiability,"rs to synapses, no structural data; boolfUseRegulatorzjh; TRandom3*frgenrandom number generator for various uses. private:. TObjArray*fInputLayercache this for fast access; TStringfLayerSpeclayout specification option; vector<TNeuron*>fOutputNeuronscache this for fast access; static const Bool_tfgDEBUGdebug flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void DeclareOptions(); define the options (their key words) that can be set in the option string; here the options valid for ALL MVA methods are declared.; know options: NCycles=xx :the number of training cycles; Normalize=kTRUE,kFALSe :if normalised in put variables should be used; HiddenLayser=""N-1,N-2"" :the specification of the hidden layers; NeuronType=sigmoid,tanh,radial,linar : the type of activation function; used at the neuronn. void ProcessOptions(); do nothing specific at this moment. std::vector<Int_t>* ParseLayoutString(TString layerSpec); parse layout specification string and return a vector, each entry; containing the number of neurons to go in each successive layer. void InitANNBase(); initialize ANNBase object. ~MethodANNBase(); destructor. void DeleteNetwork(); delete/clear network. void DeleteNetworkLayer(TObjArray*& layer); delete a network layer. void BuildNetwork(vector<Int_t>* layout, vector<Double_t>* weights = NULL, Bool_t fromFile = kFALSE); build network given a layout (number of neurons in each layer); and optional weights array. void BuildLayers(vector<Int_t>* layout, Bool_t from_file = false); build the network layers. void BuildLayer(Int_t numNeurons, TObjArray* curLayer, TObjArray* prevLayer, Int_t layerIndex, Int_t numLayers, Bool_t from_file = false); build a single layer with neurons and synapses connecting this; layer to the previous layer. void AddPreLinks(TMVA::TNeuron* neuron, TObjArray* prevLayer); add synapses connecting a neuron to its preceding layer. void InitWeights(); initialize the synapse weights randomly. void ForceWeigh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodANNBase.html:19200,layerS,layerSpec,19200,root/html534/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodANNBase.html,1,['layerS'],['layerSpec']
Modifiability,"rs will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TRecorderState(); static TClass*Class(); virtual TRecorder::ERecorderStateGetState() const; virtual TClass*IsA() const; virtual voidListCmd(const char*); virtual voidListGui(const char*); TRecorderState&operator=(const TRecorderState&); virtual voidPause(TRecorder*); virtual voidPrevCanvases(const char*, Option_t*); virtual Bool_tReplay(TRecorder*, const char*, Bool_t, TRecorder::EReplayModes); virtual voidReplayStop(TRecorder*); virtual voidResume(TRecorder*); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStart(TRecorder*, const char*, Option_t*, Window_t*, Int_t); virtual voidStop(TRecorder*, Bool_t); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TRecorderState(); TRecorderState(const TRecorderState&). protected:. voidChangeState(TRecorder* r, TRecorderState* s, Bool_t deletePreviousState). Class Charts. Inheritance Chart:. TRecorderState. ←. TRecorderInactive. TRecorderPaused. TRecorderRecording. TRecorderReplaying. Function documentation; TRecorder & operator=(const TRecorderState& ). void ChangeState(TRecorderState *newstate, Bool_t deletePreviousState = kTRUE); Changes state to the new one.; See class documentation for information about state changing. void Start(const char *filename, Option_t *option = ""RECREATE"", Window_t *w = 0, Int_t winCount = 0); Starts recording of events to the given file. void Stop(Bool_t guiCommand = kFALSE); Stops recording of events. Bool_t Replay(const char *filename, Bool_t showMouseCursor = kTRUE, TRecorder::EReplayModes mode = kRealtime); Replays recorded events from given file. void Pause(); Pauses replaying. void Resume(); Resumes paused replaying. void ReplayStop(); Stops (cancels) replaying. void ListCmd(const char* ); Prints out the list of recorded commandline events. void ListGui(const char* ); Prints out the list of recorded GUI events. TRecorder::ER",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRecorderState.html:3729,Inherit,Inheritance,3729,root/html602/TRecorderState.html,https://root.cern,https://root.cern/root/html602/TRecorderState.html,1,['Inherit'],['Inheritance']
Modifiability,"rs |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; ROOT::RGeomViewer Class Reference. . Definition at line 27 of file RGeomViewer.hxx. Public Member Functions;  RGeomViewer (TGeoManager *mgr=nullptr, const std::string &volname="""");  constructor ;  ; virtual ~RGeomViewer ();  destructor ;  ; void ClearOnClose (const std::shared_ptr< void > &handle);  Set handle which will be cleared when connection is closed Must be called after window is shown. ;  ; RGeomDescription & Description ();  ; bool GetShowColumns () const;  ; bool GetShowHierarchy () const;  Returns default hierarchy browser visibility. ;  ; const std::string & GetTitle () const;  ; std::string GetWindowAddr () const;  Return web window address (name) used for geometry viewer. ;  ; std::string GetWindowUrl (bool remote);  Return web window URL which can be used for connection See ROOT::RWebWindow::GetUrl docu for more details. ;  ; void SaveAsMacro (const std::string &fname);  Save viewer configuration as macro. ;  ; void SaveImage (const std::string &fname=""geometry.png"", int width=0, int height=0);  Produce PNG image of the geometry If web-browser is shown and drawing completed, image is requested from the browser. ;  ; void SelectVolume (const std::string &volname);  Select visible top volume, all other volumes will be disabled. ;  ; void SetDrawOptions (const std::string &opt);  Configures draw option for geometry Normally has effect before first drawing of the geometry When geometry displayed, only ""axis"" and ""rotate"" options are updated. ;  ; void SetGeometry (TGeoManager *mgr, const std::string &volname="""");  assign new geometry to the viewer ;  ; void SetLimits (int nnodes=5000, int nfaces=100000);  Configures maximal number of visible nodes and faces. ;  ; void SetOnlyVolume (TGeoVolume *vol);  Draw only specified volume, special case when volume stored without valid geomanager. ;  ; void SetShowColumns (bool on=true);  ; void SetShowHierarc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomViewer.html:1161,config,configuration,1161,doc/v632/classROOT_1_1RGeomViewer.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomViewer.html,1,['config'],['configuration']
Modifiability,"rs |; Public Types |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Internal::TTreeReaderDescriptor Class Reference. . Definition at line 40 of file TTreeReaderGenerator.h. Public Types; enum  ReaderType { kValue; , kArray; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TTreeReaderDescriptor (ReaderType type, TString dataType, TString name, TString branchName);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Comp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TTreeReaderDescriptor.html:1206,inherit,inherited,1206,doc/master/classROOT_1_1Internal_1_1TTreeReaderDescriptor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TTreeReaderDescriptor.html,1,['inherit'],['inherited']
Modifiability,"rs(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. virtual voidReadAttributes(void* node, UInt_t tmva_Version_Code = 262656); virtual voidReadContent(stringstream& s); virtual Bool_tReadDataRecord(istream& is, UInt_t tmva_Version_Code = 262656). Data Members; protected:. UInt_tTMVA::Node::fDepthdepth of the node within the tree (seen from root node); TMVA::Node*TMVA::Node::fLeftpointers to the two ""daughter"" nodes; TMVA::Node*TMVA::Node::fParentthe previous (parent) node; TMVA::BinaryTree*TMVA::Node::fParentTreepointer to the parent tree to which the Node belongs; charTMVA::Node::fPosposition, i.e. it is a left (l) or right (r) daughter; TMVA::Node*TMVA::Node::fRightpointers to the two ""daughter"" nodes. private:. UInt_tfClass; vector<Float_t>fEventV; Short_tfSelectorindex of variable used in node selection (decision tree); vector<Float_t>fTargets; Float_tfWeight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BinarySearchTreeNode(const TMVA::Event* e = __null, UInt_t signalClass = 0); constructor of a node for the search tree. BinarySearchTreeNode(TMVA::BinarySearchTreeNode* parent, char pos); constructor of a daughter node as a daughter of 'p'. BinarySearchTreeNode(const TMVA::BinarySearchTreeNode& n, TMVA::BinarySearchTreeNode* parent = __null); copy constructor of a node. It will result in an explicit copy of; the node and recursively all it's daughters. ~BinarySearchTreeNode(); node destructor. Bool_t GoesRight(const TMVA::Event& ) const; check if the event fed into the node goes/decends to the right daughter. Bool_t GoesLeft(const TMVA::Event& ) const; check if the event fed into the node goes/decends to the left daughter. Bool_t EqualsMe(const TMVA::Event& ) const; check if the event fed into the node actually equals the event; that forms the node (in case of a search tree). void Print(ostream& os) const; print the node. void PrintRec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__BinarySearchTreeNode.html:3611,Inherit,Inheritance,3611,root/html602/TMVA__BinarySearchTreeNode.html,https://root.cern,https://root.cern/root/html602/TMVA__BinarySearchTreeNode.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rs(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. virtual voidReadAttributes(void* node, UInt_t tmva_Version_Code = 262657); virtual voidReadContent(stringstream& s); virtual Bool_tReadDataRecord(istream& is, UInt_t tmva_Version_Code = 262657). Data Members; protected:. UInt_tTMVA::Node::fDepthdepth of the node within the tree (seen from root node); TMVA::Node*TMVA::Node::fLeftpointers to the two ""daughter"" nodes; TMVA::Node*TMVA::Node::fParentthe previous (parent) node; TMVA::BinaryTree*TMVA::Node::fParentTreepointer to the parent tree to which the Node belongs; charTMVA::Node::fPosposition, i.e. it is a left (l) or right (r) daughter; TMVA::Node*TMVA::Node::fRightpointers to the two ""daughter"" nodes. private:. UInt_tfClass; vector<Float_t>fEventV; Short_tfSelectorindex of variable used in node selection (decision tree); vector<Float_t>fTargets; Float_tfWeight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BinarySearchTreeNode(const TMVA::Event* e = __null, UInt_t signalClass = 0); constructor of a node for the search tree. BinarySearchTreeNode(TMVA::BinarySearchTreeNode* parent, char pos); constructor of a daughter node as a daughter of 'p'. BinarySearchTreeNode(const TMVA::BinarySearchTreeNode& n, TMVA::BinarySearchTreeNode* parent = __null); copy constructor of a node. It will result in an explicit copy of; the node and recursively all it's daughters. ~BinarySearchTreeNode(); node destructor. Bool_t GoesRight(const TMVA::Event& ) const; check if the event fed into the node goes/decends to the right daughter. Bool_t GoesLeft(const TMVA::Event& ) const; check if the event fed into the node goes/decends to the left daughter. Bool_t EqualsMe(const TMVA::Event& ) const; check if the event fed into the node actually equals the event; that forms the node (in case of a search tree). void Print(ostream& os) const; print the node. void PrintRec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__BinarySearchTreeNode.html:3619,Inherit,Inheritance,3619,root/html604/TMVA__BinarySearchTreeNode.html,https://root.cern,https://root.cern/root/html604/TMVA__BinarySearchTreeNode.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rs(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. voidloadValues(const Double_t* xvector) const. Data Members; protected:. Bool_t_clipInvalid; list<RooAbsReal*>_compList!; list<Double_t>_compSave!; UInt_tRooAbsFunc::_dimensionNumber of observables; const RooAbsReal*_func; Double_t_funcSave!; Int_tRooAbsFunc::_ncallFunction call counter; const RooArgSet*_nset; const TNamed*_rangeName!; Bool_tRooAbsFunc::_validIs binding in valid state?; RooAbsRealLValue**_vars; Double_t*_xsave; Bool_t_xvecValid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealBinding(const RooAbsReal& func, const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE, const TNamed* rangeName = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. RooRealBinding(const RooRealBinding& other, const RooArgSet* nset = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. ~RooRealBinding(); Destructor. void saveXVec() const; Save value of all variables. void restoreXVec() const; Restore value of all variables to previously; saved values by saveXVec(). void loadValues(const Double_t*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRealBinding.html:2483,variab,variables,2483,root/html534/RooRealBinding.html,https://root.cern,https://root.cern/root/html534/RooRealBinding.html,2,['variab'],['variables']
Modifiability,"rs(map<TString,Double_t> tuneParameters); set the tuning parameters accoding to the argument; This is just a dummy .. have a look at the MethodBDT how you could; perhaps implment the same thing for the other Classifiers.. void TrainMethod(). void GetRegressionDeviation(UInt_t tgtNum, TMVA::Types::ETreeType type, Double_t& stddev, Double_t& stddev90Percent) const. void AddRegressionOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddMulticlassOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void NoErrorCalc(Double_t *const err, Double_t *const errUpper). Double_t GetMvaValue(const TMVA::Event *const ev, Double_t* err = 0, Double_t* errUpper = 0). Bool_t IsSignalLike(). Bool_t IsSignalLike(Double_t mvaVal). void AddClassifierOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddClassifierOutputProb(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); calculate <sum-of-deviation-squared> of regression output versus ""true"" value from test sample. bias = average deviation; dev = average absolute deviation; rms = rms of deviation. void TestMulticlass(); test multiclass classification. void TestClassification(); initialization. void WriteStateToStream(ostream& tf) const; general method used in writing the header of the weight files where; the used variables, variable transformation type etc. is specified. void AddInfoItem(void* gi, const TString& name, const TString& value) const; xml writing. void AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType analysisType). void WriteStateToXML(void* parent) const; general method used in writing the header of the weight files where",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodBase.html:23149,variab,variable,23149,root/html530/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodBase.html,3,['variab'],['variable']
Modifiability,"rs) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; virtual voidProcessOptions(); voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* parent); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSetAdaBoostBeta(Double_t b); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidSetBaggedSampleFraction(Double_t f); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBDT.html:13774,Config,Configurable,13774,root/html534/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBDT.html,1,['Config'],['Configurable']
Modifiability,"rs) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; virtual voidProcessOptions(); voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* parent); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSetAdaBoostBeta(Double_t b); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodBDT.html:13661,Config,Configurable,13661,root/html532/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodBDT.html,1,['Config'],['Configurable']
Modifiability,"rs) etc. The default MINUIT error level; for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); value of the input function. ~RooMinimizer(); Destructor. void setStrategy(Int_t strat); Change MINUIT strategy to istrat. Accepted codes; are 0,1,2 and represent MINUIT strategies for dealing; most efficiently with fast FCNs (0), expensive FCNs (2); and 'intermediate' FCNs (1). void setMaxIterations(Int_t n); Change maximum number of MINUIT iterations; (RooMinimizer default 500 * #parameters). void setMaxFunctionCalls(Int_t n); Change maximum number of likelihood function calss from MINUIT; (RooMinimizer default 500 * #parameters). void setErrorLevel(Double_t level); Set the level for MINUIT error analysis to the given; value. This function overrides the default value; that is taken in the RooMinimizer constructor from; the defaultErrorLevel() method of the input function. void setEps(Double_t eps); Change MINUIT epsilon. void setOffsetting(Bool_t flag); Enable internal likelihood offsetting for enhanced numeric precision. void setMinimizerType(const char* type); Choose the minimzer algorithm. ROOT::Fit::Fitter* fitter(); Return underlying ROOT fitter object. const ROOT::Fit::Fitter* fitter() const; Return underlying ROOT fitter object. RooFitResult* fit(const char* options); Parse traditional RooAbsPdf::fitTo driver options. m - Run Migrad only; h - Run Hesse to estimate errors; v - Verbose mode; l - Log parameters after each Minuit steps to file; t - Activate profile timer; r - Save fit result; 0 - Run Migrad with strategy 0. Int_t minimize(const char* type, const char* alg = 0). Int_t migrad(); Execute MIGRAD. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t hesse(); Execute HESSE. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMinimizer.html:9801,enhance,enhanced,9801,root/html534/RooMinimizer.html,https://root.cern,https://root.cern/root/html534/RooMinimizer.html,6,['enhance'],['enhanced']
Modifiability,"rs) when in the learning phase.; The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. This cache speeds-up considerably the performance, in particular; when the Tree is accessed remotely via a high latency network. The default cache size (10 Mbytes) may be changed via the function; TTreeCache::SetCacheSize. Only the baskets for the requested entry range are put in the cache. For each Tree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted. -Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. -Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning period is started or restarted when:; - TTree automatically creates a cache. This feature can be; controlled with an env. variable or the TTreeCache.Size option.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTree[Cache]::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is actually started) when:; - TTree[Cache]::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries (default to 100).; - A 'cached' TChain switches over to a new file. WHY DO WE NEED the TreeCache when doing data analysis?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of Trees with several; hundred or thousand br",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTreeCache.html:1520,variab,variable,1520,root/html604/TTreeCache.html,https://root.cern,https://root.cern/root/html604/TTreeCache.html,2,['variab'],['variable']
Modifiability,"rs); RooFunctor(const RooAbsReal& func, const RooArgList& observables, const RooArgList& parameters, const RooArgSet& nset); virtual~RooFunctor(); RooAbsFunc&binding(); static TClass*Class(); Double_teval(const Double_t*) const; Double_teval(Double_t) const; Double_teval(const Double_t*, const Double_t*) const; virtual TClass*IsA() const; Int_tnObs() const; Int_tnPar() const; Double_toperator()(Double_t x) const; Double_toperator()(const Double_t* x) const; Double_toperator()(const Double_t* x, const Double_t* p) const; RooFunctor&operator=(const RooFunctor&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. RooAbsFunc*_bindingFunction binding; Int_t_nobs! Number of observables ;; Int_t_npar! Number of parameters ;; RooArgSet_nsetNormalization observables; Bool_t_ownBindingDo we own the binding function ; Double_t*_x! Transfer array ;. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFunctor(const RooAbsFunc& func). RooFunctor(const RooAbsReal& func, const RooArgList& observables, const RooArgList& parameters); Store list of observables. RooFunctor(const RooAbsReal& func, const RooArgList& observables, const RooArgList& parameters, const RooArgSet& nset); Store normalization set. RooFunctor(const RooFunctor& ). ~RooFunctor(); Destructor. Double_t eval(const Double_t* ) const. Double_t eval(Double_t ) const. Double_t eval(const Double_t* , const Double_t* ) const. Int_t nObs() const; Number of observables. Int_t nPar() const; Number of parameters;. Double_t operator()(Double_t x) const; Int_t numCall() const { return _binding->numCall() ; }; void resetNumCall() const { _binding->resetNumCall() ; }. { return eval(x) ; }. Double_t operator()(const Double_t* x, const Double_t* p) const; { return eval(x,p) ; }. Double_t operator()(const Double_t* x) const; { return eval(x) ; }. RooAbsFunc& binding(); { return *_bindi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooFunctor.html:1525,Inherit,Inheritance,1525,root/html534/RooFunctor.html,https://root.cern,https://root.cern/root/html534/RooFunctor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rs); static TClass*Class(); TMVA::GeneticPopulationGeneticPopulation(const TMVA::GeneticPopulation&); TMVA::GeneticPopulationGeneticPopulation(const vector<TMVA::Interval*>& ranges, Int_t size, UInt_t seed = 0); Double_tGetFitness() const; const vector<TMVA::GeneticGenes>&GetGenePool() const; vector<TMVA::GeneticGenes>&GetGenePool(); TMVA::GeneticGenes*GetGenes(Int_t index); Int_tGetPopulationSize() const; const vector<TMVA::GeneticRange*>&GetRanges() const; vector<TMVA::GeneticRange*>&GetRanges(); voidGiveHint(vector<Double_t>& hint, Double_t fitness = 0); virtual TClass*IsA() const; voidMakeChildren(); voidMakeCopies(int number); voidMutate(Double_t probability = 20, Int_t startIndex = 0, Bool_t near = kFALSE, Double_t spread = 0.1, Bool_t mirror = kFALSE); voidNextGeneration(); TMVA::GeneticPopulation&operator=(const TMVA::GeneticPopulation&); voidPrint(Int_t untilIndex = -1); voidPrint(ostream& out, Int_t utilIndex = -1); voidSetRandomSeed(UInt_t seed = 0); virtual voidShowMembers(TMemberInspector& insp); voidSort(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); voidTrimPopulation(); vector<Double_t>VariableDistribution(Int_t varNumber); TH1F*VariableDistribution(Int_t varNumber, Int_t bins, Int_t min, Int_t max). private:. TMVA::MsgLogger&Log() const; TMVA::GeneticGenesMakeSex(TMVA::GeneticGenes male, TMVA::GeneticGenes female). Data Members; private:. vector<TMVA::GeneticGenes>fGenePoolthe ""genePool"" where the individuals of the current generation are stored; TMVA::MsgLogger*fLoggermessage logger; Int_tfPopulationSizeLimit; TRandom3*fRandomGeneratorrandom Generator for this population; vector<TMVA::GeneticRange*>fRangescontains the ranges inbetween the values of the coefficients have to be. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GeneticPopulation(const vector<TMVA::Interval*>& ranges, Int_t size, UInt_t seed = 0); Constructor. ~GeneticPopulation(); destructor. void SetRandomSeed(UInt_t se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__GeneticPopulation.html:1665,Variab,VariableDistribution,1665,root/html532/TMVA__GeneticPopulation.html,https://root.cern,https://root.cern/root/html532/TMVA__GeneticPopulation.html,2,['Variab'],['VariableDistribution']
Modifiability,"rs, list<RooAbsDataStore*> dstoreList); Merge columns of supplied data set(s) with this data set. All; data sets must have equal number of entries. In case of; duplicate columns the column of the last dataset in the list; prevails. void reserve(Int_t nEvt). void append(RooAbsDataStore& other). Int_t numEntries() const. void reset(). void cacheArgs(const RooAbsArg* owner, RooArgSet& varSet, const RooArgSet* nset = 0, Bool_t skipZeroWeights = kTRUE); Cache given RooAbsArgs with this tree: The tree is; given direct write access of the args internal cache; the args values is pre-calculated for all data points; in this data collection. Upon a get() call, the; internal cache of 'newVar' will be loaded with the; precalculated value and it's dirty flag will be cleared. void forceCacheUpdate(). void recalculateCache(const RooArgSet* , Int_t firstEvent, Int_t lastEvent, Int_t stepSize, Bool_t skipZeroWeights). void attachCache(const RooAbsArg* newOwner, const RooArgSet& cachedVars); Initialize cache of dataset: attach variables of cache ArgSet; to the corresponding TTree branches. void resetCache(). void setArgStatus(const RooArgSet& set, Bool_t active); Disabling of branches is (intentionally) not implemented in vector; data stores (as the doesn't result in a net saving of time). void attachBuffers(const RooArgSet& extObs). void resetBuffers(). void dump(). void Streamer(TBuffer& ); Stream an object of class RooVectorDataStore. RooAbsDataStore* clone(const char* newname = 0) const; { return new RooVectorDataStore(*this,newname) ; }. RooAbsDataStore* clone(const RooArgSet& vars, const char* newname = 0) const; { return new RooVectorDataStore(*this,vars,newname) ; }. Bool_t isWeighted() const; { return (_wgtVar!=0||_extWgtArray!=0) ; }. Double_t sumEntries() const; { return _sumWeight ; }. const RooAbsArg* cacheOwner(); Constant term optimizer interface. { return _cacheOwner ; }. const RooVectorDataStore* cache() const; { return _cache ; }. void setExternalWeightArray(Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooVectorDataStore.html:16244,variab,variables,16244,root/html534/RooVectorDataStore.html,https://root.cern,https://root.cern/root/html534/RooVectorDataStore.html,6,['variab'],['variables']
Modifiability,"rs. ; Definition at line 102 of file TMap.h. Public Member Functions;  TPair (const TPair &a);  ;  TPair (TObject *key, TObject *value);  ; virtual ~TPair ();  TPair destructor. ;  ; void Browse (TBrowser *b) override;  Browse the pair. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; TObject * Key () const;  ; void SetValue (TObject *val);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TObject * Value () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPair.html:1370,inherit,inherited,1370,doc/master/classTPair.html,https://root.cern,https://root.cern/doc/master/classTPair.html,1,['inherit'],['inherited']
Modifiability,"rs. ;  ; Int_t fSumErrorsMode;  How y errors are summed: kOnlyFirst = Only First; kSquareSum = Squared Sum; kSum = Absolute Addition. ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGraph; static void SwapValues (Double_t *arr, Int_t pos1, Int_t pos2);  Swap values. ;  . #include <TGraphMultiErrors.h>. Inheritance diagram for TGraphMultiErrors:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESummationModes. enum TGraphMultiErrors::ESummationModes. EnumeratorkOnlyFirst Only take errors from first dimension. . kSquareSum Calculate the square sum of all errors. . kAbsSum Calculate the absolute sum of all errors. . Definition at line 57 of file TGraphMultiE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:43763,inherit,inherited,43763,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['inherit'],['inherited']
Modifiability,"rs. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. RooDataSet * generate(RooAbsGenContext& context, const RooArgSet &whatVars, const RooDataSet *prototype,				Int_t nEvents, Bool_t /*verbose*/, Bool_t randProtoOrder, Bool_t resampleProto); Internal method. RooDataSet * generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; Generate a new dataset with values of the whatVars variables; sampled from our distribution. Use the specified existing dataset; as a prototype: the new dataset will contain the same number of; events as the prototype (by default), and any prototype variables not in; whatVars will be copied into the new dataset for each generated; event and also used to set our PDF parameters. The user can specify a; number of events to generate that will override the default. The result is a; copy of the prototype dataset with only variables in whatVars; randomized. Variables in whatVars that are not in the prototype; will be added as new columns to the generated dataset. Returns; zero in case of an error. The caller takes ownership of the; returned dataset. Int_t* randomizeProtoOrder(Int_t nProto, Int_t nGen, Bool_t resample = kFALSE) const; Return lookup table with randomized access order for prototype events,; given nProto prototype data events and nGen events that will actually; be accessed. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; Load generatedVars with the subset of directVars that we can generate events for,; and return a code that specifies the generator algorithm we will use. A code of; zero indicates that we cannot generate any of the directVars (in this case, nothing; should be added to generatedVars). Any non-zero codes will be passed to our generateEvent(); implementation, but otherwise its value is arbitrary. The defaul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:61174,variab,variables,61174,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,1,['variab'],['variables']
Modifiability,"rs:; source-pointer to the vector of source spectrum, its length should; be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; transform. These need 2*size length to supply real and; imaginary coefficients.; destVector-pointer to the vector of dest data, its length should be; size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; need 2*size length to store real and imaginary coefficients. . Example of enhancement;  ; Function:; void TSpectrumTransform::Enhance(const double *fSource,; double; *fDest);  ; This function transforms the; source spectrum (for details see Transform function). Before the Enhance; function is called the class must be created by constructor and the type of the; transform as well as some other parameters must be set using a set of setter functions.; The Enhance function multiplies transformed coefficients in the given region; (fXmin, fXmax) by the given fEnhancCoeff and transforms it back. Enhanced data; are written into dest spectrum.;  ; Example� � script Enhance.c:.  ; Fig. 1 Original spectrum (black; line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024; were multiplied by 2) ;  ; Script:;  ; // Example to illustrate; Enhance function (class TSpectrumTransform).; // To execute this example,; do; // root > .x Enhance.C;  ; void Enhance() {; �� Int_t i;; �� Double_t nbins =; 4096;; �� Double_t xmin� =; 0;; �� Double_t xmax� =; (Double_t)nbins;; �� Double_t * source = new Double_t[nbins];; �� Double_t * dest = new; Double_t[nbins];�� ; �� TH1F *h = new; TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; �� TH1F *d = new; TH1F(""d"","""",nbins,xmin,xmax);�������� ; �� TFile *f = new; TFile(""spectra\\TSpectrum.root"");; �� h=(TH1F*); f->Get(""transform1;1"");�� ; �� for (i = 0; i < nbins;; i++) source[i]=h->GetBinContent(i + 1);���� ; �� TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; �� if (!Transform1); Transform1 = new; TCanvas(""Transform"",""Transform1"",10,10,1000,700);;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrumTransform.html:21629,Enhance,Enhance,21629,root/html602/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html602/TSpectrumTransform.html,2,['Enhance'],['Enhance']
Modifiability,"rs; Includes; Libraries. Function documentation; TBufferXML(); Default constructor. TBufferXML(TBuffer::EMode mode); Creates buffer object to serailize/deserialize data to/from xml.; Mode should be either TBuffer::kRead or TBuffer::kWrite. TBufferXML(TBuffer::EMode mode, TXMLFile* file); Creates buffer object to serailize/deserialize data to/from xml.; This constructor should be used, if data from buffer supposed to be stored in file.; Mode should be either TBuffer::kRead or TBuffer::kWrite. ~TBufferXML(); destroy xml buffer. TXMLFile* XmlFile(); returns pointer to TXMLFile object; access to file is necessary to produce unique identifier for object references. TString ConvertToXML(TObject* obj, Bool_t GenericLayout = kFALSE, Bool_t UseNamespaces = kFALSE); converts object, inherited from TObject class, to XML string; fmt contains configuration of XML layout. See TXMLSetup class for detatils. TString ConvertToXML(void* obj, TClass* cl, Bool_t GenericLayout = kFALSE, Bool_t UseNamespaces = kFALSE); converts any type of object to XML string; fmt contains configuration of XML layout. See TXMLSetup class for detatils. TObject* ConvertFromXML(const char* str, Bool_t GenericLayout = kFALSE, Bool_t UseNamespaces = kFALSE); Read object from XML, produced by ConvertToXML() method.; If object does not inherit from TObject class, return 0.; GenericLayout and UseNamespaces should be the same as in ConvertToXML(). void* ConvertFromXMLAny(const char* str, TClass** cl = 0, Bool_t GenericLayout = kFALSE, Bool_t UseNamespaces = kFALSE); Read object of any class from XML, produced by ConvertToXML() method.; If cl!=0, return actual class of object.; GenericLayout and UseNamespaces should be the same as in ConvertToXML(). XMLNodePointer_t XmlWriteAny(const void* obj, const TClass* cl); Convert object of any class to xml structures; Return pointer on top xml element. void* XmlReadAny(XMLNodePointer_t node, void* obj, TClass** cl); Recreate object from xml structure.; Return pointer to re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBufferXML.html:24726,config,configuration,24726,root/html526/TBufferXML.html,https://root.cern,https://root.cern/root/html526/TBufferXML.html,5,['config'],['configuration']
Modifiability,"rs; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooGenFunction. class RooGenFunction: public ROOT::Math::IBaseFunctionOneDim. Lightweight interface adaptor that exports a RooAbsReal as a ROOT::Math::IGenFunction; . Function Members (Methods); public:. virtual~RooGenFunction(); static TClass*Class(); virtual ROOT::Math::IBaseFunctionOneDim*Clone() const; ROOT::Math::IBaseFunctionOneDimROOT::Math::IBaseFunctionOneDim::IBaseFunctionOneDim(); ROOT::Math::IBaseFunctionOneDimROOT::Math::IBaseFunctionOneDim::IBaseFunctionOneDim(const ROOT::Math::IBaseFunctionOneDim&); virtual TClass*IsA() const; doubleROOT::Math::IBaseFunctionOneDim::operator()(double x) const; doubleROOT::Math::IBaseFunctionOneDim::operator()(const double* x) const; RooGenFunction&operator=(const RooGenFunction&); RooGenFunction(const RooGenFunction& other); RooGenFunction(const RooAbsReal& func, const RooArgList& observables, const RooArgList& parameters); RooGenFunction(const RooAbsReal& func, const RooArgList& observables, const RooArgList& parameters, const RooArgSet& nset); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. virtual doubleDoEval(double) const. Data Members; protected:. RooFunctor_ftor. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooGenFunction(const RooAbsReal& func, const RooArgList& observables, const RooArgList& parameters). RooGenFunction(const RooAbsReal& func, const RooArgList& observables, const RooArgList& parameters, const RooArgSet& nset). RooGenFunction(const RooGenFunction& other). ~RooGenFunction(). double DoEval(double ) const. ROOT::Math::IBaseFunctionOneDim* Clone() const. » Last changed: Tue Jun 30 14:33:17 2015 » Last generated: 2015-06-30 14:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooGenFunction.html:1517,Inherit,Inheritance,1517,root/html602/RooGenFunction.html,https://root.cern,https://root.cern/root/html602/RooGenFunction.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rs; gROOT->GetListOfCleanups; gROOT->GetListOfMessageHandlers; gROOT#define gROOTDefinition TROOT.h:406; exampleDefinition example.py:1; The TROOT class provides also many useful services:; Get pointer to an object in any of the lists above; Time utilities TROOT::Time. The ROOT object must be created as a static object. An example of a main program creating an interactive version is shown below:. Example of a main program; #include ""TRint.h""; ; int main(int argc, char **argv); {; TRint *theApp = new TRint(""ROOT example"", &argc, argv);; ; // Init Intrinsics, build all windows, and enter event loop; theApp->Run();; ; return(0);; }; mainint main()Definition Prototype.cxx:12; TRint.h; TRintDefinition TRint.h:31; TRint::Runvoid Run(Bool_t retrn=kFALSE) overrideMain application eventloop.Definition TRint.cxx:384. Definition at line 94 of file TROOT.h. Public Types; typedef std::vector< std::pair< std::string, int > > FwdDeclArgsToKeepCollection_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TROOT (const char *name, const char *title, VoidFuncPtr_t *initfunc=nullptr);  Initialize the ROOT system. ;  ; virtual ~TROOT ();  Clean up and free resources used by ROOT (files, network sockets, shared memory segments, etc.). ;  ; void AddClass (TClass *cl);  Add a class to the list and map of classes. ;  ; void AddClassGenerator (TClassGenerator *gen);  Add a class gener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTROOT.html:2257,inherit,inherited,2257,doc/v632/classTROOT.html,https://root.cern,https://root.cern/doc/v632/classTROOT.html,1,['inherit'],['inherited']
Modifiability,"rs; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TClaArrayProxy_-p0TArrayType_unsigned_int_0___.html:5024,Inherit,Inheritance,5024,root/html602/ROOT__TClaArrayProxy_-p0TArrayType_unsigned_int_0___.html,https://root.cern,https://root.cern/root/html602/ROOT__TClaArrayProxy_-p0TArrayType_unsigned_int_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rs; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TClaArrayProxy_-p0TArrayType_unsigned_int_0___.html:5024,Inherit,Inheritance,5024,root/html604/ROOT__TClaArrayProxy_-p0TArrayType_unsigned_int_0___.html,https://root.cern,https://root.cern/root/html604/ROOT__TClaArrayProxy_-p0TArrayType_unsigned_int_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rs; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfLength! datatype length definition, for instance VARCHAR(len) or FLOAT(len), -1 if not defined; TStringTNamed::fNameobject identifier; Bool_tfNullable! identify if value can be NULL ; Int_tfSQLType! datatype code (see TSQLServer::ESQLDataTypes constants), -1 if not defeined; Int_tfScale! datatype scale factor, used for instance in NUMBER(len,scale) definition. -1 if not defined; Int_tfSigned! if datatype signed or not, 0 - kFALSE, 1 - kTRUE, -1 - unknown; Int_tfSize! size of column in bytes, -1 if not defing; TStringTNamed::fTitleobject title; TStringfTypeName! sql type name, as reported by DB. Should be as much as close to declaration of column in CREATE TABLE query. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSQLColumnInfo(); default contructor. TSQLColumnInfo(const char* columnname, const char* sqltypename = ""unknown"", Bool_t nullable = kFALSE, Int_t sqltype = -1, Int_t size = -1, Int_t length = -1, Int_t scale = -1, Int_t sign = -1); normal constructor. void Print(Option_t* option = """") const; Prints column information to standard output. TSQLColumnInfo(). virtual ~TSQLColumnInfo(); {}. const char* GetTypeName() const; { return fTypeName.Data(); }. Bool_t IsNullable() const; { return fNullable; }. Int_t GetSQLType() const; { return fSQLType; }. Int_t GetSize() const; { return fSize; }. Int_t GetLength() const; { return fLength; }. Int_t GetScale() const; { return fScale; }. Int_t GetSigned() const; { return fSigned; }. Bool_t IsSigned() const; { return fSigned==1; }. Bool_t IsUnsigned() const; { return fSigned==0; }. » Author: Sergey Linev 31/05/2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSQLColumnInfo.html:7865,Inherit,Inheritance,7865,root/html532/TSQLColumnInfo.html,https://root.cern,https://root.cern/root/html532/TSQLColumnInfo.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rs; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TRef::(anonymous)kNotComputed; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TProcessID*fPID!Pointer to ProcessID when TRef was written; static TObjArray*fgExecsList of execs; static TObject*fgObjectIn: this, Out: pointer to object (used by Action on Demand). Class Charts. Inheritance Chart:. TObject. ←; TRef. Function documentation; TRef(TObject* obj); Create a ref to obj. TRef(const TRef& ref); TRef copy ctor. void operator=(TObject* obj); Assign object to reference. TRef & operator=(const TRef& ref); TRef assignment operator. Int_t AddExec(const char* name); If Exec with name does not exist in the list of Execs, it is created.; returns the index of the Exec in the list. TObjArray * GetListOfExecs(); Return a pointer to the static TObjArray holding the list of Execs. TObject * GetObject() const; Return a pointer to the referenced object. void SetAction(const char* name); Store the exec number (in the ROOT list of Execs); into the fBits of this TRef. void SetAction(TObject* parent); Find the action to be executed in the dictionary of the parent class; and store the corresponding exec number into fBits.; This function searches a data member in the class of parent with an; offset corresponding to this.; If a comment ""TEXEC:"" is found in the comment field of the da",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRef.html:15624,Inherit,Inheritance,15624,root/html602/TRef.html,https://root.cern,https://root.cern/root/html602/TRef.html,2,['Inherit'],['Inheritance']
Modifiability,"rs; unsigned intfNCallsnumber of function calls; unsigned intfNFreenumber of fit free parameters (total parameters are in size of parameter vector) ; unsigned intfNdfnumber of degree of freedom; boolfNormalizedflag for indicating is errors are normalized; vector<std::string>fParNamesparameter names (only with FCN only fits, when fFitFunc=0); vector<double>fParamsparameter values. Size is total number of parameters; intfStatusminimizer status code; doublefValminimum function value; boolfValidflag for indicating valid fit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FitResult(). Default constructor for an empty (non valid) fit result. FitResult(ROOT::Math::Minimizer& min, const ROOT::Fit::FitConfig& fconfig, const ROOT::Fit::FitResult::IModelFunction* f, bool isValid, unsigned int sizeOfData = 0, bool binFit = true, const ROOT::Math::IMultiGenFunction* chi2func = 0, unsigned int ncalls = 0). Construct from a Minimizer instance after fitting; Run also Minos if requested from the configuration. FitResult(const ROOT::Fit::FitResult& ). Copy constructor. ~FitResult(). Destructor. bool Update(const ROOT::Math::Minimizer& min, bool isValid, unsigned int ncalls = 0). Update the fit result with a new minimization status; To be run only if same fit is performed with same configuration; Note that in this case MINOS is not re-run. If one wants to run also MINOS; a new result must be created. const std::string & MinimizerType() const; minimization quantities ; minimizer type. { return fMinimType; }. bool IsValid() const; True if fit successful, otherwise false. { return fValid; }. bool IsEmpty() const; True if a fit result does not exist (even invalid) with parameter values. { return (fParams.size() == 0); }. double MinFcnValue() const; Return value of the objective function (chi2 or likelihood) used in the fit. { return fVal; }. unsigned int NCalls() const; Number of function calls to find minimum. { return fNCalls; }. double Edm() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Fit__FitResult.html:5045,config,configuration,5045,root/html528/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html528/ROOT__Fit__FitResult.html,1,['config'],['configuration']
Modifiability,"rs;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from THLimitsFinder; static THLimitsFinder * fgLimitsFinder = nullptr;  ! Pointer to hist limits finder ;  . #include <TProofLimitsFinder.h>. Inheritance diagram for TProofLimitsFinder:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofLimitsFinder(). TProofLimitsFinder::TProofLimitsFinder ; (; ). inline . Definition at line 31 of file TProofLimitsFinder.h. ◆ ~TProofLimitsFinder(). TProofLimitsFinder::~TProofLimitsFinder ; (; ). inlineoverride . Definition at line 32 of file TProofLimitsFinder.h. Member Function Documentation. ◆ AutoBinFunc(). void TProofLimitsFinder::AutoBinFunc ; (; TString & ; key, . Double_t & ; xmin, . Double_t & ; xmax, . Double_t & ; ymin, . Double_t & ; ymax, . Double_t & ; zmin, . Double_t & ; zmax . ). static . Get bining information. ; Send current min and max and receive common min max in return. ; Definition at line 33 of file TProofLimitsFinder.cxx. ◆ Class(). static TClass * TProo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLimitsFinder.html:11417,inherit,inherited,11417,doc/master/classTProofLimitsFinder.html,https://root.cern,https://root.cern/doc/master/classTProofLimitsFinder.html,1,['inherit'],['inherited']
Modifiability,"rs;  Public Types inherited from TVirtualX; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum  ETextSetMode { kCheck; , kLoad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Attributes inherited from TGWin32ProxyBase; static ULong_t fgMainThreadId = 0;  main thread ID ;  ; static ULong_t fgPingMessageId = 0;  ping message ID ;  ; static ULong_t fgPostMessageId = 0;  post message ID ;  ; static ULong_t fgUserThreadId = 0;  user (e.g. python) thread ID ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TGWin32ProxyBase; virtual Bool_t ForwardCallBack (Bool_t sync);  if sync is kTRUE: ;  ; virtual void SendExitMessage ();  send exit message to server thread ;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Att",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:49620,inherit,inherited,49620,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,1,['inherit'],['inherited']
Modifiability,"rse ;  ; void LocalToMasterVect (const Double_t *local, Double_t *master) const override;  convert a vector by multiplying its column vector (x, y, z, 1) to matrix inverse ;  ; TGeoMatrix * MakeClone () const override;  ; void MasterToLocal (const Double_t *master, Double_t *local) const override;  convert a point by multiplying its column vector (x, y, z, 1) to matrix ;  ; void MasterToLocalBomb (const Double_t *master, Double_t *local) const override;  convert a point by multiplying its column vector (x, y, z, 1) to matrix ;  ; void MasterToLocalVect (const Double_t *master, Double_t *local) const override;  convert a point by multiplying its column vector (x, y, z, 1) to matrix ;  ; void SavePrimitive (std::ostream &, Option_t *="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoMatrix;  TGeoMatrix ();  dummy constructor ;  ;  TGeoMatrix (const char *name);  Constructor. ;  ;  ~TGeoMatrix () override;  Destructor. ;  ; virtual Int_t GetByteCount () const;  Get total size in bytes of this. ;  ; void GetHomogenousMatrix (Double_t *hmat) const;  The homogenous matrix associated with the transformation is used for piling up's and visualization. ;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; TClass * IsA () const override;  ; Bool_t IsCombi () const;  ; Bool_t IsGeneral () const;  ; Bool_t IsIdentity () const;  ; Bool_t IsOwned () const;  ; Bool_t IsReflection () const;  ; Bool_t IsRegistered () const;  ; Bool_t IsRotAboutZ () const;  Returns true if no rotation or the rotation is about Z axis. ;  ; Bool_t IsRotation () const;  ; Bool_t IsScale () const;  ; Bool_t IsShared () const;  ; Bool_t IsTranslation () const;  ; void Print (Option_t *option="""") const override;  print the matrix in 4x4 format ;  ; virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoIdentity.html:2228,inherit,inherited,2228,doc/master/classTGeoIdentity.html,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html,1,['inherit'],['inherited']
Modifiability,"rse*fAxResult: Ax; Double_tfChi2AResult: chi**2 contribution from (y-Ax)V(y-Ax); TMatrixDSparse*fDXDAM[2]Result: part of derivative dx_k/dA_ij; TMatrixDSparse*fDXDAZ[2]Result: part of derivative dx_k/dA_ij; TMatrixDSparse*fDXDYResult: derivative dx/dy; TMatrixDSparse*fDXDtauSquaredResult: derivative dx/dtau; TMatrixDSparse*fEResult: matrix E; TMatrixDSparse*fEinvResult: matrix E^(-1); Double_tfEpsMatrixmachine accuracy for eingenvalue analysis; Int_tfIgnoredBinsnumber of input bins which are dropped because they have error=0; Double_tfLXsquaredResult: chi**2 contribution from (x-s*x0)Lsquared(x-s*x0); Int_tfNdfResult: number of degrees of freedom; Double_tfRhoAvgResult: average global correlation; Double_tfRhoMaxResult: maximum global correlation; TMatrixDSparse*fVxxResult: covariance matrix on x; TMatrixDSparse*fVxxInvResult: inverse of covariance matrix on x; TMatrixDSparse*fVyyInvResult: inverse of covariance matrix on y; TMatrixD*fXResult: x. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const char * GetTUnfoldVersion(void). void InitTUnfold(void); reset all data members. void DeleteMatrix(TMatrixD** m). void DeleteMatrix(TMatrixDSparse** m). void ClearResults(void); delete old results (if any); this function is virtual, so derived classes may implement their own; method to flag results as non-valid. TUnfold(const TUnfold& ); set all matrix pointers to zero. Double_t DoUnfold(Double_t tau); main unfolding algorithm. Declared virtual, because other algorithms; could be implemented. Purpose: unfold y -> x; Data members required:; fA: matrix to relate x and y; fY: measured data points; fX0: bias on x; fBiasScale: scale factor for fX0; fVyy: covariance matrix for y; fL: regularisation conditions; fTauSquared: regularisation strength; fConstraint: whether the constraint is applied; Data members modified:; fVyyInv: inverse of input data covariance matrix; fNdf: number of dgerres of freedom; fEinv: inverse of the matrix neede",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnfold.html:19017,Inherit,Inheritance,19017,root/html534/TUnfold.html,https://root.cern,https://root.cern/root/html534/TUnfold.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rse< Element >::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 215 of file TMatrixTSparse.h. ◆ Clear(). template<class Element > . void TMatrixTSparse< Element >::Clear ; (; Option_t * ; = """"). inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 130 of file TMatrixTSparse.h. ◆ ColNorm(). template<class Element > . Element TMatrixTSparse< Element >::ColNorm. overridevirtual . Column matrix norm, MAX{ SUM{ |M(i,j)|, over i}, over j}. ; The norm is induced by the 1 vector norm. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 2341 of file TMatrixTSparse.cxx. ◆ conservative_sparse_sparse_product_impl(). template<class Element > . void TMatrixTSparse< Element >::conservative_sparse_sparse_product_impl ; (; const TMatrixTSparse< Element > & ; lhs, . const TMatrixTSparse< Element > & ; rhs, . Int_t ; constr = 0 . ). protected . General Sparse Matrix Multiplication (SpMM). ; This code is an adaptation of Eigen SpMM implementation. This product is conservative, meaning that it preserves the symbolic non zeros. Given lhs, rhs, it computes this = rhs * lhs. Note, result matrix is only allocated when constr=1. ; Definition at line 552 of file TMatrixTSparse.cxx. ◆ DeclFileName(). template<class Element > . static const char * TMatrixTSparse< Element >::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 215 of file TMatrixTSparse.h. ◆ ExtractRow(). template<class Element > . void TMatrixTSparse< Element >::ExtractRow ; (; Int_t ; row, . Int_t ; col, . Element * ; v, . Int_t ; n = -1 . ); const. overridevirtual . Store in array v, n matrix elements of row rown starting at column coln. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 509 of file TMatrixTSparse.cxx. ◆ GetColIndexArray() [1/2]. template<class Element > . const Int_t * TMatrixTSparse< Element >::GetColIndexArray. inlineoverridevirtual . Implements",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTSparse.html:38891,adapt,adaptation,38891,doc/master/classTMatrixTSparse.html,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html,1,['adapt'],['adaptation']
Modifiability,"rseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. This class is also known as (typedefs to this class)TMatrixTColumn_const<Double_t>, TMatrixDColumn_const. Function Members (Methods); public:. TMatrixTColumn_const<double>(); TMatrixTColumn_const<double>(const TMatrixTColumn_const<double>& trc); TMatrixTColumn_const<double>(const TMatrixT<double>& matrix, Int_t col); TMatrixTColumn_const<double>(const TMatrixTSym<double>& matrix, Int_t col); virtual~TMatrixTColumn_const<double>(); static TClass*Class(); Int_tGetColIndex() const; Int_tGetInc() const; const TMatrixTBase<double>*GetMatrix() const; const double*GetPtr() const; virtual TClass*IsA() const; const double&operator()(Int_t i) const; TMatrixTColumn_const<double>&operator=(const TMatrixTColumn_const<double>& trc); const double&operator[](Int_t i) const; virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. Int_tfColIndeffective column index; Int_tfIncif ptr = @a[i,col], then ptr+inc = @a[i+1,col]; TMatrixTBase<double>*fMatrixthe matrix I am a column of; const double*fPtrpointer to the a[0,col] column. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TMatrixTColumn_const<double>& trc); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. Int_t GetInc() const; { return fInc; }. const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Int_t GetColIndex() const; { return fColInd; }. » Last changed: root/matrix:$Id: TMatrixTUtils.h 36047 2010-10-04 06:43:15Z brun $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixTColumn_const_double_.html:1904,Inherit,Inheritance,1904,root/html532/TMatrixTColumn_const_double_.html,https://root.cern,https://root.cern/root/html532/TMatrixTColumn_const_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rser::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TTreeDrawArgsParser::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 106 of file TTreeDrawArgsParser.h. Member Data Documentation. ◆ fAdd. bool TTreeDrawArgsParser::fAdd. protected . Values should be added to an existing object. ; Definition at line 60 of file TTreeDrawArgsParser.h. ◆ fDimension. Int_t TTreeDrawArgsParser::fDimension. protected . Dimension of the histogram/plot. ; Definition at line 55 of file TTreeDrawArgsParser.h. ◆ fDrawProfile. bool TTreeDrawArgsParser::fDrawProfile. protected . True if the options contain :""prof"". ; Definition at line 71 of file TTreeDrawArgsParser.h. ◆ fEntryList. bool TTreeDrawArgsParser::fEntryList. protected . If fill a TEntryList. ; Definition at line 69 of file TTreeDrawArgsParser.h. ◆ fExp. TString TTreeDrawArgsParser::fExp. protected . Complete variable expression. ; Definition at line 51 of file TTreeDrawArgsParser.h. ◆ fgMaxDimension. Int_t TTreeDrawArgsParser::fgMaxDimension = 4. static . = 4 ; Definition at line 47 of file TTreeDrawArgsParser.h. ◆ fgMaxParameters. Int_t TTreeDrawArgsParser::fgMaxParameters = 9. static . = 9 ; Definition at line 48 of file TTreeDrawArgsParser.h. ◆ fName. TString TTreeDrawArgsParser::fName. protected . Histogram's/plot's name. ; Definition at line 61 of file TTreeDrawArgsParser.h. ◆ fNoParameters. Int_t TTreeDrawArgsParser::fNoParameters. protected . If dimensions of the plot was specified. ; Definition at line 63 of file TTreeDrawArgsParser.h. ◆ fOption. TString TTreeDrawArgsParser::fOption. protected . Draw options. ; Definition at line 53 of file TTreeDrawArgsParser.h. ◆ fOptionSame. bool TTreeDrawArgsParser::fOptionSame. protected . If option contained ""same"". ; Definition at line 68 of file TTreeDrawArgsParser.h. ◆ fOriginal. TObject* TTreeDrawArgsParser::fOriginal. protected . Original plo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeDrawArgsParser.html:22082,variab,variable,22082,doc/master/classTTreeDrawArgsParser.html,https://root.cern,https://root.cern/doc/master/classTTreeDrawArgsParser.html,1,['variab'],['variable']
Modifiability,"rsion ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TServerSocket ();  ;  TServerSocket (const TServerSocket &);  ; Bool_t Authenticate (TSocket *);  Check authentication request from the client on new open connection. ;  ; void operator= (const TServerSocket &);  . Private Attributes; TSeqCollection * fSecContexts;  . Static Private Attributes; static UChar_t fgAcceptOpt = kSrvNoAuth;  ; static SrvClup_t fgSrvAuthClupHook = 0;  ; static SrvAuth_t fgSrvAuthHook = 0;  . Additional Inherited Members;  Protected Types inherited from TSocket; enum  ESocketErrors { kInvalid = -1; , kInvalidStillInList = -2; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSocket;  TSocket ();  ; Bool_t Authenticate (const char *user);  Authenticated the socket with specified user. ;  ; void MarkBrokenConnection ();  Close the socket and mark as due to a broken connection. ;  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSocket; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTServerSocket.html:17127,inherit,inherited,17127,doc/master/classTServerSocket.html,https://root.cern,https://root.cern/doc/master/classTServerSocket.html,3,['inherit'],['inherited']
Modifiability,"rsion ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGeoPhysicalNode (const TGeoPhysicalNode &)=delete;  ; TGeoPhysicalNode & operator= (const TGeoPhysicalNode &)=delete;  ; void SetAligned (Bool_t flag=kTRUE);  ; void SetBranchAsState ();  Set node branch according to current state. ;  ; Bool_t SetPath (const char *path);  Specify the path for this node. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fLevel;  ; TObjArray * fMatrices;  ; TGeoHMatrix * fMatrixOrig;  ; TObjArray * fNodes;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoPhysicalNode.h>. Inheritance diagram for TGeoPhysicalNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkGeoPNodeFull ; kGeoPNodeVisible ; kGeoPNodeVolAtt ; kGeoPNodeAligned . Definition at line 50 of file TGeoPhysicalNode.h. Constructor & Destructor Doc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPhysicalNode.html:16080,inherit,inherited,16080,doc/master/classTGeoPhysicalNode.html,https://root.cern,https://root.cern/doc/master/classTGeoPhysicalNode.html,1,['inherit'],['inherited']
Modifiability,"rsion ();  ; static const char * DeclFileName ();  ; static TArray * ReadArray (TBuffer &b, const TClass *clReq);  Read TArray object from buffer. ;  ; static void WriteArray (TBuffer &b, const TArray *a);  Write TArray object to buffer. ;  . Protected Member Functions; Double_t RetrieveBinContent (Int_t bin) const override;  Raw retrieval of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ; void UpdateBinContent (Int_t bin, Double_t content) override;  Raw update of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ;  Protected Member Functions inherited from TH2;  TH2 ();  2-D histogram default constructor. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins);  Constructor for Double_t variable bin size 2-D histograms. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, Double_t ylow, Double_t yup);  Constructor for variable bin size (along X axis) 2-D histograms using an input array of type double. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins);  Constructor for variable bin size (along X and Y axis) 2-D histograms using input arrays of type float. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t *ybins);  Constructor for Double_t variable bin size (along Y axis) 2-D histograms. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup);  Constructor for fix bin size 2-D histograms. ;  ; virtual Int_t BufferFill (Double_t x, Double_t y, Double_t w);  accumulate arguments in buffer. ;  ; Int_t BufferFill (Double_t, Double_t) override;  accumulate arguments in buffer. ;  ; virtual void DoFitSlices (bool onX, TF1 *f1, Int_t firstbin, Int_t lastbin, Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2C.html:49084,variab,variable,49084,doc/master/classTH2C.html,https://root.cern,https://root.cern/doc/master/classTH2C.html,6,['variab'],['variable']
Modifiability,"rsion ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Double_t fPhimax;  Maximum angle (degrees) ;  ; Double_t fPhimin;  Minimum angle (degrees) ;  ; Double_t fR1;  first radius ;  ; Double_t fR2;  second radius ;  ; Double_t fTheta;  Rotation angle (degrees) ;  ; Double_t fX1;  X coordinate of centre. ;  ; Double_t fY1;  Y coordinate of centre. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TEllipse.h>. Inheritance diagram for TEllipse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkNoEdges . Definition at line 36 of file TEllipse.h. Constructor & Destructor Documentation. ◆ TEllipse() [1/3]. TEllipse::TEllipse ; (; ). Ellipse default constructor. ; Definition at line 57 of file TEllipse.cxx. ◆ TEllipse() [2/3]. TEllipse::TEllipse ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; r1, . Double_t ; r2 = 0, . Double_t ; phi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEllipse.html:17746,inherit,inherited,17746,doc/master/classTEllipse.html,https://root.cern,https://root.cern/doc/master/classTEllipse.html,1,['inherit'],['inherited']
Modifiability,"rsion ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGLayoutHints; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; UInt_t fFlag;  rubber flag ;  ; Double_t fH;  height of widget ;  ; Double_t fW;  width of widget ;  ; Double_t fX;  x - position of widget ;  ; Double_t fY;  y - position of widget ;  ;  Protected Attributes inherited from TGLayoutHints; ULong_t fLayoutHints;  ; Int_t fPadbottom;  ; Int_t fPadleft;  ; Int_t fPadright;  ; Int_t fPadtop;  ;  Protected Attributes inherited from TRefCnt; UInt_t fRefs;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGLayoutHints; void UpdateFrameElements (TGLayoutHints *l);  Update layout hints of frame elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGXYLayout.h>. Inheritance diagram for TGXYLayoutHints:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ERubberFlag. enum TGXYLayoutHints::ERubberFlag. EnumeratorkLRubberX ; kLRubberY ; kLRubberW ; kLRubberH . Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGXYLayoutHints.html:13941,inherit,inherited,13941,doc/master/classTGXYLayoutHints.html,https://root.cern,https://root.cern/doc/master/classTGXYLayoutHints.html,2,['inherit'],['inherited']
Modifiability,"rsion ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGeoAtt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void CopyOverlaps (Int_t *ovlp, Int_t novlp);  Transient framework-defined extension to volumes. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TGeoExtension * fFWExtension = nullptr;  Transient user-defined extension to volumes. ;  ; TGeoVolume * fMother = nullptr;  ; Int_t fNovlp = 0;  ; Int_t fNumber = 0;  ; Int_t * fOverlaps = nullptr;  ; TGeoExtension * fUserExtension = nullptr;  ; TGeoVolume * fVolume = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  . Private Member Functions;  TGeoNode (const TGeoNode &)=delete;  ; TGeoNode & operator= (const TGeoNode &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoNode.h>. Inheritance diagram for TGeoNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoNode.html:21370,inherit,inherited,21370,doc/master/classTGeoNode.html,https://root.cern,https://root.cern/doc/master/classTGeoNode.html,1,['inherit'],['inherited']
Modifiability,"rsion (AWMI) allows fitting tens, hundreds; of peaks simultaneously that represent sometimes thousands of parameters [2],; [5]. ; Function:; void TSpectrumFit::FitAwmi(double *fSource). This function fits the source; spectrum using AWMI algorithm. The calling program should fill in input fitting; parameters of the TSpectrumFit class using a set of TSpectrumFit setters. The; fitted parameters are written into the class and the fitted data are written; into source spectrum. ;  ; Parameter:; ������� fSource-pointer to; the vector of source spectrum����������������� ; ������� ; Member variables of the; TSpectrumFit class:; ��; Int_t���� fNPeaks;������������������� //number of peaks present in fit, input; parameter, it should be > 0; ��; Int_t���� fNumberIterations;��������� //number of iterations in fitting; procedure, input parameter, it should be > 0; ��; Int_t���� fXmin;��������������������� //first fitted channel; ��; Int_t���� fXmax;��������������������� //last fitted channel; ��; Int_t���� fStatisticType;������������ //type of statistics, possible values; kFitOptimChiCounts (chi square statistics with counts as weighting; coefficients), kFitOptimChiFuncValues (chi square statistics with function; values as weighting coefficients),kFitOptimMaxLikelihood; ��; Int_t���� fAlphaOptim;��������������� //optimization of convergence algorithm, possible; values kFitAlphaHalving, kFitAlphaOptimal; ��; Int_t���� fPower;�������������������� //possible values kFitPower2,4,6,8,10,12,; for details see references. It applies only for Awmi fitting function.; ��; Int_t���� fFitTaylor;���������������� //order of Taylor expansion, possible; values kFitTaylorOrderFirst, kFitTaylorOrderSecond. It applies only for Awmi; fitting function.; ��; Double_t� fAlpha;�������������������� //convergence coefficient, input; parameter, it should be positive number and <=1, for details see references; ��; Double_t� fChi;���������������������� //here the fitting functions return; resulting chi square�",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrumFit.html:21838,variab,variables,21838,root/html602/TSpectrumFit.html,https://root.cern,https://root.cern/root/html602/TSpectrumFit.html,4,['variab'],['variables']
Modifiability,"rsion(). static constexpr Version_t TSPlot::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 90 of file TSPlot.h. ◆ DeclFileName(). static const char * TSPlot::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 90 of file TSPlot.h. ◆ FillSWeightsHists(). void TSPlot::FillSWeightsHists ; (; Int_t ; nbins = 50). The order of histograms in the array: ; x0_species0, x0_species1,..., x1_species0, x1_species1,..., y0_species0, y0_species1,...; If the histograms have already been filled with a different binning, they are refilled and all histograms are deleted ; Definition at line 691 of file TSPlot.cxx. ◆ FillXvarHists(). void TSPlot::FillXvarHists ; (; Int_t ; nbins = 100). Fills the histograms of x variables (not weighted) with nbins. ; Definition at line 521 of file TSPlot.cxx. ◆ FillYpdfHists(). void TSPlot::FillYpdfHists ; (; Int_t ; nbins = 100). Fills the histograms of pdf-s of y variables with binning nbins. ; Definition at line 631 of file TSPlot.cxx. ◆ FillYvarHists(). void TSPlot::FillYvarHists ; (; Int_t ; nbins = 100). Fill the histograms of y variables. ; Definition at line 578 of file TSPlot.cxx. ◆ GetNevents(). Int_t TSPlot::GetNevents ; (; ). inline . Definition at line 63 of file TSPlot.h. ◆ GetNspecies(). Int_t TSPlot::GetNspecies ; (; ). inline . Definition at line 64 of file TSPlot.h. ◆ GetSWeights() [1/2]. void TSPlot::GetSWeights ; (; Double_t * ; weights). Returns the matrix of sweights. ; It is assumed that the array passed in the argurment is big enough ; Definition at line 509 of file TSPlot.cxx. ◆ GetSWeights() [2/2]. void TSPlot::GetSWeights ; (; TMatrixD & ; weights). Returns the matrix of sweights. ; Definition at line 498 of file TSPlot.cxx. ◆ GetSWeightsHist(). TH1D * TSPlot::GetSWeightsHist ; (; Int_t ; ixvar, . Int_t ; ispecies, . Int_t ; iyexcl = -1 . ). Returns the histogram of a variable, weighted with sWeights. . If histograms",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSPlot.html:26129,variab,variables,26129,doc/master/classTSPlot.html,https://root.cern,https://root.cern/doc/master/classTSPlot.html,1,['variab'],['variables']
Modifiability,"rsionCode() const; TStringTMVA::MethodBase::GetTrainingTMVAVersionString() const; Double_tTMVA::MethodBase::GetTrainTime() const; TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; TStringTMVA::MethodBase::GetWeightFileName() const; Double_tTMVA::MethodBase::GetXmax(Int_t ivar) const; Double_tTMVA::MethodBase::GetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual ULong_tTObject::Hash() const; boolHasInverseHessian(); Bool_tTMVA::MethodBase::HasMVAPdfs() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidTMVA::MethodANNBase::InitANNBase(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTMVA::MethodBase::IsSignalLike(); virtual Bool_tTMVA::MethodBase::IsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTMVA::MethodBase::MakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TDirectory*TMVA::MethodBase::MethodBaseDir() const; TMVA::MethodMLPMethodMLP(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = 0); TMVA::MethodMLPMethodMLP(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption, TDirectory* t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodMLP.html:7546,Inherit,InheritsFrom,7546,root/html532/TMVA__MethodMLP.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodMLP.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rsion_t TJSONStackObj::fClVersion {0}. custom structure for stl container reading ; Definition at line 358 of file TBufferJSON.cxx. ◆ fElem. TStreamerElement* TJSONStackObj::fElem {nullptr}. Definition at line 344 of file TBufferJSON.cxx. ◆ fIndx. std::unique_ptr<TArrayIndexProducer> TJSONStackObj::fIndx. indent level ; Definition at line 355 of file TBufferJSON.cxx. ◆ fInfo. TStreamerInfo* TJSONStackObj::fInfo {nullptr}. Definition at line 343 of file TBufferJSON.cxx. ◆ fIsElemOwner. Bool_t TJSONStackObj::fIsElemOwner {kFALSE}. Definition at line 346 of file TBufferJSON.cxx. ◆ fIsObjStarted. Bool_t TJSONStackObj::fIsObjStarted {kFALSE}. indicate that value is written ; Definition at line 348 of file TBufferJSON.cxx. ◆ fIsPostProcessed. Bool_t TJSONStackObj::fIsPostProcessed {kFALSE}. Definition at line 347 of file TBufferJSON.cxx. ◆ fIsStreamerInfo. Bool_t TJSONStackObj::fIsStreamerInfo {kFALSE}. element in streamer info ; Definition at line 345 of file TBufferJSON.cxx. ◆ fLevel. Int_t TJSONStackObj::fLevel {0}. pointer on members counter, can be inherit from parent stack objects ; Definition at line 354 of file TBufferJSON.cxx. ◆ fMemberCnt. int TJSONStackObj::fMemberCnt {1}. raw values ; Definition at line 352 of file TBufferJSON.cxx. ◆ fMemberPtr. int* TJSONStackObj::fMemberPtr {nullptr}. count number of object members, normally _typename is first member ; Definition at line 353 of file TBufferJSON.cxx. ◆ fNode. nlohmann::json* TJSONStackObj::fNode {nullptr}. producer of ndim indexes ; Definition at line 356 of file TBufferJSON.cxx. ◆ fStlRead. std::unique_ptr<StlRead> TJSONStackObj::fStlRead. JSON node, used for reading. ; Definition at line 357 of file TBufferJSON.cxx. ◆ fValues. std::vector<std::string> TJSONStackObj::fValues. enable base64 coding when writing array ; Definition at line 351 of file TBufferJSON.cxx. io/io/src/TBufferJSON.cxx. TJSONStackObj. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:52 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTJSONStackObj.html:15221,inherit,inherit,15221,doc/master/classTJSONStackObj.html,https://root.cern,https://root.cern/doc/master/classTJSONStackObj.html,1,['inherit'],['inherit']
Modifiability,"rsion_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  Redraw list view item. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static FontStruct_t GetDe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLVEntry.html:22869,inherit,inherited,22869,doc/master/classTGLVEntry.html,https://root.cern,https://root.cern/doc/master/classTGLVEntry.html,1,['inherit'],['inherited']
Modifiability,"rsion_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  GenSpec (const GenSpec &other);  ;  GenSpec (RooAbsGenContext *context, const RooArgSet &whatVars, RooDataSet *protoData, Int_t nGen, bool extended, bool randProto, bool resampleProto, TString dsetName, bool init=false);  . Private Attributes; TString _dsetName;  ; bool _extended = false;  ; std::unique_ptr< RooAbsGenContext > _genContext;  ; bool _init = false;  ; Int_t _nGen = 0;  ; RooDataSet * _protoData = nullptr;  ; bool _randProto = false;  ; bool _resampleProto = false;  ; RooArgSet _whatVars;  . Friends; class RooAbsPdf;  . #include <RooAbsPdf.h>; Constructor & Destructor Documentation. ◆ ~GenSpec(). RooAbsPdf::GenSpec::~GenSpec ; (; ). virtualdefault . ◆ GenSpec() [1/3]. RooAbsPdf::GenSpec::GenSpec ; (; ). default . ◆ GenSpec() [2/3]. RooAbsPdf::GenSpec::GenSpec ; (; RooAbsGenContext * ; context, . const RooArgSet & ; whatVars, . RooDataSet * ; protoData, . Int_t ; nGen, . bool ; extended, . bool ; randProto, . bool ; resampleProto, . TString ; dsetName, . bool ; init = false . ). private . Definition at line 2685 of file RooAbsPdf.cxx. ◆ GenSpec() [3/3]. RooAbsPdf::GenSpec::GenSpec ; (; const GenSpec & ; other). private . Member Function Documentation. ◆ Class(). static TClass * RooAbsPdf::GenSpec::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooAbsPdf::GenSpec::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooAbsPdf::GenSpec::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 93 of file RooAbsPdf.h. ◆ DeclFileName(). static const char * RooAbsPdf::GenSpec::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 93 of file RooAbsPdf.h. ◆ IsA(). virtual TClass * RooAbsPdf::GenSpec::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf_1_1GenSpec.html:1700,extend,extended,1700,doc/master/classRooAbsPdf_1_1GenSpec.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf_1_1GenSpec.html,1,['extend'],['extended']
Modifiability,"rsion_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; UInt_t MapFlag (Option_t *flag);  allowed options: ""ES"" - FFTW_ESTIMATE ""M"" - FFTW_MEASURE ""P"" - FFTW_PATIENT ""EX"" - FFTW_EXHAUSTIVE ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fFlags;  ; void * fIn;  ; Int_t * fN;  ; Int_t fNdim;  ; void * fOut;  ; void * fPlan;  ; Int_t fTotalSize;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TVirtualFFT; static TString fgDefault = """";  ; static TVirtualFFT * fgFFT = nullptr;  . #include <TFFTComplexReal.h>. Inheritance diagram for TFFTComplexReal:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFFTCompl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFFTComplexReal.html:14736,inherit,inherited,14736,doc/master/classTFFTComplexReal.html,https://root.cern,https://root.cern/doc/master/classTFFTComplexReal.html,1,['inherit'],['inherited']
Modifiability,"rsion_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TTree * fChain;  . Protected Member Functions; Long64_t GenerateFiles (const char *filename, Long64_t sizenevents);  Generate files for IO-bound run Input parameters filename: The name of the file to be generated sizenevents: Either the number of events to generate when filetype==kPBFileBenchmark or the size of the file to generate when filetype==kPBFileCleanup Returns Either Number of entries in the file when filetype==kPBFileBenchmark or bytes written when filetype==kPBFileCleanup return 0 in case error. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TString fBaseDir;  ; TList * fFilesGenerated;  ; TMacro * fGenerateFun;  ; Long64_t fNEvents;  ; Int_t fNTracks;  ; Int_t fNTracksMax;  ; Int_t fRegenerate;  ; TObject * fTotalGen;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelEventGen.html:12037,inherit,inherited,12037,doc/master/classTSelEventGen.html,https://root.cern,https://root.cern/doc/master/classTSelEventGen.html,1,['inherit'],['inherited']
Modifiability,"rsion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveProjected; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; typedef vpPolygon_t::const_iterator vpPolygon_ci;  ; typedef vpPolygon_t::iterator vpPolygon_i;  ; typedef std::list< Polygon_t > vpPolygon_t;  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; Float_t PolygonSurfaceXY (const Polygon_t &poly) const;  Calculate XY surface of a polygon. ;  ; void SetDepthLocal (Float_t d) override;  Set depth (z-coordinate) of the projected points. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePolygonSetProjected.html:33427,inherit,inherited,33427,doc/master/classTEvePolygonSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEvePolygonSetProjected.html,1,['inherit'],['inherited']
Modifiability,"rsion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; MsgLogger & Log () const;  . Private Attributes; MsgLogger * fLogger;  ! message logger ;  ; std::vector< Float_t > fMvaValues;  mva values (Results) ;  ; std::vector< Bool_t > fMvaValuesTypes;  mva values type(sig/bkg) (Results) ;  ; std::vector< Float_t > fRet;  return val ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/ResultsClassification.h>. Inheritance diagram for TMVA::ResultsClassification:. This browser is not able to show SVG: try Fir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1ResultsClassification.html:10916,inherit,inherited,10916,doc/master/classTMVA_1_1ResultsClassification.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1ResultsClassification.html,1,['inherit'],['inherited']
Modifiability,"rsion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TList * fColumns;  ; TString fCreateTime;  SQL tables engine name. ;  ; TString fEngine;  list of TSQLColumnInfo objects, describing each table column ;  ; TString fUpdateTime;  table creation time ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSQLTableInfo.h>. Inheritance diagram for TSQLTableInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLTableInfo.html:10746,inherit,inherited,10746,doc/master/classTSQLTableInfo.html,https://root.cern,https://root.cern/doc/master/classTSQLTableInfo.html,1,['inherit'],['inherited']
Modifiability,"rsion_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Static Protected Member Functions; static MsgLogger & Log ();  . Private Member Functions; virtual void SetValueLocal (const TString &vs, Int_t i=-1)=0;  . Private Attributes; const TString fDescription;  ; Bool_t fIsSet;  ; const TString fName;  ; TString fNameAllLower;  . Friends; class Configurable;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/Option.h>. Inheritance diagram for TMVA::OptionBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1OptionBase.html:9869,inherit,inherited,9869,doc/master/classTMVA_1_1OptionBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1OptionBase.html,1,['inherit'],['inherited']
Modifiability,"rst child and this; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGSplitFrame(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = 0); Default constructor. ~TGSplitFrame(); Destructor. Make cleanup. void AddFrame(TGFrame* f, TGLayoutHints* l = 0); Add a frame in the split frame using layout hints l. void RemoveFrame(TGFrame* f); Add a frame in the split frame using layout hints l. void Cleanup(); Recursively cleanup child frames. TGSplitFrame * GetTopFrame(); Return the top level split frame. void Close(); Close (unmap and remove from the list of frames) the frame contained in; this split frame. void CloseAndCollapse(); Close (unmap, remove from the list of frames and destroy) the frame; contained in this split frame. Then unsplit the parent frame. void Docked(TGFrame* frame); Emit Undocked() signal. void ExtractFrame(); Extract the frame contained in this split frame an reparent it in a; transient frame. Keep a pointer on the transient frame to be able to; swallow the child frame bac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGSplitFrame.html:19804,Inherit,Inheritance,19804,root/html532/TGSplitFrame.html,https://root.cern,https://root.cern/root/html532/TGSplitFrame.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rstEvt=0, Long64_t lastEvt=-1, Bool_t logProgress=false);  get all the MVA values for the events of the given Data type ;  ; const TString & GetInternalVarName (Int_t ivar) const;  ; virtual std::vector< Double_t > GetMvaValues (Long64_t firstEvt=0, Long64_t lastEvt=-1, Bool_t logProgress=false);  get all the MVA values for the events of the current Data type ;  ; const TString & GetOriginalVarName (Int_t ivar) const;  ; const TString & GetWeightFileDir () const;  ; Bool_t HasTrainingTree () const;  ; Bool_t Help () const;  ; Bool_t IgnoreEventsWithNegWeightsInTraining () const;  ; Bool_t IsConstructedFromWeightFile () const;  ; Bool_t IsNormalised () const;  ; virtual void MakeClassSpecificHeader (std::ostream &, const TString &="""") const;  ; void NoErrorCalc (Double_t *const err, Double_t *const errUpper);  ; void SetNormalised (Bool_t norm);  ; void SetWeightFileDir (TString fileDir);  set directory of weight file ;  ; void SetWeightFileName (TString);  set the weight file name (depreciated) ;  ; void Statistics (Types::ETreeType treeType, const TString &theVarName, Double_t &, Double_t &, Double_t &, Double_t &, Double_t &, Double_t &);  calculates rms,mean, xmin, xmax of the event variable this can be either done for the variables as they are or for normalised variables (in the range of 0-1) if ""norm"" is set to kTRUE ;  ; Bool_t TxtWeightsOnly () const;  ; Bool_t Verbose () const;  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnabled () const;  ; void ResetSetFlag ();  resets the IsSet flag for all declare options to be called before options are read from stream ;  ; void WriteOptionsReferenceToFile ();  write complete options to output stream ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBayesClassifier.html:24685,variab,variable,24685,doc/master/classTMVA_1_1MethodBayesClassifier.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBayesClassifier.html,70,"['inherit', 'variab']","['inherited', 'variable', 'variables']"
Modifiability,"rsus ""e2"" on the x-axis; - ""e1:e2:e3"" produces an unbinned 3-d scatter-plot (TPolyMarker3D) of ""e1""; versus ""e2"" versus ""e3"" on the x-, y-, z-axis, respectively.; - ""e1:e2:e3:e4"" produces an unbinned 3-d scatter-plot (TPolyMarker3D) of ""e1""; versus ""e2"" versus ""e3"" and ""e4"" mapped on the color number.; (to create histograms in the 2, 3, and 4 dimensional case, see section ""Saving; the result of Draw to an histogram""). Example:; varexp = x simplest case: draw a 1-Dim distribution of column named x; = sqrt(x) : draw distribution of sqrt(x); = x*y/z; = y:sqrt(x) 2-Dim distribution of y versus sqrt(x); = px:py:pz:2.5*E produces a 3-d scatter-plot of px vs py ps pz; and the color number of each marker will be 2.5*E.; If the color number is negative it is set to 0.; If the color number is greater than the current number of colors; it is set to the highest color number.; The default number of colors is 50.; see TStyle::SetPalette for setting a new color palette. Note that the variables e1, e2 or e3 may contain a selection.; example, if e1= x*(y<0), the value histogrammed will be x if y<0; and will be 0 otherwise. The expressions can use all the operations and build-in functions; supported by TFormula (See TFormula::Analyze), including free; standing function taking numerical arguments (TMath::Bessel).; In addition, you can call member functions taking numerical; arguments. For example:; - ""TMath::BreitWigner(fPx,3,2)""; - ""event.GetHistogram().GetXaxis().GetXmax()""; Note: You can only pass expression that depend on the TTree's data; to static functions and you can only call non-static member function; with 'fixed' parameters. selection is an expression with a combination of the columns.; In a selection all the C++ operators are authorized.; The value corresponding to the selection expression is used as a weight; to fill the histogram.; If the expression includes only boolean operations, the result; is 0 or 1. If the result is 0, the histogram is not filled.; In general, the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTree.html:68315,variab,variables,68315,root/html534/TTree.html,https://root.cern,https://root.cern/root/html534/TTree.html,6,['variab'],['variables']
Modifiability,"rt entries.; UInt_t*fBasketIndex[fMaxBaskets] ordered list of basket indices to be written.; UInt_t*fBasketNum[fMaxBaskets] index of the basket within the branch.; Long64_t*fBasketSeek[fMaxBaskets] list of basket position to be read.; UInt_tfCloneMethodIndicates which cloning method was selected.; TObjArrayfFromBranches; TTree*fFromTree; Bool_tfIsValid; UInt_tfMaxBaskets; Option_t*fMethod; Bool_tfNeedConversionTrue if the fast merge is not possible but a slow merge might possible.; UInt_tfOptions; UShort_tfPidOffsetOffset to be added to the copied key/basket.; TObjArrayfToBranches; Long64_tfToStartEntriesNumber of entries in the target tree before any addition.; TTree*fToTree; TStringfWarningMsgText of the error message lead to an 'invalid' state; static TTreeCloner::ECloneMethodkDefault; static TTreeCloner::ECloneMethodkSortBasketsByBranch; static TTreeCloner::ECloneMethodkSortBasketsByEntry; static TTreeCloner::ECloneMethodkSortBasketsByOffset. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTreeCloner(TTree* from, TTree* to, Option_t* method, UInt_t options = kNone); Constructor. This object would transfer the data from; 'from' to 'to' using the method indicated in method. The value of the parameter 'method' determines in which; order the branches' baskets are written to the output file. When a TTree is filled the data is stored in the individual; branches' basket. Each basket is written individually to; the disk as soon as it is full. In consequence the baskets; of branches that contain 'large' data chunk are written to; the disk more often. There is currently 3 supported sorting order:; SortBasketsByOffset (the default); SortBasketsByBranch; SortBasketsByEntry. When using SortBasketsByOffset the baskets are written in; the output file in the same order as in the original file; (i.e. the basket are sorted on their offset in the original; file; Usually this also means that the baskets are sorted; on the index/number of t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTreeCloner.html:2467,Inherit,Inheritance,2467,root/html604/TTreeCloner.html,https://root.cern,https://root.cern/root/html604/TTreeCloner.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rt status; Int_tTProofDraw::fDimensionDimension of the current expression; TH1*fHistogram; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Begin1D(TTree* t); Initialization for 1D Histogram. void Begin2D(TTree* t); Initialization for 2D histogram. void Begin3D(TTree* t); Initialization for 3D histogram. void Begin(TTree* t); See TProofDraw::Begin(). void DefVar1D(); Define vars for 1D Histogram. void DefVar2D(); Define variables for 2D histogram. void DefVar3D(); Define variables for 3D histogram. void DefVar(); Define variables according to arguments. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the histgram with given values. void Terminate(void); See TProofDraw::Terminate(). TProofDrawHist(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofDraw.h 39173 2011-05-12 18:04:44Z ganis $ » Last generated: 2011-11-03 20:21; This page has been automatica",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofDrawHist.html:7787,Inherit,Inheritance,7787,root/html532/TProofDrawHist.html,https://root.cern,https://root.cern/root/html532/TProofDrawHist.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rt); 2226 return EvaluateImportanceShort(loader, theMethod, methodTitle, theOption);; 2227 else if (vitype == VIType::kAll); 2228 return EvaluateImportanceAll(loader, theMethod, methodTitle, theOption);; 2229 else if (vitype == VIType::kRandom) {; 2230 if ( nbits > 10 && nbits < 30) {; 2231 // limit nbits to less than 30 to avoid error converting from double to uint and also cannot deal with too many combinations; 2232 return EvaluateImportanceRandom(loader, static_cast<UInt_t>( pow(2, nbits) ), theMethod, methodTitle, theOption);; 2233 } else if (nbits < 10) {; 2234 Log() << kERROR << ""Error in Variable Importance: Random mode require more that 10 variables in the dataset.""; 2235 << Endl;; 2236 } else if (nbits > 30) {; 2237 Log() << kERROR << ""Error in Variable Importance: Number of variables is too large for Random mode""; 2238 << Endl;; 2239 }; 2240 }; 2241 return nullptr;; 2242}; 2243 ; 2244////////////////////////////////////////////////////////////////////////////////; 2245 ; 2246TH1F *TMVA::Factory::EvaluateImportanceAll(DataLoader *loader, Types::EMVA theMethod, TString methodTitle,; 2247 const char *theOption); 2248{; 2249 ; 2250 uint64_t x = 0;; 2251 uint64_t y = 0;; 2252 ; 2253 // getting number of variables and variable names from loader; 2254 const int nbits = loader->GetDataSetInfo().GetNVariables();; 2255 std::vector<TString> varNames = loader->GetDataSetInfo().GetListOfVariables();; 2256 ; 2257 if (nbits > 60) {; 2258 Log() << kERROR << ""Number of combinations is too large , is 2^"" << nbits << Endl;; 2259 return nullptr;; 2260 }; 2261 if (nbits > 20) {; 2262 Log() << kWARNING << ""Number of combinations is very large , is 2^"" << nbits << Endl;; 2263 }; 2264 uint64_t range = static_cast<uint64_t>(pow(2, nbits));; 2265 ; 2266 ; 2267 // vector to save importances; 2268 std::vector<Double_t> importances(nbits);; 2269 // vector to save ROC; 2270 std::vector<Double_t> ROC(range);; 2271 ROC[0] = 0.5;; 2272 for (int i = 0; i < nbits; i++); 2273 importances[i] ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:94611,variab,variables,94611,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,3,['variab'],"['variable', 'variables']"
Modifiability,"rt, const TClass *actualClass, Bool_t cacheReuse)=0;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Attributes; static const char * fgDoubleFmt = ""%.14e"";  ! printf argument for doubles, either ""%f"" or ""%e"" or ""%10f"" and so on ;  ; static const char * fgFloatFmt = ""%e"";  ! printf argument for floats, either ""%f"" or ""%e"" or ""%10f"" and so on ;  ;  Static Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  . Additional Inherited Members;  Public Types inherited from TBufferIO; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL << ( 18 )); , kUser1 = (1ULL << ( 21 )); , kUser2 = (1ULL << ( 22 )); , ;   kUser3 = (1ULL << ( 23 )). };  ;  Public Types inherited from TBuffer; enum  { kInitialSize = 1024; , kMinimalSize = 128; };  ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferText.html:30778,inherit,inherited,30778,doc/master/classTBufferText.html,https://root.cern,https://root.cern/doc/master/classTBufferText.html,1,['inherit'],['inherited']
Modifiability,rt. ;  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TGeoManager * fManager;  ; Int_t fMaxVisNodes;  ; Int_t fVisLevel;  ; Int_t fVisOption;  ;  Protected Attributes inherited from TEveGeoNode; TGeoNode * fNode;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  . Private Member Functions;  TEveGeoTopNode (const TEveGeoTopNode &);  ; TEveGeoTopNod,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGeoTopNode.html:27915,inherit,inherited,27915,doc/master/classTEveGeoTopNode.html,https://root.cern,https://root.cern/doc/master/classTEveGeoTopNode.html,2,['inherit'],['inherited']
Modifiability,"rt>&operator=(short); ROOT::TImpProxy<short>TImpProxy<short>(short). Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). TImpProxy & operator=(short ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id: TBranchProxy.h 41244 2011-10-06 19:42:35Z pcanal $ » Last generated: 2011-11-03 20:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__TImpProxy_short_.html:3940,Inherit,Inheritance,3940,root/html532/ROOT__TImpProxy_short_.html,https://root.cern,https://root.cern/root/html532/ROOT__TImpProxy_short_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtEmpty (Bool_t ie);  ; void SetProjection (TEveProjection::EPType_e type);  Set projection type and distortion. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t SubImportChildren (TEveElement *el, TEveElement *proj_parent);  Recursively import children elements of el and apply projection to the newly imported objects. ;  ; virtual TEveElement * SubImportElements (TEveElement *el, TEveElement *proj_parent);  Recursively import elements and apply projection to the newly imported objects. ;  ; virtual void UpdateName ();  Updates name to have consistent information with projection. ;  ;  Public Member Functions inherited from TEveElementList;  TEveElementList (const char *n=""TEveElementList"", const char *t="""", Bool_t doColor=kFALSE, Bool_t doTransparency=kFALSE);  Constructor. ;  ;  TEveElementList (const TEveElementList &e);  Copy constructor. ;  ;  ~TEveElementList () override;  ; Bool_t AcceptElement (TEveElement *el) override;  Check if TEveElement el is inherited from fChildClass. ;  ; TEveElementList * CloneElement () const override;  Clone the element via copy constructor. ;  ; TClass * GetChildClass () const;  ; const char * GetElementName () const override;  Virtual function for retrieving name of the element. ;  ; const char * GetElementTitle () const override;  Virtual function for retrieving title of the render-element. ;  ; TObject * GetObject (const TEveException &=""TEveElementList::GetObject "") const override;  Get a TObject associated with this render-element. ;  ; TClass * ProjectedClass (const TEveProjection *p) const override;  Virtual from TEveProjectable, returns TEveCompoundProjected class. ;  ; void SetChildClass (TClass *c);  ; void SetElementName (const char *name) override;  Virtual function for setting of name of an element. ;  ; void SetElementNameTitle (const char *name, const char *title) override;  Virtual function for setting of name and title of render element. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveProjectionManager.html:3257,inherit,inherited,3257,doc/master/classTEveProjectionManager.html,https://root.cern,https://root.cern/doc/master/classTEveProjectionManager.html,1,['inherit'],['inherited']
Modifiability,"rtName() const; virtual const char*TObject::GetTitle() const; virtual vector<TString>*GetTransformationStrings(Int_t cls) const; virtual UInt_tTObject::GetUniqueID() const; TMVA::Types::EVariableTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual voidTObject::Inspect() constMENU ; virtual const TMVA::Event*InverseTransform(const TMVA::Event *const, Int_t cls) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTMVA::VariableTransformBase::IsCreated() const; Bool_tTMVA::VariableTransformBase::IsEnabled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableDecorrTransform.html:3398,Variab,VariableTransformBase,3398,root/html532/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableDecorrTransform.html,6,['Variab'],['VariableTransformBase']
Modifiability,"rtOrder); { fSortGet = sortOrder; }. void SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); { fDsiOutput = outputDsi; }. void SetUseSignalTransform(Bool_t e = kTRUE); { fUseSignalTransform = e; }. Bool_t UseSignalTransform() const; { return fUseSignalTransform; }. const char* GetName() const; { return fTransformName.Data(); }. TString GetShortName() const; { TString a(fTransformName); a.ReplaceAll(""Transform"",""""); return a; }. void WriteTransformationToStream(ostream& o) const. void ReadTransformationFromStream(istream& istr, const TString& classname = """"). Types::EVariableTransform GetVariableTransform() const; { return fVariableTransform; }. void PrintTransformation(ostream& ); {}. const std::vector<TMVA::VariableInfo>& Variables() const; { return fVariables; }. const std::vector<TMVA::VariableInfo>& Targets() const; { return fTargets; }. const std::vector<TMVA::VariableInfo>& Spectators() const; { return fSpectators; }. void SetTMVAVersion(TMVA::TMVAVersion_t v); { fTMVAVersion = v; }. void SetCreated(Bool_t c = kTRUE); { fCreated = c; }. void SetNVariables(UInt_t i); { fNVars = i; }. void SetName(const TString& c); { fTransformName = c; }. UInt_t GetNVariables() const; { return fDsi.GetNVariables(); }. UInt_t GetNTargets() const; { return fDsi.GetNTargets(); }. UInt_t GetNSpectators() const; { return fDsi.GetNSpectators(); }. std::vector<TMVA::VariableInfo>& Variables(); { return fVariables; }. std::vector<TMVA::VariableInfo>& Targets(); { return fTargets; }. std::vector<TMVA::VariableInfo>& Spectators(); { return fSpectators; }. Int_t GetNClasses() const; { return fDsi.GetNClasses(); }. » Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: VariableTransformBase.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-12-02 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableTransformBase.html:12416,Variab,VariableInfo,12416,root/html532/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableTransformBase.html,5,['Variab'],"['VariableInfo', 'VariableTransformBase', 'Variables']"
Modifiability,"rtTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetEntry(Long64_t entry, Int_t getall = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*GetOutputList() const; virtual Long64_tGetSelectedRows() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree* tree); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSelectorEntries.html:3287,Inherit,InheritsFrom,3287,root/html534/TSelectorEntries.html,https://root.cern,https://root.cern/root/html534/TSelectorEntries.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetEntry(Long64_t entry, Int_t getall = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*GetOutputList() const; virtual Long64_tGetSelectedRows() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree* tree); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelectorEntries.html:2834,Inherit,InheritsFrom,2834,root/html602/TSelectorEntries.html,https://root.cern,https://root.cern/root/html602/TSelectorEntries.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rt_t align=11);  Set the text alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawColorTable ();  Static function to Display Color Table in a pad. ;  ; static Int_t GetMaxPickDistance ();  Static function (see also TPad::SetMaxPickDistance) ;  ; static void SetMaxPickDistance (Int_t maxPick=5);  static function to set the maximum Pick Distance fgMaxPickDistance This parameter is used in TPad::Pick to select an object if its DistancetoPrimitive returns a value < fgMaxPickDistance The default value is 5 pixels. ;  ;  Static Public Member Functions inherited from TVirtualPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the curren",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGroupButton.html:39566,inherit,inherited,39566,doc/master/classTGroupButton.html,https://root.cern,https://root.cern/doc/master/classTGroupButton.html,2,['inherit'],['inherited']
Modifiability,"rt_tGetCycle() const; const TDatime&GetDatime() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TFile*GetFile() const; virtual const char*GetIconName() const; Short_tGetKeep() const; Int_tGetKeylen() const; TDirectory*GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tGetNbytes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tGetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tGetSeekKey() const; virtual Long64_tGetSeekPdir() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; virtual voidIncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidKeep(); virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TKey.html:4608,Inherit,InheritsFrom,4608,root/html532/TKey.html,https://root.cern,https://root.cern/root/html532/TKey.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rt_tGetCycle() const; const TDatime&GetDatime() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TFile*GetFile() const; virtual const char*GetIconName() const; Short_tGetKeep() const; Int_tGetKeylen() const; TDirectory*GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tGetNbytes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tGetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tGetSeekKey() const; virtual Long64_tGetSeekPdir() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; virtual voidIncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidKeep(); virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """");",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TKey.html:4042,Inherit,InheritsFrom,4042,root/html602/TKey.html,https://root.cern,https://root.cern/root/html602/TKey.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rted ;  ; std::unique_ptr< RooFactoryWSTool > _factory;  ! Factory tool associated with workspace ;  ; RooLinkedList _genObjects;  List of generic objects. ;  ; std::map< std::string, RooArgSet > _namedSets;  Map of named RooArgSets. ;  ; bool _openTrans = false;  ! Is there a transaction open? ;  ; RooArgSet _sandboxNodes;  ! Sandbox for incoming objects in a transaction ;  ; RooLinkedList _snapshots;  List of parameter snapshots. ;  ; RooLinkedList _studyMods;  List if StudyManager modules. ;  ; TUUID _uuid;  ; RooLinkedList _views;  List of model views. ;  . Static Private Attributes; static bool _autoClass = false;  ; static std::list< std::string > _classDeclDirList;  ; static std::string _classFileExportDir = "".wscode.%s.%s"";  ; static std::list< std::string > _classImplDirList;  . Friends; class CodeRepo;  ; class RooAbsArg;  ; class RooAbsPdf;  ; class RooConstraintSum;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooWorkspace.h>. Inheritance diagram for RooWork",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace.html:21564,inherit,inherited,21564,doc/master/classRooWorkspace.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace.html,1,['inherit'],['inherited']
Modifiability,"rted before extension except PDF and ROOT files. In last case PDF or ROOT file will contain all pads. Parameter option only used when output into PDF/PS files If TCanvas::SaveAll() called without arguments - all existing canvases will be stored in allcanvases.pdf file. ; Definition at line 2641 of file TCanvas.cxx. ◆ SavePrimitive(). void TCanvas::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save primitives in this canvas in C++ macro file with GUI. ; Reimplemented from TObject.; Definition at line 1776 of file TCanvas.cxx. ◆ SaveSource(). void TCanvas::SaveSource ; (; const char * ; filename = """", . Option_t * ; option = """" . ). Save primitives in this canvas as a C++ macro file. ; This function loops on all the canvas primitives and for each primitive calls the object SavePrimitive function. When outputting floating point numbers, the default precision is 7 digits. The precision can be changed (via system.rootrc) by changing the value of the environment variable ""Canvas.SavePrecision"" ; Definition at line 1820 of file TCanvas.cxx. ◆ Selected(). void TCanvas::Selected ; (; TVirtualPad * ; pad, . TObject * ; obj, . Int_t ; event . ). virtual . Emit Selected() signal. ; Definition at line 1637 of file TCanvas.cxx. ◆ SetBatch(). void TCanvas::SetBatch ; (; Bool_t ; batch = kTRUE). overridevirtual . Toggle batch mode. ; However, if the canvas is created without a window then batch mode always stays set. ; Implements TVirtualPad.; Definition at line 1953 of file TCanvas.cxx. ◆ SetCanvasImp(). void TCanvas::SetCanvasImp ; (; TCanvasImp * ; i). inline . Definition at line 205 of file TCanvas.h. ◆ SetCanvasSize(). void TCanvas::SetCanvasSize ; (; UInt_t ; ww, . UInt_t ; wh . ). overridevirtual . Set Width and Height of canvas to ww and wh respectively. ; If ww and/or wh are greater than the current canvas window a scroll bar is automatically generated. Use this function to zoom in a canvas and navigate via the scroll bars. The ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:85425,variab,variable,85425,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,1,['variab'],['variable']
Modifiability,"rted before extension except PDF and ROOT files. In last case PDF or ROOT file will contain all pads. Parameter option only used when output into PDF/PS files If TCanvas::SaveAll() called without arguments - all existing canvases will be stored in allcanvases.pdf file. ; Definition at line 2654 of file TCanvas.cxx. ◆ SavePrimitive(). void TCanvas::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save primitives in this canvas in C++ macro file with GUI. ; Reimplemented from TObject.; Definition at line 1778 of file TCanvas.cxx. ◆ SaveSource(). void TCanvas::SaveSource ; (; const char * ; filename = """", . Option_t * ; option = """" . ). Save primitives in this canvas as a C++ macro file. ; This function loops on all the canvas primitives and for each primitive calls the object SavePrimitive function. When outputting floating point numbers, the default precision is 7 digits. The precision can be changed (via system.rootrc) by changing the value of the environment variable ""Canvas.SavePrecision"" ; Definition at line 1822 of file TCanvas.cxx. ◆ Selected(). void TCanvas::Selected ; (; TVirtualPad * ; pad, . TObject * ; obj, . Int_t ; event . ). virtual . Emit Selected() signal. ; Definition at line 1639 of file TCanvas.cxx. ◆ SetBatch(). void TCanvas::SetBatch ; (; Bool_t ; batch = kTRUE). overridevirtual . Toggle batch mode. ; However, if the canvas is created without a window then batch mode always stays set. ; Implements TVirtualPad.; Definition at line 1957 of file TCanvas.cxx. ◆ SetCanvasImp(). void TCanvas::SetCanvasImp ; (; TCanvasImp * ; i). inline . Definition at line 205 of file TCanvas.h. ◆ SetCanvasSize(). void TCanvas::SetCanvasSize ; (; UInt_t ; ww, . UInt_t ; wh . ). overridevirtual . Set Width and Height of canvas to ww and wh respectively. ; If ww and/or wh are greater than the current canvas window a scroll bar is automatically generated. Use this function to zoom in a canvas and navigate via the scroll bars. The ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCanvas.html:85801,variab,variable,85801,doc/master/classTCanvas.html,https://root.cern,https://root.cern/doc/master/classTCanvas.html,1,['variab'],['variable']
Modifiability,"rted from the canvas; pull down menu ""Classes"". In the list of classes, class names are separated by a "":""; wildcarding is supported.; The following formats are supported, eg in TClassTree::Draw; 1- Draw(""ClassA""); Draw inheritance tree for ClassA; Show all classes referenced by ClassA; 2- Draw(""*ClassB""); Draw inheritance tree for ClassB; and all the classes deriving from ClassB; 3- Draw("">ClassC""); Draw inheritance tree for ClassC; Show classes referencing ClassC; 4- Draw(""ClassD<""); Draw inheritance tree for ClassD; Show classes referenced by ClassD; Show all classes referencing ClassD; 5- Draw(""Cla*""); Draw inheritance tree for all classes with name starting with ""Cla""; Show classes referenced by these classes; 6- Draw(""ClassA:ClassB<""); Draw inheritance tree for ClassA; Show all classes referenced by ClassA; Draw inheritance tree for ClassB; Show classes referenced by ClassB; Show all classes referencing ClassB. example; Draw(""TTree<""); Draw inheritance tree for the Root class TTree; Show all classes referenced by TTree; Show all classes using TTree. By default, only direct inheritance is drawn.; Use TClassTree::ShowLinks(option) to show additional references; option = ""H"" to show links to embedded classes; option = ""M"" to show multiple inheritance; option = ""R"" to show pointers to other classes from data members; option = ""C"" to show classes used by the code(implementation) of a class. The following picture is produced directly by:; TClassTree ct(""ct"",""*TH1""); It shows all the classes derived from the base class TH1. /*. */. The ClassTree class uses the services of the class TPaveClass to; show the class names. By clicking with the right mouse button in; one TPaveClass object, one can invoke the following functions of TClassTree:; - ShowLinks(option) with by default option = ""HMR""; - Draw(classes). By default the class drawn is the one being pointed; - ShowClassesUsedBy(classes) (by default the pointed class); - ShowClassesUsing(classes) (by default the pointed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClassTree.html:1683,inherit,inheritance,1683,root/html526/TClassTree.html,https://root.cern,https://root.cern/root/html526/TClassTree.html,11,['inherit'],['inheritance']
Modifiability,"rted values ;  ; Long64_t * fIndexValues;  [fN] Sorted index values, higher 64bits ;  ; Long64_t * fIndexValuesMinor;  [fN] Sorted index values, lower 64bits ;  ; TTreeFormula * fMajorFormula;  ! Pointer to major TreeFormula ;  ; TTreeFormula * fMajorFormulaParent;  ! Pointer to major TreeFormula in Parent tree (if any) ;  ; TString fMajorName;  Index major name. ;  ; TTreeFormula * fMinorFormula;  ! Pointer to minor TreeFormula ;  ; TTreeFormula * fMinorFormulaParent;  ! Pointer to minor TreeFormula in Parent tree (if any) ;  ; TString fMinorName;  Index minor name. ;  ; Long64_t fN;  Number of entries. ;  ;  Protected Attributes inherited from TVirtualIndex; TTree * fTree;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TTreeIndex (const TTreeIndex &)=delete;  ; TTreeIndex & operator= (const TTreeIndex &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TTreeIndex.h>. Inheritance diagram for TTreeIndex:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTreeIndex() [1/3]. TTreeIndex::TTreeIndex ; (; const TTreeIndex & ; ). privatedelete . ◆ TTreeIndex() [2/3]. TTreeIndex::TTreeIndex ; (; ). Default co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeIndex.html:14044,inherit,inherited,14044,doc/master/classTTreeIndex.html,https://root.cern,https://root.cern/doc/master/classTTreeIndex.html,1,['inherit'],['inherited']
Modifiability,"rtedLODAxes() const; virtual Bool_tTGLLogicalShape::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLLogicalShape::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals(). protected:. voidTGLLogicalShape::PurgeDLRange(UInt_t base, Int_t size) const. private:. voidDrawStars() const. Data Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. private:. Double_tfSize; UInt_tfStyle; vector<Double_t>fVertices. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLPolyMarker(const TBuffer3D& buffer); TAttMarker is not TObject descendant, so I need dynamic_cast. void DirectDraw(TGLRnrCtx& rnrCtx) const; Debug tracing. void DrawStars() const; Draw stars. Bool_t IgnoreSizeForOfInterest() const; { return kTRUE; }. » Author: Timur Pocheptsov 03/08/2004 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-03-13 19:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLPolyMarker.html:3670,Inherit,Inheritance,3670,root/html534/TGLPolyMarker.html,https://root.cern,https://root.cern/root/html534/TGLPolyMarker.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rterOriginalHypoTestInverterOriginal(RooStats::HypoTestCalculator& myhc0, RooRealVar& scannedVariable, double size = 0.050000000000000003); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; RooStats::IntervalCalculatorRooStats::IntervalCalculator::IntervalCalculator(); RooStats::IntervalCalculatorRooStats::IntervalCalculator::IntervalCalculator(const RooStats::IntervalCalculator&); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooStats::HypoTestInverterOriginal&operator=(const RooStats::HypoTestInverterOriginal&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); boolRunAutoScan(double xMin, double xMax, double target, double epsilon = 0.0050000000000000001, unsigned int numAlgorithm = 0); boolRunFixedScan(int nBins, double xMin, double xMax); boolRunOneP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HypoTestInverterOriginal.html:4035,Inherit,InheritsFrom,4035,root/html602/RooStats__HypoTestInverterOriginal.html,https://root.cern,https://root.cern/root/html602/RooStats__HypoTestInverterOriginal.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rtex]; static TClonesArray *fgTracks;; static TH1F *fgHist;; // ... list of methods; ClassDef(Event,1) //Event structure; };; 12.17.2 The EventHeader Class; The EventHeader class (also defined in Event.h) does not inherit from TObject. Beginning with ROOT 3.0, an object can be placed on a branch even though it does not inherit from TObject. In previous releases branches were restricted to objects inheriting from the TObject. However, it has always been possible to write a class not inheriting from TObject to a tree by encapsulating it in a TObject descending class as is the case in EventHeader and Event.; class EventHeader {; private:; Int_t fEvtNum;; Int_t fRun;; Int_t fDate;; // ... list of methods; ClassDef(EventHeader,1) //Event Header; };; 12.17.3 The Track Class; The Track class descends from TObject since tracks are in a TClonesArray (i.e. a ROOT collection class) and contains a selection of basic types and an array of vertices. Its TObject inheritance enables Track to be in a collection and in Event is a TClonesArray of Tracks.; class Track : public TObject {; private:; Float_t fPx; //X component of the momentum; Float_t fPy; //Y component of the momentum; Float_t fPz; //Z component of the momentum; Float_t fRandom; //A random track quantity; Float_t fMass2; //The mass square of this particle; Float_t fBx; //X intercept at the vertex; Float_t fBy; //Y intercept at the vertex; Float_t fMeanCharge; //Mean charge deposition of all hits; Float_t fXfirst; //X coordinate of the first point; Float_t fXlast; //X coordinate of the last point; Float_t fYfirst; //Y coordinate of the first point; Float_t fYlast; //Y coordinate of the last point; Float_t fZfirst; //Z coordinate of the first point; Float_t fZlast; //Z coordinate of the last point; Float_t fCharge; //Charge of this track; Float_t fVertex[3]; //Track vertex position; Int_t fNpoint; //Number of points for this track; Short_t fValid; //Validity criterion. // method definitions ...; ClassDef(Track,1) //A track",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:577489,inherit,inheritance,577489,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inheritance']
Modifiability,"rti);  ; void Progress (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses);  New version of Progress (just forward to the old version for the time being). ;  ; void ProgressLocal (Long64_t total, Long64_t processed);  Update progress bar and status labels. ;  ; void ResetProgressDialog (const char *selec, Int_t files, Long64_t first, Long64_t entries);  Reset progress frame information fields. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateButtons (TQueryDescription *desc);  Update buttons state for the current query status. ;  ; void UpdateHistos (TList *objs);  Update feedback histograms. ;  ; void UpdateInfos ();  Update query information (header) text view. ;  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () const override;  std::cout << fWi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionQueryFrame.html:2404,inherit,inherited,2404,doc/master/classTSessionQueryFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionQueryFrame.html,1,['inherit'],['inherited']
Modifiability,"rticalWinResizer * fLowerHR;  upper and lower vertical resizers ;  ; TGMdiCornerWinResizer * fLowerLeftCR;  upper left and lower left resizers ;  ; TGMdiCornerWinResizer * fLowerRightCR;  upper right and lower right resizers ;  ; TGMdiMainFrame * fMdiMainFrame;  MDI main frame. ;  ; Bool_t fMinimizedUserPlacement;  user placement flag ;  ; Int_t fMinimizedX;  ; Int_t fMinimizedY;  minimized position ;  ; Int_t fPreResizeHeight;  dimension before resizing ;  ; Int_t fPreResizeWidth;  ; Int_t fPreResizeX;  ; Int_t fPreResizeY;  position before resizing ;  ; TGMdiHorizontalWinResizer * fRightVR;  left and right horizontal resizers ;  ; TGMdiTitleBar * fTitlebar;  MDI window title bar. ;  ; TGMdiVerticalWinResizer * fUpperHR;  ; TGMdiCornerWinResizer * fUpperLeftCR;  ; TGMdiCornerWinResizer * fUpperRightCR;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiDecorFrame.html:28716,inherit,inherited,28716,doc/master/classTGMdiDecorFrame.html,https://root.cern,https://root.cern/doc/master/classTGMdiDecorFrame.html,2,['inherit'],['inherited']
Modifiability,"rticle database; TDatime Date and time 950130 124559; TDecayChannel Class describing a particle decay channel; TDecompBK Matrix Decomposition Bunch-Kaufman; TDecompBase Matrix Decomposition Base; TDecompChol Matrix Decompositition Cholesky; TDecompLU Matrix Decompositition LU; TDecompQRH Matrix Decompositition QRH; TDecompSVD Matrix Decompositition SVD; TDecompSparse Matrix Decompositition LU; TDialogCanvas A specialized canvas to set attributes.; TDiamond Diamond class; TDictionary ABC defining interface to dictionary; TDirectory Describe directory structure in memory; TDirectoryFile Describe directory structure in a ROOT file; TDocDirective THtml directive handler; TDocHtmlDirective Handler for ""Begin_Html""/""End_Html"" for raw HTML in documentation comments; TDocLatexDirective Handler for ""Begin_Latex""/""End_Latex"" to generate an image from latex; TDocMacroDirective Handler for ""Begin_Macro""/""End_Macro"" for code that is executed and that can generate an image for documentation; TDocOutput generates documentation web pages; TDocParser parser for reference documentation; TDrawFeedback Present PROOF query feedback; TELTU ELTU shape; TEditQueryFrame Edit query frame; TEllipse An ellipse; TEmulatedCollectionProxy ; TEmulatedMapProxy ; TEntryList A list of entries in a TTree; TEntryListBlock Used internally in TEntryList to store the entry numbers; TEntryListFromFile Manager for entry lists from different files; TEnv Handle ROOT configuration resources; TEnvRec Individual TEnv records; TEveArrow Class for gl visualisation of arrow.; TEveArrowEditor GUI editor for TEveArrow.; TEveArrowGL GL renderer class for TEveArrow.; TEveBoxSet Collection of 3D primitives (fixed-size boxes, boxes of different sizes, or arbitrary sexto-epipeds); each primitive can be assigned a signal value and a TRef.; TEveBoxSetGL GL-renderer for TEveBoxSet class.; TEveBrowser Specialization of TRootBrowser for Eve.; TEveCalo2D Class for visualization of projected calorimeter event data.; TEveCalo2DGL ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:53465,config,configuration,53465,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,1,['config'],['configuration']
Modifiability,"rties are divided between processes and threads.; 23.1.1 Process Properties; A process in a multi-threaded system is the changeable entity. It must be considered as an execution frame. It has all traditional process attributes, such as:. Process ID, process group ID, user ID, and group ID; Environment; Working directory. A process also provides a common address space and common system resources:. File descriptors; Signal actions; Shared libraries; Inter-process communication tools (such as message queues, pipes, semaphores, or shared memory). 23.1.2 Thread Properties; A thread is the schedulable entity. It has only those properties that are required to ensure its independent flow of control. These include the following properties:. Stack; Scheduling properties (such as policy or priority); Set of pending and blocked signals; Some thread-specific data (TSD). An example of thread-specific data is the error indicator, errno. In multi-threaded systems, errno is no longer a global variable, but usually a subroutine returning a thread-specific errno value. Some other systems may provide other implementations of errno. With respect to ROOT, a thread specific data is for example the gPad pointer, which is treated in a different way, whether it is accessed from any thread or the main thread.; Threads within a process must not be considered as a group of processes (even though in Linux each thread receives an own process id, so that it can be scheduled by the kernel scheduler). All threads share the same address space. This means that two pointers having the same value in two threads refer to the same data. Also, if any thread changes one of the shared system resources, all threads within the process are affected. For example, if a thread closes a file, the file is closed for all threads.; 23.1.3 The Initial Thread; When a process is created, one thread is automatically created. This thread is called the initial thread or the main thread. The initial thread executes the main r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1102489,variab,variable,1102489,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"rtionprivate:; boolfDisplaceOrigindisplace point before projection; Float_tfDistortiondistortion; Float_tfFixRradius from which scaling remains constant; Float_tfFixZz-coordinate from which scaling remains constant; TEveProjection::EGeoMode_efGeoModestrategy of polygon projection (what to try first); Float_tfMaxTrackStepmaximum distance between two points on a track; TStringfNamename; Float_tfPastFixRFacrelative scaling factor beyond fFixR as 10^x; Float_tfPastFixRScalerelative scaling beyond fFixR; Float_tfPastFixZFacrelative scaling factor beyond fFixZ as 10^x; Float_tfPastFixZScalerelative scaling beyond fFixZ; vector<TEveProjection::PreScaleEntry_t,allocator<TEveProjection::PreScaleEntry_t> >fPreScales[3]scaling before the distortion; Float_tfScaleRscale factor to keep projected radius at fFixR fixed; Float_tfScaleZscale factor to keep projected z-coordinate at fFixZ fixed; TEveProjection::EPType_efTypetype; Bool_tfUsePreScaleuse pre-scaling. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ProjectPointfv(Float_t* v, Float_t d); Project float array. void ProjectPointdv(Double_t* v, Float_t d); Project double array.; This is a bit piggish as we convert the doubles to floats and back. void ProjectVector(TEveVector& v, Float_t d); Project TEveVector. void ProjectPointfv(const TEveTrans* t, const Float_t* p, Float_t* v, Float_t d); Project float array, converting it to global coordinate system first if; transformation matrix is set. void ProjectPointdv(const TEveTrans* t, const Double_t* p, Double_t* v, Float_t d); Project double array, converting it to global coordinate system first if; transformation matrix is set.; This is a bit piggish as we convert the doubles to floats and back. void ProjectVector(const TEveTrans* t, TEveVector& v, Float_t d); Project TEveVector, converting it to global coordinate system first if; transformation matrix is set. void PreScaleVariable(Int_t dim, Float_t& v); Pre-scale single variable ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveProjection.html:4600,Inherit,Inheritance,4600,root/html532/TEveProjection.html,https://root.cern,https://root.cern/root/html532/TEveProjection.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtised integrals. ;  ; double coefficient (Int_t basisIndex) const override;  B0 : _tag = +1. ;  ; void generateEvent (Int_t code) override;  Generates mix-state dependent. ;  ; Int_t getCoefAnalyticalIntegral (Int_t coef, RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Default implementation of function advertising integration capabilities. ;  ; Int_t getGenerator (const RooArgSet &directVars, RooArgSet &generateVars, bool staticInitOK=true) const override;  Load generatedVars with the subset of directVars that we can generate events for, and return a code that specifies the generator algorithm we will use. ;  ; void initGenerator (Int_t code) override;  Interface for one-time initialization to setup the generator for the specified code. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsAnaConvPdf;  RooAbsAnaConvPdf ();  Default constructor, required for persistence. ;  ;  RooAbsAnaConvPdf (const char *name, const char *title, const RooResolutionModel &model, RooRealVar &convVar);  Constructor. ;  ;  RooAbsAnaConvPdf (const RooAbsAnaConvPdf &other, const char *name=nullptr);  ;  ~RooAbsAnaConvPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Return analytical integral defined by given code, which is returned by getAnalyticalIntegralWN() ;  ; virtual bool changeModel (const RooResolutionModel &newModel);  Change the current resolution model to newModel. ;  ; virtual RooFit::OwningPtr< RooArgSet > coefVars (Int_t coefIdx) const;  Return set of parameters with are used exclusively by the coefficient functions. ;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; RooAbsRealLV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBCPEffDecay.html:4047,inherit,inherited,4047,doc/master/classRooBCPEffDecay.html,https://root.cern,https://root.cern/doc/master/classRooBCPEffDecay.html,1,['inherit'],['inherited']
Modifiability,"rts them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fValues.size(); }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total number of free parameters. { return fObjFunc->NDim(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int , unsigned int ) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. { return 0; }. const ROOT::Math::IMultiGradFunction * ObjFunction() const; method of only GSL minimizer (not inherited from interface); return pointer to used objective gradient function. { return fObjFunc; }. » Author: L. Moneta Wed Oct 18 11:48:00 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLMinimizer.h 31604 2009-12-07 19:04:33Z moneta $ » Last generated: 2009-12-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__GSLMinimizer.html:8080,variab,variable,8080,root/html526/ROOT__Math__GSLMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__GSLMinimizer.html,3,"['inherit', 'variab']","['inherited', 'variable', 'variables']"
Modifiability,"rts them ). bool SetVariableValue(unsigned int ivar, double val); set variable. bool SetVariableValues(const double* val); set variable values. bool SetVariableStepSize(unsigned int ivar, double step); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variable. bool SetVariableUpperLimit(unsigned int ivar, double upper); set the upper-limit of an already existing variable. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an already existing variable. bool FixVariable(unsigned int ivar); fix an existing variable. bool ReleaseVariable(unsigned int ivar); release an existing variable. bool IsFixedVariable(unsigned int ivar) const; query if an existing variable is fixed (i.e. considered constant in the minimization); note that by default all variables are not fixed. bool GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings& varObj) const; get variable settings in a variable object (like ROOT::Fit::ParamsSettings). std::string VariableName(unsigned int ivar) const; get name of variables (override if minimizer support storing of variable names). int VariableIndex(const string& name) const; get index of variable given a variable given a name; return -1 if variable is not found. bool Minimize(). method to perform the minimization.; Return false in case the minimization did not converge. In this case a; status code different than zero is set; (retrieved by the derived method Minimizer::Status() )"" . status = 1 : Covariance was made pos defined; status = 2 : Hesse is invalid; status = 3 : Edm is above max; status = 4 : Reached call limit; status = 5 : Any other failure. double MinValue() const; return minimum function value. { return fState.Fval(); }. double Edm() const; return expected distance reached from the minimum. { return fState.Edm(); }. const double * X() const; return pointer to X values at the minimum. cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html:8294,variab,variable,8294,root/html534/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html,4,['variab'],['variable']
Modifiability,"rts them ). bool SetVariableValue(unsigned int ivar, double val); set variable. bool SetVariableValues(const double* val); set variable values. bool SetVariableStepSize(unsigned int ivar, double step); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variable. bool SetVariableUpperLimit(unsigned int ivar, double upper); set the upper-limit of an already existing variable. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an already existing variable. bool FixVariable(unsigned int ivar); fix an existing variable. bool ReleaseVariable(unsigned int ivar); release an existing variable. bool IsFixedVariable(unsigned int ivar) const; query if an existing variable is fixed (i.e. considered constant in the minimization); note that by default all variables are not fixed. bool GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings& varObj) const; get variable settings in a variable object (like ROOT::Fit::ParamsSettings). std::string VariableName(unsigned int ivar) const; get name of variables (override if minimizer support storing of variable names). int VariableIndex(const string& name) const; get index of variable given a variable given a name; return -1 if variable is not found. bool Minimize(). method to perform the minimization.; Return false in case the minimization did not converge. In this case a; status code different than zero is set; (retrieved by the derived method Minimizer::Status() )"". status = 1 : Covariance was made pos defined; status = 2 : Hesse is invalid; status = 3 : Edm is above max; status = 4 : Reached call limit; status = 5 : Any other failure. double MinValue() const; return minimum function value. { return fState.Fval(); }. double Edm() const; return expected distance reached from the minimum. { return fState.Edm(); }. const double * X() const; return pointer to X values at the minimum. const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__Minuit2Minimizer.html:8349,variab,variable,8349,root/html602/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__Minuit2Minimizer.html,8,['variab'],['variable']
Modifiability,"rtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBufferText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CompactFloatString (char *buf, unsigned len);  method compress float string, excluding exp and/or move float point ;  ; static const char * ConvertDouble (Double_t v, char *buf, unsigned len, Bool_t not_optimize=kFALSE);  convert float to string with configured format ;  ; static const char * ConvertFloat (Float_t v, char *buf, unsigned len, Bool_t not_optimize=kFALSE);  convert float to string with configured format ;  ; static const char * DeclFileName ();  ; static const char * GetDoubleFormat ();  return current printf format for double members, default ""%.14e"" ;  ; static const char * GetFloatFormat ();  return current printf format for float members, default ""%e"" ;  ; static void SetDoubleFormat (const char *fmt=""%.14e"");  set printf format for double members, default ""%.14e"" use it after SetFloatFormat, which also overwrites format for doubles ;  ; static void SetFloatFormat (const char *fmt=""%e"");  set printf format for float/double members, default ""%e"" to change format only for doubles, use SetDoubleFormat ;  ;  Static Public Member Functions inherited from TBufferIO; s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferSQL2.html:33801,inherit,inherited,33801,doc/master/classTBufferSQL2.html,https://root.cern,https://root.cern/doc/master/classTBufferSQL2.html,3,"['config', 'inherit']","['configured', 'inherited']"
Modifiability,"rtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Double_t fMBRate;  ; Long64_t fSize;  ; Float_t fStart;  ; Float_t fStop;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TPackInfo.html:9161,inherit,inherited,9161,doc/master/classTProofPerfAnalysis_1_1TPackInfo.html,https://root.cern,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TPackInfo.html,1,['inherit'],['inherited']
Modifiability,"rtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDataSetManager; static Bool_t CheckDataSetSrvMaps (TUrl *furl, TString &fn, TList *srvmaplist=0);  Check if the dataset server mappings apply to the url defined by 'furl'. ;  ; static Bool_t CheckStagedStatus (TFileInfo *fileInfo, Int_t fopt, Int_t maxfiles, Int_t newstagedfiles, TFileStager *stager, Bool_t createStager, Bool_t dbg, Bool_t &changed, Bool_t &touched, Bool_t &disappeared);  Check stage status of the file described by ""fileInfo"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TString CreateUri (const char *dsGroup=0, const char *dsUser=0, const char *dsName=0, const char *dsTree=0);  Creates URI for the dataset manger in the form '[[/dsGroup/]dsUser/]dsName[#dsObjPath]', The optional dsObjPath can be in the form [subdir/]objname]'. ;  ; static const char * DeclFileName ();  ; static Int_t FillMetaData (TFileInfo *fi, TDirectory *d, const char *rdir=""/"");  Naviga",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDataSetManagerFile.html:12201,inherit,inherited,12201,doc/master/classTDataSetManagerFile.html,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html,1,['inherit'],['inherited']
Modifiability,"rtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html:7415,inherit,inheritance,7415,doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html,6,['inherit'],['inheritance']
Modifiability,"rtual . Compute addition of PDFs in batches. ; Reimplemented from RooAbsReal.; Definition at line 555 of file RooAddPdf.cxx. ◆ evaluate(). double RooAddPdf::evaluate ; (; ); const. inlineoverrideprotectedvirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 121 of file RooAddPdf.h. ◆ expectedEvents(). double RooAddPdf::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return expected number of events for extended likelihood calculation, which is the sum of all coefficients. ; Return the number of expected events, which is either the sum of all coefficients or the sum of the components extended terms, multiplied with the fraction that is in the current range w.r.t the reference range. ; Reimplemented from RooAbsPdf.; Definition at line 756 of file RooAddPdf.cxx. ◆ extendMode(). ExtendMode RooAddPdf::extendMode ; (; ); const. inlineoverridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Definition at line 60 of file RooAddPdf.h. ◆ finalizeConstruction(). void RooAddPdf::finalizeConstruction ; (; ). private . Definition at line 111 of file RooAddPdf.cxx. ◆ fixCoefNormalization(). void RooAddPdf::fixCoefNormalization ; (; const RooArgSet & ; refCoefNorm). By default the interpretation of the fraction coefficients is performed in the contextual choice of observables. ; This makes the shape of the p.d.f explicitly dependent on the choice of observables. This method instructs RooAddPdf to freeze the interpretation of the coefficients to be done in the given set of observables. If frozen, fractions are automatically transformed from the reference normalization set to the contextual normalization set by ratios of integrals. ; Definition at line 319 of file RooAddPdf.cxx. ◆ fixCoefRange(). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:85470,extend,extended,85470,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,2,['extend'],['extended']
Modifiability,"rtual . Get the numeric value (floating point representation). ; Definition at line 1277 of file TGNumberEntry.cxx. ◆ GetNumLimits(). virtual ELimit TGNumberEntryField::GetNumLimits ; (; ); const. inlinevirtual . Get the numerical limit attribute. ; Definition at line 122 of file TGNumberEntry.h. ◆ GetNumMax(). virtual Double_t TGNumberEntryField::GetNumMax ; (; ); const. inlinevirtual . Get the upper limit. ; Definition at line 128 of file TGNumberEntry.h. ◆ GetNumMin(). virtual Double_t TGNumberEntryField::GetNumMin ; (; ); const. inlinevirtual . Get the lower limit. ; Definition at line 125 of file TGNumberEntry.h. ◆ GetNumStyle(). virtual EStyle TGNumberEntryField::GetNumStyle ; (; ); const. inlinevirtual . Get the numerical style. ; Definition at line 116 of file TGNumberEntry.h. ◆ GetTime(). void TGNumberEntryField::GetTime ; (; Int_t & ; hour, . Int_t & ; min, . Int_t & ; sec . ); const. virtual . Get the numeric value (time format). ; In case of kNESMinSecCent, the first variable (hour) will store instead the centiseconds. ; Definition at line 1330 of file TGNumberEntry.cxx. ◆ HandleFocusChange(). Bool_t TGNumberEntryField::HandleFocusChange ; (; Event_t * ; event). overridevirtual . Handle focus change. ; Reimplemented from TGFrame.; Definition at line 1754 of file TGNumberEntry.cxx. ◆ HandleKey(). Bool_t TGNumberEntryField::HandleKey ; (; Event_t * ; event). overridevirtual . Handle keys. ; Reimplemented from TGFrame.; Definition at line 1670 of file TGNumberEntry.cxx. ◆ IncreaseNumber(). void TGNumberEntryField::IncreaseNumber ; (; EStepSize ; step = kNSSSmall, . Int_t ; sign = 1, . Bool_t ; logstep = kFALSE . ). virtual . Increase the number value. ; Definition at line 1423 of file TGNumberEntry.cxx. ◆ InvalidInput(). virtual void TGNumberEntryField::InvalidInput ; (; const char * ; instr). inlinevirtual . Definition at line 139 of file TGNumberEntry.h. ◆ IsA(). TClass * TGNumberEntryField::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntryField.html:45876,variab,variable,45876,doc/master/classTGNumberEntryField.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntryField.html,1,['variab'],['variable']
Modifiability,"rtual . ReturnsTClass describing current object ; Reimplemented from TApplication.; Definition at line 67 of file TRint.h. ◆ operator=(). TRint & TRint::operator= ; (; const TRint & ; ). privatedelete . ◆ PrintLogo(). void TRint::PrintLogo ; (; Bool_t ; lite = kFALSE). virtual . Print the ROOT logo on standard output. ; Definition at line 512 of file TRint.cxx. ◆ ProcessLineNr(). Longptr_t TRint::ProcessLineNr ; (; const char * ; filestem, . const char * ; line, . Int_t * ; error = nullptr . ). private . Calls TRint::ProcessLine() possibly prepending a #line directive for better diagnostics. ; The user is responsible for incrementing fNcmd, where appropriate, after a call to this function. ; Definition at line 791 of file TRint.cxx. ◆ ProcessRemote(). Longptr_t TRint::ProcessRemote ; (; const char * ; line, . Int_t * ; error = nullptr . ). overrideprivatevirtual . Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ; The username can be specified in two ways, ""-l"" having the priority (as in ssh). A 'dbg' value > 0 gives increasing verbosity. The last argument 'script' allows to specify an alternative script to be executed remotely to startup the session. ; Reimplemented from TApplication.; Definition at line 768 of file TRint.cxx. ◆ Run(). void TRint::Run ; (; Bool_t ; retrn = kFALSE). overridevirtual . Main application eventloop. ; First process files given on the command line and then go into the main application event loop, unless the -q command line option was specified in which case the program terminates. When return is true this method returns even when -q was specified.; When QuitOpt is true and return is false, terminate the application with an error code equal to either the ProcessLine error (if any) or the return value of the command casted to a long. ; Reimplemented from TApplication.; Definition at line 384",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRint.html:25888,variab,variable,25888,doc/master/classTRint.html,https://root.cern,https://root.cern/doc/master/classTRint.html,1,['variab'],['variable']
Modifiability,"rtual . Sort buffers to be prefetched in increasing order of positions. ; Merge consecutive blocks if necessary. ; Definition at line 630 of file TFileCacheRead.cxx. ◆ SetBufferSize(). Int_t TFileCacheRead::SetBufferSize ; (; Long64_t ; buffersize). virtual . Sets the buffer size. ; If the current prefetch list is too large to fit in the new buffer some or all of the prefetch blocks are dropped. The requested buffersize must be greater than zero. It will be automatically clamped to minimum 100000 (if <= 10000) and maximum INT_MAX Return values:; 0 if the prefetch block lists remain unchanged; 1 if some or all blocks have been removed from the prefetch list; -1 on error . Reimplemented in TTreeCache, and TTreeCacheUnzip.; Definition at line 711 of file TFileCacheRead.cxx. ◆ SetEnablePrefetching(). void TFileCacheRead::SetEnablePrefetching ; (; Bool_t ; setPrefetching = kFALSE). virtual . Set the prefetching mode of this file. ; If 'setPrefetching', enable the asynchronous prefetching (using TFilePrefetch) and if the gEnv and rootrc variable Cache.Directory is set, also enable the local caching of the prefetched blocks. if 'setPrefetching', the old prefetcher is enabled is the gEnv and rootrc variable is TFile.AsyncReading ; Definition at line 774 of file TFileCacheRead.cxx. ◆ SetEnablePrefetchingImpl(). void TFileCacheRead::SetEnablePrefetchingImpl ; (; Bool_t ; setPrefetching = kFALSE). protected . TFileCacheRead implementation of SetEnablePrefetching. ; This function is called from the constructor and should not be virtual. ; Definition at line 784 of file TFileCacheRead.cxx. ◆ SetFile(). void TFileCacheRead::SetFile ; (; TFile * ; file, . TFile::ECacheAction ; action = TFile::kDisconnect . ). virtual . Set the file using this cache and reset the current blocks (if any). ; Reimplemented in TTreeCache.; Definition at line 545 of file TFileCacheRead.cxx. ◆ SetSkipZip(). virtual void TFileCacheRead::SetSkipZip ; (; Bool_t ; = kTRUE). inlinevirtual . Definition at line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileCacheRead.html:24133,variab,variable,24133,doc/master/classTFileCacheRead.html,https://root.cern,https://root.cern/doc/master/classTFileCacheRead.html,1,['variab'],['variable']
Modifiability,"rtual . The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ; So by default, when doing .L MyScript.cxx, ACLiC will look for a file name MyScript_linkdef and having one of the .h (.hpp, etc.) extensions. If such a file exist, it will be added to the end of the linkdef file used to created the ACLiC dictionary. This effectively enable the full customization of the creation of the dictionary. It should be noted that the file is intended as a linkdef fragment, so usually you would not list the typical: #pragma link off .... Definition at line 4227 of file TSystem.cxx. ◆ SetLinkedLibs(). void TSystem::SetLinkedLibs ; (; const char * ; linkedLibs). virtual . LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ; It is used to expand $LinkedLibs in the directives given to SetMakeSharedLib() and SetMakeExe() The default value on Unix is: root-config --glibs ; Definition at line 4205 of file TSystem.cxx. ◆ SetMakeExe(). void TSystem::SetMakeExe ; (; const char * ; directives). virtual . Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ; This creation is used as a means to output a list of unresolved symbols, when loading a shared library has failed. The required variable is $ExeName rather than $SharedLib, e.g.: gSystem->SetMakeExe(; ""g++ -Wall -fPIC $IncludePath $SourceFiles; -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; TSystem::SetMakeExevirtual void SetMakeExe(const char *directives)Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executabl...Definition TSystem.cxx:4093. Definition at line 4093 of file TSystem.cxx. ◆ SetMakeSharedLib(). void TSystem::SetMakeSharedLib ; (; const char * ; directives). virtual . Directives should contain the description on how to com",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem.html:87414,config,config,87414,doc/master/classTSystem.html,https://root.cern,https://root.cern/doc/master/classTSystem.html,1,['config'],['config']
Modifiability,"rtual Bool_tTGContainer::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGContainer::HandleKey(Event_t* event); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGContainer::Home(Bool_t select = kFALSE); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInsertEntry(TGLBEntry* lbe, TGLayoutHints* lhints, Int_t afterID); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual voidTGContainer::InvertSelection()SIGNAL ; virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::Is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLBContainer.html:11345,Inherit,InheritsFrom,11345,root/html532/TGLBContainer.html,https://root.cern,https://root.cern/root/html532/TGLBContainer.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rtual Bool_tTGContainer::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGContainer::HandleKey(Event_t* event); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGContainer::Home(Bool_t select = kFALSE); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual voidTGContainer::InvertSelection()SIGNAL ; virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTVLVContainer.html:11022,Inherit,InheritsFrom,11022,root/html532/TTVLVContainer.html,https://root.cern,https://root.cern/root/html532/TTVLVContainer.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rtual Double_tGetLongitude(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TSeqCollection*GetOutline(); virtual Double_tGetPsi(); virtual voidGetRange(Float_t* min, Float_t* max); virtual voidGetRange(Double_t* min, Double_t* max); virtual Double_t*GetRmax(); virtual Double_t*GetRmin(); virtual Int_tGetSystem(); virtual Double_t*GetTback(); virtual const char*TObject::GetTitle() const; virtual Double_t*GetTN(); virtual Double_t*GetTnorm(); virtual UInt_tTObject::GetUniqueID() const; virtual voidGetWindow(Double_t& u0, Double_t& v0, Double_t& du, Double_t& dv) const; virtual Double_tGetWindowHeight() const; virtual Double_tGetWindowWidth() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsClippedNDC(Double_t* p) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsPerspective() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsViewChanged() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual voidMoveFocus(Double_t* center, Double_t dx, Double_t dy, Double_t dz, Int_t nsteps = 10, Double_t dlong = 0, Double_t dlat = 0, Double_t dpsi = 0); virtual voidMoveViewCommand(Char_t chCode, Int_t count = 1); virtual voidMoveWindow(Char_t option); virtual voidNDCtoWC(const Float_t* pn, Float_t* pw); virtual voidNDCtoWC(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TView.html:4529,Inherit,InheritsFrom,4529,root/html532/TView.html,https://root.cern,https://root.cern/root/html532/TView.html,8,['Inherit'],['InheritsFrom']
Modifiability,"rtual Double_tGetParError(Int_t ipar) const; virtual const char*GetParName(Int_t ipar) const; static Double_tTVirtualFitter::GetPrecision(); virtual Int_tGetStats(Double_t& amin, Double_t& edm, Double_t& errdef, Int_t& nvpar, Int_t& nparx) const; virtual Double_tGetSumLog(Int_t i); TFitResult*GetTFitResult() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual TObject*TVirtualFitter::GetUserFunc() const; virtual Int_tTVirtualFitter::GetXfirst() const; virtual Int_tTVirtualFitter::GetXlast() const; virtual Int_tTVirtualFitter::GetYfirst() const; virtual Int_tTVirtualFitter::GetYlast() const; virtual Int_tTVirtualFitter::GetZfirst() const; virtual Int_tTVirtualFitter::GetZlast() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFixed(Int_t ipar) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBackCompFitter.html:5711,Inherit,InheritsFrom,5711,root/html532/TBackCompFitter.html,https://root.cern,https://root.cern/root/html532/TBackCompFitter.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual Double_tGetParError(Int_t ipar) const; virtual const char*GetParName(Int_t ipar) const; static Double_tTVirtualFitter::GetPrecision(); virtual Int_tGetStats(Double_t& amin, Double_t& edm, Double_t& errdef, Int_t& nvpar, Int_t& nparx) const; virtual Double_tGetSumLog(Int_t i); TFitResult*GetTFitResult() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual TObject*TVirtualFitter::GetUserFunc() const; virtual Int_tTVirtualFitter::GetXfirst() const; virtual Int_tTVirtualFitter::GetXlast() const; virtual Int_tTVirtualFitter::GetYfirst() const; virtual Int_tTVirtualFitter::GetYlast() const; virtual Int_tTVirtualFitter::GetZfirst() const; virtual Int_tTVirtualFitter::GetZlast() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFixed(Int_t ipar) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TBackCompFit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBackCompFitter.html:5624,Inherit,InheritsFrom,5624,root/html602/TBackCompFitter.html,https://root.cern,https://root.cern/root/html602/TBackCompFitter.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual Double_tGetTrainingEfficiency(const TString&); const TMVA::Event*GetTrainingEvent(Long64_t ievt) const; UInt_tGetTrainingROOTVersionCode() const; TStringGetTrainingROOTVersionString() const; UInt_tGetTrainingTMVAVersionCode() const; TStringGetTrainingTMVAVersionString() const; Double_tGetTrainTime() const; TMVA::TransformationHandler&GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; TStringGetWeightFileName() const; Double_tGetXmax(Int_t ivar) const; Double_tGetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTMVA::IMethod::HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual ULong_tTObject::Hash() const; Bool_tHasMVAPdfs() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSignalLike(); virtual Bool_tIsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TDirectory*MethodBaseDir() const; virtual Bool_tMonitorBoost(TMVA::MethodBoost*); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodBase.html:7769,Inherit,InheritsFrom,7769,root/html532/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodBase.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual Double_tGetTrainingEfficiency(const TString&); const TMVA::Event*GetTrainingEvent(Long64_t ievt) const; UInt_tGetTrainingROOTVersionCode() const; TStringGetTrainingROOTVersionString() const; UInt_tGetTrainingTMVAVersionCode() const; TStringGetTrainingTMVAVersionString() const; Double_tGetTrainTime() const; TMVA::TransformationHandler&GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; TStringGetWeightFileName() const; Double_tGetXmax(Int_t ivar) const; Double_tGetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTMVA::IMethod::HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual ULong_tTObject::Hash() const; Bool_tHasMVAPdfs() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSignalLike(); virtual Bool_tIsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TDirectory*MethodBaseDir() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBase.html:7959,Inherit,InheritsFrom,7959,root/html534/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBase.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual Double_tRooAbsPdf::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; Int_tRooAbsPdf::intOrderNormValueCaching() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tisBinnedDistribution(const RooArgSet& obs) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealSumPdf.html:19352,Inherit,InheritsFrom,19352,root/html532/RooRealSumPdf.html,https://root.cern,https://root.cern/root/html532/RooRealSumPdf.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual Double_tRooAbsPdf::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidinitGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; Int_tRooAbsPdf::intOrderNormValueCaching() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMultiVarGaussian.html:19307,Inherit,InheritsFrom,19307,root/html532/RooMultiVarGaussian.html,https://root.cern,https://root.cern/root/html532/RooMultiVarGaussian.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual Double_tTGraph::GetMean(Int_t axis = 1) const; Double_tTGraph::GetMinimum() const; Int_tTGraph::GetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTGraph::GetPoint(Int_t i, Double_t& x, Double_t& y) const; virtual Double_tTGraph::GetRMS(Int_t axis = 1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*TGraph::GetX() const; TAxis*TGraph::GetXaxis() const; Double_tGetXq1() const; Double_tGetXq2() const; Double_t*TGraph::GetY() const; TAxis*TGraph::GetYaxis() const; Double_tGetYq1() const; Double_tGetYq2() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGraph::InitExpo(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitGaus(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitPolynom(Double_t xmin = 0, Double_t xmax = 0); virtual Int_tTGraph::InsertPoint()MENU ; virtual voidTObject::Inspect() constMENU ; virtual Double_tTGraph::Integral(Int_t first = 0, Int_t last = -1) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGraph::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTGraph::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTGraph::LeastSquareFit(Int_t m, Double_t* a, Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::LeastSquareLinearFit(Int_t n, Double_t& a0, Double_t& a1, Int_t& ifai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphQQ.html:8773,Inherit,InheritsFrom,8773,root/html532/TGraphQQ.html,https://root.cern,https://root.cern/root/html532/TGraphQQ.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rtual Int_tSize() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t Add(Float_t x, Float_t y, Float_t z); Add one 3D point defined by x,y,z to the array of the points; as its last element. Int_t AddLast(Float_t x, Float_t y, Float_t z); Add one 3D point defined by x,y,z to the array of the points; as its last element. Int_t DistancetoLine(Int_t px, Int_t py, Float_t x1, Float_t y1, Float_t x2, Float_t y2, Int_t lineWidth = 1); Compute distance from point px,py to an axis of the band defined.; by pair points (x1,y1),(x2,y2) where lineWidth is the width of the band. Compute the closest distance of approach from point px,py to this line.; The distance is computed in pixels units. Algorithm:. A(x1,y1) P B(x2,y2). I; I; I; I; M(x,y). Let us call a = distance AM a2=a**2; b = distance BM b2=b**2; c = distance AB c2=c**2; d = distance PM d2=d**2; u = distance AP u2=u**2; v = distance BP v2=v**2 c = u + v. d2 = a2 - u2; d2 = b2 - v2 = b2 -(c-u)**2; ==> u = (a2 -b2 +c2)/2c. Float_t x1 = gPad->XtoAbsPixel(x",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPoints3DABC.html:6148,Inherit,Inheritance,6148,root/html532/TPoints3DABC.html,https://root.cern,https://root.cern/root/html532/TPoints3DABC.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual Int_tTLeaf::GetLenType() const; virtual Int_tGetMaximum() const; TMethodCall*GetMethodCall(const char* name); virtual Int_tTLeaf::GetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Double_tGetValueSubArray(Int_t i = 0, Int_t j = 0) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTLeaf::Import(TClonesArray*, Int_t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLeafElement.html:3341,Inherit,InheritsFrom,3341,root/html532/TLeafElement.html,https://root.cern,https://root.cern/root/html532/TLeafElement.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual Int_tTLeaf::GetMaximum() const; TMethodCall*GetMethodCall(const char* name); virtual Int_tTLeaf::GetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; TObject*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tTLeaf::GetValue(Int_t i = 0) const; virtual Long64_tTLeaf::GetValueLong64(Int_t i = 0) const; virtual LongDouble_tTLeaf::GetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTLeaf::Import(TClonesArray*, Int_t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tIsVirtual() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLeafObject.html:3334,Inherit,InheritsFrom,3334,root/html534/TLeafObject.html,https://root.cern,https://root.cern/root/html534/TLeafObject.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual Int_tTLeaf::GetMaximum() const; TMethodCall*GetMethodCall(const char* name); virtual Int_tTLeaf::GetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; TObject*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tTLeaf::GetValue(Int_t i = 0) const; virtual Long64_tTLeaf::GetValueLong64(Int_t i = 0) const; virtual LongDouble_tTLeaf::GetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTLeaf::Import(TClonesArray*, Int_t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tIsVirtual() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLeafObject.html:3220,Inherit,InheritsFrom,3220,root/html602/TLeafObject.html,https://root.cern,https://root.cern/root/html602/TLeafObject.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum ENodeType { kMaster; kSubMaster; kWorker; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfConfigConfiguration file name [for submasters]; TStringfIdId number; TStringfImageFile system image; TStringfMsdMsd value [for submasters]; TStringfNodeNameName of the node; TProofNodeInfo::ENodeTypefNodeTypeDistinction between master, submaster and worker; TStringfOrdinalWorker ordinal number; Int_tfPerfIndexPerformance index; Int_tfPortPort number; TStringfWorkDirWorking directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofNodeInfo(); Constructor. TProofNodeInfo(const char* str); Constructor from a string containing all the information in a serialized; way. Used to decode thr information coming from the coordinator; <type>|<host@user>|<port>|<ord>|<id>|<perfidx>|<img>|<workdir>|<msd>|<cfg>. TProofNodeInfo(const TProofNodeInfo& nodeInfo); Copy constructor. void Assign(const TProofNodeInfo& n); Asssign content of node n to this node. void Print(Option_t* ) const; Print the TProofNodeInfo structure. ~TProofNodeInfo(); { }. ENodeType GetNodeType() const; { return fNodeType; }. const TString & GetNodeName() const; { return fNodeName; }. const TString & GetWorkDir() const; { return fWorkDir; }. const TString & GetOrdinal() const; { return fOrdinal; }. const TString & GetImage() const; { return fImage; }. const TString & GetId() const; { return fId; }. const TString & GetConfig() const; { return fConfig; }. const TString & GetMsd() const; { return fMsd; }",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofNodeInfo.html:6165,Inherit,Inheritance,6165,root/html532/TProofNodeInfo.html,https://root.cern,https://root.cern/root/html532/TProofNodeInfo.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tfAatomic mass (g/mole); Int_tfNnumber of nucleons; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; Int_tfZatomic number. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoIsotope(); Dummy I/O constructor. TGeoIsotope(const char* name, Int_t z, Int_t n, Double_t a); Constructor. TGeoIsotope * FindIsotope(const char* name); Find existing isotope by name. void Print(Option_t* option = """") const; Print this isotope. TGeoElement & operator=(const TGeoIsotope& ). TGeoIsotope(). virtual ~TGeoIsotope(); {}. Int_t GetZ() const; {return fZ;}. Int_t GetN() const; {return fN;}. Double_t GetA() const; {return fA;}. » Author: Andrei Gheata 17/06/04 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id$ » Last generated: 2015-06-02 16:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGeoIsotope.html:6383,Inherit,Inheritance,6383,root/html604/TGeoIsotope.html,https://root.cern,https://root.cern/root/html604/TGeoIsotope.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tfAatomic mass (g/mole); Int_tfNnumber of nucleons; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; Int_tfZatomic number. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoIsotope(); Dummy I/O constructor. TGeoIsotope(const char* name, Int_t z, Int_t n, Double_t a); Constructor. TGeoIsotope * FindIsotope(const char* name); Find existing isotope by name. void Print(Option_t* option = """") const; Print this isotope. TGeoElement & operator=(const TGeoIsotope& ). TGeoIsotope(). virtual ~TGeoIsotope(); {}. Int_t GetZ() const; {return fZ;}. Int_t GetN() const; {return fN;}. Double_t GetA() const; {return fA;}. » Author: Andrei Gheata 17/06/04 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id$ » Last generated: 2015-06-30 15:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoIsotope.html:6383,Inherit,Inheritance,6383,root/html602/TGeoIsotope.html,https://root.cern,https://root.cern/root/html602/TGeoIsotope.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EStatusBits { kFileNotOpen; kFileCorrupted; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Long64_tfBytesRead; Double_tfCPUTime; Long64_tfEntries; Long64_tfLastEntriesLast chunck; Double_tfLastProcTimethe wallclock time of the last addition; Double_tfLastUpdateTimestamp of last change; Double_tfLearnTimethe time spent in learning phase; Double_tfProcTimethe wallclock time; Long64_tfReadCalls. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressStatus(Long64_t fEntries = 0, Long64_t fBytesRead = 0, Long64_t fReadCalls = 0, Double_t fProcTime = 0, Double_t fCPUTime = 0); Main and default constructor. TProofProgressStatus& operator+=(const TProofProgressStatus& st); '+=' operator. TProofProgressStatus& operator-=(const TProofProgressStatus& st); '-=' operator. TProofProgressStatus operator-(TProofProgressStatus& st); '-' operator. void Print(Option_t* option = """") const; Dump the content. void SetLastUpdate(Double_t updtTime = 0); Update time stamp either with the passed value (if > 0) or with; the current time. Double_t GetCurrentRate() const; Get current rate. Rteunr the average rate if the current is not defined. TProofProgressStatus(Long64_t fEntries = 0, Long64_t fBytesRead = 0, Long64_t fReadCalls = 0, Double_t fProcTime = 0, Double_t fCPUTime = 0). Long64_t GetEntries() const; { return fEntries; }. Long64_t GetBytesRead() const; { return fBytesRead; }. Long",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofProgressStatus.html:6683,Inherit,Inheritance,6683,root/html532/TProofProgressStatus.html,https://root.cern,https://root.cern/root/html532/TProofProgressStatus.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TProofMonSender::EConfigBits { kSendSummary; kSendDataSetInfo; kSendFileInfo; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTProofMonSender::fDataSetInfoVrsVersion of the dataset info 'table'; Int_tTProofMonSender::fFileInfoVrsVersion of the file info 'table'; TStringTNamed::fNameobject identifier; Int_tTProofMonSender::fSummaryVrsVersion of the summary 'table'; TStringTNamed::fTitleobject title. private:. TStringfDSetSendOptsOpts for posting dataset table; TStringfFilesSendOptsOpts for posting files table; TVirtualMonitoringWriter*fWriterWriter instance connect to backend. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofMonSenderSQL(const char* serv, const char* user, const char* pass, const char* table = ""proof.proofquerylog"", const char* dstab = 0, const char* filestab = 0). Int_t SendSummary(TList* , const char* ); Summary record. Int_t SendDataSetInfo(TDSet* , TList* , const char* , const char* ); Information about the dataset(s) processed. Int_t SendFileInfo(TDSet* , TList* , const char* , const char* ); Detailed information about files. » Author: G.Ganis July 2011 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofMonSenderSQL.html:6464,Inherit,Inheritance,6464,root/html534/TProofMonSenderSQL.html,https://root.cern,https://root.cern/root/html534/TProofMonSenderSQL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual Int_tfill(); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidforceCacheUpdate(); virtual const RooArgSet*get(Int_t index) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_thasFilledCache() const; virtual ULong_tTNamed::Hash() const; RooCategory*index(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisWeighted() const; Bool_tTObject::IsZombie() const; virtual voidloadValues(const RooAbsDataStore* tds, const RooFormulaVar* select = 0, const char* rangeName = 0, Int_t nStart = 0, Int_t nStop = 2000000000); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual RooAbsDataStore*merge(const RooArgSet& allvars, list<RooAbsDataStore*> dstoreList); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); virtual Int_tnumEntries() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCompositeDataStore.html:4041,Inherit,InheritsFrom,4041,root/html534/RooCompositeDataStore.html,https://root.cern,https://root.cern/root/html534/RooCompositeDataStore.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual Int_tfill(); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidforceCacheUpdate(); virtual const RooArgSet*get(Int_t index) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_thasFilledCache() const; virtual ULong_tTNamed::Hash() const; RooCategory*index(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisWeighted() const; Bool_tTObject::IsZombie() const; virtual voidloadValues(const RooAbsDataStore* tds, const RooFormulaVar* select = 0, const char* rangeName = 0, Int_t nStart = 0, Int_t nStop = 2000000000); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual RooAbsDataStore*merge(const RooArgSet& allvars, list<RooAbsDataStore*> dstoreList); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); virtual Int_tnumEntries() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCompositeDataStore.html:3674,Inherit,InheritsFrom,3674,root/html602/RooCompositeDataStore.html,https://root.cern,https://root.cern/root/html602/RooCompositeDataStore.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Float_t fX;  ; Float_t fY;  ; Float_t fZ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tree/JetEvent.h>. Inheritance diagram for Hit:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ Hit(). Hit::Hit ; (; ). inline . De",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classHit.html:8753,inherit,inherited,8753,doc/master/classHit.html,https://root.cern,https://root.cern/doc/master/classHit.html,1,['inherit'],['inherited']
Modifiability,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; DataMemberInfo_t * fInfo;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGlobal.html:11527,inherit,inherited,11527,doc/master/classTGlobal.html,https://root.cern,https://root.cern/doc/master/classTGlobal.html,2,['inherit'],['inherited']
Modifiability,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TMethodArg (const TMethodArg &)=delete;  ; TMethodArg & operator= (const TMethodArg &)=delete;  . Private Attributes; TDataMember * fDataMember;  ; MethodArgInfo_t * fInfo;  ; TFunction * fMethod;  . Friends; class TMethod;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsing",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMethodArg.html:11642,inherit,inherited,11642,doc/master/classTMethodArg.html,https://root.cern,https://root.cern/doc/master/classTMethodArg.html,2,['inherit'],['inherited']
Modifiability,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; using AtomicInt_t = std::atomic< Int_t >;  . Private Member Functions;  TBaseClass (const TBaseClass &)=delete;  ; TBaseClass & operator= (const TBaseClass &)=delete;  . Private Attributes; TClass * fClass;  ; TClassRef fClassPtr;  pointer to CINT base class info ;  ; AtomicInt_t fDelta;  pointer to parent class ;  ; BaseClassInfo_t * fInfo;  ; AtomicInt_t fProperty;  ; Int_t fSTLType;  . Additional ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBaseClass.html:11231,inherit,inherited,11231,doc/master/classTBaseClass.html,https://root.cern,https://root.cern/doc/master/classTBaseClass.html,2,['inherit'],['inherited']
Modifiability,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TClass * fClass;  ; FuncTempInfo_t * fInfo;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFunctionTemplate.html:11351,inherit,inherited,11351,doc/master/classTFunctionTemplate.html,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html,2,['inherit'],['inherited']
Modifiability,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void CreateSignature ();  Using the CINT method arg information to create a complete signature string. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFunction.html:12276,inherit,inherited,12276,doc/master/classTFunction.html,https://root.cern,https://root.cern/doc/master/classTFunction.html,2,['inherit'],['inherited']
Modifiability,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDataMember (const TDataMember &);  copy constructor ;  ; TDataMember & operator= (const TDataMember &);  assignment operator ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDataMember.html:18978,inherit,inherited,18978,doc/master/classTDataMember.html,https://root.cern,https://root.cern/doc/master/classTDataMember.html,2,['inherit'],['inherited']
Modifiability,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGTextLayout (const TGTextLayout &tlayout)=delete;  ; void operator= (const TGTextLayout &tlayout)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; LayoutChunk_t * fChunks;  Array of chunks. The actual size will be maxChunks. ;  ; const TGFont * fFont;  The font used when laying out the text. ;  ; Int_t fNumChunks;  Number of chunks actually used in following array. ;  ; const char * fString;  The string that was laid out. ;  ; Int_t fWidth;  The maximum width of all lines in the text layout. ;  . Friends; class TGFont;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  ES",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextLayout.html:10394,inherit,inherited,10394,doc/master/classTGTextLayout.html,https://root.cern,https://root.cern/doc/master/classTGTextLayout.html,1,['inherit'],['inherited']
Modifiability,"rtual Long64_tTDirectoryFile::GetSeekDir() const; virtual Long64_tGetSeekFree() const; virtual Long64_tGetSeekInfo() const; virtual Long64_tTDirectoryFile::GetSeekKeys() const; virtual Long64_tTDirectoryFile::GetSeekParent() const; virtual Long64_tGetSize() const; const TList*TFile::GetStreamerInfoCache(); virtual TList*GetStreamerInfoList(); const char*GetTablesType() const; virtual const char*TNamed::GetTitle() const; static TFile::EFileTypeTFile::GetType(const char* name, Option_t* option = """", TString* prefix = 0); virtual UInt_tTObject::GetUniqueID() const; Int_tGetUseIndexes() const; Bool_tGetUseSuffixes() const; Int_tGetUseTransactions() const; TUUIDTDirectory::GetUUID() const; Int_tTFile::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTFile::IncrementFileCounter(); virtual voidTFile::IncrementProcessIDs(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFile::IsArchive() const; Bool_tTFile::IsBinary() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tTDirectoryFile::IsModified() const; Bool_tIsMySQL() const; Bool_tIsODBC() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOpen() const; Bool_tIsOracle() const; Bool_tTFile::IsRaw() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectoryFile::IsWritable() const; Bool_tTObject::IsZombie() const; virtual voidTFile::ls(Option_t* option = """") const; virtual voidMakeFree(Long64_t, Long64_t); virtual voidMakeProject(const char*, const char* = ""*"", Option_t* = ""new"")MENU ; TStringMakeSelectQuery(TClass* cl); virtual voidMap(); virtual Bool_tTFile::Matches(const char* name); voidTObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSQLFile.html:14735,Inherit,InheritsFrom,14735,root/html532/TSQLFile.html,https://root.cern,https://root.cern/root/html532/TSQLFile.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rtual ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::Options() const; doubleROOT::Math::Minimizer::Precision() const; intROOT::Math::Minimizer::PrintLevel() const; virtual voidROOT::Math::Minimizer::PrintResults(); virtual boolProvidesError() const; virtual boolROOT::Math::Minimizer::Scan(unsigned int, unsigned int&, double*, double*, double = 0, double = 0); voidROOT::Math::Minimizer::SetDefaultOptions(); voidROOT::Math::Minimizer::SetErrorDef(double up); virtual boolSetFixedVariable(unsigned int, const string&, double); virtual voidSetFunction(const ROOT::Math::IMultiGenFunction& func); virtual voidSetFunction(const ROOT::Math::IMultiGradFunction& func); virtual boolSetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double, double); virtual boolSetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); voidROOT::Math::Minimizer::SetMaxFunctionCalls(unsigned int maxfcn); voidROOT::Math::Minimizer::SetMaxIterations(unsigned int maxiter); voidROOT::Math::Minimizer::SetOptions(const ROOT::Math::MinimizerOptions& opt); voidROOT::Math::Minimizer::SetPrecision(double prec); voidROOT::Math::Minimizer::SetPrintLevel(int level); voidROOT::Math::Minimizer::SetStrategy(int strategyLevel); voidROOT::Math::Minimizer::SetTolerance(double tol); virtual boolSetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); voidROOT::Math::Minimizer::SetValidError(bool on); virtual boolSetVariable(unsigned int ivar, const string& name, double val, double step); virtual boolSetVariableValue(unsigned int ivar, double val); virtual boolSetVariableValues(const double* x); intROOT::Math::Minimizer::Status() const; intROOT::Math::Minimizer::Strategy() const; doubleROOT::Math::Minimizer::Tolerance() const; virtual intROOT::Math::Minimizer::VariableIndex(const string&) const; virtual stringROOT::Math::Minimizer::VariableName(unsigned int) const; virtual const double*X() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLSimAnMinimizer.html:3863,Variab,VariableIndex,3863,root/html532/ROOT__Math__GSLSimAnMinimizer.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLSimAnMinimizer.html,2,['Variab'],"['VariableIndex', 'VariableName']"
Modifiability,"rtual TClass*IsA() const; Bool_tIsSignal() const; TMVA::BinarySearchTreeNode&operator=(const TMVA::BinarySearchTreeNode&); virtual voidPrint(ostream& os) const; virtual voidPrintRec(ostream& os) const; voidTMVA::Node::ReadXML(void* node, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); voidTMVA::Node::SetDepth(UInt_t d); voidTMVA::Node::SetLeft(TMVA::Node* l); voidTMVA::Node::SetParent(TMVA::Node* p); voidTMVA::Node::SetParentTree(TMVA::BinaryTree* t); voidTMVA::Node::SetPos(char s); voidTMVA::Node::SetRight(TMVA::Node* r); voidSetSelector(Short_t i); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. virtual voidReadAttributes(void* node, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); virtual voidReadContent(stringstream& s); virtual Bool_tReadDataRecord(istream& is, UInt_t tmva_Version_Code = TMVA_VERSION_CODE). Data Members; private:. UInt_tfClass; vector<Float_t>fEventV; Short_tfSelectorindex of variable used in node selection (decision tree) ; vector<Float_t>fTargets; Float_tfWeight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BinarySearchTreeNode(const TMVA::Event* e = NULL); constructor of a node for the search tree. BinarySearchTreeNode(TMVA::BinarySearchTreeNode* parent, char pos); constructor of a daughter node as a daughter of 'p'. BinarySearchTreeNode(const TMVA::BinarySearchTreeNode& n, TMVA::BinarySearchTreeNode* parent = NULL); copy constructor of a node. It will result in an explicit copy of; the node and recursively all it's daughters. ~BinarySearchTreeNode(); node destructor. Bool_t GoesRight(const TMVA::Event& ) const; check if the event fed into the node goes/decends to the right daughter. Bool_t GoesLeft(const TMVA::Event& ) const; check if the event fed into the node goes/decends to the left daughter. Bool_t EqualsMe(const TMVA::Event& ) const; check if the event fed into the node actually equals the event; that forms the nod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__BinarySearchTreeNode.html:2833,variab,variable,2833,root/html528/TMVA__BinarySearchTreeNode.html,https://root.cern,https://root.cern/root/html528/TMVA__BinarySearchTreeNode.html,1,['variab'],['variable']
Modifiability,"rtual TClass*IsA() const; const double&operator()(Int_t i) const; double&operator()(Int_t i); voidoperator*=(double val); voidoperator*=(const TMatrixTRow_const<double>& r); voidoperator+=(double val); voidoperator+=(const TMatrixTRow_const<double>& r); voidoperator=(double val); voidoperator=(const TMatrixTRow_const<double>& r); TMatrixTRow<double>&operator=(const TMatrixTRow<double>& r); voidoperator=(const TVectorT<double>& vec); const double&operator[](Int_t i) const; double&operator[](Int_t i); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. Int_tTMatrixTRow_const<double>::fIncif ptr = @a[row,i], then ptr+inc = @a[row,i+1]; TMatrixTBase<double>*TMatrixTRow_const<double>::fMatrixthe matrix I am a row of; const double*TMatrixTRow_const<double>::fPtrpointer to the a[row,0]; Int_tTMatrixTRow_const<double>::fRowIndeffective row index. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. TElementPosActionT<Element>& operator=(const TElementPosActionT<Element> &); {return *this;}. TMatrixTRow_const<Element>& operator=(const TMatrixTRow_const<Element>& trc). const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. Element & operator()(Int_t i). const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Element & operator[](Int_t i); { return (*( TMatrixTRow<Element> *)this)(i); }. void operator=(Element val). void operator+=(Element val). void operator*=(Element val). void operator+=(const TMatrixTRow_const<Element> &r). void operator*=(const TMatrixTRow_const<Element> &r). » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixTRow_double_.html:2326,Inherit,Inheritance,2326,root/html534/TMatrixTRow_double_.html,https://root.cern,https://root.cern/root/html534/TMatrixTRow_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual TH1 * DoCreateHistogram (Double_t xmin, Double_t xmax, Bool_t recreate=kFALSE);  Create histogram with bin content equal to function value computed at the bin center This histogram will be used to paint the function A re-creation is forced and a new histogram is done if recreate=true. ;  ; void DoInitialize (EAddToList addToGlobList);  Common initialization of the TF1. ;  ; virtual Double_t GetMinMaxNDim (Double_t *x, Bool_t findmax, Double_t epsilon=0, Int_t maxiter=0) const;  Find the minimum of a function of whatever dimension. ;  ; virtual void GetRange (Double_t *xmin, Double_t *xmax) const;  Return range of a generic N-D function. ;  ; void IntegrateForNormalization ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from TF1; static std::atomic< Bool_t > fgAbsValue;  ; static std::atomic< Bool_t > fgAddToGlobList;  ; static TF1 * fgCurrent = nullptr;  ; static Bool_t fgRejectPoint = kFALSE;  . #include <TF12.h>. Inheritance diagram for TF12:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TF12() [1/3]. TF12::TF12 ; (; ). TF12 default constructor. ; Definition at line 39 of file TF12.cxx. ◆ TF12() [2/3]. TF12::TF12 ; (; const char * ; name, . TF2 * ; f2, . Double_t ; xy, . Option_t * ; option = ""x"" . ). TF12 normal constructor. ; Create a TF12 (special TF1) from a projection of a TF2 for a fix value of Y if option=""X"" or X if option=""Y"" This value may be changed at any time via TF12::SetXY(xy) ; Definition at line 54 of file TF12.cxx. ◆ TF12() [3/3]. TF12::TF12 ; (; const TF12 & ; f12). Copy constructor. ; Definition at line 89 of file TF12.cxx. ◆ ~TF12(). TF12::~TF12 ; (; ). override . F2 default destructor. ; Definition at line 81 of file TF12.cxx. Member Functi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF12.html:40520,inherit,inherited,40520,doc/master/classTF12.html,https://root.cern,https://root.cern/doc/master/classTF12.html,1,['inherit'],['inherited']
Modifiability,"rtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortGetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TClass*GetInterpretedClass() const; virtual TSelector*GetInterpretedSelector() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tGetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSelectorCint.html:2854,Inherit,InheritsFrom,2854,root/html532/TSelectorCint.html,https://root.cern,https://root.cern/root/html532/TSelectorCint.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetArea(); Int_tGetBinNumber() const; Bool_tGetChanged() const; Double_tGetContent() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*GetPolygon() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetXMax(); Double_tGetXMin(); Double_tGetYMax(); Double_tGetYMin(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2PolyBin.html:2648,Inherit,InheritsFrom,2648,root/html532/TH2PolyBin.html,https://root.cern,https://root.cern/root/html532/TH2PolyBin.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetArea(); Int_tGetBinNumber() const; Bool_tGetChanged() const; Double_tGetContent() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*GetPolygon() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetXMax(); Double_tGetXMin(); Double_tGetYMax(); Double_tGetYMin(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TH2Po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2PolyBin.html:7479,Inherit,InheritsFrom,7479,root/html602/TH2PolyBin.html,https://root.cern,https://root.cern/root/html602/TH2PolyBin.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tFit(); Double_tGetChisquare() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TVirtualFitter*GetFitter() const; virtual const char*TObject::GetIconName() const; TH1*GetMCPrediction(Int_t parm) const; virtual const char*TObject::GetName() const; Int_tGetNDF() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TH1*GetPlot(); Double_tGetProb() const; voidGetResult(Int_t parm, Double_t& value, Double_t& error) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; voidIncludeBin(Int_t bin); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFractionFitter.html:7788,Inherit,InheritsFrom,7788,root/html532/TFractionFitter.html,https://root.cern,https://root.cern/root/html532/TFractionFitter.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; Int_tGetNumSWeightVars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooDataSet*GetSDataSet() const; Double_tGetSumOfEventSWeight(Int_t numEvent) const; Double_tGetSWeight(Int_t numEvent, const char* sVariable) const; RooArgListGetSWeightVars() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetYieldFromSWeight(const char* sVariable) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__SPlot.html:3465,Inherit,InheritsFrom,3465,root/html532/RooStats__SPlot.html,https://root.cern,https://root.cern/root/html532/RooStats__SPlot.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; Int_tGetNumSWeightVars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooDataSet*GetSDataSet() const; Double_tGetSumOfEventSWeight(Int_t numEvent) const; Double_tGetSWeight(Int_t numEvent, const char* sVariable) const; RooArgListGetSWeightVars() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetYieldFromSWeight(const char* sVariable) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__SPlot.html:3465,Inherit,InheritsFrom,3465,root/html602/RooStats__SPlot.html,https://root.cern,https://root.cern/root/html602/RooStats__SPlot.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortGetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*GetOption() const; virtual TList*GetOutputList() const; static TSelector*GetSelector(const char* filename); virtual Long64_tGetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tIsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSelector.html:5265,Inherit,InheritsFrom,5265,root/html532/TSelector.html,https://root.cern,https://root.cern/root/html532/TSelector.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree* tree); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTProofDraw::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofDrawGraph.html:2713,Inherit,InheritsFrom,2713,root/html532/TProofDrawGraph.html,https://root.cern,https://root.cern/root/html532/TProofDrawGraph.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofDraw.html:2799,Inherit,InheritsFrom,2799,root/html532/TProofDraw.html,https://root.cern,https://root.cern/root/html532/TProofDraw.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTProofDraw::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofDrawEntryList.html:2740,Inherit,InheritsFrom,2740,root/html532/TProofDrawEntryList.html,https://root.cern,https://root.cern/root/html532/TProofDrawEntryList.html,5,['Inherit'],['InheritsFrom']
Modifiability,"rtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*TSelector::GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTProofDraw::Init(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTProofDraw::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofDrawListOfGraphs.html:2748,Inherit,InheritsFrom,2748,root/html532/TProofDrawListOfGraphs.html,https://root.cern,https://root.cern/root/html532/TProofDrawListOfGraphs.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tUseSignalTransform() const; const vector<TMVA::VariableInfo>&Variables() const; TMVA::VariableTransformBaseVariableTransformBase(const TMVA::VariableTransformBase&); TMVA::VariableTransformBaseVariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream& o) const. protected:. voidCalcNorm(const vector<const TMVA::Event*>&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Int_tGetNClasses() const; UInt_tGetNSpectators() const; UInt_tGetNTargets() const; UInt_tGetNVariables() const; voidTObject::MakeZombie(); voidSetCreated(Bool_t c = kTRUE); voidSetName(const TString& c); voidSetNVariables(UInt_t i); vector<TMVA::VariableInfo>&Spectators(); vector<TMVA::VariableInfo>&Targets(); vector<TMVA::VariableInfo>&Variables(). private:. voidUpdateNorm(Int_t ivar, Double_t x). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWrit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableTransformBase.html:7226,Variab,VariableInfo,7226,root/html602/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableTransformBase.html,8,['Variab'],"['VariableInfo', 'Variables']"
Modifiability,"rtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tRooStats::HypoTestResult::HasTestStatisticData() const; RooStats::HybridResultHybridResult(const char* name = 0); RooStats::HybridResultHybridResult(const RooStats::HybridResult&); RooStats::HybridResultHybridResult(const char* name, const vector<double>& testStat_sb_vals, const vector<double>& testStat_b_vals, bool sumLargerValues = true); RooStats::HypoTestResultRooStats::HypoTestResult::HypoTestResult(const char* name = 0); RooStats::HypoTestResultRooStats::HypoTestResult::HypoTestResult(const RooStats::HypoTestResult& other); RooStats::HypoTestResultRooStats::HypoTestResult::HypoTestResult(const char* name, Double_t nullp, Double_t altp); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); virtual Double_tNullPValue() const; Double_tRooStats::HypoTestResult::NullPValueError() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HybridResult.html:4813,Inherit,InheritsFrom,4813,root/html534/RooStats__HybridResult.html,https://root.cern,https://root.cern/root/html534/RooStats__HybridResult.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tRooStats::HypoTestResult::HasTestStatisticData() const; RooStats::HybridResultHybridResult(const char* name = 0); RooStats::HybridResultHybridResult(const RooStats::HybridResult&); RooStats::HybridResultHybridResult(const char* name, const vector<double>& testStat_sb_vals, const vector<double>& testStat_b_vals, bool sumLargerValues = true); RooStats::HypoTestResultRooStats::HypoTestResult::HypoTestResult(const char* name = 0); RooStats::HypoTestResultRooStats::HypoTestResult::HypoTestResult(const RooStats::HypoTestResult& other); RooStats::HypoTestResultRooStats::HypoTestResult::HypoTestResult(const char* name, Double_t nullp, Double_t altp); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); virtual Double_tNullPValue() const; Double_tRooStats::HypoTestResult::NullPValueError() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HybridResult.html:4813,Inherit,InheritsFrom,4813,root/html602/RooStats__HybridResult.html,https://root.cern,https://root.cern/root/html602/RooStats__HybridResult.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual const char*TObject::GetIconName() const; const TObject*GetLinearPart(Int_t i) const; virtual const char*TNamed::GetName() const; Int_tGetNdim() const; Int_tGetNpar() const; Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetParameter(const char* name) const; Double_tGetParameter(Int_t param) const; Double_t*GetParameters() const; voidGetParameters(Double_t* params) const; const char*GetParName(Int_t ipar) const; Int_tGetParNumber(const char* name) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetVariable(const char* name) const; TStringGetVarName(Int_t ivar) const; Int_tGetVarNumber(const char* name) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsLinear() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFormula.html:3265,Inherit,InheritsFrom,3265,root/html604/TFormula.html,https://root.cern,https://root.cern/root/html604/TFormula.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual const char*TObject::GetIconName() const; virtual TObjArray*TGenerator::GetListOfParticles() const; Int_tGetN() const; virtual const char*TNamed::GetName() const; Int_tTGenerator::GetNumberOfParticles() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Double_tTGenerator::GetParameter(const char*) const; virtual TParticle*TGenerator::GetParticle(Int_t i) const; virtual TObjArray*TGenerator::GetPrimaries(Option_t* option = """"); Float_tTGenerator::GetPtCut() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual TObjArray*ImportParticles(Option_t* option = """"); virtual Int_tImportParticles(TClonesArray* particles, Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; Bool_tInitialize(Int_t idAin, Int_t idBin, Double_t ecms); Bool_tInitialize(Int_t idAin, Int_t idBin, Double_t eAin, Double_t eBin); virtual voidTObject::Inspect() constMENU ; static TPythia8*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; voidListAll() const; voidListChanged() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPythia8.html:5528,Inherit,InheritsFrom,5528,root/html534/TPythia8.html,https://root.cern,https://root.cern/root/html534/TPythia8.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual const char*TObject::GetIconName() const; virtual TObjArray*TGenerator::GetListOfParticles() const; Int_tGetN() const; virtual const char*TNamed::GetName() const; Int_tTGenerator::GetNumberOfParticles() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Double_tTGenerator::GetParameter(const char*) const; virtual TParticle*TGenerator::GetParticle(Int_t i) const; virtual TObjArray*TGenerator::GetPrimaries(Option_t* option = """"); Float_tTGenerator::GetPtCut() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual TObjArray*ImportParticles(Option_t* option = """"); virtual Int_tImportParticles(TClonesArray* particles, Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; Bool_tInitialize(Int_t idAin, Int_t idBin, Double_t ecms); Bool_tInitialize(Int_t idAin, Int_t idBin, Double_t eAin, Double_t eBin); virtual voidTObject::Inspect() constMENU ; static TPythia8*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; voidListAll() const; voidListChanged() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPythia8.html:5459,Inherit,InheritsFrom,5459,root/html602/TPythia8.html,https://root.cern,https://root.cern/root/html602/TPythia8.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual const char*TObject::GetIconName() const; virtual TObjArray*TGenerator::GetListOfParticles() const; Int_tGetN() const; virtual const char*TNamed::GetName() const; Int_tTGenerator::GetNumberOfParticles() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Double_tTGenerator::GetParameter(const char*) const; virtual TParticle*TGenerator::GetParticle(Int_t i) const; virtual TObjArray*TGenerator::GetPrimaries(Option_t* option = """"); Float_tTGenerator::GetPtCut() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual TObjArray*ImportParticles(Option_t* option = """"); virtual Int_tImportParticles(TClonesArray* particles, Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; Bool_tInitialize(Int_t idAin, Int_t idBin, Double_t ecms); virtual voidTObject::Inspect() constMENU ; static TPythia8*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPythia8.html:5528,Inherit,InheritsFrom,5528,root/html532/TPythia8.html,https://root.cern,https://root.cern/root/html532/TPythia8.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual doubleDoEval(const double* x) const; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&operator=(const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&); ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&). Data Members; public:. enum ROOT::Math::BasicFitMethodFunction::Type_t { kUndefined; kLeastSquare; kLogLikelihood; };. private:. const ROOT::Fit::BinData&fData; const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction&fFunc; vector<double>fGradfor derivatives; boolfIsExtendedflag to indicate if is extended (when false is a Multinomial lieklihood), default is true; unsigned intfNEffPointsnumber of effective points used in the fit; intfWeightflag to indicate if needs to evaluate using weight or weight squared (default weight = 0). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseFunction * Clone() const; clone the function (need to return Base for Windows). { return new PoissonLikelihoodFCN(fData,fFunc,fWeight,fIsExtended); }. unsigned int NFitPoints() const; effective points used in the fit. { return fNEffPoints; }. double DataElement(const double* x, unsigned int i, double* g) const; i-th likelihood element and its gradient. void Gradient(const double* x, double* g) const; evaluate gradient. bool IsWeighted() const; { return (fWeight != 0); }. void UseSumOfWeights(); Use the weights in evaluating the likelihood. void UseSumOfWeightSquare(); Use sum of the weight squared in evaluating the likelihood; (this is needed for calculating the errors). double DoEval(const double* x) const. Evaluation of the function (required by interface). double DoDerivative(const double* x, unsigned int icoord) const; for derivatives. » Author: L. Moneta Fri Aug 17 14:29:24 2007 » Copyright (c) 2007 LCG ROOT Math Team, CERN/PH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html:3475,Inherit,Inheritance,3475,root/html532/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual doubleDoEval(const double* x) const; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&operator=(const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&); ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&). Data Members; public:. enum ROOT::Math::BasicFitMethodFunction::Type_t { kUndefined; kLeastSquare; kLogLikelihood; };. private:. const ROOT::Fit::BinData&fData; const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction&fFunc; vector<double>fGradfor derivatives; boolfIsExtendedflag to indicate if is extended (when false is a Multinomial lieklihood), default is true; unsigned intfNEffPointsnumber of effective points used in the fit; intfWeightflag to indicate if needs to evaluate using weight or weight squared (default weight = 0). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseFunction * Clone() const; clone the function (need to return Base for Windows). { return new PoissonLikelihoodFCN(fData,fFunc,fWeight,fIsExtended); }. unsigned int NFitPoints() const; effective points used in the fit. { return fNEffPoints; }. double DataElement(const double* x, unsigned int i, double* g) const; i-th likelihood element and its gradient. void Gradient(const double* x, double* g) const; evaluate gradient. bool IsWeighted() const; { return (fWeight != 0); }. void UseSumOfWeights(); Use the weights in evaluating the likelihood. void UseSumOfWeightSquare(bool on = true); Use sum of the weight squared in evaluating the likelihood; (this is needed for calculating the errors). double DoEval(const double* x) const. Evaluation of the function (required by interface). double DoDerivative(const double* x, unsigned int icoord) const; for derivatives. » Author: L. Moneta Fri Aug 17 14:29:24 2007 » Copyright (c) 2007 LCG ROOT Math",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html:3489,Inherit,Inheritance,3489,root/html534/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html534/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidGetMCvect(Double_t*); virtual Double_tGetMCwt(); virtual voidGetMCwt(Double_t&); virtual const char*TObject::GetName() const; virtual Long_tGetnCalls() const; virtual Long_tGetnEffev() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Double_tGetPrimary() const; virtual voidGetPrimary(Double_t& prime); virtual TRandom*GetPseRan() const; virtual TFoamIntegrand*GetRho(); virtual const char*TObject::GetTitle() const; virtual Int_tGetTotDim() const; virtual UInt_tTObject::GetUniqueID() const; virtual const char*GetVersion() const; virtual voidGetWtParams(Double_t, Double_t&, Double_t&, Double_t&); virtual voidGrow(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitCells(); virtual voidInitialize(); virtual voidInitialize(TRandom*, TFoamIntegrand*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLinkCells(); virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeActiveList(); virtual voidMakeAlpha(); virtual voidMakeEvent(); voidTObject::MayNotUse(const char* method) const; virtual Double_tMCgenerate(Double_t* MCvect); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFoam.html:7669,Inherit,InheritsFrom,7669,root/html532/TFoam.html,https://root.cern,https://root.cern/root/html532/TFoam.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidGetMCvect(Double_t*); virtual Double_tGetMCwt(); virtual voidGetMCwt(Double_t&); virtual const char*TObject::GetName() const; virtual Long_tGetnCalls() const; virtual Long_tGetnEffev() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Double_tGetPrimary() const; virtual voidGetPrimary(Double_t& prime); virtual TRandom*GetPseRan() const; virtual TFoamIntegrand*GetRho(); virtual const char*TObject::GetTitle() const; virtual Int_tGetTotDim() const; virtual UInt_tTObject::GetUniqueID() const; virtual const char*GetVersion() const; virtual voidGetWtParams(Double_t, Double_t&, Double_t&, Double_t&); virtual voidGrow(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitCells(); virtual voidInitialize(); virtual voidInitialize(TRandom*, TFoamIntegrand*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLinkCells(); virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeActiveList(); virtual voidMakeAlpha(); virtual voidMakeEvent(); voidTObject::MayNotUse(const char* method) const; virtual Double_tMCgenerate(Double_t* MCvect); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFoam.html:7637,Inherit,InheritsFrom,7637,root/html602/TFoam.html,https://root.cern,https://root.cern/root/html602/TFoam.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidGetMeshNumbers(Int_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t, Double_t*) const; virtual Double_tTGeoTube::GetRmax() const; virtual Double_tTGeoTube::GetRmin() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tTGeoTube::HasRmin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::IsRunTimeShape",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoEltu.html:5692,Inherit,InheritsFrom,5692,root/html532/TGeoEltu.html,https://root.cern,https://root.cern/root/html532/TGeoEltu.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidGetMeshNumbers(Int_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t, Double_t*) const; virtual Double_tTGeoTube::GetRmax() const; virtual Double_tTGeoTube::GetRmin() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tTGeoTube::HasRmin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoEltu.html:6335,Inherit,InheritsFrom,6335,root/html534/TGeoEltu.html,https://root.cern,https://root.cern/root/html534/TGeoEltu.html,3,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidInitialize(RooAbsArg& testStatistic, RooArgSet& paramsOfInterest, RooArgSet& nuisanceParameters); virtual TClass*IsA() const; RooStats::TestStatSampler&operator=(const RooStats::TestStatSampler&); virtual voidSetConfidenceLevel(Double_t cl); virtual voidSetGlobalObservables(const RooArgSet&); virtual voidSetNuisanceParameters(const RooArgSet&); virtual voidSetObservables(const RooArgSet&); virtual voidSetParametersForTestStat(const RooArgSet&); virtual voidSetPdf(RooAbsPdf&); virtual voidSetPriorNuisance(RooAbsPdf*); virtual voidSetSamplingDistName(const char* name); virtual voidSetTestSize(Double_t size); virtual voidSetTestStatistic(RooStats::TestStatistic* testStatistic); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); RooStats::TestStatSamplerTestStatSampler(); RooStats::TestStatSamplerTestStatSampler(const RooStats::TestStatSampler&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TestStatSampler(); TestStatSampler();. {}. SamplingDistribution* GetSamplingDistribution(RooArgSet& paramsOfInterest); Main interface to get a ConfInterval, pure virtual. Double_t EvaluateTestStatistic(RooAbsData& data, RooArgSet& paramsOfInterest); Main interface to evaluate the test statistic on a dataset. TestStatistic* GetTestStatistic() const; Get the TestStatistic. Double_t ConfidenceLevel() const; Get the Confidence level for the test. void Initialize(RooAbsArg& testStatistic, RooArgSet& paramsOfInterest, RooArgSet& nuisanceParameters); Common Initialization. void SetPdf(RooAbsPdf& ); Set the Pdf, add to the the workspace if not already there. void SetPriorNuisance(RooAbsPdf* ); How to randomize the prior. Set to NULL to deactivate randomization. void SetParametersForTestStat(const RooArgSet& ); specify the values of parameters used when evaluating test statistic. void SetNuisanceParameters(const RooArgSet& ); REMOVE TH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__TestStatSampler.html:1985,Inherit,Inheritance,1985,root/html602/RooStats__TestStatSampler.html,https://root.cern,https://root.cern/root/html602/RooStats__TestStatSampler.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidMarkerAttributes(Int_t, Int_t, Float_t); TVirtualPadEditor&operator=(const TVirtualPadEditor&); virtual voidSetGlobal(Bool_t); static voidSetPadEditorName(const char* name); virtual voidShow(); static voidShowEditor(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static voidTerminate(); virtual voidTextAttributes(Int_t, Float_t, Int_t, Int_t, Float_t); TVirtualPadEditor(); TVirtualPadEditor(const TVirtualPadEditor&); static voidUpdateFillAttributes(Int_t col, Int_t sty); static voidUpdateLineAttributes(Int_t col, Int_t sty, Int_t width); static voidUpdateMarkerAttributes(Int_t col, Int_t sty, Float_t msiz); static voidUpdateTextAttributes(Int_t align, Float_t angle, Int_t col, Int_t font, Float_t tsize). Data Members; protected:. static TStringfgEditorNamename of the default pad editor ""Ged""; static TVirtualPadEditor*fgPadEditorsingleton editor dialog. Class Charts. Inheritance Chart:. TVirtualPadEditor. ←. TGedEditor; ←. TEveGedEditor. Function documentation; TVirtualPadEditor(); Virtual editor ctor. ~TVirtualPadEditor(); Virtual editor dtor. TVirtualPadEditor * LoadEditor(); Static function returning a pointer to a new pad editor.; This pointer can be adopted by a TCanvas (i.e. TRootCanvas); when it embeds the editor. const char * GetEditorName(); Returns the type of the default pad editor. Static method. TVirtualPadEditor * GetPadEditor(Bool_t load = kTRUE); Returns the pad editor dialog. Static method. void SetPadEditorName(const char* name); Set type of default pad editor. Static method. void ShowEditor(); Show the global pad editor. Static method. void HideEditor(); Hide the pad editor. Static method. void Terminate(); Close the global pad editor. Static method. void UpdateFillAttributes(Int_t col, Int_t sty); Update fill attributes via the pad editor. void UpdateTextAttributes(Int_t align, Float_t angle, Int_t col, Int_t font, Float_t tsize); Update",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPadEditor.html:2257,Inherit,Inheritance,2257,root/html602/TVirtualPadEditor.html,https://root.cern,https://root.cern/root/html602/TVirtualPadEditor.html,2,['Inherit'],['Inheritance']
Modifiability,"rtual voidReadTransformationFromStream(istream& istr, const TString& classname = """"); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetEnabled(Bool_t e); voidSetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidSetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidSetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&Spectators() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event *const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tUseSignalTransform() const; const vector<TMVA::VariableInfo>&Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream& o) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableTransformBase.html:5723,Variab,VariableInfo,5723,root/html532/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableTransformBase.html,4,['Variab'],"['VariableInfo', 'Variables']"
Modifiability,"rtual voidReadWeightsFromXML(void*); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::Method",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBayesClassifier.html:11743,Config,Configurable,11743,root/html602/TMVA__MethodBayesClassifier.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBayesClassifier.html,2,['Config'],['Configurable']
Modifiability,"rtual voidReadWeightsFromXML(void*); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBayesClassifier.html:11067,Config,Configurable,11067,root/html534/TMVA__MethodBayesClassifier.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBayesClassifier.html,1,['Config'],['Configurable']
Modifiability,"rtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidsetAnaIntZ(Double_t z); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMultiVarGaussian.html:29755,config,config,29755,root/html534/RooMultiVarGaussian.html,https://root.cern,https://root.cern/root/html534/RooMultiVarGaussian.html,6,['config'],['config']
Modifiability,"rtual voidSelectDrawable(Int_t device); virtual voidSetFillColor(Color_t fcolor); virtual voidSetFillStyle(Style_t fstyle); virtual voidSetLineColor(Color_t lcolor); virtual voidSetLineStyle(Style_t lstyle); virtual voidSetLineWidth(Width_t lwidth); virtual voidSetOpacity(Int_t percent); virtual voidSetTextAlign(Short_t align = 11); virtual voidSetTextAngle(Float_t tangle = 0); virtual voidSetTextColor(Color_t tcolor = 1); virtual voidSetTextFont(Font_t tfont = 62); virtual voidSetTextSize(Float_t tsize = 1); virtual voidSetTextSizePixels(Int_t npixels); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TVirtualPadPainter(); TVirtualPadPainter(const TVirtualPadPainter&). Data Members; public:. static TVirtualPadPainter::ETextModekClear; static TVirtualPadPainter::EBoxModekFilled; static TVirtualPadPainter::EBoxModekHollow; static TVirtualPadPainter::ETextModekOpaque. Class Charts. Inheritance Chart:. TVirtualPadPainter. ←. TGLPadPainter. TPadPainter. Function documentation; ~TVirtualPadPainter(); Virtual dtor. void InitPainter(); Empty definition. void InvalidateCS(); Empty definition. void LockPainter(); Empty definition. TVirtualPadPainter * PadPainter(Option_t* opt = """"); Create a pad painter of specified type. Color_t GetLineColor() const; Line attributes to be set up in TPad. Style_t GetLineStyle() const. Width_t GetLineWidth() const. void SetLineColor(Color_t lcolor). void SetLineStyle(Style_t lstyle). void SetLineWidth(Width_t lwidth). Color_t GetFillColor() const; Fill attributes to be set up in TPad. Style_t GetFillStyle() const. Bool_t IsTransparent() const. void SetFillColor(Color_t fcolor). void SetFillStyle(Style_t fstyle). void SetOpacity(Int_t percent). Short_t GetTextAlign() const; Text attributes. Float_t GetTextAngle() const. Color_t GetTextColor() const. Font_t GetTextFont() const. Float_t GetTextSize() const. Float_t GetTextMagnitude() const. void Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPadPainter.html:3777,Inherit,Inheritance,3777,root/html602/TVirtualPadPainter.html,https://root.cern,https://root.cern/root/html602/TVirtualPadPainter.html,2,['Inherit'],['Inheritance']
Modifiability,"rtual voidSetNuisanceParameters(const RooArgSet& set); virtual voidSetNullModel(const RooStats::ModelConfig&); virtual voidSetNullParameters(const RooArgSet& set); virtual voidSetParameters(const RooArgSet& set); virtual voidSetPdf(RooAbsPdf& pdf); virtual voidSetTestSize(Double_t size); virtual voidShowMembers(TMemberInspector& insp); virtual Double_tSize() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. RooAbsData*GetData() const; RooAbsPdf*GetPdf() const. Data Members; protected:. RooArgSetfAlternateParamsRooArgSet specifying alternate parameters for hypothesis test // Is it used ????; RooAbsData*fData; RooArgSetfNuisParamsRooArgSet specifying nuisance parameters for interval; RooArgSetfNullParamsRooArgSet specifying null parameters for hypothesis test; RooArgSetfPOIRooArgSet specifying parameters of interest for interval; RooAbsPdf*fPdf; Double_tfSizesize of the test (eg. specified rate of Type I error). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetTestSize(Double_t size). SetModel(const RooStats::ModelConfig& model). virtual ~CombinedCalculator(); destructor. { }. ConfInterval* GetInterval() const; Main interface to get a ConfInterval, pure virtual. HypoTestResult* GetHypoTest() const; main interface to get a HypoTestResult, pure virtual. void SetConfidenceLevel(Double_t cl); set the confidence level for the interval (eg. 0.95 for a 95% Confidence Interval). {fSize = 1.-cl;}. Double_t Size() const; Get the size of the test (eg. rate of Type I error). {return fSize;}. Double_t ConfidenceLevel() const; Get the Confidence level for the test. {return 1.-fSize;}. void SetData(RooAbsData& data); Set the DataSet, add to the the workspace if not already there. void SetNullModel(const RooStats::ModelConfig& ). void SetAlternateModel(const RooStats::ModelConfig& ). void SetPdf(RooAbsPdf& pdf); specific setting - keep for convenience- some of them could be removed; Set the Pdf. { fPdf =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__CombinedCalculator.html:3586,Inherit,Inheritance,3586,root/html532/RooStats__CombinedCalculator.html,https://root.cern,https://root.cern/root/html532/RooStats__CombinedCalculator.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_t_inSharedList! Is in shared list; Int_t_refCount! Use count ; TUUID_uuidUnique object ID. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooSharedProperties(); Destructor. Bool_t operator==(const RooSharedProperties& other); Return true of unique id of this property is equal to that of other. void Print(Option_t* opts = 0) const; Printing interface. RooSharedProperties* clone(). void increaseRefCount(); { _refCount++ ; }. void decreaseRefCount(); { if (_refCount>0) _refCount-- ; }. Int_t refCount() const; { return _refCount ; }. void setInSharedList(); { _inSharedList = kTRUE ; }. Bool_t inSharedList() const; { return _inSharedList ; }. TString asString(); { return TString(_uuid.AsString()); }. » Last changed: Tue Mar 10 17:19:06 2015 » Last generated: 2015-03-10 17:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSharedProperties.html:5676,Inherit,Inheritance,5676,root/html534/RooSharedProperties.html,https://root.cern,https://root.cern/root/html534/RooSharedProperties.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMVA::SVEventSVEvent(); TMVA::SVEventSVEvent(const TMVA::SVEvent&); TMVA::SVEventSVEvent(const TMVA::Event*, Float_t, Bool_t isSignal = kFALSE); TMVA::SVEventSVEvent(const vector<Float_t>*, Float_t alpha, Int_t typeFlag, UInt_t ns); TMVA::SVEventSVEvent(const vector<Float_t>* svector, Float_t alpha, Float_t alpha_p, Int_t typeFlag); voidUpdateErrorCache(Float_t upercache). Data Members; private:. Float_tfAlphalagrange multiplier; Float_tfAlpha_plagrange multiplier; const Float_tfCweightsvm cost weight; vector<Float_t>fDataVector; Float_tfErrorCacheoptimization parameter; Int_tfIdxindex flag; Int_tfIsShrinkedshrinking flag, see documentation; Float_t*fLinepointer to column of kerenl matrix ; UInt_tfNVarnumber of variables; UInt_tfNsdocumentation; const Float_tfTargetregression target; const Int_tfTypeFlagis sig or bkg - svm requieres 1 for sig and -1 for bkg. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVEvent(). SVEvent(const TMVA::Event* , Float_t , Bool_t isSignal = kFALSE); constructor. SVEvent(const vector<Float_t>* , Float_t alpha, Int_t typeFlag, UInt_t ns); constructor. SVEvent(const vector<Float_t>* svector, Float_t alpha, Float_t alpha_p, Int_t typeFlag); constructor. ~SVEvent(); destructor. void Print(ostream& os) const; printout. void PrintData(); printout. SVEvent(). void SetAlpha(Float_t alpha); { fAlpha = alpha; }. void SetAlpha_p(Float_t alpha); { fAlpha_p = alpha; }. void SetErrorCache(Float_t err_cache); { fErrorCache = err_cache; }. void SetIsShrinked(Int_t isshrinked); { fIsShrinked = isshrinked; }. void SetLine(Float_t* line); { fLine = line; }. void SetIdx(Int_t idx); { fIdx = idx; }. void SetNs(UInt_t ns); { fNs = ns; }. void UpdateErrorCache(Float_t upercache); { fErrorCache += upercache; }. std::vector<Float_t>* GetDataVector(); { return &fDataVector; }. Float_t GetAlpha() const; { return fAlpha; }. Float_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__SVEvent.html:2106,Inherit,Inheritance,2106,root/html534/TMVA__SVEvent.html,https://root.cern,https://root.cern/root/html534/TMVA__SVEvent.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static TGeoElementTable*GetElementTable(); virtual const char*TObject::GetIconName() const; TGeoIsotope*GetIsotope(Int_t i) const; virtual const char*TNamed::GetName() const; Int_tGetNisotopes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetRelativeAbundance(Int_t i) const; virtual Double_tGetSpecificActivity() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tHasIsotopes() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsDefined() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsRadioNuclide() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsUsed() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tN() const; Double_tNeff() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoElement.html:3086,Inherit,InheritsFrom,3086,root/html534/TGeoElement.html,https://root.cern,https://root.cern/root/html534/TGeoElement.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static TGeoElementTable*GetElementTable(); virtual const char*TObject::GetIconName() const; TGeoIsotope*GetIsotope(Int_t i) const; virtual const char*TNamed::GetName() const; Int_tGetNisotopes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetRelativeAbundance(Int_t i) const; virtual Double_tGetSpecificActivity() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tHasIsotopes() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsDefined() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsRadioNuclide() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsUsed() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tN() const; Double_tNeff() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoElement.html:2853,Inherit,InheritsFrom,2853,root/html602/TGeoElement.html,https://root.cern,https://root.cern/root/html602/TGeoElement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const vector<Double_t>&GetSampleWeights() const; const vector<Double_t>&GetSamplingDistribution() const; Int_tGetSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const TStringGetVarName() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; Double_tIntegral(Double_t low, Double_t high, Bool_t normalize = kTRUE, Bool_t lowClosed = kTRUE, Bool_t highClosed = kFALSE) const; Double_tIntegralAndError(Double_t& error, Double_t low, Double_t high, Bool_t normalize = kTRUE, Bool_t lowClosed = kTRUE, Bool_t highClosed = kFALSE) const; Double_tInverseCDF(Double_t pvalue); Double_tInverseCDF(Double_t pvalue, Double_t sigmaVariaton, Double_t& inverseVariation); Double_tInverseCDFInterpolate(Double_t pvalue); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* as",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__SamplingDistribution.html:2925,Inherit,InheritsFrom,2925,root/html532/RooStats__SamplingDistribution.html,https://root.cern,https://root.cern/root/html532/RooStats__SamplingDistribution.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; vector<TProofDrawListOfGraphs::Point3D_t>*fVectorvector. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; std::vector<T> * GetVector() const; { return fVector; }. Long64_t Merge(TCollection* list). » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofDraw.h 39173 2011-05-12 18:04:44Z ganis $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofVectorContainer_TProofDrawListOfGraphs__Point3D_t_.html:6233,Inherit,Inheritance,6233,root/html532/TProofVectorContainer_TProofDrawListOfGraphs__Point3D_t_.html,https://root.cern,https://root.cern/root/html532/TProofVectorContainer_TProofDrawListOfGraphs__Point3D_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidTObject::Delete(Option_t* option = """")MENU ; voidDisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tDoMulticlass() const; Bool_tDoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeGetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tGetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*GetEvent() const; const TMVA::Event*GetEvent(const TMVA::Event* ev) const; const TMVA::Event*GetEvent(Long64_t ievt) const; const TMVA::Event*GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&GetInputLabel(Int_t i) const; const TString&GetInputTitle(Int_t i) const; const TString&GetInputVar(Int_t i) const; const TString&GetJobName() const; virtual Double_tGetKSTrainingVsTest(Char_t SorB, TString opt = ""X""); virtual Double_tGetMaximumSignificance(Double_t SignalEvents, Double_t BackgroundEvents, Double_t& optimal_significance_value) const; Double_tGetMean(Int_t iva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBase.html:3982,Config,Configurable,3982,root/html534/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBase.html,3,['Config'],['Configurable']
Modifiability,"rtual voidTObject::Delete(Option_t* option = """")MENU ; voidDisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tDoMulticlass() const; Bool_tDoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeGetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tGetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*GetEvent() const; const TMVA::Event*GetEvent(const TMVA::Event* ev) const; const TMVA::Event*GetEvent(Long64_t ievt) const; const TMVA::Event*GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&GetInputLabel(Int_t i) const; const TString&GetInputTitle(Int_t i) const; const TString&GetInputVar(Int_t i) const; const TString&GetJobName() const; virtual Double_tGetMaximumSignificance(Double_t SignalEvents, Double_t BackgroundEvents, Double_t& optimal_significance_value) const; Double_tGetMean(Int_t ivar) const; const TString&GetMethodName() const; TMVA::Types::EMVAGetMe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodBase.html:3982,Config,Configurable,3982,root/html532/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodBase.html,1,['Config'],['Configurable']
Modifiability,"rtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. map<string,RooSharedProperties*>_newPropList; RooRefCountList_propList. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooSharedPropertiesList(); Constructor. ~RooSharedPropertiesList(); Destructor. RooSharedProperties* registerProperties(RooSharedProperties* , Bool_t canDeleteIncoming = kTRUE); Register property into list and take ownership. If an existing entry has a UUID that identical to that of the argument prop,; the argument prop is deleted and a pointer to the already stored is returned to; eliminate the duplication of instances with a unique identity. The caller should therefore not refer anymore to the input argument pointer as; as the object cannot be assumed to be live. void unregisterProperties(RooSharedProperties* ); Decrease reference count of property. If reference count is at zero,; delete the propery. RooSharedPropertiesList(). » Last changed: Sat Jun 20 17:30:32 2015 » Last generated: 2015-06-20 17:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooSharedPropertiesList.html:6023,Inherit,Inheritance,6023,root/html604/RooSharedPropertiesList.html,https://root.cern,https://root.cern/root/html604/RooSharedPropertiesList.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. map<string,RooSharedProperties*>_newPropList; RooRefCountList_propList. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooSharedPropertiesList(); Constructor. ~RooSharedPropertiesList(); Destructor. RooSharedProperties* registerProperties(RooSharedProperties* , Bool_t canDeleteIncoming = kTRUE); Register property into list and take ownership. If an existing entry has a UUID that identical to that of the argument prop,; the argument prop is deleted and a pointer to the already stored is returned to; eliminate the duplication of instances with a unique identity. The caller should therefore not refer anymore to the input argument pointer as; as the object cannot be assumed to be live. void unregisterProperties(RooSharedProperties* ); Decrease reference count of property. If reference count is at zero,; delete the propery. RooSharedPropertiesList(). » Last changed: Tue Jun 30 14:35:40 2015 » Last generated: 2015-06-30 14:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSharedPropertiesList.html:6023,Inherit,Inheritance,6023,root/html602/RooSharedPropertiesList.html,https://root.cern,https://root.cern/root/html602/RooSharedPropertiesList.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TPBHistType::EHistTypekHist1D; static TPBHistType::EHistTypekHist2D; static TPBHistType::EHistTypekHist3D; static TPBHistType::EHistTypekHistAll; static TPBHistType::EHistTypekHistNotSpecified; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TStringfName; TPBHistType::EHistTypefType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; EReadType GetType() const; { return fType; }. const char * GetName() const; { return fName; }. TPBHistType(EHistType type = kHist1D); { }. virtual ~TPBHistType(); { }. Bool_t IsHist1D() const; { return (fType == kHist1D) ? kTRUE : kFALSE; }. Bool_t IsHist2D() const; { return (fType == kHist2D) ? kTRUE : kFALSE; }. Bool_t IsHist3D() const; { return (fType == kHist3D) ? kTRUE : kFALSE; }. Bool_t IsHistAll() const; { return (fType == kHistAll) ? kTRUE : kFALSE; }. » Author: G. Ganis Oct 2010 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-06-30 15:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPBHistType.html:6028,Inherit,Inheritance,6028,root/html602/TPBHistType.html,https://root.cern,https://root.cern/root/html602/TPBHistType.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TPBHistType::EHistTypekHist1D; static TPBHistType::EHistTypekHist2D; static TPBHistType::EHistTypekHist3D; static TPBHistType::EHistTypekHistAll; static TPBHistType::EHistTypekHistNotSpecified; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TStringfName; TPBHistType::EHistTypefType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; EReadType GetType() const; { return fType; }. const char * GetName() const; { return fName; }. TPBHistType(EHistType type = kHist1D); { }. virtual ~TPBHistType(); { }. Bool_t IsHist1D() const; { return (fType == kHist1D) ? kTRUE : kFALSE; }. Bool_t IsHist2D() const; { return (fType == kHist2D) ? kTRUE : kFALSE; }. Bool_t IsHist3D() const; { return (fType == kHist3D) ? kTRUE : kFALSE; }. Bool_t IsHistAll() const; { return (fType == kHistAll) ? kTRUE : kFALSE; }. » Author: G. Ganis Oct 2010 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-09-08 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TPBHistType.html:6028,Inherit,Inheritance,6028,root/html604/TPBHistType.html,https://root.cern,https://root.cern/root/html604/TPBHistType.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction1Map<double,int>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction1Ref_double_int_.html:3102,Inherit,InheritsFrom,3102,root/html534/RooCFunction1Ref_double_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction1Ref_double_int_.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction1Map<double,int>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction1Ref_double_int_.html:2894,Inherit,InheritsFrom,2894,root/html602/RooCFunction1Ref_double_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction1Ref_double_int_.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(const ROOT::Minuit2::MnUserParameterState& state); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; ROOT::Minuit2::MnTraceObjectROOT::Minuit2::MnTraceObject::MnTraceObject(int parNumber = -1); ROOT::Minuit2::MnTraceObjectROOT::Minuit2::MnTraceObject::MnTraceObject(const ROOT::Minuit2::MnTraceObject&); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMinuit2TraceObject.html:2323,Inherit,InheritsFrom,2323,root/html602/TMinuit2TraceObject.html,https://root.cern,https://root.cern/root/html602/TMinuit2TraceObject.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(const ROOT::Minuit2::MnUserParameterState& state); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMinuit2TraceObject.html:2413,Inherit,InheritsFrom,2413,root/html534/TMinuit2TraceObject.html,https://root.cern,https://root.cern/root/html534/TMinuit2TraceObject.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static RooNameReg&instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; static const TNamed*known(const char* stringPtr); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNameReg.html:2630,Inherit,InheritsFrom,2630,root/html534/RooNameReg.html,https://root.cern,https://root.cern/root/html534/RooNameReg.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static RooNameReg&instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; static const TNamed*known(const char* stringPtr); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNameReg.html:2630,Inherit,InheritsFrom,2630,root/html602/RooNameReg.html,https://root.cern,https://root.cern/root/html602/RooNameReg.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; static RooNameReg&instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNameReg.html:2630,Inherit,InheritsFrom,2630,root/html532/RooNameReg.html,https://root.cern,https://root.cern/root/html532/RooNameReg.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__THnSparseBrowsable.html:3021,Inherit,InheritsFrom,3021,root/html532/ROOT__THnSparseBrowsable.html,https://root.cern,https://root.cern/root/html532/ROOT__THnSparseBrowsable.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__THnBaseBrowsable.html:2333,Inherit,InheritsFrom,2333,root/html602/ROOT__THnBaseBrowsable.html,https://root.cern,https://root.cern/root/html602/ROOT__THnBaseBrowsable.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); Double_toperator Double_t() const; void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooDouble.html:2425,Inherit,InheritsFrom,2425,root/html532/RooDouble.html,https://root.cern,https://root.cern/root/html532/RooDouble.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); Int_toperator Int_t() const; void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooInt.html:2392,Inherit,InheritsFrom,2392,root/html532/RooInt.html,https://root.cern,https://root.cern/root/html532/RooInt.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); Double_toperator double() const; void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooDouble.html:2350,Inherit,InheritsFrom,2350,root/html602/RooDouble.html,https://root.cern,https://root.cern/root/html602/RooDouble.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); Int_toperator int() const; void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooInt.html:2332,Inherit,InheritsFrom,2332,root/html602/RooInt.html,https://root.cern,https://root.cern/root/html602/RooInt.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofMonSender.html:2548,Inherit,InheritsFrom,2548,root/html532/TProofMonSender.html,https://root.cern,https://root.cern/root/html532/TProofMonSender.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofMonSender.html:2572,Inherit,InheritsFrom,2572,root/html602/TProofMonSender.html,https://root.cern,https://root.cern/root/html602/TProofMonSender.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(); RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(RooStats::LikelihoodInterval* theInterval); RooStats::LikelihoodIntervalPlotLikelihoodIntervalPlot(const RooStats::LikelihoodIntervalPlot&); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__LikelihoodIntervalPlot.html:2711,Inherit,InheritsFrom,2711,root/html532/RooStats__LikelihoodIntervalPlot.html,https://root.cern,https://root.cern/root/html532/RooStats__LikelihoodIntervalPlot.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Bool_tmatch(const char* testPattern) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tok(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMapCatEntry.html:2405,Inherit,InheritsFrom,2405,root/html532/RooMapCatEntry.html,https://root.cern,https://root.cern/root/html532/RooMapCatEntry.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Bool_tmatch(const char* testPattern) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tok(); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMapCatEntry.html:2286,Inherit,InheritsFrom,2286,root/html602/RooMapCatEntry.html,https://root.cern,https://root.cern/root/html602/RooMapCatEntry.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooStats::MCMCIntervalPlotMCMCIntervalPlot(); RooStats::MCMCIntervalPlotMCMCIntervalPlot(RooStats::MCMCInterval& interval); RooStats::MCMCIntervalPlotMCMCIntervalPlot(const RooStats::MCMCIntervalPlot&); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__MCMCIntervalPlot.html:3166,Inherit,InheritsFrom,3166,root/html532/RooStats__MCMCIntervalPlot.html,https://root.cern,https://root.cern/root/html532/RooStats__MCMCIntervalPlot.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooStats::MCMCIntervalPlotMCMCIntervalPlot(); RooStats::MCMCIntervalPlotMCMCIntervalPlot(RooStats::MCMCInterval& interval); RooStats::MCMCIntervalPlotMCMCIntervalPlot(const RooStats::MCMCIntervalPlot&); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__MCMCIntervalPlot.html:3190,Inherit,InheritsFrom,3190,root/html602/RooStats__MCMCIntervalPlot.html,https://root.cern,https://root.cern/root/html602/RooStats__MCMCIntervalPlot.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; TMVA::MethodInfoMethodInfo(); TMVA::MethodInfoMethodInfo(const TMVA::MethodInfo&); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__MethodInfo.html:2292,Inherit,InheritsFrom,2292,root/html604/TMVA__MethodInfo.html,https://root.cern,https://root.cern/root/html604/TMVA__MethodInfo.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCustomizer.html:6309,Inherit,InheritsFrom,6309,root/html532/RooCustomizer.html,https://root.cern,https://root.cern/root/html532/RooCustomizer.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCustomizer.html:6114,Inherit,InheritsFrom,6114,root/html602/RooCustomizer.html,https://root.cern,https://root.cern/root/html602/RooCustomizer.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); TObject*obj() const; const RooLinkedList&objList() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooTObjWrap.html:2482,Inherit,InheritsFrom,2482,root/html532/RooTObjWrap.html,https://root.cern,https://root.cern/root/html532/RooTObjWrap.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); TObject*obj() const; const RooLinkedList&objList() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooTObjWrap.html:2351,Inherit,InheritsFrom,2351,root/html602/RooTObjWrap.html,https://root.cern,https://root.cern/root/html602/RooTObjWrap.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; const char*operator const char *() const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCut.html:2862,Inherit,InheritsFrom,2862,root/html602/TCut.html,https://root.cern,https://root.cern/root/html602/TCut.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; const char*operator const char*() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCut.html:2961,Inherit,InheritsFrom,2961,root/html532/TCut.html,https://root.cern,https://root.cern/root/html532/TCut.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSimWSTool__SplitRule.html:5595,Inherit,InheritsFrom,5595,root/html532/RooSimWSTool__SplitRule.html,https://root.cern,https://root.cern/root/html532/RooSimWSTool__SplitRule.html,26,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSimWSTool__SplitRule.html:5592,Inherit,InheritsFrom,5592,root/html602/RooSimWSTool__SplitRule.html,https://root.cern,https://root.cern/root/html602/RooSimWSTool__SplitRule.html,24,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual const char*name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooArgProxy.html:3234,Inherit,InheritsFrom,3234,root/html534/RooArgProxy.html,https://root.cern,https://root.cern/root/html534/RooArgProxy.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual const char*name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooArgProxy.html:2821,Inherit,InheritsFrom,2821,root/html602/RooArgProxy.html,https://root.cern,https://root.cern/root/html602/RooArgProxy.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; voidLowess(Double_t* x, Double_t* y, Int_t n, Double_t* ys, Double_t span, Int_t iter, Double_t delta); static voidLowest(Double_t* x, Double_t* y, Int_t n, Double_t& xs, Double_t& ys, Int_t nleft, Int_t nright, Double_t* w, Bool_t userw, Double_t* rw, Bool_t& ok); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphSmooth.html:3272,Inherit,InheritsFrom,3272,root/html532/TGraphSmooth.html,https://root.cern,https://root.cern/root/html532/TGraphSmooth.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; voidLowess(Double_t* x, Double_t* y, Int_t n, Double_t* ys, Double_t span, Int_t iter, Double_t delta); static voidLowest(Double_t* x, Double_t* y, Int_t n, Double_t& xs, Double_t& ys, Int_t nleft, Int_t nright, Double_t* w, Bool_t userw, Double_t* rw, Bool_t& ok); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraphSmooth.html:3224,Inherit,InheritsFrom,3224,root/html602/TGraphSmooth.html,https://root.cern,https://root.cern/root/html602/TGraphSmooth.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; voidlogError(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFactoryWSTool.html:4826,Inherit,InheritsFrom,4826,root/html532/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html532/RooFactoryWSTool.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; voidlogError(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooFactoryWSTool.html:4785,Inherit,InheritsFrom,4785,root/html602/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html602/RooFactoryWSTool.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTProofMonSender::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofMonSenderML.html:2531,Inherit,InheritsFrom,2531,root/html532/TProofMonSenderML.html,https://root.cern,https://root.cern/root/html532/TProofMonSenderML.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTProofMonSender::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofMonSenderML.html:2385,Inherit,InheritsFrom,2385,root/html602/TProofMonSenderML.html,https://root.cern,https://root.cern/root/html602/TProofMonSenderML.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*TRootGuiFactory::IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQRootGuiFactory.html:3516,Inherit,InheritsFrom,3516,root/html602/TQRootGuiFactory.html,https://root.cern,https://root.cern/root/html602/TQRootGuiFactory.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetCoord(Int_t dim) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHaveSkippedBin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Long64_tNext(Int_t* coord = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THnIter.html:2459,Inherit,InheritsFrom,2459,root/html534/THnIter.html,https://root.cern,https://root.cern/root/html534/THnIter.html,1,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetCoord(Int_t dim) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHaveSkippedBin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Long64_tNext(Int_t* coord = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); THnIter&operator=(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THnIter.html:2370,Inherit,InheritsFrom,2370,root/html602/THnIter.html,https://root.cern,https://root.cern/root/html602/THnIter.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; RooDataSet*RooAbsGenContext::generate(Int_t nEvents = 0, Bool_t skipInit = kFALSE); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tRooAbsGenContext::isValid() const; Bool_tRooAbsGenContext::isVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooConvGenContext.html:3532,Inherit,InheritsFrom,3532,root/html532/RooConvGenContext.html,https://root.cern,https://root.cern/root/html532/RooConvGenContext.html,4,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDictionary*GetContentDict() const; TDictionary*GetDict() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const ROOT::TBranchProxy*GetProxy() const; ROOT::TBranchProxy*GetProxy(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); ROOT::TNamedBranchProxy&operator=(const ROOT::TName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TNamedBranchProxy.html:2491,Inherit,InheritsFrom,2491,root/html602/ROOT__TNamedBranchProxy.html,https://root.cern,https://root.cern/root/html602/ROOT__TNamedBranchProxy.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetBlobPrefixName() const; const char*GetBlobTypeName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TSQLClassInfo*GetInfo() const; const char*GetLocatedField() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Long64_tGetObjId() const; virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValue() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsBlobData() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; Bool_tLocateColumn(const char* colname, Bool_t isblob = kFALSE); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSQLObjectData.html:3083,Inherit,InheritsFrom,3083,root/html532/TSQLObjectData.html,https://root.cern,https://root.cern/root/html532/TSQLObjectData.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetBlobPrefixName() const; const char*GetBlobTypeName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TSQLClassInfo*GetInfo() const; const char*GetLocatedField() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Long64_tGetObjId() const; virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValue() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsBlobData() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; Bool_tLocateColumn(const char* colname, Bool_t isblob = kFALSE); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSQLObjectData.html:2905,Inherit,InheritsFrom,2905,root/html602/TSQLObjectData.html,https://root.cern,https://root.cern/root/html602/TSQLObjectData.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); FontAttributes_tGetFontAttributes() const; FontH_tGetFontHandle() const; voidGetFontMetrics(FontMetrics_t* m) const; FontStruct_tGetFontStruct() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMeasureChars(const char* source, Int_t numChars, Int_t maxLength, Int_t flags, Int_t* length) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGFont.html:3078,Inherit,InheritsFrom,3078,root/html532/TGFont.html,https://root.cern,https://root.cern/root/html532/TGFont.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); FontAttributes_tGetFontAttributes() const; FontH_tGetFontHandle() const; voidGetFontMetrics(FontMetrics_t* m) const; FontStruct_tGetFontStruct() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMeasureChars(const char* source, Int_t numChars, Int_t maxLength, Int_t flags, Int_t* length) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGFont.html:3078,Inherit,InheritsFrom,3078,root/html602/TGFont.html,https://root.cern,https://root.cern/root/html602/TGFont.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TObjString*GetLineWith(const char* text) const; TList*GetListOfLines() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tLoad() constMENU ; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMacro&operator=(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMacro.html:3588,Inherit,InheritsFrom,3588,root/html602/TMacro.html,https://root.cern,https://root.cern/root/html602/TMacro.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TObjString*GetLineWith(const char* text) const; TList*GetListOfLines() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMacro&operator=(const TM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMacro.html:3671,Inherit,InheritsFrom,3671,root/html532/TMacro.html,https://root.cern,https://root.cern/root/html532/TMacro.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_thasMax(const char* rname = 0) const; Bool_thasMin(const char* rname = 0) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tmax(const char* rname = 0) const; voidTObject::MayNotUse(const char* method) const; Double_tmin(const char* rname = 0) const; virtual const char*RooArgProxy::name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); Double_toperator Double_t() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealProxy.html:3251,Inherit,InheritsFrom,3251,root/html532/RooRealProxy.html,https://root.cern,https://root.cern/root/html532/RooRealProxy.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_thasMax(const char* rname = 0) const; Bool_thasMin(const char* rname = 0) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tmax(const char* rname = 0) const; voidTObject::MayNotUse(const char* method) const; Double_tmin(const char* rname = 0) const; virtual const char*RooArgProxy::name() const; virtual Bool_tTObject::Notify(); const RooArgSet*RooAbsProxy::nset() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); Double_toperator double() const; void*TObject::operator new(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooRealProxy.html:2796,Inherit,InheritsFrom,2796,root/html602/RooRealProxy.html,https://root.cern,https://root.cern/root/html602/RooRealProxy.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::VariableTransformBase::PrintTransformation(ostream&); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html:5485,Variab,VariableTransformBase,5485,root/html602/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html,4,['Variab'],['VariableTransformBase']
Modifiability,"rtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tselfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAddModel.html:28951,config,config,28951,root/html532/RooAddModel.html,https://root.cern,https://root.cern/root/html532/RooAddModel.html,3,['config'],['config']
Modifiability,"rtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tselfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetMode(const RooMomentMorph::Setting& setting); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Tex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMomentMorph.html:27694,config,config,27694,root/html532/RooMomentMorph.html,https://root.cern,https://root.cern/root/html532/RooMomentMorph.html,2,['config'],['config']
Modifiability,"rtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TPluginHandler(); TPluginHandler(const TPluginHandler&); TPluginHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor, const char* origin); (unknown)(); Bool_tCanHandle(const char* base, const char* uri); const char*GetBase() const; const char*GetCtor() const; const char*GetOrigin() const; const char*GetPlugin() const; const char*GetRegexp() const; TPluginHandler&operator=(const TPluginHandler&); voidSetupCallEnv(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfBasebase class which will be extended by plugin; TMethodCall*fCallEnv!ctor method call environment; Int_tfCanCall!if 1 fCallEnv is ok, -1 fCallEnv is not ok; TStringfClassclass to be loaded from plugin library; TStringfCtorctor used to instantiate object of fClass; Bool_tfIsGlobalplugin ctor is a global function; Bool_tfIsMacroplugin is a macro and not a library; TFunction*fMethod!ctor method or global function; TStringfOriginorigin of plugin handler definition; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPluginHandler.html:8015,plugin,pluginName,8015,root/html528/TPluginHandler.html,https://root.cern,https://root.cern/root/html528/TPluginHandler.html,4,['plugin'],['pluginName']
Modifiability,"rtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. unsigned int*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNDArrayT_unsigned_int_.html:6584,Inherit,Inheritance,6584,root/html534/TNDArrayT_unsigned_int_.html,https://root.cern,https://root.cern/root/html534/TNDArrayT_unsigned_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSQLResult*fClassData! results with request to selected table; TSQLClassInfo*fInfo! classinfo, for which pool is created; Bool_tfIsMoreRows! indicates if class data has not yet read rows; TList*fRowsPool! pool of extrcted, but didnot used rows. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSQLObjectDataPool(). TSQLObjectDataPool(TSQLClassInfo* info, TSQLResult* data). ~TSQLObjectDataPool(); Destructor of TSQLObjectDataPool class; Deletes not used rows and class data table. TSQLRow* GetObjectRow(Long64_t objid); Returns single sql row with object data for that class. TSQLObjectDataPool(). TSQLClassInfo* GetSqlInfo() const; { return fInfo; }. TSQLResult* GetClassData() const; { return fClassData; }. » Author: Sergey Linev 20/11/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sql:$Id: TSQLObjectData.h 34907 2010-08-20 17:51:15Z pcanal $ » Last generated: 2011-11-03 20:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSQLObjectDataPool.html:5875,Inherit,Inheritance,5875,root/html532/TSQLObjectDataPool.html,https://root.cern,https://root.cern/root/html532/TSQLObjectDataPool.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraphPainter(). Default constructor; ; . ~TGraphPainter(). Destructor.; ; . void ComputeLogs(Int_t npoints, Int_t opt). Compute the logarithm of global variables gxwork and gywork; according to the value of Options and put the results in the global; variables gxworkl and gyworkl.; ; npoints : Number of points in gxwork and in gywork.; ; opt = 1 ComputeLogs is called from PaintGrapHist; opt = 0 ComputeLogs is called from PaintGraph; ; . Int_t DistancetoPrimitiveHelper(TGraph* theGraph, Int_t px, Int_t py). Compute distance from point px,py to a graph.; ; Compute the closest distance of approach from point px,py to this line.; The distance is computed in pixels units.; ; . void DrawPanelHelper(TGraph* theGraph). Display a panel with all histogram drawing options.; ; . void ExecuteEventHelper(TGraph* theGraph, Int_t event, Int_t px, Int_t py). Execute action corresponding to one event.; ; This member function is called when a graph is clicked with the locator.; ; If the left mouse button is clicked on one of the line end points, this point; follows the cursor until button is released.; ; If the middle mouse button clicked, the line is moved parallel to itself; until the button is rele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraphPainter.html:19845,variab,variables,19845,root/html534/TGraphPainter.html,https://root.cern,https://root.cern/root/html534/TGraphPainter.html,4,['variab'],['variables']
Modifiability,"rtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraphPainter(). Default constructor; ; . ~TGraphPainter(). Destructor.; ; . void ComputeLogs(Int_t npoints, Int_t opt). Compute the lorarithm of global variables gxwork and gywork; according to the value of Options and put the results in the global; variables gxworkl and gyworkl.; ; npoints : Number of points in gxwork and in gywork.; ; opt = 1 CompulteLogs is called from PaintGrapHist; opt = 0 CompulteLogs is called from PaintGraph; ; . Int_t DistancetoPrimitiveHelper(TGraph* theGraph, Int_t px, Int_t py). Compute distance from point px,py to a graph.; ; Compute the closest distance of approach from point px,py to this line.; The distance is computed in pixels units.; ; . void DrawPanelHelper(TGraph* theGraph). Display a panel with all histogram drawing options.; ; . void ExecuteEventHelper(TGraph* theGraph, Int_t event, Int_t px, Int_t py). Execute action corresponding to one event.; ; This member function is called when a graph is clicked with the locator.; ; If the left mouse button is clicked on one of the line end points, this point; follows the cursor until button is released.; ; If the middle mouse button clicked, the line is moved parallel to itself; until the button is re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphPainter.html:18535,variab,variables,18535,root/html528/TGraphPainter.html,https://root.cern,https://root.cern/root/html528/TGraphPainter.html,4,['variab'],['variables']
Modifiability,"rtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraphPainter(). Default constructor; ; . ~TGraphPainter(). Destructor.; ; . void ComputeLogs(Int_t npoints, Int_t opt). Compute the lorarithm of global variables gxwork and gywork; according to the value of Options and put the results in the global; variables gxworkl and gyworkl.; ; npoints : Number of points in gxwork and in gywork.; ; opt = 1 ComputeLogs is called from PaintGrapHist; opt = 0 ComputeLogs is called from PaintGraph; ; . Int_t DistancetoPrimitiveHelper(TGraph* theGraph, Int_t px, Int_t py). Compute distance from point px,py to a graph.; ; Compute the closest distance of approach from point px,py to this line.; The distance is computed in pixels units.; ; . void DrawPanelHelper(TGraph* theGraph). Display a panel with all histogram drawing options.; ; . void ExecuteEventHelper(TGraph* theGraph, Int_t event, Int_t px, Int_t py). Execute action corresponding to one event.; ; This member function is called when a graph is clicked with the locator.; ; If the left mouse button is clicked on one of the line end points, this point; follows the cursor until button is released.; ; If the middle mouse button clicked, the line is moved parallel to itself; until the button is rele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphPainter.html:19823,variab,variables,19823,root/html532/TGraphPainter.html,https://root.cern,https://root.cern/root/html532/TGraphPainter.html,4,['variab'],['variables']
Modifiability,"rtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TGeoMedium(const TGeoMedium&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGeoMedium&operator=(const TGeoMedium&). Data Members; public:. enum EGeoMedium { kMedSavePrimitive; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfIdunique Id; TGeoMaterial*fMaterialpointer to material; TStringTNamed::fNameobject identifier; Double_tfParams[20]parameters; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMedium(); Default constructor. TGeoMedium(const char* name, Int_t numed, const TGeoMaterial* mat, Double_t* params = 0); constructor. TGeoMedium(const char* name, Int_t numed, Int_t imat, Int_t isvol, Int_t ifield, Double_t fieldm, Double_t tmaxfd, Double_t stemax, Double_t deemax, Double_t epsil, Double_t stmin); constructor. TGeoMedium(const TGeoMedium& ); copy constructor. TGeoMedium& operator=(const TGeoMedium& ); assignment operator. ~TGeoMedium(); Destructor. char * GetPointerName() const; Provide a pointer name containing uid. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primitive as a C++ statement(s) on output stream ""out"". Int_t GetByteCount() const; methods. {return sizeof(*this);}. Int_t GetId() const; {return fId;}. Double_t GetParam(Int_t i) const; {return fParams[i];}. void SetParam(Int_t i, Double_t val); {fParams[i] = val;}. TGeoMaterial * GetMaterial() const; {return fMaterial;}. void SetId(Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoMedium.html:6693,Inherit,Inheritance,6693,root/html532/TGeoMedium.html,https://root.cern,https://root.cern/root/html532/TGeoMedium.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidTTUBE::SetPoints(Double_t* points) const; virtual voidTTUBE::SetSegsAndPols(TBuffer3D& buffer) const; Int_tTShape::ShapeDistancetoPrimitive(Int_t numPoints, Int_t px, Int_t py). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Float_tTTUBE::fAspectRatiodefines (the ellipse semi-axis in Y)/(the ellipse semi-axis in X); Double_t*TTUBE::fCoTab! Table of cos(fPhi1) .... cos(fPhil+fDphi1); Float_tTTUBE::fDzhalf length in z; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TMaterial*TShape::fMaterialPointer to material; TStringTNamed::fNameobject identifier; Int_tTTUBE::fNdivnumber of segments (precision); Int_tTShape::fNumberShape number; Float_tfPhistereo angle; Float_tTTUBE::fRmaxellipse semi-axis in X outside; Float_tTTUBE::fRminellipse semi-axis in X inside; Double_t*TTUBE::fSiTab! Table of sin(fPhi1) .... sin(fPhil+fDphi1); TStringTNamed::fTitleobject title; Int_tTShape::fVisibilityVisibility flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THYPE(); HYPE shape default constructor. THYPE(const char* name, const char* title, const char* material, Float_t rmin, Float_t rmax, Float_t dz, Float_t phi); HYPE shape normal constructor. ~THYPE(); HYPE shape default destructor. THYPE(). Float_t GetPhi() const; {return fPhi;}. » Author: Rene Brun 08/12/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/g3d:$Id$ » Last generated: 2015-03-14 16:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THYPE.html:8905,Inherit,Inheritance,8905,root/html534/THYPE.html,https://root.cern,https://root.cern/root/html534/THYPE.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual voidsterilize(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidRooCacheManager<RooAbsCacheElement>::wireCache(). Data Members; protected:. Bool_t_allowOptimize; static Bool_t_clearObsListClear obslist on sterilize?; Bool_t_clearOnRedirect; Int_tRooCacheManager<RooAbsCacheElement>::_lastIndex! Last slot accessed; Int_tRooCacheManager<RooAbsCacheElement>::_maxSize! Maximum size; vector<RooNormSetCache>RooCacheManager<RooAbsCacheElement>::_nsetCache! Normalization/Integration set manager; vector<RooAbsCacheElement*>RooCacheManager<RooAbsCacheElement>::_object! Payload; Bool_t_optCacheModeSeen!; RooArgSet*_optCacheObservables! current optCacheObservables; RooAbsArg*RooAbsCache::_ownerPointer to owning RooAbsArg; Int_tRooCacheManager<RooAbsCacheElement>::_size! Actual use; Bool_tRooCacheManager<RooAbsCacheElement>::_wired! In wired mode, there is a single payload which is returned always. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooObjCacheManager(RooAbsArg* owner = 0, Int_t maxSize = 2, Bool_t clearCacheOnServerRedirect = kTRUE, Bool_t allowOptimize = kFALSE); Constructor of object cache manager for given owner. If clearCacheOnServerRedirect is true; all cache elements will be cleared when a server redirect is intercepted by the cache manager.; This is the default strategy and should only be overridden when you really understand; what you're doing as properly implementing server redirect in cache elements can get very; complicated, especially if there are (cyclical) reference back to the owning object. RooObjCacheManager(const RooObjCacheManager& other, RooAbsArg* owner = 0); Copy constructor. ~RooObjCacheManager(); Destructor. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ); Intercept server redirect calls. If clearOnRedirect was set, sterilize; the cache (i.e. keep the structure but delete all contents). If not; forward serve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooObjCacheManager.html:3971,Inherit,Inheritance,3971,root/html602/RooObjCacheManager.html,https://root.cern,https://root.cern/root/html602/RooObjCacheManager.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TBRIK.h>. Inheritance diagram for TBRIK:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBRIK.html:16370,inherit,inherited,16370,doc/master/classTBRIK.html,https://root.cern,https://root.cern/doc/master/classTBRIK.html,1,['inherit'],['inherited']
Modifiability,"rtual void Init (TTree *);  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual bool Process (Long64_t);  The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetInputList (TList *input);  ; virtual void SetObject (TObject *obj);  ; virtual void SetOption (const char *option);  ; virtual void SetStatus (Long64_t status);  ; virtual void SlaveBegin (TTree *);  ; virtual void SlaveTerminate ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Terminate ();  ; virtual int Version () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelector.html:5367,inherit,inherited,5367,doc/master/classTSelector.html,https://root.cern,https://root.cern/doc/master/classTSelector.html,1,['inherit'],['inherited']
Modifiability,"rtual void MakeFunction (std::ostream &fout, const TString &fncName, Int_t part, UInt_t trCounter, Int_t cls);  creates a normalizing function ;  ; Bool_t PrepareTransformation (const std::vector< Event * > &);  prepare transformation --> (nothing to do) ;  ; virtual void PrintTransformation (std::ostream &o);  prints the transformation ranges ;  ; virtual void ReadFromXML (void *trfnode);  Read the transformation matrices from the xml node. ;  ; void ReadTransformationFromStream (std::istream &, const TString &);  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual const Event * Transform (const Event *const, Int_t cls) const;  ; void WriteTransformationToStream (std::ostream &) const;  ;  Public Member Functions inherited from TMVA::VariableTransformBase;  VariableTransformBase (DataSetInfo &dsi, Types::EVariableTransform tf, const TString &trfName);  standard constructor ;  ; virtual ~VariableTransformBase (void);  ; virtual void CountVariableTypes (UInt_t &nvars, UInt_t &ntgts, UInt_t &nspcts) const;  count variables, targets and spectators ;  ; virtual Bool_t GetInput (const Event *event, std::vector< Float_t > &input, std::vector< Char_t > &mask, Bool_t backTransform=kFALSE) const;  select the values from the event ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; TString GetShortName () const;  ; Types::EVariableTransform GetVariableTransform () const;  ; Bool_t IsCreated () const;  ; Bool_t IsEnabled () const;  ; Bool_t IsNormalised () const;  ; MsgLogger & Log () const;  ; virtual void SelectInput (const TString &inputVariables, Bool_t putIntoVariables=kFALSE);  select the variables/targets/spectators which serve as input to the transformation ;  ; void SetEnabled (Bool_t e);  ; void SetNormalise (Bool_t n);  ; virtual void SetOutput (Event *event, std::vector< Float_t > &output, std::vector< Char_t > &mask, const Event *oldEvent=nullptr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html:2760,inherit,inherited,2760,doc/master/classTMVA_1_1VariableRearrangeTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html,2,"['inherit', 'variab']","['inherited', 'variables']"
Modifiability,"rtual void SetJobTag (const char *jobtag=nullptr, const char *description=nullptr)=0;  ; virtual void SetOutputDirectory (const char *value=nullptr, const char *description=nullptr)=0;  ; virtual void SetPrice (UInt_t price=1, const char *description=nullptr)=0;  ; virtual void SetSplitArguments (const char *splitarguments=nullptr, const char *description=nullptr)=0;  ; virtual void SetSplitMode (const char *value, UInt_t maxnumberofinputfiles=0, UInt_t maxinputfilesize=0, const char *d1=nullptr, const char *d2=nullptr, const char *d3=nullptr)=0;  ; virtual void SetTTL (UInt_t ttl=72000, const char *description=nullptr)=0;  ; virtual void SetValidationCommand (const char *value, const char *description=nullptr)=0;  ; void SetValue (const char *key, const char *value);  Sets a value. If the entry already exists the old one is replaced. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGridJDL.html:3507,inherit,inherited,3507,doc/master/classTGridJDL.html,https://root.cern,https://root.cern/doc/master/classTGridJDL.html,1,['inherit'],['inherited']
Modifiability,"rtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLatex; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAnnotation.html:23975,inherit,inherited,23975,doc/master/classTAnnotation.html,https://root.cern,https://root.cern/doc/master/classTAnnotation.html,4,['inherit'],['inherited']
Modifiability,"rtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPaveText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPave; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDiamond.html:21048,inherit,inherited,21048,doc/master/classTDiamond.html,https://root.cern,https://root.cern/doc/master/classTDiamond.html,8,['inherit'],['inherited']
Modifiability,"rtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooCFunction1Map< VO, VI > & fmap ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef VO(* func_t) (VI);  . Static Private Member Functions; static VO dummyFunction (VI);  . Private Attributes; func_t _ptr;  . Static Private Attributes; static RooCFunction1Map< VO, VI > * _fmap = nullptr;  Pointer to embedded function. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction1Ref.html:8785,inherit,inherited,8785,doc/master/classRooCFunction1Ref.html,https://root.cern,https://root.cern/doc/master/classRooCFunction1Ref.html,1,['inherit'],['inherited']
Modifiability,"rtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooStats::IntervalCalculator; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void ApproximatePosterior () const;  approximate posterior in nbins using a TF1 scan the poi values and evaluate the posterior at each point and save the result in a cloned TF1 For each point the posterior is evaluated by integrating the nuisance parameters ;  ; void ClearAll",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1BayesianCalculator.html:16084,inherit,inherited,16084,doc/master/classRooStats_1_1BayesianCalculator.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1BayesianCalculator.html,3,['inherit'],['inherited']
Modifiability,"rtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooStats::IntervalCalculator; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void SetBins (const RooAbsCollection &coll, Int_t numBins) const;  ; void SetupBasicUsage ();  Constructor for automatic configuration with basic settings. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html:13843,inherit,inherited,13843,doc/master/classRooStats_1_1MCMCCalculator.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html,3,['inherit'],['inherited']
Modifiability,"rtual(TBuffer& b); virtual voidToggle(); virtual voidTGListTreeItem::UpdateState(). protected:. voidNotSupported(const char* func) const. private:. TEveListTreeItem(const TEveListTreeItem&); TEveListTreeItem&operator=(const TEveListTreeItem&). Data Members; protected:. TGClient*TGListTreeItem::fClientpointer to TGClient; Int_tTGListTreeItem::fDNDStateEDNDFlags; TEveElement*fElement; TGListTreeItem*TGListTreeItem::fFirstchildpointer to first child item; UInt_tTGListTreeItem::fHeightitem height; TGListTreeItem*TGListTreeItem::fLastchildpointer to last child item; TGListTreeItem*TGListTreeItem::fNextsiblingpointer to next sibling; Bool_tTGListTreeItem::fOpentrue if item is open; TGListTreeItem*TGListTreeItem::fParentpointer to parent; TGListTreeItem*TGListTreeItem::fPrevsiblingpointer to previous sibling; Int_tTGListTreeItem::fXtextx position of item text; Int_tTGListTreeItem::fYy position of item; Int_tTGListTreeItem::fYtexty position of item text. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void NotSupported(const char* func) const; Warn about access to function members that should never be called.; TGListTree calls them in cases that are not used by Eve. Pixel_t GetActiveColor() const; Return highlight color corresponding to current state of TEveElement. void Toggle(); Item's check-box state has been toggled ... forward to element's; render-state. TEveListTreeItem(const TEveListTreeItem& ). TEveListTreeItem& operator=(const TEveListTreeItem& ). TEveListTreeItem(TEveElement* el); {}. virtual ~TEveListTreeItem(); {}. Bool_t IsActive() const; { return fElement->GetSelectedLevel() != 0; }. void SetActive(Bool_t ); { NotSupported(""SetActive""); }. const char * GetText() const; { return fElement->GetElementName(); }. Int_t GetTextLength() const; { return strlen(fElement->GetElementName()); }. const char * GetTipText() const; { return fElement->GetElementTitle(); }. Int_t GetTipTextLength() const; { return strlen(fElement->GetEl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveListTreeItem.html:3774,Inherit,Inheritance,3774,root/html532/TEveListTreeItem.html,https://root.cern,https://root.cern/root/html532/TEveListTreeItem.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtualBranchBrowsable::GetBranch() const; static Int_tGetBrowsables(TList& list, const TBranch* branch, const TVirtualBranchBrowsable* parent = 0); TClass*TVirtualBranchBrowsable::GetClassType() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TMethodBrowsable::GetIconName() const; TList*TVirtualBranchBrowsable::GetLeaves() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TVirtualBranchBrowsable*TVirtualBranchBrowsable::GetParent() const; voidTVirtualBranchBrowsable::GetScope(TString& scope) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTVirtualBranchBrowsable::IsFolder() const; static Bool_tTMethodBrowsable::IsMethodBrowsable(const TMethod* m); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCollectionMethodBrowsable.html:4816,Inherit,InheritsFrom,4816,root/html532/TCollectionMethodBrowsable.html,https://root.cern,https://root.cern/root/html532/TCollectionMethodBrowsable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtualBranchBrowsable::GetBranch() const; static Int_tGetBrowsables(TList& list, const TBranch* branch, const TVirtualBranchBrowsable* parent = 0); TClass*TVirtualBranchBrowsable::GetClassType() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TMethodBrowsable::GetIconName() const; TList*TVirtualBranchBrowsable::GetLeaves() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TVirtualBranchBrowsable*TVirtualBranchBrowsable::GetParent() const; voidTVirtualBranchBrowsable::GetScope(TString& scope) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTVirtualBranchBrowsable::IsFolder() const; static Bool_tTMethodBrowsable::IsMethodBrowsable(const TMethod* m); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCollectionMethodBrowsable.html:4753,Inherit,InheritsFrom,4753,root/html602/TCollectionMethodBrowsable.html,https://root.cern,https://root.cern/root/html602/TCollectionMethodBrowsable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"rtualCollectionProxy &proxy);  ; Int_t UseCache (TBuffer &b, void *addr, const TConfiguration *conf);  ; Int_t UseCacheGenericCollection (TBuffer &b, void *, const void *, const TLoopConfiguration *loopconfig, const TConfiguration *conf);  ; Int_t UseCacheVectorLoop (TBuffer &b, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *conf);  ; Int_t UseCacheVectorPtrLoop (TBuffer &b, void *start, const void *end, const TConfiguration *conf);  ; template<typename T > ; Int_t WriteBasicType (TBuffer &buf, void *addr, const TConfiguration *config);  ; Int_t WriteLoopInvalid (TBuffer &, void *, const void *, const TConfiguration *config);  ; template<bool kIsTextT> ; Int_t WriteSTLp (TBuffer &buf, void *addr, const TConfiguration *config);  Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text streaming. ;  ; template<bool kIsTextT> ; Int_t WriteStreamerLoop (TBuffer &buf, void *addr, const TConfiguration *config);  Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text streaming. ;  ; Int_t WriteTextBaseClass (TBuffer &buf, void *addr, const TConfiguration *config);  ; Int_t WriteTextStreamer (TBuffer &buf, void *addr, const TConfiguration *config);  ; Int_t WriteTextTNamed (TBuffer &buf, void *addr, const TConfiguration *config);  ; Int_t WriteTextTObject (TBuffer &buf, void *addr, const TConfiguration *config);  . Typedef Documentation. ◆ ActionContainer_t. typedef std::vector<TConfiguredAction> TStreamerInfoActions::ActionContainer_t. Definition at line 176 of file TStreamerInfoActions.h. ◆ Next_t. typedef TVirtualCollectionProxy::Next_t TStreamerInfoActions::Next_t. Definition at line 68 of file TStreamerInfoActions.h. ◆ TIDs. using TStreamerInfoActions::TIDs = typedef std::vector<TIDNode>. Definition at line 138 of file TStreamerInfoActions.h. ◆ TStreamerInfoAction_t. typedef Int_t(* TStreamerInfoActions::TStreamerInfoAction_t) (TBuffer &buf, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTStreamerInfoActions.html:6721,config,config,6721,doc/master/namespaceTStreamerInfoActions.html,https://root.cern,https://root.cern/doc/master/namespaceTStreamerInfoActions.html,1,['config'],['config']
Modifiability,"rtualFitter*TVirtualFitter::fgFitterCurrent fitter (default TFitter); static Int_tTVirtualFitter::fgMaxiterMaximum number of iterations; static Int_tTVirtualFitter::fgMaxparMaximum number of fit parameters for current fitter; static Double_tTVirtualFitter::fgPrecisionmaximum precision. private:. vector<double>fCovarcached covariance matrix (NxN); auto_ptr<ROOT::Fit::FitData>fFitData! data of the fit (managed by TBackCompFitter); auto_ptr<ROOT::Fit::Fitter>fFitter! pointer to fitter object (managed by TBackCompFitter); ROOT::Math::Minimizer*fMinimizer; ROOT::Math::IParamMultiFunction*fModelFunc; ROOT::Math::IMultiGenFunction*fObjFunc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBackCompFitter(); Constructur needed by TVirtualFitter interface. Same behavior as default constructor.; initialize setting name and the global pointer. TBackCompFitter(auto_ptr<ROOT::Fit::Fitter> fitter, auto_ptr<ROOT::Fit::FitData> data); constructor used after having fit using directly ROOT::Fit::Fitter; will create a dummy fitter copying configuration and parameter settings. ~TBackCompFitter(); data are own here; if (fFitData) delete fFitData;. Double_t Chisquare(Int_t npar, Double_t* params) const; do chisquare calculations in case of likelihood fits; do evaluation a the minimum only. void Clear(Option_t* option = """"); clear resources for consecutive fits. Int_t ExecuteCommand(const char* command, Double_t* args, Int_t nargs); execute the command (Fortran Minuit compatible interface). bool ValidParameterIndex(int ipar) const; check if ipar is a valid parameter index. void FixParameter(Int_t ipar); fix the paramter; std::cout<<""FixParameter""<<std::endl;. void GetConfidenceIntervals(Int_t n, Int_t ndim, const Double_t* x, Double_t* ci, Double_t cl = 0.94999999999999996); Computes point-by-point confidence intervals for the fitted function; Parameters:; n - number of points; ndim - dimensions of points; x - points, at which to compute the interv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBackCompFitter.html:13109,config,configuration,13109,root/html602/TBackCompFitter.html,https://root.cern,https://root.cern/root/html602/TBackCompFitter.html,2,['config'],['configuration']
Modifiability,"rtualFitter::fYlastlast bin on Y axis; Int_tTVirtualFitter::fZfirstfirst bin on Z axis; Int_tTVirtualFitter::fZlastlast bin on Z axis; static TStringTVirtualFitter::fgDefaultname of the default fitter (""Minuit"",""Fumili"",etc); static Double_tTVirtualFitter::fgErrorDefError definition (default=1); static TVirtualFitter*TVirtualFitter::fgFitterCurrent fitter (default TFitter); static Int_tTVirtualFitter::fgMaxiterMaximum number of iterations; static Int_tTVirtualFitter::fgMaxparMaximum number of fit parameters for current fitter; static Double_tTVirtualFitter::fgPrecisionmaximum precision. private:. vector<double>fCovarcached covariance matrix (NxN); auto_ptr<ROOT::Fit::FitData>fFitData! data of the fit (managed by TBackCompFitter); auto_ptr<ROOT::Fit::Fitter>fFitter! pointer to fitter object (managed by TBackCompFitter); ROOT::Math::Minimizer*fMinimizer; ROOT::Math::IParametricFunctionMultiDim*fModelFunc; ROOT::Math::IBaseFunctionMultiDim*fObjFunc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBackCompFitter(); Constructur needed by TVirtualFitter interface. Same behavior as default constructor.; initialize setting name and the global pointer. TBackCompFitter(auto_ptr<ROOT::Fit::Fitter> fitter, auto_ptr<ROOT::Fit::FitData> data); constructor used after having fit using directly ROOT::Fit::Fitter; will create a dummy fitter copying configuration and parameter settings. ~TBackCompFitter(); data are own here; if (fFitData) delete fFitData;. Double_t Chisquare(Int_t npar, Double_t* params) const; do chisquare calculations in case of likelihood fits; do evaluation a the minimum only. void Clear(Option_t* option = """"); clear resources for consecutive fits. Int_t ExecuteCommand(const char* command, Double_t* args, Int_t nargs); execute the command (Fortran Minuit compatible interface). bool ValidParameterIndex(int ipar) const; check if ipar is a valid parameter index. void FixParameter(Int_t ipar); fix the paramter; std::cout<<""Fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBackCompFitter.html:12053,Inherit,Inheritance,12053,root/html532/TBackCompFitter.html,https://root.cern,https://root.cern/root/html532/TBackCompFitter.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtualGLProxy.cxx:39; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TNtuple.h; TParallelCoordRange.h; TParallelCoordVar.h; TParallelCoord.h; gROOT#define gROOTDefinition TROOT.h:406; TRandom.h; TStyle.h; gPad#define gPadDefinition TVirtualPad.h:308; TCanvasThe Canvas class.Definition TCanvas.h:23; TColorThe color creation and management class.Definition TColor.h:21; TColor::GetColorstatic Int_t GetColor(const char *hexcolor)Static method returning color number for color specified by hex color string of form: ""#rrggbb"",...Definition TColor.cxx:1920; TColor::SetAlphavirtual void SetAlpha(Float_t a)Definition TColor.h:70; TList::FindObjectTObject * FindObject(const char *name) const overrideFind an object in this list using its name.Definition TList.cxx:576; TNtupleA simple TTree restricted to a list of float variables only.Definition TNtuple.h:28; TObject::FindObjectvirtual TObject * FindObject(const char *name) constMust be redefined in derived classes.Definition TObject.cxx:408; TParallelCoordVarTParallelCoord axes.Definition TParallelCoordVar.h:24; TParallelCoordVar::SetHistogramHeightvoid SetHistogramHeight(Double_t h=0)Set the height of the bar histogram.Definition TParallelCoordVar.cxx:892; TParallelCoordVar::Drawvoid Draw(Option_t *option="""") overrideDraw the axis.Definition TParallelCoordVar.cxx:150; TParallelCoordParallel Coordinates class.Definition TParallelCoord.h:28; TParallelCoord::SetLineColorvoid SetLineColor(Color_t col)Definition TParallelCoord.h:127; TParallelCoord::GetVarListTList * GetVarList()Definition TParallelCoord.h:102; TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gl_2parallelcoordtrans_8C.html:5720,variab,variables,5720,doc/master/gl_2parallelcoordtrans_8C.html,https://root.cern,https://root.cern/doc/master/gl_2parallelcoordtrans_8C.html,2,['variab'],['variables']
Modifiability,"rtualGeoPainter::GeoPainter(); virtual voidGetBombFactors(Double_t& bombx, Double_t& bomby, Double_t& bombz, Double_t& bombr) const; virtual Int_tGetBombMode() const; virtual TGeoNode*GetCheckedNode(); TGeoChecker*GetChecker(); virtual Int_tGetColor(Int_t base, Float_t light) const; virtual TGeoVolume*GetDrawnVolume() const; virtual Option_t*TObject::GetDrawOption() const; virtual const char*GetDrawPath() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNsegments() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual TGeoVolume*GetTopVolume() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidGetViewAngles(Double_t& longitude, Double_t& latitude, Double_t& psi); virtual Double_t*GetViewBox(); virtual Int_tGetVisLevel() const; virtual Int_tGetVisOption() const; virtual const char*GetVolumeInfo(const TGeoVolume* volume, Int_t px, Int_t py) const; virtual voidGrabFocus(Int_t nfr = 0, Double_t dlong = 0, Double_t dlat = 0, Double_t dpsi = 0); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsExplodedView() const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsPaintingShape() const; virtual Bool_tIsRaytracing() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual TH2F*LegoPlot(Int_t ntheta = 60, Double_t themin = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPainter.html:5250,Inherit,InheritsFrom,5250,root/html532/TGeoPainter.html,https://root.cern,https://root.cern/root/html532/TGeoPainter.html,8,['Inherit'],['InheritsFrom']
Modifiability,"rtualIndex*fTreeIndexPointer to the tree Index (if any); Int_tfUpdateUpdate frequency for EntryLoop; TList*fUserInfopointer to a list of user objects associated to this Tree; Double_tfWeightTree weight (see TTree::SetWeight); Long64_tfZipBytesTotal number of bytes in all branches after compression; static Int_tfgBranchStyleOld/New branch style; static Long64_tfgMaxTreeSizeMaximum size of a file containg a Tree; static TTree::ELockStatusBitskFindBranch; static TTree::ELockStatusBitskFindLeaf; static TTree::ELockStatusBitskGetAlias; static TTree::ELockStatusBitskGetBranch; static TTree::ELockStatusBitskGetEntry; static TTree::ELockStatusBitskGetEntryWithIndex; static TTree::ELockStatusBitskGetFriend; static TTree::ELockStatusBitskGetFriendAlias; static TTree::ELockStatusBitskGetLeaf; static TTree::ELockStatusBitskLoadTree; static TTree::ELockStatusBitskPrint; static TTree::ELockStatusBitskRemoveFriend; static TTree::ELockStatusBitskSetBranchStatus. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTree(); Default constructor and I/O constructor. Note: We do *not* insert ourself into the current directory. TTree(const char* name, const char* title, Int_t splitlevel = 99); Normal tree constructor. The tree is created in the current directory.; Use the various functions Branch below to add branches to this tree. If the first character of title is a ""/"", the function assumes a folder name.; In this case, it creates automatically branches following the folder hierarchy.; splitlevel may be used in this case to control the split level. ~TTree(); Destructor. TBuffer* GetTransientBuffer(Int_t size); Returns the transient buffer currently used by this TTree for reading/writing baskets. Int_t AddBranchToCache(const char* bname, Bool_t subbranches = kFALSE); Add branch with name bname to the Tree cache.; If bname=""*"" all branches are added to the cache.; if subbranches is true all the branches of the subbranches are; also put to the cache.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTree.html:36807,Inherit,Inheritance,36807,root/html604/TTree.html,https://root.cern,https://root.cern/root/html604/TTree.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtualStreamerInfo(); Destructor. Bool_t CanDelete(); static function returning true if ReadBuffer can delete object. Bool_t CanOptimize(); static function returning true if optimization can be on. const char * GetElementCounterStart(const char* dmTitle); Given a comment/title declaring an array counter, for example:; //[fArraySize] array of size fArraySize; return the start of the array dimension declaration start in the string; (so the location of the 'f'. TStreamerBasicType * GetElementCounter(const char* countName, TClass* cl); Get pointer to a TStreamerBasicType in TClass *cl; static function. Bool_t GetStreamMemberWise(); Return whether the TStreamerInfos will save the collections in; ""member-wise"" order whenever possible. The default is to store member-wise.; kTRUE indicates member-wise storing; kFALSE inddicates object-wise storing. A collection can be saved member wise when it contain is guaranteed to be; homogeneous. For example std::vector<THit> can be stored member wise,; while std::vector<THit*> can not (possible use of polymorphism). void Optimize(Bool_t opt = kTRUE); This is a static function.; Set optimization option.; When this option is activated (default), consecutive data members; of the same type are merged into an array (faster).; Optimization must be off in TTree split mode. TVirtualStreamerInfo * Factory(); Static function returning a pointer to a new TVirtualStreamerInfo object.; If the Info factory does not exist, it is created via the plugin manager.; In reality the factory is an empty TStreamerInfo object. void SetCanDelete(Bool_t opt = kTRUE); This is a static function.; Set object delete option.; When this option is activated (default), ReadBuffer automatically; delete objects when a data member is a pointer to an object.; If your constructor is not presetting pointers to 0, you must; call this static function TStreamerInfo::SetCanDelete(kFALSE);. void SetFactory(TVirtualStreamerInfo* factory); static function: Set the StreamerInfo factor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualStreamerInfo.html:13645,polymorphi,polymorphism,13645,root/html602/TVirtualStreamerInfo.html,https://root.cern,https://root.cern/root/html602/TVirtualStreamerInfo.html,4,['polymorphi'],['polymorphism']
Modifiability,"rtual~MethodBDT(); voidTObject::AbstractMethod(const char* method) const; voidTMVA::Configurable::AddOptionsXMLTo(void* parent) const; voidTMVA::MethodBase::AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType analysisType); virtual voidAddWeightsXMLTo(void* parent) const; virtual voidTObject::AppendPad(Option_t* option = """"); TDirectory*TMVA::MethodBase::BaseDir() const; Double_tBoost(vector<const TMVA::Event*>&, TMVA::DecisionTree* dt, UInt_t cls = 0); virtual voidTObject::Browse(TBrowser* b); voidTMVA::Configurable::CheckForUnusedOptions() const; virtual voidTMVA::MethodBase::CheckSetup(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; TMVA::ConfigurableTMVA::Configurable::Configurable(const TString& theOption = """"); TMVA::ConfigurableTMVA::Configurable::Configurable(const TMVA::Configurable&); virtual voidTObject::Copy(TObject& object) const; virtual const TMVA::Ranking*CreateRanking(); TMVA::DataSet*TMVA::MethodBase::Data() const; TMVA::DataSetInfo&TMVA::MethodBase::DataInfo() const; virtual voidDeclareOptions(); virtual voidTObject::Delete(Option_t* option = """")MENU ; voidTMVA::MethodBase::DisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBDT.html:5077,Config,Configurable,5077,root/html602/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBDT.html,2,['Config'],['Configurable']
Modifiability,"rtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxybeta; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxygamma; RooRealProxymu; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooGamma(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _gamma, RooAbsReal& _beta, RooAbsReal& _mu). RooGamma(const RooGamma& other, const char* name = 0). Double_t evaluate() const. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const. void generateEvent(Int_t code). RooGamma(); {}. TObject* clone(const char* newname) const; { return new RooGamma(*this,newname); }. virtual ~RooGamma(); { }. » Last changed: Tue Jun 2 15:31:11 2015 » Last generated: 2015-06-02 15:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooGamma.html:44597,Inherit,Inheritance,44597,root/html604/RooGamma.html,https://root.cern,https://root.cern/root/html604/RooGamma.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,unsigned int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:15:2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html:36648,Inherit,Inheritance,36648,root/html534/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:15:2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html:36648,Inherit,Inheritance,36648,root/html534/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ruct timespec now_mt;; 16465 md5_byte_t ssl_context_id[16];; 16466 md5_state_t md5state;; 16467 int protocol_ver;; 16468 int ssl_cache_timeout;; 16469 ; 16470#if (defined(OPENSSL_API_1_1) || defined(OPENSSL_API_3_0)) \; 16471 && !defined(NO_SSL_DL); 16472 if ((dom_ctx->ssl_ctx = SSL_CTX_new(TLS_server_method())) == NULL) {; 16473 mg_cry_ctx_internal(phys_ctx,; 16474 ""SSL_CTX_new (server) error: %s"",; 16475 ssl_error());; 16476 return 0;; 16477 }; 16478#else; 16479 if ((dom_ctx->ssl_ctx = SSL_CTX_new(SSLv23_server_method())) == NULL) {; 16480 mg_cry_ctx_internal(phys_ctx,; 16481 ""SSL_CTX_new (server) error: %s"",; 16482 ssl_error());; 16483 return 0;; 16484 }; 16485#endif /* OPENSSL_API_1_1 || OPENSSL_API_3_0 */; 16486 ; 16487#if defined(SSL_OP_NO_TLSv1_3); 16488 SSL_CTX_clear_options(dom_ctx->ssl_ctx,; 16489 SSL_OP_NO_SSLv2 | SSL_OP_NO_SSLv3 | SSL_OP_NO_TLSv1; 16490 | SSL_OP_NO_TLSv1_1 | SSL_OP_NO_TLSv1_2; 16491 | SSL_OP_NO_TLSv1_3);; 16492#else; 16493 SSL_CTX_clear_options(dom_ctx->ssl_ctx,; 16494 SSL_OP_NO_SSLv2 | SSL_OP_NO_SSLv3 | SSL_OP_NO_TLSv1; 16495 | SSL_OP_NO_TLSv1_1 | SSL_OP_NO_TLSv1_2);; 16496#endif; 16497 ; 16498 protocol_ver = atoi(dom_ctx->config[SSL_PROTOCOL_VERSION]);; 16499 SSL_CTX_set_options(dom_ctx->ssl_ctx, ssl_get_protocol(protocol_ver));; 16500 SSL_CTX_set_options(dom_ctx->ssl_ctx, SSL_OP_SINGLE_DH_USE);; 16501 SSL_CTX_set_options(dom_ctx->ssl_ctx, SSL_OP_CIPHER_SERVER_PREFERENCE);; 16502 SSL_CTX_set_options(dom_ctx->ssl_ctx,; 16503 SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION);; 16504 SSL_CTX_set_options(dom_ctx->ssl_ctx, SSL_OP_NO_COMPRESSION);; 16505 ; 16506#if defined(SSL_OP_NO_RENEGOTIATION); 16507 SSL_CTX_set_options(dom_ctx->ssl_ctx, SSL_OP_NO_RENEGOTIATION);; 16508#endif; 16509 ; 16510#if !defined(NO_SSL_DL); 16511 SSL_CTX_set_ecdh_auto(dom_ctx->ssl_ctx, 1);; 16512#endif /* NO_SSL_DL */; 16513 ; 16514 /* In SSL documentation examples callback defined without const; 16515 * specifier 'void (*)(SSL *, int, int)' See:; 16516 * https://www.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:487977,config,config,487977,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"ruct timespec now_mt;; 16466 md5_byte_t ssl_context_id[16];; 16467 md5_state_t md5state;; 16468 int protocol_ver;; 16469 int ssl_cache_timeout;; 16470 ; 16471#if (defined(OPENSSL_API_1_1) || defined(OPENSSL_API_3_0)) \; 16472 && !defined(NO_SSL_DL); 16473 if ((dom_ctx->ssl_ctx = SSL_CTX_new(TLS_server_method())) == NULL) {; 16474 mg_cry_ctx_internal(phys_ctx,; 16475 ""SSL_CTX_new (server) error: %s"",; 16476 ssl_error());; 16477 return 0;; 16478 }; 16479#else; 16480 if ((dom_ctx->ssl_ctx = SSL_CTX_new(SSLv23_server_method())) == NULL) {; 16481 mg_cry_ctx_internal(phys_ctx,; 16482 ""SSL_CTX_new (server) error: %s"",; 16483 ssl_error());; 16484 return 0;; 16485 }; 16486#endif /* OPENSSL_API_1_1 || OPENSSL_API_3_0 */; 16487 ; 16488#if defined(SSL_OP_NO_TLSv1_3); 16489 SSL_CTX_clear_options(dom_ctx->ssl_ctx,; 16490 SSL_OP_NO_SSLv2 | SSL_OP_NO_SSLv3 | SSL_OP_NO_TLSv1; 16491 | SSL_OP_NO_TLSv1_1 | SSL_OP_NO_TLSv1_2; 16492 | SSL_OP_NO_TLSv1_3);; 16493#else; 16494 SSL_CTX_clear_options(dom_ctx->ssl_ctx,; 16495 SSL_OP_NO_SSLv2 | SSL_OP_NO_SSLv3 | SSL_OP_NO_TLSv1; 16496 | SSL_OP_NO_TLSv1_1 | SSL_OP_NO_TLSv1_2);; 16497#endif; 16498 ; 16499 protocol_ver = atoi(dom_ctx->config[SSL_PROTOCOL_VERSION]);; 16500 SSL_CTX_set_options(dom_ctx->ssl_ctx, ssl_get_protocol(protocol_ver));; 16501 SSL_CTX_set_options(dom_ctx->ssl_ctx, SSL_OP_SINGLE_DH_USE);; 16502 SSL_CTX_set_options(dom_ctx->ssl_ctx, SSL_OP_CIPHER_SERVER_PREFERENCE);; 16503 SSL_CTX_set_options(dom_ctx->ssl_ctx,; 16504 SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION);; 16505 SSL_CTX_set_options(dom_ctx->ssl_ctx, SSL_OP_NO_COMPRESSION);; 16506 ; 16507#if defined(SSL_OP_NO_RENEGOTIATION); 16508 SSL_CTX_set_options(dom_ctx->ssl_ctx, SSL_OP_NO_RENEGOTIATION);; 16509#endif; 16510 ; 16511#if !defined(NO_SSL_DL); 16512 SSL_CTX_set_ecdh_auto(dom_ctx->ssl_ctx, 1);; 16513#endif /* NO_SSL_DL */; 16514 ; 16515 /* In SSL documentation examples callback defined without const; 16516 * specifier 'void (*)(SSL *, int, int)' See:; 16517 * https://www.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:488010,config,config,488010,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"ruct(), UInt_t option=0);  Create a check button widget. ;  ;  ~TGCheckButton () override;  Delete a check button. ;  ; Bool_t HandleCrossing (Event_t *event) override;  Handle mouse crossing event. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle key event. This function will be called when the hotkey is hit. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsDisabledAndSelected () const;  ; Bool_t IsDown () const override;  ; Bool_t IsOn () const override;  ; Bool_t IsToggleButton () const override;  ; virtual void SetDisabledAndSelected (Bool_t);  Set the state of a check button to disabled and either on or off. ;  ; void SetState (EButtonState state, Bool_t emit=kFALSE) override;  Set check button state. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTextButton;  TGTextButton (const TGWindow *p, const char *s, const char *cmd, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget and set cmd string at same time. ;  ;  TGTextButton (const TGWindow *p, TGHotString *s, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget. ;  ;  TGTextButton (const TGWindow *p=nullptr, const char *s=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget. ;  ;  ~TGTextButton () override;  Delete a text button widget. ;  ; void ChangeText (const char *title);  ; Int_t GetBottomMargin () const;  ; TGDimension GetDefaultSize () const override;  returns default size ;  ; FontStruct_t GetFontStruct () const;  ; Int_t GetLeftMargin () const;  ; Int_t GetRightMargin () const;  ; TString GetString () const;  ; cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedMarkerSelect.html:3326,inherit,inherited,3326,doc/master/classTGedMarkerSelect.html,https://root.cern,https://root.cern/doc/master/classTGedMarkerSelect.html,2,['inherit'],['inherited']
Modifiability,"ructed with default ctor? ;  ; std::unique_ptr< std::vector< double > > _weightBuffer;  ; RooRealVar * _wgtVar = nullptr;  . Static Private Attributes; static Int_t _defTreeBufSize = 10*1024*1024;  . Friends; class RooVectorDataStore;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from RooAbsDataStore; RooArgSet _cachedVars;  ; bool _doDirtyProp = true;  Switch do (de)activate dirty state propagation when loading a data point. ;  ; RooArgSet _vars;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooTreeDataStore.h>. Inheritance diagram for RooTreeDataStore:. This browser is not able to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTreeDataStore.html:22654,inherit,inherited,22654,doc/master/classRooTreeDataStore.html,https://root.cern,https://root.cern/doc/master/classRooTreeDataStore.html,1,['inherit'],['inherited']
Modifiability,"ructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; virtual void CheckCount (UInt_t);  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCompressLevel;  ! compress level used to minimize size of data in database ;  ; TSQLObjectData * fCurrentData;  ! ;  ; Int_t fErrorFlag;  ! Error id value ;  ; Long64_t fFirstObjId;  ! id of first object to be read from the database ;  ; Bool_t fIgnoreVerification;  ! ignore verification of names ;  ; Int_t fIOVersion;  ! I/O version from TSQLFile ;  ; Long64_t fLastObjId;  ! id of last object correspond to this key ;  ; TObjArray * fObjectsInfos;  ! array of objects info for selected key ;  ; Long64_t fObjIdCounter;  ! counter of objects id ;  ; TMap * fPoolsMap;  ! map of pools with data from different tables ;  ; TString fReadBuffer;  ! Buffer for read value ;  ; Int_t fReadVersionBuffer;  ! buffer, used to by ReadVersion method ;  ; TSQLFile * fSQL;  ! instance of TSQLFile ;  ; TSQLStructure * fStk;  ! pointer on current active stru",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferSQL2.html:43336,inherit,inherited,43336,doc/master/classTBufferSQL2.html,https://root.cern,https://root.cern/doc/master/classTBufferSQL2.html,1,['inherit'],['inherited']
Modifiability,"ructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; virtual void CheckCount (UInt_t);  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void * ConvertFromJSONChecked (const char *str, const TClass *expectedClass);  Read objects from JSON, one can reuse existing object. ;  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  . Protected Attributes; Int_t fArrayCompact {0};  ! 0 - no array compression, 1 - exclude leading/trailing zeros, 2 - check value repetition ;  ; TString fArraySepar;  ! depending from compression level, "", "" or "","" ;  ; Int_t fCompact {0};  ! 0 - no any compression, 1 - no spaces in the begin, 2 - no new lines, 3 - no spaces at all ;  ; unsigned fJsonrCnt {0};  ! counter for all objects, used for referencing ;  ; Bool_t fMapAsObject {kFALSE};  ! when true, std::map will be converted into JSON object ;  ; TString fNumericLoca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferJSON.html:48823,inherit,inherited,48823,doc/master/classTBufferJSON.html,https://root.cern,https://root.cern/doc/master/classTBufferJSON.html,1,['inherit'],['inherited']
Modifiability,"ructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; virtual void CheckCount (UInt_t);  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TXMLSetup; Int_t AtoI (const char *sbuf, Int_t def=0, const char *errinfo=nullptr);  converts string to integer. ;  ; const char * GetElItemName (TStreamerElement *el);  get item name for given element ;  ; Bool_t IsValidXmlSetup (const char *setupstr);  checks if string is valid setup ;  ; Bool_t ReadSetupFromStr (const char *setupstr);  get values from string ;  ; TClass * XmlDefineClass (const char *xmlClassName);  define class for the converted class name, where special symbols were replaced by '_' ;  . Static Protected Member Functions; static void * ConvertFromXMLChecked (const char *xml, const TClass *expectedClass, Bool_t GenericLayout=kFALSE, Bool_t UseNamespaces=kFALSE);  Convert from XML and check if object derived from specified class When possible, cast to given class. ;  ;  Static Protected Member Functions i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferXML.html:48390,inherit,inherited,48390,doc/master/classTBufferXML.html,https://root.cern,https://root.cern/doc/master/classTBufferXML.html,1,['inherit'],['inherited']
Modifiability,"ructor Documentation. ◆ TBranch() [1/4]. TBranch::TBranch ; (; const TBranch & ; ). privatedelete . ◆ TBranch() [2/4]. TBranch::TBranch ; (; ). Default constructor. Used for I/O by default. ; Definition at line 87 of file TBranch.cxx. ◆ TBranch() [3/4]. TBranch::TBranch ; (; TTree * ; tree, . const char * ; name, . void * ; address, . const char * ; leaflist, . Int_t ; basketsize = 32000, . Int_t ; compress = ROOT::RCompressionSetting::EAlgorithm::kInherit . ). Create a Branch as a child of a Tree. . address is the address of the first item of a structure or the address of a pointer to an object (see example in TTree.cxx).; leaflist is the concatenation of all the variable names and types separated by a colon character : The variable name and the variable type are separated by a slash (/). The variable type must be 1 character. (Characters after the first are legal and will be appended to the visible name of the leaf, but have no effect.) If no type is given, the type of the variable is assumed to be the same as the previous variable. If the first variable does not have a type, it is assumed of type F by default. The list of currently supported types is given below:; C : a character string terminated by the 0 character; B : an 8 bit signed integer (Char_t); Treated as a character when in an array.; b : an 8 bit unsigned integer (UChar_t); S : a 16 bit signed integer (Short_t); s : a 16 bit unsigned integer (UShort_t); I : a 32 bit signed integer (Int_t); i : a 32 bit unsigned integer (UInt_t); F : a 32 bit floating point (Float_t); f : a 24 bit floating point with truncated mantissa (Float16_t); D : a 64 bit floating point (Double_t); d : a 24 bit truncated floating point (Double32_t); L : a 64 bit signed integer (Long64_t); l : a 64 bit unsigned integer (ULong64_t); G : a long signed integer (Long_t, which sizeof is platform dependent), stored as a 64 bit integer but usually held in memory as a 64 bit integer on 64 bit machines and 32 bit on 32 bit machines. Due to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranch.html:29817,variab,variable,29817,doc/master/classTBranch.html,https://root.cern,https://root.cern/doc/master/classTBranch.html,2,['variab'],['variable']
Modifiability,"ructor and whose implementation; *-* should be similar to the implementation of the normal TFormula constructor; -; *-* This is necessary because the normal TFormula constructor call indirectly; *-* the virtual member functions Analyze, DefaultString, DefaultValue; *-* and DefaultVariable.; -; *-* The expected returns values are; *-* -2 : the name has been recognized but won't be usable; *-* -1 : the name has not been recognized; *-* >=0 : the name has been recognized, return the action parameter.; -; -. Double_t Eval(Double_t x, Double_t y = 0, Double_t z = 0, Double_t t = 0) const; Evaluate this formula*-*-*-*-*-*-; *-* =====================; -; *-* The current value of variables x,y,z,t is passed through x, y, z and t.; *-* The parameters used will be the ones in the array params if params is given; *-* otherwise parameters will be taken from the stored data members fParams; -; -. Double_t EvalParOld(const Double_t* x, const Double_t* params = 0); Evaluate this formula*-*-*-*-*-*-; *-* =====================; -; *-* The current value of variables x,y,z,t is passed through the pointer x.; *-* The parameters used will be the ones in the array params if params is given; *-* otherwise parameters will be taken from the stored data members fParams. /*. */. -; -; -. TString GetExpFormula(Option_t* option = """") const; Reconstruct the formula expression from*-*-; *-* the internal TFormula member variables; *-* =======================================; -; *-* This function uses the internal member variables of TFormula to; *-* construct the mathematical expression associated with the TFormula; *-* instance. This function can be used to get an expanded version of the; *-* expression originally assigned to the TFormula instance, i.e. that; *-* the string returned by GetExpFormula() doesn't depend on other; *-* TFormula object names.; -; *-* if option contains ""p"" the returned string will contain the formula; *-* expression with symbolic parameters, eg [0] replaced by the actual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFormula.html:26322,variab,variables,26322,root/html528/TFormula.html,https://root.cern,https://root.cern/root/html528/TFormula.html,4,['variab'],['variables']
Modifiability,"ructor for fix bin size 2-D histograms. ;  ; virtual Int_t BufferFill (Double_t x, Double_t y, Double_t w);  accumulate arguments in buffer. ;  ; Int_t BufferFill (Double_t, Double_t) override;  accumulate arguments in buffer. ;  ; virtual void DoFitSlices (bool onX, TF1 *f1, Int_t firstbin, Int_t lastbin, Int_t cut, Option_t *option, TObjArray *arr);  ; virtual TProfile * DoProfile (bool onX, const char *name, Int_t firstbin, Int_t lastbin, Option_t *option) const;  ; virtual TH1D * DoProjection (bool onX, const char *name, Int_t firstbin, Int_t lastbin, Option_t *option) const;  Internal (protected) method for performing projection on the X or Y axis called by ProjectionX or ProjectionY. ;  ; virtual TH1D * DoQuantiles (bool onX, const char *name, Double_t prob) const;  Implementation of quantiles for x or y. ;  ;  Protected Member Functions inherited from TH1;  TH1 ();  Histogram default constructor. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Constructor for variable bin size histograms using an input array of type double. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Constructor for variable bin size histograms using an input array of type float. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Constructor for fix bin size histograms. ;  ; virtual Int_t AutoP2FindLimits (Double_t min, Double_t max);  Buffer-based estimate of the histogram range using the power of 2 algorithm. ;  ; Int_t AxisChoice (Option_t *axis) const;  Choose an axis according to ""axis"". ;  ; virtual void DoFillN (Int_t ntimes, const Double_t *x, const Double_t *w, Int_t stride=1);  Internal method to fill histogram content from a vector called directly by TH1::BufferEmpty. ;  ; virtual Double_t DoIntegral (Int_t ix1, Int_t ix2, Int_t iy1, Int_t iy2, Int_t iz1, Int_t iz2, Double_t &err, Option_t *opt, Bool_t doerr=kFALSE) const;  Internal function compute integral and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Poly.html:56528,variab,variable,56528,doc/master/classTH2Poly.html,https://root.cern,https://root.cern/doc/master/classTH2Poly.html,2,['variab'],['variable']
Modifiability,"ructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; virtual RooFit::OwningPtr< RooArgSet > actualObservables (const RooArgSet &nset) const =0;  ; virtual RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const =0;  ; virtual const char * binningName () const;  ; std::string cacheNameSuffix (const RooArgSet &nset) const;  Construct string with unique suffix for cache objects based on observable names that define cache configuration. ;  ; virtual PdfCacheElem * createCache (const RooArgSet *nset) const;  ; void disableCache (bool flag);  ; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; virtual void fillCacheObject (PdfCacheElem &cache) const =0;  ; PdfCacheElem * getCache (const RooArgSet *nset, bool recalculate=true) const;  Retrieve cache object associated with given choice of observables. ;  ; virtual TString histNameSuffix () const;  ; virtual const char * inputBaseName () const =0;  ; virtual const char * payloadUniqueSuffix () const;  ; virtual RooAbsArg & pdfObservable (RooAbsArg &histObservable) const;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCachedPdf.html:63025,config,configuration,63025,doc/master/classRooAbsCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsCachedPdf.html,1,['config'],['configuration']
Modifiability,"ructor with column ""col"" of matrix. ;  ; virtual ~TMatrixTColumn_const ();  ; Int_t GetColIndex () const;  ; Int_t GetInc () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; const Element * GetPtr () const;  ; const Element & operator() (Int_t i) const;  ; TMatrixTColumn_const< Element > & operator= (const TMatrixTColumn_const< Element > &trc);  ; const Element & operator[] (Int_t i) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTColumn_const< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMatrixTColumn_const< Element >; Int_t fColInd;  ; Int_t fInc;  ; const TMatrixTBase< Element > * fMatrix;  ; const Element * fPtr;  . #include <TMatrixTUtils.h>. Inheritance diagram for TMatrixTColumn< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMatrixTColumn() [1/4]. template<class Element > . TMatrixTColumn< Element >::TMatrixTColumn ; (; ). inline . Definition at line 252 of file TMatrixTUtils.h. ◆ TMatrixTColumn() [2/4]. template<class Element > . TMatrixTColumn< Element >::TMatrixTColumn ; (; TMatrixT< Element > & ; matrix, . Int_t ; col . ). Constructor with column ""col"" of matrix. ; Definition at line 296 of file TMatrixTUtils.cxx. ◆ TMatrixTColumn() [3/4]. template<class Element > . TMatrixTColumn< Element >::TMatrixTColumn ; (; TMatrixTSym< Element > & ; matrix, . Int_t ; col . ). Constructor with column ""col"" of matrix. ; Definition at line 305 of file TMatrixTUtils.cxx. ◆ TMatrixTColumn() [4/4]. templ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTColumn.html:3370,inherit,inherited,3370,doc/master/classTMatrixTColumn.html,https://root.cern,https://root.cern/doc/master/classTMatrixTColumn.html,1,['inherit'],['inherited']
Modifiability,"ructor. ; Definition at line 38 of file TEnumConstant.cxx. Member Function Documentation. ◆ Class(). static TClass * TEnumConstant::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEnumConstant::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TEnumConstant::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 46 of file TEnumConstant.h. ◆ DeclFileName(). static const char * TEnumConstant::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 46 of file TEnumConstant.h. ◆ GetAddress(). void * TEnumConstant::GetAddress ; (; ); const. inlineoverridevirtual . Return address of global. ; Reimplemented from TGlobal.; Definition at line 39 of file TEnumConstant.h. ◆ GetFullTypeName(). const char * TEnumConstant::GetFullTypeName ; (; ); const. inlineoverridevirtual . Get full type description of global variable, e,g.: ""class TDirectory*"". ; Reimplemented from TGlobal.; Definition at line 44 of file TEnumConstant.h. ◆ GetType(). const TEnum * TEnumConstant::GetType ; (; ); const. inline . Definition at line 41 of file TEnumConstant.h. ◆ GetTypeName(). const char * TEnumConstant::GetTypeName ; (; ); const. inlineoverridevirtual . Get type of global variable, e,g.: ""class TDirectory*"" -> ""TDirectory"". ; Result needs to be used or copied immediately. ; Reimplemented from TGlobal.; Definition at line 43 of file TEnumConstant.h. ◆ GetValue(). Long64_t TEnumConstant::GetValue ; (; ); const. inline . Definition at line 40 of file TEnumConstant.h. ◆ IsA(). TClass * TEnumConstant::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDictionary.; Definition at line 46 of file TEnumConstant.h. ◆ Streamer(). void TEnumConstant::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnumConstant.html:16477,variab,variable,16477,doc/master/classTEnumConstant.html,https://root.cern,https://root.cern/doc/master/classTEnumConstant.html,1,['variab'],['variable']
Modifiability,"ructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; virtual void IconifyWindow ();  iconify window ;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionViewer.html:18736,inherit,inherited,18736,doc/master/classTSessionViewer.html,https://root.cern,https://root.cern/doc/master/classTSessionViewer.html,2,['inherit'],['inherited']
Modifiability,"ructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction & func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction & func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fDim; }. bool ProvidesError",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__GSLSimAnMinimizer.html:6313,variab,variable,6313,root/html526/ROOT__Math__GSLSimAnMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__GSLSimAnMinimizer.html,1,['variab'],['variable']
Modifiability,"ructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction & func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction & func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fValues.size(); }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total number of free parameters. { return fObjFunc->",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__GSLMinimizer.html:6857,variab,variable,6857,root/html526/ROOT__Math__GSLMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__GSLMinimizer.html,1,['variab'],['variable']
Modifiability,"ructure; Int_tTFile::fNbytesInfoNumber of bytes for StreamerInfo record; Int_tTDirectoryFile::fNbytesKeysNumber of bytes for the keys; Int_tTDirectoryFile::fNbytesNameNumber of bytes in TNamed at creation time; Bool_tTFile::fNoAnchorInName!True if we don't want to force the anchor to be appended to the file name; Long64_tTFile::fOffset!Seek offset cache; TList*TFile::fOpenPhases!Time info about open phases; TStringTFile::fOptionFile options; const char**fOtherTypes! pointer on list of other SQL types like TEXT or blob; TStringTDirectory::fPathBuffer!Buffer for GetPath() function; TObjArray*TFile::fProcessIDs!Array of pointers to TProcessIDs; Int_tfQuerisCounter! how many query was applied; Int_tTFile::fReadCallsNumber of read calls ( not counting the cache calls ); TStringTFile::fRealNameEffective real file name (not original url); TSQLServer*fSQL! interface to SQL database; TList*fSQLClassInfos! list of SQL class infos; Int_tfSQLIOversion! version of SQL I/O which is stored in configurations; Long64_tTDirectoryFile::fSeekDirLocation of directory on file; Long64_tTFile::fSeekFreeLocation on disk of free segments structure; Long64_tTFile::fSeekInfoLocation on disk of StreamerInfo record; Long64_tTDirectoryFile::fSeekKeysLocation of Keys record on file; Long64_tTDirectoryFile::fSeekParentLocation of parent directory on file; Int_tfStmtCounter! count numbers of active statements; Double_tTFile::fSum2BufferSum of squares of buffer sizes of objects written so far; Double_tTFile::fSumBufferSum of buffer sizes of objects written so far; TStringfTablesType! type, used in CREATE TABLE statements; TStringTNamed::fTitleobject title; TUUIDTDirectory::fUUIDUnique identifier; Char_tTFile::fUnitsNumber of bytes for file pointers; TUrlTFile::fUrl!URL of file; Int_tfUseIndexes! use indexes for tables: 0 - off, 1 - only for basic tables, 2 + normal class tables, 3 - all tables; Bool_tfUseSuffixes! use suffixes in column names like fValue:Int_t or fObject:pointer; Int_tfUseTransactions",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSQLFile.html:32608,config,configurations,32608,root/html602/TSQLFile.html,https://root.cern,https://root.cern/root/html602/TSQLFile.html,4,['config'],['configurations']
Modifiability,"rue if region is not set. ;  ; Bool_t operator!= (const TGRegion &r) const;  ; TGRegion operator& (const TGRegion &r) const;  ; TGRegion & operator&= (const TGRegion &r);  ; TGRegion operator+ (const TGRegion &r) const;  ; TGRegion & operator+= (const TGRegion &r);  ; TGRegion operator- (const TGRegion &r) const;  ; TGRegion & operator-= (const TGRegion &r);  ; TGRegion & operator= (const TGRegion &r);  Region assignment operator. ;  ; Bool_t operator== (const TGRegion &r) const;  Region == operator. ;  ; TGRegion operator^ (const TGRegion &r) const;  ; TGRegion & operator^= (const TGRegion &r);  ; TGRegion operator| (const TGRegion &r) const;  ; TGRegion & operator|= (const TGRegion &r);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TGRegion Subtract (const TGRegion &r) const;  Returns a region which is r subtracted from this region. ;  ; TGRegion Unite (const TGRegion &r) const;  Return the union of this region with r. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRegionWithId.html:3894,inherit,inherited,3894,doc/master/classTGRegionWithId.html,https://root.cern,https://root.cern/doc/master/classTGRegionWithId.html,1,['inherit'],['inherited']
Modifiability,"rue if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void SetDefaultPrefix (const char *pfx);  Static method to set the default prefix. ;  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASLogHandler.html:13094,inherit,inherited,13094,doc/master/classTASLogHandler.html,https://root.cern,https://root.cern/doc/master/classTASLogHandler.html,3,['inherit'],['inherited']
Modifiability,"rue);; 871 ; 872 // Make a deep-clone of ourself so later operations do not disturb our original state; 873 cloneSet = new RooArgSet;; 874 if (RooArgSet(*this).snapshot(*cloneSet, true)) {; 875 coutE(Plotting) << ""RooAbsPdf::createPlotProjection("" << GetName() << "") Couldn't deep-clone PDF, abort,"" << std::endl ;; 876 return nullptr ;; 877 }; 878 RooAbsReal *theClone= static_cast<RooAbsReal*>(cloneSet->find(GetName()));; 879 ; 880 // The remaining entries in our list of leaf nodes are the external; 881 // dependents (x) and parameters (p) of the projection. Patch them back; 882 // into the theClone. This orphans the nodes they replace, but the orphans; 883 // are still in the cloneList and so will be cleaned up eventually.; 884 //cout << ""redirection leafNodes : "" ; leafNodes.Print(""1"") ;; 885 ; 886 std::unique_ptr<RooArgSet> plotLeafNodes{leafNodes.selectCommon(dependentVars)};; 887 theClone->recursiveRedirectServers(*plotLeafNodes,false,false,false);; 888 ; 889 // Create the set of normalization variables to use in the projection integrand; 890 RooArgSet normSet(dependentVars);; 891 if(nullptr != projectedVars) normSet.add(*projectedVars);; 892 if(nullptr != condObs) {; 893 normSet.remove(*condObs,true,true) ;; 894 }; 895 ; 896 // Try to create a valid projection integral. If no variables are to be projected,; 897 // create a null projection anyway to bind our normalization over the dependents; 898 // consistently with the way they would be bound with a non-trivial projection.; 899 RooArgSet empty;; 900 if(nullptr == projectedVars) projectedVars= &empty;; 901 ; 902 std::string name = GetName();; 903 name += integralNameSuffix(*projectedVars,&normSet,rangeName,true) ;; 904 ; 905 std::string title = std::string{""Projection of ""} + GetTitle();; 906 ; 907 std::unique_ptr<RooAbsReal> projected{theClone->createIntegral(*projectedVars,normSet,rangeName)};; 908 ; 909 if(nullptr == projected || !projected->isValid()) {; 910 coutE(Plotting) << ClassName() << ""::"" << GetName(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:35772,variab,variables,35772,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variables']
Modifiability,"rum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation How To. Developer's Tips . Graphics and GUI . Histograms . Input/Output . Jupyter Notebooks . Language Bindings . Legacy . Linear Algebra . Multicore . Trees . Type System . Virtual Monte Carlo . Writing a Graphical User Interface . Language Bindings. How To Call CERNLIB Routines from CINT? . How to inherit a C++ class from Python? . How to Invoke FORTAN Routines from Cling? . How to Use Mathematica from ROOT? . How to Use PyROOT, the ROOT Python Bindings? . How to Use R in ROOT with the ROOT-R Interface? . How to Use the Ruby Interpreter ? . How to Write a TTree in Python? . Legacy. How to Convert from PAW? . How to Convert HBOOK/PAW Files to ROOT Files? . How to Generate HTML Documentation . How to Use Reflex? . Type System. How To Create a Dictionary? . How to Understand a Class Structure? . Jupyter Notebooks. How to create a ROOTbook? . How to Use ROOT in a Notebook? . Graphics and GUI. How to Create an Axis with Time Units? . How to Create or Modify a Style? . How to draw an object with special characters in its name ? . How to Draw Objects? . How to Embed a TCanvas in External Applications? . How to let graphics primitives respond to a mouse click? . How to Pick Objects? . How to redraw Axis and plot borders? . How to reuse a color palette ? . How to set ranges on axis? . How to Use the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/howtos.html:2158,inherit,inherit,2158,d/howtos.html,https://root.cern,https://root.cern/d/howtos.html,1,['inherit'],['inherit']
Modifiability,"rum for window=3 is given in Figure 3.5 Then the peaks can found in Markov spectrum using standard above presented algorithm. Part of original noisy spectrum and Markov spectrum for window=3. The form of the generalized peak searching function is as follows.; Int-t Search1General(float *spectrum,; int size,; float sigma,; int threshold,; bool markov,; int aver-window);; This function searches for peaks in source spectrum. The number of found peaks and their positions are written into structure pointed by one_dim_peak structure pointer.; Function parameters:. spectrum pointer to the vector of source spectrum source spectrum is replaced by new spectrum calculated using Markov chains method.; size length of source spectrum; sigma sigma of searched peaks; threshold threshold value for selecting of peaks; markov logical variable, if it is true, first the source spectrum is replaced by new spectrum calculated using Markov chains method.; aver_window averaging window used in calculation of Markov spectrum, applies only for markov variable is true. The methods of peak searching are sensitive to the sigma. Usually the sigma value is known beforehand. It also changes only slightly with the energy. We have investigated as well the robustness of the proposed algorithms to the spectrum with the peaks with sigma changing from 1 to 10 (see Figure 3.6). Robustness of the proposed algorithms to the spectrum with the peaks with sigma changing from 1 to 10. We applied peak searching algorithm based on Markov approach. We changed sigma in the interval from 1 to 10. The spectra for averaging windows 3, 5, 10 are shown in Figure 3.7. Spectra for averaging windows 3, 5, 10. When we applied peak searching function to the Markov spectrum averaged with the window=10, we obtained correct estimate of all 10 peak positions for sigma=2,3,4,5,6,7,8. It was not the case when we made the same experiment with the original spectrum. For all sigmas some peaks were not discovered.; 3.2 2-DIMENSIONAL SP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/spectrum/Spectrum.html:18786,variab,variable,18786,root/html534/guides/spectrum/Spectrum.html,https://root.cern,https://root.cern/root/html534/guides/spectrum/Spectrum.html,2,['variab'],['variable']
Modifiability,"run start: Start scan with 'start' workers. ;  ; void Run (Long64_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t) override;  ; void SetDebug (Int_t debug);  ; void SetDirProofBench (TDirectory *dir);  ; void SetFilesPerWrk (Int_t fpw);  ; void SetNEvents (Long64_t nevents);  ; void SetNTries (Int_t ntries);  ; void SetReadType (TPBReadType *readtype);  ; void SetReleaseCache (Bool_t on=kTRUE);  ; void SetStart (Int_t start);  ; void SetStep (Int_t step);  ; void SetStop (Int_t stop);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TProofBenchRun;  TProofBenchRun (TProof *proof=0, const char *sel=0);  Constructor: check PROOF and load selectors PAR. ;  ;  ~TProofBenchRun () override;  destructor ;  ; virtual const char * GetParList ();  ; virtual const char * GetSelName ();  ; virtual void SetParList (const char *pars);  ; virtual void SetSelName (const char *sel);  ; virtual void SetSelOption (const char *opt);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofBenchRunDataRead.html:3118,inherit,inherited,3118,doc/master/classTProofBenchRunDataRead.html,https://root.cern,https://root.cern/doc/master/classTProofBenchRunDataRead.html,1,['inherit'],['inherited']
Modifiability,"runcating vsnprintf buffer: [%.*s]"",; 3098 (int)((buflen > 200) ? 200 : (buflen - 1)),; 3099 buf);; 3100 n = (int)buflen - 1;; 3101 }; 3102 buf[n] = '\0';; 3103}; 3104 ; 3105 ; 3106static void; 3107mg_snprintf(const struct mg_connection *conn,; 3108 int *truncated,; 3109 char *buf,; 3110 size_t buflen,; 3111 const char *fmt,; 3112 ...); 3113{; 3114 va_list ap;; 3115 ; 3116 va_start(ap, fmt);; 3117 mg_vsnprintf(conn, truncated, buf, buflen, fmt, ap);; 3118 va_end(ap);; 3119}; 3120 ; 3121 ; 3122static int; 3123get_option_index(const char *name); 3124{; 3125 int i;; 3126 ; 3127 for (i = 0; config_options[i].name != NULL; i++) {; 3128 if (strcmp(config_options[i].name, name) == 0) {; 3129 return i;; 3130 }; 3131 }; 3132 return -1;; 3133}; 3134 ; 3135 ; 3136const char *; 3137mg_get_option(const struct mg_context *ctx, const char *name); 3138{; 3139 int i;; 3140 if ((i = get_option_index(name)) == -1) {; 3141 return NULL;; 3142 } else if (!ctx || ctx->dd.config[i] == NULL) {; 3143 return """";; 3144 } else {; 3145 return ctx->dd.config[i];; 3146 }; 3147}; 3148 ; 3149#define mg_get_option DO_NOT_USE_THIS_FUNCTION_INTERNALLY__access_directly; 3150 ; 3151struct mg_context *; 3152mg_get_context(const struct mg_connection *conn); 3153{; 3154 return (conn == NULL) ? (struct mg_context *)NULL : (conn->phys_ctx);; 3155}; 3156 ; 3157 ; 3158void *; 3159mg_get_user_data(const struct mg_context *ctx); 3160{; 3161 return (ctx == NULL) ? NULL : ctx->user_data;; 3162}; 3163 ; 3164 ; 3165void *; 3166mg_get_user_context_data(const struct mg_connection *conn); 3167{; 3168 return mg_get_user_data(mg_get_context(conn));; 3169}; 3170 ; 3171 ; 3172void *; 3173mg_get_thread_pointer(const struct mg_connection *conn); 3174{; 3175 /* both methods should return the same pointer */; 3176 if (conn) {; 3177 /* quick access, in case conn is known */; 3178 return conn->tls_user_ptr;; 3179 } else {; 3180 /* otherwise get pointer from thread local storage (TLS) */; 3181 struct mg_workerTLS *tls =; 3182 (str",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:94288,config,config,94288,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"runcating vsnprintf buffer: [%.*s]"",; 3099 (int)((buflen > 200) ? 200 : (buflen - 1)),; 3100 buf);; 3101 n = (int)buflen - 1;; 3102 }; 3103 buf[n] = '\0';; 3104}; 3105 ; 3106 ; 3107static void; 3108mg_snprintf(const struct mg_connection *conn,; 3109 int *truncated,; 3110 char *buf,; 3111 size_t buflen,; 3112 const char *fmt,; 3113 ...); 3114{; 3115 va_list ap;; 3116 ; 3117 va_start(ap, fmt);; 3118 mg_vsnprintf(conn, truncated, buf, buflen, fmt, ap);; 3119 va_end(ap);; 3120}; 3121 ; 3122 ; 3123static int; 3124get_option_index(const char *name); 3125{; 3126 int i;; 3127 ; 3128 for (i = 0; config_options[i].name != NULL; i++) {; 3129 if (strcmp(config_options[i].name, name) == 0) {; 3130 return i;; 3131 }; 3132 }; 3133 return -1;; 3134}; 3135 ; 3136 ; 3137const char *; 3138mg_get_option(const struct mg_context *ctx, const char *name); 3139{; 3140 int i;; 3141 if ((i = get_option_index(name)) == -1) {; 3142 return NULL;; 3143 } else if (!ctx || ctx->dd.config[i] == NULL) {; 3144 return """";; 3145 } else {; 3146 return ctx->dd.config[i];; 3147 }; 3148}; 3149 ; 3150#define mg_get_option DO_NOT_USE_THIS_FUNCTION_INTERNALLY__access_directly; 3151 ; 3152struct mg_context *; 3153mg_get_context(const struct mg_connection *conn); 3154{; 3155 return (conn == NULL) ? (struct mg_context *)NULL : (conn->phys_ctx);; 3156}; 3157 ; 3158 ; 3159void *; 3160mg_get_user_data(const struct mg_context *ctx); 3161{; 3162 return (ctx == NULL) ? NULL : ctx->user_data;; 3163}; 3164 ; 3165 ; 3166void *; 3167mg_get_user_context_data(const struct mg_connection *conn); 3168{; 3169 return mg_get_user_data(mg_get_context(conn));; 3170}; 3171 ; 3172 ; 3173void *; 3174mg_get_thread_pointer(const struct mg_connection *conn); 3175{; 3176 /* both methods should return the same pointer */; 3177 if (conn) {; 3178 /* quick access, in case conn is known */; 3179 return conn->tls_user_ptr;; 3180 } else {; 3181 /* otherwise get pointer from thread local storage (TLS) */; 3182 struct mg_workerTLS *tls =; 3183 (str",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:94320,config,config,94320,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"runcation check for error buffers */; 19733 error->text,; 19734 error->text_buffer_size,; 19735 ""Invalid configuration option: %s"",; 19736 name);; 19737 }; 19738 free_context(ctx);; 19739 pthread_setspecific(sTlsKey, NULL);; 19740 return NULL;; 19741 } else if ((value = *options++) == NULL) {; 19742 mg_cry_ctx_internal(ctx, ""%s: option value cannot be NULL"", name);; 19743 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19744 mg_snprintf(NULL,; 19745 NULL, /* No truncation check for error buffers */; 19746 error->text,; 19747 error->text_buffer_size,; 19748 ""Invalid configuration option value: %s"",; 19749 name);; 19750 }; 19751 free_context(ctx);; 19752 pthread_setspecific(sTlsKey, NULL);; 19753 return NULL;; 19754 }; 19755 if (ctx->dd.config[idx] != NULL) {; 19756 /* A duplicate configuration option is not an error - the last; 19757 * option value will be used. */; 19758 mg_cry_ctx_internal(ctx, ""warning: %s: duplicate option"", name);; 19759 mg_free(ctx->dd.config[idx]);; 19760 }; 19761 ctx->dd.config[idx] = mg_strdup_ctx(value, ctx);; 19762 DEBUG_TRACE(""[%s] -> [%s]"", name, value);; 19763 }; 19764 ; 19765 /* Set default value if needed */; 19766 for (i = 0; config_options[i].name != NULL; i++) {; 19767 default_value = config_options[i].default_value;; 19768 if ((ctx->dd.config[i] == NULL) && (default_value != NULL)) {; 19769 ctx->dd.config[i] = mg_strdup_ctx(default_value, ctx);; 19770 }; 19771 }; 19772 ; 19773 /* Request size option */; 19774 itmp = atoi(ctx->dd.config[MAX_REQUEST_SIZE]);; 19775 if (itmp < 1024) {; 19776 mg_cry_ctx_internal(ctx,; 19777 ""%s too small"",; 19778 config_options[MAX_REQUEST_SIZE].name);; 19779 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19780 mg_snprintf(NULL,; 19781 NULL, /* No truncation check for error buffers */; 19782 error->text,; 19783 error->text_buffer_size,; 19784 ""Invalid configuration option value: %s"",; 19785 config_options[MAX_REQUEST_SIZE].name);; 19786 }; 19787 free_context(ctx);; 19788 pthread_sets",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:589761,config,config,589761,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"runcation check for error buffers */; 19734 error->text,; 19735 error->text_buffer_size,; 19736 ""Invalid configuration option: %s"",; 19737 name);; 19738 }; 19739 free_context(ctx);; 19740 pthread_setspecific(sTlsKey, NULL);; 19741 return NULL;; 19742 } else if ((value = *options++) == NULL) {; 19743 mg_cry_ctx_internal(ctx, ""%s: option value cannot be NULL"", name);; 19744 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19745 mg_snprintf(NULL,; 19746 NULL, /* No truncation check for error buffers */; 19747 error->text,; 19748 error->text_buffer_size,; 19749 ""Invalid configuration option value: %s"",; 19750 name);; 19751 }; 19752 free_context(ctx);; 19753 pthread_setspecific(sTlsKey, NULL);; 19754 return NULL;; 19755 }; 19756 if (ctx->dd.config[idx] != NULL) {; 19757 /* A duplicate configuration option is not an error - the last; 19758 * option value will be used. */; 19759 mg_cry_ctx_internal(ctx, ""warning: %s: duplicate option"", name);; 19760 mg_free(ctx->dd.config[idx]);; 19761 }; 19762 ctx->dd.config[idx] = mg_strdup_ctx(value, ctx);; 19763 DEBUG_TRACE(""[%s] -> [%s]"", name, value);; 19764 }; 19765 ; 19766 /* Set default value if needed */; 19767 for (i = 0; config_options[i].name != NULL; i++) {; 19768 default_value = config_options[i].default_value;; 19769 if ((ctx->dd.config[i] == NULL) && (default_value != NULL)) {; 19770 ctx->dd.config[i] = mg_strdup_ctx(default_value, ctx);; 19771 }; 19772 }; 19773 ; 19774 /* Request size option */; 19775 itmp = atoi(ctx->dd.config[MAX_REQUEST_SIZE]);; 19776 if (itmp < 1024) {; 19777 mg_cry_ctx_internal(ctx,; 19778 ""%s too small"",; 19779 config_options[MAX_REQUEST_SIZE].name);; 19780 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19781 mg_snprintf(NULL,; 19782 NULL, /* No truncation check for error buffers */; 19783 error->text,; 19784 error->text_buffer_size,; 19785 ""Invalid configuration option value: %s"",; 19786 config_options[MAX_REQUEST_SIZE].name);; 19787 }; 19788 free_context(ctx);; 19789 pthread_sets",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:589794,config,config,589794,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"rune a node temporaily (without actually deleting its decendants; which allows testing the pruned tree quality for many different; pruning stages without ""touching"" the tree. TMVA::Node* GetNode(ULong_t sequence, UInt_t depth); retrieve node from the tree. Its position (up to a maximal tree depth of 64); is coded as a sequence of left-right moves starting from the root, coded as; 0-1 bit patterns stored in the ""long-integer"" (i.e. 0:left ; 1:right. void GetRandomisedVariables(Bool_t* useVariable, UInt_t* variableMap, UInt_t& nVars). Double_t TrainNodeFast(const TMVA::DecisionTree::EventList& eventSample, TMVA::DecisionTreeNode* node); Decide how to split a node using one of the variables that gives; the best separation of signal/background. In order to do this, for each; variable a scan of the different cut values in a grid (grid = fNCuts) is; performed and the resulting separation gains are compared.; in addition to the individual variables, one can also ask for a fisher; discriminant being built out of (some) of the variables and used as a; possible multivariate split. std::vector<Double_t> GetFisherCoefficients(const TMVA::DecisionTree::EventList& eventSample, UInt_t nFisherVars, UInt_t* mapVarInFisher); calculate the fisher coefficients for the event sample and the variables used. Double_t TrainNodeFull(const TMVA::DecisionTree::EventList& eventSample, TMVA::DecisionTreeNode* node). TMVA::DecisionTreeNode* GetEventNode(const TMVA::Event& e) const; get the pointer to the leaf node where a particular event ends up in...; (used in gradient boosting). Double_t CheckEvent(const TMVA::Event& , Bool_t UseYesNoLeaf = kFALSE) const; the event e is put into the decision tree (starting at the root node); and the output is NodeType (signal) or (background) of the final node (basket); in which the given events ends up. I.e. the result of the classification if; the event for this decision tree. Double_t SamplePurity(TMVA::DecisionTree::EventList eventSample); calculates the pu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__DecisionTree.html:13393,variab,variables,13393,root/html530/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html530/TMVA__DecisionTree.html,6,['variab'],['variables']
Modifiability,"rune a node temporaily (without actually deleting its decendants; which allows testing the pruned tree quality for many different; pruning stages without ""touching"" the tree. TMVA::Node* GetNode(ULong_t sequence, UInt_t depth); retrieve node from the tree. Its position (up to a maximal tree depth of 64); is coded as a sequence of left-right moves starting from the root, coded as; 0-1 bit patterns stored in the ""long-integer"" (i.e. 0:left ; 1:right. void GetRandomisedVariables(Bool_t* useVariable, UInt_t* variableMap, UInt_t& nVars). Double_t TrainNodeFast(const TMVA::DecisionTree::EventList& eventSample, TMVA::DecisionTreeNode* node); Decide how to split a node using one of the variables that gives; the best separation of signal/background. In order to do this, for each; variable a scan of the different cut values in a grid (grid = fNCuts) is; performed and the resulting separation gains are compared.; in addition to the individual variables, one can also ask for a fisher; discriminant being built out of (some) of the variables and used as a; possible multivariate split. std::vector<Double_t> GetFisherCoefficients(const TMVA::DecisionTree::EventList& eventSample, UInt_t nFisherVars, UInt_t* mapVarInFisher); calculate the fisher coefficients for the event sample and the variables used. Double_t TrainNodeFull(const TMVA::DecisionTree::EventList& eventSample, TMVA::DecisionTreeNode* node). TMVA::DecisionTreeNode* GetEventNode(const TMVA::Event& e) const; get the pointer to the leaf node where a particular event ends up in...; (used in gradient boostinge). Double_t CheckEvent(const TMVA::Event& , Bool_t UseYesNoLeaf = kFALSE) const; the event e is put into the decision tree (starting at the root node); and the output is NodeType (signal) or (background) of the final node (basket); in which the given events ends up. I.e. the result of the classification if; the event for this decision tree. Double_t SamplePurity(TMVA::DecisionTree::EventList eventSample); calculates the p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__DecisionTree.html:13250,variab,variables,13250,root/html528/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html528/TMVA__DecisionTree.html,2,['variab'],['variables']
Modifiability,"runopt=+1) error calculation is run; (This feature isnot yet implemented). bool Hesse(). perform a full calculation of the Hessian matrix for error calculation. { return false; }. bool Scan(unsigned int , unsigned int& , double* , double* , double = 0, double = 0). scan function minimum for variable i. Variable and function must be set before using Scan; Return false if an error or if minimizer does not support this functionality. bool Contour(unsigned int , unsigned int , unsigned int& , double* , double* ). find the contour points (xi,xj) of the function for parameter i and j around the minimum; The contour will be find for value of the function = Min + ErrorUp();. void PrintResults(); return reference to the objective function; virtual const ROOT::Math::IGenFunction & Function() const = 0;; print the result according to set level (implemented for TMinuit for mantaining Minuit-style printing). {}. std::string VariableName(unsigned int ) const; get name of variables (override if minimizer support storing of variable names); return an empty string if variable is not found. { return std::string();}. int VariableIndex(const string& ) const; get index of variable given a variable given a name; return -1 if variable is not found. { return -1; }. int PrintLevel() const; minimizer configuration parameters ; set print level. { return fDebug; }. unsigned int MaxFunctionCalls() const; max number of function calls. { return fMaxCalls; }. unsigned int MaxIterations() const; max iterations. { return fMaxIter; }. double Tolerance() const; absolute tolerance. { return fTol; }. double Precision() const; precision of minimizer in the evaluation of the objective function; ( a value <=0 corresponds to the let the minimizer choose its default one). { return fPrec; }. int Strategy() const; strategy. { return fStrategy; }. int Status() const; status code of minimizer. { return fStatus; }. double ErrorDef() const; return the statistical scale used for calculate the error; is typically 1 f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__Minimizer.html:8741,variab,variables,8741,root/html528/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__Minimizer.html,13,"['Variab', 'variab']","['VariableName', 'variable', 'variables']"
Modifiability,"runopt=+1) error calculation is run; (This feature isnot yet implemented). bool Hesse(). perform a full calculation of the Hessian matrix for error calculation. { return false; }. bool Scan(unsigned int , unsigned int& , double* , double* , double = 0, double = 0). scan function minimum for variable i. Variable and function must be set before using Scan; Return false if an error or if minimizer does not support this functionality. bool Contour(unsigned int , unsigned int , unsigned int& , double* , double* ). find the contour points (xi,xj) of the function for parameter i and j around the minimum; The contour will be find for value of the function = Min + ErrorUp();. void PrintResults(); return reference to the objective function; virtual const ROOT::Math::IGenFunction & Function() const = 0;; print the result according to set level (implemented for TMinuit for mantaining Minuit-style printing). {}. std::string VariableName(unsigned int ) const; get name of variables (override if minimizer support storing of variable names); return an empty string if variable is not found. { return std::string();}. int VariableIndex(const string& ) const; get index of variable given a variable given a name; return -1 if variable is not found. { return -1; }. int PrintLevel() const; minimizer configuration parameters ; set print level. { return fDebug; }. unsigned int MaxFunctionCalls(); max number of function calls. { return fMaxCalls; }. unsigned int MaxIterations(); max iterations. { return fMaxIter; }. double Tolerance() const; absolute tolerance. { return fTol; }. double Precision() const; precision of minimizer in the evaluation of the objective function; ( a value <=0 corresponds to the let the minimizer choose its default one). { return fPrec; }. int Strategy() const; strategy. { return fStrategy; }. int Status() const; status code of minimizer. { return fStatus; }. double ErrorDef() const; return the statistical scale used for calculate the error; is typically 1 for Chi2 and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__Minimizer.html:8596,variab,variables,8596,root/html526/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__Minimizer.html,3,['variab'],"['variable', 'variables']"
Modifiability,"rustumIs scene intersecting view-frustum.; Short_tfLODOptional override of scene lod; TGLCamera*fLastCameraLast camera used.; TGLClip*fLastClipLast combined viewer/scene clip (set in scene::update); Short_tfLastLODLast combined viewer/scene lod (set in scene::lodify-scene-info).; Float_tfLastOLLineWLast combined viewer/scene outline line-width (set in scene::pre-draw).; Short_tfLastStyleLast combined viewer/scene style (set in scene::pre-draw).; Float_tfLastWFLineWLast combined viewer/scene wire-frame line-width (set in scene::pre-draw).; Float_tfOLLineWOptional override of scene outline line-width; TGLSceneBase*fScene; UInt_tfSceneStampScene's time-stamp on last update.; Short_tfStyleOptional override of scene style; TGLBoundingBoxfTransformedBBox; Bool_tfUpdateTimeoutedSet if update was interrupted.; Bool_tfViewCheckViewer side check if render is necessary.; TGLViewerBase*fViewer; Float_tfWFLineWOptional override of scene wire-frame line-width. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLSceneInfo(TGLViewerBase* view = 0, TGLSceneBase* scene = 0); Default constructor. void SetActive(Bool_t a); Set active state of the scene, mark viewer as changed. void SetupTransformsAndBBox(); Combine information from scene, scene-info and camera (should be; optional) into transformation matrices. Transform scene bounding box using this transformation. TGLSceneInfo(const TGLSceneInfo& ). TGLSceneInfo& operator=(const TGLSceneInfo& ). virtual ~TGLSceneInfo(); {}. TGLViewerBase * GetViewer() const; { return fViewer; }. TGLViewerBase & RefViewer() const; { return *fViewer; }. TGLSceneBase * GetScene() const; { return fScene; }. TGLSceneBase & RefScene() const; { return *fScene; }. Bool_t GetActive() const; { return fActive; }. const TGLBoundingBox& GetTransformedBBox(); { return fTransformedBBox; }. void SetSceneTrans(TGLMatrix& ); { ResetSceneStamp(); }. Bool_t ViewCheck() const; { return fViewCheck; }. void ViewCheck(Bool_t c); { fV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLSceneInfo.html:4292,Inherit,Inheritance,4292,root/html532/TGLSceneInfo.html,https://root.cern,https://root.cern/root/html532/TGLSceneInfo.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rvable; const RooArgSet*RooAbsTestStatistic::_projDepsPointer to set with projected observables; TListRooAbsArg::_proxyListlist of proxies; stringRooAbsTestStatistic::_rangeNameName of range in which to calculate test statistic; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; Int_tRooAbsTestStatistic::_simCountTotal number of component p.d.f.s in RooSimultaneous (if any); RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_tRooAbsTestStatistic::_splitRangeSplit rangeName in RooSimultaneous index labels if true; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_tRooAbsTestStatistic::_verboseVerbose messaging if true; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; Bool_t_weightSqApply weights squared?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNLLVar(const char *name, const char* title, RooAbsPdf& pdf, RooAbsData& indata,		 const RooCmdArg& arg1, const RooCmdArg& arg2,const RooCmdArg& arg3,		 const RooCmdArg& arg4, const RooCmdArg& arg5,const RooCmdArg& arg6,		 const RooCmdArg& arg7, const RooCmdArg& arg8,const RooCmdArg& arg9); Construct likelihood from given p.d.f and (binned or unbinned dataset). Extended() -- Include extended term in calculation; NumCPU() -- Activate parall",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNLLVar.html:35455,config,configuration,35455,root/html526/RooNLLVar.html,https://root.cern,https://root.cern/root/html526/RooNLLVar.html,1,['config'],['configuration']
Modifiability,"rvable; const RooArgSet*RooAbsTestStatistic::_projDepsPointer to set with projected observables; TListRooAbsArg::_proxyListlist of proxies; stringRooAbsTestStatistic::_rangeNameName of range in which to calculate test statistic; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; Int_tRooAbsTestStatistic::_simCountTotal number of component p.d.f.s in RooSimultaneous (if any); RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_tRooAbsTestStatistic::_splitRangeSplit rangeName in RooSimultaneous index labels if true; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_tRooAbsTestStatistic::_verboseVerbose messaging if true; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; Bool_t_weightSqApply weights squared?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNLLVar(const char* name, const char* title, RooAbsPdf& pdf, RooAbsData& data, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNLLVar.html:35961,config,configuration,35961,root/html528/RooNLLVar.html,https://root.cern,https://root.cern/root/html528/RooNLLVar.html,1,['config'],['configuration']
Modifiability,"rvables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAddModel.h>. Inheritance diagram for RooAddModel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ pRooArgList. typedef RooArgList* RooAddModel::pRooArgList. protected . Definition at line 106 of file RooAddModel.h. Constructor & Destructor Documentation. ◆ RooAddModel() [1/3]. RooAddModel::RooAddModel ; (; ). Definition at line 63 of file RooAddModel.cxx. ◆ RooAddModel() [2/3]. RooAddModel::RooAddModel ; (; const char * ; name, . const char * ; title, . const RooArgList & ; inPdfList, . const RooArgList & ; inCoefList, . bool ; ownPdfList = false . ). Generic constructor from list of PDFs and list of coefficients. ; Each pdf list element (i) is paired with coefficient list element (i). The number of coefficie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:78458,inherit,inherited,78458,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['inherit'],['inherited']
Modifiability,"rve is to be referenced later; Invisible(Bool_t flag) -- Add curve to frame, but do not display. Useful in combination AddTo(). RooDataSet * read(const char* filename, const RooArgList& variables, const char* opts = """", const char* commonPath = """", const char* indexCatName = 0); Read given list of ascii files, and construct a data set, using the given; ArgList as structure definition. Multiple file names in fileList should be comma separated. Each; file is optionally prefixed with 'commonPath' if such a path is; provided. The arglist specifies the dimensions of the dataset to be built; and describes the order in which these dimensions appear in the; ascii files to be read. Each line in the ascii file should contain N white space separated; tokens, with N the number of args in 'variables'. Any text beyond; N tokens will be ignored with a warning message.; [ NB: This format is written by RooArgList::writeToStream() ]. If the value of any of the variables on a given line exceeds the; fit range associated with that dimension, the entire line will be; ignored. A warning message is printed in each case, unless the; 'Q' verbose option is given. (Option 'D' will provide additional; debugging information) The number of events read and skipped; is always summarized at the end. When multiple files are read, a RooCategory arg in 'variables' can; optionally be designated to hold information about the source file; of each data point. This feature is enabled by giving the name; of the (already existing) category variable in 'indexCatName'. If no further information is given a label name 'fileNNN' will; be assigned to each event, where NNN is the sequential number of; the source file in 'fileList'. Alternatively it is possible to override the default label names; of the index category by specifying them in the fileList string:; When instead of ""file1.txt,file2.txt"" the string; ""file1.txt:FOO,file2.txt:BAR"" is specified, a state named ""FOO""; is assigned to the index category for eac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDataSet.html:30930,variab,variables,30930,root/html526/RooDataSet.html,https://root.cern,https://root.cern/root/html526/RooDataSet.html,11,['variab'],['variables']
Modifiability,rver; TChain A chain of TTrees; TChainElement A chain element; TChainIndex A Tree Index with majorname and minorname.; TChainIndex::TChainIndexEntry ; TChair A base class to provide a user custom interface to TTable class objects; TCint Interface to CINT C/C++ interpreter; TClass Dictionary containing class information; TClassDocInfo info cache for class documentation; TClassDocOutput generates documentation web pages for a class; TClassEdit ; TClassGenerator interface for TClass generators; TClassMenuItem One element of the class context menu; TClassRef ; TClassStreamer ; TClassTable Table of known classes; TClassTree Manager class to draw classes inheritance tree and relations; TClonesArray An array of clone objects; TCollection Collection abstract base class; TCollectionClassStreamer ; TCollectionMemberStreamer ; TCollectionMethodBrowsable Helper object to browse a collection's methods; TCollectionPropertyBrowsable Helper object to add browsable collection properties; TCollectionProxyFactory ; TCollectionStreamer ; TColor Color defined by RGB or HLS; TColorWheel The ROOT Color Wheel; TColumnView Helper to represent one TTable column; TComplex Complex Class; TCondition Condition variable class; TConditionImp Condition variable implementation ABC; TCondor Interface to the Condor System; TCondorSlave Describes a claimed slave; TConfidenceLevel output for TLimit functions; TContextMenu Context sensitive popup menu; TContextMenuImp Context sensitive popup menu implementation; TControlBar Control bar; TControlBarButton The Control bar button; TControlBarImp GUI independent controlbar abc; TCrown A crown or segment of crown; TCurlyArc A curly arc; TCurlyArcEditor GUI for editing arrow attributes; TCurlyLine A curly polyline; TCurlyLineEditor GUI for editing arrow attributes; TCut A specialized string object used for TTree selections; TCutG A Graphical cut.; TDCacheFile A ROOT file that reads/writes via a dCache server; TDCacheSystem Directory handler for DCache; TDNDData,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ClassIndex.html:54196,inherit,inheritance,54196,root/html530/ClassIndex.html,https://root.cern,https://root.cern/root/html530/ClassIndex.html,6,"['inherit', 'variab']","['inheritance', 'variable']"
Modifiability,"rverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 13:07:19 201",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction2Binding_double_unsigned_int_double_.html:37935,Inherit,Inheritance,37935,root/html602/RooCFunction2Binding_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction2Binding_double_unsigned_int_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 15:28:31 201",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction2Binding_double_unsigned_int_double_.html:37935,Inherit,Inheritance,37935,root/html604/RooCFunction2Binding_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html604/RooCFunction2Binding_double_unsigned_int_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rverRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; TString_rangeName; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; RooRealProxy_x; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRangeBoolean(); Default constructor. RooRangeBoolean(const char* name, const char* title, RooAbsRealLValue& x, const char* rangeName). RooRangeBoolean(const RooRangeBoolean& other, const char* name = 0); Copy constructor. ~RooRangeBoolean(); Destructor. Double_t evaluate() const; Return 1 if x is in range, zero otherwis. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const. TObject* clone(const char* newname) const; { return new RooRangeBoolean(*this, newname); }. » Last changed: Tue Jun 2 15:33:18 2015 » Last generated: 2015-06-02 15:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooRangeBoolean.html:36990,Inherit,Inheritance,36990,root/html604/RooRangeBoolean.html,https://root.cern,https://root.cern/root/html604/RooRangeBoolean.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rwardInference ; (; int ; axis, . const Tensor_t & ; x, . Matrix_t & ; gamma, . Matrix_t & ; beta, . Tensor_t & ; y, . const Matrix_t & ; runningMeans, . const Matrix_t & ; runningVars, . Scalar_t ; epsilon, . const TensorDescriptor_t & ;  . ). static . During inference the inputs are not normalized using the batch mean but the previously computed at running mean and variance. ; Definition at line 743 of file Propagation.cu. ◆ BatchNormLayerForwardTraining(). template<typename AFloat > . void TMVA::DNN::TCuda< AFloat >::BatchNormLayerForwardTraining ; (; int ; axis, . const Tensor_t & ; x, . Tensor_t & ; y, . Matrix_t & ; gamma, . Matrix_t & ; beta, . Matrix_t & ; mean, . Matrix_t & ; , . Matrix_t & ; iVariance, . Matrix_t & ; runningMeans, . Matrix_t & ; runningVars, . Scalar_t ; nTrainedBatches, . Scalar_t ; momentum, . Scalar_t ; epsilon, . const TensorDescriptor_t & ; bnParDescriptor . ). static . The input from each batch are normalized during training to have zero mean and unit variance and they are then scaled by two parameter, different for each input variable: . a scale factor \gamma gamma; an offset \beta beta . Definition at line 729 of file Propagation.cu. ◆ CalculateConvActivationGradients(). template<typename AReal = Float_t> . void TMVA::DNN::TCuda< AFloat >::CalculateConvActivationGradients ; (; Tensor_t & ; activationGradientsBackward, . const Tensor_t & ; df, . const Matrix_t & ; weights, . size_t ; batchSize, . size_t ; inputHeight, . size_t ; inputWidth, . size_t ; depth, . size_t ; height, . size_t ; width, . size_t ; filterDepth, . size_t ; filterHeight, . size_t ; filterWidth . ). static . Utility function for calculating the activation gradients of the layer before the convolutional layer. ; Definition at line 324 of file Propagation.cu. ◆ CalculateConvBiasGradients(). template<typename AReal = Float_t> . void TMVA::DNN::TCuda< AFloat >::CalculateConvBiasGradients ; (; Matrix_t & ; biasGradients, . const Tensor_t & ; df, . size_t ; batchSize, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCuda.html:34967,variab,variable,34967,doc/master/classTMVA_1_1DNN_1_1TCuda.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCuda.html,1,['variab'],['variable']
Modifiability,"rwards. BayesianCalculator( /* const char* name, const char* title, */ RooAbsData& data, RooAbsPdf& pdf,						 const RooArgSet& POI,						 RooAbsPdf& priorPOI,						 const RooArgSet* nuisanceParameters ); TNamed( TString(name), TString(title) ),; constructor from data set, model pdf, set with the parameter of interest; (must contain only one parameter for the moment) and prior pdf; Optionally an additional set of parameters can be specified (nuisance parameters); which will be integrated (marginalized) when creating the posterior pdf.; A default size of 0.05 is used (for 95% CL interval). BayesianCalculator(RooAbsData& data, RooStats::ModelConfig& model); Same constructor but from data and a ModelConfig describing the model pdf and the prior, the parameter; of interest and the nuisance parameters. ~BayesianCalculator(); destructor cleaning all managed objects. void ClearAll() const; clear cached pdf objects (posterior pdf, Likelihood, NLL, etc.). void SetModel(const RooStats::ModelConfig& model); set the model configuration. RooArgSet* GetMode(RooArgSet* parameters) const; return the mode (not yet implemented) but can be easly obtained from; GetPosteriorPdf()->asTF(poi)->GetMaximumX();. RooAbsPdf* GetPosteriorPdf() const; get the posterior pdf as a RooAbsPdf; the posterior is obtained from the product of the likelihood function and the; prior pdf which is then intergated in the nuisance parameters (if existing).; A prior function for the nuisance can be specified either in the prior pdf object; or in the model itself. If no prior nuisance is specified, but prior parameters are then; the integration is performed assuming a flat prior for the nuisance parameters. RooPlot* GetPosteriorPlot() const; return a RooPlot with the posterior PDF and the credibility region. SimpleInterval* GetInterval() const; returns a SimpleInterval with the lower/upper limit on; the scanned variable (the parameter of interest specified in the constructor).; The returned interval is a central",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__BayesianCalculator.html:8630,config,configuration,8630,root/html526/RooStats__BayesianCalculator.html,https://root.cern,https://root.cern/root/html526/RooStats__BayesianCalculator.html,1,['config'],['configuration']
Modifiability,"rwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooArgProxy.h>. Inheritance diagram for RooArgProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooArgProxy() [1/6]. RooArgProxy::RooArgProxy ; (; ). default . Default constructor. . ◆ RooArgProxy() [2/6]. RooArgProxy::RooArgProxy ; (; const char * ; name, . const char * ; desc, . RooAbsArg * ; owner, . bool ; valueServer, . bool ; shapeServer, . bool ; proxyOwnsArg = false . ). Constructor with owner and proxied variable. ; Definition at line 46 of file RooArgProxy.cxx. ◆ RooArgProxy() [3/6]. RooArgProxy::RooArgProxy ; (; const char * ; inName, . const char * ; desc, . RooAbsArg * ; owner, . RooAbsArg & ; arg, . bool ; valueServer, . bool ; shapeServer, . bool ; proxyOwnsArg = false . ). Constructor with owner and proxied variable. ; The valueServer and shapeServer booleans control if the inserted client-server link in the owner propagates value and/or shape dirty flags. If proxyOwnsArg is true, the proxy takes ownership of its component ; Definition at line 61 of file RooArgProxy.cxx. ◆ RooArgProxy() [4/6]. RooArgProxy::RooArgProxy ; (; const char * ; name, . RooAbsArg * ; owner, . const RooArgProxy & ; other . ). Copy constructor. ; Definition at line 79 of file RooArgProxy.cxx. ◆ ~RooArgProxy(). RooArgProxy::~RooArgProxy ; (; ). override . Destructor. ; Definition at line 96 of file RooArgProxy.cxx. ◆ RooArgProxy() [5/6]. RooArgProxy::RooArgProxy ; (; RooArgProxy const & ; othe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooArgProxy.html:15054,variab,variable,15054,doc/master/classRooArgProxy.html,https://root.cern,https://root.cern/doc/master/classRooArgProxy.html,1,['variab'],['variable']
Modifiability,"rwrite; kWriteDelete; };. protected:. Double_tfAxis[3]Direction unit vector of the helix axis; Int_tTPolyLine3D::fLastPointThe index of the last filled point; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Int_tTPolyLine3D::fNNumber of points; TStringTPolyLine3D::fOptionoptions; Float_t*TPolyLine3D::fP[3*fN] Array of 3-D coordinates (x,y,z); Double_tfPhi0Initial phase, so vx0 = fVt*cos(fPhi0); Double_tfRange[2]Range of helix parameter t; TRotMatrix*fRotMatRotation matrix: axis // z --> axis // fAxis; Double_tfVtTransverse velocity (constant of motion); Double_tfVzZ velocity (constant of motion); Double_tfWAngular frequency; Double_tfX0Pivot's x position (see parametrization in class doc); Double_tfY0Pivot's y position (see parametrization in class doc); Double_tfZ0Pivot's z position (see parametrization in class doc); static Int_tfgMinNSegminimal number of segments in polyline. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetHelix(Double_t* xyz, Double_t* v, Double_t w, Double_t* range = 0, EHelixRangeType type = kUnchanged, Double_t* axis = 0); Set all helix parameters. THelix(); Helix default constructor. THelix(Double_t x, Double_t y, Double_t z, Double_t vx, Double_t vy, Double_t vz, Double_t w); Helix normal constructor. THelix(Double_t* xyz, Double_t* v, Double_t w, Double_t* range = 0, EHelixRangeType rtype = kHelixZ, Double_t* axis = 0); Helix normal constructor. THelix(const THelix& helix); Helix copy constructor. THelix& operator=(const THelix& ); assignement operator. ~THelix(); Helix destructor. void Copy(TObject& helix) const; Copy this helix to obj. void Draw(Option_t* option = """"); Draw this helix with its current attributes. void Print(Option_t* option = """") const; Dump this helix with its attributes. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SetAxis(Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THelix.html:9355,Inherit,Inheritance,9355,root/html532/THelix.html,https://root.cern,https://root.cern/root/html532/THelix.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rwrite; static TEveGridStepper::EStepMode_ekSM_XYZ; static TEveGridStepper::EStepMode_ekSM_XZY; static TEveGridStepper::EStepMode_ekSM_YXZ; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tfCxCurrent positions during filling / traversal.; Int_tfCyCurrent positions during filling / traversal.; Int_tfCzCurrent positions during filling / traversal.; Float_tfDxStep size in each direction.; Float_tfDyStep size in each direction.; Float_tfDzStep size in each direction.; TEveGridStepper::EStepMode_efModeStepping mode, order of filling.; Int_tfNxNumber of slots in each direction.; Int_tfNyNumber of slots in each direction.; Int_tfNzNumber of slots in each direction.; Float_tfOxInitial offset for each direction.; Float_tfOyInitial offset for each direction.; Float_tfOzInitial offset for each direction. private:. Int_t*fLimitArr[3]! Internal traversal variables.; Int_t*fValueArr[3]! Internal traversal variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGridStepper(Int_t sm = kSM_XYZ); Constructor. void Reset(); Reset position to origin. void Subtract(TEveGridStepper& s); Subtract current position of 's' from origin of this. Bool_t Step(); Move to the next grid position. void GetPosition(Float_t* p); Get current position. void SetTrans(TEveTrans* mx); Set position into the translation part of mx. void SetTransAdvance(TEveTrans* mx); Set position into the translation part of mx and advance to the; next grid position. TEveGridStepper(const TEveGridStepper& ). TEveGridStepper& operator=(const TEveGridStepper& ). virtual ~TEveGridStepper(); {}. void SetNs(Int_t nx, Int_t ny, Int_t nz = 1); { fNx = nx; fNy = ny; fNz = nz; }. void SetDs(Float_t dx, Float_t dy, Float_t dz = 0); { fDx = dx; fDy = dy; fDz = dz; }. void SetOs(Float_t ox, Float_t oy, Float_t oz = 0); { fOx = ox; fOy = oy; fOz = oz; }. Int_t GetCx() const; { re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveGridStepper.html:7125,variab,variables,7125,root/html602/TEveGridStepper.html,https://root.cern,https://root.cern/root/html602/TEveGridStepper.html,4,['variab'],['variables']
Modifiability,"rwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableRearrangeTransform( DataSetInfo& dsi ); constructor. ~VariableRearrangeTransform(). void Initialize(); initialization of the rearrangement transformation; (nothing to do). Bool_t PrepareTransformation(const vector<TMVA::Event*>& ); prepare transformation --> (nothing to do). const TMVA::Event* Transform(const TMVA::Event*const , Int_t cls) const. const TMVA::Event* InverseTransform(const TMVA::Event*const , Int_t cls) const. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. void AttachXMLTo(void* parent); // create XML description of Rearrange transformation. void ReadFromXML(void* trfnode); // Read the transformation matrices from the xml node. void PrintTransformation(ostream& o); prints the transformation ranges. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); creates a normalizing function. VariableRearrangeTransform( DataSetInfo& dsi ). void WriteTransformationToStream(ostream& ) const; {}. void ReadTransformationFromStream(istre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableRearrangeTransform.html:9992,Variab,VariableRearrangeTransform,9992,root/html602/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableRearrangeTransform.html,2,['Variab'],['VariableRearrangeTransform']
Modifiability,"rwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooArgSet_allOwnedNodesList of owned pdfs and components; static Bool_t_autoClassAutomatic import of non-distribution class code; static list<string>_classDeclDirList; static string_classFileExportDir; static list<string>_classImplDirList; RooWorkspace::CodeRepo_classesRepository of embedded class code. This data member _must_ be first; RooLinkedList_dataListList of owned datasets; RooWorkspace::WSDir*_dir! Transient ROOT directory representation of workspace; Bool_t_doExport! Export contents of workspace to CINT?; RooLinkedList_embeddedDataListList of owned datasets that are embedded in pdfs; RooExpensiveObjectCache_eocacheCache for expensive objects; string_exportNSName! Name of CINT namespace to which contents are exported; RooFactoryWSTool*_factory! Factory tool associated with workspace; RooLinkedList_genObjectsList of generic objects; map<string,RooArgSet>_namedSetsMap of named RooArgSets; Bool_t_openTrans! Is there a transaction open?; RooArgSet_sandboxNodes! Sandbox for incoming objects in a transaction; RooLinkedList_snapshotsList of parameter snapshots; RooLinkedList_studyModsList if StudyManager modules; TUUID_uuidUnique workspace ID; RooLinkedList_viewsList of model views. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void addClassDeclImportDir(const char* dir); Add 'dir' to search path for class declaration (header) files, when; attempting to import class code with importClassClode(). void addClassImplImportDir(const char* dir); Add 'dir' to search path for class implementation (.cxx) files, when; attempting to import class code with importClassClode(). void setClassFileExportDir(const char* dir = 0); Specify the name of the directory in which embedded source; code is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooWorkspace.html:11995,Sandbox,Sandbox,11995,root/html602/RooWorkspace.html,https://root.cern,https://root.cern/root/html602/RooWorkspace.html,2,['Sandbox'],['Sandbox']
Modifiability,"ry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TBufferMergerFile.html:36252,inherit,inherited,36252,doc/v632/classROOT_1_1TBufferMergerFile.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TBufferMergerFile.html,6,['inherit'],['inherited']
Modifiability,"ry class that represents the error of a RooRealVar as a seperate object ;  ►CRooExpensiveObjectCacheRooExpensiveObjectCache is a singleton class that serves as repository for objects that are expensive to calculate ;  CExpensiveObject;  CRooExponentialExponential p.d.f ;  CRooExtendedBinding;  CRooExtendedTermRooExtendedTerm is a p.d.f with no observables that only introduces an extended ML term for a given number of expected events term when an extended ML is constructed ;  CRooExtendPdfRooExtendPdf is a wrapper around an existing PDF that adds a parameteric extended likelihood term to the PDF, optionally divided by a fractional term from a partial normalization of the PDF: ;  ►CRooFactoryWSToolRooFactoryWSTool is a clase like TTree::MakeClass() that generates skeleton code for RooAbsPdf and RooAbsReal functions given a list of input parameter names ;  CIFace;  CSpecialsIFace;  ►CRooFFTConvPdfPDF for the numerical (FFT) convolution of two PDFs ;  CFFTCacheElem;  CRooFirstMomentRooFirstMoment represents the first, second, or third order derivative of any RooAbsReal as calculated (numerically) by the MathCore Richardson derivator class ;  CRooFIter;  CRooFitResultRooFitResult is a container class to hold the input and output of a PDF fit to a dataset ;  CRooFoamGeneratorClass RooFoamGenerator is a generic toy monte carlo generator that implement the TFOAM sampling technique on any positively valued function ;  CRooFormulaRooFormula an implementation of ROOT::v5::TFormula that interfaces it to RooAbsArg value objects ;  CRooFormulaVar;  CRooFracRemainderRooFracRemainder calculates the remainder fraction of a sum of RooAbsReal fraction, i.e (1 - sum_i a_i) ;  CRooFunctorLightweight interface adaptor that exports a RooAbsPdf as a functor ;  CRooFunctor1DBindingRooCFunction1Binding is a templated implementation of class RooAbsReal that binds generic C(++) functions to a RooAbsReal argument thus allowing generic C++ functions to be used as RooFit functions ;  CRooFunctor1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/annotated.html:112610,extend,extended,112610,doc/v616/annotated.html,https://root.cern,https://root.cern/doc/v616/annotated.html,3,['extend'],['extended']
Modifiability,"ry to T.; A tree keeps a list of friends. In the context of a tree (or a chain), friendship means unrestricted access to the friends data. In this way it is much like adding another branch to the tree without taking the risk of damaging it. To add a friend to the list, you can use the TTree::AddFriend method. The tree in the diagram below has two friends (friend_tree1 and friend_tree2) and now has access to the variables a,b,c,i,j,k,l and m. The AddFriend method has two parameters, the first is the tree name and the second is the name of the ROOT file where the friend tree is saved. AddFriend automatically opens the friend file. If no file name is given, the tree called ft1 is assumed to be in the same file as the original tree.; tree.AddFriend(""ft1"",""friendfile1.root""); If the friend tree has the same name as the original tree, you can give it an alias in the context of the friendship:; tree.AddFriend(""tree1 = tree"",""friendfile1.root""); Once the tree has friends, we can use TTree::Draw as if the friend's variables were in the original tree. To specify which tree to use in the Draw method, use the syntax: <treeName>.<branchname>.<varname>; If the variablename is enough to uniquely identify the variable, you can leave out the tree and/or branch name. For example, these commands generate a 3-d scatter plot of variable ""var"" in the TTree tree versus variable v1 in TTree ft1 versus variable v2 in TTree ft2. tree.AddFriend(""ft1"",""friendfile1.root"");; tree.AddFriend(""ft2"",""friendfile2.root"");; tree.Draw(""var:ft1.v1:ft2.v2"");; . The picture illustrates the access of the tree and its friends with a Draw command. When AddFriend is called, the ROOT file is automatically opened and the friend tree (ft1) is read into memory. The new friend (ft1) is added to the list of friends of tree. The number of entries in the friend must be equal or greater to the number of entries of the original tree. If the friend tree has fewer entries a warning is given and the missing entries are not ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:71609,variab,variables,71609,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,2,['variab'],['variables']
Modifiability,"ry usage in uncompressed buffers versus actual occupancy. ;  ; Int_t fTimerInterval;  Timer interval in milliseconds. ;  ; std::atomic< Long64_t > fTotalBuffers;  ! Total number of bytes in branch buffers ;  ; Long64_t fTotBytes;  Total number of bytes in all branches before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TVirtualIndex * fTreeIndex;  Pointer to the tree Index (if any) ;  ; Int_t fUpdate;  Update frequency for EntryLoop. ;  ; TList * fUserInfo;  pointer to a list of user objects associated to this Tree ;  ; Double_t fWeight;  Tree weight (see TTree::SetWeight) ;  ; Long64_t fZipBytes;  Total number of bytes in all branches after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TTree; enum  { kSplitCollectionOfPointers = 100; };  ; enum  ESetBranchAddressStatus { ;   kMissingBranch = -5; , kInternalError = -4; , kMissingCompiledCollectionProxy = -3; , kMismatch = -2; , ;   kClassMismatch = -1; , kMatch = 0; , kMatchConversion = 1; , kMatchConversionCollection = 2; , ;   kMakeClass = 3; , kVoidPtr = 4; , kNoCheck = 5; , kNeedEnableDecomposedObj = (1ULL << ( 29 )); , ;   kNeedDisableDecomposedObj = (1ULL << ( 30 )); , kDecomposedObjMask = kNeedEnableDecomposedObj | kNeedDisableDecomposedObj. };  ; enum  EStatusBits { kForceRead = (1ULL << ( 11 )); , kCircular = (1ULL << ( 12 )); , kOnlyFlushAtCluster = (1ULL << ( 14 )); , kEntriesReshuffled =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHbookTree.html:44021,inherit,inherited,44021,doc/master/classTHbookTree.html,https://root.cern,https://root.cern/doc/master/classTHbookTree.html,2,['inherit'],['inherited']
Modifiability,"ry usage in uncompressed buffers versus actual occupancy. ;  ; Int_t fTimerInterval;  Timer interval in milliseconds. ;  ; std::atomic< Long64_t > fTotalBuffers;  ! Total number of bytes in branch buffers ;  ; Long64_t fTotBytes;  Total number of bytes in all branches before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TVirtualIndex * fTreeIndex;  Pointer to the tree Index (if any) ;  ; Int_t fUpdate;  Update frequency for EntryLoop. ;  ; TList * fUserInfo;  pointer to a list of user objects associated to this Tree ;  ; Double_t fWeight;  Tree weight (see TTree::SetWeight) ;  ; Long64_t fZipBytes;  Total number of bytes in all branches after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions; void AddAliases ();  Aliases are added to the input list. ;  ; void FillDrawAttributes (TProof *p);  Communicate the drawing attributes for this chain to the input list so that the draw selectors can use them, in case of need. ;  . Additional Inherited Members;  Static Public Attributes inherited from TChain; static constexpr auto kBigNumber = TTree::kMaxEntries;  ;  Static Public Attributes inherited from TTree; static constexpr Long64_t kMaxEntries = TVirtualTreePlayer::kMaxEntries;  ;  Protected Types inherited from TTree; enum  ELockStatusBits { ;   kFindBranch = (1ULL << ( 0 )); , kFindLeaf = (1ULL << ( 1 )); , kGetAlias = (1ULL << ( 2 )); , kGetBranch = (1ULL << ( 3 )); , ;   kGetEntry = (1ULL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofChain.html:49503,inherit,inherited,49503,doc/master/classTProofChain.html,https://root.cern,https://root.cern/doc/master/classTProofChain.html,1,['inherit'],['inherited']
Modifiability,"ry usage in uncompressed buffers versus actual occupancy. ;  ; Int_t fTimerInterval;  Timer interval in milliseconds. ;  ; std::atomic< Long64_t > fTotalBuffers;  ! Total number of bytes in branch buffers ;  ; Long64_t fTotBytes;  Total number of bytes in all branches before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TVirtualIndex * fTreeIndex;  Pointer to the tree Index (if any) ;  ; Int_t fUpdate;  Update frequency for EntryLoop. ;  ; TList * fUserInfo;  pointer to a list of user objects associated to this Tree ;  ; Double_t fWeight;  Tree weight (see TTree::SetWeight) ;  ; Long64_t fZipBytes;  Total number of bytes in all branches after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TChain (const TChain &);  ; TChain & operator= (const TChain &);  ; void ParseTreeFilename (const char *name, TString &filename, TString &treename, TString &query, TString &suffix) const;  Get the tree url or filename and other information from the name. ;  . Additional Inherited Members;  Protected Types inherited from TTree; enum  ELockStatusBits { ;   kFindBranch = (1ULL << ( 0 )); , kFindLeaf = (1ULL << ( 1 )); , kGetAlias = (1ULL << ( 2 )); , kGetBranch = (1ULL << ( 3 )); , ;   kGetEntry = (1ULL << ( 4 )); , kGetEntryWithIndex = (1ULL << ( 5 )); , kGetFriend = (1ULL << ( 6 )); , kGetFriendAlias = (1ULL << ( 7 )); , ;   kGetLeaf = (1ULL << ( 8 )); , kLoadTree = (1ULL << ( 9 )); , kPrint = (1ULL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:51347,inherit,inherited,51347,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,2,['inherit'],['inherited']
Modifiability,"ry usage in uncompressed buffers versus actual occupancy. ;  ; Int_t fTimerInterval;  Timer interval in milliseconds. ;  ; std::atomic< Long64_t > fTotalBuffers;  ! Total number of bytes in branch buffers ;  ; Long64_t fTotBytes;  Total number of bytes in all branches before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TVirtualIndex * fTreeIndex;  Pointer to the tree Index (if any) ;  ; Int_t fUpdate;  Update frequency for EntryLoop. ;  ; TList * fUserInfo;  pointer to a list of user objects associated to this Tree ;  ; Double_t fWeight;  Tree weight (see TTree::SetWeight) ;  ; Long64_t fZipBytes;  Total number of bytes in all branches after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TNtuple (const TNtuple &)=delete;  ; TNtuple & operator= (const TNtuple &)=delete;  . Additional Inherited Members;  Public Types inherited from TTree; enum  { kSplitCollectionOfPointers = 100; };  ; enum  ESetBranchAddressStatus { ;   kMissingBranch = -5; , kInternalError = -4; , kMissingCompiledCollectionProxy = -3; , kMismatch = -2; , ;   kClassMismatch = -1; , kMatch = 0; , kMatchConversion = 1; , kMatchConversionCollection = 2; , ;   kMakeClass = 3; , kVoidPtr = 4; , kNoCheck = 5; , kNeedEnableDecomposedObj = (1ULL << ( 29 )); , ;   kNeedDisableDecomposedObj = (1ULL << ( 30 )); , kDecomposedObjMask = kNeedEnableDecomposedObj | kNeedDisableDecomposedObj. };  ; enum  EStatusBits { kForceRead = (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtuple.html:46803,inherit,inherited,46803,doc/master/classTNtuple.html,https://root.cern,https://root.cern/doc/master/classTNtuple.html,1,['inherit'],['inherited']
Modifiability,"ry usage in uncompressed buffers versus actual occupancy. ;  ; Int_t fTimerInterval;  Timer interval in milliseconds. ;  ; std::atomic< Long64_t > fTotalBuffers;  ! Total number of bytes in branch buffers ;  ; Long64_t fTotBytes;  Total number of bytes in all branches before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TVirtualIndex * fTreeIndex;  Pointer to the tree Index (if any) ;  ; Int_t fUpdate;  Update frequency for EntryLoop. ;  ; TList * fUserInfo;  pointer to a list of user objects associated to this Tree ;  ; Double_t fWeight;  Tree weight (see TTree::SetWeight) ;  ; Long64_t fZipBytes;  Total number of bytes in all branches after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TNtupleD (const TNtupleD &)=delete;  ; TNtupleD & operator= (const TNtupleD &)=delete;  . Additional Inherited Members;  Public Types inherited from TTree; enum  { kSplitCollectionOfPointers = 100; };  ; enum  ESetBranchAddressStatus { ;   kMissingBranch = -5; , kInternalError = -4; , kMissingCompiledCollectionProxy = -3; , kMismatch = -2; , ;   kClassMismatch = -1; , kMatch = 0; , kMatchConversion = 1; , kMatchConversionCollection = 2; , ;   kMakeClass = 3; , kVoidPtr = 4; , kNoCheck = 5; , kNeedEnableDecomposedObj = (1ULL << ( 29 )); , ;   kNeedDisableDecomposedObj = (1ULL << ( 30 )); , kDecomposedObjMask = kNeedEnableDecomposedObj | kNeedDisableDecomposedObj. };  ; enum  EStatusBits { kForceRead",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtupleD.html:46765,inherit,inherited,46765,doc/master/classTNtupleD.html,https://root.cern,https://root.cern/doc/master/classTNtupleD.html,1,['inherit'],['inherited']
Modifiability,ry usage in uncompressed buffers versus actual occupancy. ;  ; Int_t fTimerInterval;  Timer interval in milliseconds. ;  ; std::atomic< Long64_t > fTotalBuffers;  ! Total number of bytes in branch buffers ;  ; Long64_t fTotBytes;  Total number of bytes in all branches before compression. ;  ; TBuffer * fTransientBuffer;  ! Pointer to the current transient buffer. ;  ; TVirtualIndex * fTreeIndex;  Pointer to the tree Index (if any) ;  ; Int_t fUpdate;  Update frequency for EntryLoop. ;  ; TList * fUserInfo;  pointer to a list of user objects associated to this Tree ;  ; Double_t fWeight;  Tree weight (see TTree::SetWeight) ;  ; Long64_t fZipBytes;  Total number of bytes in all branches after compression. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Static Protected Attributes; static Int_t fgBranchStyle = 1;  Old/New branch style. ;  ; static Long64_t fgMaxTreeSize = 100000000000LL;  Maximum size of a file containing a Tree. ;  . Private Types; using TIOFeatures = ROOT::TIOFeatures;  . Private Member Functions; Int_t FlushBasketsImpl () const;  Internal implementation of the FlushBaskets algorithm. ;  ; Long64_t GetMedianClusterSize ();  Estimate the median cluster size for the TTree. ;  ; void InitializeBranchLists (bool checkLeafCount);  Divides the top-level branches into two vectors: (i) branches to be processed sequentially and (ii) branches to be processed in parallel. ;  ; void MarkEventCluster ();  Mark the previous event as being at the end of the event cluste,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:64429,inherit,inherited,64429,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,2,['inherit'],['inherited']
Modifiability,"ry you are in is called the current directory and is stored in the global variable gDirectory. Let us look at a more detailed example of a ROOT file and its role as the current directory. First, we create a ROOT file by executing a sample script.; root[] .x $ROOTSYS/tutorials/hsimple.C; Now you should have hsimple.root in your directory. The file was closed by the script so we have to open it again to work with it. We open the file with the intent to update it, and list its contents.; root[] TFile f (""hsimple.root"",""UPDATE""); root[] f.ls(); TFile** hsimple.root; TFile* hsimple.root; KEY: TH1F hpx;1 This is the px distribution; KEY: TH2F hpxpy;1 py vs px; KEY: TProfile hprof;1 Profile of pz versus px; KEY: TNtuple ntuple;1 Demo ntuple; It shows the two lines starting with TFile followed by four lines starting with the word “KEY”. The four keys tell us that there are four objects on disk in this file. The syntax of the listing is:; KEY: <class> <variable>;<cycle number> <title>; For example, the first line in the list means there is an object in the file on disk, called hpx. It is of the class TH1F (one-dimensional histogram of floating numbers). The object’s title is “This is the px distribution”. If the line starts with OBJ, the object is in memory. The <class> is the name of the ROOT class (T-something). The <variable> is the name of the object. The cycle number along with the variable name uniquely identifies the object. The <title> is the string given in the constructor of the object as title. The structure of TFile. The figure shows a TFile with five objects in the top directory (kObjA;1, kObjA;2, kObjB;1, kObjC;1 and kObjD;1). ObjA is on file twice with two different cycle numbers. It also shows four objects in memory (mObjE, mObjeF, mObjM, mObjL). It also shows several subdirectories.; 11.2.2 The Current Directory; When you create a TFile object, it becomes the current directory. Therefore, the last file to be opened is always the current directory. To check yo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:446323,variab,variable,446323,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"ry&); RooStats::NumberCountingPdfFactory&operator=(const RooStats::NumberCountingPdfFactory&); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. RooRealVar*SafeObservableCreation(RooWorkspace* ws, const char* varName, Double_t value); RooRealVar*SafeObservableCreation(RooWorkspace* ws, const char* varName, Double_t value, Double_t maximum). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; NumberCountingPdfFactory(); constructor. ~NumberCountingPdfFactory(); destructor. void AddModel(Double_t* sigExp, Int_t nchan, RooWorkspace* ws, const char* pdfName = ""CombinedPdf"", const char* masterSignalName = ""masterSignal""); This method produces a PDF for N channels with uncorrelated background; uncertainty. It relates the signal in each channel to a master signal strength times the; expected signal in each channel. For the future, perhaps this method should be extended to include the efficiency terms automatically. void AddExpData(Double_t* sigExp, Double_t* bkgExp, Double_t* db, Int_t nbins, RooWorkspace* ws, const char* dsName = ""ExpectedNumberCountingData""); Arguements are an array of expected signal, expected background, and relative; background uncertainty (eg. 0.1 for 10% uncertainty), and the number of channels. void AddExpDataWithSideband(Double_t* sigExp, Double_t* bkgExp, Double_t* tau, Int_t nbins, RooWorkspace* ws, const char* dsName = ""NumberCountingData""); Arguements are an array of expected signal, expected background, and relative; ratio of background expected in the sideband to that expected in signal region, and the number of channels. RooRealVar* SafeObservableCreation(RooWorkspace* ws, const char* varName, Double_t value); need to be careful here that the range of observable in the dataset is consistent with the one in the workspace; don't rescale unless necessary. If it is necessary, then rescale by x10 or a defined maximum.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__NumberCountingPdfFactory.html:3243,extend,extended,3243,root/html526/RooStats__NumberCountingPdfFactory.html,https://root.cern,https://root.cern/root/html526/RooStats__NumberCountingPdfFactory.html,1,['extend'],['extended']
Modifiability,"ry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fLast;  ; Int_t fLowerBound;  ; TProcessID * fPID;  ; UInt_t * fUIDs;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Friends; class TRefArrayIter;  . Additional Inherited Members;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRefArray.h>. Inheritance diagram for TRefArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TRefArrayIter TRefArray::Iterator_t. Definition at line 51 of file TRefArray.h. Constructor & Destructor Documentation. ◆ TRefArray() [1/4]. TRefArray::TRefArray ; (; TProcessID * ; pid = nullptr). default constructor ; Definition at line 109 of file TRefArray.cxx. ◆ TRefArray() [2/4]. TRefArray::TRefArray ; (; Int_t ; s, . TProcessID * ; pid . ). Create an object array. ; Using s one can set the array size and lowerBound can be used to set the array lowerbound index (default is 0). ; Definition at line 124 of file TRefArray.cxx. ◆ TRefArray() [3/4]. TRefArray::TRefArray ; (; Int_t ; s, . Int_t ; lowerBound = 0, . TProcessID * ; pid = nullptr . ). Create an ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRefArray.html:23062,inherit,inherited,23062,doc/master/classTRefArray.html,https://root.cern,https://root.cern/doc/master/classTRefArray.html,2,['inherit'],['inherited']
Modifiability,"ry* reg); Bool_tStoreTString(TSqlRegistry* reg); Bool_tTryConvertObjectArray(TSqlRegistry* reg, TSqlRawBuffer* blobs). Data Members; public:. enum ESQLTypes { kSqlObject; kSqlPointer; kSqlVersion; kSqlStreamerInfo; kSqlClassStreamer; kSqlElement; kSqlValue; kSqlArray; kSqlObjectData; kSqlCustomClass; kSqlCustomElement; };; enum ESQLColumns { kColUnknown; kColSimple; kColSimpleArray; kColParent; kColObject; kColObjectArray; kColNormObject; kColNormObjectArray; kColObjectPtr; kColTString; kColRawData; };; enum ESQLIdType { kIdTable; kIdRawTable; kIdColumn; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfArrayIndex!; TObjArrayfChilds!; TSQLStructure*fParent!; const void*fPointer!; Int_tfRepeatCnt!; Int_tfType!; TStringfValue!. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSQLStructure(); default constructor. ~TSQLStructure(); destructor. Int_t NumChilds() const; number of child structures. TSQLStructure* GetChild(Int_t n) const; return child structure of index n. void SetObjectRef(Long64_t refid, const TClass* cl); set structure type as kSqlObject. void SetObjectPointer(Long64_t ptrid); set structure type as kSqlPointer. void SetVersion(const TClass* cl, Int_t version = -100); set structure type as kSqlVersion. void SetClassStreamer(const TClass* cl); set structure type as kSqlClassStreamer. void SetStreamerInfo(const TStreamerInfo* info); set structure type as kSqlStreamerInfo. void SetStreamerElement(const TStreamerElement* elem, Int_t number); set structure type as kSqlElement. void SetCustomClass(const TClass* cl, Version_t version); set structure type as kSqlCustomClass. void SetCustomElement(TStreamerElement* elem); set structure type as kSqlCustomElement. void SetValue(const char* value, const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSQLStructure.html:9015,Inherit,Inheritance,9015,root/html532/TSQLStructure.html,https://root.cern,https://root.cern/root/html532/TSQLStructure.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ry* theTargetDir = NULL); TMVA::MethodFisherMethodFisher(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& dsi, const TString& theOption = ""Fisher"", TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidPrintCoefficients(); virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodFisher.html:11554,Config,Configurable,11554,root/html534/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodFisher.html,1,['Config'],['Configurable']
Modifiability,"ry* theTargetDir = NULL); TMVA::MethodHMatrixMethodHMatrix(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodHMatrix.html:10032,Config,Configurable,10032,root/html534/TMVA__MethodHMatrix.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodHMatrix.html,1,['Config'],['Configurable']
Modifiability,"ry* theTargetDir = NULL); TMVA::MethodRuleFitMethodRuleFit(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodRuleFit.html:10116,Config,Configurable,10116,root/html534/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodRuleFit.html,1,['Config'],['Configurable']
Modifiability,"ry. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  { kNoInt; , kValidInt; , kInvalidInt; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  THnBase ();  ;  THnBase (const char *name, const char *title, Int_t dim, const Int_t *nbins, const Double_t *xmin, const Double_t *xmax);  Construct a THnBase with ""dim"" dimensions, ""nbins"" holds the number of bins for each dimension; ""xmin"" and ""xmax"" the minimal and maximal value for each dimension. ;  ;  THnBase (const char *name, const char *title, Int_t dim, const Int_t *nbins, const std::vector< std::vector< double > > &xbins);  ;  THnBase (const THnBase &other);  ;  THnBase (THnBase &&other);  ; void AddInternal (const THnBase *h, Double_t c, Bool_t rebinned);  Add() implementation for both rebinned histograms and those with identical binning. ;  ; Bool_t CheckConsistency (const THnBase *h, const char *tag) const;  Consistency check on (some of) the parameters of two histograms (for operations). ;  ; THnBase * CloneEmpty (const char *name, const char *title, const TObjArray",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnBase.html:15878,inherit,inherited,15878,doc/master/classTHnBase.html,https://root.cern,https://root.cern/doc/master/classTHnBase.html,1,['inherit'],['inherited']
Modifiability,"ry. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TGWindow * fWindow;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGIdleHandler.h>. Inheritance diagram for TGIdleHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGIdleHandler.html:9165,inherit,inherited,9165,doc/master/classTGIdleHandler.html,https://root.cern,https://root.cern/doc/master/classTGIdleHandler.html,1,['inherit'],['inherited']
Modifiability,"ry. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Bool_t fModified;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGLayout.h>. Inheritance diagram for TGLayoutManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLayoutManager.html:9241,inherit,inherited,9241,doc/master/classTGLayoutManager.html,https://root.cern,https://root.cern/doc/master/classTGLayoutManager.html,1,['inherit'],['inherited']
Modifiability,"ry::ESTLTypekMultiset; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TDictionary::ESTLTypekNone; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TDictionary::ESTLTypekSet; static TObject::(anonymous)TObject::kSingleKey; static TDictionary::ESTLTypekUnorderedMap; static TDictionary::ESTLTypekUnorderedMultimap; static TDictionary::ESTLTypekUnorderedMultiset; static TDictionary::ESTLTypekUnorderedSet; static TDictionary::ESTLTypekVector; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TDictAttributeMap*fAttributeMappointer to a class attribute map; ULong64_tfUpdatingTransactionCount!the Cling ID of the transaction that last updated the object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDictionary(const TDictionary& dict); Copy constructor, cloning fAttributeMap. ~TDictionary(); Destruct a TDictionary, delete the attribute map. TDictionary & operator=(const TDictionary& other); Assignment op, cloning fAttributeMap. void CreateAttributeMap(); Create a TDictAttributeMap for a TClass to be able to add attribute pairs; key-value to the TClass. TDictionary* GetDictionary(const char* name); Retrieve the type (class, fundamental type, typedef etc); named ""name"". Returned object is either a TClass or TDataType.; Returns 0 if the type is unknown. TDictionary* GetDictionary(const type_info& typeinfo); Retrieve the type (class, fundamental type, typedef etc); with typeid typeinfo. Returned object is either a TClass or TDataType.; Returns 0 if the type is unknown. Bool_t UpdateInterpreterStateMarker(); Return true if there were any transactions that could have changed the; state of the object. TDictionary(); { }. TDictionary(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TDictionary.html:7636,Inherit,Inheritance,7636,root/html604/TDictionary.html,https://root.cern,https://root.cern/root/html604/TDictionary.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ry::fParseLine ; (; TString & ; line). private . Parse a single line an puts the content in the RooWorkSpace. ; Parse a single line and puts the content in the RooWorkSpace. ; Definition at line 519 of file HLFactory.cxx. ◆ fReadFile(). int HLFactory::fReadFile ; (; const char * ; fileName, . bool ; is_included = false . ). private . Read the actual cfg file. ; Parses the configuration file.; The objects can be specified following the rules of the RooFactoryWSTool, plus some more flexibility.; The official format for the datacards is "".rs"".; All the instructions end with a "";"" (like in C++).; Carriage returns and white lines are irrelevant but advised since they improve readability (like in C++).; The (Roo)ClassName::objname(description) can be replaced with the more ""pythonic"" objname = (Roo)ClassName(description).; The comments can be specified with a ""//"" if on a single line or with ""multiple lines"" in C/C++ like comments.; The ""#include path/to/file.rs"" statement triggers the inclusion of a configuration fragment.; The ""import myobject:myworkspace:myrootfile"" will add to the Workspace the object myobject located in myworkspace recorded in myrootfile. Alternatively, one could choose the ""import myobject:myrootfile"" in case no Workspace is present.; The ""echo"" statement prompts a message on screen. ; Definition at line 347 of file HLFactory.cxx. ◆ GetTotBkgPdf(). RooAbsPdf * HLFactory::GetTotBkgPdf ; (; ). Get the combined background pdf. ; Return the combination of the background only channels.; If no background channel is specified a nullptr pointer is returned. The factory owns the object. ; Definition at line 202 of file HLFactory.cxx. ◆ GetTotCategory(). RooCategory * HLFactory::GetTotCategory ; (; ). Get the combined dataset. ; Return the category.; The factory owns the object. ; Definition at line 299 of file HLFactory.cxx. ◆ GetTotDataSet(). RooDataSet * HLFactory::GetTotDataSet ; (; ). Get the combined dataset. ; Return the combination of the datasets.; If",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HLFactory.html:17682,config,configuration,17682,doc/master/classRooStats_1_1HLFactory.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HLFactory.html,1,['config'],['configuration']
Modifiability,"ry; pEff->Write();; }; Example 2:; TEfficiency* pEff = 0;; TFile* pFile = new TFile(""myfile.root"",""recreate"");; //h_pass and h_total are valid and consistent histograms; if(TEfficiency::CheckConsistency(h_pass,h_total)); {; pEff = new TEfficiency(h_pass,h_total);; //this will attach the TEfficiency object to the current directory; pEff->SetDirectory(gDirectory);; //now all objects in gDirectory will be written to ""myfile.root""; pFile->Write();; }. In the case that you already have two filled histograms and you only want to; plot them as a graph, you should rather use TGraphAsymmErrors::TGraphAsymmErrors(const TH1* pass,const TH1* total,Option_t* opt); to create a graph object.; III. Filling with events; You can fill the TEfficiency object by calling the Fill(Bool_t bPassed,Double_t x,Double_t y,Double_t z) method.; The boolean flag ""bPassed"" indicates whether the current event is a good; (both histograms are filled) or not (only fTotalHistogram is filled).; The variables x,y and z determine the bin which is filled. For lower; dimensions the z- or even the y-value may be omitted.; . Picture; Source. {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand3;. bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand3.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }. pEff->Draw(""AP"");. //only for this documentation; return c1;; }; . You can also set the number of passed or total events for a bin directly by; using the SetPassedEvents or SetTotalEvents method.; IV. Statistic options; The calculation of the estimated efficiency depends on the chosen statistic; option. Let ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEfficiency.html:5124,variab,variables,5124,root/html602/TEfficiency.html,https://root.cern,https://root.cern/root/html602/TEfficiency.html,4,['variab'],['variables']
Modifiability,"ryInitMode = kFALSE); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Bool_tisShapeServer() const; Bool_tisValueServer() const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooAbsArg*_argPointer to content of proxy; Bool_t_isFundIf true proxy contains an lvalue; RooArgSet*RooAbsProxy::_nset! Normalization set to be used for evaluation of RooAbsPdf contents; Bool_t_ownArgIf true proxy owns contents; RooAbsArg*_ownerPointer to owner of proxy; Bool_t_shapeServerIf true contents is shape server of owner; Bool_t_valueServerIf true contents is value server of owner; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooArgProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t valueServer, Bool_t shapeServer, Bool_t proxyOwnsArg = kFALSE); Constructor with owner and proxied variable. RooArgProxy(const char* name, const char* desc, RooAbsArg* owner, RooAbsArg& arg, Bool_t valueServer, Bool_t shapeServer, Bool_t proxyOwnsArg = kFALSE); Constructor with owner and proxied variable. The valueServer and shapeServer booleans; control if the inserted client-server link in the owner propagates value and/or; shape dirty flags. If proxyOwnsArg is true, the proxy takes ownership of its component. RooArgProxy(const char* name, RooAbsArg* owner, const RooArgProxy& other); Copy constructor. ~RooArgProxy(); Destructor. Bool_t changePointer(const RooAbsCollection& newServerSet, Bool_t nameChange = kFALSE, Bool_t factoryInitMode = kFALSE); Change proxied object to object of same name in given list. If nameChange is true; the replacement object can have a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooArgProxy.html:7201,Inherit,Inheritance,7201,root/html534/RooArgProxy.html,https://root.cern,https://root.cern/root/html534/RooArgProxy.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rySelectable; void ProcessGLSelectionInternal (TGLSelectRecord &rec, SelectionSet_t &sset);  Process secondary GL selection and populate given set accordingly. ;  . Protected Attributes; Bool_t fAntiFlick;  ; Callback_foo fCallbackFoo;  ; Color_t fColor;  The last / current idx added to collection. ;  ; Int_t fDefaultValue;  ; TRefArray * fDigitIds;  ; Bool_t fDisableLighting;  ; Bool_t fEmitSignals;  ; TEveFrameBox * fFrame;  ; Bool_t fHighlightFrame;  ; Bool_t fHistoButtons;  ; DigitBase_t * fLastDigit;  ; Int_t fLastIdx;  The last / current digit added to collection. ;  ; Bool_t fOwnIds;  ; TEveRGBAPalette * fPalette;  ; TEveChunkManager fPlex;  ; ERenderMode_e fRenderMode;  ; Bool_t fSelectViaFrame;  ; Bool_t fSingleColor;  ; TooltipCB_foo fTooltipCBFoo;  Additional function to call on secondary-select. ;  ; Bool_t fValueIsColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  lis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveDigitSet.html:41570,inherit,inherited,41570,doc/master/classTEveDigitSet.html,https://root.cern,https://root.cern/doc/master/classTEveDigitSet.html,1,['inherit'],['inherited']
Modifiability,"ryTree*CreateTree() const; TMVA::Node*GetLeftDaughter(TMVA::Node* n); UInt_tGetNNodes() const; TMVA::Node*GetRightDaughter(TMVA::Node* n); virtual TMVA::Node*GetRoot() const; UInt_tGetTotalTreeDepth() const; virtual TClass*IsA() const; TMVA::BinaryTree&operator=(const TMVA::BinaryTree&); virtual voidPrint(ostream& os) const; virtual voidRead(istream& istr, UInt_t tmva_Version_Code = 262656); virtual voidReadXML(void* node, UInt_t tmva_Version_Code = 262656); voidSetRoot(TMVA::Node* r); voidSetTotalTreeDepth(Int_t depth); voidSetTotalTreeDepth(TMVA::Node* n = __null); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. voidDeleteNode(TMVA::Node*); TMVA::MsgLogger&Log() const. Data Members; protected:. UInt_tfDepthmaximal depth in tree reached; UInt_tfNNodestotal number of nodes in the tree (counted); TMVA::Node*fRootthe root node of the tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BinaryTree(const TMVA::BinaryTree& ); constructor for a yet ""empty"" tree. Needs to be filled afterwards. ~BinaryTree( void ); destructor (deletes the nodes and ""events"" if owned by the tree. void DeleteNode(TMVA::Node* ); protected, recursive, function used by the class destructor and when Pruning. TMVA::Node* GetLeftDaughter(TMVA::Node* n); get left daughter node current node ""n"". TMVA::Node* GetRightDaughter(TMVA::Node* n); get right daughter node current node ""n"". UInt_t CountNodes(TMVA::Node* n = __null); return the number of nodes in the tree. (make a new count --> takes time). void Print(ostream& os) const; recursively print the tree. void* AddXMLTo(void* parent) const; add attributes to XML. void ReadXML(void* node, UInt_t tmva_Version_Code = 262656); read attributes from XML. void Read(istream& istr, UInt_t tmva_Version_Code = 262656); Read the binary tree from an input stream.; The input stream format depends on the tree type,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__BinaryTree.html:1811,Inherit,Inheritance,1811,root/html602/TMVA__BinaryTree.html,https://root.cern,https://root.cern/root/html602/TMVA__BinaryTree.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ryTree*CreateTree() const; TMVA::Node*GetLeftDaughter(TMVA::Node* n); UInt_tGetNNodes() const; TMVA::Node*GetRightDaughter(TMVA::Node* n); virtual TMVA::Node*GetRoot() const; UInt_tGetTotalTreeDepth() const; virtual TClass*IsA() const; TMVA::BinaryTree&operator=(const TMVA::BinaryTree&); virtual voidPrint(ostream& os) const; virtual voidRead(istream& istr, UInt_t tmva_Version_Code = 262657); virtual voidReadXML(void* node, UInt_t tmva_Version_Code = 262657); voidSetRoot(TMVA::Node* r); voidSetTotalTreeDepth(Int_t depth); voidSetTotalTreeDepth(TMVA::Node* n = __null); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. voidDeleteNode(TMVA::Node*); TMVA::MsgLogger&Log() const. Data Members; protected:. UInt_tfDepthmaximal depth in tree reached; UInt_tfNNodestotal number of nodes in the tree (counted); TMVA::Node*fRootthe root node of the tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BinaryTree(const TMVA::BinaryTree& ); constructor for a yet ""empty"" tree. Needs to be filled afterwards. ~BinaryTree( void ); destructor (deletes the nodes and ""events"" if owned by the tree. void DeleteNode(TMVA::Node* ); protected, recursive, function used by the class destructor and when Pruning. TMVA::Node* GetLeftDaughter(TMVA::Node* n); get left daughter node current node ""n"". TMVA::Node* GetRightDaughter(TMVA::Node* n); get right daughter node current node ""n"". UInt_t CountNodes(TMVA::Node* n = __null); return the number of nodes in the tree. (make a new count --> takes time). void Print(ostream& os) const; recursively print the tree. void* AddXMLTo(void* parent) const; add attributes to XML. void ReadXML(void* node, UInt_t tmva_Version_Code = 262657); read attributes from XML. void Read(istream& istr, UInt_t tmva_Version_Code = 262657); Read the binary tree from an input stream.; The input stream format depends on the tree type,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__BinaryTree.html:1819,Inherit,Inheritance,1819,root/html604/TMVA__BinaryTree.html,https://root.cern,https://root.cern/root/html604/TMVA__BinaryTree.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ry_"", ""column1"", ""column2""}); 495 /// DefineSlotEntry(""x"", function, {""column1"", ""column2""}); 496 /// ~~~; 497 ///; 498 /// See Define() for more information.; 499 template <typename F>; 500 RInterface<Proxied, DS_t> DefineSlotEntry(std::string_view name, F expression, const ColumnNames_t &columns = {}); 501 {; 502 return DefineImpl<F, RDFDetail::ExtraArgsForDefine::SlotAndEntry>(name, std::move(expression), columns,; 503 ""DefineSlotEntry"");; 504 }; 505 // clang-format on; 506 ; 507 ////////////////////////////////////////////////////////////////////////////; 508 /// \brief Define a new column.; 509 /// \param[in] name The name of the defined column.; 510 /// \param[in] expression An expression in C++ which represents the defined value; 511 /// \return the first node of the computation graph for which the new quantity is defined.; 512 ///; 513 /// The expression is just-in-time compiled and used to produce the column entries.; 514 /// It must be valid C++ syntax in which variable names are substituted with the names; 515 /// of branches/columns.; 516 ///; 517 /// \note If the body of the string expression contains an explicit `return` statement (even if it is in a nested; 518 /// scope), RDataFrame _will not_ add another one in front of the expression. So this will not work:; 519 /// ~~~{.cpp}; 520 /// df.Define(""x2"", ""Map(v, [](float e) { return e*e; })""); 521 /// ~~~; 522 /// but instead this will:; 523 /// ~~~{.cpp}; 524 /// df.Define(""x2"", ""return Map(v, [](float e) { return e*e; })""); 525 /// ~~~; 526 ///; 527 /// Refer to the first overload of this method for the full documentation.; 528 RInterface<Proxied, DS_t> Define(std::string_view name, std::string_view expression); 529 {; 530 constexpr auto where = ""Define"";; 531 RDFInternal::CheckValidCppVarName(name, where);; 532 // these checks must be done before jitting lest we throw exceptions in jitted code; 533 RDFInternal::CheckForRedefinition(where, name, fColRegister, fLoopManager->GetBranchNames(),; 534 fDat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:26538,variab,variable,26538,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['variab'],['variable']
Modifiability,"rying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TApplicationServer * fServ;  . Additional Inherited Members;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASInputHandler.html:11839,inherit,inherited,11839,doc/master/classTASInputHandler.html,https://root.cern,https://root.cern/doc/master/classTASInputHandler.html,2,['inherit'],['inherited']
Modifiability,"rying-length array of objects.; 861 // Loop over the elements of the varying length array.; 862 for (Int_t v = 0; v < vlen; ++v) {; 863 // Read the object from the buffer.; 864 cl->Streamer(pp[ndx] + (v * cl->Size()), buf);; 865 } // v; 866 } else {; 867 // -- We are a varying-length array of object pointers.; 868 // Get a pointer to the object pointer array.; 869 char **r = (char **)pp[ndx];; 870 // Loop over the elements of the varying length array.; 871 for (Int_t v = 0; v < vlen; ++v) {; 872 // Allocate an object to read into.; 873 r[v] = (char *)cl->New();; 874 if (!r[v]) {; 875 // Do not print a second error message here.; 876 // Error(""ReadBuffer"", ""Memory allocation failed!\n"");; 877 continue;; 878 }; 879 // Read the object from the buffer.; 880 cl->Streamer(r[v], buf);; 881 } // v; 882 } // isPtrPtr; 883 } // ndx; 884 // } // k; 885 } // fileVersion; 886 buf.CheckByteCount(start, count, config->fCompInfo->fElem->GetFullName());; 887 return 0;; 888 }; 889 ; 890 class TConfWithFactor : public TConfiguration {; 891 // Configuration object for the Float16/Double32 where a factor has been specified.; 892 public:; 893 Double_t fFactor;; 894 Double_t fXmin;; 895 TConfWithFactor(TVirtualStreamerInfo *info, UInt_t id, TCompInfo_t *compinfo, Int_t offset, Double_t factor, Double_t xmin) : TConfiguration(info,id,compinfo,offset),fFactor(factor),fXmin(xmin) {};; 896 TConfiguration *Copy() override { return new TConfWithFactor(*this); }; 897 };; 898 ; 899 template <typename T>; 900 INLINE_TEMPLATE_ARGS Int_t ReadBasicType_WithFactor(TBuffer &buf, void *addr, const TConfiguration *config); 901 {; 902 // Stream a Float16 or Double32 where a factor has been specified.; 903 //a range was specified. We read an integer and convert it back to a double.; 904 ; 905 TConfWithFactor *conf = (TConfWithFactor *)config;; 906 buf.ReadWithFactor((T*)( ((char*)addr) + config->fOffset ), conf->fFactor, conf->fXmin);; 907 return 0;; 908 }; 909 ; 910 class TConfNoFactor : public TConfigura",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:35867,config,config,35867,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"rywavelength entry; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCurlyLineEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor of CurlyLine GUI. ~TCurlyLineEditor(); Destructor of CurlyLine editor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Pick up the used curly line attributes. void ActivateBaseClassEditors(TClass* cl); Exclude TAttFillEditor. void DoStartXY(); Slot connected to the CurlyLine StartPoint. void DoEndXY(); Slot connected to the CurlyLine End. void DoAmplitude(); Slot connected to the amplitude setting. void DoWaveLength(); Slot connected to the wavelength setting. void DoWavy(); Slot connected to the wavy / curly setting. » Author: Ilka Antcheva, Otto Schaile 15/12/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/ged:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TCurlyLineEditor.html:20211,Inherit,Inheritance,20211,root/html534/TCurlyLineEditor.html,https://root.cern,https://root.cern/root/html534/TCurlyLineEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"rywavelength entry; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCurlyLineEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor of CurlyLine GUI. ~TCurlyLineEditor(); Destructor of CurlyLine editor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Pick up the used curly line attributes. void ActivateBaseClassEditors(TClass* cl); Exclude TAttFillEditor. void DoStartXY(); Slot connected to the CurlyLine StartPoint. void DoEndXY(); Slot connected to the CurlyLine End. void DoAmplitude(); Slot connected to the amplitude setting. void DoWaveLength(); Slot connected to the wavelength setting. void DoWavy(); Slot connected to the wavy / curly setting. » Author: Ilka Antcheva, Otto Schaile 15/12/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/ged:$Id: TCurlyLineEditor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:11",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCurlyLineEditor.html:20192,Inherit,Inheritance,20192,root/html532/TCurlyLineEditor.html,https://root.cern,https://root.cern/root/html532/TCurlyLineEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"r};  ; REveElement * fSelectionMaster {nullptr};  ; std::string fTitle;  ; void * fUserData {nullptr};  ; REveElement * fVizModel {nullptr};  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from ROOT::Experimental::REveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttBBox; Float_t * fBBox;  ;  Protected Attributes inherited from ROOT::Experimental::REveSecondarySelectable; Bool_t fAlwaysSecSelect {kFALSE};  ; SelectionSet_t fHighlightedSet;  ; SelectionSet_t fSelectedSet;  . Private Member Functions; REvePointSet & operator= (const REvePointSet &)=delete;  . Friends; class REvePointSetArray;  . Additional Inherited Members;  Public Types inherited from ROOT::Experimental::REveElement; typedef std::list< REveAunt * > AuntList_t;  ; enum  EChangeBits { ;   kCBColorSelection = BIT(0); , kCBTransBBox = BIT(1); , kCBObjProps = BIT(2); , kCBVisibility = BIT(3); , ;   kCBElementAdded = BIT(4). };  ; typedef std::list< REveElement * > List_t;  ; typedef std::set< REveElement * > Set_t;  ;  Public Types inherited from ROOT::Experimental::REveProjectable; typedef std::list< REveProjected * > ProjList_t;  ;  Public Types inherited from ROOT::Experimental::REveSecondarySelectable; typedef std::set< Int_t > SelectionSet_t;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSet.html:18961,inherit,inherited,18961,doc/master/classROOT_1_1Experimental_1_1REvePointSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSet.html,1,['inherit'],['inherited']
Modifiability,"r};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TROOT (const TROOT &)=delete;  ; TROOT & operator= (const TROOT &)=delete;  . Private Attributes; Int_t fLineIsProcessing;  To synchronize multi-threads. ;  . Static Private Attributes; static Int_t fgDirLevel = 0;  Indentation level for ls() ;  ; static Bool_t fgRootInit = kFALSE;  Singleton initialization flag. ;  . Friends; class ::ROOT::Internal::TROOTAllocator;  ; TROOT * ROOT::Internal::GetROOT2 ();  ; class TCling;  . Additional Inherited Members;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <TROOT.h>. Inheritance diagram for TROOT:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ AListOfEnums_t. typedef std::atomic<TListOfEnums*> TROOT::AListOfEnums_t. protected . Definition at line 109 of file TROOT.h. ◆ FwdDeclArgsToKeepCollection_t. typedef std::vector<std::pair<std::string, int> > TROOT::FwdDeclArgsToKeepCollection_t. Definition at line 187 of file TROOT.h. Constructor & Destructor Documentation. ◆ TROOT() [1/3]. TROOT::TROOT ; (; const TROOT & ; ).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTROOT.html:38721,inherit,inherited,38721,doc/v632/classTROOT.html,https://root.cern,https://root.cern/doc/v632/classTROOT.html,2,['inherit'],['inherited']
Modifiability,"r};  ok button ;  ; char * fOwnBuf {nullptr};  internal buffer when return string not specified ;  ; char * fRetStr {nullptr};  address to store return string ;  ; TGTextEntry * fTE {nullptr};  text entry widget ;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBottomRight. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGInputDialog.html:29777,inherit,inherited,29777,doc/master/classTGInputDialog.html,https://root.cern,https://root.cern/doc/master/classTGInputDialog.html,1,['inherit'],['inherited']
Modifiability,"s & Opt ();  ; const DataOptions & Opt () const;  access to options ;  ; const DataRange & Range () const;  access to range ;  ; unsigned int Size () const;  return number of fit points ;  . Private Attributes; bool fWeighted;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Fit::FitData; void InitCoordsVector ();  initializer routines to set the corresponding pointers right The vectors must NOT be resized after this initialization without setting the corresponding pointers in the same moment ( has to be an atomic operation in case of multithreading ). ;  ; template<class Iterator > ; void InitFromRange (Iterator dataItr);  ; void UnWrap ();  ;  Static Protected Member Functions inherited from ROOT::Fit::FitData; static constexpr unsigned VectorPadding (const unsigned);  If VecCore is not defined, there is no vectorization available and the SIMD vector size will always be one. ;  ;  Protected Attributes inherited from ROOT::Fit::FitData; unsigned int fDim;  ; unsigned int fMaxPoints;  ; unsigned int fNPoints;  ; bool fWrapped;  . #include <Fit/UnBinData.h>. Inheritance diagram for ROOT::Fit::UnBinData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ UnBinData() [1/12]. ROOT::Fit::UnBinData::UnBinData ; (; unsigned int ; maxpoints = 0, . unsigned int ; dim = 1, . bool ; isWeighted = false . ). inlineexplicit . constructor from dimension of point and max number of points (to pre-allocate vector) ; Definition at line 54 of file UnBinData.h. ◆ UnBinData() [2/12]. ROOT::Fit::UnBinData::UnBinData ; (; const DataRange & ; range, . unsigned int ; maxpoints = 0, . unsigned int ; dim = 1, . bool ; isWeighted = false . ). inlineexplicit . constructor from range and default option ; Definition at line 67 of file UnBinData.h. ◆ UnBinData() [3/12]. ROOT::Fit::UnBinData::UnBinData ; (; const DataOptions & ; opt, . const DataRange & ; range, . unsigned int ; m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1UnBinData.html:9558,inherit,inherited,9558,doc/master/classROOT_1_1Fit_1_1UnBinData.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1UnBinData.html,1,['inherit'],['inherited']
Modifiability,"s () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Protected Member Functions; void DoRedraw () override;  Draw selected pattern as current one. ;  ;  Protected Member Functions inherited from TGedSelect; void DoRedraw () override;  Draw separator and arrow. ;  ; void DrawTriangle (GContext_t gc, Int_t x, Int_t y);  Draw small triangle. ;  ;  Protected Member Functions inherited from TGCheckButton; void EmitSignals (Bool_t wasUp=kTRUE) override;  Emit signals. ;  ; void Init ();  Common check button initialization. ;  ; void PSetState (EButtonState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedPatternSelect.html:24972,inherit,inherited,24972,doc/master/classTGedPatternSelect.html,https://root.cern,https://root.cern/doc/master/classTGedPatternSelect.html,1,['inherit'],['inherited']
Modifiability,"s () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Protected Member Functions; bool FullConverted ();  Return true if converted name is alias free. ;  ;  Protected Member Functions inherited from TGLVEntry; void DoRedraw () override;  Redraw list view item. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TString fAlias;  Alias for this entry. ;  ; TTVLVContainer * fContainer;  Container to whom this item belongs. ;  ; TGItemContext * fContext;  Associated context menu. ;  ; TString fConvName;  Name converted into true expressions. ;  ; bool fIsCut;  Flag for cut type items. ;  ; TGToolTip * fTip;  Tool tip associated with item. ;  ; TString fTrueName;  Name for this entry. ;  ;  Protected Attributes inherited from TGLVEntry; Bool_t fActive;  true if item is active ;  ; const TGPicture * fBigPic;  big icon ;  ; Bool_t fChecked;  true if item is checked ;  ; const TGPicture * fCheckMark;  checkmark ;  ; Int_t * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVLVEntry.html:21585,inherit,inherited,21585,doc/master/classTTVLVEntry.html,https://root.cern,https://root.cern/doc/master/classTTVLVEntry.html,3,['inherit'],['inherited']
Modifiability,"s () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveScalableStraightLineSet.html:30608,inherit,inherited,30608,doc/master/classTEveScalableStraightLineSet.html,https://root.cern,https://root.cern/doc/master/classTEveScalableStraightLineSet.html,3,['inherit'],['inherited']
Modifiability,"s ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; UInt_t MapFlag (Option_t *flag);  allowed options: ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fFlags;  ; void * fIn;  ; Int_t * fN;  ; Int_t fNdim;  ; void * fOut;  ; void * fPlan;  ; Int_t fSign;  ; Int_t fTotalSize;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TVirtualFFT; static TString fgDefault = """";  ; static TVirtualFFT * fgFFT = nullptr;  . #include <TFFTComplex.h>. Inheritance diagram for TFFTComplex:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFFTComplex() [1/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFFTComplex.html:13945,inherit,inherited,13945,doc/master/classTFFTComplex.html,https://root.cern,https://root.cern/doc/master/classTFFTComplex.html,1,['inherit'],['inherited']
Modifiability,"s ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TFriendElement (const TFriendElement &)=delete;  ; TFriendElement & operator= (const TFriendElement &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TFile * fFile;  ! pointer to the file containing the friend TTree ;  ; bool fOwnFile;  true if file is managed by this class ;  ; TTree * fParentTree;  ! pointer to the parent TTree ;  ; TTree * fTree;  ! pointer to the TTree described by this element ;  ; TString fTreeName;  name of the friend TTree ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; void TFriendElement__SetTree (TTree *tree, TList *frlist);  Set the fTree member for all friend elements. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TFriendElement.h>. Inheritance diagram for TFriendElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TFriendElement::EStatusBits. EnumeratorkFromChain ; kUpdated . Definition at line 48 of file TFriendElement.h. Constructor & Destructor Documentation. ◆ TFriendElement() [1/5]. TFriendElement::TFriendElement ; (; const TFriendElement & ; ). protecteddelete . ◆ TFriendElement() [2/5]. TFriendElement::TFriendElement ; (; ). Default cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFriendElement.html:12849,inherit,inherited,12849,doc/master/classTFriendElement.html,https://root.cern,https://root.cern/doc/master/classTFriendElement.html,1,['inherit'],['inherited']
Modifiability,"s ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; double fZ {0};  Z position of text. ;  ;  Protected Attributes inherited from TLatex; const Char_t * fError {nullptr};  ! error code ;  ; Double_t fFactorPos;  ! Relative position of subscripts and superscripts ;  ; Double_t fFactorSize;  ! Relative size of subscripts and superscripts ;  ; Bool_t fItalic;  ! Currently inside italic operator ;  ; Int_t fLimitFactorSize;  lower bound for subscripts/superscripts size ;  ; Double_t fOriginSize;  Font size of the starting font. ;  ; Bool_t fShow;  ! is true during the second pass (Painting) ;  ; std::vector< TLatexFormSize > fTabSize;  ! array of values for the different zones ;  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Additional Inherited Members;  Public Types inherited from TLatex; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TText; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZom",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAnnotation.html:26407,inherit,inherited,26407,doc/master/classTAnnotation.html,https://root.cern,https://root.cern/doc/master/classTAnnotation.html,1,['inherit'],['inherited']
Modifiability,"s ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void SortValues () const;  internal function to sort values ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; std::vector< double > fSampleWeights;  vector of weights for the samples ;  ; std::vector< double > fSamplingDist;  vector of points for the sampling distribution ;  ; std::vector< double > fSumW;  ! Cached vector with sum of the weight used to compute integral ;  ; std::vector< double > fSumW2;  ! Cached vector with sum of the weight used to compute integral error ;  ; TString fVarName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SamplingDistribution.html:12551,inherit,inherited,12551,doc/master/classRooStats_1_1SamplingDistribution.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SamplingDistribution.html,1,['inherit'],['inherited']
Modifiability,"s ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fAcceptTol;  ; Double_t fBeta_max;  ; Double_t fBeta_min;  ; TQpResidual * fCorrector_resid;  ; TQpVar * fCorrector_step;  ; TQpProbBase * fFactory;  ; Int_t fMaximum_correctors;  ; Int_t fNumberGondzioCorrections;  ; Int_t fPrintlevel;  ; TQpVar * fStep;  ; Double_t fStepFactor0;  ; Double_t fStepFactor1;  ; Double_t fTsig;  ;  Protected Attributes inherited from TQpSolverBase; Double_t fArtol;  ; Double_t fDnorm;  ; Double_t fGamma_a;  ; Double_t fGamma_f;  ; Int_t fMaxit;  ; Double_t * fMu_history;  ; Double_t fMutol;  ; Double_t fPhi;  ; Double_t * fPhi_history;  ; Double_t * fPhi_min_history;  ; Double_t * fRnorm_history;  ; TQpLinSolverBase * fSys;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL <",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGondzioSolver.html:12565,inherit,inherited,12565,doc/master/classTGondzioSolver.html,https://root.cern,https://root.cern/doc/master/classTGondzioSolver.html,1,['inherit'],['inherited']
Modifiability,"s ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; UInt_t fH;  height ;  ; UInt_t fW;  width ;  ; Int_t fX;  x position ;  ; Int_t fY;  y position ;  . Private Member Functions;  TGRectMap (const TGRectMap &)=delete;  ; TGRectMap & operator= (const TGRectMap &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGSplitFrame.h>. Inheritance diagram for TGRectMap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRectMap.html:9223,inherit,inherited,9223,doc/master/classTGRectMap.html,https://root.cern,https://root.cern/doc/master/classTGRectMap.html,1,['inherit'],['inherited']
Modifiability,"s (Double_t *arr, Int_t pos1, Int_t pos2);  Swap values. ;  ;  Protected Attributes inherited from TGraphAsymmErrors; Double_t * fEXhigh {nullptr};  [fNpoints] array of X high errors ;  ; Double_t * fEXlow {nullptr};  [fNpoints] array of X low errors ;  ; Double_t * fEYhigh {nullptr};  [fNpoints] array of Y high errors ;  ; Double_t * fEYlow {nullptr};  [fNpoints] array of Y low errors ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from RooPlotable; double _normValue = 0.0;  ; TString _yAxisLabel;  ; double _ymax = 0.0;  ; double _ymin = 0.0;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooHist.h>. Inheritance diagram for RooHist:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooHist() [1/6]. RooHist::RooHist ; (; ). inline . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHist.html:42472,inherit,inherited,42472,doc/master/classRooHist.html,https://root.cern,https://root.cern/doc/master/classRooHist.html,2,['inherit'],['inherited']
Modifiability,"s (Double_t *param) override;  ; void SetPoints (Double_t *points) const override;  ; void SetPoints (Float_t *points) const override;  ; void SetSegsAndPols (TBuffer3D &buff) const override;  ; void SetTubeDimensions (Double_t rmin, Double_t rmax, Double_t dz);  ; void Sizeof3D () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBBox;  TGeoBBox ();  ;  TGeoBBox (const char *name, Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  TGeoBBox (Double_t *param);  ;  TGeoBBox (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  ~TGeoBBox () override;  ; Bool_t CouldBeCrossed (const Double_t *point, const Double_t *dir) const override;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; Int_t GetFittingBox (const TGeoBBox *parambox, TGeoMatrix *mat, Double_t &dx, Double_t &dy, Double_t &dz) const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; virtual Bool_t IsNullBox () const;  ; Bool_t IsValidBox () const override;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoShape;  TGeoShape ();  Default constructor. ;  ;  TGeoShape (const char *name);  Default constructor. ;  ;  ~TGeoShape () override;  Destructor. ;  ; virtual void AfterStreamer ();  ; void CheckShape (Int_t testNo, Int_t nsamples=10000, Option_t *option="""");  Test for shape navigation methods. ;  ; virtual void ClearThreadData () const;  ; virtual void CreateThreadData (Int_t);  ; void Draw (Option_t *option="""") ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoEltu.html:6518,inherit,inherited,6518,doc/master/classTGeoEltu.html,https://root.cern,https://root.cern/doc/master/classTGeoEltu.html,6,['inherit'],['inherited']
Modifiability,"s (TBuffer3D &buffer) const override;  Fill TBuffer3D structure for segments and polygons. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoBBox;  TGeoBBox ();  ;  TGeoBBox (const char *name, Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  TGeoBBox (Double_t *param);  ;  TGeoBBox (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ;  ~TGeoBBox () override;  ; Bool_t CouldBeCrossed (const Double_t *point, const Double_t *dir) const override;  ; const char * GetAxisName (Int_t iaxis) const override;  ; Double_t GetAxisRange (Int_t iaxis, Double_t &xlo, Double_t &xhi) const override;  ; void GetBoundingCylinder (Double_t *param) const override;  ; Int_t GetByteCount () const override;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; Int_t GetFittingBox (const TGeoBBox *parambox, TGeoMatrix *mat, Double_t &dx, Double_t &dy, Double_t &dz) const override;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; Bool_t GetPointsOnSegments (Int_t npoints, Double_t *array) const override;  ; virtual Bool_t IsNullBox () const;  ; Bool_t IsValidBox () const override;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ; void SetDimensions (Double_t *param) override;  ; void Sizeof3D () const override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoShape;  TGeoShape ();  Default constructor. ;  ;  TGeoShape (const char *name);  Default constructor. ;  ;  ~TGeoShape () override;  Destructor. ;  ; virtual void AfterStreamer ();  ; void CheckShape (Int_t tes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoScaledShape.html:4809,inherit,inherited,4809,doc/master/classTGeoScaledShape.html,https://root.cern,https://root.cern/doc/master/classTGeoScaledShape.html,2,['inherit'],['inherited']
Modifiability,s (TDSet or TChain) ;  ; TString fDefCanvasName;  Name of default canvas. ;  ; Bool_t fEditHistograms;  True if histograms can be edited with the mouse. ;  ; Int_t fEditorMode;  Current Editor mode. ;  ; AListOfEnums_t fEnums;  List of enum types. ;  ; Bool_t fEscape;  True if ESC has been pressed. ;  ; Bool_t fExecutingMacro;  True while executing a TMacro. ;  ; TSeqCollection * fFiles;  List of files. ;  ; Bool_t fForceStyle;  Force setting of current style when reading objects. ;  ; Bool_t fFromPopUp;  True if command executed from a popup menu. ;  ; TListOfFunctionTemplates * fFuncTemplate;  List of global function templates. ;  ; TCollection * fFunctions;  List of analytic functions. ;  ; TSeqCollection * fGeometries;  List of geometries. ;  ; TString fGitBranch;  Git branch. ;  ; TString fGitCommit;  Git commit SHA1 of built. ;  ; TString fGitDate;  Date and time when make was run. ;  ; TListOfFunctions * fGlobalFunctions;  List of global functions. ;  ; TListOfDataMembers * fGlobals;  List of global variables. ;  ; TInterpreter * fInterpreter;  Command interpreter. ;  ; Bool_t fInterrupt;  True if macro should be interrupted. ;  ; Bool_t fIsWebDisplay;  True if session uses web widgets. ;  ; Bool_t fIsWebDisplayBatch;  True if web widgets are not displayed. ;  ; TSeqCollection * fMappedFiles;  List of memory mapped files. ;  ; TSeqCollection * fMessageHandlers;  List of message handlers. ;  ; Bool_t fMustClean;  True if object destructor scans canvases. ;  ; TPluginManager * fPluginManager;  Keeps track of plugin library handlers. ;  ; const TObject * fPrimitive;  Currently selected primitive. ;  ; TSeqCollection * fProofs;  List of proof sessions. ;  ; TFolder * fRootFolder;  top level folder //root ;  ; TSeqCollection * fSecContexts;  List of security contexts (TSecContext) ;  ; TVirtualPad * fSelectPad;  Currently selected pad. ;  ; TSeqCollection * fSockets;  List of network sockets. ;  ; TSeqCollection * fSpecials;  List of special objects. ;  ; TSeqColle,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTROOT.html:35940,variab,variables,35940,doc/v632/classTROOT.html,https://root.cern,https://root.cern/doc/v632/classTROOT.html,2,['variab'],['variables']
Modifiability,"s (TTree *inputTree, const TCut &SigCut, const TCut &BgCut);  define the input trees for signal and background from single input tree, containing both signal and background events distinguished by the type identifiers: SigCut and BgCut ;  ; void SetInputTrees (TTree *signal, TTree *background, Double_t signalWeight=1.0, Double_t backgroundWeight=1.0);  define the input trees for signal and background; no cuts are applied ;  ; void SetInputVariables (std::vector< TString > *theVariables);  deprecated ;  ; void SetSignalTree (TTree *signal, Double_t weight=1.0);  ; void SetSignalWeightExpression (const TString &variable);  ; void SetTree (TTree *tree, const TString &className, Double_t weight);  deprecated ;  ; void SetWeightExpression (const TString &variable, const TString &className="""");  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t UserAssignEvents (UInt_t clIndex);  ; DataLoader * VarTransform (TString trafoDefinition);  Transforms the variables and return a new DataLoader with the transformed variables. ;  ;  Public Member Functions inherited from TMVA::Configurable;  Configurable (const TString &theOption="""");  constructor ;  ; virtual ~Configurable ();  default destructor ;  ; void AddOptionsXMLTo (void *parent) const;  write options to XML file ;  ; template<class T > ; void AddPreDefVal (const T &);  ; template<class T > ; void AddPreDefVal (const TString &optname, const T &);  ; void CheckForUnusedOptions () const;  checks for unused options in option string ;  ; template<class T > ; TMVA::OptionBase * DeclareOptionRef (T &ref, const TString &name, const TString &desc);  ; template<class T > ; OptionBase * DeclareOptionRef (T &ref, const TString &name, const TString &desc="""");  ; template<class T > ; TMVA::OptionBase * DeclareOptionRef (T *&ref, Int_t size, const TString &name, const TString &desc);  ; template<class T > ; OptionBase * DeclareOptionRef (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataLoader.html:6949,variab,variables,6949,doc/master/classTMVA_1_1DataLoader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataLoader.html,2,['variab'],['variables']
Modifiability,"s (bool flag);  Configure whether new instances of RooPlot will add themselves to gDirectory. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Public Attributes; Use the constructor that doesn t take the name and title;  . Protected Member Functions; Items::iterator findItem (std::string const &name);  ; Items::const_iterator findItem (std::string const &name) const;  ; TString histName () const;  Construct automatic name of internal TH1. ;  ; void initialize ();  Perform initialization that is common to all constructors. ;  ; void updateFitRangeNorm (const RooPlotable *rp, bool refreshNorm=false);  Update our plot normalization over our plot variable's fit range, which will be determined by the first suitable object added to our plot. ;  ; void updateFitRangeNorm (const TH1 *hist);  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:23825,inherit,inherited,23825,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['inherit'],['inherited']
Modifiability,"s (const TGPicture **pic, const TGPicture **lpic, Int_t file_type, Bool_t is_link, const char *ext, Bool_t small);  Determine the file picture for the given file type. ;  ; Bool_t HandleTimer (TTimer *t) override;  Refresh container contents. ;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a file container widget as a C++ statement(s) on output stream out. ;  ; virtual void SetDisplayStat (Bool_t stat=kTRUE);  ; virtual void SetFilter (const char *filter);  Set file selection filter. ;  ; virtual void Sort (EFSSortMode sortType);  Sort file system list view container according to sortType. ;  ; void StartRefreshTimer (ULong_t msec=1000);  start refreshing ;  ; void StopRefreshTimer ();  stop refresh timer ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGLVContainer;  TGLVContainer (const TGWindow *p, UInt_t w, UInt_t h, UInt_t options=kSunkenFrame, Pixel_t back=GetDefaultFrameBackground());  Create a list view container. ;  ;  TGLVContainer (TGCanvas *p, UInt_t options=kSunkenFrame, Pixel_t back=GetDefaultFrameBackground());  Create a list view container. ;  ;  ~TGLVContainer () override;  Delete list view container. ;  ; virtual void AddItem (TGLVEntry *item);  ; const char * GetHeader (Int_t idx) const;  ; TGListView * GetListView () const;  ; virtual TGDimension GetMaxItemSize () const;  Get size of largest item in container. ;  ; virtual Int_t GetMaxSubnameWidth (Int_t idx) const;  Get width of largest subname in container. ;  ; Bool_t GetMultipleSelection () const;  ; TGDimension GetPageDimension () const override;  Returns page dimension. ;  ; TList * GetSelectedEntries ();  Get list of selected items in container. ;  ; TList * GetSelectedItems ();  Get list of selected items in container. ;  ; EListViewMode GetViewMode () const;  ; Bool_t HandleButton (Eve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileContainer.html:2522,inherit,inherited,2522,doc/master/classTGFileContainer.html,https://root.cern,https://root.cern/doc/master/classTGFileContainer.html,1,['inherit'],['inherited']
Modifiability,"s (std::ostream &out, const char *string);  Replace ampersand, less-than and greater-than characters, writing to out. ;  ; void ReplaceSpecialChars (TString &text);  Replace ampersand, less-than and greater-than character. ;  ; void ReplaceSpecialChars (TString &text, Ssiz_t &pos);  Replace ampersand, less-than and greater-than character. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void WriteHtmlFooter (std::ostream &out, const char *dir="""", const char *lastUpdate="""", const char *author="""", const char *copyright="""");  Write HTML footer. ;  ; virtual void WriteHtmlHeader (std::ostream &out, const char *title, const char *dir="""", TClass *cls=0);  Write HTML header. ;  ; void WriteLineNumbers (std::ostream &out, Long_t nLines, const TString &infileBase) const;  Create a div containing the line numbers (for a source listing) 1 to nLines. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassDocOutput.html:5488,inherit,inherited,5488,doc/master/classTClassDocOutput.html,https://root.cern,https://root.cern/doc/master/classTClassDocOutput.html,2,['inherit'],['inherited']
Modifiability,"s *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TEveStraightLineSet; Bool_t fDepthTest;  ; Line_t * fLastLine;  ; TEveChunkManager fLinePlex;  ; TEveChunkManager fMarkerPlex;  ; Bool_t fOwnLinesIds;  ; Bool_t fOwnMarkersIds;  ; Bool_t fRnrLines;  ; Bool_t fRnrMarkers;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TEvePr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveStraightLineSetProjected.html:43512,inherit,inherited,43512,doc/master/classTEveStraightLineSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEveStraightLineSetProjected.html,2,['inherit'],['inherited']
Modifiability,"s * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual void InitListBox ();  Initiate the internal classes of a list box. ;  ; void SetContainer (TGFrame *f);  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Bool_t fIntegralHeight;  true if height should be multiple of fItemVsize ;  ; UInt_t fItemVsize;  maximum height of single entry ;  ; TGLBContainer * fLbc;  listbox container ;  ; TGViewPort * fVport;  listbox viewport (see TGCanvas.h) ;  ; TGVScrollBar * fVScrollbar;  vertical scrollbar ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListBox.html:29443,inherit,inherited,29443,doc/master/classTGListBox.html,https://root.cern,https://root.cern/doc/master/classTGListBox.html,3,['inherit'],['inherited']
Modifiability,"s * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Allocate (Int_t nrows, Int_t ncols, Int_t row_lwb=0, Int_t col_lwb=0, Int_t init=0, Int_t=-1);  Allocate new matrix. ;  ; void Delete_m (Int_t size, Element *&);  delete data pointer m, if it was assigned on the heap ;  ; Int_t Memcpy_m (Element *newp, const Element *oldp, Int_t copySize, Int_t newSize, Int_t oldSize);  copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  return data pointer . ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [TMatrixTBase< Element >::kSizeMax];  ; Element * fElements;  data container ;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTSym.html:21885,inherit,inherited,21885,doc/master/classTMatrixTSym.html,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html,1,['inherit'],['inherited']
Modifiability,"s * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void addObject (TObject *obj, Option_t *drawOptions=nullptr);  Add a generic object to this plot. ;  ; void addOtherObject (TObject *obj, Option_t *drawOptions=nullptr);  Add a generic object to this plot. ;  ; void GetAbsoluteInterval (double &theMin, double &theMax, double &theYMax) const;  ; void SetSampleWeights (const SamplingDistribution *samplingDist);  Determine if the sampling distribution has weights and store them. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool fApplyStyle = true;  ; Style_t fFillStyle = 3004;  ; TH1F * fHist = nullptr;  ; TList fItems;  holds TH1Fs only ;  ; TLegend * fLegend = nullptr;  ; bool fLogXaxis = false;  ; bool fLogYaxis = false;  ; TList fOtherItems;  other objects to be drawn like TLine etc. ;  ; RooPlot * fRooPlot = nullptr;  ; double fXMax = std::numeric_limits<float>::quiet_NaN();  ; double fXMin = std::numeric_limits<float>::quiet_NaN();  ; double fYMax = std::numeric_limits<float>::quiet_NaN();  ; double fYMin = std::numeric_limits<float>::quiet_NaN();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Attributes; Int_t fBins;  ; Int_t fColor = 1;  ; bool fIsWeighted = false;  ; Int_t fMarkerType = 20;  ; std::vector< double > fSampleWeights;  ; std::vector< double > fSamplingDistr;  ; TString fVarName;  . Additional In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SamplingDistPlot.html:15556,inherit,inherited,15556,doc/master/classRooStats_1_1SamplingDistPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SamplingDistPlot.html,1,['inherit'],['inherited']
Modifiability,"s * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fScale [3];  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflection = (1ULL << ( 20 )); , kGeoRegistered = (1ULL << ( 21 )); , kGeoSavePrimitive = (1ULL << ( 22 )); , ;   kGeoMatrixOwned = (1ULL << ( 23 )); , kGeoCombiTrans = kGeoTranslation | kGeoRotation; , kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoScale.html:14758,inherit,inherited,14758,doc/master/classTGeoScale.html,https://root.cern,https://root.cern/doc/master/classTGeoScale.html,1,['inherit'],['inherited']
Modifiability,"s * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGLAxis (const TGLAxis &)=delete;  ; TGLAxis & operator= (const TGLAxis &)=delete;  . Private Attributes; Double_t fAngle1;  ; Double_t fAngle2;  ; Double_t fAngle3;  ; Double_t fAxisLength;  ; Double_t fGridLength;  ; TString * fLabels;  ; Double_t fLabelsOffset;  ; Double_t fLabelsSize;  ; Int_t fNDiv;  ; Int_t fNDiv1;  ; Int_t fNDiv2;  ; Int_t fNDiv3;  ; Int_t fNTicks1;  ; Int_t fNTicks2;  ; TGLText * fText;  ; Double_t fTickMarksLength;  ; Int_t fTickMarksOrientation;  ; Double_t * fTicks1;  ; Double_t * fTicks2;  ; Double_t fWmax;  ; Double_t fWmin;  . Additional Inherited Members;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TGLAxis.h>. Inheritance diagram for TGLAxis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGLAxis() [1/2]. TGLAxis::TGLAxis ; (; const TGLAxis & ; ). privatedelete . ◆ TGLAxis() [2/2]. TGLAxis::TGLAxis ; (; ). Constructor. ; Definition at line 35 of file TGLAxis.cxx. ◆ ~TGLAxis(). TGLAxis::~TGLAxis ; (; ). override . Destructor. ; Definition at line 66 of file TGLAxis.cxx. Member Function Documentation. ◆ Class(). static TClass * TGLAxis::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLAxis.html:6311,inherit,inherited,6311,doc/master/classTGLAxis.html,https://root.cern,https://root.cern/doc/master/classTGLAxis.html,1,['inherit'],['inherited']
Modifiability,"s * IsA () const override;  ; Bool_t IsActive () const override;  ; virtual void SetCheckedEntry (Bool_t check=kTRUE);  ; virtual void SetColumns (Int_t *cpos, Int_t *jmode);  ; void SetItemName (const char *name);  ; virtual void SetPictures (const TGPicture *bigpic=nullptr, const TGPicture *smallpic=nullptr);  change pictures ;  ; virtual void SetSubnames (const char *n1="""", const char *n2="""", const char *n3="""", const char *n4="""", const char *n5="""", const char *n6="""", const char *n7="""", const char *n8="""", const char *n9="""", const char *n10="""", const char *n11="""", const char *n12="""");  Sets new subnames. ;  ; virtual void SetTitle (const char *text);  ; void SetUserData (void *userData);  ; virtual void SetViewMode (EListViewMode viewMode);  Set the view mode for this list item. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLVEntry.html:2598,inherit,inherited,2598,doc/master/classTGLVEntry.html,https://root.cern,https://root.cern/doc/master/classTGLVEntry.html,2,['inherit'],['inherited']
Modifiability,"s * IsA () const override;  ; Bool_t IsInvalid () const;  ; Bool_t IsSafeVoxel (const Double_t *point, Int_t inode, Double_t minsafe) const;  Computes squared distance from POINT to the voxel(s) containing node INODE. ;  ; Bool_t NeedRebuild () const;  ; void Print (Option_t *option="""") const override;  Print the voxels. ;  ; void PrintVoxelLimits (const Double_t *point) const;  print the voxel containing point ;  ; void SetInvalid (Bool_t flag=kTRUE);  ; void SetNeedRebuild (Bool_t flag=kTRUE);  ; virtual void SortCrossedVoxels (const Double_t *point, const Double_t *dir, TGeoStateInfo &td);  get the list in the next voxel crossed by a ray ;  ; void Streamer (TBuffer &) override;  Stream an object of class TGeoVoxelFinder. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Voxelize (Option_t *option="""");  Voxelize attached volume according to option If the volume is an assembly, make sure the bbox is computed. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVoxelFinder.html:3462,inherit,inherited,3462,doc/master/classTGeoVoxelFinder.html,https://root.cern,https://root.cern/doc/master/classTGeoVoxelFinder.html,1,['inherit'],['inherited']
Modifiability,"s * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TEveProjected; Float_t fDepth;  ; TEveProjectionManager * fManager;  ; TEveProjectable * fProjectable;  . #include <TEveTrackProjected.h>. Inheritance diagram for TEveTrackListProjected:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveTrackListProjected() [1/2]. TEveTrackListProjected::TEveTrackListProjected ; (; const TEveTrackListProjected & ; ). private . ◆ TEveTrackListProjected() [2/2]. TEveTrackListProjected::TEveTrackListProjected ; (; ). Default constructor. ; Definition at line 259 of file TEveTrackProjected.cxx. ◆ ~TEveTrackListProjected(). TEveTrackListProjected::~TEveTrackListProjected ; (; ). inlineoverride . Definition at line 72 of file TEveTrackProjected.h. Member Function Documentation. ◆ Class(). static TClass * TEveTrackListProjected::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEveTrackListProjected::Class_Name ; (; ). static . ReturnsName of this cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackListProjected.html:42243,inherit,inherited,42243,doc/master/classTEveTrackListProjected.html,https://root.cern,https://root.cern/doc/master/classTEveTrackListProjected.html,1,['inherit'],['inherited']
Modifiability,"s -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; const ROOT::Math::IBaseFunctionOneDim*funcFunctor; RooRealProxyvarArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFunctor1DBinding(const char* name, const char* title, const ROOT::Math::IBaseFunctionOneDim& ftor, RooAbsReal& var). RooFunctor1DBinding(const RooFunctor1DBinding& other, const char* name = 0); Copy constructor. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. RooFunctor1DBinding(); Default constructor. TObject* clone(const char* newname) const; { return new RooFunctor1DBinding(*this,newname); }. virtual ~RooFunctor1DBinding(); {}. » Last changed: Thu Sep 23 19:59:42 2010 » Last generated: 2010-09-23 19:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooFunctor1DBinding.html:33471,variab,variable,33471,root/html528/RooFunctor1DBinding.html,https://root.cern,https://root.cern/root/html528/RooFunctor1DBinding.html,1,['variab'],['variable']
Modifiability,"s . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials Histogramming. Preparation; Start from the previously used macro (AnalyzeTree.C).; Adding a Variable; Just like for the sum of event sizes, you need to add a variable in your macro. We want to histogram the particles' fPosX; the type of the data member should thus be TH1F *. TH1F is a 1 dimensional histogram storing floats for each bin, see the documentation. Don't forget to initialize the histogram pointer to 0, again just like for the event size sum.; Creating the Histogram; You then create the object with new TH1F(""hPosX"", ""Position in X"", 20, -5, 5);; Associate error bars with this histogram (see TH1F::Sumw2()); Filling the Histogram; The goal is to fill the histogram with the value of fPosX from the tree for all particles with a momentum > 40. You will need access to the particles' total momentum and their X position. Each TTree entry has several particles; it's thus easiest to use one TTreeReaderArray each for these Double_t values, for instance TTreeReaderArray particlesMomentum(myReader, ""fParticles.fMomentum"");. The TTreeReaderArray works just like the TTreeReaderValue we have used before, but gives you a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/histogramming.html:2057,variab,variable,2057,d/histogramming.html,https://root.cern,https://root.cern/d/histogramming.html,1,['variab'],['variable']
Modifiability,"s 0.1. const FCNBase& Fcnbase() const; {return fFCN;}. unsigned int NumOfCalls() const; {return fNumCall;}. const std::vector<ROOT::Minuit2::MinuitParameter>& MinuitParameters() const; facade: forward interface of MnUserParameters and MnUserTransformation; via MnUserParameterState; access to parameters (row-wise). std::vector<double> Params() const; access to parameters and errors in column-wise representation. std::vector<double> Errors() const. void Add(const char* Name, double val, double err); add free Parameter. void Add(const char* Name, double val, double err, double , double ); add limited Parameter. void Add(const char* , double ); add const Parameter. void Fix(unsigned int ); interaction via external number of Parameter. void Release(unsigned int ). void SetValue(unsigned int , double ). void SetError(unsigned int , double ). void SetLimits(unsigned int , double , double ). void RemoveLimits(unsigned int ). double Value(unsigned int ) const. double Error(unsigned int ) const. void Fix(const char* ); interaction via Name of Parameter. void Release(const char* ). void SetValue(const char* , double ). void SetError(const char* , double ). void SetLimits(const char* , double , double ). void RemoveLimits(const char* ). void SetPrecision(double ). double Value(const char* ) const. double Error(const char* ) const. unsigned int Index(const char* ) const; convert Name into external number of Parameter. const char* Name(unsigned int ) const; convert external number into Name of Parameter. double Int2ext(unsigned int , double ) const; transformation internal <-> external. double Ext2int(unsigned int , double ) const. unsigned int IntOfExt(unsigned int ) const. unsigned int ExtOfInt(unsigned int ) const. unsigned int VariableParameters() const. » Last changed: root/minuit2:$Id$ » Last generated: 2015-06-30 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__MnApplication.html:5791,Variab,VariableParameters,5791,root/html602/ROOT__Minuit2__MnApplication.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__MnApplication.html,1,['Variab'],['VariableParameters']
Modifiability,"s 0.1. const FCNBase& Fcnbase() const; {return fFCN;}. unsigned int NumOfCalls() const; {return fNumCall;}. const std::vector<ROOT::Minuit2::MinuitParameter>& MinuitParameters() const; facade: forward interface of MnUserParameters and MnUserTransformation; via MnUserParameterState; access to parameters (row-wise). std::vector<double> Params() const; access to parameters and errors in column-wise representation. std::vector<double> Errors() const. void Add(const char* Name, double val, double err); add free Parameter. void Add(const char* Name, double val, double err, double , double ); add limited Parameter. void Add(const char* , double ); add const Parameter. void Fix(unsigned int ); interaction via external number of Parameter. void Release(unsigned int ). void SetValue(unsigned int , double ). void SetError(unsigned int , double ). void SetLimits(unsigned int , double , double ). void RemoveLimits(unsigned int ). double Value(unsigned int ) const. double Error(unsigned int ) const. void Fix(const char* ); interaction via Name of Parameter. void Release(const char* ). void SetValue(const char* , double ). void SetError(const char* , double ). void SetLimits(const char* , double , double ). void RemoveLimits(const char* ). void SetPrecision(double ). double Value(const char* ) const. double Error(const char* ) const. unsigned int Index(const char* ) const; convert Name into external number of Parameter. const char* Name(unsigned int ) const; convert external number into Name of Parameter. double Int2ext(unsigned int , double ) const; transformation internal <-> external. double Ext2int(unsigned int , double ) const. unsigned int IntOfExt(unsigned int ) const. unsigned int ExtOfInt(unsigned int ) const. unsigned int VariableParameters() const. » Last changed: root/minuit2:$Id$ » Last generated: 2015-09-08 17:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__MnApplication.html:4895,Variab,VariableParameters,4895,root/html534/ROOT__Minuit2__MnApplication.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__MnApplication.html,1,['Variab'],['VariableParameters']
Modifiability,"s 0.1. const FCNBase& Fcnbase() const; {return fFCN;}. unsigned int NumOfCalls() const; {return fNumCall;}. const std::vector<ROOT::Minuit2::MinuitParameter>& MinuitParameters() const; facade: forward interface of MnUserParameters and MnUserTransformation; via MnUserParameterState; access to parameters (row-wise). std::vector<double> Params() const; access to parameters and errors in column-wise representation. std::vector<double> Errors() const. void Add(const char* Name, double val, double err); add free Parameter. void Add(const char* Name, double val, double err, double , double ); add limited Parameter. void Add(const char* , double ); add const Parameter. void Fix(unsigned int ); interaction via external number of Parameter. void Release(unsigned int ). void SetValue(unsigned int , double ). void SetError(unsigned int , double ). void SetLimits(unsigned int , double , double ). void RemoveLimits(unsigned int ). double Value(unsigned int ) const. double Error(unsigned int ) const. void Fix(const char* ); interaction via Name of Parameter. void Release(const char* ). void SetValue(const char* , double ). void SetError(const char* , double ). void SetLimits(const char* , double , double ). void RemoveLimits(const char* ). void SetPrecision(double ). double Value(const char* ) const. double Error(const char* ) const. unsigned int Index(const char* ) const; convert Name into external number of Parameter. const char* Name(unsigned int ) const; convert external number into Name of Parameter. double Int2ext(unsigned int , double ) const; transformation internal <-> external. double Ext2int(unsigned int , double ) const. unsigned int IntOfExt(unsigned int ) const. unsigned int ExtOfInt(unsigned int ) const. unsigned int VariableParameters() const. » Last changed: root/minuit2:$Id$ » Last generated: 2015-09-08 17:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Minuit2__MnApplication.html:5791,Variab,VariableParameters,5791,root/html604/ROOT__Minuit2__MnApplication.html,https://root.cern,https://root.cern/root/html604/ROOT__Minuit2__MnApplication.html,1,['Variab'],['VariableParameters']
Modifiability,"s 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveArrow.html:26656,inherit,inherited,26656,doc/master/classTEveArrow.html,https://root.cern,https://root.cern/doc/master/classTEveArrow.html,6,['inherit'],['inherited']
Modifiability,"s ; TSQLColumnInfo Class Reference. . Definition at line 17 of file TSQLColumnInfo.h. Public Member Functions;  TSQLColumnInfo ();  identify if value can be NULL ;  ;  TSQLColumnInfo (const char *columnname, const char *sqltypename=""unknown"", Bool_t nullable=kFALSE, Int_t sqltype=-1, Int_t size=-1, Int_t length=-1, Int_t scale=-1, Int_t sign=-1);  normal constructor ;  ; virtual ~TSQLColumnInfo ();  ; Int_t GetLength () const;  ; Int_t GetScale () const;  ; Int_t GetSigned () const;  ; Int_t GetSize () const;  ; Int_t GetSQLType () const;  ; const char * GetTypeName () const;  ; TClass * IsA () const override;  ; Bool_t IsNullable () const;  ; Bool_t IsSigned () const;  ; Bool_t IsUnsigned () const;  ; void Print (Option_t *option="""") const override;  Prints column information to standard output. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLColumnInfo.html:1227,inherit,inherited,1227,doc/master/classTSQLColumnInfo.html,https://root.cern,https://root.cern/doc/master/classTSQLColumnInfo.html,1,['inherit'],['inherited']
Modifiability,"s ; intROOT::Math::BaseIntegratorOptions::fIntegTypeIntegrator type (value converted from enum); unsigned intROOT::Math::BaseIntegratorOptions::fNCalls(max) funxtion calls; doubleROOT::Math::BaseIntegratorOptions::fRelTolerancerelative tolerance ; unsigned intROOT::Math::BaseIntegratorOptions::fWKSizeworkspace size. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseIntegratorOptions & operator=(const ROOT::Math::IntegratorOneDimOptions& rhs); assignment operators. std::string Integrator() const; name of 1D integrator. IntegratorOneDimOptions(IOptions * extraOpts = 0); constructor using the default options; can pass a pointer to extra options (N.B. pointer will be managed by the class). virtual ~IntegratorOneDimOptions(); {}. IntegratorOneDimOptions(const IntegratorOneDimOptions & rhs); copy constructor. {}. void SetNPoints(unsigned int n); specific method for one-dim; set number of points rule; values of 1,2,3,4,5,6 corresponds to 15,21,31,41,51,61 and they are used in GSL adaptive; values > 6 corresponds to the actual points and they are used by teh GaussLegendre integrator. { fNCalls = n; }. unsigned int NPoints() const; maximum number of function calls. { return fNCalls; }. IntegrationOneDim::Type IntegratorType() const; type of the integrator (return the enumeration type). { return (IntegrationOneDim::Type) fIntegType; }. void SetIntegrator(const char* name); set 1D integrator name. void Print(ostream& os = std::cout) const; print all the options. void SetDefaultIntegrator(const char* name); static methods for setting and retrieving the default options. void SetDefaultAbsTolerance(double tol). void SetDefaultRelTolerance(double tol). void SetDefaultWKSize(unsigned int size). void SetDefaultNPoints(unsigned int n). std::string DefaultIntegrator(). IntegrationOneDim::Type DefaultIntegratorType(). double DefaultAbsTolerance(). double DefaultRelTolerance(). unsigned int DefaultWKSize(). unsigned int DefaultNPoints(). ROOT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__IntegratorOneDimOptions.html:3667,adapt,adaptive,3667,root/html528/ROOT__Math__IntegratorOneDimOptions.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__IntegratorOneDimOptions.html,6,['adapt'],['adaptive']
Modifiability,"s ; that share some of their parameters. For example, we have two prototype PDFs ; pdfA(x;p,q) and pdfB(x;p,r) that have a common parameter p. ; We want to build a RooSimultaneous for both pdfA and B, ; which involves a split of parameter p and we would like to build the; simultaneous pdfs simA and simB such that still share their (now split) parameters; p_XXX. This is accomplished by letting a single instance of RooSimPdfBuilder handle; the builds of both pdfA and pdfB, as illustrated in this example:; . RooSimPdfBuilder builder(RooArgSet(pdfA,pdfB)) ;; RooArgSet* configA = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfA"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simA = builder.buildPdf(*configA,&D) ;; RooArgSet* configB = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfB"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simB = builder.buildPdf(*configB,&D) ;; ; Ownership of constructed PDFs. The RooSimPdfBuilder instance owns all the objects it creates, including the top-level; RooSimultaneous returned by buildPdf(). Therefore the builder instance should ; exist as long as the constructed PDFs needs to exist.; . END_HTMLEND_HTML. Function Members (Methods); public:. RooSimPdfBuilder(const RooArgSet& pdfProtoList); virtual~RooSimPdfBuilder(); voidTObject::AbstractMethod(const char* method) const; voidaddSpecializations(const RooArgSet& specSet); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* auxSplitCats = 0, Bool_t verbose = kFALSE); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooAbsData* dataSet, const RooArgSet& auxSplitCats, Bool_t verbose = kFALSE); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet& auxSplitCats, Bool_t verbos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimPdfBuilder.html:13335,config,configB,13335,root/html526/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html526/RooSimPdfBuilder.html,1,['config'],['configB']
Modifiability,"s ; that share some of their parameters. For example, we have two prototype PDFs ; pdfA(x;p,q) and pdfB(x;p,r) that have a common parameter p. ; We want to build a RooSimultaneous for both pdfA and B, ; which involves a split of parameter p and we would like to build the; simultaneous pdfs simA and simB such that still share their (now split) parameters; p_XXX. This is accomplished by letting a single instance of RooSimPdfBuilder handle; the builds of both pdfA and pdfB, as illustrated in this example:; . RooSimPdfBuilder builder(RooArgSet(pdfA,pdfB)) ;; RooArgSet* configA = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfA"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simA = builder.buildPdf(*configA,&D) ;; RooArgSet* configB = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfB"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simB = builder.buildPdf(*configB,&D) ;; ; Ownership of constructed PDFs. The RooSimPdfBuilder instance owns all the objects it creates, including the top-level; RooSimultaneous returned by buildPdf(). Therefore the builder instance should ; exist as long as the constructed PDFs needs to exist.; . Function Members (Methods); public:. RooSimPdfBuilder(const RooArgSet& pdfProtoList); virtual~RooSimPdfBuilder(); voidTObject::AbstractMethod(const char* method) const; voidaddSpecializations(const RooArgSet& specSet); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* auxSplitCats = 0, Bool_t verbose = kFALSE); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooAbsData* dataSet, const RooArgSet& auxSplitCats, Bool_t verbose = kFALSE); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet& auxSplitCats, Bool_t verbose = kFALSE); RooSi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooSimPdfBuilder.html:13316,config,configB,13316,root/html528/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html528/RooSimPdfBuilder.html,6,['config'],['configB']
Modifiability,"s ; that share some of their parameters. For example, we have two prototype PDFs ; pdfA(x;p,q) and pdfB(x;p,r) that have a common parameter p. ; We want to build a RooSimultaneous for both pdfA and B, ; which involves a split of parameter p and we would like to build the; simultaneous pdfs simA and simB such that still share their (now split) parameters; p_XXX. This is accomplished by letting a single instance of RooSimPdfBuilder handle; the builds of both pdfA and pdfB, as illustrated in this example:; . RooSimPdfBuilder builder(RooArgSet(pdfA,pdfB)) ;; RooArgSet* configA = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfA"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simA = builder.buildPdf(*configA,&D) ;; RooArgSet* configB = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfB"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simB = builder.buildPdf(*configB,&D) ;; ; Ownership of constructed PDFs. The RooSimPdfBuilder instance owns all the objects it creates, including the top-level; RooSimultaneous returned by buildPdf(). Therefore the builder instance should ; exist as long as the constructed PDFs needs to exist.; . Function Members (Methods); public:. virtual~RooSimPdfBuilder(); voidTObject::AbstractMethod(const char* method) const; voidaddSpecializations(const RooArgSet& specSet); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* auxSplitCats = 0, Bool_t verbose = kFALSE); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooAbsData* dataSet, const RooArgSet& auxSplitCats, Bool_t verbose = kFALSE); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet& auxSplitCats, Bool_t verbose = kFALSE); RooSimultaneous*buildPdf(const RooArgSet& buildConfig,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSimPdfBuilder.html:13316,config,configB,13316,root/html602/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html602/RooSimPdfBuilder.html,4,['config'],['configB']
Modifiability,"s ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TMVA/ClassInfo.h>. Inheritance diagram for TMVA::ClassInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ClassInfo(). TMVA::ClassInfo::ClassInfo ; (; const TString & ; name = ""default""). constructor ; Definition at line 48 of file ClassInfo.cxx. ◆ ~ClassInfo(). TMVA::ClassInfo::~ClassInfo ; (; ). destructor ; Definition at line 61 of file ClassInfo.cxx. Member Function Documentation. ◆ Class(). static TClass * TMVA::ClassInfo::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::ClassInfo::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::ClassInfo::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 80 of file ClassInfo.h. ◆ DeclFileName(). static const char * TMVA::ClassInfo::D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1ClassInfo.html:11809,inherit,inherited,11809,doc/master/classTMVA_1_1ClassInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1ClassInfo.html,1,['inherit'],['inherited']
Modifiability,"s ;  . Protected Types; typedef BaseObjFunction::BaseFunction BaseFunction;  ; typedef ::ROOT::Math::BasicFitMethodFunction< DerivFunType > BaseObjFunction;  ; typedef ::ROOT::Math::IParametricGradFunctionMultiDimTempl< T > IGradModelFunction;  ; typedef ::ROOT::Math::IParamMultiFunctionTempl< T > IModelFunction;  ; typedef ModelFunType::BackendType T;  . Protected Member Functions;  BasicFCN (const std::shared_ptr< DataType > &data, const std::shared_ptr< IModelFunction > &func);  Constructor from data set and model function. ;  ; virtual ~BasicFCN ();  Destructor (no operations) ;  ; void SetData (const std::shared_ptr< DataType > &data);  Set the data pointer. ;  ; void SetModelFunction (const std::shared_ptr< IModelFunction > &func);  Set the function pointer. ;  . Protected Attributes; std::shared_ptr< DataType > fData;  ; std::shared_ptr< IModelFunction > fFunc;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::BasicFitMethodFunction< DerivFunType >; typedef FunctionType::BaseFunc BaseFunction;  ; enum  Type_t ;  enumeration specifying the possible fit method types More...;  ;  Static Public Member Functions inherited from ROOT::Math::BasicFitMethodFunction< DerivFunType >; static bool IsAGradFCN ();  Static function to indicate if a function is supporting gradient. ;  . #include <Fit/BasicFCN.h>. Inheritance diagram for ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseFunction. template<class DerivFunType , class ModelFunType , class DataType > . typedef BaseObjFunction::BaseFunction ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >::BaseFunction. protected . Definition at line 47 of file BasicFCN.h. ◆ BaseObjFunction. template<class DerivFunType , class ModelFunType , class DataType > . typedef ::ROOT::Math::BasicFitMethodFunction<DerivFunType> ROOT::Fit::BasicFCN< DerivFunType, Mod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1BasicFCN.html:3434,inherit,inherited,3434,doc/master/classROOT_1_1Fit_1_1BasicFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1BasicFCN.html,1,['inherit'],['inherited']
Modifiability,"s ;  ; Bool_t fReversedScale;  reverse which end is min and max ;  ; Int_t fScale;  tick mark scale ;  ; Int_t fScaleType;  tick mark scale type (no, downright, both) ;  ; const TGPicture * fSliderPic;  picture to draw slider ends ;  ; Double_t fSmax;  logical position of max value of Slider ;  ; Double_t fSmin;  logical position of min value of Slider ;  ; Double_t fVmax;  logical upper limit of slider ;  ; Double_t fVmin;  logical lower limit of slider ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDoubleHSlider.html:28141,inherit,inherited,28141,doc/master/classTGDoubleHSlider.html,https://root.cern,https://root.cern/doc/master/classTGDoubleHSlider.html,5,['inherit'],['inherited']
Modifiability,"s ;  CBasicFCNBasicFCN class: base class for the objective functions used in the fits It has a reference to the data and th emodel function used in the fit ;  CBinDataClass describing the binned data sets : vectors of x coordinates, y values and optionally error on y values and error on coordinates The dimension of the coordinate is free There are 4 different options: ;  CBinPointObsolete class, no more in use ;  CChi2FCNChi2FCN class for binnned fits using the least square methods ;  CDataOptionsDataOptions : simple structure holding the options on how the data are filled ;  CDataRangeClass describing the range in the coordinates it supports multiple range in a coordinate ;  CDataVectorClass holding the fit data points ;  CDataWrapperClass maintaining a pointer to external data Using this class avoids copying the data when performing a fit NOTE: this class is not thread-safe and should not be used in parallel fits ;  CDummyDeleter;  CFcnAdapter;  CFitConfigClass describing the configuration of the fit, options and parameter settings using the ROOT::Fit::ParameterSettings class ;  CFitDataBase class for all the fit data types ;  CFitResultClass containg the result of the fit and all the related information (fitted parameter values, error, covariance matrix and minimizer result information) Contains a pointer also to the fitted (model) function, modified with the fit parameter values ;  CFitterFitter class, entry point for performing all type of fits ;  CLogLikelihoodFCNLogLikelihoodFCN class for likelihood fits ;  CParameterSettingsClass, describing value, limits and step size of the parameters Provides functionality also to set/retrieve values, step sizes, limits and fix the parameters ;  CPoissonLikelihoodFCNClass evaluating the log likelihood for binned Poisson likelihood fits it is template to distinguish gradient and non-gradient case ;  CSparseData;  CUnBinDataClass describing the unbinned data sets (just x coordinates values) of any dimensions ;  ►NInternal; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:17436,config,configuration,17436,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,3,['config'],['configuration']
Modifiability,"s ;  hstack.C Example of stacked histograms: class THStack ;  hsum.C Histograms filled and drawn in a loop ;  hsumTimer.C Demo of Timers ;  logscales.C Draw parametric functions with log scales ;  multicolor.C Use a THStack to show a 2-D hist with cells with different colors ;  ratioplot1.C Example creating a simple ratio plot of two histograms using the pois division option ;  ratioplot2.C Example of a fit residual plot ;  ratioplot3.C Example which shows how you can get the graph of the lower plot and set the y axis range for it ;  ratioplot4.C Example that shows custom dashed lines on the lower plot, specified by a vector of floats ;  ratioplot5.C Example that shows how you can set the colors of the confidence interval bands by using the method TRatioPlot::SetConfidenceIntervalColors ;  ratioplot6.C Example showing a fit residual plot, where the separation margin has been set to 0 ;  ratioplotOld.CExample displaying two histograms and their ratio ;  rebin.C Rebin a variable bin-width histogram ;  reverseaxis.C Example showing an histogram with reverse axis ;  sparsehist.CEvaluate the performance of THnSparse vs TH1/2/3/nF for different numbers of dimensions and bins per dimension ;  statsEditing.C Edit statistics box ;  testSmooth.C Histogram smoothing ;  th2polyBoxes.C This tutorial illustrates how to create an histogram with polygonal bins (TH2Poly) ;  th2polyEurope.C This tutorial illustrates how to create an histogram with polygonal bins (TH2Poly), fill it and draw it ;  th2polyHoneycomb.C This tutorial illustrates how to create an histogram with hexagonal bins (TH2Poly) ;  th2polyUSA.C This tutorial illustrates how to create an histogram with polygonal bins (TH2Poly), fill it and draw it using the col option ;  thstack2palettecolor.C Palette coloring for 2D histograms' stack is activated thanks to the option PFC (Palette Fill Color) ;  thstackpalettecolor.C Palette coloring for histograms' stack is activated thanks to the options PFC (Palette Fill Color), PL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:124698,variab,variable,124698,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['variab'],['variable']
Modifiability,"s ;  hstack.C Example of stacked histograms: class THStack ;  hsum.C Histograms filled and drawn in a loop ;  hsumTimer.C Demo of Timers ;  logscales.C Draw parametric functions with log scales ;  multicolor.C Use a THStack to show a 2-D hist with cells with different colors ;  ratioplot1.C Example creating a simple ratio plot of two histograms using the pois division option ;  ratioplot2.C Example of a fit residual plot ;  ratioplot3.C Example which shows how you can get the graph of the lower plot and set the y axis range for it ;  ratioplot4.C Example that shows custom dashed lines on the lower plot, specified by a vector of floats ;  ratioplot5.C Example that shows how you can set the colors of the confidence interval bands by using the method TRatioPlot::SetConfidenceIntervalColors ;  ratioplot6.C Example showing a fit residual plot, where the separation margin has been set to 0 ;  ratioplotOld.CExample displaying two histograms and their ratio ;  rebin.C Rebin a variable bin-width histogram ;  reverseaxis.C Example showing an histogram with reverse axis ;  sparsehist.CEvaluate the performance of THnSparse vs TH1/2/3/nF for different numbers of dimensions and bins per dimension ;  statsEditing.C Edit statistics box ;  testSmooth.C Histogram smoothing ;  th2polyBoxes.C This tutorial illustrates how to create an histogram with polygonal bins (TH2Poly) ;  th2polyEurope.C This tutorial illustrates how to create an histogram with polygonal bins (TH2Poly), fill it and draw it ;  th2polyHoneycomb.CThis tutorial illustrates how to create an histogram with hexagonal bins (TH2Poly), fill it and draw it using GL ;  th2polyUSA.CThis tutorial illustrates how to create an histogram with polygonal bins (TH2Poly), fill it and draw it using GL ;  transpad.C Example of a canvas showing two histograms with different scales ;  twoscales.C Example of macro illustrating how to superimpose two histograms with different scales in the ""same"" pad ;  xyplot.C Example showing how to produ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:123601,variab,variable,123601,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['variab'],['variable']
Modifiability,"s <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fState.VariableParameters(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const. return covariance matrices elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. int CovMatrixStatus() const. return the status of the covariance matrix. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int i) const. get global correlation coefficient for the variable i. This is a number between zero and one which gives; the correlation between the i-th variable and that linear combination of all other variables which; is most strongly correlated with i.; If the variable is fixed or const the return value is zero. bool GetMinosError(unsigned int i, double& errLow, double& errUp, int = 0). get the minos error for parameter i, return false if Minos failed; A minimizaiton must be performed befre, return false if no minimization has been done; In case of Minos failed the status error is updated as following; status += 10 * minosStatus where the minos status is:; status = 1 : maximum number of function calls exceeded when running for lower error; status = 2 : maximum number of function calls exceeded when running for upper error; status = 3 : new minimum found when running for lower error; status = 4 : new minimum found when running f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html:8732,variab,variable,8732,root/html526/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html,2,['variab'],['variable']
Modifiability,"s = 1) const; virtual voidGetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tIntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tInterpolate(Double_t x); virtual Double_tInterpolate(Double_t x, Double_t y); virtual Double_tInterpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tKolm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH3.html:11392,Inherit,InheritsFrom,11392,root/html534/TH3.html,https://root.cern,https://root.cern/root/html534/TH3.html,1,['Inherit'],['InheritsFrom']
Modifiability,"s = 1) const; virtual voidGetStats(Double_t* stats) const; Double_tTH1::GetStdDev(Int_t axis = 1) const; Double_tTH1::GetStdDevError(Int_t axis = 1) const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tIntegral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tIntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tInterpolate(Double_t x); virtual Double_tInterpolate(Double_t x, Double_t y); virtual Double_tInterpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH2.html:10881,Inherit,InheritsFrom,10881,root/html534/TH2.html,https://root.cern,https://root.cern/root/html534/TH2.html,1,['Inherit'],['InheritsFrom']
Modifiability,"s = 1) const; virtual voidGetStats(Double_t* stats) const; Stat_tTArrayD::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual Double_tGetTmax() const; virtual Double_tGetTmin() const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProfile3D.html:12964,Inherit,InheritsFrom,12964,root/html532/TProfile3D.html,https://root.cern,https://root.cern/root/html532/TProfile3D.html,1,['Inherit'],['InheritsFrom']
Modifiability,"s = 1) const; virtual voidGetStats(Double_t* stats) const; Stat_tTArrayD::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Double_tGetZmax() const; virtual Double_tGetZmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProfile2D.html:13126,Inherit,InheritsFrom,13126,root/html532/TProfile2D.html,https://root.cern,https://root.cern/root/html532/TProfile2D.html,1,['Inherit'],['InheritsFrom']
Modifiability,"s = 1) const; virtual voidGetStats(Double_t* stats) const; Stat_tTArrayD::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; virtual Double_tGetYmax() const; virtual Double_tGetYmin() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tTH1::KolmogorovTest(const TH1* h2, Option_t* option = """") const; virtual voidL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProfile.html:11969,Inherit,InheritsFrom,11969,root/html532/TProfile.html,https://root.cern,https://root.cern/root/html532/TProfile.html,1,['Inherit'],['InheritsFrom']
Modifiability,"s = 110, kygaus = 111, kzgaus = 112, kxygaus = 115,; 179 klandau = 120 , kxlandau = 120, kylandau = 121, kzlandau = 122, kxylandau = 125,; 180 kpol = 130 , kxpol = 130, kypol = 131, kzpol = 132,; 181 ; 182 kParameter = 140,; 183 kConstant = 141,; 184 kBoolOptimize = 142,; 185 kStringConst = 143,; 186 kVariable = 144,; 187 kFunctionCall = 145,; 188 kData = 146,; 189 kUnary = 147,; 190 kBinary = 148,; 191 kThree = 149,; 192 kDefinedVariable = 150,; 193 kDefinedString = 151,; 194 //; 195 kPlusD = 152,; 196 kPlusDD = 153,; 197 kMultD = 154,; 198 kMultDD = 155,; 199 kBoolOptimizeOr = 156,; 200 kBoolOptimizeAnd = 157,; 201 kBoolSet = 158,; 202 kFDM = 159,; 203 kFD0 = 160,; 204 kFD1 = 161,; 205 kFD2 = 162,; 206 kFD3 = 163; 207 };; 208 ; 209public:; 210 // TFormula status bits; 211 enum {; 212 kNotGlobal = BIT(10), // don't store in gROOT->GetListOfFunction; 213 kNormalized = BIT(14), // set to true if the function (ex gausn) is normalized; 214 kLinear = BIT(16) //set to true if the function is for linear fitting; 215 };; 216 ; 217 TFormula();; 218 TFormula(const char *name,const char *formula);; 219 TFormula(const TFormula &formula);; 220 TFormula& operator=(const TFormula &rhs);; 221 ~TFormula() override;; 222 ; 223 public:; 224 void Optimize();; 225 virtual void Analyze(const char *schain, Int_t &err, Int_t offset=0);; 226 virtual Bool_t AnalyzeFunction(TString &chaine, Int_t &err, Int_t offset=0);; 227 virtual Int_t Compile(const char *expression="""");; 228 void Copy(TObject &formula) const override;; 229 void Clear(Option_t *option="""") override;; 230 virtual char *DefinedString(Int_t code);; 231 virtual Double_t DefinedValue(Int_t code);; 232 virtual Int_t DefinedVariable(TString &variable,Int_t &action);; 233 virtual Double_t Eval(Double_t x, Double_t y=0, Double_t z=0, Double_t t=0) const;; 234 virtual Double_t EvalParOld(const Double_t *x, const Double_t *params=nullptr);; 235 virtual Double_t EvalPar(const Double_t *x, const Double_t *params=nullptr){return ((*this).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/v5_2TFormula_8h_source.html:8168,variab,variable,8168,doc/master/v5_2TFormula_8h_source.html,https://root.cern,https://root.cern/doc/master/v5_2TFormula_8h_source.html,1,['variab'],['variable']
Modifiability,"s = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoCombiTrans:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoCombiTrans() [1/7]. TGeoCombiTrans::TGeoCombiTrans ; (; ). dummy ctor ; Definition at line 1682 of file TGeoMatrix.cxx. ◆ TGeoCombiTrans() [2/7]. TGeoCombiTrans::TGeoCombiTrans ; (; const TGeoCombiTrans & ; other). inline . Definition at line 323 of file TGeoMatrix.h. ◆ TGeoCombiTrans() [3/7]. TGeoCombiTrans::TGeoCombiTrans ; (; const TGeoMatrix & ; other). Copy ctor from generic matrix. ; Definition at line 1692 of file TGeoMatrix.cxx. ◆ TGeoCombiTrans() [4/7]. TGeoCombiTrans::TGeoCombiTrans ; (; const TGeoTranslation & ; tr, . const TGeoRotation & ; rot . ).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCombiTrans.html:17096,inherit,inherited,17096,doc/master/classTGeoCombiTrans.html,https://root.cern,https://root.cern/doc/master/classTGeoCombiTrans.html,3,['inherit'],['inherited']
Modifiability,"s = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoGenTrans:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoGenTrans() [1/4]. TGeoGenTrans::TGeoGenTrans ; (; ). dummy ctor ; Definition at line 2230 of file TGeoMatrix.cxx. ◆ TGeoGenTrans() [2/4]. TGeoGenTrans::TGeoGenTrans ; (; const char * ; name). constructor ; Definition at line 2243 of file TGeoMatrix.cxx. ◆ TGeoGenTrans() [3/4]. TGeoGenTrans::TGeoGenTrans ; (; Double_t ; dx, . Double_t ; dy, . Double_t ; dz, . Double_t ; sx, . Double_t ; sy, . Double_t ; sz, . TGeoRotation * ; rot . ). constructor ; Definition at line 2256 of file TGeoMatrix.cxx. ◆ TGeoGenTrans() [4/4]. TGeoGenTrans::TGeoGenTrans ; (; const char *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoGenTrans.html:18100,inherit,inherited,18100,doc/master/classTGeoGenTrans.html,https://root.cern,https://root.cern/doc/master/classTGeoGenTrans.html,3,['inherit'],['inherited']
Modifiability,"s = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoScale:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoScale() [1/5]. TGeoScale::TGeoScale ; (; ). default constructor ; Definition at line 1445 of file TGeoMatrix.cxx. ◆ TGeoScale() [2/5]. TGeoScale::TGeoScale ; (; const TGeoScale & ; other). Copy constructor. ; Definition at line 1455 of file TGeoMatrix.cxx. ◆ TGeoScale() [3/5]. TGeoScale::TGeoScale ; (; const TGeoMatrix & ; other). Ctor. based on a general matrix. ; Definition at line 1463 of file TGeoMatrix.cxx. ◆ TGeoScale() [4/5]. TGeoScale::TGeoScale ; (; Double_t ; sx, . Double_t ; sy, . Double_t ; sz . ). default constructor ; Definition at line 1473 of file T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoScale.html:16124,inherit,inherited,16124,doc/master/classTGeoScale.html,https://root.cern,https://root.cern/doc/master/classTGeoScale.html,3,['inherit'],['inherited']
Modifiability,"s = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoTranslation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoTranslation() [1/5]. TGeoTranslation::TGeoTranslation ; (; ). Default constructor. ; Definition at line 577 of file TGeoMatrix.cxx. ◆ TGeoTranslation() [2/5]. TGeoTranslation::TGeoTranslation ; (; const TGeoTranslation & ; other). Copy ctor. ; Definition at line 586 of file TGeoMatrix.cxx. ◆ TGeoTranslation() [3/5]. TGeoTranslation::TGeoTranslation ; (; const TGeoMatrix & ; other). Ctor. based on a general matrix. ; Definition at line 594 of file TGeoMatrix.cxx. ◆ TGeoTranslation() [4/5]. TGeoTranslation::TGeoTranslation ; (; Double_t ; dx, . Double_t ; dy, .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTranslation.html:16460,inherit,inherited,16460,doc/master/classTGeoTranslation.html,https://root.cern,https://root.cern/doc/master/classTGeoTranslation.html,3,['inherit'],['inherited']
Modifiability,"s = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoHMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoHMatrix() [1/4]. TGeoHMatrix::TGeoHMatrix ; (; ). dummy ctor ; Definition at line 2384 of file TGeoMatrix.cxx. ◆ TGeoHMatrix() [2/4]. TGeoHMatrix::TGeoHMatrix ; (; const TGeoHMatrix & ; other). inline . Definition at line 466 of file TGeoMatrix.h. ◆ TGeoHMatrix() [3/4]. TGeoHMatrix::TGeoHMatrix ; (; const TGeoMatrix & ; matrix). assignment ; Definition at line 2404 of file TGeoMatrix.cxx. ◆ TGeoHMatrix() [4/4]. TGeoHMatrix::TGeoHMatrix ; (; const char * ; name). constructor ; Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoHMatrix.html:16972,inherit,inherited,16972,doc/master/classTGeoHMatrix.html,https://root.cern,https://root.cern/doc/master/classTGeoHMatrix.html,3,['inherit'],['inherited']
Modifiability,"s = kGeoTranslation | kGeoRotation | kGeoScale; , kGeoMatrixBits = kGeoShared | kGeoGenTrans | kGeoReflection | kGeoRegistered | kGeoSavePrimitive | kGeoMatrixOwned. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoMatrix;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoMatrix.h>. Inheritance diagram for TGeoIdentity:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIdentity() [1/2]. TGeoIdentity::TGeoIdentity ; (; ). dummy ctor ; Definition at line 2344 of file TGeoMatrix.cxx. ◆ TGeoIdentity() [2/2]. TGeoIdentity::TGeoIdentity ; (; const char * ; name). constructor ; Definition at line 2354 of file TGeoMatrix.cxx. ◆ ~TGeoIdentity(). TGeoIdentity::~TGeoIdentity ; (; ). inlineoverride . Definition at line 412 of file TGeoMatrix.h. Member Function Documentation. ◆ Class(). static TClass * TGeoIdentity::Class ; (; ). static . ReturnsTClass descri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoIdentity.html:15037,inherit,inherited,15037,doc/master/classTGeoIdentity.html,https://root.cern,https://root.cern/doc/master/classTGeoIdentity.html,3,['inherit'],['inherited']
Modifiability,"s =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooStats/HistFactory/ParamHistFunc.h>. Inheritance diagram for ParamHistFunc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ParamHistFunc() [1/4]. ParamHistFunc::ParamHistFunc ; (; ). Definition at line 62 of file ParamHistFunc.cxx. ◆ ParamHistFunc() [2/4]. ParamHistFunc::ParamHistFunc ; (; const char * ; name, . const char * ; title, . const RooArgList & ; vars, . const RooArgList & ; paramSet . ). Create a function which returns binewise-values This class contains N RooAbsReals's, one for each bin from the given RooRealVar. ; The value of the function in the ith bin is given by:; F(i) = gamma_i * nominal(i); Where the nominal values are simply fixed numbers (default = 1.0 for all i) ; Definition at line 81 of file ParamHistFunc.cxx. ◆ ParamHistFunc() [3/4]. ParamHistFunc::ParamHistFunc ; (; const char * ; name, . const char * ; title, .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classParamHistFunc.html:62605,inherit,inherited,62605,doc/master/classParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classParamHistFunc.html,1,['inherit'],['inherited']
Modifiability,"s A {; RQ_OBJECT(""A""); private:; Int_t fValue;; public:; A() : fValue(0) { }; ~A() { }; void SetValue(Int_t value); // *SIGNAL*; void PrintValue() const { printf(""value = %d\n"", fValue); }; };; void A::SetValue(Int_t value) { // Set new value; // Emit signal ""SetValue(Int_t)"" with a single parameter; if (value != fValue) {; fValue = value;; Emit(""SetValue(Int_t)"", fValue);; }; }; // Main program; #ifdef STANDALONE; int main(int argc, char **argv) {; A* a = new A();; A* b = new A();; a->Connect(""SetValue(Int_t)"", ""A"", b, ""SetValue(Int_t)"");; printf(""n******* Test of SetValue(Int_t) signal *******n"");; b->SetValue(10);; printf(""nt***** b before ******n"");; b->PrintValue();; a->SetValue(20);; printf(""t***** b after a->SetValue(20) ******n"");; b->PrintValue();; return 0;; }; #endif; ACLiC simplifies this procedure and allows the dictionary generation by:; root[] .L tst.C++; It will create the shared library tst_C.so.; The next line will create an executable:; g++ -otst tst.C `root-config --cflags --libs` ./tst_C.so -DSTANDALONE; The library tst_C.so is a dynamically loaded library and should be located in $LD_LIBRARY_PATH. The current working directory should be added to $LD_LIBRARY_PATH via:; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:./; To run it, you just do:; ./tst; 25.8 Widgets in Detail; 25.8.1 Buttons; Buttons are a popular group of widgets designed to provide specific interfaces for user interaction. TGButton is an abstract class defining the general button behavior: width, height, state, its group, tool tip text, etc.; There are two main groups of buttons: command buttons with a text or graphics inside that indicate the action to be accomplished and option buttons well known as radio and check buttons that select or change properties. The first group is presented in ROOT by TGPictureButton and TGTextButton classes. They yield an action as soon as they are clicked. It can be opening/closing a dialog box or invoking a specific function in an application. Remember th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1175462,config,config,1175462,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['config'],['config']
Modifiability,"s Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RuleFitAPI(const TMVA::MethodRuleFit* rfbase, TMVA::RuleFit* rulefit, TMVA::EMsgType minType); standard constructor. ~RuleFitAPI(); destructor. void WelcomeMessage(); welcome message. void HowtoSetupRF(); howto message. void InitRuleFit(); default initialisation; SetRFWorkDir(""./rulefit"");. void ImportSetup(); import setup from MethodRuleFit. void SetRFWorkDir(const char* wdir); set the directory containing rf_go.exe. void CheckRFWorkDir(); check if the rulefit work dir is properly setup.; it aborts (kFATAL) if not. Check existance of directory. void SetTrainParms(); set the training parameters. void SetTestParms(); set the test params. void FillRealParmsDef(); set default real params. void FillIntParmsDef(); set default int params. Bool_t WriteAll(); write all files read by rf_go.exe. Bool_t WriteIntParms(); write int params file. Bool_t WriteRealParms(); write int params file. Bool_t WriteLx(); Save input variable mask. If the lx vector size is not the same as inputVars,; resize it and fill it with 1; NOTE: Always set all to 1; if (fRFLx.size() != m_inputVars->size()) {. Bool_t WriteProgram(); write command to rf_go.exe. Bool_t WriteRealVarImp(); write the minimum importance to be considered. Bool_t WriteRfOut(); written by rf_go.exe; write rulefit output (rfout). Bool_t WriteRfStatus(); written by rf_go.exe; write rulefit status. Bool_t WriteRuleFitMod(); written by rf_go.exe (NOTE:Format unknown!). Bool_t WriteRuleFitSum(); written by rf_go.exe (NOTE: format unknown!). Bool_t WriteTrain(); write training data, columnwise. Bool_t WriteTest(); Write test data. Bool_t WriteVarNames(); write variable names, ascii. Bool_t WriteVarImp(); written by rf_go.exe. Bool_t WriteYhat(); written by rf_go.exe. Bool_t ReadYhat(); read the score. Bool_t ReadVarImp(); read variable importance. Bool_t ReadModelSum(); read model from rulefit.sum. Int_t RunRuleFit(); execute rf_go.exe. void TrainRu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__RuleFitAPI.html:3897,variab,variable,3897,root/html528/TMVA__RuleFitAPI.html,https://root.cern,https://root.cern/root/html528/TMVA__RuleFitAPI.html,10,['variab'],['variable']
Modifiability,"s Choose variables in which to generate events. Variables not listed here will remain; 1158/// constant and not be used for event generation.; 1159/// \param[in] arg1,arg2,arg3,arg4,arg5,arg6 Optional RooCmdArg() to change behaviour of generate().; 1160/// \return RooDataSet *, owned by caller.; 1161///; 1162/// Any variables of this PDF that are not in whatVars will use their; 1163/// current values and be treated as fixed parameters. Returns zero; 1164/// in case of an error.; 1165///; 1166/// <table>; 1167/// <tr><th> Type of CmdArg <th> Effect on generate; 1168/// <tr><td> `Name(const char* name)` <td> Name of the output dataset; 1169/// <tr><td> `Verbose(bool flag)` <td> Print informational messages during event generation; 1170/// <tr><td> `NumEvents(int nevt)` <td> Generate specified number of events; 1171/// <tr><td> `Extended()` <td> If no number of events to be generated is given,; 1172/// use expected number of events from extended likelihood term.; 1173/// This evidently only works for extended PDFs.; 1174/// <tr><td> `GenBinned(const char* tag)` <td> Use binned generation for all component pdfs that have 'setAttribute(tag)' set; 1175/// <tr><td> `AutoBinned(bool flag)` <td> Automatically deploy binned generation for binned distributions (e.g. RooHistPdf, sums and products of; 1176/// RooHistPdfs etc); 1177/// \note Datasets that are generated in binned mode are returned as weighted unbinned datasets. This means that; 1178/// for each bin, there will be one event in the dataset with a weight corresponding to the (possibly randomised) bin content.; 1179///; 1180///; 1181/// <tr><td> `AllBinned()` <td> As above, but for all components.; 1182/// \note The notion of components is only meaningful for simultaneous PDFs; 1183/// as binned generation is always executed at the top-level node for a regular; 1184/// PDF, so for those it only mattes that the top-level node is tagged.; 1185///; 1186/// <tr><td> ProtoData(const RooDataSet& data, bool randOrder); 1187/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:57539,extend,extended,57539,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"s Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » GVIZ3D; » TStructViewer. class TStructViewer: public TObject. TStructViewer viewer represents class, struct or other type as an object in 3D space.; At the top of the scene we can see objects which is our pointer. Under it we see; pointers and collection elements. Collection must inherit from TCollection; or be STL collecion. We can change the number of visible levels or objects on the scene with the GUI or; methods. The size of geometry objects is proportional to the memory taken by this object; or to the number of members inside this object. An easy way to find some class in the viewer is to change the color of the type.; We can connect for example a TF2 class with red color or connect all classes; inheriting from TF2 by adding plus to name. For example typename ""TF2+"" tells us; that all classes inheriting from TF2 will be red. Navigation in viewer is very simple like in usual GLViewer. When you put the mouse over; some object you can see some information about it (e.g. name, size, actual level).; When you double click this object, it becames top object on scene.; Undo and redo operation are supported. In this picture we can see TStructViewer with pointer to TList which contains; other collections and objects of various classes. Other screenshot presents opened TStructNodeEditor. Function Members (Methods); public:. virtual~TStructViewer(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStructViewer.html:1075,inherit,inheriting,1075,root/html602/TStructViewer.html,https://root.cern,https://root.cern/root/html602/TStructViewer.html,4,['inherit'],['inheriting']
Modifiability,"s Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEvePathMarkT<double>. class TEvePathMarkT<double>. TEvePathMark. This class is also known as (typedefs to this class)TEvePathMarkD, TEvePathMarkT<Double_t>. Function Members (Methods); public:. TEvePathMarkT<double>(TEvePathMarkT<double>::EType_e type = kReference); TEvePathMarkT<double>(const TEvePathMarkT<double>&); TEvePathMarkT<double>(TEvePathMarkT<double>::EType_e type, const TEveVectorT<double>& v, double time = 0); TEvePathMarkT<double>(TEvePathMarkT<double>::EType_e type, const TEveVectorT<double>& v, const TEveVectorT<double>& p, double time = 0); TEvePathMarkT<double>(TEvePathMarkT<double>::EType_e type, const TEveVectorT<double>& v, const TEveVectorT<double>& p, const TEveVectorT<double>& e, double time = 0); ~TEvePathMarkT<double>(); static TClass*Class(); TClass*IsA() const; TEvePathMarkT<double>&operator=(const TEvePathMarkT<double>&); voidShowMembers(TMemberInspector& insp); voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); const char*TypeName(). Data Members; public:. enum EType_e { kReference; kDaughter; kDecay; kCluster2D; };. public:. TEveVectorT<double>fEExtra, meaning depends on fType.; TEveVectorT<double>fPMomentum.; doublefTimeTime.; TEvePathMarkT<double>::EType_efTypeMark-type.; TEveVectorT<double>fVVertex. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; template<typename TT> const char* TEvePathMarkT<TT> TypeName(); Return the name of path-mark type. » Author: Matevz Tadel 2010 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id: TEvePathMark.h 38721 2011-04-04 13:37:12Z matevz $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEvePathMarkT_double_.html:1534,Inherit,Inheritance,1534,root/html532/TEvePathMarkT_double_.html,https://root.cern,https://root.cern/root/html532/TEvePathMarkT_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"s Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOSTATS; » RooStats::NeymanConstruction. class RooStats::NeymanConstruction: public RooStats::IntervalCalculator. NeymanConstruction is a concrete implementation of the NeymanConstruction interface that, as the name suggests,; performs a NeymanConstruction. ; It produces a RooStats::PointSetInterval, which is a concrete implementation of the ConfInterval interface. . The Neyman Construction is not a uniquely defined statistical technique, it requires that one specify an ordering rule ; or ordering principle, which is usually incoded by choosing a specific test statistic and limits of integration ; (corresponding to upper/lower/central limits). As a result, this class must be configured with the corresponding; information before it can produce an interval. Common configurations, such as the Feldman-Cousins approach, can be ; enforced by other light weight classes. The Neyman Construction considers every point in the parameter space independently, no assumptions are ; made that the interval is connected or of a particular shape. As a result, the PointSetInterval class is used to ; represent the result. The user indicate which points in the parameter space to perform the constrution by providing; a PointSetInterval instance with the desired points. This class is fairly light weight, because the choice of parameter points to be considered is factorized and so is the ; creation of the sampling distribution of the test statistic (which is done by a concrete class implementing the DistributionCreator interface). As a result, this class basically just drives the construction by:. using a DistributionCreator to create the SamplingDistribution of a user-defined test statistic for each parameter point of interest,; defining the acceptance region in the data by finding the thresholds on the test stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__NeymanConstruction.html:1031,config,configurations,1031,root/html528/RooStats__NeymanConstruction.html,https://root.cern,https://root.cern/root/html528/RooStats__NeymanConstruction.html,10,['config'],['configurations']
Modifiability,"s Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TREE; » TREEVIEWER; » TTreeViewer. class TTreeViewer: public TGMainFrame. TreeViewer is a graphic user interface designed to handle ROOT trees and to; take advantage of TTree class features. It uses ROOT native GUI widgets adapted for 'drag and drop' functionality.; in the same session.; The following capabilities are making the viewer a helpful tool for analysis:; - several trees may be opened in the same session;; - branches and leaves can be easily browsed or scanned;; - fast drawing of branch expressions by double-clicking;; - new variables/selections easy to compose with the built-in editor;; - histograms can be composed by dragging leaves or user-defined expressions; to X, Y and Z axis items;; - the tree entries to be processed can be selected with a double slider;; - selections can be defined and activated by dragging them to the 'Cut' item;; - all expressions can be aliased and aliases can be used in composing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, change; the drawing option and the histogram name, three check buttons Hist, Rec; and Scan.HIST toggles histogram drawing mode, REC enables recording of the; last command issued and SCAN enables redirecting of TTree::Scan command in; an ASCI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTreeViewer.html:771,variab,variables,771,root/html530/TTreeViewer.html,https://root.cern,https://root.cern/root/html530/TTreeViewer.html,5,['variab'],['variables']
Modifiability,"s ReferenceTMVA. ; This is a generalization of the above Likelihood methods to \( N_{var} \) dimensions, where \( N_{var} \) is the number of input variables used in the MVA. ; If the multi-dimensional probability density functions (PDFs) for signal and background were known, this method contains the entire physical information, and is therefore optimal. Usually, kernel estimation methods are used to approximate the PDFs using the events from the training sample.; A very simple probability density estimator (PDE) has been suggested in hep-ex/0211019. The PDE for a given test event is obtained from counting the (normalized) number of signal and background (training) events that occur in the ""vicinity"" of the test event. The volume that describes ""vicinity"" is user-defined. A search method based on binary-trees is used to effectively reduce the selection time for the range search. Three different volume definitions are optional:. MinMax: the volume is defined in each dimension with respect to the full variable range found in the training sample.; RMS: the volume is defined in each dimensions with respect to the RMS estimated from the training sample.; Adaptive: a volume element is defined in each dimensions with respect to the RMS estimated from the training sample. The overall scale of the volume element is then determined for each event so that the total number of events confined in the volume be within a user-defined range. The adaptive range search is used by default. ; Definition at line 61 of file MethodPDERS.h. Public Member Functions;  MethodPDERS (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption);  standard constructor for the PDERS method ;  ;  MethodPDERS (DataSetInfo &theData, const TString &theWeightFile);  construct MethodPDERS through from file ;  ; virtual ~MethodPDERS (void);  destructor ;  ; void AddWeightsXMLTo (void *parent) const;  write weights to xml file ;  ; Double_t GetMvaValue (Double_t *err=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPDERS.html:1423,variab,variable,1423,doc/master/classTMVA_1_1MethodPDERS.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPDERS.html,1,['variab'],['variable']
Modifiability,"s ReferenceabstractRooFit » RooFit Core. ; Abstract container object that can hold multiple RooAbsArg objects. ; Collections are ordered and can contain multiple objects of the same name, (but a derived implementation can enforce unique names). The storage of objects is implemented using the container denoted by RooAbsCollection::Storage_t. PyROOT; Some member functions of RooAbsCollection that take a RooCmdArg as argument also support keyword arguments. So far, this applies to RooAbsCollection::printLatex. For example, the following code is equivalent in PyROOT: # Directly passing a RooCmdArg:; params.printLatex(ROOT.RooFit.Sibling(initParams), ROOT.RooFit.Columns(2)); ; # With keyword arguments:; params.printLatex(Sibling=initParams, Columns =2). Definition at line 65 of file RooAbsCollection.h. Classes; struct  RooAbsArgPtrOrDouble;  . Public Types; using const_iterator = Storage_t::const_iterator;  ; using Storage_t = std::vector< RooAbsArg * >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  . Public Member Functions;  RooAbsCollection ();  Default constructor. ;  ;  Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsCollection.html:1469,inherit,inherited,1469,doc/v632/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/v632/classRooAbsCollection.html,2,['inherit'],['inherited']
Modifiability,"s RooAbsReal. Here, \(\theta\) is a vector of parameters with uncertainties \(\sigma_\theta\), and \(x\) are usually observables. The uncertainty is estimated by linearly propagating the parameter uncertainties using the correlation matrix from a fit result.; The square of the uncertainty on \(f(x;\theta)\) is calculated as follows: ; \[; \sigma_f(x)^2 = \Delta f_i(x) \cdot \mathrm{Corr}_{i, j} \cdot \Delta f_j(x),; \]. where \( \Delta f_i(x) = \frac{1}{2} \left(f(x;\theta_i + \sigma_{\theta_i}) - f(x; \theta_i - \sigma_{\theta_i}) \right) \) is the vector of function variations when changing the parameters one at a time, and \( \mathrm{Corr}_{i,j} = \left(\sigma_{\theta_i} \sigma_{\theta_j}\right)^{-1} \cdot \mathrm{Cov}_{i,j} \) is the correlation matrix from the fit result. ; Definition at line 2472 of file RooAbsReal.cxx. ◆ getTitle(). TString RooAbsReal::getTitle ; (; bool ; appendUnit = false); const. Return this variable's title string. ; If appendUnit is true and this variable has units, also append a string "" (<unit>)"". ; Definition at line 285 of file RooAbsReal.cxx. ◆ getUnit(). const Text_t * RooAbsReal::getUnit ; (; ); const. inline . Definition at line 143 of file RooAbsReal.h. ◆ getVal() [1/2]. double RooAbsReal::getVal ; (; const RooArgSet & ; normalisationSet); const. inline . Like getVal(const RooArgSet*), but always requires an argument for normalisation. ; Definition at line 126 of file RooAbsReal.h. ◆ getVal() [2/2]. double RooAbsReal::getVal ; (; const RooArgSet * ; normalisationSet = nullptr); const. inline . Evaluate object. ; Returns either cached value or triggers a recalculation. The recalculation happens by calling getValV(), which in the end calls the virtual evaluate() functions of the respective PDFs. Parameters. [in]normalisationSetgetValV() reacts differently depending on the value of the normalisation set. If the set is nullptr, an unnormalised value is returned. . NoteThe normalisation is arbitrary, because it is up to the implement",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:112529,variab,variable,112529,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['variab'],['variable']
Modifiability,"s RooAbsReal. Here, \(\theta\) is a vector of parameters with uncertainties \(\sigma_\theta\), and \(x\) are usually observables. The uncertainty is estimated by linearly propagating the parameter uncertainties using the correlation matrix from a fit result.; The square of the uncertainty on \(f(x;\theta)\) is calculated as follows: ; \[; \sigma_f(x)^2 = \Delta f_i(x) \cdot \mathrm{Corr}_{i, j} \cdot \Delta f_j(x),; \]. where \( \Delta f_i(x) = \frac{1}{2} \left(f(x;\theta_i + \sigma_{\theta_i}) - f(x; \theta_i - \sigma_{\theta_i}) \right) \) is the vector of function variations when changing the parameters one at a time, and \( \mathrm{Corr}_{i,j} = \left(\sigma_{\theta_i} \sigma_{\theta_j}\right)^{-1} \cdot \mathrm{Cov}_{i,j} \) is the correlation matrix from the fit result. ; Definition at line 2557 of file RooAbsReal.cxx. ◆ getTitle(). TString RooAbsReal::getTitle ; (; bool ; appendUnit = false); const. Return this variable's title string. ; If appendUnit is true and this variable has units, also append a string "" (<unit>)"". ; Definition at line 263 of file RooAbsReal.cxx. ◆ getUnit(). const Text_t * RooAbsReal::getUnit ; (; ); const. inline . Definition at line 143 of file RooAbsReal.h. ◆ getVal() [1/2]. double RooAbsReal::getVal ; (; const RooArgSet & ; normalisationSet); const. inline . Like getVal(const RooArgSet*), but always requires an argument for normalisation. ; Definition at line 126 of file RooAbsReal.h. ◆ getVal() [2/2]. double RooAbsReal::getVal ; (; const RooArgSet * ; normalisationSet = nullptr); const. inline . Evaluate object. ; Returns either cached value or triggers a recalculation. The recalculation happens by calling getValV(), which in the end calls the virtual evaluate() functions of the respective PDFs. Parameters. [in]normalisationSetgetValV() reacts differently depending on the value of the normalisation set. If the set is nullptr, an unnormalised value is returned. . NoteThe normalisation is arbitrary, because it is up to the implement",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:113788,variab,variable,113788,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['variab'],['variable']
Modifiability,"s T > ; static void assert_is_no_temporary (T &&);  . Protected Attributes; bool _allRRV = true;  All contents are RRV. ;  ; Storage_t _list;  Actual object storage. ;  ; TString _name;  Our name. ;  ; bool _ownCont = false;  Flag to identify a list that owns its contents. ;  ; TNamed * _structureTag {nullptr};  ! Structure tag ;  ; TNamed * _typedStructureTag {nullptr};  ! Typed structure tag ;  . Private Types; using HashAssistedFind = RooFit::Detail::HashAssistedFind;  . Private Member Functions; void insert (RooAbsArg *);  Insert an element into the owned collections. ;  ; bool replaceImpl (const RooAbsArg &var1, const RooAbsArg &var2);  . Static Private Member Functions; static void throwAddTypedException (TClass *klass, RooAbsArg *arg);  . Private Attributes; HashAssistedFind * _hashAssistedFind = nullptr;  ! ;  ; std::size_t _sizeThresholdForMapSearch = 100;  ! ;  ; const RooFit::UniqueId< RooAbsCollection > _uniqueId;  . Additional Inherited Members;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAbsCollection.h>. Inheritance diagram for RooAbsCollection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ const_iterator. using RooAbsCollection::const_iterator = Storage_t::const_iterator. Definition at line 68 of file RooAbsCollection.h. ◆ HashAssistedFind. using RooAbsCollection::HashAssistedFind = RooFit::Detail::HashAssistedFind. private . Definition at line 422 of file RooAbsCollection.h. ◆ LegacyIterator_t. using RooAbsCollection::LegacyIterator_t = TIteratorToSTLInterface<Storage_t>. protected . Definition at line 378 of file RooAbsCollection.h. ◆ Storage_t. using RooAbsCollection::Storage_t = std::vector<RooAbsArg*>. Definition at line 67 of file RooAbsCollection.h. Constructor & Destructor Documentation. ◆ RooAbsCollection() [1/4]. RooAbsCollection::RooAbsCollection ; (; ). Default constructor. ; Definition at line 117 of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCollection.html:25345,inherit,inherited,25345,doc/master/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/master/classRooAbsCollection.html,1,['inherit'],['inherited']
Modifiability,"s TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; Float_t fX;  ; Float_t fY;  ; Float_t fZ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classHit.html:8097,inherit,inherited,8097,doc/master/classHit.html,https://root.cern,https://root.cern/doc/master/classHit.html,1,['inherit'],['inherited']
Modifiability,"s TRUE the text result of the action is saved in the fMacroLog; TMacro, accessible via TMacro::GetMacroLog();; Returns -1 in case of error, >=0 in case of succes. Int_t SendCommand(const char* cmd, TProof::ESlaves list = kActive); Send command to be executed on the PROOF master and/or slaves.; Command can be any legal command line command, however commands; like "".x file.C"" or "".L file.C"" will not cause the file.C to be; transfered to the PROOF cluster. In that case use TProof::Exec().; Returns the status send by the remote server as part of the; kPROOF_LOGDONE message. Typically this is the return code of the; command on the remote side. Returns -1 in case of error. TString Getenv(const char* env, const char* ord = ""0""); Get value of environment variable 'env' on node 'ord'. Int_t GetRC(const char* RCenv, Int_t& env, const char* ord = ""0""); Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'. Int_t GetRC(const char* RCenv, Double_t& env, const char* ord = ""0""); Get into 'env' the value of double RC env variable 'rcenv' on node 'ord'. Int_t GetRC(const char* RCenv, TString& env, const char* ord = ""0""); Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'. Int_t SendCurrentState(TList* list); Transfer the current state of the master to the active slave servers.; The current state includes: the current working directory, etc.; Returns the number of active slaves. Returns -1 in case of error. Int_t SendCurrentState(TProof::ESlaves list = kActive); Transfer the current state of the master to the active slave servers.; The current state includes: the current working directory, etc.; Returns the number of active slaves. Returns -1 in case of error. Int_t SendInitialState(); Transfer the initial (i.e. current) state of the master to all; slave servers. Currently the initial state includes: log level.; Returns the number of active slaves. Returns -1 in case of error. Bool_t CheckFile(const char* file, TSlave* sl, Long_t modtime, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProof.html:63281,variab,variable,63281,root/html534/TProof.html,https://root.cern,https://root.cern/root/html534/TProof.html,4,['variab'],['variable']
