quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"ummary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractDetectionPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; AbstractTileableDetectionPlugin, DetectCytokeratinCV, PositivePixelCounterIJ, SimpleTissueDetection2, TileClassificationsToAnnotationsPlugin, TilerPlugin. public abstract class AbstractDetectionPlugin<T>; extends AbstractInteractivePlugin<T>; Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations).; ; TODO: Note this isn't a very stable API (because it's quite awkward), and it's therefore liable to change... Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:1237,plugin,plugins,1237,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,1,['plugin'],['plugins']
Modifiability,"ummary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian2D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian2D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1238,inherit,inherited,1238,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,1,['inherit'],['inherited']
Modifiability,"unay triangulation. static class ; DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. Constructor Summary; Constructors. Constructor; Description; DelaunayTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static BiPredicate<PathObject,PathObject>; boundaryDistancePredicate(double maxDistance,; boolean preferNucleus). BiPredicate that returns true for objects with ROI boundaries within a specified distance. static BiPredicate<PathObject,PathObject>; centroidDistancePredicate(double maxDistance,; boolean preferNucleus). BiPredicate that returns true for objects with ROI centroids within a specified distance. static Collection<PathObject>; classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters). Assign object classifications based upon pre-computed clusters. static Collection<PathObject>; classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun). Assign object classifications based upon pre-computed clusters. static List<PathObject>; createAnnotationsFromSubdivision(DelaunayTools.Subdivision subdivision,; ROI bounds). Create annotations surrounding objects within a specified subdivision based on Voronoi faces. static DelaunayTools.Subdivision; createFromCentroids(Collection<PathObject> pathObjects,; boolean preferNucleusROI). Create a DelaunayTools.Subdivision using the centroid coordinates of ROIs. static DelaunayTools.Subdivision; createFromGeometryCoordinates(Collection<PathObject> pathObjects,; boolean preferNucleusROI,; double densifyFactor). Create a DelaunayTools.Subdivision using the boundary coordinates of ROIs. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters). Assign object names based upon pre-computed clusters. static Collection<PathObject>; nameObjectsByCluster(Collection<Collectio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:1761,extend,extends,1761,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['extend'],['extends']
Modifiability,"undary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its bou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1853,inherit,inherited,1853,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,1,['inherit'],['inherited']
Modifiability,"unner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static variable in class qupath.lib.common.Version. Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH - Static variable in class qupath.lib.common.Version. Compare major then minor then patch versions (ignoring suffixes). compare(PathObject, PathObject) - Method in class qupath.lib.objects.DefaultPathObjectComparator;  ; compare(ROI, ROI) - Method in class qupath.lib.roi.DefaultROIComparator;  ; compareTo(KaplanMeierData.KaplanMeierEvent) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent;  ; compareTo(Version) - Method in class qupath.lib.common.Version;  ; compareTo(PathClass) - Method in class qupath.lib.objects.classes.PathClass. This is now equivalent to this.toString().compareTo(o.toString()). compareTo(ImagePl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:126934,variab,variable,126934,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"unner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:424369,plugin,plugins,424369,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"unningStatistics(double[] values). Create a RunningStatistics object using all the values from a specified array. static RunningStatistics; computeRunningStatistics(SimpleImage img). Compute running statistics using all pixels from a SimpleImage. static void; computeRunningStatistics(SimpleImage img,; SimpleImage imgLabels,; List<RunningStatistics> statsList). Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). static List<RunningStatistics>; createRunningStatisticsList(int n). Create a list of n (empty) RunningStatistics objects. static double[]; getQuartiles(double[] scores). Determine thresholds for dividing an array of double values into quartiles. static double[]; getTertiles(double[] scores). Determine thresholds for dividing an array of double values into tertiles. static void; updateRunningStatistics(RunningStatistics stats,; SimpleImage img). Add all pixels from a SimpleImage to an existing RunningStatistics object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. StatisticsHelper; public StatisticsHelper(). Method Details. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(SimpleImage img); Compute running statistics using all pixels from a SimpleImage. Parameters:; img - ; Returns:. updateRunningStatistics; public static void updateRunningStatistics(RunningStatistics stats,; SimpleImage img); Add all pixels from a SimpleImage to an existing RunningStatistics object. Parameters:; stats - ; img - . createRunningStatisticsList; public static List<RunningStatistics> createRunningStatisticsList(int n); Create a list of n (empty) RunningStatistics objects. Parameters:; n - ; Returns:. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(double[] values); Create a RunningStatistics object using all the values from a specified array. Parameters:; val",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html:1832,inherit,inherited,1832,javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,1,['inherit'],['inherited']
Modifiability,"up table. makeODByLUT(int, double[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert an int pixel to an optical density value using a pre-computed lookup table. makeODLUT(double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table with 256 entries, normalizing to the specified background value. makeODLUT(double, int) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table, normalizing to the specified background value. makePathInProject(String...) - Static method in class qupath.lib.scripting.QP. Build a file or directory path relative to the current project, and ensure that it exists. makeProgressMonitor() - Method in class qupath.lib.gui.TaskRunnerFX;  ; makeProgressMonitor() - Method in class qupath.lib.plugins.AbstractTaskRunner. Create a progress monitor to update the user on what is happening. makeProgressMonitor() - Method in class qupath.lib.plugins.CommandLineTaskRunner;  ; makeReplacement(URI, URI) - Method in class qupath.lib.io.UriUpdater. Add a single replacement to the replacement map. makeRGB(int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; Use ColorTools.packRGB(int, int, int) or ColorTools.packClippedRGB(int, int, int) instead. makeRGB(int, int, int) - Static method in class qupath.lib.scripting.QP. Make a packed int representation of an RGB color. makeRGBA(int, int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. makeScaledRGB(int, double) - Static method in class qupath.lib.common.ColorTools. Scale the RGB channels for a color by a fixed amount. makeScaledRGBwithRangeCheck(float, float, float, ColorModel) - Static method in class qupath.lib.color.ColorTransformer. Create a packed RGB pixel value by applyi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:667558,plugin,plugins,667558,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"upath.lib.color.ColorDeconvolutionStains. Check if we have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual. isH_E() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. isHematoxylin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). isHidden() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isHidden() - Method in interface qupath.lib.plugins.parameters.Parameter. Test is the 'hidden' flag is set for the parameter. isIdentity() - Method in class qupath.opencv.ml.objects.features.Normalizer. Returns true if this normalizer does not actually do anything. isIgnoredClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass should be ignored from some operations, or is null. isImageDataChanging() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true between the time setImageData has been called, and before the first repaint has been completed. isInteger() - Method in class qupath.lib.analysis.stats.Histogram. Check if the histogram has been generated from integer values only. isIntegerWrapper() - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Returns true if the array wra",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:623665,plugin,plugins,623665,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"upath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1421,inherit,inherited,1421,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,1,['inherit'],['inherited']
Modifiability,"upath.lib.gui.charts.ChartTools. Add a menu item to a context menu for displaying a chart for export. addChildObject(PathObject) - Method in class qupath.lib.objects.PathObject. Add an object to the child list of this object. addChildObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.PathObject. Add a collection of objects to the child list of this object. addChoiceParameter(String, String, S, List<S>) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of choices. addChoiceParameter(String, String, S, List<S>, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of choices and help text. addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addClusterMeasurements() - Method in class qupath.opencv.features.DelaunayTriangulation. Compute mean measurements from clustering all connected objects. addColorPropertyPreference(IntegerProperty, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addColumn(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; addCompletion(AutoCompletions.Completion) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addCompletions(Collection<? extends AutoCompletions.Completion>) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addCompletions(AutoCompletions.Completion...) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addDensities(String, PathObjectPredicates.PathObjectPredicat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:13846,extend,extends,13846,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"upath.lib.gui; Class ExtensionManager. java.lang.Object; qupath.lib.gui.ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1332,inherit,inherited,1332,javadoc/docs/qupath/lib/gui/ExtensionManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html,1,['inherit'],['inherited']
Modifiability,"upath.lib.images.writers.ome - package qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io - package qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements - package qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects - package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes - package qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy - package qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events - package qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils - package qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814055,plugin,plugins,814055,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"upath.lib.objects.PathObjectPredicates. Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. BATCH_INDEX - Static variable in class qupath.lib.scripting.ScriptAttributes. Index of the current run when batch processing (starting at 0). BATCH_LAST - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate if the current script is the last in a batch. BATCH_SAVE - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate whether changes to the image data should automatically be saved. BATCH_SIZE - Static variable in class qupath.lib.scripting.ScriptAttributes. Size of the current batch processing batch. batchPredict(List<? extends Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. batchPredict(List<? extends Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. beautify(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Beautifies the specified text, according to the syntax. beautifySourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; below(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value below the threshold. below(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value below the threshold. belowEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the spe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:54020,extend,extends,54020,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"upath.lib.objects.TMACoreObject;  ; putMetadataValue(String, String) - Method in interface qupath.lib.projects.ProjectImageEntry. Store a metadata value. putPixelsFloat(Mat, float[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a float array. putPixelsUnsigned(Mat, byte[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a byte array. pyramidalize(ImageServer<BufferedImage>, double...) - Static method in class qupath.lib.images.servers.ImageServers. Wrap an ImageServer to dynamically generate a pyramid. pyramidalizeTiled(ImageServer<BufferedImage>, int, int, double...) - Static method in class qupath.lib.images.servers.ImageServers. Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. PYTHON - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Python. PYTHON - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PYTHON_IMPORTER - Static variable in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Pythonic import statements. PythonAutoCompletor - Class in qupath.lib.gui.scripting.completors. Auto completion support for Python. PythonAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.PythonAutoCompletor. Constructor. PythonStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Python syntax. Q. QP - Class in qupath.lib.scripting. Collection of static methods that are useful for scripting. QP() - Constructor for class qupath.lib.scripting.QP;  ; QPEx - Class in qupath.lib.gui.scripting. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QPEx() - Constructor for class qupath.lib.gui.scripting.QPEx;  ; quickShowImage(String, Roi, ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Show an ImageProcessor (or array of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:803161,variab,variable,803161,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"upath.lib.scripting.QP. Merge the currently-selected annotations of the current hierarchy to create a new annotation containing the union of their ROIs. mergeSelectedAnnotations(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Merge the currently-selected annotations for an image, replacing them with a single new annotation. mergeSelectedAnnotations(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Merge the currently-selected annotations to create a new annotation containing the union of their ROIs. mergeSharedBoundaries(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Convenience method to set a merger that merges objects based on their shared boundary. METADATA - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; MetadataStore - Interface in qupath.lib.objects. Interface that may be used to indicate that a PathObject (or other object) can store metadata. MICROMETER - Static variable in class qupath.lib.images.servers.PixelCalibration. String to represent 'micrometer' units. micrometerSymbol() - Static method in class qupath.lib.common.GeneralTools. Get a string to represent um (but with the proper 'mu' symbol). microseconds() - Method in class qupath.lib.common.Timeit. Report timings in microseconds. milliseconds() - Method in class qupath.lib.common.Timeit. Report timings in milliseconds. MIME_TYPE_GEOJSON - Static variable in class qupath.lib.gui.commands.InteractiveObjectImporter. Mime type for GeoJson. min() - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Functions. Create a function to calculate the minimum value of an array. min(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Find the minimum of all elements in a Mat, ignoring NaNs. MIN - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Minimum value. MIN_DIAMETER - Enum constant in enum class qupath.lib.analysis.feature",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:691147,variab,variable,691147,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"upath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.MarkdownLanguage. All Implemented Interfaces:; HtmlRenderer, ExecutableLanguage. public class MarkdownLanguage; extends ScriptLanguage; implements HtmlRenderer; Class for the representation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of Markdown syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's code). Constructor Summary; Constructors. Constructor; Description; MarkdownLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Object; execute(ScriptParameters params). Execute the given script String. ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static MarkdownLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. MarkdownLanguage; public MarkdownLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static MarkdownLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. execute; public Object e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html:1409,inherit,inherited,1409,javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,1,['inherit'],['inherited']
Modifiability,"upportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, String) - Static method in class qupath.lib.images.servers.RearrangeRGBImageServer. Get a ServerBuilder that swaps red and blue channels for another (RGB) server. getSwitchToGrayscaleChannel() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.switchToGrayscaleChannelProperty(). getSynchronizeViewers() - Method in class qupath.lib.gui.viewer.ViewerManager. Gets the value of the synchronizeViewers property. getSyntaxFromName(String) - Static method in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:527060,plugin,plugin,527060,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"upportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:2610,inherit,inherited,2610,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,1,['inherit'],['inherited']
Modifiability,"ur browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICON",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1079,extend,extends,1079,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,1,['extend'],['extends']
Modifiability,"ur browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PathIO. java.lang.Object; qupath.lib.io.PathIO. public class PathIO; extends Object; Primary class for loading/saving ImageData objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static final ObjectInputStream; createObjectInputStream(InputStream stream). Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. static void; exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. static void; exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. static void; exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. static <T> ImageServerBuilder.ServerBuilder<T>; extractServerBuilder(Path file). Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. static int; getCurrentDataFileVersion(). Get the current preferred data file version. static List<String>; getObjectFileExtensions(). Deprecated.; use getObjectFileExtensions(boolean) instead. static List<String>; getObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:1064,extend,extends,1064,javadoc/docs/qupath/lib/io/PathIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html,1,['extend'],['extends']
Modifiability,"ures. SvgTools() - Constructor for class qupath.lib.extension.svg.SvgTools;  ; SvgTools.SvgBuilder - Class in qupath.lib.extension.svg. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType - Enum Class in qupath.lib.extension.svg. Enum defining ways in which raster images may be included in the SVG file. swapNameAndClass(PathObject, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Swap the name and PathClass of an object. swapRGBOrder(BufferedImage, String) - Static method in class qupath.lib.awt.common.BufferedImageTools. Swap the order of pixels in an RGB image. switchToGrayscaleChannelProperty() - Method in class qupath.lib.display.ImageDisplay. Property indicating which channel should be used if ImageDisplay.useGrayscaleLutProperty() is turned on. SYMBOL_MICROMETER - Static variable in class qupath.lib.common.GeneralTools. String to represent um (but with the proper 'mu' symbol). SYMBOL_MU - Static variable in class qupath.lib.common.GeneralTools. Small Greek mu (useful for micrometers). SYMBOL_SIGMA - Static variable in class qupath.lib.common.GeneralTools. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). symDifference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the symmetric difference between two ROIs (XOR). symmetric(int) - Static method in class qupath.lib.regions.Padding. Get a padding object with 'pad' pixels on all sides. syncChanges() - Method in interface qupath.lib.projects.Project. Save the project. synchronizeViewersProperty() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; syncProject(Project<?>) - Static method in class qupath.lib.gui.panes.ProjectBrowser. Try to save a project, showing an error message if this fails. systemMenubar - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; SystemMenuBar - Class in qupath.lib.gui.prefs. Helper class for managing MenuBar.useSystemMenuBarProp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1015817,variab,variable,1015817,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"urity.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtension",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1428,inherit,inherited,1428,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,1,['inherit'],['inherited']
Modifiability,"urn a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:2300,inherit,inherited,2300,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['inherit'],['inherited']
Modifiability,"urn a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:2689,inherit,inherited,2689,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['inherit'],['inherited']
Modifiability,"urn a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:2380,inherit,inherited,2380,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['inherit'],['inherited']
Modifiability,"urns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:6031,extend,extends,6031,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['extend'],['extends']
Modifiability,"urrently works only for TMA cores.; ; Purpose is to remove edge detections, where the tissue quality tends to be lower. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FindConvexHullDetectionsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:1851,plugin,plugin,1851,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,1,['plugin'],['plugin']
Modifiability,"use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(ROI, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(ROI, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(ROI, String) instead. qupath.opencv.tools.OpenCVTools.getCircularStructuringElement(int). OpenCVTools.createDisk(int, boolean) gives more reliable shapes. qupath.opencv.tools.OpenCVTools.labelImage(Mat, Mat, int). Use OpenCVTools.label(Mat, Mat, int) instead. qupathj.QuPath_Send_Overlay_to_QuPath.createPathObjectsFromROIs(ImagePlus, Roi[], ImageServer<?>, double, boolean, boolean, ImagePlane). use instead QuPath_Send_Overlay_to_QuPath.createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). Deprecated Constructors. Constructor; Description; qupath.lib.gui.commands.MiniViewers.MiniViewerManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>). use MiniViewers.createManager(QuPathViewer, Collection) instead. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:14845,extend,extends,14845,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['extend'],['extends']
Modifiability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. colorMap; public ObjectProperty<ColorMaps.ColorMap> colorMapProperty; Return the ColorMap property of this canvas. See Also:. getColorMap(); setColorMap(ColorMaps.ColorMap); colorMapProperty(). Constructor Details. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun); Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Parameters:; height - ; colorMap - ; fun - function to map the 256 values of the color map to a displayable string. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap). Parameters:; height - ; colorMap - . Method Details. minHeight; public double minHeight(double width). Overrides:; minHeight in class Node. maxHeight; public double maxHeight(double width). Overrides:; maxHeight in class Node. prefHeight; public double prefHeight(double width). Overrides:; prefHeight in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:9597,inherit,inherited,9597,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,1,['inherit'],['inherited']
Modifiability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. disableToggleMenuItems; public BooleanProperty disableToggleMenuItemsProperty; Property to disable options to toggle the visibility of channels. See Also:. disableToggleMenuItemsProperty(). currentChannel; public ReadOnlyObjectProperty<ChannelDisplayInfo> currentChannelProperty; Get the currently-selected channel.; This is not necessarily showing in the image; see #currentChannelVisible() for that. See Also:. currentChannelProperty(). imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; Property for the image display that should be shown and managed by this pane. See Also:. imageDisplayProperty(). Constructor Details. BrightnessContrastChannelPane; public BrightnessContrastChannelPane(). Method Details. disableToggleMenuItemsProperty; public BooleanProperty disableToggleMenuItemsProperty(); Property to disable options to toggle the visibility of channels. Returns:. currentChannelVisible; public Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:12471,inherit,inherited,12471,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['inherit'],['inherited']
Modifiability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. doLogCounts; public BooleanProperty doLogCountsProperty; Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. See Also:. doLogCountsProperty(). minValue; public DoubleProperty minValueProperty; The minimum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. minValueProperty(). maxValue; public DoubleProperty maxValueProperty; The maximum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. maxValueProperty(). Constructor Details. BrightnessContrastHistogramPane; public BrightnessContrastHistogramPane(). Method Details. doLogCountsProperty; public BooleanProperty doLogCountsProperty(); Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. Returns:. m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:11778,inherit,inherited,11778,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['inherit'],['inherited']
Modifiability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. hideIfEmpty; public BooleanProperty hideIfEmptyProperty; Property controlling whether the chart should be hidden if there is no data. See Also:. getHideIfEmpty(); setHideIfEmpty(boolean); hideIfEmptyProperty(). countsTransform; public ObjectProperty<HistogramChart.CountsTransformMode> countsTransformProperty; Property to control how counts should be transformed before being; shown in the histogram. See Also:. getCountsTransform(); setCountsTransform(HistogramChart.CountsTransformMode); countsTransformProperty(). displayMode; public ObjectProperty<HistogramChart.DisplayMode> displayModeProperty; Property to control how the histogram is displayed, either using areas or bars. See Also:. getDisplayMode(); setDisplayMode(HistogramChart.DisplayMode); displayModeProperty(). Constructor Details. HistogramChart; public HistogramChart(). Method Details. hideIfEmptyProperty; public BooleanProperty hideIfEmptyProperty(); Proper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:15812,inherit,inherited,15812,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberValue val,; Color color); Set the color of a specified threshold line. Parameters:; val - ; color - . addThreshold; public ObservableN",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:12213,inherit,inherited,12213,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['inherit'],['inherited']
Modifiability,"useEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectProperty<HistogramChart.DisplayMode>; displayModeProperty(). Property to control how the histogram is displayed, either using",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:4383,inherit,inherited,4383,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"usters,; Function<Integer,PathClass> pathClassFun); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; pathClassFun - function used to create a PathClass from a cluster number (determined by where it falls within the collection).; Returns:; a collection of objects that have had their classifications set by this method. classifyObjectsByCluster; public static Collection<PathObject> classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; Returns:; a collection of objects that have had their classifications set by this method. nameObjectsByCluster; public static Collection<PathObject> nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; pathClassFun - function used to create a PathClass from a cluster number (determined by where it falls within the collection).; However rather than set this as the object classification, it will be used to set the name and color of the object ; (so as to avoid overriding an existing classification).; Returns:; a collection of objects that have had their classifications set by this method. nameObjectsByCluster; public static Collection<PathObject> nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters); Assign object names based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; Returns:; a collection of objects that have had ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:8166,extend,extends,8166,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['extend'],['extends']
Modifiability,"ut - the generated output. andThen; default OutputHandler<S,T,U> andThen(OutputHandler<S,T,U> after); Append a second output handler to this one.; Both are called, and return true if either returns true. Parameters:; after - ; Returns:. orElse; default OutputHandler<S,T,U> orElse(OutputHandler<S,T,U> after); Append a second output handler to this one, but only call it if this one returns false.; The return value of the handler is then true if either returns true. Parameters:; after - ; Returns:. createUnmaskedObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects.; ; This method does not apply any masking to the parent ROI, but assumed this has already been applied; elsewhere. Consequently, it can result in objects being created that extend beyond the ROI.; To avoid this, use createMaskAndSplitObjectOutputHandler(OutputToObjectConverter) or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:4324,extend,extend,4324,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,1,['extend'],['extend']
Modifiability,"utHandler<S,T,U>); qupath.lib.gui.actions.OverlayActions; qupath.lib.gui.viewer.OverlayOptions; qupath.lib.regions.Padding; qupath.lib.gui.tools.PaneTools; qupath.lib.plugins.parameters.ParameterList (implements java.io.Serializable); qupath.lib.gui.dialogs.ParameterPanelFX; qupath.lib.experimental.pixels.Parameters<S,T>; qupath.lib.experimental.pixels.Parameters.Builder<S,T>; qupath.opencv.ml.PatchClassifierParams; qupath.opencv.ml.PatchClassifierParams.Builder; qupath.lib.objects.classes.PathClass (implements java.lang.Comparable<T>, java.io.Serializable); qupath.lib.objects.classes.PathClass.StandardPathClasses; qupath.lib.objects.classes.PathClassFactory; qupath.lib.objects.classes.PathClassTools; qupath.lib.io.PathIO; qupath.lib.objects.PathObject (implements java.io.Externalizable). qupath.lib.objects.PathROIObject. qupath.lib.objects.PathAnnotationObject; qupath.lib.objects.PathDetectionObject. qupath.lib.objects.PathCellObject; qupath.lib.objects.PathTileObject. qupath.lib.plugins.ParallelTileObject (implements qupath.lib.objects.TemporaryObject). qupath.lib.objects.TMACoreObject (implements qupath.lib.objects.MetadataStore). qupath.lib.objects.PathRootObject. qupath.lib.objects.PathObjectConnections (implements java.io.Externalizable); qupath.lib.gui.commands.PathObjectGridView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener); qupath.lib.objects.hierarchy.PathObjectHierarchy (implements java.io.Serializable); qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent; qupath.lib.gui.panes.PathObjectHierarchyView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); qupath.lib.gui.tools.PathObjectLabels; qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane; qupath.lib.gui.viewer.PathObjectPainter; qupath.lib.objects.PathObjectPredicates; qupath.lib.objects.PathOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:26425,plugin,plugins,26425,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"utMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; The image display to which the sliders are applied. See Also:. imageDisplayProperty(). disableMinMaxAdjustment; public BooleanProperty disableMinMaxAdjustmentProperty; Prevent the min and max sliders from being adjusted. See Also:. disableMinMaxAdjustmentProperty(). disableGammaAdjustment; public BooleanProperty disableGammaAdjustmentProperty; Prevent gamma from being adjusted. See Also:. disableGammaAdjustmentProperty(). selectedChannel; public ObjectProperty<ChannelDisplayInfo> selectedChannelProperty; The channel to which the sliders are applied.; This should be a channel found within #imageDisplayProperty(). See Also:. selectedChannelProperty(). maxValue; public DoubleProperty maxValueProperty; Value of the maxi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:12710,inherit,inherited,12710,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['inherit'],['inherited']
Modifiability,"ution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a description of the meaning of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get the object hierarchy. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. getHistogram() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram. getHistogram(ChannelDisplayInfo) - Method in class qupath.lib.displ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:401552,plugin,plugins,401552,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"v.dnn.DnnTools. Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. registerOp(Class<? extends ImageOp>, String) - Static method in class qupath.opencv.ops.ImageOps. Register an ImageOp class for JSON serialization/deserialization. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, Shape, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, RegionRequest, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; registerSubtype(Class<? extends ObjectClassifier>) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. Register a new ObjectClassifier subtype for compatibility with Gson serialization. registerSubtype(Class<? extends T>) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using the default label (the simple name of the class). registerSubtype(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using a custom label. registerTool(QuPathViewer) - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; registerTool(QuPathViewer) - Method in interface qupath.lib.gui.viewer.tools.PathTool. Register the tool on the viewer. RELABEL - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; relabelTMAGrid(String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel the current TMA grid. relabelTMAGrid(PathObjectHierarchy, String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel a TMA grid. relabelTMAGrid(TMAGrid, String, String, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Relabel a TMA grid. relative(URI, URI) - Meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:841095,extend,extends,841095,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"v.ml.OpenCVClassifiers.RTreesClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Retrieve a list of adjustable parameter that can be used to customize the classifier. getParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a reference to a ParameterList stored internally, and which will be used for analysis. getParameterListJSON(Map<String, ?>, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(Map) instead. getParameterListJSON(ParameterList, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(ParameterList) instead. getParameterMap() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getParameterMap() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get a map of parameters required for this step. getParameters() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the ParameterList displayed in this panel. getParameters() - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameters. getParent() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent object. getParent() - Method in class qupath.lib.objects.PathObject. Request the parent object. getParentClass() - Method in class qupath.lib.objects.classes.PathClass. Get the parent classification, or null if this classification has no parent. getParentObjects(ImageData<BufferedIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:473709,plugin,plugins,473709,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"v.ops.ImageOps. Register an ImageOp class for JSON serialization/deserialization. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, Shape, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, RegionRequest, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; registerSubtype(Class<? extends ObjectClassifier>) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. Register a new ObjectClassifier subtype for compatibility with Gson serialization. registerSubtype(Class<? extends T>) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using the default label (the simple name of the class). registerSubtype(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using a custom label. registerTool(QuPathViewer) - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; registerTool(QuPathViewer) - Method in interface qupath.lib.gui.viewer.tools.PathTool. Register the tool on the viewer. RELABEL - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; relabelTMAGrid(String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel the current TMA grid. relabelTMAGrid(PathObjectHierarchy, String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel a TMA grid. relabelTMAGrid(TMAGrid, String, String, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Relabel a TMA grid. relative(URI, URI) - Method in class qupath.lib.io.UriUpdater. Identify replacements for missing URIs by relativizing URI. relative(Path, Path) - Method in class qupath.lib.io.UriUpdater. Identify replacem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:841271,extend,extends,841271,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"va.lang.AutoCloseable); qupath.lib.analysis.images.SimpleImages; qupath.lib.gui.panes.SimpleImageViewer; qupath.lib.plugins.workflow.SimplePluginWorkflowStep (implements java.io.Externalizable, qupath.lib.plugins.workflow.ScriptableWorkflowStep); qupath.process.gui.commands.SimpleThresholdCommand (implements java.lang.Runnable); qupath.imagej.processing.SimpleThresholding; qupath.process.gui.commands.SingleMeasurementClassificationCommand (implements java.lang.Runnable); qupath.lib.gui.panes.SlideLabelView (implements javafx.beans.value.ChangeListener<T>); qupath.lib.images.servers.SparseImageServer.Builder; qupath.lib.images.servers.SparseImageServer.SparseImageServerManager (implements java.lang.AutoCloseable); qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand; qupath.process.gui.commands.SplitProjectTrainingCommand (implements java.lang.Runnable); qupath.lib.color.StainVector (implements java.io.Externalizable); qupath.lib.analysis.stats.StatisticsHelper; qupath.lib.plugins.parameters.StringParameter; qupath.lib.gui.commands.SummaryMeasurementTableCommand; qupath.lib.extension.svg.SvgExtension (implements qupath.lib.gui.extensions.QuPathExtension); qupath.lib.extension.svg.SvgExtension.SvgActions; qupath.lib.extension.svg.SvgTools; qupath.lib.extension.svg.SvgTools.SvgBuilder; qupath.lib.gui.prefs.SystemMenuBar; qupath.lib.plugins.TaskRunnerUtils; qupath.lib.gui.scripting.TextAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>); qupath.opencv.tools.Thinning; qupath.lib.common.ThreadTools; java.lang.Throwable (implements java.io.Serializable). java.lang.Exception. java.lang.RuntimeException. qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException. qupath.imagej.images.writers.TiffWriterIJ; qupath.lib.images.writers.TileExporter; qupath.lib.objects.utils.Tiler; qupath.lib.objects.utils.Tiler.Builder; qupath.lib.images.servers.TileRequest; qupath.lib.common.Timeit; qupath.lib.common.Timeit.Checkpoint; qupath.lib.g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:34575,plugin,plugins,34575,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"va.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to update the user on what is happening. Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. awaitCompletion; protected void awaitCompletion(); Await the completion of currently-running tasks, notifying any listener if necessary. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Parameters:; tasks - . isCancelled; public boolean isCancelled(); Description copied from interface: TaskRunner; Query if the plugin can be cancelled while running.; Plugins are expected to check this flag before time-consuming operations. Specified by:; isCancelled in interface TaskRunner; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html:3142,extend,extends,3142,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,2,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"vaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts. java.lang.Object; qupath.lib.gui.charts.Charts. public class Charts; extends Object; Helper class for generating interactive charts. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Charts.BarChartBuilder. Builder for creating scatter charts. static class ; Charts.PieChartBuilder. Builder for creating pie charts. static class ; Charts.ScatterChartBuilder. Builder for creating scatter charts. Constructor Summary; Constructors. Constructor; Description; Charts();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Charts.BarChartBuilder; barChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. static Charts.PieChartBuilder; pieChart(). Create a Charts.PieChartBuilder for generating a custom pie chart. static Charts.ScatterChartBuilder; scatterChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Charts; public Charts(). Method Details. scatterChart; public static Charts.ScatterChartBuilder scatterChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. pieChart; public static Charts.PieChartBuilder pieChart(); Create a Charts.PieChartBuilder for generating a custom pie chart. Returns:; the builder. barChart; public static Charts.BarChartBuilder barChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html:1361,inherit,inherited,1361,javadoc/docs/qupath/lib/gui/charts/Charts.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html,1,['inherit'],['inherited']
Modifiability,vafx.beans.value.ChangeListener<T>); qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. qupath.lib.gui.viewer.overlays.GridOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.opencv.CellCountsCV; qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.gui.ImageJMacroRunner. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.plugins.CommandLineTaskRunner; qupath.lib.gui.TaskRu,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:6406,plugin,plugins,6406,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"validateMarkerMask(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for training images. VALUE_VALIDATION - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for validation images. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1077099,variab,variable,1077099,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"value; associated with an ImageDisplay. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableGammaAdjustment. Prevent gamma from being adjusted. BooleanProperty; disableMinMaxAdjustment. Prevent the min and max sliders from being adjusted. DoubleProperty; gammaValue. Value of the gamma slider. ObjectProperty<ImageDisplay>; imageDisplay. The image display to which the sliders are applied. DoubleProperty; maxValue. Value of the maximum slider. DoubleProperty; minValue. Value of the minimum slider. ObjectProperty<ChannelDisplayInfo>; selectedChannel. The channel to which the sliders are applied. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:1806,inherit,inherited,1806,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['inherit'],['inherited']
Modifiability,"values are left unchanged. Parameters:; mat - . ensureContinuous; public static Mat ensureContinuous(Mat mat,; boolean inPlace); Ensure a Mat is continuous, creating a copy of the data if necessary.; ; This can be necessary before calls to AbstractArray.createBuffer() or AbstractArray.createIndexer() for ; simpler interpretation of the results. Parameters:; mat - input Mat, which may or may not be continuous; inPlace - if true, set mat to contain the cloned data if required; Returns:; the original mat unchanged if it is already continuous, or cloned data that is continuous if required; See Also:. Mat.isContinuous(). vConcat; public static Mat vConcat(Collection<? extends Mat> mats,; Mat dest); Vertical concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. hConcat; public static Mat hConcat(Collection<? extends Mat> mats,; Mat dest); Horizontal concatenation for a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mats - mats to concatenate; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided. applyToChannels; public static void applyToChannels(Mat input,; Consumer<Mat> fun); Apply a method that modifies a Mat in-place to all ; channels of the Mat, merging the result and storing the result in-place. Parameters:; input - the (possibly-multichannel) mat; fun - the consumer to apply. matToBufferedImage; public static BufferedImage matToBufferedImage(Mat mat); Convert a Mat to a BufferedImage.; ; This is equivalent to matToBufferedImage(mat, null);; As such, the ColorModel may or may not end up being something useful. Parameters:; mat - ; Returns:; See Also:. matToBufferedImage(org.bytedeco.opencv.opencv_core.Mat). matToBufferedImage; public static BufferedImage matToBufferedImage(Mat mat,; ColorModel colorModel); Conv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:19232,extend,extends,19232,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['extend'],['extends']
Modifiability,"values used.; Later versions make calibrated measurements and give more flexibility in terms of output. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:1976,plugin,plugin,1976,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['plugin'],['plugin']
Modifiability,"values() - Static method in enum class qupath.process.gui.WandToolEventHandler.WandType. Returns an array containing the constants of this enum class, in; the order they are declared. variance(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D circular variance filter. VARIANCE - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Variance value. varianceFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D local variance filter to all channels of an image, with symmetric boundary padding. varianceFilter(Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D local variance filter to all channels of an image. vConcat(Collection<? extends Mat>, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Vertical concatenation for a Mat. Version - Class in qupath.lib.common. Helper class for working with semantic versioning. VERSION - Static variable in class qupath.lib.scripting.QP. The current QuPath version, parsed according to semantic versioning. VIEW_TRACKER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; viewer - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; viewer - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; viewer - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; viewer(QuPathViewer) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify a viewer. viewer(QuPathViewer) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify a viewer. viewer(QuPathViewer) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify a viewer. VIEWER - Enum constant in enum class qupath.lib.gui.tools.GuiTools.SnapshotType. Snapshot of the current viewer content. VIEWER_GRID_1x1 - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; VIEWER_GRID_1x1 - Variable in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1095925,variab,variable,1095925,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:6515,plugin,plugins,6515,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['plugin'],['plugins']
Modifiability,"veOrClipObjectsOutsideImage(ImageData<?>) - Static method in class qupath.lib.scripting.QP. Remove objects occurring outside the specified image bounds, clipping annotations where possible to retain ; the part that is inside the image. removeOverlaps(Collection<? extends PathObject>, Comparator<PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Resolve overlaps, discarding one and keeping the other. removeOverlapsByLocation(Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Resolve overlapping object by location, retaining the object closest to the image 'origin' and discarding the object further away. removeOverlapsBySize(Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Resolve overlapping objects by size, retaining the object with the larger ROI and discarding the object with the smaller ROI. removeParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Remove a parameter from this list. removeParameterChangeListener(ParameterChangeListener) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Remove a ParameterChangeListener. removePathObject(PathObject) - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.removeChildObject(PathObject). removePathObjectListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). removePathObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.removeChildObjects(Collection). removePathObjectSelectionListener(PathObjectSelectionListener) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Remove listener for selection changes. removePrope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:849921,plugin,plugins,849921,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"vel(). Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders); Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builders - ; Returns:. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder); Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builder - ; Returns:. getProviderClass; public Class<? extends ImageServerBuilder<T>> getProviderClass(); Get the class of the associated ImageServerBuilder. Returns:. getBuilders; public List<ImageServerBuilder.ServerBuilder<T>> getBuilders(); Get a list of ServerBuilders, one for each image that can be read based on the specified URI. ; For a 'simple' file that contains a single image, a singleton list should be returned. Returns:. getSupportLevel; public float getSupportLevel(); Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance.; ; The support level should be a value between ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html:2851,extend,extends,2851,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,1,['extend'],['extends']
Modifiability,vents.PathObjectHierarchyEvent;  ; toString() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy;  ; toString() - Method in class qupath.lib.objects.PathObject;  ; toString() - Method in enum class qupath.lib.objects.PathObjectFilter;  ; toString() - Method in class qupath.lib.objects.PathRootObject;  ; toString() - Method in class qupath.lib.objects.TMACoreObject;  ; toString() - Method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap;  ; toString() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; toString() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; toString() - Method in class qupath.lib.regions.ImagePlane;  ; toString() - Method in class qupath.lib.regions.ImageRegion;  ; toString() - Method in class qupath.lib.regions.Padding;  ; toString() - Method in class qupath.lib.regions.RegionRequest;  ; toString() - Method in class qupath.lib.roi.AreaROI;  ; toString() - Method in class qupath.lib.roi.EllipseROI;  ; toString() - Method in class qupath.lib.roi.GeometryROI;  ; toString() - Method in class qupath.lib.roi.LineROI;  ; toString() - Method in class qupath.lib.roi.PolygonROI;  ; toString() - Method in class qupath.lib.roi.PolylineROI;  ; toString() - Method in class qupath.lib.roi.RectangleROI;  ; toString() - Method in class qupa,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1041858,plugin,plugins,1041858,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ver build using viewer defaults. Builder(ImageData<BufferedImage> imageData). Create a rendered image server for the specified ImageData;. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; RenderedImageServer.Builder; backgroundColor(int rgb,; boolean keepAlpha). Specify a base color. RenderedImageServer.Builder; backgroundColor(Color color). Specify a base color. ImageServer<BufferedImage>; build(). Create the rendered image server. RenderedImageServer.Builder; display(ImageDisplay display). Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(QuPathViewer viewer); Create a rendered image server build using viewer defaults. Parameters:; viewer - . Builder; public Builder(ImageData<BufferedImage> imageData); Create a rendered image server for the s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:1945,layers,layers,1945,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['layers'],['layers']
Modifiability,"verBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.opencv.CellCountsCV;  ; getDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getDescription() - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:380933,plugin,plugins,380933,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"vers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_WIDTH - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_COMMENT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_OBJECTIVE_POWER - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_QUICKHASH1 - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_VENDOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; put(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Put a measurement value into the list, replacing any previous measurement with the same name. put(String, T) - Method in interface qupath.lib.projects.ResourceManager.Manager. Save a resource within the project. put0(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair without rotation. put135(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 135 degree rotation. put45(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:799746,variab,variable,799746,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"version number (0.X.0). getMinSizeForTiling() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default minimum image size when writing OME-TIFF images. getMinThreshold() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the minimum threshold value. getMinValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum of all the values being histogrammed. getMinValue() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the minimum value supported by this image. getMinX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the top left of the region bounding box. getMinY() - Method in class qupath.lib.regions.ImageRegion. Get the y coordinate of the top left of the region bounding box. getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Check for missing features, returning the names and number of input objects missing the specified features. getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getMissingFeatures(ImageData<T>, PathObject) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Check for missing features, returning the names. getMissingItems() - Method in class qupath.lib.io.UriUpdater. Get all missing items. getMissingValue() - Method in class qupath.opencv.ml.objects.features.Normalizer. Return the value that will be output after normalization if the computed value is not finite. getModelType() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the type of the mode",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:445079,extend,extends,445079,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"vertToPathObject(Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlus imp). Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). static PolygonROI; convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Convert an ImageJ PolygonRoi to a QuPath PolygonROI. static ROI; convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi. static ROI; convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. static <T extends PathImage<? extends ImagePlus>>ROI; convertToROI(Roi roi,; T pathImage). Create a ROI from an ImageJ Roi. static ImagePlus; convertToUncalibratedImagePlus(String title,; BufferedImage img). Convert a BufferedImage to an ImagePlus, without pixel size information or other calibration. static ImageStack; createImageStack(ImageProcessor... ips). Create an ImageStack containing the specified ImageProcessors. static PathImage<ImagePlus>; createPathImage(ImageServer<BufferedImage> server,; ImagePlus imp,; RegionRequest request). Create a PathImage from an ImagePlus and region. static double; estimateDownsampleFactor(ImagePlus imp,; ImageServer<?> server). Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary. static ImagePlus; extractHyperstack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. static Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:5664,extend,extends,5664,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,2,['extend'],['extends']
Modifiability,"verview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.servers; Enum Class ImageServerMetadata.ChannelType. java.lang.Object; java.lang.Enum<ImageServerMetadata.ChannelType>; qupath.lib.images.servers.ImageServerMetadata.ChannelType. All Implemented Interfaces:; Serializable, Comparable<ImageServerMetadata.ChannelType>, Constable. Enclosing class:; ImageServerMetadata. public static enum ImageServerMetadata.ChannelType; extends Enum<ImageServerMetadata.ChannelType>; Enum representing possible channel (band) types for an image.; The purpose of this is to support images where channels have different interpretations, ; such as probabilities or classifications. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Each channel represents a classification, such as in a labelled image. DEFAULT. Default channel interpretation. DENSITY. Each channel represents a density value, such as in a density map (e.g. FEATURE. Each channel represents a feature for a pixel classifier. MULTICLASS_PROBABILITY. Each channel represents a probability value, where each pixel is potentially part of multiple classes. PROBABILITY. Each channel represents a probability value, where it is assumed that there is only one true class per pixel. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageServerMetadata.ChannelType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageServerMetadata.ChannelType[]; values(). Returns an array containing the constants of this enum class, in; the order",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html:1116,extend,extends,1116,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,1,['extend'],['extends']
Modifiability,"vgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not include images. EMBED; public static final SvgTools.SvgBuilder.ImageIncludeType EMBED; Embed the image (as Base64-encoded PNG). LINK; public static final SvgTools.SvgBuilder.ImageIncludeType LINK; Link the image (to a separate PNG). Method Details. values; public static SvgTools.SvgBuilder.ImageIncludeType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SvgTools.SvgBuilder.ImageIncludeType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; na",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html:1816,inherit,inherited,1816,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,1,['inherit'],['inherited']
Modifiability,"view; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1123,inherit,inherited,1123,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,1,['inherit'],['inherited']
Modifiability,"viewer.QuPathViewerListener); qupath.lib.gui.viewer.ViewerPlusDisplayOptions; qupath.lib.gui.actions.menus.ViewMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.ViewMenuActions.Actions; qupath.lib.gui.actions.menus.ViewMenuActions.CellDisplayActions; qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions; qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions; qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewGridActions; qupath.lib.gui.actions.menus.ViewMenuActions.ZoomActions; qupath.lib.gui.viewer.recording.ViewTracker (implements qupath.lib.gui.viewer.QuPathViewerListener); qupath.lib.gui.viewer.recording.ViewTrackerControlPane (implements java.lang.Runnable); qupath.lib.gui.viewer.recording.ViewTrackerDataMap; qupath.process.gui.WandToolEventHandler.WandPreferences; qupath.imagej.processing.Watershed; qupath.lib.analysis.algorithms.Watershed; qupath.lib.gui.tools.WebViews; qupath.lib.gui.WelcomeStage; qupath.lib.plugins.workflow.Workflow (implements java.io.Externalizable); qupath.lib.gui.panes.WorkflowCommandLogView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.plugins.workflow.WorkflowListener); qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.imagej.images.writers.ZipWriterIJ. Interface Hierarchy. qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction; qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper; java.lang.AutoCloseable. qupath.opencv.dnn.DnnModel; qupath.lib.images.servers.ImageServer<T>. qupath.lib.images.servers.GeneratingImageServer<T>; qupath.opencv.ops.ImageDataServer<T>. qupath.lib.measurements.MeasurementList (also extends java.io.Serializable); qupath.opencv.tools.MultiscaleFeatures.Hessian. qupath.lib.scripting.languages.AutoCompletions.Comp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:37954,plugin,plugins,37954,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"void; setUseInvertedBackground(boolean useInvertedBackground). Set the value of useInvertedBackgroundProperty(). ObjectProperty<ChannelDisplayInfo>; switchToGrayscaleChannelProperty(). Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. String; toJSON(boolean prettyPrint). Create a JSON representation of the main components of the current display. boolean; updateFromDisplay(ImageDisplay display). Update the current display based upon a different display. boolean; useColorLUTs(). The opposite of useGrayscaleLuts(). BooleanProperty; useGrayscaleLutProperty(). Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. boolean; useGrayscaleLuts(). Get the value of useGrayscaleLutProperty(). boolean; useInvertedBackground(). Get the value of useInvertedBackgroundProperty(). BooleanProperty; useInvertedBackgroundProperty(). Property that specifies whether the background should be inverted (i.e. Methods inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; getUniqueID. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleCha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:5641,inherit,inherited,5641,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['inherit'],['inherited']
Modifiability,"w IDs to the created objects. transformPadded(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp. Apply the op, but ignoring padding. transformRGB(int[], int[], ColorTransformer.ColorTransformMethod, float, float, boolean) - Static method in class qupath.lib.color.ColorTransformer. Apply a specified color transform to a packed (A)RGB array and output another (A)RGB array. transformROI(ROI, AffineTransform) - Static method in class qupath.lib.roi.RoiTools. Apply an affine transform to a ROI, returning the result. transformSelectedObjects(AffineTransform) - Static method in class qupath.lib.scripting.QP. Apply an affine transform to all objects in the current hierarchy, retaining parent-child relationships between objects. transformSelectedObjects(PathObjectHierarchy, AffineTransform) - Static method in class qupath.lib.scripting.QP. Apply an affine transform to all objects in the specified hierarchy, retaining parent-child relationships between objects. transformsToOp(Collection<? extends BioimageIoSpec.Processing>) - Static method in class qupath.opencv.ml.BioimageIoTools. Create an ImageOp that applies the specified transforms sequentially. transformToOp(BioimageIoSpec.Processing) - Static method in class qupath.opencv.ml.BioimageIoTools. Create an ImageOp that applies the specified transforms, if possible. translate(double, double) - Method in class qupath.lib.roi.AreaROI;  ; translate(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; translate(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; translate(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Create a translated version of this ROI. translate(double, double) - Method in class qupath.lib.roi.LineROI;  ; translate(double, double) - Method in class qupath.lib.roi.PointsROI;  ; translate(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; translate(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; translate(double, double) - M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1052299,extend,extends,1052299,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"w). Specify whether the legend should be shown or not. Charts.BarChartBuilder; legend(String side). Specify the side of the chart where the legend should be shown. Charts.BarChartBuilder; legend(Side side). Specify the side of the chart where the legend should be shown. Charts.BarChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.BarChartBuilder; parent(Window parent). Set the parent window. Charts.BarChartBuilder; series(String name,; String[] x,; double[] y). Create a bar chart using arrays of String values and associated numeric values. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; List<T> extra). Create a bar chart using collections of String values and associated numeric values, with an associated custom object. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; T[] extra). Create a bar chart using collections String values and associated numeric values, with an associated custom object. <T extends Number>Charts.BarChartBuilder; series(String name,; Collection<? extends String> x,; Collection<T> y). Create a bar chart using collections of numeric values. <T> Charts.BarChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun). Plot values extracted from objects within a specified collection. Charts.BarChartBuilder; series(String name,; Collection<XYChart.Data<String,Number>> data). Create a bar chart from existing data plots. <T extends Number>Charts.BarChartBuilder; series(String name,; Map<String,T> data). Create a bar chart using a map of String values and associated numeric values. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.BarChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.BarChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:2854,extend,extends,2854,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,1,['extend'],['extends']
Modifiability,"wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<Buffere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:4600,plugin,plugin,4600,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['plugin'],['plugin']
Modifiability,"which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; imageData - ; Returns:; Throws:; InterruptedException; Since:; v0.4.0. getTMACoreList; public static List<TMACoreObject> getTMACoreList(); Get the list of TMA core objects for the current hierarchy. Returns:; the list of TMACoreObjects, or an empty list if there is no TMA grid present.; See Also:. getCurrentHierarchy(). getAnnotationObjects; public static Co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:66974,plugin,plugin,66974,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['plugin'],['plugin']
Modifiability,"will be detected inside existing objects (normally TMA cores or annotations).; ; TODO: Note this isn't a very stable API (because it's quite awkward), and it's therefore liable to change... Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractDetectionPlugin; public AbstractDetectionPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getParentObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:1960,inherit,inherited,1960,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,1,['inherit'],['inherited']
Modifiability,"with a specified classification. static void; replaceClassification(Collection<PathObject> pathObjects,; PathClass originalClass,; PathClass newClass). Apply a new classification to all objects with a specified original classification in an object collection. static void; replaceClassification(PathClass originalClass,; PathClass newClass). Apply a new classification to all objects in the current hierarchy with a specified original classification. static void; replaceClassification(PathObjectHierarchy hierarchy,; PathClass originalClass,; PathClass newClass). Apply a new classification to all objects with a specified original classification in the provided hierarchy. static void; resetBatchProjectAndImage(). Reset the Project and ImageData used for batch processing for the current thread. static void; resetClassifications(Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the current hierarchy. static void; resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the specified hierarchy. static void; resetDetectionClassifications(). Reset the PathClass for all detection objects in the current hierarchy. static void; resetIntensityClassifications(). Reset the intensity classifications for all detections in the current hierarchy. static void; resetIntensityClassifications(Collection<PathObject> pathObjects). Reset the intensity classifications for all specified objects. static void; resetIntensityClassifications(PathObjectHierarchy hierarchy). Reset the intensity classifications for all detections in the specified hierarchy. static void; resetSelection(). Clear the selected objects for the current PathObjectHierarchy. static void; resetTMAMetadata(boolean includeMeasurements). Remove all TMA metadata from the current TMA grid. static void; resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements). Remove all TMA meta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:29431,extend,extends,29431,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"with the current parameters. DelaunayTools.Builder; calibration(PixelCalibration cal). Specify pixel calibration, which is used to calibrate the x and y coordinates. DelaunayTools.Builder; centroids(). Specify that the triangulation should be based on ROI centroids. DelaunayTools.Builder; coordinateExtractor(Function<PathObject,Collection<Coordinate>> coordinateExtractor). Specify a default method of extracting coordinates for triangulation from an object, rather than centroids or the ROI boundary. DelaunayTools.Builder; preferNucleus(boolean prefer). Specify that the triangulation should be based on nucleus ROIs where possible (only affects cell objects). DelaunayTools.Builder; roiBounds(). Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. DelaunayTools.Builder; roiBounds(double densify,; double erosion). Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. calibration; public DelaunayTools.Builder calibration(PixelCalibration cal); Specify pixel calibration, which is used to calibrate the x and y coordinates. Parameters:; cal - the calibration to use; Returns:; this builder. centroids; public DelaunayTools.Builder centroids(); Specify that the triangulation should be based on ROI centroids. Returns:; this builder. roiBounds; public DelaunayTools.Builder roiBounds(); Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. Returns:; this builder. roiBounds; public DelaunayTools.Builder roiBounds(double densify,; double erosion); Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. Parameters:; densify - how much to 'densify' the coordinates; recommended default value is 4.0 (assuming uncalibrated pi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html:1797,inherit,inherited,1797,javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html,1,['inherit'],['inherited']
Modifiability,"within a Mat, providing the output as a labeled image. finishTranslation() - Method in class qupath.lib.roi.RoiEditor. Notify the editor that translation should end. fireHierarchyChangedEvent(Object) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed. fireHierarchyChangedEvent(Object, PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. fireHierarchyUpdate() - Static method in class qupath.lib.scripting.QP. Trigger an update for the current hierarchy. fireHierarchyUpdate(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Trigger an update for the specified hierarchy. fireImageDataChanged(ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireObjectClassificationsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have chang",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:309410,extend,extends,309410,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"wn. MarkdownLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of JSON syntax in QuPath. MarkdownLanguage() - Constructor for class qupath.lib.gui.scripting.languages.MarkdownLanguage. Constructor for JSON language. MarkdownStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Markdown syntax. markerOpacity - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; markerOpacity - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; markerOpacity - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the marker opacity. MASK_ALPHA - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:671939,variab,variable,671939,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"writers.ome.OMEPyramidWriter.Builder. Request that all z-slices are exported. almostTheSame(double, double, double) - Static method in class qupath.lib.common.GeneralTools. Test if two doubles are approximately equal, within a specified tolerance. alpha(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit alpha value from a packed ARGB value. ALWAYS - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Always display. alwaysPaintSelected - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; alwaysPaintSelectedObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Always paint selected objects in the viewer, even if the opacity setting is 0. alwaysPromptForObjects() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; alwaysPromptForObjects() - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; alwaysPromptForObjects() - Method in interface qupath.lib.plugins.PathInteractivePlugin. If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. AnalyzeMenuActions - Class in qupath.lib.gui.actions.menus;  ; AnalyzeMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; and(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise AND of two arrays. and(PathObjectPredicates.PathObjectPredicate) - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. Combine with another PathObjectPredicates.PathObjectPredicate through AND. andThen(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one. annotatedCentroidTilesOnly(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether tiles without any annotations over the tile centroid should be included. annotatedTilesOnly(boolean) - Method in class qupath.lib.ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:37048,plugin,plugins,37048,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"x; Help. SEARCH. All Packages. Package Summary. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:1154,plugin,plugins,1154,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,1,['plugin'],['plugins']
Modifiability,"xception. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathCellObject; class PathCellObject extends PathDetectionObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathDetectionObject; class PathDetectionObject extends PathROIObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathObject; class PathObject extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathObjectConnections; class PathObjectConnections extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathROIObject; class PathROIObject extends PathObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Thr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:3962,extend,extends,3962,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"xed size and using zero-padding if required. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding). Read an image patch, optionally with a fixed size. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. static Mat; segment(SegmentationModel model,; Mat input,; Mat output). Apply a segmentation model to an image region. static Mat; segment(SegmentationModel model,; ImageServer<BufferedImage> server,; RegionRequest request). Apply a segmentation model to an image region. static void; setUseCuda(boolean requestUseCuda). Request that CUDA is used. static String; summarize(Net net,; int width,; int height,; int nChannels). Create a (multiline) summary String for a Net, given the specified image input dimensions. static boolean; useCuda(). Returns true if CUDA is available and requested. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnTools; public DnnTools(). Method Details. registerDnnModel; @Deprecated; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . builder; public static OpenCVDnn.Builder builder(String modelPath); Initiative building and configuring an OpenCVDnn.; ; Note that DnnModels.buildModel(DnnModelParams) should generally be used instead ; to create an arbitrary DnnModel, since it can potentially use different libraries ; or frameworks. Parameters:; modelPath - ; Returns:; See Also:. DnnModels.buildModel(DnnModelParams). isCudaAvailable; public static boolean isCudaAvailable(); Query whether CUDA is reported as a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:4784,inherit,inherited,4784,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['inherit'],['inherited']
Modifiability,"xportType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Enum Class OMEPyramidWriter.ChannelExportType. java.lang.Object; java.lang.Enum<OMEPyramidWriter.ChannelExportType>; qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. All Implemented Interfaces:; Serializable, Comparable<OMEPyramidWriter.ChannelExportType>, Constable. Enclosing class:; OMEPyramidWriter. public static enum OMEPyramidWriter.ChannelExportType; extends Enum<OMEPyramidWriter.ChannelExportType>; Enum representing different ways in which channels may be written to a file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. Leave it up to the writer to choose the appropriate method. IMAGES. Channels are stored as separate images (this is not yet supported!). INTERLEAVED. Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.ChannelExportType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.ChannelExportType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html:1024,extend,extends,1024,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,1,['extend'],['extends']
Modifiability,"xporter; imageSubDir(String subdir). Specify a subdirectory within which image tiles should be saved. TileExporter; includePartialTiles(boolean includePartialTiles). Specify whether incomplete tiles at image boundaries should be included. TileExporter; labeledImageExtension(String ext). Specify a file extension for the labelled image, which determines the export file format. TileExporter; labeledImageId(String labelId). Specify an identifier appended to the filename for labeled images. TileExporter; labeledImageSubDir(String subdir). Specify a subdirectory within which labeled image tiles should be saved. TileExporter; labeledServer(ImageServer<BufferedImage> server). Optional server providing image labels. TileExporter; overlap(int overlap). Define tile overlap (both x and y) in pixel units at the export resolution. TileExporter; overlap(int overlapX,; int overlapY). Define tile overlap (x and y separately) in pixel units at the export resolution. TileExporter; parentObjects(Collection<? extends PathObject> parentObjects). Specify parent objects to define tiles. TileExporter; parentObjects(Predicate<PathObject> filter). Specify a filter to extract parent objects to define tiles. TileExporter; region(ImageRegion region). Define the region to be processed. TileExporter; region(RegionRequest region). Define the region to be processed, including downsample. TileExporter; requestedPixelSize(double pixelSize). Define resolution as a pixel size in calibrated units. TileExporter; tileSize(int tileSize). Define the tile size in pixel units at the export resolution. TileExporter; tileSize(int tileWidth,; int tileHeight). Define the horizontal and vertical tile size in pixel units at the export resolution. TileExporter; tRange(int minT,; int maxT). Define the range of timepoints to process. TileExporter; useROIBounds(boolean fullROIs). Optionally use the full ROI for parent objects, rather than tileSize(int, int). void; writeTiles(String dirOutput). Export the image tiles to t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:2842,extend,extends,2842,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,1,['extend'],['extends']
Modifiability,"xtChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. colorMap; public ObjectProperty<ColorMaps.ColorMap> colorMapProperty; Return the ColorMap property of this canvas. See Also:. getColorMap(); setColorMap(ColorMaps.ColorMap); colorMapProperty(). Constructor Details. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun); Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Parameters:; height - ; colorMap - ; fun - function to map the 256 values of the color map to a displayable string. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap). Parameters:; height - ; colorMap - . Method Details. minHeight; public double minHeight(double width). Overrides:; minHeight in class Node. maxHeight; public double maxHeigh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:9468,inherit,inherited,9468,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,1,['inherit'],['inherited']
Modifiability,"xtChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. disableToggleMenuItems; public BooleanProperty disableToggleMenuItemsProperty; Property to disable options to toggle the visibility of channels. See Also:. disableToggleMenuItemsProperty(). currentChannel; public ReadOnlyObjectProperty<ChannelDisplayInfo> currentChannelProperty; Get the currently-selected channel.; This is not necessarily showing in the image; see #currentChannelVisible() for that. See Also:. currentChannelProperty(). imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; Property for the image display that should be shown and managed by this pane. See Also:. imageDisplayProperty(). Constructor Details. BrightnessContrastChannelPane; public BrightnessContrastChannelPane(). Method Details. disableToggleMenuItemsProperty; public BooleanProperty disableTog",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:12342,inherit,inherited,12342,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['inherit'],['inherited']
Modifiability,"xtChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. doLogCounts; public BooleanProperty doLogCountsProperty; Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. See Also:. doLogCountsProperty(). minValue; public DoubleProperty minValueProperty; The minimum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. minValueProperty(). maxValue; public DoubleProperty maxValueProperty; The maximum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. maxValueProperty(). Constructor Details. BrightnessContrastHistogramPane; public BrightnessContrastHistogramPane(). Method Details. doLogCountsProperty; public BooleanProperty doLo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:11649,inherit,inherited,11649,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['inherit'],['inherited']
Modifiability,"xtChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. hideIfEmpty; public BooleanProperty hideIfEmptyProperty; Property controlling whether the chart should be hidden if there is no data. See Also:. getHideIfEmpty(); setHideIfEmpty(boolean); hideIfEmptyProperty(). countsTransform; public ObjectProperty<HistogramChart.CountsTransformMode> countsTransformProperty; Property to control how counts should be transformed before being; shown in the histogram. See Also:. getCountsTransform(); setCountsTransform(HistogramChart.CountsTransformMode); countsTransformProperty(). displayMode; public ObjectProperty<HistogramChart.DisplayMode> displayModeProperty; Property to control how the histogram is displayed, either using areas or bars. See Also:. getDisplayMode(); setDisplayMode(HistogramChart.DisplayMode); displayModeProperty(). Constructor Details",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:15683,inherit,inherited,15683,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"xtChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberVa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:12084,inherit,inherited,12084,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['inherit'],['inherited']
Modifiability,"xtends PathObject> pathObjects); Set specified objects to be 'unlocked'. Parameters:; hierarchy - if not null, fire an update event if the locked status for any object is changed; pathObjects - the objects to update. lockSelectedObjects; public static void lockSelectedObjects(PathObjectHierarchy hierarchy); Set selected objects to be 'locked', firing an update event if the status of any object is changed. Parameters:; hierarchy - . unlockSelectedObjects; public static void unlockSelectedObjects(PathObjectHierarchy hierarchy); Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. Parameters:; hierarchy - . toggleSelectedObjectsLocked; public static void toggleSelectedObjectsLocked(PathObjectHierarchy hierarchy); Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. Parameters:; hierarchy - . toggleObjectsLocked; public static void toggleObjectsLocked(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects); Toggle the 'locked' status of specified objects. Parameters:; hierarchy - if not null, fire an update event if the locked status for any object is changed; pathObjects - the objects to update. getAvailableFeatures; public static Set<String> getAvailableFeatures(Collection<? extends PathObject> pathObjects); Get a set containing the names of all measurements found in the measurement lists of a specified object collection. Parameters:; pathObjects - ; Returns:. createClassificationMap; public static Map<PathObject,PathClass> createClassificationMap(Collection<? extends PathObject> pathObjects); Create a mapping between PathObjects and their current PathClasses.; This can be useful to preserve a classification so that it may be reset later.; ; Note: classification probabilities are not retained using this approach. Parameters:; pathObjects - the objects containing classifications; Returns:; a mapping between objects and their current classific",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:52373,extend,extends,52373,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"xtends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep; class RunSavedClassifierWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. classifierPath; String classifierPath. name; String name. Class qupath.lib.plugins.workflow.SimplePluginWorkflowS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:9159,plugin,plugins,9159,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"xtfx.stylers.ScriptStyler; qupath.lib.gui.scripting.syntax.ScriptSyntax; java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.MeasurementList (also extends java.lang.AutoCloseable); qupath.lib.plugins.parameters.Parameter<S>; qupath.lib.objects.hierarchy.TMAGrid; qupath.lib.plugins.workflow.WorkflowStep. qupath.lib.plugins.workflow.ScriptableWorkflowStep. qupath.lib.analysis.images.SimpleImage. qupath.lib.analysis.images.SimpleModifiableImage. qupath.lib.plugins.SimpleProgressMonitor; qupath.lib.gui.extensions.Subcommand; qupath.lib.plugins.TaskRunner; qupath.lib.objects.TemporaryObject; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). qupath.lib.gui.images.stores.TileListener<T>; qupath.lib.images.servers.TileRequestManager; qupath.lib.io.UriResource. qupath.opencv.ops.ImageDataOp; qupath.opencv.ops.ImageOp; qupath.lib.projects.ProjectImageEntry<T>. qupath.lib.plugins.workflow.WorkflowListener. Annotation Interface Hierarchy. qupath.lib.gui.actions.annotations.ActionAccelerator (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionConfig (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionIcon (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionMenu (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionMethod (implements java.lang.annotation.Annotation). Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.display.ChannelDisplayMode; qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains; qupath.lib.color.ColorTransformer.ColorTransformMethod; qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType; qupath.lib.gui.dialogs.Dialogs.D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:43170,plugin,plugins,43170,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"y be show in viewers. setGridSize(int, int) - Method in class qupath.lib.gui.viewer.ViewerManager. Set the grid to have a specific number of rows and columns. setHGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. setHidden(boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setHidden(boolean) - Method in interface qupath.lib.plugins.parameters.Parameter. Mark that a parameter should not be displayed to a user. setHiddenParameters(boolean, String...) - Method in class qupath.lib.plugins.parameters.ParameterList. Set the 'hidden' flag for parameters with the specified keys. setHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specified channel is hidden. setHideIfEmpty(boolean) - Method in class qupath.lib.gui.charts.HistogramChart. Request that the chart is automatically hidden (visibility set to false) when there is no data. setHierarchy(PathObjectHierarchy) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Set the contents of this hierarchy to be the same as that of another hierarchy. setID(UUID) - Method in class qupath.lib.objects.PathObject. Set the ID for this object. setImageData(ImageData<?>) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current image data for the script. setImage",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:928147,plugin,plugins,928147,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"y map is returned.; Since:; v0.5.0; See Also:. splitAreasByLines(Collection, Collection). splitAreasByLines; public static Map<PathObject,List<PathObject>> splitAreasByLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects); Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. Parameters:; areaObjects - objects with area ROIs; non-area ROIs will be ignored; lineObjects - objects with line ROIs; area ROIs can still be used, but will be treated as lines; Returns:; a map containing the original area objects as keys, and the split objects as values.; This only contains entries for objects that are split; if no objects are split, an empty map is returned.; Since:; v0.5.0; See Also:. splitAreasByLines(Collection). splitAreasByBufferedLines; public static Map<PathObject,List<PathObject>> splitAreasByBufferedLines(Collection<? extends PathObject> pathObjects,; double buffer); Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. Parameters:; pathObjects - an input collection of objects, containing objects with different ROI types; buffer - the distance by which to buffer the lines (can be considered a radius).; If 0, this is equivalent to #splitAreasByLines(Collection); Returns:; a map containing the original area objects as keys, and the split objects as values.; This only contains entries for objects that are split; if no objects are split, an empty map is returned.; Since:; v0.5.0; See Also:. splitAreasByLines(Collection); splitAreasByBufferedLines(Collection, Collection, double). splitAreasByBufferedLines; public static Map<PathObject,List<PathObject>> splitAreasByBufferedLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects,; double buffer); Split the objects with area ROIs using dividing l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:33955,extend,extends,33955,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"y(Mat m1,; double s). Multiply array elements by a constant. static Mat; multiply(Mat m1,; Mat m2). Per-element multiplication of two arrays (not matrix multiplication). static Mat; negative(Mat m1). Multiply elements of an array by -1. static Mat; or(Mat m1,; Mat m2). Compute the bitwise OR of two arrays. static Mat; plus(Mat m1,; Number s). Add an array and a number. static Mat; plus(Mat m1,; Mat m2). Add two arrays. static Mat; plus(Mat m1,; Scalar s). Add an array and a scalar. static Mat; power(Mat m1,; double power). Raise elements of an array to a specified power. static long[]; shape(Mat mat). Get the shape of a multidimensional Mat. static List<Mat>; splitChannels(Mat mat). Split channels of an array. static double; std(Mat mat). Calculate the standard deviation of all elements in a Mat, ignoring NaNs. static double; sum(Mat mat). Calculate the sum of all elements in a Mat, ignoring NaNs. static Mat; xor(Mat m1,; Mat m2). Compute the bitwise XOR of two arrays. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GroovyCV; public GroovyCV(). Method Details. mean; public static double mean(Mat mat); Calculate the mean of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. sum; public static double sum(Mat mat); Calculate the sum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. std; public static double std(Mat mat); Calculate the standard deviation of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. max; public static double max(Mat mat); Find the maximum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. min; public static double min(Mat mat); Find the minimum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. flatten; public static Mat flatten(Mat mat); Flatten a Mat to give a single column. Parameters:; mat - ; Returns:. shape; public static long[] sha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:5006,inherit,inherited,5006,javadoc/docs/qupath/opencv/tools/GroovyCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html,1,['inherit'],['inherited']
Modifiability,"y, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for detections in the specified hierarchy. setDisplayMaxValue(double) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set the measurement value that maps to the last color in the color mapper. setDisplayMinValue(double) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set the measurement value that maps to the first color in the color mapper. setDisplayMode(HistogramChart.DisplayMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the histogram display mode. setDoFasterRepaint(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set flag to indicate that repaints should prefer speed over accuracy. setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ERROR. setErrorWriter(Writer) - Method in class qupath.lib.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:924228,plugin,plugins,924228,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"y, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildren, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClip, getContentBias, getCursor, getDepthTest, getEffect, getEffectiveNodeOrientation, getEventDispatcher, getId, getInitialCursor, getInitialFocusTraversable, getInputMethodRequests, getLayoutBounds, getLayo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:9830,inherit,inherited,9830,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"y,; thereby breaking an excessively-large parentObject into more manageable pieces. protected abstract ObjectDetector<T>; createDetector(ImageData<T> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. protected abstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(ImageData<T> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractTileableDetectionPlugin; public AbstractTileableDetectionPlugin(). Method Details. getPreferredPixelSizeMicrons; protected abstract double getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params); Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Parameters:; imageData - ; params - ; Returns:. createDetector; protected abstract ObjectDetector<T> createDetector(ImageData<T> imageData,; ParameterList params); Create ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:2725,plugin,plugins,2725,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['plugin'],['plugins']
Modifiability,"y.StandardPathClasses. Deprecated.; General class to represent something 'positive'. POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. General class to represent something 'positive'. PositiveCellDetection - Class in qupath.imagej.detect.cells. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositiveCellDetection() - Constructor for class qupath.imagej.detect.cells.PositiveCellDetection. Default constructor. positiveClassification(boolean) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true of an object has a positive classification. PositivePixelCounterIJ - Class in qupath.imagej.detect.tissue. Simple command to detect regions with positive staining. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:773974,plugin,plugins,773974,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"y:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ClassificationResolution. java.lang.Object; qupath.process.gui.commands.ml.ClassificationResolution. public class ClassificationResolution; extends Object; Wrapper for a PixelCalibration to be used to define classifier resolution.; ; This makes it possible to provide a name and override toString() to return a ; more readable representation of the resolution. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static List<ClassificationResolution>; getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected). Get a list of default resolutions to show, derived from PixelCalibration objects. String; getName(). Get the simple name for this resolution. PixelCalibration; getPixelCalibration(). Get the PixelCalibration used to apply this resolution. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the simple name for this resolution. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get the PixelCalibration used to apply this resolution. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getDefaultResolutions; public static List<ClassificationResolution> getDefaultResolutions(ImageData<?> imageData,; ClassificationResolution selected); Get a list of default resolutions to show, derived from PixelCalibration objects. Parameters:; imageData - ; selected - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html:1329,inherit,inherited,1329,javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ClassificationResolution.html,1,['inherit'],['inherited']
Modifiability,"y; Constructors. Constructor; Description; AbstractInteractivePlugin();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. abstract ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:2365,plugin,plugin,2365,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['plugin'],['plugin']
Modifiability,"y<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. MeasurementExporter; includeOnlyColumns(String... includeOnlyColumns). Specify the columns that will be included in the export. MeasurementExporter; separator(String sep). Specify the separator used between measurement values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExporter; public MeasurementExporter(). Method Details. exportType; public MeasurementExporter exportType(Class<? extends PathObject> type); Specify what type of object should be exported. ; Default: image (root object). Parameters:; type - ; Returns:; this exporter. includeOnlyColumns; public MeasurementExporter includeOnlyColumns(String... includeOnlyColumns); Specify the columns that will be included in the export.; The column names are case sensitive. Parameters:; includeOnlyColumns - ; Returns:; this exporter. excludeColumns; public MeasurementExporter excludeColumns(String... excludeColumns); Specify the columns that will be excluded during the export.; The column names are case sensitive. Parameters:; excludeColumns - ; Returns:; this exporter. separator; public MeasurementExporter separator(String sep); Specify the separator used between measurement values.; To avoid unexpected behavior, it is recommended to; use either tab (\t), comma (,) or ; semicolon (;). Parameters:; sep - ; Returns:; this exporter. imageList; public MeasurementExporter imageList(List<ProjectImageEntry<BufferedImage>> imageLi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:2504,extend,extends,2504,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,1,['extend'],['extends']
Modifiability,"yAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collection<? extends ROI> rois); Create union of multiple ROIs from a collection.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. union; public static ROI union(ROI... rois); Create union of multiple ROIs. ; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersection; public static ROI intersection(Collection<? extends ROI> rois); Create intersection of multiple ROIs from a collection.; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersection; public static ROI intersection(ROI... rois); Create intersection of multiple ROIs.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. difference; public static ROI difference(ROI roi1,; ROI roi2); Compute the difference between two ROIs.; This is equivalent to calling subtract(ROI, ROI...) to subtract roi2 from roi1. Parameters:; roi1 - the main ROI; roi2 - the ROI to subtract; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. symDifference; public static ROI ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:6791,extend,extends,6791,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['extend'],['extends']
Modifiability,"yCombination) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an key combination. lookupActionByText(String) - Method in class qupath.lib.gui.QuPathGUI. Search for an action based upon its text (name) property. lookupMenuItem(String) - Method in class qupath.lib.gui.QuPathGUI. Search for a menu item based upon its path. losslessCompression() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request the default lossless compression method. lossyCompression() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request the default lossy compression method. lt(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a less than threshold. lt(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a less than threshold between two arrays. LZW - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. LZW compression. M. MAGENTA - Static variable in class qupath.lib.common.ColorTools. Packed int representing magenta. magnification(double) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify a magnification value for the highest-resolution image. main(String[]) - Static method in class qupath.lib.common.Timeit;  ; main(String[]) - Static method in class qupath.lib.gui.JavadocViewer. Show javadoc stage (used for development). main(String[]) - Static method in class qupath.lib.gui.tools.DocGenerator;  ; main(String[]) - Static method in class qupath.QuPath. Main class to launch QuPath. MAIN_SCENE - Enum constant in enum class qupath.lib.gui.tools.GuiTools.SnapshotType. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT - Enum constant in enum class qupath.lib.gui.tools.GuiTools.SnapshotType. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. MAKE_INVERSE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Annota",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:661848,variab,variable,661848,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"yEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:2563,extend,extends,2563,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,1,['extend'],['extends']
Modifiability,"yMeasurement); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; xMeasurement - the measurement to extract from each object's measurement list for the x location; yMeasurement - the measurement to extract from each object's measurement list for the y location; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; yFun - function capable of extracting a numeric value for the y location from each object in the collection; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y); Create a scatterplot using collections of numeric values. Parameters:; name - ; x - ; y - ; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y); Create a scatterplot using arrays of numeric values. Parameters:; name - ; x - x-values; y - y-values; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y,; T[] extra); Create a scatterplot using collections of numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - array of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y,; List<T> extra); Create a scatterplot using collections of numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:8709,extend,extends,8709,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,2,['extend'],['extends']
Modifiability,"yTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectPrope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:4272,inherit,inherited,4272,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"yler; JSON. Styler for JSON. static final ScriptStyler; MARKDOWN. Styler for markdown. static final ScriptStyler; PLAIN. Plain styler (no highlighting). static final ScriptStyler; PROPERTIES. Styler for Java properties files. static final ScriptStyler; PYTHON. Styler for Python. static final ScriptStyler; XML. Styler for XML. static final ScriptStyler; YAML. Styler for YAML. Constructor Summary; Constructors. Constructor; Description; ScriptStylerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getLogStyling(String text). Get styling for use with a logger. static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getPlainStyling(String text). Get simple styling that does not apply any classes. static ScriptStyler; getStylerFromLanguage(ScriptLanguage language). Get the ScriptStyler object corresponding to the specified ScriptLanguage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PLAIN; public static final ScriptStyler PLAIN; Plain styler (no highlighting). MARKDOWN; public static final ScriptStyler MARKDOWN; Styler for markdown. GROOVY; public static final ScriptStyler GROOVY; Styler for Groovy. JAVA; public static final ScriptStyler JAVA; Styler for Java. JSON; public static final ScriptStyler JSON; Styler for JSON. PROPERTIES; public static final ScriptStyler PROPERTIES; Styler for Java properties files. PYTHON; public static final ScriptStyler PYTHON; Styler for Python. XML; public static final ScriptStyler XML; Styler for XML. YAML; public static final ScriptStyler YAML; Styler for YAML. Constructor Details. ScriptStylerProvider; public ScriptStylerProvider(). Method Details. getStylerFromLanguage; public static ScriptStyler getStylerFromLanguage(ScriptLanguage language); Get the ScriptStyler object corresponding to the s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html:1839,inherit,inherited,1839,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,1,['inherit'],['inherited']
Modifiability,"ylerProvider. Styler for Groovy. GROOVY - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; GroovyAutoCompletor - Class in qupath.lib.gui.scripting.completors. Auto completion support for Groovy. GroovyAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.GroovyAutoCompletor. Constructor. GroovyCV - Class in qupath.opencv.tools. Category class for enhanced Groovy scripting with OpenCV. GroovyCV() - Constructor for class qupath.opencv.tools.GroovyCV;  ; GroovyLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of the Groovy programming language in QuPath. GroovyLanguage() - Constructor for class qupath.lib.gui.scripting.languages.GroovyLanguage. Constructor for Groovy Language. GroovyStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools - Class in qupath.lib.io. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools() - Constructor for class qupath.lib.io.GsonTools;  ; GsonTools.SubTypeAdapterFactory<T> - Class in qupath.lib.io. A TypeAdapterFactory that is suitable for handling class hierarchies. gt(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than threshold. gt(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than threshold between two arrays. GuiTools - Class in qupath.lib.gui.tools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools() - Constructor for class qupath.lib.gui.tools.GuiTools;  ; GuiTools.SnapshotType - Enum Class in qupath.lib.gui.tools. Kinds of snapshot image that can be created for QuPath. H. H_DAB - Enum constant in enum class qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. Hematoxylin and DAB. H_E - Enum constant in enum class qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:563247,adapt,adapters,563247,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['adapt'],['adapters']
Modifiability,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.objects. package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath.; ; There are four main object types in QuPath:; ; Root object, one per image, at the base of the object hierarchy; Annotation object, used to represent larger regions, often drawn by hand and used to define regions for analysis; TMA core object, similar to annotations but specifically for representing cores within a Tissue Microarray grid; Detection object, used to represent objects that may be very numerous (e.g. cell nuclei). There are further specialist subtypes of ; detection, including cells and tiles. In general, the idea is that annotations (and TMA cores) should be flexible and editable, whereas detections should be compact and efficient - but ; typically not editable after creation.; ; Each object can have a parent and multiple child objects. This means that all objects associated with an image can be found by traversing this hierarchical ; arrangement, starting from the root object for the image.; ; Objects also have optional classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:1037,flexible,flexible,1037,javadoc/docs/qupath/lib/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html,1,['flexible'],['flexible']
Modifiability,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.utils; Enum Class Tiler.TileAlignment. java.lang.Object; java.lang.Enum<Tiler.TileAlignment>; qupath.lib.objects.utils.Tiler.TileAlignment. All Implemented Interfaces:; Serializable, Comparable<Tiler.TileAlignment>, Constable. Enclosing class:; Tiler. public static enum Tiler.TileAlignment; extends Enum<Tiler.TileAlignment>; Enum representing the possible alignments for tiles.; A tile alignment of TOP_LEFT indicates that tiling should begin at the top left bounding box,; and if cropping is required then this will occur at the right and bottom.; An alignment of CENTER indicates that tiles may be cropped on all sides. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOTTOM_CENTER;  ; BOTTOM_LEFT;  ; BOTTOM_RIGHT;  ; CENTER;  ; CENTER_LEFT;  ; CENTER_RIGHT;  ; TOP_CENTER;  ; TOP_LEFT;  ; TOP_RIGHT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Tiler.TileAlignment; valueOf(String name). Returns the enum constant of this class with the specified name. static Tiler.TileAlignment[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TOP_LEFT; public static final Tiler.TileAlignment TOP_LEFT. TOP_CENTER; public static final Tile",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html:1065,inherit,inherited,1065,javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,1,['inherit'],['inherited']
Modifiability,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.plugins.objects; Enum Class DilateAnnotationPlugin.LineCap. java.lang.Object; java.lang.Enum<DilateAnnotationPlugin.LineCap>; qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. All Implemented Interfaces:; Serializable, Comparable<DilateAnnotationPlugin.LineCap>, Constable. Enclosing class:; DilateAnnotationPlugin<T>. public static enum DilateAnnotationPlugin.LineCap; extends Enum<DilateAnnotationPlugin.LineCap>; Line cap to use for annotation expansion.; This can be important when expanding line or polyline annotations to ; determine how the ends are handled. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FLAT. Flat cap. ROUND. Round cap. SQUARE. Square cap. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DilateAnnotationPlugin.LineCap; valueOf(String name). Returns the enum constant of this class with the specified name. static DilateAnnotationPlugin.LineCap[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROUND; public static final DilateAnnotationPlugin.LineCap ROUND; Round cap. FLAT; public static final DilateAnnotationPlugin.LineCap FLAT; Flat cap. SQUARE; public static final DilateA",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html:1072,extend,extends,1072,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,1,['extend'],['extends']
Modifiability,"ype(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. ImageJServer; public ImageJServer(URI uri,; String... args); throws IOException; Constructor. Parameters:; uri - URI representing the local file or an ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for all slices of a multichannel/multidimensional image.; This beh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:2697,inherit,inherited,2697,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['inherit'],['inherited']
Modifiability,"ype(ImageData<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.panes.ImageDetailsPane. Prompt the user to set the ImageData.ImageType for the image. promptToSimplifySelectedAnnotations(ImageData<?>, double) - Static method in class qupath.lib.gui.commands.Commands. Show a prompt to selected annotations in a hierarchy. promptToUpdateUris(Collection<T>, URI, URI, boolean) - Static method in class qupath.lib.gui.commands.UpdateUrisCommand. Show dialog prompting the user to update URIs for missing files. PROP_JAVADOC_PATH - Static variable in class qupath.lib.gui.JavadocViewer. Name of the system property used to set the javadoc path. PROPERTIES - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java properties files. PROPERTIES - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PropertiesLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of properties and config files in QuPath. PropertiesLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PropertiesLanguage. Constructor for a Java properties as a script editor language. PropertiesStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PROPERTY_NAME_BACKGROUND_COLOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_WIDTH - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_COMMENT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:798317,config,config,798317,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['config'],['config']
Modifiability,"ys (TMAs). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMADearrayerPluginIJ(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. protected void; addWorkflowStep(ImageData<BufferedImage> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:1813,plugin,plugin,1813,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['plugin'],['plugin']
Modifiability,"z file, optionally squeezing singleton dimensions. static Map<String,Mat>; readAllMats(Path path). Read a all Mats from an .npy or .npz path. static Map<String,Mat>; readAllMats(Path path,; boolean squeezeDimensions). Read a all Mats from an .npy or .npz path, optionally squeezing singleton dimensions; This will be a single Mat for .npy but may be multiple for .npz. static Mat; readMat(InputStream stream,; boolean squeezeDimensions). Read a single Mat from an input stream, which should follow the .npy file format specification. static Mat; readMat(String path). Read a single Mat from an .npy or .npz file. static Mat; readMat(String path,; boolean squeezeDimensions). Read a single Mat from an .npy or .npz file, optionally squeezing singleton dimensions. static Mat; readMat(Path path). Read an OpenCV Mat from a Numpy .npy file. static Mat; readMat(Path path,; boolean squeezeDimensions). Read an OpenCV Mat from a Numpy .npy file, optionally squeezing singleton dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. NumpyTools; public NumpyTools(). Method Details. readMat; public static Mat readMat(String path); throws IOException; Read a single Mat from an .npy or .npz file. Parameters:; path - ; Returns:; Throws:; IOException. readMat; public static Mat readMat(String path,; boolean squeezeDimensions); throws IOException; Read a single Mat from an .npy or .npz file, optionally squeezing singleton dimensions. Parameters:; path - path to the .npy file; squeezeDimensions - if true, squeeze singleton dimensions; Returns:; Throws:; IOException. readAllMats; public static Map<String,Mat> readAllMats(String path); throws IOException; Read a all Mats from an .npy or .npz file.; This will be a single Mat for .npy but may be multiple for .npz. Parameters:; path - path to the file; Returns:; a map with mat names (from file/entry names) and their corresponding Mats; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html:2266,inherit,inherited,2266,javadoc/docs/qupath/opencv/tools/NumpyTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html,1,['inherit'],['inherited']
Modifiability,"zable, Comparable<WandToolEventHandler.WandType>, Constable. Enclosing class:; WandToolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; Color image (default behavior in v0.1.2 and before). LAB_DISTANCE; public static final WandToolEventHandler.WandType LAB_DISTANCE; Color image converted to CIELAB, Euclidean distance calculated. Method Details. values; public static WandToolEventHandler.WandType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static WandToolEventHandler.WandType valueOf(String name); Returns the enum constant of this class with the specifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html:1589,inherit,inherited,1589,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,1,['inherit'],['inherited']
Modifiability,"zable. serialVersionUID:; 1L. Serialization Methods. readResolve; protected Object readResolve(); throws ObjectStreamException; Called during deserialization to ensure that only a single instance of each PathClass exists.; Partly addresses https://github.com/qupath/qupath/issues/1306 (during standard deserialation,; but not from JSON). Throws:; ObjectStreamException. Serialized Fields. colorRGB; Integer colorRGB. name; String name. parentClass; PathClass parentClass. Package qupath.lib.objects.hierarchy. Class qupath.lib.objects.hierarchy.DefaultTMAGrid; class DefaultTMAGrid extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. cores; List<TMACoreObject> cores. gridHeight; int gridHeight. gridWidth; int gridWidth. Class qupath.lib.objects.hierarchy.PathObjectHierarchy; class PathObjectHierarchy extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. rootObject; PathObject rootObject. tmaGrid; TMAGrid tmaGrid. Package qupath.lib.plugins. Class qupath.lib.plugins.ParallelTileObject; class ParallelTileObject extends PathTileObject implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionU",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:7457,plugin,plugins,7457,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,zable. serialVersionUID:; 1L. Serialization Methods. writeReplace; private Object writeReplace(). Serialized Fields. checkValid; boolean checkValid. geometry; Geometry geometry. Class qupath.lib.roi.LineROI; class LineROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. x; double x. x2; double x2. y; double y. y2; double y2. Class qupath.lib.roi.PointsROI; class PointsROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. points; List<Point2> points. Class qupath.lib.roi.PolygonROI; class PolygonROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. vertices; qupath.lib.roi.Vertices vertices. Class qupath.lib.roi.PolylineROI; class PolylineROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. vertices; qupath.lib.roi.Vertices vertices. Class qupath.lib.roi.RectangleROI; class RectangleROI extends qupath.lib.roi.AbstractPathBoundedROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObj,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:12737,extend,extends,12737,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"| ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class MeasureMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.MeasureMenuActions.Actions. Enclosing class:; MeasureMenuActions. @ActionMenu(""Menu.Measure""); public class MeasureMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ANNOTATIONS;  ; final org.controlsfx.control.action.Action; DETECTIONS;  ; final org.controlsfx.control.action.Action; EXPORT;  ; final org.controlsfx.control.action.Action; GRID_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; GRID_TMA;  ; final org.controlsfx.control.action.Action; MANAGER;  ; final org.controlsfx.control.action.Action; MAPS;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; TMA;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MAPS; @ActionAccelerator(""shortcut+shift+m""); @ActionConfig(""Action.Measure.maps""); public final org.controlsfx.control.action.Action MAPS. MANAGER; @ActionConfig(""Action.Measure.manager""); public final org.controlsfx.control.action.Action MANAGER. SEP_1; public final org.controlsfx.control.action.Action SEP_1. TMA; public final org.controlsfx.control.action.Action TMA. ANNOTATIONS; public final org.controlsfx.control.action.Action ANNOTATIONS. DETECTIONS; public final org.controlsfx.control.action.Action DETECTIONS. GRID_ANNOTATIONS; @ActionMenu(""Menu.Measure.GridViews""); public final org.controlsfx.control.action.Action GRID_ANNOTATIONS. GRID_TMA; @ActionMenu(""Menu.Measure.GridViews""); public final org.controlsfx.control.action.Action GRID_TMA. SEP_2; public final org.controlsfx.control.action.Action SEP_2. EXPORT; @ActionConfig(""Action.Measure.expo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.Actions.html:1263,inherit,inherited,1263,javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.Actions.html,1,['inherit'],['inherited']
Modifiability,"| ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class CellCountsCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.opencv.CellCountsCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class CellCountsCV; extends AbstractTileableDetectionPlugin<BufferedImage>; Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection.; ; Currently, only H&E or hematoxylin and DAB are supported.; ; An improved plugin would be desirable to perform the task in a more general way, and without ; requesting the 'magnification' by default (which is less meaningful than resolution/pixel size). Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; CellCountsCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that woul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:1253,plugin,plugins,1253,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugins']
Modifiability,"| ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.syntax; Class ScriptSyntaxProvider. java.lang.Object; qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. public class ScriptSyntaxProvider; extends Object; Class with static methods to fetch all the available ScriptSyntaxes. Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptSyntax; GROOVY;  ; static final ScriptSyntax; JSON;  ; static final ScriptSyntax; PLAIN;  ; static final ScriptSyntax; PROPERTIES;  ; static final ScriptSyntax; PYTHON;  ; static final ScriptSyntax; XML;  ; static final ScriptSyntax; YAML;  . Constructor Summary; Constructors. Constructor; Description; ScriptSyntaxProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Collection<ScriptSyntax>; getAvailableSyntaxes(). Get the available script syntaxes. static ScriptSyntax; getSyntaxFromName(String name). Get a script syntax from a specified language name. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. GROOVY; public static final ScriptSyntax GROOVY. XML; public static final ScriptSyntax XML. YAML; public static final ScriptSyntax YAML. JSON; public static final ScriptSyntax JSON. PLAIN; public static final ScriptSyntax PLAIN. PROPERTIES; public static final ScriptSyntax PROPERTIES. PYTHON; public static final ScriptSyntax PYTHON. Constructor Details. ScriptSyntaxProvider; public ScriptSyntaxProvider(). Method Details. getAvailableSyntaxes; public static Collection<ScriptSyntax> getAvailableSyntaxes(); Get the available script syntaxes. Returns:. getSyntaxFromName; public static ScriptSyntax getSyntaxFromName(String name); Get a script syntax from a specified language name.; If no specific syntax is found, then a general-purpose (plain) syntax will be returned. Parameters:; name - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html:1352,inherit,inherited,1352,javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html,1,['inherit'],['inherited']
Modifiability,"| ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.superpixels; Class DoGSuperpixelsPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.superpixels.DoGSuperpixelsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class DoGSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image.; ; This provides tile objects that generally correspond to regions containing reasonably similar ; intensities or textures, which might then be classified. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DoGSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:1245,inherit,inherited,1245,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['inherit'],['inherited']
Modifiability,"| ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Class DirectServerChannelInfo. java.lang.Object; qupath.lib.display.DirectServerChannelInfo. All Implemented Interfaces:; ChannelDisplayInfo, ChannelDisplayInfo.ModifiableChannelDisplayInfo, SingleChannelDisplayInfo. public class DirectServerChannelInfo; extends Object; ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used. ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; clipToAllowed;  ; protected static final IndexColorModel; CM_GRAYSCALE;  ; protected static final IndexColorModel; CM_GRAYSCALE_INVERTED;  ; protected static final DecimalFormat; df;  ; protected float; maxAllowed;  ; protected float; maxDisplay;  ; protected float; minAllowed;  ; protected float; minDisplay;  . Constructor Summary; Constructors. Constructor; Description; DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; doesSomething(). Returns true if this does something - anything - and false otherwise. int; getChannel(). Get the channel number. Integer; getColor(). Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. protected ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:1256,inherit,inherited,1256,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['inherit'],['inherited']
Modifiability," ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class ThreadTools. java.lang.Object; qupath.lib.common.ThreadTools. public class ThreadTools; extends Object; Create a thread factory that supports adding a prefix to the name and setting daemon status.; ; This helps with debugging, e.g. using visualvm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ThreadTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ThreadFactory; createThreadFactory(String prefix,; boolean daemon). Create a named thread factory with Thread.NORM_PRIORITY. static ThreadFactory; createThreadFactory(String prefix,; boolean daemon,; int priority). Create a named thread factory with a specified priority. static int; getParallelism(). Get the requested level of parallelism. static void; setParallelism(int nThreads). Set the requested level of parallelism. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ThreadTools; public ThreadTools(). Method Details. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon,; int priority); Create a named thread factory with a specified priority. Parameters:; prefix - ; daemon - ; priority - ; Returns:. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon); Create a named thread factory with Thread.NORM_PRIORITY. Parameters:; prefix - ; daemon - ; Returns:. setParallelism; public static void setParallelism(int nThreads); Set the requested level of parallelism.; Note that for interactive use this is usually set through the user interface and shouldn't be modified ; elsewhere to maintain consistency. Parameters:; nThreads - . getParallelism; public static int getParallelism(); Get the requested level of parallelism. ; Othe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html:1249,inherit,inherited,1249,javadoc/docs/qupath/lib/common/ThreadTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html,1,['inherit'],['inherited']
Modifiability," ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastHistogramPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastHistogramPane; extends BorderPane; A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. Property Summary; Properties. Type; Property; Description; BooleanProperty; doLogCounts. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValue. The maximum value displayed on the histogram. DoubleProperty; minValue. The minimum value displayed on the histogram. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:1308,inherit,inherited,1308,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['inherit'],['inherited']
Modifiability," ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class LocalNormalization.SmoothingScale. java.lang.Object; qupath.opencv.tools.LocalNormalization.SmoothingScale. Enclosing class:; LocalNormalization. public static class LocalNormalization.SmoothingScale; extends Object; 2D or 3D Gaussian scale. See getSigmaZ(PixelCalibration) for the key distinctions. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D anisotropic, the result is equivalent to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html:1310,inherit,inherited,1310,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,1,['inherit'],['inherited']
Modifiability," ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractTileableDetectionPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>; qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; CellCountsCV, DoGSuperpixelsPlugin, SLICSuperpixelsPlugin, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public abstract class AbstractTileableDetectionPlugin<T>; extends AbstractDetectionPlugin<T>; Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps.; ; Particularly useful for tasks such as cell detection. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractTileableDetectionPlugin();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. protected abstract ObjectDetector<T>; createDetector(ImageData<T> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. protected abstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(ImageData<T> imageData,; Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:1263,plugin,plugins,1263,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['plugin'],['plugins']
Modifiability," ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface PathInteractivePlugin<T>. Type Parameters:; T - . All Superinterfaces:; PathPlugin<T>. All Known Implementing Classes:; AbstractDetectionPlugin, AbstractInteractivePlugin, AbstractTileableDetectionPlugin, CellCountsCV, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathInteractivePlugin<T>; extends PathPlugin<T>; Interface to define a PathPlugin that requires a list of (user-adjustable) parameters.; ; By using this interface, QuPath is able to show a standardized dialog box within which ; the parameters are set. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Method Details. getDefaultParameterList; ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html:1246,extend,extends,1246,javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,1,['extend'],['extends']
Modifiability," ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Descri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1239,extend,extends,1239,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,1,['extend'],['extends']
Modifiability," ; final org.controlsfx.control.action.Action; MEASURE_GRID_TMA_CORES;  ; final org.controlsfx.control.action.Action; MEASURE_TMA;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; PROJECT_ADD_IMAGES;  ; final org.controlsfx.control.action.Action; PROJECT_NEW;  ; final org.controlsfx.control.action.Action; PROJECT_OPEN;  ; final org.controlsfx.control.action.Action; SHOW_ANALYSIS_PANE;  ; final org.controlsfx.control.action.Action; SHOW_LOG;  ; final org.controlsfx.control.action.Action; SHOW_OBJECT_DESCRIPTIONS;  ; final org.controlsfx.control.action.Action; SHOW_POINTS_DIALOG;  ; final org.controlsfx.control.action.Action; TMA_ADD_NOTE;  . Constructor Summary; Constructors. Constructor; Description; CommonActions(QuPathGUI qupath);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; QuPathGUI; getQuPath(). Get the QuPath instance associated with these actions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROJECT_NEW; @ActionConfig(""Action.File.Project.createProject""); public final org.controlsfx.control.action.Action PROJECT_NEW. PROJECT_OPEN; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_OPEN. PROJECT_ADD_IMAGES; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_ADD_IMAGES. BRIGHTNESS_CONTRAST; @ActionIcon(CONTRAST); @ActionAccelerator(""shift+c""); @ActionConfig(""CommonActions.showBrightnessContrast""); public final org.controlsfx.control.action.Action BRIGHTNESS_CONTRAST. SHOW_POINTS_DIALOG; @ActionIcon(POINTS_TOOL); @ActionConfig(""CommonActions.showCountingTool""); public final org.controlsfx.control.action.Action SHOW_POINTS_DIALOG. TMA_ADD_NOTE; @ActionConfig(""CommonActions.addTMANote""); public final org.controlsfx.control.action.A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html:2145,inherit,inherited,2145,javadoc/docs/qupath/lib/gui/actions/CommonActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html,1,['inherit'],['inherited']
Modifiability, ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the image writer. getName() - Method in class qupath.lib.images.writers.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qu,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453158,plugin,plugins,453158,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. series; public <T> Charts.BarChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Collection<? extends String> x,; Collection<T> y); Create a bar chart using collections of numeric values. Parameters:; name - ; x - ; y - ; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Map<String,T> data); Create a bar chart using a map of String values and associated numeric values. Parameters:; name - ; data - a map of String values to associated numeric values; Returns:; this builder. series; public Charts.BarChartBuilder series(String name,; String[] x,; double[] y); Create a bar chart using arrays of String values and associated numeric values. Parameters:; name - ; x - x-values; y - y-values; Returns:; this builder. series; public <T> Charts.BarChartBuilder series(String name,; String[] x,; double[] y,; T[] extra); Create a bar chart using collections String values and associated numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:5804,extend,extends,5804,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,1,['extend'],['extends']
Modifiability," color). Add a threshold value with its display color. ObservableNumberValue; addThreshold(ObservableNumberValue d). Add a threshold value. void; clearThresholds(). Clear all thresholds. double; getLineWidth(). Get the threshold line width. ObservableList<ObservableNumberValue>; getThresholds(). Get a list of all thresholds. boolean; isInteractive(). Returns the value of isInteractiveProperty(). BooleanProperty; isInteractiveProperty(). Property indicating whether thresholds can be adjusted interactively. DoubleProperty; lineWidthProperty(). Line width property used for displaying threshold lines. void; setIsInteractive(boolean isInteractive). Sets the value of isInteractiveProperty(). void; setLineWidth(double width). Set the threshold line width. void; setThresholdColor(ObservableNumberValue val,; Color color). Set the color of a specified threshold line. void; setThresholds(Color color,; double... thresholds). Set thresholds, which are visualized as vertical lines. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:4150,inherit,inherited,4150,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['inherit'],['inherited']
Modifiability," colorModel). Convert an ImagePlus to a BufferedImage, for a specific z-slice and timepoint. protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. String; dumpMetadata(). Get a String representing the image metadata. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. ImageJServer; public ImageJServer(URI uri,; String... args); throws IOException; Constructor. Parameters:; uri - URI representing the local file or an ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:2107,inherit,inherited,2107,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['inherit'],['inherited']
Modifiability," features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; feature - first feature to add; additionalFeatures - optional array of Strings specifying the features to add. addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements to the specified objects. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; features - the specific features to add. If none are specified, all available features will be added. setChannelNames; public static void setChannelNames(String... names); Set the channel names for the current ImageData. Parameters:; names - ; See Also:. setChannelNames(ImageData, String...). setChannelNames; public static void setChannelNames(ImageData<?> imageData,; String... names); Set the channel names for the specified ImageData.; It is not essential to pass names for all channels: ; by passing n values, the first n channel names will be set.; Any name that is null will be left unchanged. Parameters:; imageData - ; names - . setCh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:62146,extend,extends,62146,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability," hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'locked'. static void; lockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'locked', firing an update event if the status of any object is changed. static Map<PathObject,PathObject>; matchByID(Collection<? extends PathObject> sourceObjects,; Collection<? extends PathObject> targetObjects). Match objects according to their IDs. static PathObject; mergeObjects(Collection<? extends PathObject> pathObjects). Merge objects by calculating the union of their ROIs. static <K> List<PathObject>; mergeObjects(Collection<? extends PathObject> pathObjects,; Function<? super PathObject,? extends K> classifier). Merge objects that share a property in common. static boolean; mergePointsForAllClasses(PathObjectHierarchy hierarchy). Merge point annotations sharing the same PathClass and ImagePlane, ; creating multi-point annotations for all matching points and removing the (previously-separated) annotations. static boolean; mergePointsForClass(PathObjectHierarchy hierarchy,; PathClass pathClass). Merge point annotations with the specified PathClass sharing the same ImagePlane, ; creating a single multi-point annotation for all matching points and removing the (previously-separated) annotations. static boolean; mergePointsForSelectedObjectClasses(PathObjectHierarchy hierarchy). Merge point annotations sharing the same PathClass and ImagePlane as the selected annota",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:8763,extend,extends,8763,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability," pathObject,; Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get all descendant objects with a specified type. static List<PathObject>; getFlattenedObjectList(PathObject parentObject,; List<PathObject> list,; boolean includeParent). Get all descendant objects as a flattened list. static <T extends PathObject>List<T>; getLineObjects(Collection<T> pathObjects). Get a list of objects with line ROIs from a collection of objects. static ROI; getNucleusOrMainROI(PathObject pathObject). Get the nucleus ROI for a cell, or the main ROI if no nucleus is found. static ROI; getNucleusROI(PathObject pathObject). Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. static Collection<PathObject>; getObjectsForLocation(PathObjectHierarchy hierarchy,; double x,; double y,; int zPos,; int tPos,; double vertexDistance). Get a collection of objects that overlap a specified pixel location. static List<PathObject>; getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get the PathObjects in a collection that are instances of a specified class. static <T extends PathObject>List<T>; getPointObjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Get a set of the represented path classes, i.e. static ROI; getROI(PathObject pathObject,; boolean preferNucleus). Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. static String; getSuitableName(Class<? extends PathObject> cls,; boolean makePlural). Get a user-friendly name for a specific type of PathObject, based on its Java class. static Collection<? extends PathObject>; getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:6479,extend,extends,6479,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability," qupath.lib.gui.tma; Class TMADataIO. java.lang.Object; qupath.lib.gui.tma.TMADataIO. public class TMADataIO; extends Object; Static methods for exporting TMA data, optionally with small images. Author:; Pete Bankhead; See Also:. PathIO. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor); throws IOException; Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Parameters:; file - ; imageData - ; overlayOptions - ; downsampleFactor - The downsample factor used for the TMA cores. If NaN, an automatic downsample value will be selected (>= 1). If <= 0,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html:1323,inherit,inherited,1323,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,1,['inherit'],['inherited']
Modifiability," qupath.lib.gui.viewer.overlays; Class TMAGridOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. All Implemented Interfaces:; PathOverlay. public class TMAGridOverlay; extends AbstractOverlay; An overlay capable of painting a TMA Grid. Author:; Pete Bankhead; See Also:. HierarchyOverlay. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; TMAGridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html:1327,inherit,inherited,1327,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,1,['inherit'],['inherited']
Modifiability," void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - . fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - ; isChanging - . fireObjectClassificationsChangedEvent; public void fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object classifications have changed. Parameters:; source - ; pathObjects - . fireObjectsChangedEvent; public void fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating objects have changed. Parameters:; source - ; pathObjects - . fireObjectsChangedEvent; public void fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging); Fire a hierarchy update indicating objects have changed, and may still be changing. Parameters:; source - ; pathObjects - ; isChanging - is true, listeners may choose not to respond until an event is fired with isChanging false. fireHierarchyChangedEvent; public void fireHierarchyChangedEvent(Object source,; PathObject pathObject); Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. Parameters:; source - ; pathObject - . fireHierarchyChangedEvent; public void fireHierarchyChangedEvent(Object source); Fire a hierarchy update indicating the hierarchy structure has changed.; This is often a good choice of event if multiple changes may have occurred, of if one is unsure what exactly ; has changed. Parameters:; source - . toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:20600,extend,extends,20600,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability," | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class PatchClassifierParams.Builder. java.lang.Object; qupath.opencv.ml.PatchClassifierParams.Builder. Enclosing class:; PatchClassifierParams. public static class PatchClassifierParams.Builder; extends Object; Builder class to create PatchClassifierParams. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PatchClassifierParams; build(). Build the patch classifier parameters. PatchClassifierParams.Builder; halo(int padding). Define a halo that is symmetric in x and y. PatchClassifierParams.Builder; halo(Padding halo). Define a halo using a padding object. PatchClassifierParams.Builder; inputChannels(int... channels). Define the input channels using (zero-based) channel numbers. PatchClassifierParams.Builder; inputChannels(String... channels). Define the input channels using channel names. PatchClassifierParams.Builder; inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels). Define the input channels from a collection of color transforms. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal). Define the input resolution using a pixel calibration object. PatchClassifierParams.Builder; inputResolution(PixelCalibration cal,; double downsample). Define the input resolution using a pixel calibration and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Build",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:1279,extend,extends,1279,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['extend'],['extends']
Modifiability," | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatureComputer. java.lang.Object; qupath.lib.analysis.features.HaralickFeatureComputer. public class HaralickFeatureComputer; extends Object; Static methods for computing Haralick texture features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static CoocurranceMatrices updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Update existing C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:1270,inherit,inherited,1270,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,1,['inherit'],['inherited']
Modifiability," | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Des",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:1300,inherit,inherited,1300,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,1,['inherit'],['inherited']
Modifiability,"   ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Enum Class PixelClassifierTools.CreateObjectOptions. java.lang.Object; java.lang.Enum<PixelClassifierTools.CreateObjectOptions>; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. All Implemented Interfaces:; Serializable, Comparable<PixelClassifierTools.CreateObjectOptions>, Constable. Enclosing class:; PixelClassifierTools. public static enum PixelClassifierTools.CreateObjectOptions; extends Enum<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DELETE_EXIST",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:1096,extend,extends,1096,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,1,['extend'],['extends']
Modifiability,"   ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerBuilder.UriImageSupport<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.UriImageSupport<T>. Type Parameters:; T - . Enclosing interface:; ImageServerBuilder<T>. public static class ImageServerBuilder.UriImageSupport<T>; extends Object; Helper class to summarize which ImageServers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence.; This may be used to select which ImageServerBuilder is used to open the image(s). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders). Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder). Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. List<ImageServerBuilder.ServerBuilder<T>>; getBuilders(). Get a list of ServerBuilders, one for each image that can be read based on the specified URI. Class<? extends ImageServerBuilder<T>>; getProviderClass(). Get the class of the associated ImageServerBuilder. float; getSupportLevel(). Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. String; to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html:1066,extend,extends,1066,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,1,['extend'],['extends']
Performance," (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TextAppendable. Interface to indicate anything for which text can be appended. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrap",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:56731,cache,cache,56731,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['cache'],['cache']
Performance," 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionControlPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.VBox; qupath.lib.gui.ExtensionControlPane. All Implemented Interfaces:; Styleable, EventTarget. public class ExtensionControlPane; extends VBox; Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. Property Summary. Properties inherited from class javafx.scene.layout.VBox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:961,cache,cacheShape,961,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,1,['cache'],['cacheShape']
Performance," All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action sho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:1172,perform,perform,1172,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['perform'],['perform']
Performance," Also:. Constant Field Values. PROJECT_LOCATION; public static final String PROJECT_LOCATION; Default location to use when storing density maps in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Constructor Details. DensityMaps; public DensityMaps(). Method Details. builder; public static DensityMaps.DensityMapBuilder builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter); Create a new DensityMaps.DensityMapBuilder to generate a customized density map. Parameters:; mainObjectFilter - predicate to identify which objects will be included in the density map; Returns:; the builder. builder; public static DensityMaps.DensityMapBuilder builder(DensityMaps.DensityMapBuilder builder); Create a new DensityMaps.DensityMapBuilder initialized with the same properties as an existing builder. Parameters:; builder - the existing builder; Returns:; the new builder. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(Path path); throws IOException; Load a DensityMaps.DensityMapBuilder from the specified path. Parameters:; path - ; Returns:; Throws:; IOException. threshold; public static boolean threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Threshold a single channel of a density map to generate new annotations. Parameters:; hierarchy - hierarchy to which objects should be added; densityServer - density map; channel - channel to threshold; this is also used to determine the class name for the created annotations; threshold - threshold value; options - additional objects when creating the annotations; Returns:; true if changes were made, false otherwise; Throws:; IOException. threshold; public static boolean threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:4375,load,loadDensityMap,4375,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,1,['load'],['loadDensityMap']
Performance," Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathDetectionObject. A detection PathObject. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectTools. A collection of static methods to help work with PathObjects. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TMACoreObject. A special PathObject used exclusively to represent TMA cores. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:3687,cache,cache,3687,javadoc/docs/qupath/lib/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html,1,['cache'],['cache']
Performance," Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Returns:; See Also:. getAssociatedImage(String). getAssociatedImage; T getAssociatedImage(String name); Get the image for a given associated image name. Parameters:; name - ; Returns:; See Also:. getAssociatedImageList(). isEmptyRegion; boolean isEmptyRegion(RegionRequest request); Test whether a region is empty, i.e. it contains nothing to be painted (e.g. the server paints objects; but there are no objects present in the region) and readBufferedImage(RegionRequest region) would return null.; ; This makes it possible to avoid a (potentially more expensive) request to readRegion(RegionRequest),; or to add it to a request queue, if we know there will be nothing to show for it.; ; Note: if this method returns true, it is safe to assume readBufferedImage would return null.; However, even if the method returns false it is possible that the region is still empty -; the purpose of this method is to assist performance, and it should return quickly.; Therefore if the calculations needed to identify if the region is empty are too onerous, it may conservatively return false. Parameters:; request - ; Returns:. getPixelType; PixelType getPixelType(); The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Returns:. getChannel; ImageChannel getChannel(int channel); Request information for one channel (0-based index). Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getMetadata; ImageServerMetadata getMetadata(); Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Returns:; See Also:. getOriginalMetadata(). setMetadata; void setMetadata(ImageServerMetadata metadata); throws IllegalArgumentException; Set the metadata to use, e.g. to change the pixel size in microns. Parameters:; metadata ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:12723,perform,performance,12723,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['perform'],['performance']
Performance," Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(Integer) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color. getCachedColor(Integer) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color. getCachedColor(Integer, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color, explicitly stating whether alpha should be included or not. getCachedColor(Integer, boolean) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color, explicitly stating whether alpha should be included or not. getCachedMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. getCachedMeasurementValue(ROI, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. getCachedRegion(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedStroke(double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Get a BasicStroke with the specified thickness. getCachedThumbnail(ImageServer<BufferedImage>, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:345134,cache,cached,345134,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cached']
Performance," Get an IndexColorModel representing a linear LUT based on a RGB color. Parameters:; red - the red value of the color for the maximum value; green - the green value of the color for the maximum value; blue - the blue value of the color for the maximum value; whiteBackground - if true, the color model will have a white background; if false, it will have a black background; Returns:. getIndexColorModel; public static IndexColorModel getIndexColorModel(StainVector stain); Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). Parameters:; stain - ; Returns:. getMoreTranslucentColor; public static Color getMoreTranslucentColor(Color color); Get a (slightly more) translucent version of the specified color.; ; If possible, a cached version will be used. Parameters:; color - ; Returns:; See Also:. getTranslucentColor(java.awt.Color). darkenColor; public static Color darkenColor(Color color); Get a (slightly) darker version of the specified color.; ; If possible, a cached version will be used. Parameters:; color - ; Returns:. getTranslucentColor; public static Color getTranslucentColor(Color color); Get a (slightly) translucent version of the specified color.; ; If possible, a cached version will be used. Parameters:; color - ; Returns:. scaleColor; public static Color scaleColor(Color color,; double factor); Get a scaled version of the specified color, where the RGB values are independently scaled by a specified factor.; ; The alpha value is preserved unchanged. Parameters:; color - ; factor - ; Returns:. getColorWithOpacity; public static Color getColorWithOpacity(Integer rgb,; double opacity); Get a color with a specified opacity, based on the packed RGB values in an Integer. Parameters:; rgb - ; opacity - ; Returns:. getColorWithOpacity; public static Color getColorWithOpacity(Color color,; double opacity); Get a color with a specified opacity, setting the alpha channel accordingly. Parameters:; color - ; opacity - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:5657,cache,cached,5657,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,2,['cache'],['cached']
Performance," ImageServer<BufferedImage>; pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServers; public ImageServers(). Method Details. getServerBuilderFactory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:3328,perform,performance,3328,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['perform'],['performance']
Performance," Method. SEARCH. Package qupath.lib.gui; Class UndoRedoManager. java.lang.Object; qupath.lib.gui.UndoRedoManager. All Implemented Interfaces:; EventListener, ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener. public class UndoRedoManager; extends Object; implements ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener; Helper class to add undo/redo support to QuPath.; ; This is restricted to tracking changes in the PathObjectHierarchy for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer vi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:1407,perform,performance,1407,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['perform'],['performance']
Performance," Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Class ProjectIO. java.lang.Object; qupath.lib.projects.ProjectIO. public class ProjectIO; extends Object; Read QuPath projects.; ; Projects should now be written with Project.syncChanges(). Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_PROJECT_EXTENSION. Default file extension for a QuPath project. static final String; DEFAULT_PROJECT_NAME. Default file name for a QuPath project. Constructor Summary; Constructors. Constructor; Description; ProjectIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; getProjectExtension(). Get the default extension for a QuPath project file, without the 'dot'. static String; getProjectExtension(boolean includePeriod). Get the default extension for a QuPath project file. static <T> Project<T>; loadProject(File fileProject,; Class<T> cls). Load a project from a local file. static <T> Project<T>; loadProject(URI uri,; Class<T> cls). Read project from URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DEFAULT_PROJECT_NAME; public static final String DEFAULT_PROJECT_NAME; Default file name for a QuPath project. See Also:. Constant Field Values. DEFAULT_PROJECT_EXTENSION; public static final String DEFAULT_PROJECT_EXTENSION; Default file extension for a QuPath project. See Also:. Constant Field Values. Constructor Details. ProjectIO; public ProjectIO(). Method Details. loadProject; public static <T> Project<T> loadProject(URI uri,; Class<T> cls); throws IOException; Read project from URI. Currently, this assumes that the URI refers to a local file. Parameters:; uri - ; cls - ; Returns:; Throws:; IOException. loadProject; public static <T> Project<T> loadProject(File fileProject,; Clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html:1226,load,loadProject,1226,javadoc/docs/qupath/lib/projects/ProjectIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html,1,['load'],['loadProject']
Performance," OMEPyramidWriter.ChannelExportType. Enum representing different ways in which channels may be written to a file. OMEPyramidWriter.CompressionType. Preferred compression type when using Bio-Formats. OMEPyramidWriter.OMEPyramidSeries. Class representing a single series to write to an OME-TIFF. OMEPyramidWriterCommand. OME TIFF writer command capable of exporting image pyramids based on QuPath ImageServers. OMETiffWriter. ImageWriter for writing OME-TIFF images. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder. A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. OpenCVMLClassifier<T>. An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. OpenCVModelObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OpenCVTools. Collection of static methods to help with using OpenCV from Java",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:34316,perform,performed,34316,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['perform'],['performed']
Performance," Set the lower bound for the y-axis. Charts.ScatterChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.ScatterChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. limitDatapoints; public Charts.ScatterChartBuilder limitDatapoints(int max); Choose the maximum number of supported datapoints.; Scattercharts are rather 'heavyweight', and including many thousands of datapoints can cause ; severe performance issues due to high processing and memory requirements.; ; By default, datapoints will be randomly subsampled to a 'manageable number' where necessary, ; which can be customized with this setting. Parameters:; max - the maximum number of data points to show; Returns:; this builder; See Also:. unlimitedDatapoints(). unlimitedDatapoints; public Charts.ScatterChartBuilder unlimitedDatapoints(); Show all datapoints, without subsampling, even when this may cause performance issues.; Use with caution. Returns:; this builder; See Also:. limitDatapoints(int). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. centroids; public <T> Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal); Plot centroids for the specified objects using a fixed pixel calibration. Parameters:; pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:6254,perform,performance,6254,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,1,['perform'],['performance']
Performance," Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlideLoader. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; tru",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:1228,load,load,1228,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['load'],['load']
Performance," a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). splitSpecifiedAreasByLines; public static boolean splitSpecifiedAreasByLines(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects,; double thickness,; boolean removeLines); Split the specified objects with area ROIs using dividing lines extracted from specified objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; pathObjects - the objects to split; usually annotations, but they may be any object except for TMA cores; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). duplicateSelectedAnnotations; public static boolean duplicateSelectedAnnotations(); Duplicate the selected annotations in the current hierarchy. Returns:; true if changes are made to the hierarchy, false otherwise. duplicateSelectedAnnotations; public static boolean duplicateSelectedAnnotations(PathObjectHierarchy hierarchy); Duplicate the selected annotations in the specified hierarchy. Parameters:; hierarchy - ; Returns:; true if changes are made to the hierarchy, false otherwise; Since:; v0.4.0. copySelectedObjectsToPlane; public static boolean copySelectedObjectsToPlane(int z,; int t); Copy the selected objects in the current hierarchy to the specified z-slice and timepoint.; This copies only the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:122475,perform,performing,122475,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['perform'],['performing']
Performance," all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:108432,cache,cached,108432,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cached']
Performance," annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. lineWidthProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Line width property used for displaying threshold lines. LINK - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Link the image (to a separate PNG). linkImages() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether the underlying (raster) image should be included in any export. loadDensityMap(String) - Static method in class qupath.lib.scripting.QP. Load a density map for a project or file path. loadDensityMap(Path) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Load a DensityMaps.DensityMapBuilder from the specified path. loadDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Load a display settings object from a file path or from the current project. loadImageData(String, boolean) - Static method in class qupath.lib.scripting.QP. Deprecated. loadObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Load an object classifier for a project or file path. loadPixelClassifier(String) - Static method in class qupath.lib.scripting.QP. Load a pixel classifier for a project or file path. loadProject(File, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Load a project from a local file. loadProject(URI, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Read project from URI. LoadResourceCommand<S> - Class in qupath.process.gui.commands.ui. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns - Class in qupath.lib.analysis.features. Initial test implementation of Local Binary Patterns. LocalBinaryPatterns() - Constructor for class qupath.lib.analysis.features.LocalBinaryPatterns;  ; LocalBinaryPatternsPlugin - Class in qupath.lib.algorithms. Calculate local binary pattern features. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:653619,load,loadImageData,653619,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loadImageData']
Performance," avoid creating too many objects unnecessarily). getCachedColor(Integer) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color. getCachedColor(Integer) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color. getCachedColor(Integer, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color, explicitly stating whether alpha should be included or not. getCachedColor(Integer, boolean) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color, explicitly stating whether alpha should be included or not. getCachedMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. getCachedMeasurementValue(ROI, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. getCachedRegion(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedStroke(double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Get a BasicStroke with the specified thickness. getCachedThumbnail(ImageServer<BufferedImage>, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(TileRequest) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getCachedTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTile(TileRequest) - Method in interface qupath.lib.images.servers.ImageServer. Get a cached tile, or null if the tile has not been cached. g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:345642,cache,cached,345642,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cached']
Performance," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastChannelPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:1926,cache,cacheHint,1926,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,2,['cache'],"['cache', 'cacheHint']"
Performance," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastHistogramPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanPr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:1779,cache,cacheHint,1779,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,2,['cache'],"['cache', 'cacheHint']"
Performance," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance Methods",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1496,cache,cacheHint,1496,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,2,['cache'],"['cache', 'cacheHint']"
Performance," channel/band from the BufferedImage); to generate RGB pixel values suitable for visualizing the raw channel values; extracted above, including the storage of any lookup tables required; to store min/max display values, which influence the lookup table mapping to RGB; (i.e. to store brightness/contrast values); to update an existing RGB value, to facilitate creating composite images that depict; the values of multiple channels in a single, merged visualization; . As such, its uses lie somewhere between Java's SampleModel and ColorModel classes.; ; Its reason for existing is that sometimes we need to be able to adjust the display of channels; individually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an existing BufferedImage is somewhat awkward, and when caching; image tiles we want to be able to keep the original ColorModels intact - otherwise ColorModels; for recently-seen tiles might be different from the ColorModels of tiles that have been in the cache; for longer, even though they were read from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the ChannelDisplayInfo approach means that during repainting an (A)RGB image can be produced on-the-fly; without needing to create a new image with the desired ColorModel for painting.; This potentially ends up requiring a bit more computation that is really necessary - and it may be optimized; better in the future - but it was the simplest method I could come up with to provide the features I wanted...; ; Before v0.4.0, some methods supported a boolean parameter to specify whether or not to use color LUTs.; Since v0.4.0, this has been replaced by ChannelDisplayMode to support different ways of visualizing channels.; In particular,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:2251,cache,cache,2251,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,1,['cache'],['cache']
Performance," common functionality. Author:; Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractImageServer(Class<T> imageClass);  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; protected abstract String; createID(). Create a unique ID for the server, which can be returned as the default value of getPath(). protected abstract ImageServerBuilder.ServerBuilder<T>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. protected void; finalize(). Attempt to close the server. T; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. ImageServerBuilder.ServerBuilder<T>; getBuilder(). Get a ServerBuilder capable of building a server the same as this one. protected Map<RegionRequest,T>; getCache(). Get the internal cache. T; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. ImageChannel; getChannel(int channel). Request information for one channel (0-based index). T; getDefaultThumbnail(int z,; int t). Get the default thumbnail for a specified z-slice and timepoint. double; getDownsampleForResolution(int level). Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. int; getHeight(). Height of the full-resolution image in pixels. Class<T>; getImageClass(). Get the class of the image representation returned by this ImageServer. ImageServerMetadata; getMetadata(). Get essential metadata associated with the ImageServer as a distinct object. String; getPath(). Default implementation lazily calls createID() on demand. PixelType; getPixelType(). The bit-depth and type of the image. double[]; getPreferredDownsamples(). Request the preferred downsam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:1793,cache,cache,1793,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['cache'],['cache']
Performance," default number of parallel ; threads for classification. Parameters:; options - the options controlling the overlay display; classifier - the classifier; Returns:. create; public static PixelClassificationOverlay create(OverlayOptions options,; PixelClassifier classifier,; int nThreads); Create an overlay to display the live application of a PixelClassifier to an image. Parameters:; options - the options controlling the overlay display; classifier - the classifier; nThreads - number of parallel threads to use for classification (will be clipped to 1 or greater); Returns:. create; public static PixelClassificationOverlay create(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer); Create an overlay to display a live image that can be created from an existing ImageData. Parameters:; options - options to control the overlay display; fun - function to create an ImageServer from the ImageData.; Note that the server generated by the function call will be cached. ; If it is necessary to control the caching, this needs to be done externally ; and create(OverlayOptions, Map, ImageRenderer) should be used instead.; renderer - rendered used to create an RGB image; Returns:; the PixelClassificationOverlay. create; public static PixelClassificationOverlay create(OverlayOptions options,; Map<ImageData<BufferedImage>,ImageServer<BufferedImage>> map,; ImageRenderer renderer); Create an overlay to display a live image that can be created from an existing ImageData.; This differs from create(OverlayOptions, Function, ImageRenderer) in that ; a cached map of classifier servers is used directly. Parameters:; options - options to control the overlay display; map - map to obtain an ImageServer from an ImageData; renderer - rendered used to create an RGB image; Returns:; the PixelClassificationOverlay. createFeatureDisplayOverlay; @Deprecated; public static PixelClassificationOverlay createFeatureDisplayOverlay(OverlayOptions",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:6062,cache,cached,6062,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['cache'],['cached']
Performance," derived PathClass. unitsMatch2D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width and height are the same. unitsMatch3D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width, height and z-spacing are the same. UNKNOWN - Enum constant in enum class qupath.lib.io.UriUpdater.UriStatus. URI status is unclear, e.g. UNKNOWN - Static variable in class qupath.lib.common.Version. Constant representing any unknown version. UNKNOWN_LENGTH - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown dimension length. UNKNOWN_SHAPE - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown shape. UNKNOWN_SIZE - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown size (i.e. unlimitedDatapoints() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Show all datapoints, without subsampling, even when this may cause performance issues. UNLOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; UNLOCKED - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that is 'unlocked'. unlockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'unlocked'. unlockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. unmanageMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Do not manage the system menubar status for the given menubar. unpackARGB(int) - Static method in class qupath.lib.common.ColorTools. Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. unpackARGB(int, int[]) - Static",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1059506,perform,performance,1059506,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['perform'],['performance']
Performance," determine a suitable alpha value for an image ; that should have opacity based upon pixel values. Parameters:; gamma - ; type - ; Returns:; See Also:. createColorModel(PixelType, ColorMap, int, double, double, int, DoubleToIntFunction). createGammaFunction; public static DoubleToIntFunction createGammaFunction(double gamma,; double min,; double max); Create a gamma function between a given range, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. Parameters:; gamma - ; min - ; max - ; Returns:; See Also:. createColorModel(PixelType, ColorMap, int, double, double, int, DoubleToIntFunction). getProbabilityColorModel8Bit; public static ColorModel getProbabilityColorModel8Bit(List<ImageChannel> channels); Get a ColorModel suitable for showing 8-bit pseudo-probabilities for multiple channels.; ; The range of values is assumed to be 0-255, treated as probabilities rescaled from 0-1.; A cached model will be retrieved where possible, rather than generating a new one. Parameters:; channels - ; Returns:. getProbabilityColorModel32Bit; public static ColorModel getProbabilityColorModel32Bit(List<ImageChannel> channels); Get a ColorModel suitable for showing 32-bit (pseudo-)probabilities for multiple channels.; ; The range of values is assumed to be 0-1.; A cached model will be retrieved where possible, rather than generating a new one. Parameters:; channels - ; Returns:. getDummyColorModel; public static ColorModel getDummyColorModel(int bpp); Get a dummy ColorModel instance.; ; This isn't very highly recommended; it is here to help in cases where a BufferedImage ; is required, but really only a raster is needed.; The actual color used is undefined (but it will likely be black). Parameters:; bpp - ; Returns:. createColorModel; public static ColorModel createColorModel(PixelType type,; int nChannels,; boolean alphaResidual,; int... colors); Create a new ColorModel that can be used to display an image where pixe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModelFactory.html:7869,cache,cached,7869,javadoc/docs/qupath/lib/color/ColorModelFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModelFactory.html,1,['cache'],['cached']
Performance," getMagnification(). Get the magnification value, or Double.NaN if this is unavailable. Number; getMaxValue(). Get the minimum value supported by this image. Number; getMinValue(). Get the minimum value supported by this image. String; getName(). Get the image name. PixelCalibration; getPixelCalibration(). Get a PixelCalibration object representing the pixel size information for this metadata object. double; getPixelHeightMicrons(). Get the pixel height in microns, if available - or Double.NaN otherwise. PixelType; getPixelType(). Returns the bit-depth for individual pixels in the image. double; getPixelWidthMicrons(). Get the pixel width in microns, if available - or Double.NaN otherwise. double[]; getPreferredDownsamplesArray(). Request the preferred downsamples from the image metadata. int; getPreferredTileHeight(). Get the preferred tile height, which can be used to optimize pixel requests for large images. int; getPreferredTileWidth(). Get the preferred tile width, which can be used to optimize pixel requests for large images. int; getSizeC(). Get the number of image channels. int; getSizeT(). Get the number of time points. int; getSizeZ(). Get the number of z-slices. double; getTimepoint(int ind). Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. int; getWidth(). Get the full-resolution image width. double; getZSpacingMicrons(). Get the z-spacing in microns, if available - or Double.NaN otherwise. int; hashCode();  ; boolean; isCompatibleMetadata(ImageServerMetadata metadata). Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). boolean; isRGB(). Returns true if the pixels are stored in (A)RGB form. int; nLevels(). Get the number of resolution levels. boolean; pixelSizeCalibrated(). Returns true if pixel width and height calibration information ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:3403,optimiz,optimize,3403,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['optimiz'],['optimize']
Performance," image in pixels. Returns:. nChannels; int nChannels(); Number of channels (3 for RGB). Returns:. isRGB; boolean isRGB(); True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Returns:. nZSlices; int nZSlices(); Number of slices in a z-stack. Returns:. nTimepoints; int nTimepoints(); Number of time points in a time series. Returns:. getPixelCalibration; default PixelCalibration getPixelCalibration(); Get the PixelCalibration object from the current metadata. Returns:. getCachedTile; T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! This method should be used very cautiously, as it is permitted to return the tile stored internally ; in the cache for performance. This must not be modified by any code requesting the tile. Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readBufferedImage; @Deprecated; default T readBufferedImage(RegionRequest request); throws IOException; Deprecated.; since v0.4.0. Implementations of ImageServer should override readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain compatibility with QuPath ; extensions that have not yet been updated to use the newer method. Legacy method to request pixels for a RegionRequest, now replaced by readRegion(RegionRequest).; This method is deprecated; if the generic parameter <T> represented ; anything other than a BufferedImage then its name became misleading. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException. readRegion; default T readRegion(RegionRequest request); throws IOException; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:7661,cache,cached,7661,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,2,['cache'],['cached']
Performance," in class qupath.lib.roi.PointsROI;  ; getT() - Method in class qupath.lib.roi.PolygonROI;  ; getT() - Method in class qupath.lib.roi.PolylineROI;  ; getT() - Method in class qupath.lib.roi.RectangleROI;  ; getT() - Method in interface qupath.lib.roi.interfaces.ROI. Get time point index. getTable() - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView. Get the TableView. getTableModelString(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a single String representing the data in a table. getTableModelStrings(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a list of Strings representing table data. getTabString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. String to insert when tab key pressed. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of tasks to perform. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getTertiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into tertiles. getText() - Method in class qupath.lib.gui.actions.InfoMessage. Text of the message. getText() - Method in interface qupath.lib.gui.scripting.EditableText. Get all the text in the editor;. getText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the text property. getText() - Meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:529681,perform,perform,529681,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['perform'],['perform']
Performance," in class qupath.lib.scripting.QP. Set one or more objects to be selected within the current hierarchy. selectObjectsByClass(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClass(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. selectObjectsByClass(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClassification(String...) - Static method in class qupath.lib.scripting.QP. Select objects for the current hierarchy that have one of the specified classifications. selectObjectsByClassification(ImageData<?>, PathClass...) - Static method in class qupath.lib.gui.commands.Commands. Select objects by classification, logging the step (if performed) in the history workflow. selectObjectsByClassification(PathObjectHierarchy, String...) - Static method in class qupath.lib.scripting.QP. Select objects for the specified hierarchy that have one of the specified classifications. selectObjectsByMeasurement(ImageData<?>, String) - Static method in class qupath.lib.scripting.QP. Deprecated. selectObjectsByPathClass(PathClass...) - Static method in class qupath.lib.scripting.QP. Select objects for the current hierarchy that have one of the specified PathClass classifications assigned. selectObjectsByPathClass(PathObjectHierarchy, PathClass...) - Static method in class qupath.lib.scripting.QP. Select objects for the specified hierarchy that have one of the specified PathClass classifications assigned. selectObjectsByPlane(int, int) - Static method in class qupath.lib.scripting.QP. Selected objects in the current hierarchy occurring on the specified z-slice and timepoint. selectObjectsByPlane(PathObjectHierarchy, ImagePla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:900432,perform,performed,900432,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['perform'],['performed']
Performance," in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify OpenCL target. opencl16() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify OpenCL target with 16-bit floating point. OpenCVClassifiers - Class in qupath.opencv.ml. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers() - Constructor for class qupath.opencv.ml.OpenCVClassifiers;  ; OpenCVClassifiers.BoostClassifier - Class in qupath.opencv.ml. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier - Class in qupath.opencv.ml. Classifier based on DTrees. OpenCVClassifiers.EMClusterer - Class in qupath.opencv.ml. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier - Class in qupath.opencv.ml. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV - Class in qupath.opencv.ml. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel - Class in qupath.opencv.ml. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier - Class in qupath.opencv.ml. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV - Class in qupath.opencv.ml. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV - Class in qupath.opencv.ml. Classifier based on SVMSGD. OpenCVDnn - Class in qupath.opencv.dnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn() - Constructor for class qupath.opencv.dnn.OpenCVDnn;  ; OpenCVDnn.Builder - Class in qupath.opencv.dnn. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType - Enum Class in qupath.opencv.dnn. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder - Class in qupath.opencv.dnn. A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. OpenCVDnnModelBuilder() - Constructor for class qupath.opencv.dnn.OpenCVDnnModelBuilder;  ; OpenCVMLClassifier<T> - Class in qupath.opencv.m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:722955,perform,performed,722955,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['perform'],['performed']
Performance," inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:2223,perform,perform,2223,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['perform'],['perform']
Performance," line, defined by its end points. lineThickness(float) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. lineWidthProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Line width property used for displaying threshold lines. LINK - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Link the image (to a separate PNG). linkImages() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether the underlying (raster) image should be included in any export. loadDensityMap(String) - Static method in class qupath.lib.scripting.QP. Load a density map for a project or file path. loadDensityMap(Path) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Load a DensityMaps.DensityMapBuilder from the specified path. loadDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Load a display settings object from a file path or from the current project. loadImageData(String, boolean) - Static method in class qupath.lib.scripting.QP. Deprecated. loadObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Load an object classifier for a project or file path. loadPixelClassifier(String) - Static method in class qupath.lib.scripting.QP. Load a pixel classifier for a project or file path. loadProject(File, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Load a project from a local file. loadProject(URI, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Read project from URI. LoadResourceCommand<S> - Class in qupath.process.gui.commands.ui. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns - Class in qupath.lib.analysis.features. Initial test implementation of Local Binary Patterns. LocalBinaryPatterns() - Constructor fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:653458,load,loadDisplaySettings,653458,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loadDisplaySettings']
Performance," list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) po",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:2363,cache,caches,2363,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,2,['cache'],['caches']
Performance," may be null. Returns:. setMaxThreads; public void setMaxThreads(int nThreads); Set the maximum number of threads that may be used during live prediction. Parameters:; nThreads - . getMaxThreads; public int getMaxThreads(); Get the maximum number of threads that may be used during live prediction. Returns:. setRenderer; public void setRenderer(ImageRenderer renderer); Set the ImageRenderer to be used with this overlay. Parameters:; renderer - . getLivePrediction; public boolean getLivePrediction(); Query whether live prediction is turned on. Returns:. setLivePrediction; public void setLivePrediction(boolean livePrediction); Turn on or off live prediction.; This requests tile classifications as the overlay is being viewed. Parameters:; livePrediction - . getPixelClassificationServer; public ImageServer<BufferedImage> getPixelClassificationServer(ImageData<BufferedImage> imageData); Get the ImageServer that would be used by this overlay for the specified ImageData.; Note that the servers are cached internally. Parameters:; imageData - ; Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:8816,cache,cached,8816,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['cache'],['cached']
Performance," or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. runObjectClassifier; public static void runObjectClassifier(ImageData imageData,; String... names); throws IllegalArgumentException; Apply an object classifier to the specified ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; imageData - ; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier within the current project, or file paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:131713,load,load,131713,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['load']
Performance," otherwise. Returns:. getZSpacingMicrons; public double getZSpacingMicrons(); Get the z-spacing in microns, if available - or Double.NaN otherwise. Returns:. getTimeUnit; public TimeUnit getTimeUnit(); Get the time unit for a time series. Returns:. getTimepoint; public double getTimepoint(int ind); Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. Parameters:; ind - ; Returns:. getSizeZ; public int getSizeZ(); Get the number of z-slices. Returns:. getSizeT; public int getSizeT(); Get the number of time points. Returns:. getSizeC; public int getSizeC(); Get the number of image channels. Returns:. getMagnification; public double getMagnification(); Get the magnification value, or Double.NaN if this is unavailable. Returns:. getPreferredTileWidth; public int getPreferredTileWidth(); Get the preferred tile width, which can be used to optimize pixel requests for large images. Returns:. getPreferredTileHeight; public int getPreferredTileHeight(); Get the preferred tile height, which can be used to optimize pixel requests for large images. Returns:. duplicate; public ImageServerMetadata duplicate(); Duplicate this metatadata. Returns:. getName; public String getName(); Get the image name. Returns:. getChannel; public ImageChannel getChannel(int n); Get the specified channel. Parameters:; n - channel index, starting at 0.; Returns:. getChannels; public List<ImageChannel> getChannels(); Get an unmodifiable list of all channels. Returns:. getClassificationLabels; public Map<Integer,PathClass> getClassificationLabels(); Get map between labels and classification names. This is relevant only where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION, ; otherwise it returns an empty map. Returns:. getChannelType; public ImageServerMetadata.ChannelType getChannelType(); Get the channel type, which can be used to interpret the channels. Returns:. isCompatibleMetadata; public boolean isCompatibleMetadata(ImageServerMetadata metadata); Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:8627,optimiz,optimize,8627,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['optimiz'],['optimize']
Performance," selection. EditMenuActions;  ; EllipseROI. ROI implementing a circle, or (unrotated) ellipse. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. ExecutableLanguage. Functional interface for scripting languages that are runnable (e.g. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ExtendedPathTool;  ; ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. ExtensionsMenuActions;  ; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:17382,load,loading,17382,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['load'],['loading']
Performance," should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This will be called from AbstractPlugin.runPlugin(TaskRunner, ImageData, String) after a call to AbstractPlugin.parseArgument(ImageData, String). The default implementation simply calls AbstractPlugin.getParentObjects(ImageData), then AbstractPlugin.addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Overrides:; getTasks in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:5757,perform,perform,5757,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['perform'],['perform']
Performance," static final Color; TRANSLUCENT_WHITE. White, with 50% opacity. Constructor Summary; Constructors. Constructor; Description; ColorToolsAwt();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IndexColorModel; createIndexColorModel(int red,; int green,; int blue,; boolean whiteBackground). Get an IndexColorModel representing a linear LUT based on a RGB color. static Color; darkenColor(Color color). Get a (slightly) darker version of the specified color. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Get a color with a specified opacity, setting the alpha channel accordingly. static Color; getColorWithOpacity(Integer rgb,; double opacity). Get a color with a specified opacity, based on the packed RGB values in an Integer. static IndexColorModel; getIndexColorModel(StainVector stain). Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). static IndexColorModel; getIndexColorModel(StainVector stain,; boolean whiteBackground). Get an IndexColorModel representing a color deconvolution stain. static Color; getMoreTranslucentColor(Color color). Get a (slightly more) translucent version of the specified color. static Color; getTranslucentColor(Color color). Get a (slightly) translucent version of the specified color. static Color; scaleColor(Color color,; double factor). Get a scaled version of the specified color, where the RGB values are in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:1726,cache,cached,1726,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,1,['cache'],['cached']
Performance," static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreClasses(). Get a list of core classes that are likely to be useful for scripting. static QuPathViewer; getCurrentViewer(). Get the active viewer in the current QuPath instance. static QuPathGUI; getQuPath(). Get the current QuPath instance. static Window; getWindow(String title). Access a window currently open within QuPath by its title. static ImageDisplaySettings; loadDisplaySettings(String name). Load a display settings object from a file path or from the current project. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static File; promptForFile(String... extensions). Prompt the user to select a file from a file chooser. static boolean; runPlugin(String className,; String args);  ; static boolean; runPlugin(String className,; ImageData<?> imageData,; String args);  ; static void; saveAnnotationMeasurements(String path,; String... includeColumns). Save annotation measurements for the current image. static void; saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save annotation measurements for the specified image. static void; saveDetectionMeasurements(String path,; String... includeColumns). Save detection measurem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:2368,load,loadDisplaySettings,2368,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['load'],['loadDisplaySettings']
Performance," static BooleanProperty showLegacyOptionsProperty; Flag to indicate that the legacy options should be shown to the user - normally not desirable. See Also:. showLegacyOptionsProperty(). doCreateLogFiles; public static BooleanProperty doCreateLogFilesProperty; Request a log file to be generated. Requires the userPathProperty() to be set to a directory. See Also:. doCreateLogFilesProperty(). userPath; public static ObjectProperty<String> userPathProperty; A path where additional files may be stored, such as extensions and log files. See Also:. userPathProperty(). maxUndoLevels; public static IntegerProperty maxUndoLevelsProperty; The requested maximum number of undo levels that QuPath should support. See Also:. maxUndoLevelsProperty(). maxUndoHierarchySize; public static IntegerProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXProperty(). gridStartY; public static DoubleProperty gridStartYProperty; Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:30029,perform,performance,30029,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['perform'],['performance']
Performance," the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) po",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:2112,cache,caches,2112,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['cache'],['caches']
Performance," use. Number; getCachedMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Number; getCachedMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:2275,cache,cachedOnly,2275,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,1,['cache'],['cachedOnly']
Performance," void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:2348,perform,performance,2348,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,1,['perform'],['performance']
Performance," wait, wait. Field Details. TRANSLUCENT_WHITE; public static final Color TRANSLUCENT_WHITE; White, with 50% opacity. TRANSLUCENT_BLACK; public static final Color TRANSLUCENT_BLACK; Black, with 50% opacity. Constructor Details. ColorToolsAwt; public ColorToolsAwt(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb,; boolean hasAlpha); Get cached color, explicitly stating whether alpha should be included or not. Parameters:; rgb - ; hasAlpha - ; Returns:. getIndexColorModel; public static IndexColorModel getIndexColorModel(StainVector stain,; boolean whiteBackground); Get an IndexColorModel representing a color deconvolution stain.; The color is just an approximation for visualization purposes, it does not perfectly match the stain itself. Parameters:; stain - the stain to use; whiteBackground - if true, the color model will have a white background; if false, it will have a black background; Returns:. createIndexColorModel; public static IndexColorModel createIndexColorModel(int red,; int green,; int blue,; boolean whiteBackground); Get an IndexColorModel representing a linear LUT based on a RGB color. Parameters:; red - the red value of the color for the maximum value; green - the green value of the color for the maximum value; blue - the blue value of the color for the maximum value; whiteBackground - if true, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:3936,cache,cached,3936,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,1,['cache'],['cached']
Performance," within the ROI; Throws:; IOException. createPixelClassificationServer; public static ImageServer<BufferedImage> createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Create an ImageServer that displays the results of applying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; Returns:; the classification ImageServer. createPixelClassificationServer; public static ImageServer<BufferedImage> createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles); Create an ImageServer that displays the results of applying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; id - an ID to use for the ImageServer; this may be null, in which case an ID will be derived (if possible from a JSON representation of the classifier); colorModel - optional colormodel for the classifier (may be null to use the default); cacheAllTiles - optionally request that all tiles are computed immediately as the classifier is created. This is useful for images that are 'small' and where ; the classification can comfortably be held in RAM.; Returns:; the classification ImageServer. createThresholdServer; public static ImageServer<BufferedImage> createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals); Create a new ImageServer by applying a threshold to one or more channels of another server.; This is particularly useful where one channel represents intensities to threshold, and one channel should be used as a mask. Parameters:; server - the server to threshold; thresholds - map between channel numbers (zero-based) and thresholds; below - the classification for pixels whose values are below the threshold in any ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:13302,cache,cacheAllTiles,13302,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['cache'],['cacheAllTiles']
Performance," within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. ToolManager. Manage (drawing) tool selection in a QuPath UI. UndoRedoManager. Helper class to add undo/redo support to QuPath. Urls. Class to return core QuPath URLs centrally. UserDirectory",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:1547,load,loading,1547,javadoc/docs/qupath/lib/gui/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html,1,['load'],['loading']
Performance,"() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. getDefaultExtension() - Method in interface qupath.lib.images.writers.ImageWriter. Get the default extension. getDefaultFactory() - Static method in class qupath.lib.roi.GeometryTools. Get the default GeometryFactory to construct Geometries within QuPath. getDefaultImports() - Method in class qupath.lib.scripting.ScriptParameters. Get default imports that should be included with the script, where possible. getDefaultInstance() - Static method in class qupath.lib.images.servers.PixelCalibration. Get the default PixelCalibration. getDefaultInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default instance. getDefaultLocationString(ImageServer<BufferedImage>, double, double, int, int) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Default method for getting a location string from an ImageServer using cached tiles. getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.Do",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:370102,cache,cached,370102,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cached']
Performance,"() - Method in enum class qupath.lib.images.servers.PixelType. Number of bytes per pixel. getC() - Method in class qupath.lib.regions.ImagePlane. Get the channel index. getC() - Method in class qupath.lib.roi.AreaROI;  ; getC() - Method in class qupath.lib.roi.EllipseROI;  ; getC() - Method in class qupath.lib.roi.GeometryROI;  ; getC() - Method in class qupath.lib.roi.LineROI;  ; getC() - Method in class qupath.lib.roi.PointsROI;  ; getC() - Method in class qupath.lib.roi.PolygonROI;  ; getC() - Method in class qupath.lib.roi.PolylineROI;  ; getC() - Method in class qupath.lib.roi.RectangleROI;  ; getC() - Method in interface qupath.lib.roi.interfaces.ROI. Get channel index, or -1 if the ROI relates to all available channels. getC() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get channel index. getCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCache() - Method in class qupath.lib.images.servers.AbstractImageServer. Get the internal cache. getCache(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the cache in use for image tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(Integer) - Static method in class qupath.lib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:343733,cache,cache,343733,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cache']
Performance,") - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the cache in use for image tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(Integer) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color. getCachedColor(Integer) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color. getCachedColor(Integer, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color, explicitly stating whether alpha should be included or not. getCachedColor(Integer, boolean) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color, explicitly stating whether alpha should be included or not. getCachedMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. getCachedMeasurementValue(ROI, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. getCachedRegion(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:344753,cache,cached,344753,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cached']
Performance,") or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(PathObject, String). getMeasurementValue; @Deprecated; public Number getMeasurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:3327,cache,cachedOnly,3327,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,2,['cache'],"['cached', 'cachedOnly']"
Performance,"); creator - function to create an object from a ROI (e.g. annotation or detection); minArea - minimum area for an object fragment to retain, in calibrated units based on the pixel calibration; minHoleArea - minimum area for a hole to fill, in calibrated units based on the pixel calibration; doSplit - if true, split connected regions into separate objects; Returns:; the objects created within the ROI; Throws:; IOException. createPixelClassificationServer; public static ImageServer<BufferedImage> createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Create an ImageServer that displays the results of applying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; Returns:; the classification ImageServer. createPixelClassificationServer; public static ImageServer<BufferedImage> createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles); Create an ImageServer that displays the results of applying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; id - an ID to use for the ImageServer; this may be null, in which case an ID will be derived (if possible from a JSON representation of the classifier); colorModel - optional colormodel for the classifier (may be null to use the default); cacheAllTiles - optionally request that all tiles are computed immediately as the classifier is created. This is useful for images that are 'small' and where ; the classification can comfortably be held in RAM.; Returns:; the classification ImageServer. createThresholdServer; public static ImageServer<BufferedImage> createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals); Create a new ImageServer by ap",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:12848,cache,cacheAllTiles,12848,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['cache'],['cacheAllTiles']
Performance,", double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a ROI representing a line with zero length. createListCell() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a ListCell for displaying a PathObject using the default PathObject.toString() method. createListCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. createListSelectionView() - Static method in class qupath.lib.gui.tools.GuiTools. Create a new ListSelectionView. createLoadDensityMapCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a density map and display it in all viewers. createLoadPixelClassifierCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a pixel classifier and display it in all viewers. createLogFiles - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.expe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:194584,load,load,194584,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['load']
Performance,", exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurement, importObjectsFromFile, insertObjects, insertObjects, isDirectory, isTMADearrayed, loadDensityMap, loadImageData, loadObjectClassifier, loadPixelClassifier, makeARGB, makeFileInProject, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makePathInProject, makeRGB, measurement, mergeAnnotations, mergeAnnotations, mergePointsForAllClasses, mergePointsForSelectedObjectClasses, mergeSelectedAnnotations, mergeSelectedAnnotations, mkdirs, nObjects, refreshDuplicateIDs, refreshDuplicateIDs, refreshIDs, refreshIDs, relabelTMAGrid, relabelTMAGrid, removeMeasurements, removeMeasurements, removeObject, removeObjects, removeObjects, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeOrClipObjectsOutsideImage, removeOrClipObjectsOutsideImage, replaceClassification, replaceClassification, replaceClassification, replaceClassification, resetBatchProjectAndImage, resetClassifications, resetClassifications, resetDetectionClassifications, resetIntensityClassifications, resetIntensityClassifications, resetIntensityClassific",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:9028,load,loadPixelClassifier,9028,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['load'],['loadPixelClassifier']
Performance,", legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2783,cache,cacheHint,2783,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,2,['cache'],"['cache', 'cacheHint']"
Performance,", should be 0 <= level < nResolutions().; Returns:. getWidth; int getWidth(); Width of the full-resolution image in pixels. Returns:. getHeight; int getHeight(); Height of the full-resolution image in pixels. Returns:. nChannels; int nChannels(); Number of channels (3 for RGB). Returns:. isRGB; boolean isRGB(); True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Returns:. nZSlices; int nZSlices(); Number of slices in a z-stack. Returns:. nTimepoints; int nTimepoints(); Number of time points in a time series. Returns:. getPixelCalibration; default PixelCalibration getPixelCalibration(); Get the PixelCalibration object from the current metadata. Returns:. getCachedTile; T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! This method should be used very cautiously, as it is permitted to return the tile stored internally ; in the cache for performance. This must not be modified by any code requesting the tile. Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readBufferedImage; @Deprecated; default T readBufferedImage(RegionRequest request); throws IOException; Deprecated.; since v0.4.0. Implementations of ImageServer should override readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain compatibility with QuPath ; extensions that have not yet been updated to use the newer method. Legacy method to request pixels for a RegionRequest, now replaced by readRegion(RegionRequest).; This method is deprecated; if the generic parameter <T> represented ; anything other than a BufferedImage then its name became misleading. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:7523,cache,cache,7523,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,2,"['cache', 'perform']","['cache', 'performance']"
Performance,". Abstract implementation of ImageServer providing some common functionality. AbstractImageServer(Class<T>) - Constructor for class qupath.lib.images.servers.AbstractImageServer;  ; AbstractInteractivePlugin<T> - Class in qupath.lib.plugins. Abstract class to help with implementing an interactive plugin. AbstractInteractivePlugin() - Constructor for class qupath.lib.plugins.AbstractInteractivePlugin;  ; AbstractObjectClassifier<T> - Class in qupath.lib.classifiers.object. Abstract class to help with the creation of object classifiers. AbstractObjectClassifier(PathObjectFilter) - Constructor for class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; AbstractOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract class to help with implementing PathOverlays. AbstractOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; AbstractOverlay.LocationStringFunction - Interface in qupath.lib.gui.viewer.overlays. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T> - Class in qupath.lib.plugins. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractPlugin() - Constructor for class qupath.lib.plugins.AbstractPlugin;  ; AbstractTaskRunner - Class in qupath.lib.plugins. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTaskRunner() - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner(int) - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that optionally uses a fixed number of threads. AbstractTileableDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin used for detection tasks that support breaking large regions into",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:3361,perform,perform,3361,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['perform'],['perform']
Performance,". AbstractOverlay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class AbstractOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay. All Implemented Interfaces:; PathOverlay. Direct Known Subclasses:; AbstractImageOverlay, GridOverlay, HierarchyOverlay, TMAGridOverlay. public abstract class AbstractOverlay; extends Object; implements PathOverlay; Abstract class to help with implementing PathOverlays. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractOverlay(OverlayOptions options);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected AlphaComposite; getAlphaComposite();  ; String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. protected AbstractOverlay.LocationStringFunction; getLocationStringFunction();  ; double; getOpacity(). Get opacity, between 0 (completely transparent) and 1 (completely opaque). OverlayOptions; getOverlayOptions(). Get the overlay options, which may influence the display of this overlay. Color; getPreferredOverlayColor(). Return the preferred overlay color. boolean; isVisible(). Check overlay visibility status. protected void; setAlphaComposite(Graphics2D g2d);  ; void; setLocationStringFunction(AbstractOverlay.LocationStringFunction fun). Set a custo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html:911,perform,perform,911,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,1,['perform'],['perform']
Performance,". AbstractOverlay.LocationStringFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Interface AbstractOverlay.LocationStringFunction. Enclosing class:; AbstractOverlay. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface AbstractOverlay.LocationStringFunction; Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). See PathOverlay.getLocationString(ImageData, double, double, int, int). Method Details. getLocationString; String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); See PathOverlay.getLocationString(ImageData, double, double, int, int). Parameters:; imageData - ; x - ; y - ; z - ; t - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.LocationStringFunction.html:735,perform,perform,735,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.LocationStringFunction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.LocationStringFunction.html,1,['perform'],['perform']
Performance,". BioFormatsImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.images.servers.bioformats.BioFormatsImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class BioFormatsImageServer; extends AbstractTileableImageServer; QuPath ImageServer that uses the Bio-Formats library to read image data.; ; See http://www.openmicroscopy.org/site/products/bio-formats; ; See also https://docs.openmicroscopy.org/bio-formats/6.5.1/developers/matlab-dev.html#improving-reading-performance. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; BioFormatsImageServer(URI uri,; String... args). Create an ImageServer using the Bio-Formats library. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns a builder capable of creating a server like this one. String; dumpMetadata(). Retrieve a string representation of the metadata OME-XML. BufferedImage; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. File; getFile(). Get the underlying file. String; getFormat(). Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). OMEPyramidSto",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:994,perform,performance,994,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,1,['perform'],['performance']
Performance,". BrightnessContrastSettingsPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastSettingsPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.GridPane; qupath.lib.gui.commands.display.BrightnessContrastSettingsPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastSettingsPane; extends GridPane; A pane to save and load display settings, using a ResourceManager. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageDisplay>; imageDisplayObject. The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManager. The resource manager used to handle saving/loading. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:765,load,load,765,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['load'],['load']
Performance,". Class to generate a PixelProcessor when using OpenCV for the primary image representation. OpenCVTools. Collection of static methods to help with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. OpenCVTypeAdapters. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideExtension;  ; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. OpenslideServerBuilder. Builder for Openslide ImageServer. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; OverlayActions. Actions that interact with OverlayOptions. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Padding. Requested padding for a 2D image. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:36131,load,loading,36131,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['load'],['loading']
Performance,". CroppedImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class CroppedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.TransformingImageServer<BufferedImage>; qupath.lib.images.servers.CroppedImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class CroppedImageServer; extends TransformingImageServer<BufferedImage>; ImageServer that treats a particular sub-region of another ImageServer as a full image, ; i.e. it performs dynamic cropping, without a need to export the cropped region separately. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CroppedImageServer(ImageServer<BufferedImage> server,; ImageRegion region). Create an ImageServer that represents a cropped region of another (larger) server. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageRegion; getCropRegion(). Get the region being cropped, in terms of the bounding box within the base ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image reg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:837,perform,performs,837,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['perform'],['performs']
Performance,". DefaultImageRegionStore (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class DefaultImageRegionStore. java.lang.Object; qupath.lib.gui.images.stores.DefaultImageRegionStore. All Implemented Interfaces:; ImageRegionRenderer. public class DefaultImageRegionStore; extends Object; implements ImageRegionRenderer; An ImageRegionStore suitable for either Swing or JavaFX applications. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected Map<RegionRequest,BufferedImage>; cache;  ; protected static boolean; paintTileBorders;  ; protected Map<RegionRequest,BufferedImage>; thumbnailCache;  ; protected List<TileListener<BufferedImage>>; tileListeners;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addTileListener(TileListener<BufferedImage> listener);  ; void; clearCache(). Clear the cache, including thumbnails, and cancel any pending requests. void; clearCache(boolean clearThumbnails,; boolean stopWaiting). Clear the cache, optionally including thumbnails and stopping any pending requests. void; clearCacheForRequestOverlap(RegionRequest request);  ; void; clearCacheForServer(ImageServer<BufferedImage> server);  ; void; close();  ; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:815,cache,cache,815,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['cache'],['cache']
Performance,". DefaultPathObjectComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:972,optimiz,optimization,972,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,1,['optimiz'],['optimization']
Performance,". ExtensionClassLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:653,load,loading,653,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,1,['load'],['loading']
Performance,". ExtensionManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionManager. java.lang.Object; qupath.lib.gui.ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:484,load,loading,484,javadoc/docs/qupath/lib/gui/ExtensionManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html,1,['load'],['loading']
Performance,". FileFormatInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class FileFormatInfo. java.lang.Object; qupath.lib.images.servers.FileFormatInfo. public class FileFormatInfo; extends Object; Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data.; ; In particular, it attempts to extract some usable information from TIFF images using ImageIO to help ; a reader determine whether or not it should attempt to read the image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Constructor Summary; Constructors. Constructor; Description; FileFormatInfo();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static FileFormatInfo.ImageCheckType; checkType(URI uri). Check the type of an image for a specified URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileFormatInfo; public FileFormatInfo(). Method Details. checkType; public static FileFormatInfo.ImageCheckType checkType(URI uri); Check the type of an image for a specified URI.; ; This will return a cached value if possible, to avoid applying (potentially costly) checks too often. Parameters:; uri - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html:624,perform,performing,624,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,2,"['cache', 'perform']","['cached', 'performing']"
Performance,". GeometryROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryROI. java.lang.Object; qupath.lib.roi.GeometryROI. All Implemented Interfaces:; Serializable, ROI. public class GeometryROI; extends Object; implements Serializable; ROI based on Java Topology Suite Geometry objects.; This gives a very flexible representation (except for a lack of support for ellipses), ; which needs only copy itself to return getGeometry().; Consequently it can be much more performant whenever the underlying Geometry is ; required frequently compared to other ROI types with a new Geometry must be ; constructed and validated. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Create a duplicate of the ROI. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:759,perform,performant,759,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['perform'],['performant']
Performance,". ImageRegionStoreFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class ImageRegionStoreFactory. java.lang.Object; qupath.lib.gui.images.stores.ImageRegionStoreFactory. public class ImageRegionStoreFactory; extends Object; Factory for creating an ImageRegionStore. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DefaultImageRegionStore; createImageRegionStore(). Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. static DefaultImageRegionStore; createImageRegionStore(long tileCacheSizeBytes). Create an ImageRegionStore with a specified tile cache size, in bytes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreFactory; public ImageRegionStoreFactory(). Method Details. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(long tileCacheSizeBytes); Create an ImageRegionStore with a specified tile cache size, in bytes. Parameters:; tileCacheSizeBytes - ; Returns:. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(); Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html:895,cache,cache,895,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html,4,['cache'],['cache']
Performance,". ImageRegionStoreHelpers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class ImageRegionStoreHelpers. java.lang.Object; qupath.lib.gui.images.stores.ImageRegionStoreHelpers. public class ImageRegionStoreHelpers; extends Object; Helper methods related to image region storage.; ; Provides a standard method of tiling an image, which are used by the viewer.; ; In cases where viewing tiles are cached, this makes it possible to find out; what the tile boundaries are... and perhaps adjust requests accordingly to match with cached tiles. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreHelpers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RegionRequest; getTileRequest(ImageServer<BufferedImage> server,; double x,; double y,; double downsampleFactor,; int zPosition,; int tPosition). Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. static List<RegionRequest>; getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions). Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreHelpers; public ImageRegionStoreHelpers(). Method Details. getTilesToRequest; public static List<RegionRequest> getTilesToRequest(ImageServer<?> server,; Shape c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html:697,cache,cached,697,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,2,['cache'],['cached']
Performance,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:967,load,load,967,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,4,['load'],['load']
Performance,". Modifier and Type; Method; Description; static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Attempt to create ImageServer<T> from the specified path and arguments. static <T> Map<RegionRequest,T>; getCache(Class<T> cls). Get the cache in use for image tiles of a specific type. static List<ImageServerBuilder<?>>; getInstalledImageServerBuilders(). Request all available ImageServerBuilders. static <T> List<ImageServerBuilder<T>>; getInstalledImageServerBuilders(Class<T> imageClass). Request all available ImageServerBuilders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cache - ; cls - . getCache; public static <T> Map<RegionRequest,T> getCache(Class<T> cls); Get the cache in use for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cls - ; Returns:. setServiceLoader; public static void setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader); Replace the default service loader with another.; ; This can be handy if the ServiceLoader should be using an alternative ClassLoa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:1889,cache,cache,1889,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,1,['cache'],['cache']
Performance,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class MorphologicalReconstruction. java.lang.Object; qupath.lib.analysis.algorithms.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask). Apply morphological reconstruction with the specified marker and mask images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask); Apply morphological reconstruction with the specified marker and mask images. Parameters:; imMarker - ; imMask - ; Returns:; true if the reconstruction terminated successfully, false if it stopped early (e.g. due to an interruption). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html:675,optimiz,optimizations,675,javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,1,['optimiz'],['optimizations']
Performance,". ObjectDetector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface ObjectDetector<T>. Type Parameters:; T - . public interface ObjectDetector<T>; Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters.; ; This enables new detection plugins to be written with somewhat less boilerplate code. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLastResultsDescription(). Get a String summarizing the result, which may be displayed to a user or logged. Collection<PathObject>; runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi). Detect objects. Method Details. runDetection; Collection<PathObject> runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi); throws IOException; Detect objects. Parameters:; imageData - the ImageData for which objects should be detected; params - optional list of parameters required for the detection; roi - specific region within which the detection should be applied; Returns:; Throws:; IOException. getLastResultsDescription; String getLastResultsDescription(); Get a String summarizing the result, which may be displayed to a user or logged. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html:497,perform,perform,497,javadoc/docs/qupath/lib/plugins/ObjectDetector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html,1,['perform'],['perform']
Performance,". OpenCVClassifiers.OpenCVStatModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.OpenCVStatModel. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Direct Known Subclasses:; OpenCVClassifiers.BoostClassifier, OpenCVClassifiers.DTreesClassifier, OpenCVClassifiers.EMClusterer, OpenCVClassifiers.LogisticRegressionClassifier, OpenCVClassifiers.NormalBayesClassifierCV, OpenCVClassifiers.RTreesClassifier, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:1000,perform,performed,1000,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,1,['perform'],['performed']
Performance,". OpenSlideLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlideLoader. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:553,load,loading,553,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['load'],['loading']
Performance,". Parameters:; net - ; inputShape - ; Returns:. parseLayers; public static List<DnnTools.DNNLayer> parseLayers(Net net,; int width,; int height,; int channels,; int batchSize); Parse the layers for a Net, which allows inspection of names and sizes. Parameters:; net - the Net to parse; width - input width; height - input height; channels - input channels; batchSize - input batch size; Returns:. parseStrings; public static List<String> parseStrings(StringVector vector); Extract Strings from a StringVector. Parameters:; vector - ; Returns:. parseShape; public static List<DnnShape> parseShape(MatShapeVector vector); Extract Mat dimensions from a MatShapeVector. Parameters:; vector - ; Returns:. summarize; public static String summarize(Net net,; int width,; int height,; int nChannels); throws IOException; Create a (multiline) summary String for a Net, given the specified image input dimensions. Parameters:; net - the Net to summarize; width - input width; height - input height; nChannels - input channel count; Returns:; Throws:; IOException - if an error occurs when loading the model. readPatch; public static Mat readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height); throws IOException; Read an image patch, optionally with a fixed size and using zero-padding if required.; If the patch width and height are specified, these relate to the output (downsampled) image; and are centered on the ROI centroid. Otherwise the ROI bounds are used. Parameters:; server - the image server; roi - the ROI for which the patch should be extracted; downsample - the downsample value; width - the patch width, or -1 if the ROI bounds should be used; height - the patch height, or -1 if the ROI bounds should be used; Returns:; Throws:; IOException; See Also:. readPatch(ImageServer, ROI, double, int, int, int). readPatch; public static Mat readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:7832,load,loading,7832,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['load'],['loading']
Performance,". PathIO (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PathIO. java.lang.Object; qupath.lib.io.PathIO. public class PathIO; extends Object; Primary class for loading/saving ImageData objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static final ObjectInputStream; createObjectInputStream(InputStream stream). Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. static void; exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. static void; exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. static void; exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. static <T> ImageServerBuilder.ServerBuilder<T>; extractServerBuilder(Path file). Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. static int; getCurrentDataFileVersion(). Get the current preferred data file version. static List<String>; getObjectFileExtensions(). Deprecated.; use getObjectFileExt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:453,load,loading,453,javadoc/docs/qupath/lib/io/PathIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html,1,['load'],['loading']
Performance,". ProcessingExtension.OpenCVCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OpenCVCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OpenCVCommands. Enclosing class:; ProcessingExtension. @ActionMenu(""Menu.Analyze""); public static class ProcessingExtension.OpenCVCommands; extends Object; Commands based on OpenCV. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionDelaunay;  ; final org.controlsfx.control.action.Action; actionDensityMap;  ; final org.controlsfx.control.action.Action; actionDensityMapLoad;  ; final org.controlsfx.control.action.Action; actionFastCellCounts. Deprecated. Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionDelaunay; @ActionMenu(""Menu.Analyze.Spatial""); @ActionConfig(""Action.Processing.Spatial.delaunay""); public final org.controlsfx.control.action.Action actionDelaunay. actionFastCellCounts; @ActionMenu(""Menu.Analyze.CellDetection""); @ActionConfig(""Action.Processing.CellDetection.fastCellCounts""); @Deprecated; public final org.controlsfx.control.action.Action actionFastCellCounts; Deprecated. actionDensityMap; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.create""); public final org.controlsfx.control.action.Action actionDensityMap. actionDensityMapLoad; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.load""); public final org.controlsfx.control.action.Action actionDensityMapLoad. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html:1854,load,load,1854,javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html,1,['load'],['load']
Performance,". ProcessingExtension.PixelClassificationCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.PixelClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.PixelClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.PixelClassification""}); public class ProcessingExtension.PixelClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionLoadPixelClassifier;  ; final org.controlsfx.control.action.Action; actionPixelClassifier;  ; final org.controlsfx.control.action.Action; actionSimpleThreshold;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadPixelClassifier; @ActionConfig(""Action.Processing.Classify.loadPixelClassifier""); public final org.controlsfx.control.action.Action actionLoadPixelClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionPixelClassifier; @ActionAccelerator(""shortcut+shift+p""); @ActionConfig(""Action.Processing.Classify.trainPixelClassifier""); public final org.controlsfx.control.action.Action actionPixelClassifier. actionSimpleThreshold; @ActionConfig(""Action.Processing.Classify.createThresholder""); public final org.controlsfx.control.action.Action actionSimpleThreshold. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html:1283,load,loadPixelClassifier,1283,javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html,1,['load'],['loadPixelClassifier']
Performance,". RenderedImageServer.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.servers; Class RenderedImageServer.Builder. java.lang.Object; qupath.lib.gui.images.servers.RenderedImageServer.Builder. Enclosing class:; RenderedImageServer. public static class RenderedImageServer.Builder; extends Object; Builder to create an ImageServer to display rendered images, with optional overlay layers.; This provides more fine-grained control of how the rendering is performed than RenderedImageServer.createRenderedServer(QuPathViewer). Constructor Summary; Constructors. Constructor; Description; Builder(QuPathViewer viewer). Create a rendered image server build using viewer defaults. Builder(ImageData<BufferedImage> imageData). Create a rendered image server for the specified ImageData;. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; RenderedImageServer.Builder; backgroundColor(int rgb,; boolean keepAlpha). Specify a base color. RenderedImageServer.Builder; backgroundColor(Color color). Specify a base color. ImageServer<BufferedImage>; build(). Create the rendered image server. RenderedImageServer.Builder; display(ImageDisplay display). Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; lay",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:753,perform,performed,753,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['perform'],['performed']
Performance,". ScriptableWorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Interface ScriptableWorkflowStep. All Superinterfaces:; Serializable, WorkflowStep. All Known Implementing Classes:; DefaultScriptableWorkflowStep, RunSavedClassifierWorkflowStep, SimplePluginWorkflowStep. public interface ScriptableWorkflowStep; extends WorkflowStep; A WorkflowStep that can also return some Javascript that, if run, would perform the step. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getScript(). Get one or more script lines that may be used to apply the step. Methods inherited from interface qupath.lib.plugins.workflow.WorkflowStep; getName, getParameterMap. Method Details. getScript; String getScript(); Get one or more script lines that may be used to apply the step. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/ScriptableWorkflowStep.html:715,perform,perform,715,javadoc/docs/qupath/lib/plugins/workflow/ScriptableWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/ScriptableWorkflowStep.html,1,['perform'],['perform']
Performance,". ShapeSimplifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:643,perform,performance,643,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['perform'],['performance']
Performance,". TemporaryObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface TemporaryObject. All Known Implementing Classes:; ParallelTileObject. public interface TemporaryObject; Marker interface used to indicate that child objects shouldn't be added to any cache for display.; ; It can be used to create temporary objects that can be displayed faster while performing lengthy; processing operations.; ; Warning: It is better for programmers to avoid using this interface directly, as it may change in future implementations. Author:; Pete Bankhead. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TemporaryObject.html:551,cache,cache,551,javadoc/docs/qupath/lib/objects/TemporaryObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TemporaryObject.html,2,"['cache', 'perform']","['cache', 'performing']"
Performance,". Version (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Version. java.lang.Object; qupath.lib.common.Version. All Implemented Interfaces:; Comparable<Version>. public class Version; extends Object; implements Comparable<Version>; Helper class for working with semantic versioning.; ; This should be in the form major.minor.patch.; An optional suffix is also permitted to indicate a pre-release, alpha, beta or milestone version,; in the form major.minor.patch-suffix, where the suffix may contain any alphanumeric characters or periods.; ; Implementation note: No checking is currently performed to ensure any suffix conforms to semantic ; versioning standards - however this behavior may change. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; numb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:885,perform,performed,885,javadoc/docs/qupath/lib/common/Version.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html,1,['perform'],['performed']
Performance,". Watershed (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class Watershed. java.lang.Object; qupath.lib.analysis.algorithms.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8). Apply a 2D watershed transform. static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8). Apply a 2D watershed transform, constraining region growing using an intensity threshold. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8); Apply a 2D watershed transform. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8); Apply a 2D watershed transform, constraining region growing using an intensity threshold. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html:554,optimiz,optimizations,554,javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,1,['optimiz'],['optimizations']
Performance,". qupath.lib.gui.commands.display (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands.display. package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command.; ; Important: This package is not expected to be public after modularization. Related Packages. Package; Description; qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.objects;  . Classes. Class; Description; BrightnessContrastChannelPane. A pane responsible for the display and selection of channels from an image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/package-summary.html:1050,load,load,1050,javadoc/docs/qupath/lib/gui/commands/display/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/package-summary.html,1,['load'],['load']
Performance,". qupath.lib.gui.viewer.overlays (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.viewer.overlays. package qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. Related Packages. Package; Description; qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. All Classes and InterfacesInterfacesClasses. Class; Description; AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. GridOverlay. An overlay used to show a (counting) grid on top of an image. HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). PathOverlay. Interface defining an overlay to paint on top of a viewer. PixelClassificationOverlay. PathOverlay that gives the results of pixel classification. TMAGridOverlay. An overlay capable of painting a TMA Grid. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/package-summary.html:1054,perform,perform,1054,javadoc/docs/qupath/lib/gui/viewer/overlays/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/package-summary.html,1,['perform'],['perform']
Performance,". qupath.lib.images.servers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers. package qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath.; ; ImageServer is the key interface for ; requesting pixels and metadata.; Implementations may be backed by specific image reading libraries, or optionally wrap around other ; ImageServers to perform additional transforms. Related Packages. Package; Description; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.writers. Supports for writing images of various kinds in various ways. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CroppedImageServer. ImageServer tha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html:626,perform,perform,626,javadoc/docs/qupath/lib/images/servers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html,1,['perform'],['perform']
Performance,. qupath.lib.images.servers.openslide.jna (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers.openslide.jna. package qupath.lib.images.servers.openslide.jna. Related Packages. Package; Description; qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). All Classes and InterfacesInterfacesClassesException Classes. Class; Description; OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/package-summary.html:902,load,loading,902,javadoc/docs/qupath/lib/images/servers/openslide/jna/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/package-summary.html,1,['load'],['loading']
Performance,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:860,load,loading,860,javadoc/docs/qupath/lib/io/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html,1,['load'],['loading']
Performance,". qupath.lib.plugins.workflow (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.workflow. package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html:1148,perform,perform,1148,javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,1,['perform'],['perform']
Performance,".duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(ROI, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(ROI, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(ROI, String) instead. qupath.opencv.tools.OpenCVTools.getCircularStructuringElement(int). OpenCVTools.createDisk(int, boolean) gives ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:13307,load,loadImageData,13307,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['load'],['loadImageData']
Performance,"; Request the default lossy compression method. Not all servers support lossy compression ; (e.g. non-RGB servers). Returns:; this builder. losslessCompression; public OMEPyramidWriter.Builder losslessCompression(); Request the default lossless compression method. Returns:. uncompressed; public OMEPyramidWriter.Builder uncompressed(); Request no compression. Returns:; Since:; v0.4.0. parallelize; public OMEPyramidWriter.Builder parallelize(); Parallelize tile export, if possible. Returns:; this builder. parallelize; public OMEPyramidWriter.Builder parallelize(boolean doParallel); Specify if tile export should be parallelized if possible, with the default number of threads (current 4). Parameters:; doParallel - ; Returns:; See Also:. parallelize(int). parallelize; public OMEPyramidWriter.Builder parallelize(int nThreads); Specify if tile export should be parallelized if possible, with the requested number of threads.; ; Note that increasing the number of threads may not give improved performance, since it I/O and compression may well ; become a bottleneck. The main purpose of this option is to parallelize requesting and writing tiles, which can ; be achieved with just a few threads. Parameters:; nThreads - number of threads for parallel export; use ≤ 1 to turn off parallelization.; Returns:; Since:; v0.4.0. pixelType; public OMEPyramidWriter.Builder pixelType(PixelType exportPixelType); Specify the output PixelType. Parameters:; exportPixelType - ; Returns:. pixelType; public OMEPyramidWriter.Builder pixelType(String exportPixelType); Specify the output PixelType as a String, e.g. ""UINT8"", ""FLOAT32"" etc. Parameters:; exportPixelType - ; Returns:. allZSlices; public OMEPyramidWriter.Builder allZSlices(); Request that all z-slices are exported. Returns:; this builder. zSlice; public OMEPyramidWriter.Builder zSlice(int z); Specify the z-slice to export. Parameters:; z - ; Returns:; this builder. zSlices; public OMEPyramidWriter.Builder zSlices(int zStart,; int zEnd); Sp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:6806,perform,performance,6806,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,2,"['bottleneck', 'perform']","['bottleneck', 'performance']"
Performance,"; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultImports(). builder; public static ScriptParameters.Builder builder(); Create a new builder for ScriptParameters. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:5245,perform,performance,5245,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html,1,['perform'],['performance']
Performance,"; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:2325,perform,performance,2325,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,1,['perform'],['performance']
Performance,"<BufferedImage>, String, double) - Static method in class qupath.lib.gui.scripting.QPEx. Export TMA summary data for the specified image. ExportTrainingRegionsCommand - Class in qupath.process.gui.commands. Command to help export training regions as labelled images to train AI algorithms elsewhere. ExportTrainingRegionsCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.ExportTrainingRegionsCommand. Constructor. exportType(Class<? extends PathObject>) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify what type of object should be exported. ExtendedPathTool - Class in qupath.lib.gui.viewer.tools;  ; ExtensionClassLoader - Class in qupath.lib.gui. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane - Class in qupath.lib.gui. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager - Class in qupath.lib.gui. Manage loading extensions for a QuPathGUI instance. ExtensionPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; EXTENSIONS - Variable in class qupath.lib.gui.actions.menus.ExtensionsMenuActions.Actions;  ; EXTENSIONS_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for extensions on GitHub only (not new QuPath releases). extensionsDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the extensions directory. ExtensionsMenuActions - Class in qupath.lib.gui.actions.menus;  ; ExtensionsMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; extract(int...) - Static method in class qupath.opencv.ops.ImageOps.Channels. Extract or rearrange channels by index. EXTRACT_REGION - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; extractBand(Raster, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Extract a band from a a raste",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:292745,load,loading,292745,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loading']
Performance,"<ImageServerMetadata.ImageResolutionLevel>; getLevels(). Get an unmodifiable list containing the resolution levels. double; getMagnification(). Get the magnification value, or Double.NaN if this is unavailable. Number; getMaxValue(). Get the minimum value supported by this image. Number; getMinValue(). Get the minimum value supported by this image. String; getName(). Get the image name. PixelCalibration; getPixelCalibration(). Get a PixelCalibration object representing the pixel size information for this metadata object. double; getPixelHeightMicrons(). Get the pixel height in microns, if available - or Double.NaN otherwise. PixelType; getPixelType(). Returns the bit-depth for individual pixels in the image. double; getPixelWidthMicrons(). Get the pixel width in microns, if available - or Double.NaN otherwise. double[]; getPreferredDownsamplesArray(). Request the preferred downsamples from the image metadata. int; getPreferredTileHeight(). Get the preferred tile height, which can be used to optimize pixel requests for large images. int; getPreferredTileWidth(). Get the preferred tile width, which can be used to optimize pixel requests for large images. int; getSizeC(). Get the number of image channels. int; getSizeT(). Get the number of time points. int; getSizeZ(). Get the number of z-slices. double; getTimepoint(int ind). Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. int; getWidth(). Get the full-resolution image width. double; getZSpacingMicrons(). Get the z-spacing in microns, if available - or Double.NaN otherwise. int; hashCode();  ; boolean; isCompatibleMetadata(ImageServerMetadata metadata). Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). boolean; isRGB(). Returns true if the pixels are stored in (A)RGB form. int; nLevels(). Get the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:3280,optimiz,optimize,3280,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['optimiz'],['optimize']
Performance,">>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImagePlusImageSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an ImageSupplier that returns an ImageJ ImagePlus. createImagePlusMaskSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create a MaskSupplier that returns an ImageJ ByteProcessor. createImageRegionPredicate(ImageRegion) - Static method in class qupath.lib.objects.PathObjectTools. Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. createImageRegionStore() - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. createImageRegionStore(long) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore with a specified tile cache size, in bytes. createImageStack(ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Create an ImageStack containing the specified ImageProcessors. createIndexColorModel(int, int, int, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a linear LUT based on a RGB color. createIndexedColorModel(Map<Integer, Integer>, boolean) - Static method in class qupath.lib.color.ColorModelFactory. Create an indexed colormap for a labelled (indexed color) image. createIndexedColorModel8bit(ColorMaps.ColorMap) - Static method in class qupath.lib.color.ColorModelFactory. Create an 8-bit IndexColorModel from a ColorMaps.ColorMap. createIndexedColorModel8bit(ColorMaps.ColorMap, int) - Static method in class qupath.lib.color.ColorModelFactory. Create an 8-bit IndexColorModel from a ColorMaps.ColorMap, allowing for a transparent pixel to be set (e.g. createInstance() - Static method in class qupath.lib.gui.Extensio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:186034,cache,cache,186034,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cache']
Performance,"Animated, getChartChildren, getLegend, getLegendSide, getTitle, getTitleSide, isLegendVisible, layoutChildren, legendProperty, legendSideProperty, legendVisibleProperty, requestChartLayout, setAnimated, setLegend, setLegendSide, setLegendVisible, setTitle, setTitleSide, shouldAnimate, titleProperty, titleSideProperty. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildren, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:8315,cache,cacheShapeProperty,8315,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['cache'],['cacheShapeProperty']
Performance,"Class HierarchyOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay. All Implemented Interfaces:; PathOverlay. public class HierarchyOverlay; extends AbstractOverlay; An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:1354,cache,cached,1354,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['cache'],['cached']
Performance,"Class PixelClassificationMeasurementManager. java.lang.Object; qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. public class PixelClassificationMeasurementManager; extends Object; Helper class to compute area-based measurements for regions of interest based on pixel classification. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID). Add measurements to specified objects. protected int; calculatePreferredParallelism(). Make a semi-educated guess as to an appropriate number of threads to use. Number; getCachedMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Number; getCachedMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) inst",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:1410,cache,cached,1410,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,1,['cache'],['cached']
Performance,"DnnModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModels. java.lang.Object; qupath.opencv.dnn.DnnModels. public class DnnModels; extends Object; Helper class for building new DnnModels.; ; This includes a ServiceLoader to support adding new implementations ; via extensions. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DnnModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModel; buildModel(DnnModelParams params). Build a DnnModel from the given parameters. static boolean; registerBuilder(DnnModelBuilder builder). Register a new DnnModelBuilder. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Register a new DnnModel class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnModels; public DnnModels(). Method Details. registerDnnModel; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . registerBuilder; public static boolean registerBuilder(DnnModelBuilder builder); Register a new DnnModelBuilder. Parameters:; builder - ; Returns:. buildModel; public static DnnModel buildModel(DnnModelParams params); Build a DnnModel from the given parameters.; This queries all available DnnModelBuilders through a service loader. Parameters:; params - ; Returns:; a new DnnModel, or null if no model could be built. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModels.html:1908,load,loader,1908,javadoc/docs/qupath/opencv/dnn/DnnModels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModels.html,1,['load'],['loader']
Performance,"Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK. Black, with 50% opacity. static final Color; TRANSLUCENT_WHITE. White, with 50% opacity. Constructor Summary; Constructors. Constructor; Description; ColorToolsAwt();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IndexColorModel; createIndexColorModel(int red,; int green,; int blue,; boolean whiteBackground). Get an IndexColorModel representing a linear LUT based on a RGB color. static Color; darkenColor(Color color). Get a (slightly) darker version of the specified color. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Get a color with a specified opacity, setting the alpha channel accordingly. static Color; getColorWithOpacity(Integer rgb,; double opacity). Get a color with a specified opacity, based on the packed RGB values in an Integer. static IndexColorModel; getIndexColorModel(StainVector stain). Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). static IndexColorModel; getIndexColorModel(StainVector stain,; boolean whiteBackground). Get an IndexColorModel representing a color deconvolution stain. static Color; getMoreTranslucentColor(Color color). Get a (slightly more) translucent version of the specified color. static Color; getTranslucentColor(Color color). Get a (slightly) translucent version of the specified color. static Color; sca",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:1646,cache,cached,1646,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,1,['cache'],['cached']
Performance,"Image> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay); Description copied from interface: ImageRegionRenderer; Paint an image region. Specified by:; paintRegion in interface ImageRegionRenderer; Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ImageObserver (often ignored); imageDisplay - an ImageRenderer to convert images to RGB. close; public void close(). getTileCacheSize; public long getTileCacheSize(); Get the tile cache size, in bytes.; Image tiles larger than this cannot be cached. Returns:. getCachedThumbnail; public BufferedImage getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition). registerRequest; protected void registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition); Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. preemptively). Parameters:; tileListener - ; server - ; clipShape - ; downsampleFactor - ; zPosition - ; tPosition - . registerRequest; protected void registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition). addTileListener; public void addTileListener(TileListener<BufferedImage> listener). getCache; public Map<RegionRequest,BufferedImage> getCache(). removeTileListener; public void removeTileListe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:6238,cache,cached,6238,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['cache'],['cached']
Performance,"Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. defaultLocaleDisplayProperty; public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. showStartupMessageProperty; public static BooleanProperty showStartupMessageProperty(); Show a startup message when QuPath is launched. Returns:. startupScriptProperty; public static StringProperty startupScriptProperty(); Path to a startup script that should be run immediately after QuPath's launch. Returns:. showToolBarBadgesProperty; public static BooleanProperty showToolBarBadgesProperty(); Show badges on the toolbar, e.g. to provide messages or warnings. Returns:. hasJavaPreferences; public static boolean hasJavaPreferences(); Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. Returns:. getConfigPath; public static Path getConfigPath(); throws IOException,; URISyntaxException; Try to get the path to the config file.; Editing this is sometimes needed for preferences that need to be fixed during starting, ; such as the java.library.path or max memory settings. Returns:; Throws:; IOException; URISyntaxException. maxMemoryMBProperty; public static IntegerProperty maxMemoryMBProperty(); Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. Returns:. getUserPreferences; @Deprecated; public static Preferences getUserPreferences(); Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:45402,load,load,45402,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['load'],['load']
Performance,"Manager; extends Object; Helper class to compute area-based measurements for regions of interest based on pixel classification. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID). Add measurements to specified objects. protected int; calculatePreferredParallelism(). Make a semi-educated guess as to an appropriate number of threads to use. Number; getCachedMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Number; getCachedMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:1575,cache,cached,1575,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,1,['cache'],['cached']
Performance,"Model cm); Create a packed RGB pixel value by applying a ColorModel to a (possibly scaled and offset) floating point value. Parameters:; v - the 'raw' pixel value; offset - an offset to subtract from the value; scale - a scaling factor to apply after the offset subtraction; cm - a ColorModel used to determine the output packed RGB value; Returns:; a packed RGB value after applying the transformations to v. getDefaultColorModel; public static ColorModel getDefaultColorModel(ColorTransformer.ColorTransformMethod method); This does not guarantee a ColorModel will be returned!; If it is not, then a default grayscale LUT should be used. Parameters:; method - ; Returns:. transformRGB; public static void transformRGB(int[] buf,; int[] bufOutput,; ColorTransformer.ColorTransformMethod method,; float offset,; float scale,; boolean useColorLUT); Apply a specified color transform to a packed (A)RGB array and output another (A)RGB array.; ; The aim is to perform fast transformations for visualization purposes, and not to obtain the 'raw' transformed values. Parameters:; buf - ; bufOutput - ; method - ; offset - ; scale - ; useColorLUT - ; See Also:. ColorTools. colorDeconvolveRGBPixel; public static float colorDeconvolveRGBPixel(int rgb,; ColorDeconvolutionStains stains,; int channel); Calculate the color deconvolved value for a single pixel, stored as a packed (A)RGB int. Parameters:; rgb - ; stains - ; channel - ; Returns:. colorDeconvolveReconvolveRGBArray; public static int[] colorDeconvolveReconvolveRGBArray(int[] buf,; ColorDeconvolutionStains stainsInput,; ColorDeconvolutionStains stainsOutput,; boolean discardResidual,; int[] bufOutput); Deconvolve RGB array with one set of stain vectors, and reconvolve with another.; ; This supports in-place operation, i.e. buf and bufOutput can be the same array.; Otherwise, if bufOutput == null, a new output array will be created. Parameters:; buf - ; stainsInput - ; stainsOutput - ; discardResidual - ; bufOutput - ; Returns:. colorD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html:13022,perform,perform,13022,javadoc/docs/qupath/lib/color/ColorTransformer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html,1,['perform'],['perform']
Performance,"Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image has 0 in the background and retains the original (after conversion to 8-bit); value in the foreground (ty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html:1104,optimiz,optimizations,1104,javadoc/docs/qupath/opencv/tools/Thinning.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html,1,['optimiz'],['optimizations']
Performance,"PixelClassificationOverlay create(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer); Create an overlay to display a live image that can be created from an existing ImageData. Parameters:; options - options to control the overlay display; fun - function to create an ImageServer from the ImageData.; Note that the server generated by the function call will be cached. ; If it is necessary to control the caching, this needs to be done externally ; and create(OverlayOptions, Map, ImageRenderer) should be used instead.; renderer - rendered used to create an RGB image; Returns:; the PixelClassificationOverlay. create; public static PixelClassificationOverlay create(OverlayOptions options,; Map<ImageData<BufferedImage>,ImageServer<BufferedImage>> map,; ImageRenderer renderer); Create an overlay to display a live image that can be created from an existing ImageData.; This differs from create(OverlayOptions, Function, ImageRenderer) in that ; a cached map of classifier servers is used directly. Parameters:; options - options to control the overlay display; map - map to obtain an ImageServer from an ImageData; renderer - rendered used to create an RGB image; Returns:; the PixelClassificationOverlay. createFeatureDisplayOverlay; @Deprecated; public static PixelClassificationOverlay createFeatureDisplayOverlay(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer); Deprecated.; Use create(OverlayOptions, Function, ImageRenderer) instead. Create an overlay to display a live image that can be created from an existing ImageData. Parameters:; options - options to control the overlay display; fun - function to create an ImageServer from the ImageData; renderer - rendered used to create an RGB image; Returns:; the PixelClassificationOverlay. rendererProperty; public ObjectProperty<ImageRenderer> rendererProperty(); Get the ImageRenderer property used with thi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:6651,cache,cached,6651,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['cache'],['cached']
Performance,"Position,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds). Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileListener(TileListener<BufferedImage> listener);  ; protected Object; requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWaiting(RegionRequest request);  ; protected void; workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker). Every TileWorker should call this when the task is done!. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. paintTileBorders; protected static boolean paintTileBorders. tileListeners; protected List<TileListener<BufferedImage>> tileListeners. cache; protected Map<RegionRequest,BufferedImage> cache. thumbnailCache; protected Map<RegionRequest,BufferedImage> thumbnailCache. Method Details. paintRegionCompletely; public void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape cli",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:3748,cache,cache,3748,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['cache'],['cache']
Performance,"PrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, ac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:3505,cache,cacheShapeProperty,3505,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,1,['cache'],['cacheShapeProperty']
Performance,"PrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, acc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:4708,cache,cacheShapeProperty,4708,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,3,['cache'],['cacheShapeProperty']
Performance,"RegionRenderer; Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ImageObserver (often ignored); imageDisplay - an ImageRenderer to convert images to RGB. close; public void close(). getTileCacheSize; public long getTileCacheSize(); Get the tile cache size, in bytes.; Image tiles larger than this cannot be cached. Returns:. getCachedThumbnail; public BufferedImage getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition). registerRequest; protected void registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition); Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. preemptively). Parameters:; tileListener - ; server - ; clipShape - ; downsampleFactor - ; zPosition - ; tPosition - . registerRequest; protected void registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition). addTileListener; public void addTileListener(TileListener<BufferedImage> listener). getCache; public Map<RegionRequest,BufferedImage> getCache(). removeTileListener; public void removeTileListener(TileListener<BufferedImage> listener). getCachedTile; public BufferedImage getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request). getCachedTilesForServer; public Map<RegionRequest,BufferedImage> getCachedTilesForServer(ImageServer<BufferedImage> server); Get a map of all cached tiles pertaining t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:6631,queue,queue,6631,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['queue'],['queue']
Performance,"RegionRequest request);  ; void; clearCacheForServer(ImageServer<BufferedImage> server);  ; void; close();  ; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<RegionRequest,BufferedImage>; getCachedTilesForServer(ImageServer<BufferedImage> server). Get a map of all cached tiles pertaining to a specific ImageServer. BufferedImage; getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache);  ; long; getTileCacheSize(). Get the tile cache size, in bytes. void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds). Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:2435,cache,cache,2435,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['cache'],['cache']
Performance,"Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class CellCountsCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.opencv.CellCountsCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class CellCountsCV; extends AbstractTileableDetectionPlugin<BufferedImage>; Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection.; ; Currently, only H&E or hematoxylin and DAB are supported.; ; An improved plugin would be desirable to perform the task in a more general way, and without ; requesting the 'magnification' by default (which is less meaningful than resolution/pixel size). Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; CellCountsCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:1024,perform,perform,1024,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['perform'],['perform']
Performance,"SnapshotActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions;  ; exportTMAData(String, double) - Static method in class qupath.lib.gui.scripting.QPEx. Export TMA summary data for the current image. exportTMAData(ImageData<BufferedImage>, String, double) - Static method in class qupath.lib.gui.scripting.QPEx. Export TMA summary data for the specified image. ExportTrainingRegionsCommand - Class in qupath.process.gui.commands. Command to help export training regions as labelled images to train AI algorithms elsewhere. ExportTrainingRegionsCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.ExportTrainingRegionsCommand. Constructor. exportType(Class<? extends PathObject>) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify what type of object should be exported. ExtendedPathTool - Class in qupath.lib.gui.viewer.tools;  ; ExtensionClassLoader - Class in qupath.lib.gui. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane - Class in qupath.lib.gui. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager - Class in qupath.lib.gui. Manage loading extensions for a QuPathGUI instance. ExtensionPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; EXTENSIONS - Variable in class qupath.lib.gui.actions.menus.ExtensionsMenuActions.Actions;  ; EXTENSIONS_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for extensions on GitHub only (not new QuPath releases). extensionsDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the extensions directory. ExtensionsMenuActions - Class in qupath.lib.gui.actions.menus;  ; ExtensionsMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; extract(int...) - Static method in class qupath.opencv.ops.Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:292470,load,loading,292470,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loading']
Performance,"Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionManager. java.lang.Object; qupath.lib.gui.ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNoti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1157,load,loading,1157,javadoc/docs/qupath/lib/gui/ExtensionManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html,1,['load'],['loading']
Performance,"Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.ObjectClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.ObjectClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.ObjectClassification""}); public class ProcessingExtension.ObjectClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionComposite;  ; final org.controlsfx.control.action.Action; actionIntensity;  ; final org.controlsfx.control.action.Action; actionLoadObjectClassifier;  ; final org.controlsfx.control.action.Action; actionMeasurement;  ; final org.controlsfx.control.action.Action; actionObjectClassifier;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadObjectClassifier; @ActionConfig(""Action.Processing.Classify.loadObjectClassifier""); public final org.controlsfx.control.action.Action actionLoadObjectClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionObjectClassifier; @ActionAccelerator(""shortcut+shift+d""); @ActionConfig(""Action.Processing.Classify.trainObjectClassifier""); public final org.controlsfx.control.action.Action actionObjectClassifier. actionMeasurement; @ActionConfig(""Action.Processing.Classify.createSingleMeasurementClassifier""); public final org.controlsfx.control.action.Action actionMeasurement. actionComposite; @ActionConfig(""Action.Processing.Classify.createCompositeClassifier""); public final org.controlsfx.control.action.Action actionComposite. actionIntensity; @ActionConfig(""Action.Processing.Classify.setCellIntensityClassifications""); public final org.controlsfx.control.action.Action actionIntensity. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html:1415,load,loadObjectClassifier,1415,javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,1,['load'],['loadObjectClassifier']
Performance,"TMAGridOverlay. public interface PathOverlay; Interface defining an overlay to paint on top of a viewer. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Method Details. paintOverlay; void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. getLocationString; default String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); Get a location string to display when showing a specified image.; ; The default i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html:1570,perform,performed,1570,javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,1,['perform'],['performed']
Performance,"True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Specified by:; isRGB in interface ImageServer<T>; Returns:. getPixelType; public PixelType getPixelType(); Description copied from interface: ImageServer; The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Specified by:; getPixelType in interface ImageServer<T>; Returns:. finalize; protected void finalize(); throws Throwable; Attempt to close the server. While not at all a good idea to rely on this, it may help clean up after some forgotten servers. Overrides:; finalize in class Object; Throws:; Throwable. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Always returns false. Specified by:; isEmptyRegion in interface ImageServer<T>; Parameters:; request - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. getCachedTile; public T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<T>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. createID; protected abstract String createID(); Create a unique ID for the server, which can be returned as the default value of getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whene",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:7754,cache,cached,7754,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,2,['cache'],['cached']
Performance,"Updated; protected boolean imageUpdated; Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). locationUpdated; protected boolean locationUpdated; Flag used to indicate that the visible region in the viewer has changed. Constructor Details. QuPathViewer; public QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display. Method Details. getView; public Pane getView(); Get the main JavaFX component representing this viewer.; This is what should be added to a scene. Returns:. setMinimumRepaintSpacingMillis; public void setMinimumRepaintSpacingMillis(long repaintSpacingMillis); Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered.; (Repaint requests that come in between are simply disregarded for performance.); ; When finished, it's necessary to call resetMinimumRepaintSpacingMillis() to make sure that ; normal service is resumed. Parameters:; repaintSpacingMillis - ; See Also:. resetMinimumRepaintSpacingMillis(). resetMinimumRepaintSpacingMillis; public void resetMinimumRepaintSpacingMillis(); Return to processing all repainting requests.; ; Note: calling this command triggers a repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that requ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:15788,perform,performance,15788,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['perform'],['performance']
Performance,"a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb,; boolean hasAlpha); Get cached color, explicitly stating whether alpha should be included or not. Parameters:; rgb - ; hasAlpha - ; Returns:. getRGB; public static int getRGB(Color color); Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Parameters:; color - ; Returns:. getARGB; public static int getARGB(Color color); Get a packed int (ARGB) representation of a Color object. Parameters:; color - ; Returns:. getDisplayedColor; public static Color getDisplayedColor(PathObject pathObject); Get a Color appropriate for displaying an object. Parameters:; pathObject - ; Returns:; See Also:. getDisplayedColorARGB(PathObject). getPathClassColor; public static Color getPathClassColor(PathClass pathClass); Get a Color appropriate for displaying a PathClas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:3380,cache,cached,3380,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,1,['cache'],['cached']
Performance,"ackage qupath.lib.images.servers.openslide.jna; Class OpenSlideLoader. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryV",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:1307,load,load,1307,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['load'],['load']
Performance,"ageJPathProperty(). Property representing the path to a local ImageJ installation, or null if no path has been set. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. static void; setImageJPath(String path). Set the path for a local ImageJ installation, if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Property Details. imageJPath; public static StringProperty imageJPathProperty; Property representing the path to a local ImageJ installation, or null if no path has been set. See Also:. getImageJPath(); setImageJPath(String); imageJPathProperty(). Constructor Details. IJExtension; public IJExtension(). Method Details. setImageJPath; public static void setImageJPath(String path); Set the path for a local ImageJ installation, if required. This can be used to help load external ImageJ plugins. Parameters:; path - . getImageJPath; public static String getImageJPath(); Get the path for a local ImageJ installation, if set. Returns:. imageJPathProperty; public static StringProperty imageJPathProperty(); Property representing the path to a local ImageJ installation, or null if no path has been set. Returns:; See Also:. getImageJPath(); setImageJPath(String). getImageJInstance; public static ImageJ getImageJInstance(); Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). Returns:; an ImageJ instance, or null if ImageJ could not be started. extractROI; public static PathImage<ImagePlus> extractROI(ImageServer<BufferedImage> server,; ROI pathROI,; RegionRequest request,; boolean setROI); throws IOException; Extract a region of interest from an image as an ImageJ ImagePlus. Parameters:; server - the image; pathROI - ; request - ; setROI - true if a ROI should be converted to the closest matching ImageJ Roi & set on the image, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html:3838,load,load,3838,javadoc/docs/qupath/imagej/gui/IJExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html,1,['load'],['load']
Performance,"ages.servers.LabeledImageServer.Builder. Set the classification and label to use for boundaries for classified areas. setBoundaryLabel(String, int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Set the classification and label to use for boundaries for classified areas. setBoundaryLabel(PathClass, int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Set the classification and label to use for boundaries for classified areas. setBoundaryLabel(PathClass, int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Set the classification and label to use for boundaries for classified areas. setBoundaryStrategy(BoundaryStrategy) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the strategy for handling the boundaries of area annotations. setCache(Map<RegionRequest, T>, Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Set the cache to be used for image tiles of a specific type. setCaseID(String) - Method in class qupath.lib.objects.TMACoreObject. Set the case ID metadata value. setCellIntensityClassifications(String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for cells in the current hierarchy. setCellIntensityClassifications(PathObjectHierarchy, String, double...) - Static method in class qupath.lib.scripting.QP;  ; setCenterPixelLocation(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). setChanged(boolean) - Method in class qupath.lib.images.ImageData. Set ImageData.isChanged() status. setChannelColors(Integer...) - Static method in class qupath.lib.scripting.QP. Set the channel colors for the current ImageData. setChannelColors(ImageData<?>, Integer...) - Static method in class qupath.lib.scripting.QP. Set the channel colors for the specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:915517,cache,cache,915517,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cache']
Performance,"agnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandleSize(); Get the maximum size for which ROI handles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get an unmodifiable list containing the overlay layers, in order. Returns:. getCustomOverlayLayers; public ObservableList<PathOverlay> getCustomOverlayLayers(); Get direct access to the custom overlay list. Returns:. getGammaOp; public LookupOp getGammaOp(); Get a LookupOp that can perform any requested gamma correction in this viewer.; Note that the gamma is applied to the RGB image (not the original data). Returns:; a gamma op if specified, or null if no gamma adjustment is required (gamma is 1.0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor getROIEditor(); Get the RoiEditor used by this viewer. Returns:. getImageDisplay; public ImageDisplay getImageDisplay(); Get the ImageDi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:27286,perform,perform,27286,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['perform'],['perform']
Performance,"al color indicating pixel values for a channel indicate levels of transparency. tryToClassify(List<? extends PathObject>, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier. Try to classify a batch of objects. tryToClassify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; tryToClassify(PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; tryToFixPolygon(Polygon) - Static method in class qupath.lib.roi.GeometryTools. Test a polygon for validity, attempting to fix TopologyValidationErrors if possible. tryToInterpretMessage(Throwable, int, boolean) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; tryToLoad(String...) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to load OpenSlide. tryToLoadQuietly(String...) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to load OpenSlide, but don't throw an exception if it fails. tryToParseMicrons(double, String) - Static method in class qupath.imagej.tools.IJTools. Based on a value and its units, try to get something suitable in microns. TUMOR - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Tumor classification. TUMOR - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Tumor classification. type(DensityMaps.DensityMapType) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. The type of the density map, which determines any associated normalization. typeToChannels(int) - Static method in class qupath.opencv.tools.OpenCVTools. Determine the number of channels from a specified Mat type (which also encodes depth). typeToDepth(int) - Static method in class qupath.o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1055362,load,load,1055362,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['load']
Performance,"all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:107810,cache,cache,107810,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cache']
Performance,"anProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyLis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:3162,perform,performance,3162,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,1,['perform'],['performance']
Performance,"any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. protected static <T> boolean; rearrangeByStride(Collection<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:2986,perform,perform,2986,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['perform'],['perform']
Performance,"aps.; ; The purpose of this is to create useful tiles whenever the exact tile size may not be essential, and overlaps may be required.; Tiles at the parentROI boundary will be trimmed to fit inside. If the parentROI is smaller, it is returned as is. Parameters:; parentROI - main ROI to be tiled; sizePreferred - the preferred size; in general tiles should have this size; sizeMax - the maximum allowed size; occasionally it is more efficient to have a tile larger than the preferred size towards a ROI boundary to avoid creating very small tiles unnecessarily; fixedSize - if true, the tile size is enforced so that complete tiles have the same size; overlap - optional requested overlap between tiles; Returns:; See Also:. makeTiles(ROI, int, int, boolean). buffer; public static ROI buffer(ROI roi,; double distance); Buffer the specified ROI, dilating (or eroding) by the specified distance. Parameters:; roi - the ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array returned gives the holes and the second the positive regions (admittedly, it might have ; been more logical the other way around).; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and heigh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:16217,perform,performed,16217,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['perform'],['performed']
Performance,"assLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. ExtensionsMenuActions;  ; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. FileMenuActions;  ; FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. GeneralTools. Collection of generally useful static methods. GeneratingImageServer<T>. Marker interface to indicate that this ImageServer generates tiles on request. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geome",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:18179,perform,performing,18179,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['perform'],['performing']
Performance,"assifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:1531,perform,performed,1531,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,1,['perform'],['performed']
Performance,"ata, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. clearCachedOverlay; public void clearCachedOverlay(); Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion; public void clearCachedOverlayForRegion(ImageRegion region); Clear previously-cached tiles for a specified region of this overlay. Parameters:; region - the region for which tiles should be removed. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:3991,perform,performance,3991,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,3,"['cache', 'perform']","['cached', 'performance']"
Performance,"ateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurement, importObjectsFromFile, insertObjects, insertObjects, isDirectory, isTMADearrayed, loadDensityMap, loadImageData, loadObjectClassifier, loadPixelClassifier, makeARGB, makeFileInProject, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makePathInProject, makeRGB, measurement, mergeAnnotations, mergeAnnotations, mergePointsForAllClasses, mergePointsForSelectedObjectClasses, mergeSelectedAnnotations, mergeSelectedAnnotations, mkdirs, nObjects, refreshDuplicateIDs, refreshDuplicateIDs, refreshIDs, refreshIDs, relabelTMAGrid, relabelTMAGrid, removeMeasurements, removeMeasurements, removeObject, removeObjects, removeObjects, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeOrClipObjectsOutsideImage, removeOrClipObjectsOutsideImage, replaceClassification, replaceClassification, replaceClassification, replaceClassification, resetBatchProjectAndImage, resetClassifications, resetClassifications, resetDetectionClassifications, resetIntensityClassifications, resetIntensityClassifications, re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:9006,load,loadObjectClassifier,9006,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['load'],['loadObjectClassifier']
Performance,"ath.lib.projects; Class ProjectIO. java.lang.Object; qupath.lib.projects.ProjectIO. public class ProjectIO; extends Object; Read QuPath projects.; ; Projects should now be written with Project.syncChanges(). Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_PROJECT_EXTENSION. Default file extension for a QuPath project. static final String; DEFAULT_PROJECT_NAME. Default file name for a QuPath project. Constructor Summary; Constructors. Constructor; Description; ProjectIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; getProjectExtension(). Get the default extension for a QuPath project file, without the 'dot'. static String; getProjectExtension(boolean includePeriod). Get the default extension for a QuPath project file. static <T> Project<T>; loadProject(File fileProject,; Class<T> cls). Load a project from a local file. static <T> Project<T>; loadProject(URI uri,; Class<T> cls). Read project from URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DEFAULT_PROJECT_NAME; public static final String DEFAULT_PROJECT_NAME; Default file name for a QuPath project. See Also:. Constant Field Values. DEFAULT_PROJECT_EXTENSION; public static final String DEFAULT_PROJECT_EXTENSION; Default file extension for a QuPath project. See Also:. Constant Field Values. Constructor Details. ProjectIO; public ProjectIO(). Method Details. loadProject; public static <T> Project<T> loadProject(URI uri,; Class<T> cls); throws IOException; Read project from URI. Currently, this assumes that the URI refers to a local file. Parameters:; uri - ; cls - ; Returns:; Throws:; IOException. loadProject; public static <T> Project<T> loadProject(File fileProject,; Class<T> cls); throws IOException; Load a project from a local file. Parameters:; fileProject - ; cls ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html:1329,load,loadProject,1329,javadoc/docs/qupath/lib/projects/ProjectIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html,1,['load'],['loadProject']
Performance,"athObjectHierarchy. static Collection<PathObject>; getTileObjects(). Get a list of the current tile objects. static List<TMACoreObject>; getTMACoreList(). Get the list of TMA core objects for the current hierarchy. static boolean; hasMeasurement(PathObject pathObject,; String measurementName). Test whether a PathObject has a specified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an inverse annotation using the current ImageData and its current sel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:21653,load,loadDensityMap,21653,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadDensityMap']
Performance,"atic Optional<String> getExtension(File file); Get filename extension. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:9238,perform,performed,9238,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['perform'],['performed']
Performance,"available color transforms are shown for RGB images. static boolean; getSkipMissingCoresProperty(). Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. static Preferences; getUserPreferences(). Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). static BooleanProperty; gridScaleMicronsProperty(). Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingXProperty(). Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingYProperty(). Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartXProperty(). Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartYProperty(). Starting y coordinate for any counting grid (usually 0). static boolean; hasJavaPreferences(). Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSettingProperty(). Specify how setting the image type should be handled for images when they are opened for the first time. static void; importPreferences(InputStream stream). Import preferences from a stream. static BooleanProperty; invertScrollingProperty(). Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSliderProperty(). Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettingsProperty(). Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSizeProperty(). Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNamesProperty(). Request that image names are hidden within the user inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:17072,load,load,17072,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['load'],['load']
Performance,"b.gui.charts.HistogramDisplay. Get the requested number of bins used for the histogram. getNumericValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getNumericValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get the numeric value from an object for the specific measurement. getNumNaNs() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of NaN values added. getNumPoints() - Method in class qupath.lib.roi.AreaROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.GeometryROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolygonROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolylineROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.EllipseROI. Returns 4 (since the ellipse is defined by its bounding box). getNumPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get the number of points, as would be returned by ROI.getAllPoints(). getNumPoints() - Method in class qupath.lib.roi.LineROI. Returns 2 (since the line is defined by its end points). getNumPoints() - Method in class qupath.lib.roi.PointsROI;  ; getNumPoints() - Method in class qupath.lib.roi.RectangleROI. Returns 4 (since the rectangle is defined by its bounding box). getNumThreads() - Static method in class qupath.lib.common.Prefs. Get the requested number of threads to use for parallelization. getObjectClassificationString(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. getObjectClassifiers() - Method in interface qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:460138,cache,caches,460138,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['caches']
Performance,"ble, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap);  ; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with ke",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:1023,cache,cacheHint,1023,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,2,['cache'],"['cache', 'cacheHint']"
Performance,"ble downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:2443,cache,cache,2443,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['cache'],['cache']
Performance,"ble getDownsampleForResolution(int level); Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. getWidth; int getWidth(); Width of the full-resolution image in pixels. Returns:. getHeight; int getHeight(); Height of the full-resolution image in pixels. Returns:. nChannels; int nChannels(); Number of channels (3 for RGB). Returns:. isRGB; boolean isRGB(); True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Returns:. nZSlices; int nZSlices(); Number of slices in a z-stack. Returns:. nTimepoints; int nTimepoints(); Number of time points in a time series. Returns:. getPixelCalibration; default PixelCalibration getPixelCalibration(); Get the PixelCalibration object from the current metadata. Returns:. getCachedTile; T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! This method should be used very cautiously, as it is permitted to return the tile stored internally ; in the cache for performance. This must not be modified by any code requesting the tile. Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readBufferedImage; @Deprecated; default T readBufferedImage(RegionRequest request); throws IOException; Deprecated.; since v0.4.0. Implementations of ImageServer should override readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain compatibility with QuPath ; extensions that have not yet been updated to use the newer method. Legacy method to request pixels for a RegionRequest, now replaced by readRegion(RegionRequest).; This method is dep",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:7231,cache,cached,7231,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,2,['cache'],['cached']
Performance,"bly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(Integer) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color. getCachedColor(Integer) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color. getCachedColor(Integer, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color, explicitly stating whether alpha should be included or not. getCachedColor(Integer, boolean) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color, explicitly stating whether alpha should be included or not. getCachedMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. getCachedMeasurementValue(ROI, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. getCachedRegion(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedStroke(double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Get a BasicStroke with the specified thickness. getCachedThumbnail(ImageServer<BufferedImage>, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(TileRequest) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getCachedTile(TileRequest) - Method in class qupath.lib.images.servers.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:345416,cache,cached,345416,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cached']
Performance,"c static void writePredictionImage(String classifierName,; String path); throws IOException; Write the output of applying a pixel classifier to the current image image. Parameters:; classifierName - name of the classifier, see loadPixelClassifier(String); path - output file path; Throws:; IOException. writeDensityMapImage; public static void writeDensityMapImage(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; String path); throws IOException; Write the output of applying a density map to an image. The writer will be determined based on the file extension. Parameters:; imageData - image to which the classifier should be applied; densityMap - the density map; path - output file path; Throws:; IOException. writeDensityMapImage; public static void writeDensityMapImage(String densityMapName,; String path); throws IOException; Write the output of applying a density map to the current image image. Parameters:; densityMapName - name of the density map, see loadDensityMap(String); path - output file path; Throws:; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boole",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:106902,load,loadDensityMap,106902,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadDensityMap']
Performance,"cally generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. buildServer; public static ImageServer<BufferedImage> buildServer(String path,; String... args); throws IOException; Build a ImageServer for the specified URI path and optional args.; ; See buildServer(URI, String...) for more information about how args are applied. Parameters:; path - path for the image; it should be possible to convert this to a URI; args - ; Returns:; Throws:; IOException. buildServer; public static ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws IOException; Build a ImageServer for the specified URI and optional args.; This differs from ImageServerProvider.buildServer(String, Class, String...) in two main ways:; ; it always u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:4067,perform,performance,4067,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['perform'],['performance']
Performance,"cated.; since v0.4.0, use PathClass.getThreePlus(PathClass). getThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Get a list of all thresholds. getThumbnail() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a thumbnail representing the image as displayed by this viewer. getThumbnail() - Method in interface qupath.lib.projects.ProjectImageEntry. Request a thumbnail for the image. getThumbnail(ImageServer<BufferedImage>, int, int, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getThumbnailDownsampleFactor(int, int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getThumbnailRGB(ImageServer<BufferedImage>) - Static method in class qupath.lib.gui.commands.ProjectCommands. Get an RGB thumbnail for an image server, suitable for showing as a project thumbnail. getTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. getTileCacheSize() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Get the tile cache size, in bytes. getTileHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile at the tile resolution. getTileHeight() - Method in class qupath.lib.objects.utils.Tiler. Get the height of output tiles. getTileObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all tile objects in the hierarchy. getTileObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current tile objects. getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:532712,cache,cache,532712,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['cache'],['cache']
Performance,"ce MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID). Add measurements to specified objects. protected int; calculatePreferredParallelism(). Make a semi-educated guess as to an appropriate number of threads to use. Number; getCachedMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Number; getCachedMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:1941,cache,cachedOnly,1941,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,1,['cache'],['cachedOnly']
Performance,"classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.; colorModel - optional colormodel. Method Details. readAllTiles; public void readAllTiles(); Read all the tiles.; This is useful for a classifier that can be applied in full to an image without causing memory issues ; (e.g. a density map), particularly if it is is dependent upon a changing property of the image ; (e.g. its object hierarchy).; After calling this method, tiles will be returned from an internal cache rather than being computed anew. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers ma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:4559,cache,cache,4559,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['cache'],['cache']
Performance,"class Object; Throws:; Throwable. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Always returns false. Specified by:; isEmptyRegion in interface ImageServer<T>; Parameters:; request - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. getCachedTile; public T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<T>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. createID; protected abstract String createID(); Create a unique ID for the server, which can be returned as the default value of getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever getPath() is first required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:8426,cache,cached,8426,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,2,['cache'],['cached']
Performance,"cleus ROI for a cell, or null if the input is not a cell or no nucleus is found. getNullClass() - Static method in class qupath.lib.objects.classes.PathClass. Get the value of PathClass.NULL_CLASS, used to represent no classification. getNumBins() - Method in class qupath.lib.gui.charts.HistogramDisplay. Get the requested number of bins used for the histogram. getNumericValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getNumericValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get the numeric value from an object for the specific measurement. getNumNaNs() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of NaN values added. getNumPoints() - Method in class qupath.lib.roi.AreaROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.GeometryROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolygonROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolylineROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.EllipseROI. Returns 4 (since the ellipse is defined by its bounding box). getNumPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get the number of points, as would be returned by ROI.getAllPoints(). getNumPoints() - Method in class qupath.lib.roi.LineROI. Returns 2 (since the line is defined by its end points). getNumPoints() - Method in class qupath.lib.roi.PointsROI;  ; getNumPoints() - Method in class qupath.lib.roi.RectangleROI. Returns 4 (since the rectangle is defined by its bounding box). getNumThreads() - Static method in class qupath.lib.common.Prefs. Get the requested number of threads to use for parallelization. getObjectCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:459863,cache,caches,459863,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['caches']
Performance,"control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about savin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27283,perform,perform,27283,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['perform'],['perform']
Performance,"createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel classifier; measurementID - . createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(String",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:138614,load,loadPixelClassifier,138614,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['load'],['loadPixelClassifier']
Performance,"cript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastSettingsPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.GridPane; qupath.lib.gui.commands.display.BrightnessContrastSettingsPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastSettingsPane; extends GridPane; A pane to save and load display settings, using a ResourceManager. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageDisplay>; imageDisplayObject. The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManager. The resource manager used to handle saving/loading. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:1072,load,loading,1072,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['load'],['loading']
Performance,"ctAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current image data in the user interface, when running interactively.; This is not necessarily always the image that is 'current' when running scripts, e.g. when batch processing. Parameters:; imageData - . setBatchProjectAndImage; public static void setBatchProjectAndImage(Project<BufferedImage> project,; ImageData<BufferedImage> imageData); Set the Project and ImageData to use for batch processing for the current thread. Parameters:; project - ; imageData - . resetBatchProjectAndImage; public static void resetBatchProjectAndImage(); Reset the Project and ImageData used for batch processing for the current thread. loadImageData; @Deprecated; public static ImageData<BufferedImage> loadImageData(String path,; boolean setBatchData); throws IOException; Deprecated.; Load ImageData from a file. Parameters:; path - path to the file containing ImageData.; setBatchData - if true, the setBatchImageData(ImageData) will be called if the loading is successful.; Returns:; Throws:; IOException; See Also:. setBatchImageData(qupath.lib.images.ImageData<java.awt.image.BufferedImage>). fireHierarchyUpdate; public static void fireHierarchyUpdate(); Trigger an update for the current hierarchy.; ; This should be called after any (non-standard) modifications are made to the hierarchy ; to ensure that all listeners are notified (including for any GUI).; ; It is common to call it at the end of any script that does any direct modification of objects ; (e.g. adding/removing measurements, setting classifications). fireHierarchyUpdate; public static void fireHierarchyUpdate(PathObjectHierarchy hierarchy); Trigger an update for the specified hierarchy.; ; This should be called after any (non-standard) modifications are made to the hierarchy ; to ensure that all listeners are notified (including for any GUI).; ; It is common to call it at the end of any script that does any direct modification of objects ; (",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:48510,load,loading,48510,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loading']
Performance,"ctImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CroppedImageServer. ImageServer that treats a particular sub-region of another ImageServer as a full image, ; i.e. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. GeneratingImageServer<T>. Marker interface to indicate that this ImageServer generates tiles on request. ImageChannel. The name and display color for a single image channel. ImageServer<T>. Generic ImageServer, able to return pixels and metadata. ImageServerBuilder<T>. Helper class for creating ImageServers from a given URI and optional argument list. ImageServerBuilder.AbstractServerBuilder<T>. Abstract ServerBuilder implementation that handles metadata. ImageServerBuilder.DefaultImageServerBuilder<T>. Default ImageServerBuilder.ServerBuilder that requires a URI and (optional) array of String arguments to create an ImageServer ; with the help of a ImageServerBuilder. ImageServerBuilder.ServerBuilder<T>. Interface that d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html:2230,perform,performing,2230,javadoc/docs/qupath/lib/images/servers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html,1,['perform'],['performing']
Performance,"ction between a given range, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. Parameters:; gamma - ; min - ; max - ; Returns:; See Also:. createColorModel(PixelType, ColorMap, int, double, double, int, DoubleToIntFunction). getProbabilityColorModel8Bit; public static ColorModel getProbabilityColorModel8Bit(List<ImageChannel> channels); Get a ColorModel suitable for showing 8-bit pseudo-probabilities for multiple channels.; ; The range of values is assumed to be 0-255, treated as probabilities rescaled from 0-1.; A cached model will be retrieved where possible, rather than generating a new one. Parameters:; channels - ; Returns:. getProbabilityColorModel32Bit; public static ColorModel getProbabilityColorModel32Bit(List<ImageChannel> channels); Get a ColorModel suitable for showing 32-bit (pseudo-)probabilities for multiple channels.; ; The range of values is assumed to be 0-1.; A cached model will be retrieved where possible, rather than generating a new one. Parameters:; channels - ; Returns:. getDummyColorModel; public static ColorModel getDummyColorModel(int bpp); Get a dummy ColorModel instance.; ; This isn't very highly recommended; it is here to help in cases where a BufferedImage ; is required, but really only a raster is needed.; The actual color used is undefined (but it will likely be black). Parameters:; bpp - ; Returns:. createColorModel; public static ColorModel createColorModel(PixelType type,; int nChannels,; boolean alphaResidual,; int... colors); Create a new ColorModel that can be used to display an image where pixels per channel reflect ; probabilities, either as float or byte.; ; It is assumed that the probabilities sum to 1; if they sum to less than 1, alphaResidual ; can be used to make 'unknown' pixels transparent/translucent rather than black. Parameters:; type - type for individual pixels; nChannels - Number of color channels.; alphaResidual - If true, the alpha value is sc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModelFactory.html:8241,cache,cached,8241,javadoc/docs/qupath/lib/color/ColorModelFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModelFactory.html,1,['cache'],['cached']
Performance,"cy options should be shown to the user - normally not desirable. Returns:. doCreateLogFilesProperty; public static BooleanProperty doCreateLogFilesProperty(); Request a log file to be generated. Requires the userPathProperty() to be set to a directory. Returns:. userPathProperty; public static ObjectProperty<String> userPathProperty(); A path where additional files may be stored, such as extensions and log files. Returns:. getRecentProjectList; public static ObservableList<URI> getRecentProjectList(); Get a list of the most recent projects that were opened. Returns:. maxUndoLevelsProperty; public static IntegerProperty maxUndoLevelsProperty(); The requested maximum number of undo levels that QuPath should support. Returns:. maxUndoHierarchySizeProperty; public static IntegerProperty maxUndoHierarchySizeProperty(); The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridStartYProperty; public static DoubleProperty gridStartYProperty(); Starting y coordinate",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:51061,perform,performance,51061,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['perform'],['performance']
Performance,"d; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. makeInverseAnnotation; public static boolean makeInverseAnnotation(ImageData<?> imageData,; Collection<PathObject> pathObjects); Make an annotation, for which the ROI is obtained by subtracting the ROIs of the specified objects from the closest ; common ancestor ROI (or entire image if the closest ancestor is the root).; ; In an inverted annotation can be created, it is added to the hierarchy and set as selected. Parameters:; imageData - the image containing the annotation; pathObjects - the annotation to invert; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. runObjectClassifier; public static void runObjectClassifier(String... names); throws IllegalArgumentException; Apply an object classifier to the current ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. runObjectClassifier; public static void runObjectClassifier(ImageData imageData,; String... names); throws IllegalArgumentException; Apply an object classifier to the specified ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; imageData - ; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:130698,load,load,130698,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['load']
Performance,"ded PathTool that can switch between drawing lines or arrows. LINE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LINE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; LineROI - Class in qupath.lib.roi. ROI representing a straight line, defined by its end points. lineThickness(float) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. lineWidthProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Line width property used for displaying threshold lines. LINK - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Link the image (to a separate PNG). linkImages() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether the underlying (raster) image should be included in any export. loadDensityMap(String) - Static method in class qupath.lib.scripting.QP. Load a density map for a project or file path. loadDensityMap(Path) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Load a DensityMaps.DensityMapBuilder from the specified path. loadDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Load a display settings object from a file path or from the current project. loadImageData(String, boolean) - Static method in class qupath.lib.scripting.QP. Deprecated. loadObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Load an object classifier for a project or file path. loadPixelClassifier(String) - Static method in class qupath.lib.scripting.QP. Load a pixel classifier for a project or file path. loadProject(File, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Load a project from a local file. loadProject(URI, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Read project from URI. LoadResourceC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:653188,load,loadDensityMap,653188,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loadDensityMap']
Performance,"ding.ViewTracker. Return an unmodifiable list of all the frames stored by this view tracker. getFramework() - Method in class qupath.opencv.dnn.DnnModelParams. Get the name of the deep learning framework that may be used. getFramework() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the framework used to create the model. getFullLocationString(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. getFullMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the full magnification for the image. getGamma() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get the requested vamma value for the viewer. getGamma() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the gamma value used for this viewer. getGammaOp() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a LookupOp that can perform any requested gamma correction in this viewer. getGaussianDeriv(double, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Get filter coefficients for a 1D Gaussian (derivative) kernel. getGaussianDerivKernel(double, int, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Get filter coefficients for a 1D Gaussian (derivative) kernel. getGeoJsonDataFormat() - Static method in class qupath.lib.gui.commands.InteractiveObjectImporter. Get a DataFormat suitable for storing GeoJSON data on a clipboard. getGeometry() - Method in class qupath.lib.roi.EllipseROI;  ; getGeometry() - Method in class qupath.lib.roi.LineROI;  ; getGeometry() - Method in class qupath.lib.roi.PointsROI;  ; getGeometry() - Method in class qupath.lib.roi.PolylineROI;  ; getGeometry() - Method in class qupath.lib.roi.RectangleROI;  ; getGeometry() - Method in class qupath.lib.roi.AreaROI;  ; getGeometry() - Method in class qupath.lib.roi.GeometryROI;  ; getGeometry() - Method in interface qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:396966,perform,perform,396966,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['perform'],['perform']
Performance,"dually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an existing BufferedImage is somewhat awkward, and when caching; image tiles we want to be able to keep the original ColorModels intact - otherwise ColorModels; for recently-seen tiles might be different from the ColorModels of tiles that have been in the cache; for longer, even though they were read from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the ChannelDisplayInfo approach means that during repainting an (A)RGB image can be produced on-the-fly; without needing to create a new image with the desired ColorModel for painting.; This potentially ends up requiring a bit more computation that is really necessary - and it may be optimized; better in the future - but it was the simplest method I could come up with to provide the features I wanted...; ; Before v0.4.0, some methods supported a boolean parameter to specify whether or not to use color LUTs.; Since v0.4.0, this has been replaced by ChannelDisplayMode to support different ways of visualizing channels.; In particular, in some cases an inverted display is requested - where 'inverted' refers to the background ; (i.e. switching from black is zero to white is zero, or vice versa depending upon the default display). ; Because only additive combinations of RGB colors are permitted, requesting inversion means that the color used for the ; LUT should be inverted but everything else proceeds are normal. ; The calling code then has the job of inverting the resulting image, as done by ; ImageDisplay.applyTransforms(BufferedImage, BufferedImage, java.util.List, ChannelDisplayMode). Author:; Pete Bankhead; See Also:. ImageDisplay. Nested Class Summary; Nested Classes. Modi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:2791,optimiz,optimized,2791,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,1,['optimiz'],['optimized']
Performance,"e QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.UNKNOWN to allow backwards compatibility, ; however it strongly recommended to return the actual QuPath version against which ; the extension was developed and tested. Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. getVersion; default Version getVersion(); Get the version of the current extension. Returns:; See Also:. GeneralTools.getPackageVersion(Class). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:2090,load,loaded,2090,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,1,['load'],['loaded']
Performance,"e annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image for which the density map should be generated; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static Pixel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:137632,load,loadDensityMap,137632,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadDensityMap']
Performance,"e image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifierName - the name of the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:141690,load,loadPixelClassifier,141690,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadPixelClassifier']
Performance,"e selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetection",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:8290,perform,performed,8290,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['perform'],['performed']
Performance,"e skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:13377,perform,performance,13377,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['perform'],['performance']
Performance,"e to identify PyTorch. static final String; FRAMEWORK_TENSORFLOW. Default name to identify TensorFlow. static final String; FRAMEWORK_TF_LITE. Default name to identify TensorFlow Lite. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModelParams.Builder; builder(). Create a new params builder, with default values. static DnnModelParams.Builder; builder(DnnModelParams params). Create a new params builder, initialized with the values from existing ; params. String; getFramework(). Get the name of the deep learning framework that may be used. Map<String,DnnShape>; getInputs(). Get the requested inputs and their shapes. String; getLayout(). Get a string representing the axes layout that the model expects as input. Map<String,DnnShape>; getOutputs(). Get the expected outputs and their shapes. List<URI>; getURIs(). Get the URIs associated with the model (e.g. boolean; requestLazyInitialize(). Request that any model is loaded lazily on demand. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. FRAMEWORK_TENSORFLOW; public static final String FRAMEWORK_TENSORFLOW; Default name to identify TensorFlow. See Also:. Constant Field Values. FRAMEWORK_TF_LITE; public static final String FRAMEWORK_TF_LITE; Default name to identify TensorFlow Lite. See Also:. Constant Field Values. FRAMEWORK_ONNX_RUNTIME; public static final String FRAMEWORK_ONNX_RUNTIME; Default name to identify ONNX Runtime. See Also:. Constant Field Values. FRAMEWORK_OPENCV_DNN; public static final String FRAMEWORK_OPENCV_DNN; Default name to identify OpenCV DNN. See Also:. Constant Field Values. FRAMEWORK_PYTORCH; public static final String FRAMEWORK_PYTORCH; Default name to identify PyTorch. See Also:. Constant Field Values. FRAMEWORK_MXNET; public static final String FRAMEWORK_MXNET; Default name to identify MXNet. See Also:. Constant F",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html:2374,load,loaded,2374,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,1,['load'],['loaded']
Performance,"e(PixelCalibration requestedPixelSize). Requested pixel size to determine the resolution of the density map, in calibrated units. DensityMaps.DensityMapBuilder; radius(double radius). The radius of the filter used to calculate densities. DensityMaps.DensityMapBuilder; type(DensityMaps.DensityMapType type). The type of the density map, which determines any associated normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. pixelSize; public DensityMaps.DensityMapBuilder pixelSize(PixelCalibration requestedPixelSize); Requested pixel size to determine the resolution of the density map, in calibrated units.; ; If this is not specified, an ImageData should be provided to buildClassifier(ImageData) ; and used to determine a suitable pixel size based upon the radius value and the image dimensions.; ; This is recommended, since specifying a pixel size could potentially result in creating maps ; that are too large or too small, causing performance or memory problems. Parameters:; requestedPixelSize - ; Returns:; this builder; See Also:. radius(double). type; public DensityMaps.DensityMapBuilder type(DensityMaps.DensityMapType type); The type of the density map, which determines any associated normalization. Parameters:; type - ; Returns:; this builder. addDensities; public DensityMaps.DensityMapBuilder addDensities(String name,; PathObjectPredicates.PathObjectPredicate filter); Add a filter for computing densities.; This is added on top of the filter specified in DensityMaps.builder(PathObjectPredicate) to ; extract a subset of objects for which densities are determined. Parameters:; name - name of the filter; usually this is the name of a classification that the objects should have; filter - the filter itself (predicate that must be JSON-serializable); Returns:; this builder. colorModel; public DensityMaps.DensityMapBuilder colorModel(ColorModels.ColorModelBuilde",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html:2664,perform,performance,2664,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,1,['perform'],['performance']
Performance,"e, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEven",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:3024,perform,performance,3024,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,1,['perform'],['performance']
Performance,"e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:11199,perform,performed,11199,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['perform'],['performed']
Performance,"eData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. clearCachedOverlay; public void clearCachedOverlay(); Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion; public void clearCachedOverlayForRegion(ImageRegion region); Clear previously",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:3247,perform,performed,3247,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['perform'],['performed']
Performance,"eImageDataAction(Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImageDataAction(Consumer<ImageData<BufferedImage>>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImagePlusImageSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an ImageSupplier that returns an ImageJ ImagePlus. createImagePlusMaskSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create a MaskSupplier that returns an ImageJ ByteProcessor. createImageRegionPredicate(ImageRegion) - Static method in class qupath.lib.objects.PathObjectTools. Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. createImageRegionStore() - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. createImageRegionStore(long) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore with a specified tile cache size, in bytes. createImageStack(ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Create an ImageStack containing the specified ImageProcessors. createIndexColorModel(int, int, int, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a linear LUT based on a RGB color. createIndexedColorModel(Map<Integer, Integer>, boolean) - Static method in class qupath.lib.color.ColorModelFactory. Create an indexed colormap for a labelled (indexed color) image. createIndexedColorModel8bit(ColorMaps.ColorMap) - Static method in class qupath.lib.color.ColorModelFactory. Create an 8-bit IndexColorModel from a ColorMaps.ColorMap. createIndexedColorModel8bit(ColorMaps.ColorMap, int) - Static method in class qupath.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:185811,cache,cache,185811,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cache']
Performance,"eLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlideLoader. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:1028,load,loaded,1028,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['load'],['loaded']
Performance,"easurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(PathObject, String). getMeasurementValue; @Deprecated; public Number getMeasurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. Parameters:; roi - ; name - ; Returns:; See Also:. getCachedMeasurementValue(ROI, String). getMeasurementValue; public Number getMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Parameters:; roi - ; name - ; Returns:; See Also:. getMeasurementValue(ROI, String). addMeasurements; public boolean addMeasurements(Collection<? extends PathObject> objectsTo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:4147,cache,cachedOnly,4147,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,1,['cache'],['cachedOnly']
Performance,"ecified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an inverse annotation using the current ImageData and its current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation using the specified ImageData and current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData,; Collection<PathObject> pathObjects). Make an annotation, for which the ROI is obtained by subtractin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:21982,load,loadPixelClassifier,21982,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadPixelClassifier']
Performance,"ect. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:11999,cache,caches,11999,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,3,['cache'],['caches']
Performance,"ect. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10216,cache,caches,10216,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['cache'],['caches']
Performance,"ed from annotations objects with line ROIs,; then remove the lines from the object hierarchy.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitSelectedAnnotationAreasByLines; public static boolean splitSelectedAnnotationAreasByLines(double thickness,; boolean removeLines); Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). splitSelectedAnnotationAreasByLines; public static boolean splitSelectedAnnotationAreasByLines(PathObjectHierarchy hierarchy); Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitSelectedAnnotationAreasByLines; public static boolean splitSelectedAnnotationAreasByLines(PathObjectHierarchy hierarchy,; double thickness,; bool",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:119886,perform,performing,119886,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['perform'],['performing']
Performance,"ed to display tile objects. See Also:. colorTileProperty(). autoSetAnnotationClass; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty; Classification that should automatically be applied to all new annotations. May be null. See Also:. autoSetAnnotationClassProperty(). alwaysPaintSelectedObjects; public static BooleanProperty alwaysPaintSelectedObjectsProperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. locationFontSizeProperty(). scalebarFontWeight; public static ObjectProperty<FontWeight> scalebarFontWeightProperty; Preferred font weight in the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:38756,perform,performance,38756,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['perform'],['performance']
Performance,"edImage.; ; Important! The readBufferedImage(RegionRequest) method was replaced by readRegion(RegionRequest) in ; v0.4.0. Implementing classes need only to worry about overriding readRegion(RegionRequest) - and legacy implementations ; should be updated to override the new method rather than the old one.; Default implementations of both methods exist to try to ease the transition, but this may change in the future and ; readBufferedImage(RegionRequest) is likely to be removed. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; T; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. default ImageServerBuilder.ServerBuilder<T>; getBuilder(). Get a ServerBuilder capable of building a server the same as this one. T; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. ImageChannel; getChannel(int channel). Request information for one channel (0-based index). T; getDefaultThumbnail(int z,; int t). Get the default thumbnail for a specified z-slice and timepoint. double; getDownsampleForResolution(int level). Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. int; getHeight(). Height of the full-resolution image in pixels. Class<T>; getImageClass(). Get the class of the image representation returned by this ImageServer. ImageServerMetadata; getMetadata(). Get essential metadata associated with the ImageServer as a distinct object. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getPath(). Get a String path that can uniquely identify this image. default PixelCalibration; getPixelCalibration(). Get the PixelCalibration object from the current metad",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:2310,cache,cached,2310,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,2,['cache'],['cached']
Performance,"eferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cache - ; cls - . getCache; public static <T> Map<RegionRequest,T> getCache(Class<T> cls); Get the cache in use for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cls - ; Returns:. setServiceLoader; public static void setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader); Replace the default service loader with another.; ; This can be handy if the ServiceLoader should be using an alternative ClassLoader,; e.g. to auto-discover ImageServerBuilders in alternative directories. Parameters:; newLoader - . getInstalledImageServerBuilders; public static List<ImageServerBuilder<?>> getInstalledImageServerBuilders(); Request all available ImageServerBuilders. Returns:. getInstalledImageServerBuilders; public static <T> List<ImageServerBuilder<T>> getInstalledImageServerBuilders(Class<T> imageClass); Request all available ImageServerBuilders supporting a given image class. Type Parameters:; T - ; Parameters:; imageClass - ; Returns:. legacyPathToURI; public static URI legacyPathToURI(String path); throws IOException; Method to help with convertin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:2577,cache,cache,2577,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,1,['cache'],['cache']
Performance,"efs.PathPrefs. Delimiter to use when exporting tables. target(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the target, e.g. taskComplete(boolean) - Method in interface qupath.lib.plugins.PathTask. Perform optional post-processing after a task has completed. TaskRunner - Interface in qupath.lib.plugins. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX - Class in qupath.lib.gui. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerFX(QuPathGUI) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor. TaskRunnerFX(QuPathGUI, int) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor specifying the number of threads. TaskRunnerUtils - Class in qupath.lib.plugins. A utility class to help with the creation of TaskRunner instances. TemporaryObject - Interface in qupath.lib.objects. Marker interface used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test(PathObject) - Method in enum class qupath.lib.objects.PathObjectFilter;  ; text(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the text property of the action. text(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the text property of the action to an ObservableValue, bidirectionally if possible. TEXT_DETECTION_DB - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextRecognitionModel. TextAppendable - Interface in qupath.lib.gui.logging. Interface to indicate anything ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1018443,cache,cache,1018443,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cache']
Performance,"eld | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class HierarchyOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay. All Implemented Interfaces:; PathOverlay. public class HierarchyOverlay; extends AbstractOverlay; An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Const",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:1251,cache,cached,1251,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['cache'],['cached']
Performance,"ends Object; implements PathPlugin<T>; General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; AbstractPlugin();  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected abstract void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. protected void; addWorkflowStep(ImageData<T> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. protected abstract Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. protected abstract boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. protected static <T> boolean; rearrangeByStride(Collection<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:1633,perform,perform,1633,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['perform'],['perform']
Performance,"ent, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSettingsPane();  . Method Summary. All MethodsInstance Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:1666,cache,cacheHint,1666,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,2,['cache'],"['cache', 'cacheHint']"
Performance,"ent, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSliderPane();  . Method Summary. All MethodsInstance MethodsC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:2029,cache,cacheHint,2029,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,2,['cache'],"['cache', 'cacheHint']"
Performance,"entObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, String) - Static method in class qupath.lib.images.servers.RearrangeRGBImageServer. Get a ServerBuilder that swaps red and blue channels for another (RGB) server. getSwitchToGrayscaleChannel() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.switchToGrayscaleChannelProperty(). getSynchronizeViewers() - Method in class qupath.lib.gui.viewer.ViewerManager. Gets the value of the synchronizeViewers property. getSyntaxFromName(String) - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get a script syntax from a specified language name. getT() - Method in class qupath.lib.images.servers.TileRequest. Get the time point index for this request. getT() - Method in class qupath.lib.regions.ImagePlane. Get the time point index. getT() - Method in class qupath.lib.regi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:527472,perform,performance,527472,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['perform'],['performance']
Performance,"er(DnnModelBuilder) - Static method in class qupath.opencv.dnn.DnnModels. Register a new DnnModelBuilder. registerDataOp(Class<? extends ImageDataOp>, String) - Static method in class qupath.opencv.ops.ImageOps. Register an ImageDataOp class for JSON serialization/deserialization. registerDnnModel(Class<T>, String) - Static method in class qupath.opencv.dnn.DnnModels. Register a new DnnModel class for JSON serialization/deserialization. registerDnnModel(Class<T>, String) - Static method in class qupath.opencv.dnn.DnnTools. Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. registerOp(Class<? extends ImageOp>, String) - Static method in class qupath.opencv.ops.ImageOps. Register an ImageOp class for JSON serialization/deserialization. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, Shape, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, RegionRequest, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; registerSubtype(Class<? extends ObjectClassifier>) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. Register a new ObjectClassifier subtype for compatibility with Gson serialization. registerSubtype(Class<? extends T>) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using the default label (the simple name of the class). registerSubtype(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using a custom label. registerTool(QuPathViewer) - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; registerTool(QuPathViewer) - Method in interface qupath.lib.gui.viewer.tools.PathTool. Register t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:840577,queue,queue,840577,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['queue'],['queue']
Performance,"erLoadCommand. Constructor. ObjectClassifiers - Class in qupath.lib.classifiers.object. Helper class for creating ObjectClassifiers. ObjectClassifiers() - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers;  ; ObjectClassifiers.ClassifyByMeasurementBuilder<T> - Class in qupath.lib.classifiers.object. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory - Class in qupath.lib.classifiers.object. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. objectCountPostfix() - Method in class qupath.lib.objects.PathObject;  ; ObjectDescriptionPane<T> - Class in qupath.lib.gui.panes. Wraps a pane used to display an object description, if one is available. ObjectDetector<T> - Interface in qupath.lib.plugins. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements - Class in qupath.lib.analysis.features. Experimental class to generate object measurements. ObjectMeasurements() - Constructor for class qupath.lib.analysis.features.ObjectMeasurements;  ; ObjectMeasurements.Compartments - Enum Class in qupath.lib.analysis.features. Cell compartments. ObjectMeasurements.Measurements - Enum Class in qupath.lib.analysis.features. Requested intensity measurements. ObjectMeasurements.ShapeFeatures - Enum Class in qupath.lib.analysis.features. Standard measurements that may be computed from shapes. ObjectMerger - Class in qupath.lib.objects.utils. Helper class for merging objects using different criteria. ObjectPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; ObjectsMenuActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.Annotatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:718013,perform,perform,718013,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['perform'],['perform']
Performance,"eractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.superpixels.SLICSuperpixelsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SLICSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels; ; This largely follows the description at:; ; Radhakrishna Achanta, Appu Shaji, Kevin Smith, Aurelien Lucchi, Pascal Fua, and Sabine Süsstrunk ; SLIC Superpixels Compared to State-of-the-art Superpixel Methods ; IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 34, num. 11, p. 2274 - 2282, May 2012.; ; ; It doesn't follow the code made available by the authors, and differs in some details. ; ; For example, the 'spacing' parameter is also used to determine the resolution at which the superpixel computation ; is performed, and a Gaussian filter is used to help reduce textures in advance.; It is also possible to use color deconvolved images, rather than transforming RGB to CIELAB. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SLICSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:1522,perform,performed,1522,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['perform'],['performed']
Performance,"erlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be set. double; getDefaultZoomFactor(). The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). protected Shape; getDisplayedClipShape(Shape clip). Transform a clip shape into image coordinates for this viewer. Shape; getDisplayedRegionShape(). Get a shape corresponding to the region of the image currently visible in this viewer. double; getDownsampleFactor(). Get the current downsample factor. protected String; getFullLocationString(boolean useCalibratedUnits). Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. double; getFullMagnification(). Get the full magnification for the image. double; getGamma(). Get the gamma value used for this viewer. LookupOp; getGammaOp(). Get a LookupOp that can perform any requested gamma correction in this viewer. PathObjectHierarchy; getHierarchy(). Get the object hierarchy for the current image data, or null if no image data is available. ImageData<BufferedImage>; getImageData(). Get the image data currently being displayed within thie viewer. ImageDisplay; getImageDisplay(). Get the ImageDisplay object used to determine how the image is converted to RGB for display. String; getImageObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. ImagePlane; getImagePlane(). Get the ImagePlane currently being displayed, including z and t positions. DefaultImageRegionStore; getImageRegionStore(). Get the region store used by this viewer for tile caching and painting. double; getMagnification(). Get the magnification for the image within this viewer, or Double.NaN if no image is present. double; getMaxDownsample(). Get the maximum downsamp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:4840,perform,perform,4840,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['perform'],['perform']
Performance,"erredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getPreferredPixelSizeMicrons(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get the preferred pixel size that would be used for the specified ImageData and ParameterList. getPreferredResolutionLevel(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. getPreferredTileHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile height, which can be used to optimize pixel requests for large images. getPreferredTileWidth() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile width, which can be used to optimize pixel requests for large images. getPreferredUriImageSupport(Class<T>, String, String...) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. getPreprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any preprocessing steps that should be applied. getPressure() - Method in interface qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager. Returns a pressure value, between 0 and 1. getPreviousSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getPreviousURI() - Method in interface qupath.lib.projects.Project. Sometimes projects move (unfortunately). getProbabilityColorModel32Bit(List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing 32-bit (pseudo-)probabilities for multiple channels. getProbabilityColorModel8Bit(List<Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:490679,optimiz,optimize,490679,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['optimiz'],['optimize']
Performance,"erty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current selected font. fontSizeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; forceOverlayUpdate() - Method in class qupath.lib.gui.viewer.QuPathViewer. Force the overlay displaying detections and annotations to be repainted. formatNumber(double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using the default Locale. formatNumber(Locale, double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using a specified Locale. FORUM - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; framework(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the deep learning framework that can use the model. framework(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the framework (used to identify the appropriate loader for the model). FRAMEWORK_MXNET - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify MXNet. FRAMEWORK_ONNX_RUNTIME - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify ONNX Runtime. FRAMEWORK_OPENCV_DNN - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify OpenCV DNN. FRAMEWORK_PYTORCH - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify PyTorch. FRAMEWORK_TENSORFLOW - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow. FRAMEWORK_TF_LITE - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow Lite. from2D(double[][]) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. fromArray(String...) - Static method in class qupath.lib.objects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:313124,load,loader,313124,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loader']
Performance,"erver<BufferedImage>. public class PixelClassificationImageServer; extends AbstractTileableImageServer; ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Constructor. PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a random UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). BufferedImage; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. PixelClassifier; getClassifier(). Get the PixelClassifier performing the classification. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. ImageData<BufferedImage>; getImageData(). Get the underlying ImageData used for classification. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.ser",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:1665,perform,performing,1665,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['perform'],['performing']
Performance,"escription; static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders). Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder). Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. List<ImageServerBuilder.ServerBuilder<T>>; getBuilders(). Get a list of ServerBuilders, one for each image that can be read based on the specified URI. Class<? extends ImageServerBuilder<T>>; getProviderClass(). Get the class of the associated ImageServerBuilder. float; getSupportLevel(). Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders); Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builders - ; Returns:. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder); Create a ImageSe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html:2071,perform,performance,2071,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,1,['perform'],['performance']
Performance,"ested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class AbstractTileableImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. Direct Known Subclasses:; BioFormatsImageServer, LabeledImageServer, OpenslideImageServer, PathHierarchyImageServer, PixelClassificationImageServer, RenderedImageServer, SparseImageServer, WrappedBufferedImageServer. public abstract class AbstractTileableImageServer; extends AbstractImageServer<BufferedImage>; Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles.; ; The actual request is then handled by assembling the tiles, resizing as required.; This makes it possible to cache tiles and reuse them more efficiently, and often requires less effort ; to implement a new ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractTileableImageServer();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected boolean; allowSmoothInterpolation(). Returns true if this server is permitted to use smooth interpolation when resizing. protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. protected BufferedImage; getEmptyTile(int width,; int height);  ; protected BufferedImage; getEmptyTile(int width,; int height,; boolean doCache). Create an empty tile for this server, using the default color model. protected BufferedImage; getTile(TileRequest tileRequest). Get a tile for the request - ideally from the c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:1142,cache,cache,1142,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['cache'],['cache']
Performance,"ested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image has 0 in the background and retains the original (after conversion to 8-bit); value in the foreground (typically 1 or 255). Parameters:; mat - the image to thin. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html:1840,perform,performed,1840,javadoc/docs/qupath/opencv/tools/Thinning.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html,1,['perform'],['performed']
Performance,"etServerType(); A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getAssociatedImageList; List<String> getAssociatedImageList(); Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Returns:; See Also:. getAssociatedImage(String). getAssociatedImage; T getAssociatedImage(String name); Get the image for a given associated image name. Parameters:; name - ; Returns:; See Also:. getAssociatedImageList(). isEmptyRegion; boolean isEmptyRegion(RegionRequest request); Test whether a region is empty, i.e. it contains nothing to be painted (e.g. the server paints objects; but there are no objects present in the region) and readBufferedImage(RegionRequest region) would return null.; ; This makes it possible to avoid a (potentially more expensive) request to readRegion(RegionRequest),; or to add it to a request queue, if we know there will be nothing to show for it.; ; Note: if this method returns true, it is safe to assume readBufferedImage would return null.; However, even if the method returns false it is possible that the region is still empty -; the purpose of this method is to assist performance, and it should return quickly.; Therefore if the calculations needed to identify if the region is empty are too onerous, it may conservatively return false. Parameters:; request - ; Returns:. getPixelType; PixelType getPixelType(); The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Returns:. getChannel; ImageChannel getChannel(int channel); Request information for one channel (0-based index). Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getMetadata; ImageServerMetadata getMetadata(); Get essential metadata associated with the ImageServer as a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:12439,queue,queue,12439,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['queue'],['queue']
Performance,"eters:; imageData - the image data; densityMap - builder to generate a density map; channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the current image. Parameters:; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image for which the density map should be generated; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creatin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:136498,load,load,136498,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['load']
Performance,"ewer.overlays; Class PixelClassificationOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. All Implemented Interfaces:; PathOverlay. public class PixelClassificationOverlay; extends AbstractImageOverlay; PathOverlay that gives the results of pixel classification. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageRenderer>; renderer. Get the ImageRenderer property used with this overlay. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearCache(). Clear any cached tiles. static PixelClassificationOverlay; create(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; Map<ImageData<BufferedImage>,ImageServer<BufferedImage>> map,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier). Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; threads for classification. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier,; int nThreads). Create an overlay to display the live application of a PixelClassifier to an image. static PixelClassificationOverlay; createFeatureDi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:1365,cache,cached,1365,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['cache'],['cached']
Performance,"fier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageSer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:6993,cache,cached,6993,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,2,['cache'],['cached']
Performance,"files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.Styl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3820,perform,performed,3820,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['perform'],['performed']
Performance,"final String FRAMEWORK_ONNX_RUNTIME; Default name to identify ONNX Runtime. See Also:. Constant Field Values. FRAMEWORK_OPENCV_DNN; public static final String FRAMEWORK_OPENCV_DNN; Default name to identify OpenCV DNN. See Also:. Constant Field Values. FRAMEWORK_PYTORCH; public static final String FRAMEWORK_PYTORCH; Default name to identify PyTorch. See Also:. Constant Field Values. FRAMEWORK_MXNET; public static final String FRAMEWORK_MXNET; Default name to identify MXNet. See Also:. Constant Field Values. Method Details. getFramework; public String getFramework(); Get the name of the deep learning framework that may be used.; If null, consumers may try to infer this from any URIs. Returns:. getURIs; public List<URI> getURIs(); Get the URIs associated with the model (e.g. weights and/or config files). Returns:. getInputs; public Map<String,DnnShape> getInputs(); Get the requested inputs and their shapes. Returns:; the inputs, if known, or null otherwise. getOutputs; public Map<String,DnnShape> getOutputs(); Get the expected outputs and their shapes. Returns:; the outputs, if known, or null otherwise. getLayout; public String getLayout(); Get a string representing the axes layout that the model expects as input.; This should follow the Bioimage Model Zoo spec, and include only the characters ""bixyczt"". Returns:. requestLazyInitialize; public boolean requestLazyInitialize(); Request that any model is loaded lazily on demand.; ; This can be useful to avoid blocking at some inopportune point in the code, ; but means that any exceptions associated with model initialization will ; probably not be thrown until the model is used. Returns:. builder; public static DnnModelParams.Builder builder(DnnModelParams params); Create a new params builder, initialized with the values from existing ; params. Parameters:; params - ; Returns:; a new builder. builder; public static DnnModelParams.Builder builder(); Create a new params builder, with default values. Returns:; a new builder. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html:4296,load,loaded,4296,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,1,['load'],['loaded']
Performance,"for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileListener(TileListener<BufferedImage> listener);  ; protected Object; requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWaiting(RegionRequest request);  ; protected void; workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker). Every TileWorker should call this when the task is done!. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. paintTileBorders; protected static boolean paintTileBorders. tileListeners; protected List<TileListener<BufferedImage>> tileListeners. cache; protected Map<RegionRequest,BufferedImage> cache. thumbnailCache; protected Map<RegionRequest,BufferedImage> thumbnailCache. Method Details. paintRegionCompletely; public void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds); Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). Specified by:; paintRegionCompletely in interface ImageRegionRenderer; Parameters:; server - ; g - ; clipShapeVisible - ; zPosition - ; tPosition - ; downsampleFactor - ; observer - ; imageDisplay - ; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; public void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; Buf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:4308,cache,cache,4308,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,2,['cache'],['cache']
Performance,"for the channel with all object counts (not always present). See Also:. Constant Field Values. PROJECT_LOCATION; public static final String PROJECT_LOCATION; Default location to use when storing density maps in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Constructor Details. DensityMaps; public DensityMaps(). Method Details. builder; public static DensityMaps.DensityMapBuilder builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter); Create a new DensityMaps.DensityMapBuilder to generate a customized density map. Parameters:; mainObjectFilter - predicate to identify which objects will be included in the density map; Returns:; the builder. builder; public static DensityMaps.DensityMapBuilder builder(DensityMaps.DensityMapBuilder builder); Create a new DensityMaps.DensityMapBuilder initialized with the same properties as an existing builder. Parameters:; builder - the existing builder; Returns:; the new builder. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(Path path); throws IOException; Load a DensityMaps.DensityMapBuilder from the specified path. Parameters:; path - ; Returns:; Throws:; IOException. threshold; public static boolean threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Threshold a single channel of a density map to generate new annotations. Parameters:; hierarchy - hierarchy to which objects should be added; densityServer - density map; channel - channel to threshold; this is also used to determine the class name for the created annotations; threshold - threshold value; options - additional objects when creating the annotations; Returns:; true if changes were made, false otherwise; Throws:; IOException. threshold; public static boolean threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:4315,load,loadDensityMap,4315,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,1,['load'],['loadDensityMap']
Performance,"ge (to a separate PNG). linkImages() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether the underlying (raster) image should be included in any export. loadDensityMap(String) - Static method in class qupath.lib.scripting.QP. Load a density map for a project or file path. loadDensityMap(Path) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Load a DensityMaps.DensityMapBuilder from the specified path. loadDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Load a display settings object from a file path or from the current project. loadImageData(String, boolean) - Static method in class qupath.lib.scripting.QP. Deprecated. loadObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Load an object classifier for a project or file path. loadPixelClassifier(String) - Static method in class qupath.lib.scripting.QP. Load a pixel classifier for a project or file path. loadProject(File, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Load a project from a local file. loadProject(URI, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Read project from URI. LoadResourceCommand<S> - Class in qupath.process.gui.commands.ui. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns - Class in qupath.lib.analysis.features. Initial test implementation of Local Binary Patterns. LocalBinaryPatterns() - Constructor for class qupath.lib.analysis.features.LocalBinaryPatterns;  ; LocalBinaryPatternsPlugin - Class in qupath.lib.algorithms. Calculate local binary pattern features. LocalBinaryPatternsPlugin() - Constructor for class qupath.lib.algorithms.LocalBinaryPatternsPlugin. Default constructor. localeDefault - Variable in class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; localeDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; localeFormat - Variable in class qupath.lib.gui.pane",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:653978,load,loadProject,653978,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loadProject']
Performance,"ge tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(Integer) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color. getCachedColor(Integer) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color. getCachedColor(Integer, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color, explicitly stating whether alpha should be included or not. getCachedColor(Integer, boolean) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color, explicitly stating whether alpha should be included or not. getCachedMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. getCachedMeasurementValue(ROI, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. getCachedRegion(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedStroke(double) - Static method in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:344855,cache,cached,344855,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cached']
Performance,"geServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:7748,cache,cached,7748,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,2,['cache'],['cached']
Performance,"ght); throws IOException. Throws:; IOException. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height,; boolean doCache); throws IOException; Create an empty tile for this server, using the default color model. Parameters:; width - ; height - ; doCache - ; Returns:; Throws:; IOException. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Returns:; Throws:; IOException. readTile; protected abstract BufferedImage readTile(TileRequest tileRequest); throws IOException; Read a single image tile. Parameters:; tileRequest - ; Returns:; Throws:; IOException. getTile; protected BufferedImage getTile(TileRequest tileRequest); throws IOException; Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. Parameters:; tileRequest - ; Returns:; Throws:; IOException. createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Parameters:; width - ; height - ; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:4469,cache,cache,4469,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,2,['cache'],['cache']
Performance,"gumentException; Apply an object classifier to the specified ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; imageData - ; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier within the current project, or file paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:131953,load,loadDensityMap,131953,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadDensityMap']
Performance,"h is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). findDensityMapHotspots; public static void findDensityMapHotspots(String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map for the current image. Parameters:; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:133983,load,loadDensityMap,133983,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadDensityMap']
Performance,"h. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. ToolManager. Manage (drawing) tool selection in a QuPath UI. UndoRedoManager. Helper class to add undo/redo support to QuPath. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. WelcomeStage. Welcome page when launching QuPath. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:1770,load,loading,1770,javadoc/docs/qupath/lib/gui/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html,1,['load'],['loading']
Performance,"handlers.PathToolEventHandlers;  ; createLineROI(double, double, double, double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a line ROI with start and end coordinates. createLineROI(double, double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a ROI representing a line with zero length. createListCell() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a ListCell for displaying a PathObject using the default PathObject.toString() method. createListCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. createListSelectionView() - Static method in class qupath.lib.gui.tools.GuiTools. Create a new ListSelectionView. createLoadDensityMapCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a density map and display it in all viewers. createLoadPixelClassifierCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a pixel classifier and display it in all viewers. createLogFiles - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:194378,load,load,194378,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['load']
Performance,"he downsample value of the server. lineWidthProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Line width property used for displaying threshold lines. LINK - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Link the image (to a separate PNG). linkImages() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether the underlying (raster) image should be included in any export. loadDensityMap(String) - Static method in class qupath.lib.scripting.QP. Load a density map for a project or file path. loadDensityMap(Path) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Load a DensityMaps.DensityMapBuilder from the specified path. loadDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Load a display settings object from a file path or from the current project. loadImageData(String, boolean) - Static method in class qupath.lib.scripting.QP. Deprecated. loadObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Load an object classifier for a project or file path. loadPixelClassifier(String) - Static method in class qupath.lib.scripting.QP. Load a pixel classifier for a project or file path. loadProject(File, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Load a project from a local file. loadProject(URI, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Read project from URI. LoadResourceCommand<S> - Class in qupath.process.gui.commands.ui. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns - Class in qupath.lib.analysis.features. Initial test implementation of Local Binary Patterns. LocalBinaryPatterns() - Constructor for class qupath.lib.analysis.features.LocalBinaryPatterns;  ; LocalBinaryPatternsPlugin - Class in qupath.lib.algorithms. Calculate local binary pattern features. LocalBinaryPatternsPlugin() - Constructor for class qupath.lib.algorithms.Lo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:653712,load,loadObjectClassifier,653712,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loadObjectClassifier']
Performance,"he underlying (raster) image should be included in any export. loadDensityMap(String) - Static method in class qupath.lib.scripting.QP. Load a density map for a project or file path. loadDensityMap(Path) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Load a DensityMaps.DensityMapBuilder from the specified path. loadDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Load a display settings object from a file path or from the current project. loadImageData(String, boolean) - Static method in class qupath.lib.scripting.QP. Deprecated. loadObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Load an object classifier for a project or file path. loadPixelClassifier(String) - Static method in class qupath.lib.scripting.QP. Load a pixel classifier for a project or file path. loadProject(File, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Load a project from a local file. loadProject(URI, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Read project from URI. LoadResourceCommand<S> - Class in qupath.process.gui.commands.ui. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns - Class in qupath.lib.analysis.features. Initial test implementation of Local Binary Patterns. LocalBinaryPatterns() - Constructor for class qupath.lib.analysis.features.LocalBinaryPatterns;  ; LocalBinaryPatternsPlugin - Class in qupath.lib.algorithms. Calculate local binary pattern features. LocalBinaryPatternsPlugin() - Constructor for class qupath.lib.algorithms.LocalBinaryPatternsPlugin. Default constructor. localeDefault - Variable in class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; localeDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; localeFormat - Variable in class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; LocalePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:654096,load,loadProject,654096,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loadProject']
Performance,"hics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. clearCache; public void clearCache(); Clear any cached tiles. stop; public void stop(); Stop the overlap, halting any pending tile requests. getLocationString; public String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); Description copied from interface: PathOverlay; Get a location string to display when showing a specified image.; ; The default implementation returns null.; If subclasses override this method, they must return quickly, as it may be used to determine text to display as the mouse ; moves over an image. Specified by:; getLocationString in interface PathOverlay; Overrides:; getLocationString in class AbstractOverlay; Parameters:; imageData - ; x - x-coordinate, in the image space (not the viewer component space); y - y-coordinate, in the image space (not the viewer component space); z - z-index for the region currently being viewed; t - t-index for the region curr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:10183,perform,performance,10183,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['perform'],['performance']
Performance,"hod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. Parameters:; files - a collection of jar files for installation. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1650,load,loaded,1650,javadoc/docs/qupath/lib/gui/ExtensionManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html,4,['load'],"['loaded', 'loading']"
Performance,"hod; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:2190,perform,perform,2190,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,1,['perform'],['perform']
Performance,"hod; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:2030,perform,perform,2030,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,1,['perform'],['perform']
Performance,"hodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static void; watershedExpandLabels(ImageProcessor ipLabels,; double maxDistance,; boolean conn8). Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. watershedExpandLabels; public static void watershedExpandLabels(ImageProcessor ipLabels,; double maxDistance,; boolean conn8); Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging.; The expansion is performed in-place. Parameters:; ipLabels - labeled image, where values ≤ 0 represent the background; maxDistance - maximum expansion distance, in pixels; conn8 - if true, use 8-connectivity. doWatershed; public static void doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; boolean conn8); Apply a watershed transform. Parameters:; ip - intensity image; ipLabels - starting locations; conn8 - if true, use 8-connectivity rather than 4-connectivity. doWatershed; public static void doWatershed(ImageProcessor ip,; ImageProcessor ipLabels,; double minThreshold,; boolean conn8); Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. Parameters:; ip - intensity image; ipLabels - starting locations; minThreshold - minimum threshold; conn8 - if true, use 8-connectivity rather than 4-connectivity. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/Watershed.html:1778,perform,performed,1778,javadoc/docs/qupath/imagej/processing/Watershed.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/Watershed.html,1,['perform'],['performed']
Performance,"ib.objects.classes.PathClassTools. Return true if the PathClass is null, its name is null or if it is equal ; to the special case of 'Unclassified' path object. isNumericMeasurement(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Query whether a named measurement returns a numeric value only. isObjectClassificationEvent() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if the event indicates that object classifications have changed. isObjectMeasurementEvent() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if the event indicates that object measurements have changed. isOnePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Returns true if the name of the class is ""1+"", indicating a weakly-positive staining. isOpenSlideAvailable() - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Query whether OpenSlide has already been loaded. isOverviewVisible() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Returns true if the image overview is visible, false otherwise. isPathClassHidden(PathClass) - Method in class qupath.lib.gui.viewer.OverlayOptions. Query whether objects with a specified classification should be displayed or hidden. isPoint() - Method in class qupath.lib.roi.AreaROI;  ; isPoint() - Method in class qupath.lib.roi.EllipseROI;  ; isPoint() - Method in class qupath.lib.roi.GeometryROI;  ; isPoint() - Method in class qupath.lib.roi.LineROI;  ; isPoint() - Method in class qupath.lib.roi.PointsROI;  ; isPoint() - Method in class qupath.lib.roi.PolygonROI;  ; isPoint() - Method in class qupath.lib.roi.PolylineROI;  ; isPoint() - Method in class qupath.lib.roi.RectangleROI;  ; isPoint() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI represents distinct (unconnected) points. isPositiveClass(PathClass) - Static method in class qupath.lib.objects.c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:628911,load,loaded,628911,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loaded']
Performance,"ic List<TMACoreObject>; getTMACoreList(). Get the list of TMA core objects for the current hierarchy. static boolean; hasMeasurement(PathObject pathObject,; String measurementName). Test whether a PathObject has a specified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an inverse annotation using the current ImageData and its current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation using t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:21762,load,loadImageData,21762,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadImageData']
Performance,"ic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1926,load,loadClass,1926,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,2,['load'],['loadClass']
Performance,"id. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interface ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. toString; public String toString(). getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back after",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:5214,cache,caches,5214,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['cache'],['caches']
Performance,"ide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:7180,cache,cached,7180,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,2,"['cache', 'perform']","['cached', 'performance']"
Performance,"iding lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitAllAnnotationAreasByLines; public static boolean splitAllAnnotationAreasByLines(double thickness,; boolean removeLines); Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). splitAllAnnotationAreasByLines; public static boolean splitAllAnnotationAreasByLines(PathObjectHierarchy hierarchy); Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitAllAnnotationAreasByLines; public static boolean splitAllAnnotationAreasByLines(PathObjectHierarchy hierarchy,; double thickness,; boolean removeLines); Split annot",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:116984,perform,performing,116984,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['perform'],['performing']
Performance,"idity and/or ; insertion for the completion. boolean; isCompatible(String text,; int pos,; String lastToken). Test if this completion is compatible with the provided text. Method Details. getCompletionText; String getCompletionText(); Get the text that should be inserted for the full completion. Returns:. getDisplayText; String getDisplayText(); Get the text that should be displayed for this completion.; This which may include additional information that isn't part of the completion itself; (e.g. method parameters, return type). Returns:. getInsertion; String getInsertion(String text,; int pos,; String lastToken); Get the string to insert, given the provided text and position.; This involves stripping off any overlapping part of the completion, ; so that it can be inserted at pos. Parameters:; text - the full text; pos - the current caret position; lastToken - the final token, as output by getTokenizer().; If null, the token will be calculated - but it can improve performance to precompute ; tokens whenever multiple completions use the same way of determining tokens.; Returns:; the text to insert. isCompatible; boolean isCompatible(String text,; int pos,; String lastToken); Test if this completion is compatible with the provided text. Parameters:; text - the full text; pos - the current caret position; lastToken - the final token, as output by getTokenizer().; If null, the token will be calculated - but it can improve performance to precompute ; tokens whenever multiple completions use the same way of determining tokens.; Returns:. getTokenizer; default AutoCompletions.CompletionTokenizer getTokenizer(); Get the tokenizer needed to extract the relevant bit of the text to determine the validity and/or ; insertion for the completion.; ; Important! This exists for efficiency, so that if many completions use the same tokenizer, ; the (possibly long) text does not need to be re-tokenized each time.; It is therefore important to return a shared instance, rather than a new ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html:2260,perform,performance,2260,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html,1,['perform'],['performance']
Performance,"ield Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb,; boolean hasAlpha); Get cached color, explicitly stating whether alpha should be included or not. Parameters:; rgb - ; hasAlpha - ; Returns:. getRGB; public static int getRGB(Color color); Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Parameters:; color - ; Returns:. getARGB; public static int getARGB(Color color); Get a packed int (ARGB) representation of a Color object. Parameters:; color - ; Returns:. getDisplayedColor; public static Color getDisplayedColor(PathObject pathObject); Get a Color appropriate for displaying an object. Parameters:; pathObject - ; Returns:; See Also:. getDisplayedColorARGB(PathObject). getPathClassColor; public static Color getPathClassColor(PathClass pathClass); Get a Color appropriate for displaying a PathClass. Parameters:; pathClass - ; Returns:. getColorWithOpacityFX; public static Color getColorWithOpacityFX(Integer rgb,; double opacity); Get a Color from a packed RGB value, setting the alpha component to match the desired o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:3583,cache,cached,3583,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,1,['cache'],['cached']
Performance,"ield; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class DefaultImageRegionStore. java.lang.Object; qupath.lib.gui.images.stores.DefaultImageRegionStore. All Implemented Interfaces:; ImageRegionRenderer. public class DefaultImageRegionStore; extends Object; implements ImageRegionRenderer; An ImageRegionStore suitable for either Swing or JavaFX applications. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected Map<RegionRequest,BufferedImage>; cache;  ; protected static boolean; paintTileBorders;  ; protected Map<RegionRequest,BufferedImage>; thumbnailCache;  ; protected List<TileListener<BufferedImage>>; tileListeners;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addTileListener(TileListener<BufferedImage> listener);  ; void; clearCache(). Clear the cache, including thumbnails, and cancel any pending requests. void; clearCache(boolean clearThumbnails,; boolean stopWaiting). Clear the cache, optionally including thumbnails and stopping any pending requests. void; clearCacheForRequestOverlap(RegionRequest request);  ; void; clearCacheForServer(ImageServer<BufferedImage> server);  ; void; close();  ; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<RegionRequest,BufferedImage>; getCachedTilesForServer(ImageServer<BufferedImage> server). Get a map ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:1193,cache,cache,1193,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['cache'],['cache']
Performance,"ietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, false otherwise. openImage; public static OpenSlide openImage(String path); throws IOException; Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata.; ; This will attempt to load OpenSlide if it has not already been loaded, throwing an IOException if; this fails.; Use isOpenSlideAvailable() to check whether OpenSlide is available before calling this. Parameters:; path - the image path (usually an absolute file path); Returns:; an OpenSlide instance; Throws:; IOException - if OpenSlide could not be loaded failed to open the file. detectVendor; public static String detectVendor(String path); Try to detect the vendor of the image at the specified path.; This will attempt to load OpenSlide if it has not already ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:2687,load,loaded,2687,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['load'],['loaded']
Performance,"ilder<T>>; getInstalledImageServerBuilders(Class<T> imageClass). Request all available ImageServerBuilders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cache - ; cls - . getCache; public static <T> Map<RegionRequest,T> getCache(Class<T> cls); Get the cache in use for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cls - ; Returns:. setServiceLoader; public static void setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader); Replace the default service loader with another.; ; This can be handy if the ServiceLoader should be using an alternative ClassLoader,; e.g. to auto-discover ImageServerBuilders in alternative directories. Parameters:; newLoader - . getInstalledImageServerBuilders; public static List<ImageServerBuilder<?>> getInstalledImageServerBuilders(); Request all available ImageServerBuilders. Returns:. getInstalledImageServerBuilders; public static <T> List<ImageServerBuilder<T>> getInstalledImageServerBuilders(Class<T> imageClass); Request all available ImageServerBuilders supporting a gi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:2357,cache,cache,2357,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,2,['cache'],['cache']
Performance,"ile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParentOrProxy; public PathObject getParentOrProxy(); Get the parent, or a proxy parent if one has been specified.; The proxy parent is used to provide a temporary parent object for tiled processing, when using the parent; dire",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:2542,cache,cached,2542,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,1,['cache'],['cached']
Performance,"iling zeros are not shown).; ; Important note: this always formats as 1.234 rather than 1,234 - regardless of Locale.; Consequently its results are more predictable... but may not be consistent with other number formatting on ; the specified platform. Parameters:; nDecimalPlaces - ; Returns:. formatNumber; public static String formatNumber(double value,; int maxDecimalPlaces); Format a value with a maximum number of decimal places, using the default Locale. Parameters:; value - ; maxDecimalPlaces - ; Returns:. formatNumber; public static String formatNumber(Locale locale,; double value,; int maxDecimalPlaces); Format a value with a maximum number of decimal places, using a specified Locale. Parameters:; locale - ; value - ; maxDecimalPlaces - ; Returns:. parseArgStringValues; public static Map<String,String> parseArgStringValues(String s); Parse the contents of a JSON String.; ; Note that this is pretty unsophisticated... also, no localization is performed (using Java's Locales, for example) -; so that decimal values should be provided in the form 1.234 (and not e.g. 1,234). Parameters:; s - ; Returns:. micrometerSymbol; public static final String micrometerSymbol(); Get a string to represent um (but with the proper 'mu' symbol). Returns:. readFileAsString; public static String readFileAsString(String path); throws IOException; Read the entire contents of a file given by the specified path into a single String.; ; Note that from QuPath v0.3 this assumes UTF8 encoding. ; Previously, platform-specific encoding was assumed. Parameters:; path - ; Returns:; Throws:; IOException. readFileAsString; public static String readFileAsString(File file); throws IOException; Read the entire contents of a file into a single String.; ; Note that from QuPath v0.3 this assumes UTF8 encoding. ; Previously, platform-specific encoding was assumed. Parameters:; file - ; Returns:; Throws:; IOException. readInputStreamAsString; public static String readInputStreamAsString(InputStream stream)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:17247,perform,performed,17247,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['perform'],['performed']
Performance,"images.stores; Class DefaultImageRegionStore. java.lang.Object; qupath.lib.gui.images.stores.DefaultImageRegionStore. All Implemented Interfaces:; ImageRegionRenderer. public class DefaultImageRegionStore; extends Object; implements ImageRegionRenderer; An ImageRegionStore suitable for either Swing or JavaFX applications. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected Map<RegionRequest,BufferedImage>; cache;  ; protected static boolean; paintTileBorders;  ; protected Map<RegionRequest,BufferedImage>; thumbnailCache;  ; protected List<TileListener<BufferedImage>>; tileListeners;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addTileListener(TileListener<BufferedImage> listener);  ; void; clearCache(). Clear the cache, including thumbnails, and cancel any pending requests. void; clearCache(boolean clearThumbnails,; boolean stopWaiting). Clear the cache, optionally including thumbnails and stopping any pending requests. void; clearCacheForRequestOverlap(RegionRequest request);  ; void; clearCacheForServer(ImageServer<BufferedImage> server);  ; void; close();  ; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<RegionRequest,BufferedImage>; getCachedTilesForServer(ImageServer<BufferedImage> server). Get a map of all cached tiles pertaining to a specific ImageServer. BufferedImage; getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:1330,cache,cache,1330,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['cache'],['cache']
Performance,"in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:107972,cache,cached,107972,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cached']
Performance,"in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the control is focused. requestFocus() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; requestFollowCaret() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFollowCaret() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the X and Y scrolls are adjusted to ensure the caret is visible. requestFullUpdateCheck() - Method in class qupath.lib.gui.QuPathGUI. Request a manual update check in a background thread. requestHierarchyUpdate() - Method in class qupath.lib.plugins.AbstractPlugin. Optionally request a hierarchy update after the tasks have run. requestImageTile(ImageServer<BufferedImage>, RegionRequest, Map<RegionRequest, BufferedImage>, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Request an image tile. requestLazyInitialize() - Method in class qupath.opencv.dnn.DnnModelParams. Request that any model is loaded lazily on demand. requestNewHandle(double, double) - Method in class qupath.lib.roi.RoiEditor. Request an updated ROI with a new handle inserted - useful e.g. requestParallelization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Returns true if multiple readers may be created for different threads, to enable parallel image reading. requestParentClipping(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Query whether parent clipping should be applied. requestParentClipping(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Query whether parent clipping should be applied. requestParentClipping(MouseEvent) - Method in class qupath.process.gui.WandToolEventHandler. Query whether parent clipping should be applied. requestPixelSnapping() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Returns true if the tool requests that pixel coordinates be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:858037,load,loaded,858037,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loaded']
Performance,"ing requests. void; clearCache(boolean clearThumbnails,; boolean stopWaiting). Clear the cache, optionally including thumbnails and stopping any pending requests. void; clearCacheForRequestOverlap(RegionRequest request);  ; void; clearCacheForServer(ImageServer<BufferedImage> server);  ; void; close();  ; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<RegionRequest,BufferedImage>; getCachedTilesForServer(ImageServer<BufferedImage> server). Get a map of all cached tiles pertaining to a specific ImageServer. BufferedImage; getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache);  ; long; getTileCacheSize(). Get the tile cache size, in bytes. void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds). Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:2225,cache,cached,2225,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['cache'],['cached']
Performance,"ing path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, false otherwise. openImage; public static OpenSlide openImage(String path); throws IOException; Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:2095,load,loaded,2095,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['load'],['loaded']
Performance,"inimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the current image. Parameters:; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image for which the density map should be generated; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:136783,load,loadDensityMap,136783,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadDensityMap']
Performance,"ining the annotation; pathObjects - the annotation to invert; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. runObjectClassifier; public static void runObjectClassifier(String... names); throws IllegalArgumentException; Apply an object classifier to the current ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. runObjectClassifier; public static void runObjectClassifier(ImageData imageData,; String... names); throws IllegalArgumentException; Apply an object classifier to the specified ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; imageData - ; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier within the current project, or file paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:131250,load,load,131250,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['load']
Performance,"int requests that come in between are simply disregarded for performance.); ; When finished, it's necessary to call resetMinimumRepaintSpacingMillis() to make sure that ; normal service is resumed. Parameters:; repaintSpacingMillis - ; See Also:. resetMinimumRepaintSpacingMillis(). resetMinimumRepaintSpacingMillis; public void resetMinimumRepaintSpacingMillis(); Return to processing all repainting requests.; ; Note: calling this command triggers a repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that require any cached thumbnail to also be updated (e.g. changing the ; brightness/contrast or lookup table). In such cases repaintEntireImage() is required. See Also:. repaintEntireImage(). getMinDownsample; public double getMinDownsample(); Get the minimum downsample value supported by this viewer.; This prevents zooming in by an unreasonably large amount. Returns:. getMaxDownsample; public double getMaxDownsample(); Get the maximum downsample value supported by this viewer.; This prevents zooming out by an unreasonably large amount. Returns:. zoomOut; public void zoomOut(int nSteps); Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . zoomIn; public void zoomIn(int nSteps); Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . getDefaultZoomFactor; public double getDefaultZoomFactor(); The amount by which the downsample factor is ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:16768,cache,cached,16768,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['cache'],['cached']
Performance,"interface: ImageServer; The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Specified by:; getPixelType in interface ImageServer<T>; Returns:. finalize; protected void finalize(); throws Throwable; Attempt to close the server. While not at all a good idea to rely on this, it may help clean up after some forgotten servers. Overrides:; finalize in class Object; Throws:; Throwable. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Always returns false. Specified by:; isEmptyRegion in interface ImageServer<T>; Parameters:; request - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. getCachedTile; public T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<T>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. createID; protected abstract String createID(); Create a unique ID for the server, which can be returned as the default value of getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever getPath() is first required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:7941,cache,cached,7941,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,2,"['cache', 'perform']","['cached', 'performance']"
Performance,"ion of QuPath's version, parsed according to the rules of semantic versioning if possible. Returns:; the current version, or null if the version is unknown or cannot be parsed from getVersion(); See Also:. getVersion(). getPackageVersion; public static String getPackageVersion(Class<?> cls); Try to determine the version of a jar containing a specified class.; This first checks the implementation version in the package, then looks for a VERSION ; file stored as a resource. Parameters:; cls - class used to identify the package; Returns:; the version, if available, or null if no version is known. getExtension; public static Optional<String> getExtension(File file); Get filename extension. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String inva",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:8614,perform,performed,8614,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['perform'],['performed']
Performance,"ionally set a custom ColorModel.; This makes it possible to display the BufferedImage with a different color model than its ; original model. Parameters:; colorModel - . getColorModel; public ColorModel getColorModel(). Returns:; the custom color model, if any is found. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. getRegionMap; public Map<ImageRegion,BufferedImage> getRegionMap(); Get an unmodifiable Map containing image regions to paint on this overlay. Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:6800,perform,performed,6800,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,2,['perform'],"['performance', 'performed']"
Performance,"ished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSettingsPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<ImageDisplay>; imageDisplayObjectProperty(). The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManagerProperty(). The resource manager used to handle saving/loading. Methods inherited from class javafx.scene.layout.GridPane; add, add, addColumn, addRow, alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getCellBounds, getClassCssMetaData, getColumnConstraints, getColumnCount, getColumnIndex, getColumnSpan, getContentBias, getCssMetaData, getHalignment, getHgap, getHgrow, getMargin, getRowConstraints, getRowCount, getRowIndex, getRowSpan, getValignment, getVgap, getVgrow, gridLinesVisibleProperty, hgapProperty, isFillHeight, isFillWidth, isGridLinesVisible, layoutChildren, requestLayout, setAlignment, setColumnIndex, setColumnSpan, setConstraints, setConstraints, setConstraints, setConstraints, setConstraints, setFillHeight, setFillWidth, setGridLinesVisible, setHalignment, setHgap, setHgrow, setMargin, setRowIndex, setRowSpan, setValignment, setVgap, setVgrow, toString, vgapProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:3428,load,loading,3428,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['load'],['loading']
Performance,"istener<BufferedImage> listener). getCache; public Map<RegionRequest,BufferedImage> getCache(). removeTileListener; public void removeTileListener(TileListener<BufferedImage> listener). getCachedTile; public BufferedImage getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request). getCachedTilesForServer; public Map<RegionRequest,BufferedImage> getCachedTilesForServer(ImageServer<BufferedImage> server); Get a map of all cached tiles pertaining to a specific ImageServer. Parameters:; server - ; Returns:. workerComplete; protected void workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker); Every TileWorker should call this when the task is done!. Parameters:; worker - . getCachedRegion; protected BufferedImage getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request). stopWaiting; protected boolean stopWaiting(RegionRequest request). requestImageTile; protected Object requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned); Request an image tile.; There are 3 possible return values:; - a T for the tile; - the TileWorker<T> object currently charged with fetching the tile; - null, if this is the value stored in the TiledImageCache (i.e. the tile has previously been fetched, and there is no image corresponding to the request). Parameters:; server - ; request - ; cache - ; ensureTileReturned - ; Returns:. createTileWorker; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage> createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). getThumbnail; public BufferedImage getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache). clearCache; public void clearCache(); Clear the cache, including thumbnails, and cancel any pending requests. clearCache; public void clearCache(boolean clearThumbnails",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:8122,cache,cache,8122,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['cache'],['cache']
Performance,"ityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image for which the density map should be generated; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the ann",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:137347,load,load,137347,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['load']
Performance,"ject counts (not always present). static final String; PROJECT_LOCATION. Default location to use when storing density maps in a project. Constructor Summary; Constructors. Constructor; Description; DensityMaps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DensityMaps.DensityMapBuilder; builder(DensityMaps.DensityMapBuilder builder). Create a new DensityMaps.DensityMapBuilder initialized with the same properties as an existing builder. static DensityMaps.DensityMapBuilder; builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter). Create a new DensityMaps.DensityMapBuilder to generate a customized density map. static void; findHotspots(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; int nHotspots,; double radius,; double minCount,; PathClass hotspotClass,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static DensityMaps.DensityMapBuilder; loadDensityMap(Path path). Load a DensityMaps.DensityMapBuilder from the specified path. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options). Threshold a single channel of a density map to generate new annotations. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Threshold one or more channels of a density map to generate new annotations. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CHANNEL_ALL_OBJECTS; public static final String CHANNEL_ALL_OBJECTS; Channel name for the channel with all object counts (not always present). See Also:. Constant Field Values. PROJECT_LOCATION; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:2451,load,loadDensityMap,2451,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,1,['load'],['loadDensityMap']
Performance,"ject. Get the nucleus ROI for this cell. getNucleusROI(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. getNullClass() - Static method in class qupath.lib.objects.classes.PathClass. Get the value of PathClass.NULL_CLASS, used to represent no classification. getNumBins() - Method in class qupath.lib.gui.charts.HistogramDisplay. Get the requested number of bins used for the histogram. getNumericValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getNumericValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get the numeric value from an object for the specific measurement. getNumNaNs() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of NaN values added. getNumPoints() - Method in class qupath.lib.roi.AreaROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.GeometryROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolygonROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolylineROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.EllipseROI. Returns 4 (since the ellipse is defined by its bounding box). getNumPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get the number of points, as would be returned by ROI.getAllPoints(). getNumPoints() - Method in class qupath.lib.roi.LineROI. Returns 2 (since the line is defined by its end points). getNumPoints() - Method in class qupath.lib.roi.PointsROI;  ; getNumPoints() - Method in class qupath.lib.roi.RectangleROI. Returns 4 (since the rectangle is defined by its bounding box). get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:459725,cache,caches,459725,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['caches']
Performance,"jects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitSelectedAnnotationAreasByLines; public static boolean splitSelectedAnnotationAreasByLines(PathObjectHierarchy hierarchy,; double thickness,; boolean removeLines); Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). splitSpecifiedAreasByLines; public static boolean splitSpecifiedAreasByLines(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects,; double thickness,; boolean removeLines); Split the specified objects with area ROIs using dividing lines extracted from specified objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; pathObjects - the objects to split; usually annotations, but they may be any object except for TMA cores; thickness - the thickness of the line; if greater than zero, t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:121434,perform,performing,121434,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['perform'],['performing']
Performance,"lationships. resolveHierarchy(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. resolveOverlaps() - Method in class qupath.lib.plugins.ParallelTileObject. Request that the tile object attempts to resolve overlaps with its neighboring tiles. resolvePath(String) - Static method in class qupath.lib.scripting.QP. Resolve a path, replacing any placeholders. ResourceManager - Class in qupath.lib.projects. Manage the storage and retrieval of resources with a ResourceManager. ResourceManager() - Constructor for class qupath.lib.projects.ResourceManager;  ; ResourceManager.Manager<T> - Interface in qupath.lib.projects. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. resourceManagerProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSettingsPane. The resource manager used to handle saving/loading. restoreClassificationsFromMap(Map<PathObject, PathClass>) - Static method in class qupath.lib.objects.PathObjectTools. Reassign classifications to objects, as were previously obtained using PathObjectTools.createClassificationMap(Collection). retainHessian(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Optionally retain the Hessian matrix per pixel. retrieveMetadataKeys() - Method in class qupath.lib.objects.PathObject. Get the set of metadata keys. retrieveMetadataValue(String) - Method in class qupath.lib.objects.PathObject. Get a metadata value. returnToMove - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; returnToMoveModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that the GUI returns to using the PAN tool after a ROI is drawn. rgb(boolean) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify that the image stores pixels i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:867038,load,loading,867038,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loading']
Performance,"lculate the union of multiple Geometry objects. Parameters:; geometries - ; Returns:. ensurePolygonal; public static Geometry ensurePolygonal(Geometry geometry); Strip non-polygonal parts from a GeometryCollection (non-recursive). Parameters:; geometry - ; Returns:; a Geometry containing only Polygons, which may be the same as the input Geometry or empty. homogenizeGeometryCollection; public static Geometry homogenizeGeometryCollection(Geometry geometry); Ensure a GeometryCollection contains only Geometries of the same type (Polygonal, Lineal or Puntal).; Other geometries (with lower dimension) are discarded. Parameters:; geometry - ; Returns:. removeInteriorRings; public static Geometry removeInteriorRings(Geometry geometry,; double minRingArea); Fill all interior rings for the specified geometry that have an area < a specified threshold.; ; Note that this assumes that the geometry is valid, and does not contain self-intersections or overlapping pieces. ; No checks are made to confirm this (for performance reasons). Parameters:; geometry - ; minRingArea - ; Returns:. fillHoles; public static Geometry fillHoles(Geometry geometry); Fill all interior rings for the specified geometry. Parameters:; geometry - ; Returns:. removeFragments; public static Geometry removeFragments(Geometry geometry,; double minArea); Remove fragments smaller than the specified area from a Geometry, ignoring internal rings. Parameters:; geometry - the geometry to refine; minArea - the minimum area of a fragment to retain. If ≤ 0, the geometry is returned unchanged.; Otherwise, polygons will be extracted from the geometry and all that have an external ring area smaller than minArea will be removed.; Returns:; the refined Geometry, or an empty polygon if all pieces of the geometry were removed. tryToFixPolygon; public static Geometry tryToFixPolygon(Polygon polygon); Test a polygon for validity, attempting to fix TopologyValidationErrors if possible.; This attempts a range of tricks (starting w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html:8622,perform,performance,8622,javadoc/docs/qupath/lib/roi/GeometryTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html,1,['perform'],['performance']
Performance,"lders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cache - ; cls - . getCache; public static <T> Map<RegionRequest,T> getCache(Class<T> cls); Get the cache in use for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cls - ; Returns:. setServiceLoader; public static void setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader); Replace the default service loader with another.; ; This can be handy if the ServiceLoader should be using an alternative ClassLoader,; e.g. to auto-discover ImageServerBuilders in alternative directories. Parameters:; newLoader - . getInstalledImageServerBuilders; public static List<ImageServerBuilder<?>> getInstalledImageServerBuilders(); Request all available ImageServerBuilders. Returns:. getInstalledImageServerBuilders; public static <T> List<ImageServerBuilder<T>> getInstalledImageServerBuilders(Class<T> imageClass); Request all available ImageServerBuilders supporting a given image class. Type Parameters:; T - ; Parameters:; imageClass - ; Returns:. legacyPathToURI; publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:2478,cache,cache,2478,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,1,['cache'],['cache']
Performance,"lder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel classifier; measurementID - . createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create detection objects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:138891,load,load,138891,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['load']
Performance,"lds. getThumbnail() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a thumbnail representing the image as displayed by this viewer. getThumbnail() - Method in interface qupath.lib.projects.ProjectImageEntry. Request a thumbnail for the image. getThumbnail(ImageServer<BufferedImage>, int, int, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getThumbnailDownsampleFactor(int, int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getThumbnailRGB(ImageServer<BufferedImage>) - Static method in class qupath.lib.gui.commands.ProjectCommands. Get an RGB thumbnail for an image server, suitable for showing as a project thumbnail. getTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. getTileCacheSize() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Get the tile cache size, in bytes. getTileHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile at the tile resolution. getTileHeight() - Method in class qupath.lib.objects.utils.Tiler. Get the height of output tiles. getTileObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all tile objects in the hierarchy. getTileObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current tile objects. getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:532877,cache,cache,532877,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cache']
Performance,"le - or Double.NaN otherwise. Returns:. getPixelHeightMicrons; public double getPixelHeightMicrons(); Get the pixel height in microns, if available - or Double.NaN otherwise. Returns:. getZSpacingMicrons; public double getZSpacingMicrons(); Get the z-spacing in microns, if available - or Double.NaN otherwise. Returns:. getTimeUnit; public TimeUnit getTimeUnit(); Get the time unit for a time series. Returns:. getTimepoint; public double getTimepoint(int ind); Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. Parameters:; ind - ; Returns:. getSizeZ; public int getSizeZ(); Get the number of z-slices. Returns:. getSizeT; public int getSizeT(); Get the number of time points. Returns:. getSizeC; public int getSizeC(); Get the number of image channels. Returns:. getMagnification; public double getMagnification(); Get the magnification value, or Double.NaN if this is unavailable. Returns:. getPreferredTileWidth; public int getPreferredTileWidth(); Get the preferred tile width, which can be used to optimize pixel requests for large images. Returns:. getPreferredTileHeight; public int getPreferredTileHeight(); Get the preferred tile height, which can be used to optimize pixel requests for large images. Returns:. duplicate; public ImageServerMetadata duplicate(); Duplicate this metatadata. Returns:. getName; public String getName(); Get the image name. Returns:. getChannel; public ImageChannel getChannel(int n); Get the specified channel. Parameters:; n - channel index, starting at 0.; Returns:. getChannels; public List<ImageChannel> getChannels(); Get an unmodifiable list of all channels. Returns:. getClassificationLabels; public Map<Integer,PathClass> getClassificationLabels(); Get map between labels and classification names. This is relevant only where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION, ; otherwise it returns an empty map. Returns:. getChannelType; public ImageServerMetadata.ChannelType getChannelType(); Get the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:8462,optimiz,optimize,8462,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['optimiz'],['optimize']
Performance,"le, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier. Try to classify a batch of objects. tryToClassify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; tryToClassify(PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; tryToFixPolygon(Polygon) - Static method in class qupath.lib.roi.GeometryTools. Test a polygon for validity, attempting to fix TopologyValidationErrors if possible. tryToInterpretMessage(Throwable, int, boolean) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; tryToLoad(String...) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to load OpenSlide. tryToLoadQuietly(String...) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to load OpenSlide, but don't throw an exception if it fails. tryToParseMicrons(double, String) - Static method in class qupath.imagej.tools.IJTools. Based on a value and its units, try to get something suitable in microns. TUMOR - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Tumor classification. TUMOR - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Tumor classification. type(DensityMaps.DensityMapType) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. The type of the density map, which determines any associated normalization. typeToChannels(int) - Static method in class qupath.opencv.tools.OpenCVTools. Determine the number of channels from a specified Mat type (which also encodes depth). typeToDepth(int) - Static method in class qupath.opencv.tools.OpenCVTools. Determine the depth from a specified Mat type (which may also encode the number of channels). U. uiBlocked() - Method in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1055495,load,load,1055495,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['load']
Performance,"lic static void writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path); throws IOException; Write an image region image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; request - ; path - ; Throws:; IOException. writePredictionImage; public static void writePredictionImage(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String path); throws IOException; Write the output of applying a pixel classifier to an image. The writer will be determined based on the file extension. Parameters:; imageData - image to which the classifier should be applied; classifier - pixel classifier; path - output file path; Throws:; IOException. writePredictionImage; public static void writePredictionImage(String classifierName,; String path); throws IOException; Write the output of applying a pixel classifier to the current image image. Parameters:; classifierName - name of the classifier, see loadPixelClassifier(String); path - output file path; Throws:; IOException. writeDensityMapImage; public static void writeDensityMapImage(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; String path); throws IOException; Write the output of applying a density map to an image. The writer will be determined based on the file extension. Parameters:; imageData - image to which the classifier should be applied; densityMap - the density map; path - output file path; Throws:; IOException. writeDensityMapImage; public static void writeDensityMapImage(String densityMapName,; String path); throws IOException; Write the output of applying a density map to the current image image. Parameters:; densityMapName - name of the density map, see loadDensityMap(String); path - output file path; Throws:; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:106134,load,loadPixelClassifier,106134,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadPixelClassifier']
Performance,"ll, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedNodes; @Deprecated; public Collection<double[]> getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections); Deprecated.; Get connected nodes. Returned as a list where pairs are consecutive, i.e.; get(i) links to get(i+1); (although get(i+1) doesn't necessarily link to get(i+2)...). Parameters:; pathObjects - ; connections - ; Returns:. getConnectedNodes; public Collection<PathObject> getConnectedNodes(PathObject pathObject,; Collection<PathObject> list); Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). Parameters:; pathObject - ; list - ; Returns:. getConnectedClusters; public List<Set<PathObject>> getConnectedClusters(); Get a list of PathObjects that are connected to each other in this triangulation.; ; Warning: This list is recomputed on every call, therefore references should be cached by the caller if necessary; to avoid too much recomputation. Returns:. addClusterMeasurements; public void addClusterMeasurements(); Compute mean measurements from clustering all connected objects. addNodeMeasurements; public void addNodeMeasurements(); Add Delaunay measurements to each pathObject. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; containsObject in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html:4506,cache,cached,4506,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,1,['cache'],['cached']
Performance,"ltThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Field Details. DEFAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:3821,cache,caches,3821,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['cache'],['caches']
Performance,"mageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Method Details. paintOverlay; void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. getLocationString; default String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); Get a location string to display when showing a specified image.; ; The default implementation returns null.; If subclasses override this method, they must return quickly, as it may be used to determine text to display as the mouse ; moves over an image. Parameters:; imageData - ; x - x-coordinate, in the image space (not the viewer component space); y - y-coordinate, in the image space (not the viewer component space); z - z-index for the region currently being viewed; t - t-index for the region currently being viewed; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html:2314,perform,performance,2314,javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,1,['perform'],['performance']
Performance,"mageServer<BufferedImage>> map,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier). Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; threads for classification. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier,; int nThreads). Create an overlay to display the live application of a PixelClassifier to an image. static PixelClassificationOverlay; createFeatureDisplayOverlay(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer). Deprecated.; Use create(OverlayOptions, Function, ImageRenderer) instead. static String; getDefaultLocationString(ImageServer<BufferedImage> server,; double x,; double y,; int z,; int t). Default method for getting a location string from an ImageServer using cached tiles. boolean; getLivePrediction(). Query whether live prediction is turned on. String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. int; getMaxThreads(). Get the maximum number of threads that may be used during live prediction. ImageServer<BufferedImage>; getPixelClassificationServer(ImageData<BufferedImage> imageData). Get the ImageServer that would be used by this overlay for the specified ImageData. ImageRenderer; getRenderer(). Get the ImageRenderer used with this overlay, which may be null. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:2756,cache,cached,2756,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['cache'],['cached']
Performance,"ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Test whether a PathObject has a specified measurement in its measurement list. hasMeasurements() - Method in class qupath.lib.objects.PathObject. Returns true if the measurement list for this object is not empty. hasNucleus() - Method in class qupath.lib.objects.PathCellObject. Returns true if a nucleus ROI is stored for this cell. hasObjectsForRegion(Class<? extends PathObject>, ImageRegion) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Returns true if the hierarchy contains objects overla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:571293,load,load,571293,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['load']
Performance,"mpt to create ImageServer<T> from the specified path and arguments. static <T> Map<RegionRequest,T>; getCache(Class<T> cls). Get the cache in use for image tiles of a specific type. static List<ImageServerBuilder<?>>; getInstalledImageServerBuilders(). Request all available ImageServerBuilders. static <T> List<ImageServerBuilder<T>>; getInstalledImageServerBuilders(Class<T> imageClass). Request all available ImageServerBuilders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cache - ; cls - . getCache; public static <T> Map<RegionRequest,T> getCache(Class<T> cls); Get the cache in use for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cls - ; Returns:. setServiceLoader; public static void setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader); Replace the default service loader with another.; ; This can be handy if the ServiceLoader should be using an alternative ClassLoader,; e.g. to auto-discover ImageServerBuilders in alternative directories. Parameters:; newLoader - . getInstalledImageServerBuild",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:2046,load,loader,2046,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,1,['load'],['loader']
Performance,"n class qupath.lib.scripting.QP. Set the selected object for the current PathObjectHierarchy. setSelectedObject(PathObject, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set selected object in the current hierarchy, without centering the viewer. setSelectedObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. setSelectedObjects(Collection<? extends PathObject>, PathObject) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Specify a collection of objects to be selected, and which among them should be the primary. setSelectedTool(PathTool) - Method in class qupath.lib.gui.ToolManager. Programmatically select the active PathTool. setServiceLoader(ServiceLoader<ImageServerBuilder>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Replace the default service loader with another. setShowAnnotations(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the annotations on the image. setShowChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specified channel is shown. setShowConnections(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show connections between objects, if available. setShowDetections(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the objects as an overlay on the image. setShowGrid(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set whether a counting grid should be shown in viewers. setShowLocation(boolean) - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Set the value of ViewerPlusDisplayOptions.showLocationProperty(). setShowNames(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the object names on the image. setShowOverview(boolean) - Meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:946552,load,loader,946552,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loader']
Performance,"n class qupath.opencv.tools.OpenCVTools. Deprecated.; OpenCVTools.createDisk(int, boolean) gives more reliable shapes. getCitationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. getClassification(ImageServer<BufferedImage>, int, int, int, int) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Request the classification for a specific pixel. getClassificationLabels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Map between integer labels and classifications. getClassificationLabels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get map between labels and classification names. getClassifications() - Method in class qupath.lib.objects.PathObject. Get the components of the PathClass as an unmodifiable set. getClassifier() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the PixelClassifier performing the classification. getClassifyBoundaryStrategy(PathClass, double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. getClassProbability() - Method in class qupath.lib.objects.PathObject. Request the classification probability, or Double.NaN if no probability is available. getClassProbability() - Method in class qupath.lib.objects.PathROIObject;  ; getClassProbability() - Method in class qupath.lib.objects.PathRootObject;  ; getClipboardText(boolean) - Static method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getClusters(BiPredicate<PathObject, PathObject>) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get clusters of connected objects, where connections are made between neighboring objects that meet the specified predicate. getColor() - Method in class qupath.lib.color.StainVector. Get a Color that (roughly) correspond",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:353936,perform,performing,353936,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['perform'],['performing']
Performance,"n null. getCachedMeasurementValue(ROI, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. getCachedRegion(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedStroke(double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Get a BasicStroke with the specified thickness. getCachedThumbnail(ImageServer<BufferedImage>, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(TileRequest) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getCachedTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTile(TileRequest) - Method in interface qupath.lib.images.servers.ImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTilesForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Get a map of all cached tiles pertaining to a specific ImageServer. getCaretPosition() - Method in interface qupath.lib.gui.scripting.EditableText. Get the current caret position. getCaretPosition() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the caretPosition property. getCaretPosition() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the caretPosition property. getCaseID() - Method in class qupath.lib.objects.TMACoreObject. Get the case ID metadata value. getCellObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all cell objects in the hierarchy. getCellObjects() - Static method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:346417,cache,cached,346417,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['cache'],['cached']
Performance,"n. Returns:. setLivePrediction; public void setLivePrediction(boolean livePrediction); Turn on or off live prediction.; This requests tile classifications as the overlay is being viewed. Parameters:; livePrediction - . getPixelClassificationServer; public ImageServer<BufferedImage> getPixelClassificationServer(ImageData<BufferedImage> imageData); Get the ImageServer that would be used by this overlay for the specified ImageData.; Note that the servers are cached internally. Parameters:; imageData - ; Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. clearCache; public void clearCache(); Clear any cached tiles. stop; public void stop(); Stop the overlap, halting any pending tile requests. getLocationS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:9439,perform,performed,9439,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['perform'],['performed']
Performance,"nDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. imageDisplayObject; public ObjectProperty<ImageDisplay> imageDisplayObjectProperty; The current image display. See Also:. imageDisplayObjectProperty(). resourceManager; public ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>> resourceManagerProperty; The resource manager used to handle saving/loading. See Also:. resourceManagerProperty(). Constructor Details. BrightnessContrastSettingsPane; public BrightnessContrastSettingsPane(). Method Details. imageDisplayObjectProperty; public ObjectProperty<ImageDisplay> imageDisplayObjectProperty(); The current image display. Returns:. resourceManagerProperty; public ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>> resourceManagerProperty(); The resource manager used to handle saving/loading. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:12335,load,loading,12335,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,2,['load'],['loading']
Performance,"nString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html:2660,perform,performed,2660,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,2,['perform'],"['performance', 'performed']"
Performance,"nail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache);  ; long; getTileCacheSize(). Get the tile cache size, in bytes. void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds). Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileListener(TileListener<BufferedImage> listener);  ; protected Object; requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWaiting(RegionRequest request);  ; protected void; workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker). Every TileWorker should call this when the task is done!. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. paintTileBorders; protected static boolean paintTileBorders. tileListeners; protected List<TileListener<BufferedImage>> tileLi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:3288,queue,queue,3288,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['queue'],['queue']
Performance,"nate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user interface is/should be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of usin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:15213,perform,perform,15213,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['perform'],['perform']
Performance,"nd often requires less effort ; to implement a new ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractTileableImageServer();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected boolean; allowSmoothInterpolation(). Returns true if this server is permitted to use smooth interpolation when resizing. protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. protected BufferedImage; getEmptyTile(int width,; int height);  ; protected BufferedImage; getEmptyTile(int width,; int height,; boolean doCache). Create an empty tile for this server, using the default color model. protected BufferedImage; getTile(TileRequest tileRequest). Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. protected abstract BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:2182,cache,cache,2182,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,2,['cache'],['cache']
Performance,"ndly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. OpenCVDnn.Builder; size(int width,; int height). Input width and height. OpenCVDnn.Builder; size(Size size). Input width and height. OpenCVDnn.Builder; target(int target). Specify the target, e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. framework; public OpenCVDnn.Builder framework(String name); Specify the framework (used to identify the appropriate loader for the model). Parameters:; name - ; Returns:. config; public OpenCVDnn.Builder config(String pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. config; public OpenCVDnn.Builder config(URI pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. name; public OpenCVDnn.Builder name(String name); User-friendly name to use with this model. Parameters:; name - ; Returns:. opencl; public OpenCVDnn.Builder opencl(); Specify OpenCL target. It probably won't help, but perhaps worth a try. Returns:. opencl16; public OpenCVDnn.Builder opencl16(); Specify OpenCL target with 16-bit floating point. ; It probably won't help, but perhaps worth a try. Returns:. cuda; public OpenCVDnn.Builder cuda(); Request CUDA backend and target, if available. Returns:. cpu; public OpenCVDnn.Builder cpu(); Request CPU backend and target, if available. Returns:. cuda16; public OpenCVDnn.Builder cuda16(); Request C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:2801,load,loader,2801,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,1,['load'],['loader']
Performance,"ner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called immediately after running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . addWorkflowStep; protected void addWorkflowStep(ImageData<T> imageData,; String arg); Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Parameters:; imageData - ; arg - . rearrangeByStride; protected static <T> boolean rearrangeByStride(Collection<T> input,; T[] output,; int stride); Test method for rearranging a collection so that entries are interleaved with a regularity given by stride.; ; It can be used to rearrange tasks to try to make better use of cached image regions, by helping to ensure that; all available processors are operating on distinct parts of the image - rather than all in the same region,; where image tile requests could become a bottleneck.; ; Intended use would be something like the following:; ; int n = tasks.size();; Runnable[] tasks2 = new Runnable[n];; if (rearrangeByStride(tasks, tasks2, Runtime.getRuntime().availableProcessors())); tasks = Arrays.asList(tasks2);; . Parameters:; input - ; output - ; stride - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:6729,cache,cached,6729,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,2,"['bottleneck', 'cache']","['bottleneck', 'cached']"
Performance,"ner,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition); Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. preemptively). Parameters:; tileListener - ; server - ; clipShape - ; downsampleFactor - ; zPosition - ; tPosition - . registerRequest; protected void registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition). addTileListener; public void addTileListener(TileListener<BufferedImage> listener). getCache; public Map<RegionRequest,BufferedImage> getCache(). removeTileListener; public void removeTileListener(TileListener<BufferedImage> listener). getCachedTile; public BufferedImage getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request). getCachedTilesForServer; public Map<RegionRequest,BufferedImage> getCachedTilesForServer(ImageServer<BufferedImage> server); Get a map of all cached tiles pertaining to a specific ImageServer. Parameters:; server - ; Returns:. workerComplete; protected void workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker); Every TileWorker should call this when the task is done!. Parameters:; worker - . getCachedRegion; protected BufferedImage getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request). stopWaiting; protected boolean stopWaiting(RegionRequest request). requestImageTile; protected Object requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned); Request an image tile.; There are 3 possible return values:; - a T for the tile; - the TileWorker<T> object currently charged with fetching the tile; - null, if this is the value stored in the TiledImageCache (i.e. the tile has previously been fetched, and there is no image corresponding to the request). Param",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:7516,cache,cached,7516,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['cache'],['cached']
Performance,"nessContrastSliderPane; extends GridPane; A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableGammaAdjustment. Prevent gamma from being adjusted. BooleanProperty; disableMinMaxAdjustment. Prevent the min and max sliders from being adjusted. DoubleProperty; gammaValue. Value of the gamma slider. ObjectProperty<ImageDisplay>; imageDisplay. The image display to which the sliders are applied. DoubleProperty; maxValue. Value of the maximum slider. DoubleProperty; minValue. Value of the minimum slider. ObjectProperty<ChannelDisplayInfo>; selectedChannel. The channel to which the sliders are applied. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:1627,cache,cacheShape,1627,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['cache'],['cacheShape']
Performance,"ng class:; OpenCVDnn. public static class OpenCVDnn.Builder; extends Object; Helper class to build an OpenCVDnn. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OpenCVDnn.Builder; backend(int backend). Specify the backend, e.g. OpenCVDnn; build(). Build a new OpenCVDnn. OpenCVDnn.Builder; classification(). Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. OpenCVDnn.Builder; config(String pathConfig). Path to config file (if required). OpenCVDnn.Builder; config(URI pathConfig). Path to config file (if required). OpenCVDnn.Builder; cpu(). Request CPU backend and target, if available. OpenCVDnn.Builder; cuda(). Request CUDA backend and target, if available. OpenCVDnn.Builder; cuda16(). Request CUDA backend and target, if available, with 16-bit floating point. OpenCVDnn.Builder; detection(). Set the model type to be OpenCVDnn.ModelType.DETECTION. OpenCVDnn.Builder; framework(String name). Specify the framework (used to identify the appropriate loader for the model). OpenCVDnn.Builder; mean(Scalar mean). Mean values which should be subtracted from the image channels before input to the Net. OpenCVDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. OpenCVDnn.Builder; size(int width,; int height). Input width and height. OpenCVDnn.Builder; size(Size size). Input",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:1464,load,loader,1464,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,1,['load'],['loader']
Performance,"ng threshold lines. LINK - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Link the image (to a separate PNG). linkImages() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether the underlying (raster) image should be included in any export. loadDensityMap(String) - Static method in class qupath.lib.scripting.QP. Load a density map for a project or file path. loadDensityMap(Path) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Load a DensityMaps.DensityMapBuilder from the specified path. loadDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Load a display settings object from a file path or from the current project. loadImageData(String, boolean) - Static method in class qupath.lib.scripting.QP. Deprecated. loadObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Load an object classifier for a project or file path. loadPixelClassifier(String) - Static method in class qupath.lib.scripting.QP. Load a pixel classifier for a project or file path. loadProject(File, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Load a project from a local file. loadProject(URI, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Read project from URI. LoadResourceCommand<S> - Class in qupath.process.gui.commands.ui. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns - Class in qupath.lib.analysis.features. Initial test implementation of Local Binary Patterns. LocalBinaryPatterns() - Constructor for class qupath.lib.analysis.features.LocalBinaryPatterns;  ; LocalBinaryPatternsPlugin - Class in qupath.lib.algorithms. Calculate local binary pattern features. LocalBinaryPatternsPlugin() - Constructor for class qupath.lib.algorithms.LocalBinaryPatternsPlugin. Default constructor. localeDefault - Variable in class qupath.lib.gui.panes.PreferencePane.LocalePreferences;  ; localeDisplay ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:653848,load,loadPixelClassifier,653848,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loadPixelClassifier']
Performance,"ng; DEFAULT_PROJECT_NAME. Default file name for a QuPath project. Constructor Summary; Constructors. Constructor; Description; ProjectIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; getProjectExtension(). Get the default extension for a QuPath project file, without the 'dot'. static String; getProjectExtension(boolean includePeriod). Get the default extension for a QuPath project file. static <T> Project<T>; loadProject(File fileProject,; Class<T> cls). Load a project from a local file. static <T> Project<T>; loadProject(URI uri,; Class<T> cls). Read project from URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DEFAULT_PROJECT_NAME; public static final String DEFAULT_PROJECT_NAME; Default file name for a QuPath project. See Also:. Constant Field Values. DEFAULT_PROJECT_EXTENSION; public static final String DEFAULT_PROJECT_EXTENSION; Default file extension for a QuPath project. See Also:. Constant Field Values. Constructor Details. ProjectIO; public ProjectIO(). Method Details. loadProject; public static <T> Project<T> loadProject(URI uri,; Class<T> cls); throws IOException; Read project from URI. Currently, this assumes that the URI refers to a local file. Parameters:; uri - ; cls - ; Returns:; Throws:; IOException. loadProject; public static <T> Project<T> loadProject(File fileProject,; Class<T> cls); throws IOException; Load a project from a local file. Parameters:; fileProject - ; cls - ; Returns:; Throws:; IOException. getProjectExtension; public static String getProjectExtension(boolean includePeriod); Get the default extension for a QuPath project file. Parameters:; includePeriod - ; Returns:. getProjectExtension; public static String getProjectExtension(); Get the default extension for a QuPath project file, without the 'dot'. Returns:; See Also:. getProjectExtension(boolean). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html:1916,load,loadProject,1916,javadoc/docs/qupath/lib/projects/ProjectIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html,4,['load'],['loadProject']
Performance,"ngle measurement for a specified ROI if all tiles are cached,; otherwise return null. getCachedRegion(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedStroke(double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Get a BasicStroke with the specified thickness. getCachedThumbnail(ImageServer<BufferedImage>, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(TileRequest) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getCachedTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTile(TileRequest) - Method in interface qupath.lib.images.servers.ImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTilesForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Get a map of all cached tiles pertaining to a specific ImageServer. getCaretPosition() - Method in interface qupath.lib.gui.scripting.EditableText. Get the current caret position. getCaretPosition() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the caretPosition property. getCaretPosition() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the caretPosition property. getCaseID() - Method in class qupath.lib.objects.TMACoreObject. Get the case ID metadata value. getCellObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all cell objects in the hierarchy. getCellObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current cell objects. getCenterPixelX() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:346565,cache,cached,346565,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['cache'],['cached']
Performance,"nnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurement, importObjectsFromFile, insertObjects, insertObjects, isDirectory, isTMADearrayed, loadDensityMap, loadImageData, loadObjectClassifier, loadPixelClassifier, makeARGB, makeFileInProject, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makePathInProject, makeRGB, measurement, mergeAnnotations, mergeAnnotations, mergePointsForAllClasses, mergePointsForSelectedObjectClasses, mergeSelectedAnnotations, mergeSelectedAnnotations, mkdirs, nObjects, refreshDuplicateIDs, refreshDuplicateIDs, refreshIDs, refreshIDs, relabelTMAGrid, relabelTMAGrid, removeMeasurements, removeMeasurements, removeObject, removeObjects, removeObjects, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeOrClipObjectsOutsideImage, removeOrClipObjectsOutsideImage, replaceClassification, replaceClassification, replaceClassification, replaceClassification, resetBatchProjectAndImage, resetClassifications, resetClassifications, resetDetectionClassifications, resetIntensityClassifications, resetIntensity",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:8991,load,loadImageData,8991,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['load'],['loadImageData']
Performance,"notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, false otherwise. openImage; public static OpenSlide openImage(String path); throws IOException; Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata.; ; This will attempt to load OpenSlide if it has not already been loaded, throwing an IOException if; this fails.; Use isOpenSlideAvailable() to check whether OpenSlide is available before calling this. Parameters:; path - the image path (usually an absolute file path); Returns:; an OpenSlide instance; Throws:; IOException - if OpenSlide could not be loaded failed to open the file. dete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:2446,load,load,2446,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['load'],['load']
Performance,"ns probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(PathObject, String). getMeasurementValue; @Deprecated; public Number getMeasurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:3617,cache,cached,3617,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,1,['cache'],['cached']
Performance,"ns.ImagePlane. Get the channel index. getC() - Method in class qupath.lib.roi.AreaROI;  ; getC() - Method in class qupath.lib.roi.EllipseROI;  ; getC() - Method in class qupath.lib.roi.GeometryROI;  ; getC() - Method in class qupath.lib.roi.LineROI;  ; getC() - Method in class qupath.lib.roi.PointsROI;  ; getC() - Method in class qupath.lib.roi.PolygonROI;  ; getC() - Method in class qupath.lib.roi.PolylineROI;  ; getC() - Method in class qupath.lib.roi.RectangleROI;  ; getC() - Method in interface qupath.lib.roi.interfaces.ROI. Get channel index, or -1 if the ROI relates to all available channels. getC() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get channel index. getCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCache() - Method in class qupath.lib.images.servers.AbstractImageServer. Get the internal cache. getCache(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the cache in use for image tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(Integer) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color. getCachedColor(Integer) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cach",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:343839,cache,cache,343839,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cache']
Performance,"nt for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(PathObject, String). getMeasurementValue; @Deprecated; public Number getMeasurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. Parameters:; roi - ; name - ; Returns:; See Also:. getCachedMeasurementValue(ROI, String). getMeasurementValue; public Number getMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Parameters:; roi - ; name - ; Returns:; See Also:. getMeasurementValue(ROI, String). addMeasurements; public boolean addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID); Add measurements to specified objects. Parameters:; objectsToMeasure - the objects to measure.; measurementID - identifier that is prepended to measurement names, to make these identifiable later (optional; may be null); Returns:; true if measurements were added, false otherwise; Since:; v0.5.0. getMeasurementNames; public List<String> getMeasurementNames(); Get the names of all measurements that may be returned. Returns:. c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:4638,cache,cached,4638,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,1,['cache'],['cached']
Performance,"nt hierarchy. static boolean; hasMeasurement(PathObject pathObject,; String measurementName). Test whether a PathObject has a specified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an inverse annotation using the current ImageData and its current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation using the specified ImageData and current selected objects. static boolean; makeInverseAnnotatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:21865,load,loadObjectClassifier,21865,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadObjectClassifier']
Performance,"nt finalHeight,; boolean smoothInterpolate); Resize the image to have the requested width/height, using area averaging and bilinear interpolation. Parameters:; img - input image to be resized; finalWidth - target output width; finalHeight - target output height; smoothInterpolate - if true, the resize method is permitted to use a smooth interpolation method.; If false, nearest-neighbor interpolation is used.; Returns:; resized image. computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:10266,perform,performed,10266,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['perform'],['performed']
Performance,"od. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastSettingsPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.GridPane; qupath.lib.gui.commands.display.BrightnessContrastSettingsPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastSettingsPane; extends GridPane; A pane to save and load display settings, using a ResourceManager. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageDisplay>; imageDisplayObject. The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManager. The resource manager used to handle saving/loading. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:1264,cache,cacheShape,1264,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['cache'],['cacheShape']
Performance,"of the Bio-Formats library. BioFormatsServerOptions. Container for various options that can customize the behavior of the BioFormatsImageServer. BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. BooleanParameter. Parameter that can take on true of false value - or null. BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. BrightnessContrastChannelPane. A pane responsible for the display and selection of channels from an image display. BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image chann",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:4849,load,load,4849,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['load'],['load']
Performance,"of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImageServer(Class<T> imageClass). Method Details. getImageClass; public Class<T> getImageClass(); Description copied from interface: ImageServer; Get the class of the image representation returned by this ImageServer. Specified by:; getImageClass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.ServerBuilder<T> createServerBuilder(); Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Returns:. getBuilder; public ImageServerBuilder.ServerBuilder<T> getBuilder(); Description copied from interface: ImageServer; Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation returns null, indicating that rebuilding the server is not supported. Specified by:; getBuilder in interface ImageServer<T>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:4413,cache,cached,4413,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,2,['cache'],['cached']
Performance,"ogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; Writab",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:11598,perform,performance,11598,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['perform'],['performance']
Performance,"ollections of numeric values, with an associated custom object. Charts.ScatterChartBuilder; series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y). Create a scatterplot using collections of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun). Plot values extracted from objects within a specified collection. Charts.ScatterChartBuilder; series(String name,; Collection<XYChart.Data<Number,Number>> data). Create a scatterplot from existing data plots. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.ScatterChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.ScatterChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. Charts.ScatterChartBuilder; unlimitedDatapoints(). Show all datapoints, without subsampling, even when this may cause performance issues. protected void; updateChart(ScatterChart<Number,Number> chart). Method that applies properties of this builder to the chart. Charts.ScatterChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.ScatterChartBuilder; width(double width). Set the preferred width of the chart. Charts.ScatterChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.ScatterChartBuilder; xAxisMax(double upperBound). Set the upper bound for the x-axis. Charts.ScatterChartBuilder; xAxisMin(double lowerBound). Set the lower bound for the x-axis. Charts.ScatterChartBuilder; xAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the x-axis. Charts.ScatterChartBuilder; xLabel(String label). Specify the x-axis label. Charts.ScatterChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.ScatterChartBuilder; yAxisMin(double lowerBound). Set the lower bound for ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:4284,perform,performance,4284,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,1,['perform'],['performance']
Performance,"ols.IconFactory.PathIcons;  ; LINE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; LineROI - Class in qupath.lib.roi. ROI representing a straight line, defined by its end points. lineThickness(float) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. lineWidthProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Line width property used for displaying threshold lines. LINK - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Link the image (to a separate PNG). linkImages() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether the underlying (raster) image should be included in any export. loadDensityMap(String) - Static method in class qupath.lib.scripting.QP. Load a density map for a project or file path. loadDensityMap(Path) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Load a DensityMaps.DensityMapBuilder from the specified path. loadDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Load a display settings object from a file path or from the current project. loadImageData(String, boolean) - Static method in class qupath.lib.scripting.QP. Deprecated. loadObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Load an object classifier for a project or file path. loadPixelClassifier(String) - Static method in class qupath.lib.scripting.QP. Load a pixel classifier for a project or file path. loadProject(File, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Load a project from a local file. loadProject(URI, Class<T>) - Static method in class qupath.lib.projects.ProjectIO. Read project from URI. LoadResourceCommand<S> - Class in qupath.process.gui.commands.ui. Create commands for displaying pixel classifiers and density maps.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:653308,load,loadDensityMap,653308,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loadDensityMap']
Performance,"oolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, false otherwise. openImage; public static OpenSlide openImage(String path); throws IOException; Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata.; ; This will attempt to load OpenSlide if it has not already been loaded, throwing an IOException if; this fails.; Use isOpenSlideAvailable() to check whether OpenSlide is available be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:2251,load,loaded,2251,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['load'],['loaded']
Performance,"optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, false otherwise. openImage; public static OpenSlide openImage(String path); throws IOException; Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata.; ; This will attempt to load OpenSlide if it has not already been loaded, throwing an IOException if; this fails.; Use isOpenSlideAvailable() to check whether OpenSlide is available before calling this. Parameters:; path - the image path (usually an absolute file path); Returns:; an OpenSlide instance; Throws:; IOException - if OpenSlide could not be loaded failed to open the file. detectVendor; public static String detectVendor(String path); Try to detect the vendor of the image at the specified path.; This will attempt to load OpenSlide if it has not already been loaded. Parameters:; path - the image path (usually an absolute file path); Returns:; a vendor string if available",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:2721,load,load,2721,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['load'],['load']
Performance,"or for class qupath.lib.objects.PathDetectionObject. Default constructor. PathDetectionObject(ROI, PathClass) - Constructor for class qupath.lib.objects.PathDetectionObject. Create a new PathDetectionObject with a float measurement list. PathHierarchyImageServer - Class in qupath.lib.gui.images.servers. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. PathHierarchyImageServer(ImageData<BufferedImage>, OverlayOptions) - Constructor for class qupath.lib.gui.images.servers.PathHierarchyImageServer. Constructor. PathImage<T> - Interface in qupath.lib.images. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. PathInteractivePlugin<T> - Interface in qupath.lib.plugins. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathIO - Class in qupath.lib.io. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions - Enum Class in qupath.lib.io. Options to customize the export of PathObjects as GeoJSON. pathMemoization - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; PathObject - Class in qupath.lib.objects. Fundamental object of interest in QuPath. PathObject() - Constructor for class qupath.lib.objects.PathObject. Default constructor. PathObject(MeasurementList) - Constructor for class qupath.lib.objects.PathObject. Create a PathObject with a specific measurement list. PathObjectConnectionGroup - Interface in qupath.lib.objects. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections - Class in qupath.lib.objects. Data structure for storing multiple PathObjectConnectionGroups. PathObjectConnections() - Constructor for class qupath.lib.objects.PathObjectConnect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:753859,load,loading,753859,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loading']
Performance,"ort for (possibly multiple) images that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builders - ; Returns:. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder); Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builder - ; Returns:. getProviderClass; public Class<? extends ImageServerBuilder<T>> getProviderClass(); Get the class of the associated ImageServerBuilder. Returns:. getBuilders; public List<ImageServerBuilder.ServerBuilder<T>> getBuilders(); Get a list of ServerBuilders, one for each image that can be read based on the specified URI. ; For a 'simple' file that contains a single image, a singleton list should be returned. Returns:. getSupportLevel; public float getSupportLevel(); Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance.; ; The support level should be a value between 0 and 4. The following is a guide to its interpretation:; ; 4 - 'ideal' support, e.g. the image was written by the library behind the ImageServer; 3 - good support; 2 - unknown support, i.e. worth a try; 1 - partial/poor support, i.e. there are known limitations and all higher-scoring possibilities should be tried first; 0 - no support. The use of floating point enables subclasses to make more subtle evaluations of performance, e.g. if an ImageServer; is particularly strong for RGB images, but falls short of guaranteeing ideal performance.; ; In practice, this is used to rank potential builders so that the 'best' ones; are tried first for new image paths, and those with 0 support may be ignored. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html:3814,perform,performance,3814,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,3,['perform'],['performance']
Performance,"osite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html:2618,perform,performed,2618,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,2,['perform'],"['performance', 'performed']"
Performance,"otation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description cop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:35883,perform,performance,35883,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['perform'],['performance']
Performance,"otations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel classifier; measurementID - . createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifierName - the name of the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:139303,load,loadPixelClassifier,139303,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadPixelClassifier']
Performance,"ox. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. Point2; getNearest(double x,; double y,; double maxDist). Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). It is not possible to convert a PointROI to a java.awt.Shape. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:2208,cache,caches,2208,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['cache'],['caches']
Performance,"ox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:1363,cache,cacheHint,1363,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,2,['cache'],"['cache', 'cacheHint']"
Performance,"perpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getPreferredPixelSizeMicrons(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get the preferred pixel size that would be used for the specified ImageData and ParameterList. getPreferredResolutionLevel(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. getPreferredTileHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile height, which can be used to optimize pixel requests for large images. getPreferredTileWidth() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile width, which can be used to optimize pixel requests for large images. getPreferredUriImageSupport(Class<T>, String, String...) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. getPreprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any preprocessing steps that should be applied. getPressure() - Method in interface qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager. Returns a pressure value, between 0 and 1. getPreviousSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getPreviousURI() - Method in interface qupath.lib.projects.Project. Sometimes projects move (unfortunately). getProbabilityColorModel32Bit(List<ImageChannel>) - Stat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:490497,optimiz,optimize,490497,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['optimiz'],['optimize']
Performance,"perty; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransform. Property to control how counts should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2381,cache,cacheShape,2381,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['cache'],['cacheShape']
Performance,"play.BrightnessContrastChannelPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastChannelPane; extends BorderPane; A pane responsible for the display and selection of channels from an image display.; This uses a table to display the channels, and allows the user to adjust the selection of channels - as well as names; and colors. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<ChannelDisplayInfo>; currentChannel. Get the currently-selected channel. BooleanProperty; disableToggleMenuItems. Property to disable options to toggle the visibility of channels. ObjectProperty<ImageDisplay>; imageDisplay. Property for the image display that should be shown and managed by this pane. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:1524,cache,cacheShape,1524,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['cache'],['cacheShape']
Performance,"plicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurement, importObjectsFromFile, insertObjects, insertObjects, isDirectory, isTMADearrayed, loadDensityMap, loadImageData, loadObjectClassifier, loadPixelClassifier, makeARGB, makeFileInProject, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makeInverseAnnotation, makePathInProject, makeRGB, measurement, mergeAnnotations, mergeAnnotations, mergePointsForAllClasses, mergePointsForSelectedObjectClasses, mergeSelectedAnnotations, mergeSelectedAnnotations, mkdirs, nObjects, refreshDuplicateIDs, refreshDuplicateIDs, refreshIDs, refreshIDs, relabelTMAGrid, relabelTMAGrid, removeMeasurements, removeMeasurements, removeObject, removeObjects, removeObjects, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeObjectsOutsideImage, removeOrClipObjectsOutsideImage, removeOrClipObjectsOutsideImage, replaceClassification, replaceClassification, replaceClassification, replaceClassification, resetBatchProjectAndImage, resetClassifications, resetClassifications, resetDetectionClassifications, resetIntensityClassifications,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:8975,load,loadDensityMap,8975,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['load'],['loadDensityMap']
Performance,"ply an object classifier to the current ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. runObjectClassifier; public static void runObjectClassifier(ImageData imageData,; String... names); throws IllegalArgumentException; Apply an object classifier to the specified ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; imageData - ; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier within the current project, or file paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:131409,load,loadObjectClassifier,131409,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['load'],['loadObjectClassifier']
Performance,"ptional) extra ROI to represent ; the cell nucleus. PathClass. Representation of an object's classification - which can be defined using any unique string; identifier (e.g. PathClass.StandardPathClasses. Enum representing standard classifications. PathClassFactory; Deprecated.; since v0.4.0 in favor of methods added to PathClass directly. PathClassFactory.StandardPathClasses. Enum representing standard classifications. PathClassTools. Static methods for use with PathClass objects. PathDetectionObject. A detection PathObject. PathHierarchyImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. PathImage<T>. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; PathObjectHierarchy. A basic hierarchy in which to store PathObjects. PathObjectHierarchyEvent. An event class for passing on information about modifications to a PathObjectHierarchy. PathObjectHierarchyEvent.HierarchyEventType. Enum representing different ways in which the hierarchy may have been updated. PathObjectHierarchyListener. A listener for modifications ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:38889,load,loading,38889,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['load'],['loading']
Performance,"qupath); Show a dialog to track the viewed region of an image. Parameters:; qupath - . combineSelectedAnnotations; public static boolean combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op); Combine the selected annotations for the specified hierarchy. Parameters:; imageData - the image data to process; op - the RoiTools.CombineOp operation to apply; Returns:; true if changes were made, false otherwise. promptToSelectObjectsByClassification; public static void promptToSelectObjectsByClassification(QuPathGUI qupath,; ImageData<?> imageData); Prompt to select objects according to their classifications. Parameters:; qupath - ; imageData - . promptToEditClass; public static boolean promptToEditClass(PathClass pathClass); Prompt to edit the name/color of a class. Parameters:; pathClass - ; Returns:. selectObjectsByClassification; public static boolean selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses); Select objects by classification, logging the step (if performed) in the history workflow. Parameters:; imageData - the ImageData containing objects to be selected; pathClasses - classifications that will result in an object being selected; Returns:; true if a selection command was run, false otherwise (e.g. if no pathClasses were specified). promptToDeleteObjects; public static void promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls); Prompt to delete objects of a specified type, or all objects. Parameters:; imageData - ; cls - . promptToResetPreferences; public static boolean promptToResetPreferences(); Reset QuPath's preferences, after confirming with the user.; QuPath needs to be restarted for this to take effect. Returns:; true if the preferences were reset, false otherwise. setViewerDownsample; public static void setViewerDownsample(QuPathViewer viewer,; double downsample); Set the downsample factor for the specified viewer. Parameters:; viewer - ; downsample - . closeProject; public stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:20379,perform,performed,20379,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['perform'],['performed']
Performance,"r OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, false otherwise. openImage; public static OpenSlide openImage(String path); throws IOException; Open an image using OpenS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:2017,load,load,2017,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['load'],['load']
Performance,"r implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:5987,perform,performing,5987,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['perform'],['performing']
Performance,"r model will have a white background; if false, it will have a black background; Returns:. createIndexColorModel; public static IndexColorModel createIndexColorModel(int red,; int green,; int blue,; boolean whiteBackground); Get an IndexColorModel representing a linear LUT based on a RGB color. Parameters:; red - the red value of the color for the maximum value; green - the green value of the color for the maximum value; blue - the blue value of the color for the maximum value; whiteBackground - if true, the color model will have a white background; if false, it will have a black background; Returns:. getIndexColorModel; public static IndexColorModel getIndexColorModel(StainVector stain); Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). Parameters:; stain - ; Returns:. getMoreTranslucentColor; public static Color getMoreTranslucentColor(Color color); Get a (slightly more) translucent version of the specified color.; ; If possible, a cached version will be used. Parameters:; color - ; Returns:; See Also:. getTranslucentColor(java.awt.Color). darkenColor; public static Color darkenColor(Color color); Get a (slightly) darker version of the specified color.; ; If possible, a cached version will be used. Parameters:; color - ; Returns:. getTranslucentColor; public static Color getTranslucentColor(Color color); Get a (slightly) translucent version of the specified color.; ; If possible, a cached version will be used. Parameters:; color - ; Returns:. scaleColor; public static Color scaleColor(Color color,; double factor); Get a scaled version of the specified color, where the RGB values are independently scaled by a specified factor.; ; The alpha value is preserved unchanged. Parameters:; color - ; factor - ; Returns:. getColorWithOpacity; public static Color getColorWithOpacity(Integer rgb,; double opacity); Get a color with a specified opacity, based on the packed RGB values in an Integer. Parameters:; rgb - ; opacity - ; R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:5414,cache,cached,5414,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,1,['cache'],['cached']
Performance,"r of objects in the hierarchy, excluding the root. Returns:. setHierarchy; public void setHierarchy(PathObjectHierarchy hierarchy); Set the contents of this hierarchy to be the same as that of another hierarchy.; In practice, this means copying the root and TMA grid of the second hierarchy. Parameters:; hierarchy - . getObjectsForROI; public Collection<PathObject> getObjectsForROI(Class<? extends PathObject> cls,; ROI roi); Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. ; This relies on centroids for detections, and a 'covers' rule for others. Parameters:; cls - class of PathObjects (e.g. PathDetectionObject), or null to accept all; roi - ; Returns:. getObjectsForRegion; public Collection<PathObject> getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects); Get the objects overlapping or close to a specified region.; Note that this performs a quick check; the results typically should be filtered if a more strict test for overlapping is applied. Parameters:; cls - class of object to return (subclasses are included); region - requested region overlapping the objects ROI; pathObjects - optionally collection to which objects will be added; Returns:; collection containing identified objects (same as the input collection, if provided). hasObjectsForRegion; public boolean hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region); Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. Parameters:; cls - ; region - ; Returns:. fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - . fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Objec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:18773,perform,performs,18773,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['perform'],['performs']
Performance,"r();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Attempt to create ImageServer<T> from the specified path and arguments. static <T> Map<RegionRequest,T>; getCache(Class<T> cls). Get the cache in use for image tiles of a specific type. static List<ImageServerBuilder<?>>; getInstalledImageServerBuilders(). Request all available ImageServerBuilders. static <T> List<ImageServerBuilder<T>>; getInstalledImageServerBuilders(Class<T> imageClass). Request all available ImageServerBuilders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cache - ; cls - . getCache; public static <T> Map<RegionRequest,T> getCache(Class<T> cls); Get the cache in use for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cls - ; Returns:. setServiceLoader; public static void setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader); Replace the default service loader with another.; ; This can be ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:1858,cache,cache,1858,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,1,['cache'],['cache']
Performance,"r. Build an ImageServer representing this density map. buildServer(ImageData<BufferedImage>, ImageDataOp, PixelCalibration) - Static method in class qupath.opencv.ops.ImageOps. Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. buildServer(ImageData<BufferedImage>, ImageDataOp, PixelCalibration, int, int) - Static method in class qupath.opencv.ops.ImageOps. Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. bundle() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig;  ; buttons(String...) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the buttons to display in the dialog. buttons(ButtonType...) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the buttons to display in the dialog. byteOrder(ByteOrder) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  . C. cache - Variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; calculatePadding() - Method in class qupath.opencv.ops.ImageOps.PaddedOp. Calculate the required padding. calculatePreferredParallelism() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Make a semi-educated guess as to an appropriate number of threads to use. calibratedLocationString - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; calibrateImagePlus(ImagePlus, RegionRequest, ImageServer<BufferedImage>) - Static method in class qupath.imagej.tools.IJTools. Set an ImagePlus's Calibration and FileInfo properties based on a RegionRequest and PathImageServer. calibrateObject(PathObject, Roi) - Static method in class qupath.imagej.tools.IJTools. Set the properties of a PathObject based upon an ImageJ Roi. calibration(PixelCalibration) - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify pixel calibration, which is used to calibrate the x and y coord",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:82867,cache,cache,82867,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cache']
Performance,"r; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerProvider. java.lang.Object; qupath.lib.images.servers.ImageServerProvider. public class ImageServerProvider; extends Object; Service provider for creating ImageServers from a given path - which may be a file path or URL.; ; This class is responsible for hunting through potential ImageServerBuilders, ranked by support level, to find the first that works. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageServerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Attempt to create ImageServer<T> from the specified path and arguments. static <T> Map<RegionRequest,T>; getCache(Class<T> cls). Get the cache in use for image tiles of a specific type. static List<ImageServerBuilder<?>>; getInstalledImageServerBuilders(). Request all available ImageServerBuilders. static <T> List<ImageServerBuilder<T>>; getInstalledImageServerBuilders(Class<T> imageClass). Request all available ImageServerBuilders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:1174,cache,cache,1174,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,1,['cache'],['cache']
Performance,"rDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; Returns:; the ImageDataServer. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; tileWidth - the tile width for the server; tileHeight - the tile height of the server; Returns:; the ImageDataServer. buildImageDataOp; public static ImageDataOp buildImageDataOp(ColorTransforms.ColorTransform... inputChannels); Create an ImageDataOp, optionally us",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:4632,perform,performing,4632,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['perform'],['performing']
Performance,"rList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This will be called from AbstractPlugin.runPlugin(TaskRunner, ImageData, String) after a call to AbstractPlugin.parseArgument(ImageData, String). The default implementation simply calls AbstractPlugin.getParentObjects(ImageData), then AbstractPlugin.addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Overrides:; getTasks in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:5490,perform,perform,5490,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['perform'],['perform']
Performance,"rchy.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitAllAnnotationAreasByLines; public static boolean splitAllAnnotationAreasByLines(PathObjectHierarchy hierarchy,; double thickness,; boolean removeLines); Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). splitSelectedAnnotationAreasByLines; public static boolean splitSelectedAnnotationAreasByLines(); Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitSelectedAnnotationAreasByLines; public static boolean splitSelectedAnnotationAreasByLines(double thickness,; boolean removeLines); Split selected annotation objects with area ROIs using dividing lines extrac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:118494,perform,performing,118494,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['perform'],['performing']
Performance,"rementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(Pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:3074,cache,cachedOnly,3074,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,1,['cache'],['cachedOnly']
Performance,"rent object types (Files, URLs, Strings,..). DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. EditableText. Interface for objects that manage editable text, including a caret position and selection. EditMenuActions;  ; EllipseROI. ROI implementing a circle, or (unrotated) ellipse. EmptyParameter. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. ExecutableLanguage. Functional interface for scripting languages that are runnable (e.g. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ExtendedPathTool;  ; ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. ExtensionsMenuActions;  ; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or perf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:17159,load,loading,17159,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['load'],['loading']
Performance,"reprocessor for an image or training matrix. FeaturePreprocessor() - Constructor for class qupath.opencv.ml.FeaturePreprocessor;  ; FeaturePreprocessor.Builder - Class in qupath.opencv.ml. Builder to create a custom FeaturePreprocessor. features(Collection<MultiscaleFeatures.MultiscaleFeature>, double, double) - Static method in class qupath.opencv.ops.ImageOps.Filters. Compute one or more MultiscaleFeatures.MultiscaleFeatures for the specified smoothing values (must be > 0). FILE_PATH - Static variable in class qupath.lib.scripting.ScriptAttributes. File path of the running script file. FileCopier - Class in qupath.lib.gui. Copy files to an output directory, prompting the user if necessary. FileCopier() - Constructor for class qupath.lib.gui.FileCopier;  ; fileExists(String) - Static method in class qupath.lib.scripting.QP. Query if a file exists. FileFormatInfo - Class in qupath.lib.images.servers. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo() - Constructor for class qupath.lib.images.servers.FileFormatInfo;  ; FileFormatInfo.ImageCheckType - Interface in qupath.lib.images.servers. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. FileMenuActions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions;  ; FileMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions.ExportImageActions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions.ExportSnapshotActions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions.ProjectActions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions.TmaActions - Class in qupath.lib.gui.actions.menus;  ; files(File...) - Method in class qupath.opencv.dnn.DnnModelParams.Bu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:300478,perform,performing,300478,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['perform'],['performing']
Performance,"requests. paintRegion; public void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay); Description copied from interface: ImageRegionRenderer; Paint an image region. Specified by:; paintRegion in interface ImageRegionRenderer; Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ImageObserver (often ignored); imageDisplay - an ImageRenderer to convert images to RGB. close; public void close(). getTileCacheSize; public long getTileCacheSize(); Get the tile cache size, in bytes.; Image tiles larger than this cannot be cached. Returns:. getCachedThumbnail; public BufferedImage getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition). registerRequest; protected void registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition); Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. preemptively). Parameters:; tileListener - ; server - ; clipShape - ; downsampleFactor - ; zPosition - ; tPosition - . registerRequest; protected void registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition). addTileListener; public void addTileListener(TileListener<BufferedImage> listener). getCache; public Map<RegionRequest,Buffered",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:6176,cache,cache,6176,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['cache'],['cache']
Performance,"res.DefaultImageRegionStore;  ; getCachedStroke(double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Get a BasicStroke with the specified thickness. getCachedThumbnail(ImageServer<BufferedImage>, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(TileRequest) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getCachedTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTile(TileRequest) - Method in interface qupath.lib.images.servers.ImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTilesForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Get a map of all cached tiles pertaining to a specific ImageServer. getCaretPosition() - Method in interface qupath.lib.gui.scripting.EditableText. Get the current caret position. getCaretPosition() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the caretPosition property. getCaretPosition() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the caretPosition property. getCaseID() - Method in class qupath.lib.objects.TMACoreObject. Get the case ID metadata value. getCellObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all cell objects in the hierarchy. getCellObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current cell objects. getCenterPixelX() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. getCenterPixelY() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the y-coordinate of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:346760,cache,cached,346760,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cached']
Performance,"ring); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMap - builder to generate a density map; channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:134817,load,loadDensityMap,134817,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadDensityMap']
Performance,"ring; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:1877,load,loaded,1877,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['load'],['loaded']
Performance,"ring yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. limitDatapoints; public Charts.ScatterChartBuilder limitDatapoints(int max); Choose the maximum number of supported datapoints.; Scattercharts are rather 'heavyweight', and including many thousands of datapoints can cause ; severe performance issues due to high processing and memory requirements.; ; By default, datapoints will be randomly subsampled to a 'manageable number' where necessary, ; which can be customized with this setting. Parameters:; max - the maximum number of data points to show; Returns:; this builder; See Also:. unlimitedDatapoints(). unlimitedDatapoints; public Charts.ScatterChartBuilder unlimitedDatapoints(); Show all datapoints, without subsampling, even when this may cause performance issues.; Use with caution. Returns:; this builder; See Also:. limitDatapoints(int). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. centroids; public <T> Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal); Plot centroids for the specified objects using a fixed pixel calibration. Parameters:; pathObjects - the objects to plot; cal - the pixel calibration used to convert the centroids into other units; Returns:; this builder. centroids; public Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects); Plot centroids for the specified objects in pixel units. Parameters:; pathObjects - the objects to plot.; Returns:; this builder. measurements; public Charts.ScatterChartBuilder measurements(Collection<? extends ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:6727,perform,performance,6727,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,1,['perform'],['performance']
Performance,"ript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy; Class PathObjectHierarchy. java.lang.Object; qupath.lib.objects.hierarchy.PathObjectHierarchy. All Implemented Interfaces:; Serializable. public final class PathObjectHierarchy; extends Object; implements Serializable; A basic hierarchy in which to store PathObjects.; ; This essentially contains a single PathRootObject from which all other objects can be reached using the child object lists.; However, by adding/removing objects via this hierarchy (rather than through the child lists directly), it is possible; to maintain a more consistent structure (e.g. by automatically inserting objects as children of the objects whose ROI completely; contains the object to be added), along with a spatial cache so that objects can be extracted if their ROIs overlap with a specified region.; ; Note: Be cautious when deserializing - it may not result in a hierarchy in a valid state.; As a workaround, you can construct a new PathObjectHierarchy and call setHierarchy(deserializedHierarchy) to; ensure that you have a properly-constructed hierarchy with the same data within it. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<PathObject>; HIERARCHY_COMPARATOR. Comparator to use when looking for a parent annotation in the hierarchy. Constructor Summary; Constructors. Constructor; Description; PathObjectHierarchy(). Default constructor, creates an empty hierarchy. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addListener(PathObjectHierarchyListener listener). Add a hierarchy change listener. boolean; ad",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:1072,cache,cache,1072,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['cache'],['cache']
Performance,"rred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, false otherwise. openImage; public static OpenSlide openImage(String path); throws IOException; Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata.; ; This will attempt to load OpenSlide if it has not already been loaded, throwing an IOException if; this fails.; Use isOpenSlideAvailable() to check whether OpenSlide is available before calling this. Parameters:; path - the image path (usually an absolute file path); Returns:; an OpenSlide instance; Throws:; IOException - if OpenSlide could not be loaded failed to open the file. detectVendor; public static String detectVendor(String path); Try to detect the vendor of the image at the specified path.; This will attempt to load OpenSlide if it has not already been loaded. Parameters:; path - the image path (usually an absolute file path); Returns:; a vendor string if available, or null if OpenSlide could not be loaded or does not recognize the file. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:2858,load,loaded,2858,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,7,['load'],"['load', 'loaded']"
Performance,"rride this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Returns:; the padding requested by this operation. getChannels; default List<ImageChannel> getChannels(List<ImageChannel> channels); Get appropriate channels to reflect the output of this transform.; ; The default is to return the input list unchanged.; ; Classes that change the meaning or number of channels should override this.; In particular, the number of channels in the output list should match the ; number of channels output by this transformer, given the input channels. Parameters:; channels - ; Returns:. getOutputType; default PixelType getOutputType(PixelType inputType); Get the output pixel type.; ; The default is to return the pixel type unchanged. Parameters:; inputType - the input pixel type; Returns:; the output pixel type. getURIs; default Collection<URI> getURIs(); throws IOExceptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:2392,perform,perform,2392,javadoc/docs/qupath/opencv/ops/ImageOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html,1,['perform'],['perform']
Performance,"rs. Modifier; Constructor; Description; protected ; AbstractImageServer(Class<T> imageClass);  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; protected abstract String; createID(). Create a unique ID for the server, which can be returned as the default value of getPath(). protected abstract ImageServerBuilder.ServerBuilder<T>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. protected void; finalize(). Attempt to close the server. T; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. ImageServerBuilder.ServerBuilder<T>; getBuilder(). Get a ServerBuilder capable of building a server the same as this one. protected Map<RegionRequest,T>; getCache(). Get the internal cache. T; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. ImageChannel; getChannel(int channel). Request information for one channel (0-based index). T; getDefaultThumbnail(int z,; int t). Get the default thumbnail for a specified z-slice and timepoint. double; getDownsampleForResolution(int level). Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. int; getHeight(). Height of the full-resolution image in pixels. Class<T>; getImageClass(). Get the class of the image representation returned by this ImageServer. ImageServerMetadata; getMetadata(). Get essential metadata associated with the ImageServer as a distinct object. String; getPath(). Default implementation lazily calls createID() on demand. PixelType; getPixelType(). The bit-depth and type of the image. double[]; getPreferredDownsamples(). Request the preferred downsamples from the image metadata. protected double; getThumbnailDownsampleFactor(i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:1842,cache,cached,1842,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,2,['cache'],['cached']
Performance,"rs.pixel.PixelClassificationImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class PixelClassificationImageServer; extends AbstractTileableImageServer; ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Constructor. PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a random UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). BufferedImage; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. PixelClassifier; getClassifier(). Get the PixelClassifier performing the classification. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. ImageData<BufferedImage>; getImageData(). Get the underlying ImageData used for classification. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmpt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:1553,cache,cached,1553,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,2,['cache'],['cached']
Performance,"rs:; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. getWindow; public static Window getWindow(String title); Access a window currently open within QuPath by its title. Parameters:; title - ; Returns:. copyToClipboard; public static void copyToClipboard(Object o); Try to copy an object to the clipboard.; This will attempt to perform a smart conversion; for example, if a window is provided a snapshot will be taken ; and copied as an image. Parameters:; o - the object to copy. loadDisplaySettings; public static ImageDisplaySettings loadDisplaySettings(String name); Load a display settings object from a file path or from the current project. Parameters:; name - ; Returns:; the settings if they could be read, or null otherwise. applyDisplaySettings; public static boolean applyDisplaySettings(String name); Apply the display settings with the specified name or file path to the current version.; This provides a convenient alternative to; . var settings = loadDisplaySettings(name);; var viewer = getCurrentViewer();; if (settings != null); applyDisplaySettings(viewer, settings);; ; . Parameters:; name - ; Returns:; See Also:. loadDisplaySettings(String). applyDisplaySettings; public static boolean applyDisplaySettings(ImageDisplaySettings settings); Apply the display settings to the current viewer. Parameters:; settings - ; Returns:. applyDisplaySettings; publ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:23069,perform,perform,23069,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['perform'],['perform']
Performance,"rst value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and earlier). This method does not encode special characters. Parameters:; path - ; Returns:; Throws:; URISyntaxException; See Also:. toEncodedURI(String path). toEncodedURI; public static URI toEncodedURI(String path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ""|""). This method will perform a simple check for; http: and https: schemes at the beginning of the URI. It will then modify ; the Query (@see Query) ; to a valid form. Finally, a reconstructed valid URI is returned. Note: this method will ; only encode the Query part of the URI (i.e. Fragments, if present, will be ignored ).; ; E.g. ""https://host?query=first|second"" will return ""https://host?query%3Dfirst%7Csecond"". Parameters:; path - ; Returns:; encodedURI; Throws:; URISyntaxException; UnsupportedEncodingException; MalformedURLException. toPath; public static Path toPath(URI uri); Try to identify a Path from a URI, dropping any query or fragment elements.; ; This returns the Path if successful and null otherwise (e.g. if the URI does not correspond to a file). ; There is no check whether the Path exists, and support for an authority is platform-dependent. Parameters:; uri - ; Returns:. arrayToString; public static String arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces); Convert a double array to stri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:14278,perform,perform,14278,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['perform'],['perform']
Performance,"s for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK_FX. Black with opacity at 50%. static final Color; TRANSLUCENT_WHITE_FX. White with opacity at 50%. Constructor Summary; Constructors. Constructor; Description; ColorToolsFX();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getARGB(Color color). Get a packed int (ARGB) representation of a Color object. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAN",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:1559,cache,cached,1559,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,1,['cache'],['cached']
Performance,"s for interactively modifying existing ROIs. RoiLabeling. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. RotatedImageServer. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. RunningStatistics. Helper class for computing basic statistics from values as they are added. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. ScriptAttributes. Default attributes that can be set when running scripts. ScriptAutoCompletor. Interface for classes that implement auto-completion (e.g. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T>. Basic script editor control using JavaFX. ScriptLanguage. Abstract class to represent languages supported by the script editor. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. ScriptParameters. Class that stores key information that is useful for running scripts. ScriptParameters.Builder. Builder class for ScriptParameters. ScriptStyler. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:50966,perform,perform,50966,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['perform'],['perform']
Performance,"s in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. clearCache; public void clearCache(); Clear any cached tiles. stop; public void stop(); Stop the overlap, halting any pending tile requests. getLocationString; public String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); Description copied from interface: PathOverlay; Get a location string to display when showing a specified image.; ; The default implementation returns null.; If subclasses override this method, they must return quickly, as it may be used to determine text to display as the mouse ; moves over an image. Specified by:; getLocationString in interface PathOverlay; Overrides:; getLocationString in class AbstractOverlay; Parameters:; imageData - ; x - x-coordinate, in the image space (not the viewer component space); y - y-coordinate, in the image space (not the viewer component space); z - z-index for the region currently being viewed; t - t-index for the region currently being viewed; Returns:. getDefaultLocationString; public static String getDefaultLocatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:10252,cache,cached,10252,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['cache'],['cached']
Performance,"s the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragDropImportListener; getDefaultDragDropListener(). Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. String; getDisplayedImageName(ImageData<BufferedImage> imageData). Get the image name to display for a specified image. ExtensionManager; getExtensionManager(). Get an ExtensionManager to facilitating working with extensions. ImageData<BufferedImage>; getImageData(). Get the value of imageDataProperty(). DefaultImageRegionStore; getImageRegionStore(). Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. static QuPathGUI; getInstance(). Get the static instance of the current QuPath GUI. LogViewerCommand; getLogViewerCommand(). Get the log viewer associated with this QuPath instance. Menu; getMenu(String name,; boolean createMenu). Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. MenuBar; getMenuBar(). Get the menubar for the main QuPath application. OverlayActions; getOverlayActions(). Get the actions associated with the viewer overlay options. OverlayOptions; getOverlayOptions(). Return the global OverlayOptions instance, used to control display within viewers by default. PreferencePane; getPreferencePane(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:4423,cache,cache,4423,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['cache'],['cache']
Performance,"s(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImageServer(Class<T> imageClass). Method Details. getImageClass; public Class<T> getImageClass(); Description copied from interface: ImageServer; Get the class of the image representation returned by this ImageServer. Specified by:; getImageClass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.ServerBuilder<T> createServerBuilder(); Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Returns:. getBuilder; public ImageServerBuilder.ServerBuilder<T> getBuilder(); Description copied from interface: ImageServer; Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:4355,cache,cache,4355,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['cache'],['cache']
Performance,"s:. colorTileProperty; public static IntegerProperty colorTileProperty(); The default color used to display tile objects. Returns:. autoSetAnnotationClassProperty; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty(); Classification that should automatically be applied to all new annotations. May be null. Returns:. alwaysPaintSelectedObjectsProperty; public static BooleanProperty alwaysPaintSelectedObjectsProperty(); Always paint selected objects in the viewer, even if the opacity setting is 0. Returns:. viewerInterpolateBilinearProperty; public static BooleanProperty viewerInterpolateBilinearProperty(); Request that images are displayed in viewers using bilinear interpolation. Returns:. detectionTreeDisplayModeProperty; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty(); Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). Returns:. maxObjectsToClipboardProperty; public static IntegerProperty maxObjectsToClipboardProperty(); The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> scalebarFontWeightProperty(); Preferred font weight in the viewer. Returns:. scalebarLineWidthProperty; public static DoubleProperty scalebarLineWid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:59263,perform,performance,59263,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['perform'],['performance']
Performance,"sName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:138440,load,loadDensityMap,138440,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadDensityMap']
Performance,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:1872,perform,performed,1872,javadoc/docs/qupath/opencv/ml/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html,1,['perform'],['performed']
Performance,"should be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. getWindow; public static Window getWindow(String title); Access a window currently open within QuPath by its title. Parameters:; title - ; Returns:. copyToClipboard; public static void copyToClipboard(Object o); Try to copy an object to the clipboard.; This will attempt to perform a smart conversion; for example, if a window is provided a snapshot will be taken ; and copied as an image. Parameters:; o - the object to copy. loadDisplaySettings; public static ImageDisplaySettings loadDisplaySettings(String name); Load a display settings object from a file path or from the current project. Parameters:; name - ; Returns:; the settings if they could be read, or null otherwise. applyDisplaySettings; public static boolean applyDisplaySettings(String name); Apply the display settings with the specified name or file path to the current version.; This provides a convenient alternative to; . var settings = loadDisplaySettings(name);; var viewer = getCurrentViewer();; if (settings != null); applyDisplaySettings(viewer, settings);; ; . Parameters:; name - ; Returns:; See Also:. loadDisplaySettings(String). applyDisplaySettings; public static boolean applyDisplaySettings(ImageDisplaySettings settings); Apply the display settings to the current viewer. Parameters:; settings - ; Returns:. applyDisplaySettings; public static boolean applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings); Apply the display settings to the specified viewer. Parameters:; viewer - ; settings - ; Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:23222,load,loadDisplaySettings,23222,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,2,['load'],['loadDisplaySettings']
Performance,"sifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier within the current project, or file paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:132231,load,load,132231,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['load']
Performance,"sion of the specified color, where the RGB values are independently scaled by a specified factor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_WHITE; public static final Color TRANSLUCENT_WHITE; White, with 50% opacity. TRANSLUCENT_BLACK; public static final Color TRANSLUCENT_BLACK; Black, with 50% opacity. Constructor Details. ColorToolsAwt; public ColorToolsAwt(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb,; boolean hasAlpha); Get cached color, explicitly stating whether alpha should be included or not. Parameters:; rgb - ; hasAlpha - ; Returns:. getIndexColorModel; public static IndexColorModel getIndexColorModel(StainVector stain,; boolean whiteBackground); Get an IndexColorModel representing a color deconvolution stain.; The color is just an approximation for visualization purposes, it does not perfectly match the stain itself. Parameters:; stain - the stain to use; whiteBackground - if true, the color model will have a white background; if false, it will have a black background; Returns:. createIndexColorModel; public static IndexColorModel createIndexColorModel(int red,; int green,; int blue,; boolean whiteBackground); Get an IndexColorModel representing a linear LUT based on a RG",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:3733,cache,cached,3733,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,1,['cache'],['cached']
Performance,"ss for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK_FX. Black with opacity at 50%. static final Color; TRANSLUCENT_WHITE_FX. White with opacity at 50%. Constructor Summary; Constructors. Constructor; Description; ColorToolsFX();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getARGB(Color color). Get a packed int (ARGB) representation of a Color object. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:1479,cache,cached,1479,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,1,['cache'],['cached']
Performance,"ss qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:108276,cache,cached,108276,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cached']
Performance,"ssibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(Integer) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color. getCachedColor(Integer) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color. getCachedColor(Integer, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color, explicitly stating whether alpha should be included or not. getCachedColor(Integer, boolean) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color, explicitly stating whether alpha should be included or not. getCachedMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. getCachedMeasurementValue(ROI, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. getCachedRegion(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedStroke(double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Get a BasicStroke with the specified thickness. getCachedThumbnail(ImageServer<BufferedImage>, int,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:344963,cache,cached,344963,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cached']
Performance,"st,BufferedImage>; thumbnailCache;  ; protected List<TileListener<BufferedImage>>; tileListeners;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addTileListener(TileListener<BufferedImage> listener);  ; void; clearCache(). Clear the cache, including thumbnails, and cancel any pending requests. void; clearCache(boolean clearThumbnails,; boolean stopWaiting). Clear the cache, optionally including thumbnails and stopping any pending requests. void; clearCacheForRequestOverlap(RegionRequest request);  ; void; clearCacheForServer(ImageServer<BufferedImage> server);  ; void; close();  ; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<RegionRequest,BufferedImage>; getCachedTilesForServer(ImageServer<BufferedImage> server). Get a map of all cached tiles pertaining to a specific ImageServer. BufferedImage; getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache);  ; long; getTileCacheSize(). Get the tile cache size, in bytes. void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:1724,cache,cache,1724,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['cache'],['cache']
Performance,"straints, setConstraints, setConstraints, setConstraints, setConstraints, setFillHeight, setFillWidth, setGridLinesVisible, setHalignment, setHgap, setHgrow, setMargin, setRowIndex, setRowSpan, setValignment, setVgap, setVgrow, toString, vgapProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, ac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:4503,cache,cacheShapeProperty,4503,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,2,['cache'],['cacheShapeProperty']
Performance,"subtract; public static ROI subtract(ROI roiMain,; ROI... roisToSubtract); Subtract one or more ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. subtract; public static ROI subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract); Subtract a collection of ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersectsRegion; public static boolean intersectsRegion(ROI roi,; ImageRegion region); Test whether a ROI and an ImageRegion intersect.; ; This returns false quickly if the ROI and region do not share the same z-slice or timepoint,; or the ROI's bounding box does not intersect the region.; Otherwise, a more expensive geometry test is performed to check for intersection. Parameters:; roi - ; region - ; Returns:; true if the ROI and the region intersect, false otherwise. transformROI; public static ROI transformROI(ROI roi,; AffineTransform transform); Apply an affine transform to a ROI, returning the result. Parameters:; roi - the ROI to transform; transform - the affine transform to apply; if null or the identity transform, the original ROI is returned unchanged; Returns:; the transformed ROI, or the original if no (non-identity) transform is specified. clipToROI; public static List<ROI> clipToROI(ROI parent,; Collection<? extends ROI> rois); Intersect a collection of ROIs with a single parent ROI, returning all results that are valid.; Where possible, ROIs are returned unchanged. Parameters:; parent - the parent ROI, used to define the clip boundary; rois - a collection of ROIs that should be intersected with parent; Returns:; list of intersected ROIs; this may be shorter than rois if some lie completely outs",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:9045,perform,performed,9045,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['perform'],['performed']
Performance,"t a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ObjectMerger. Helper class for merging objects using different criteria. ObjectsMenuActions;  ; ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. OMEPyramidWriter. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyra",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:32273,perform,perform,32273,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['perform'],['perform']
Performance,"t be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Parameters:; pathObject - ; name - ; Returns:; See Also:. getMeasurementValue(PathObject, String). getMeasurementValue; public Number getMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Parameters:; pathObject - ; name - ; Returns:; See Also:. getCachedMeasurementValue(PathObject, String). getMeasurementValue; @Deprecated; public Number getMeasurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. Parameters:; roi - ; name - ; Returns:; See Also:. getCachedMeasurementValue(ROI, String). getMeasurementValue; public Number getMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Parameters:; roi - ; name - ; Returns:; See Also:. getMeasurementValue(ROI, String). addMeasurements; public boolean addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID); Add measurements to specified objects. Parameters:; objectsToMeasure - the objects to measure.; measurementID - identifier that is prepended to measurement names, to make these identifiable later (optional; may be null); Returns:; true if measu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:4369,cache,cachedOnly,4369,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,2,['cache'],"['cached', 'cachedOnly']"
Performance,"t has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. clearCache; public void clearCache(); Clear any cached tiles. stop; public void stop(); Stop the overlap, halting any pending tile requests. getLocationString; public String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); Description copied from interface: PathOverlay; Get a location string to display when showing a specified image.; ; The default implementation returns null.; If subclasses override this method, they must return quickly, as it may be used to determine text to display as the mouse ; moves over an image. Specified by:; getLocationString in interface PathOverlay; Overrides:; getLocationString in class AbstractOverlay; Parameters:; imageData - ; x - x-coordinate, in the image space (not the viewer component space); y - y-coordinate, in the image space (not the viewer component space); z - z-index for the region currently being viewed; t - t-index for the region currently being viewed; Returns:. getDefaultLocationString; public static String getDefaultLocationString(ImageServer<BufferedImage> server,; double x,; double y,; int z,; int t); Default method for getting a location string from an ImageServer using cached tiles.; If tiles are not cached, no string is returned.; ; May be used by classes implementing PathOverlay.getLocationString(ImageData, double, double, int, int). Parameters:; server - ; x - ; y - ; z - ; t - ; Returns:; location String based upon pixel values and cached tiles, or null if no String is available. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:11387,cache,cached,11387,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,3,['cache'],['cached']
Performance,"t. Method Details. getCompletionText; String getCompletionText(); Get the text that should be inserted for the full completion. Returns:. getDisplayText; String getDisplayText(); Get the text that should be displayed for this completion.; This which may include additional information that isn't part of the completion itself; (e.g. method parameters, return type). Returns:. getInsertion; String getInsertion(String text,; int pos,; String lastToken); Get the string to insert, given the provided text and position.; This involves stripping off any overlapping part of the completion, ; so that it can be inserted at pos. Parameters:; text - the full text; pos - the current caret position; lastToken - the final token, as output by getTokenizer().; If null, the token will be calculated - but it can improve performance to precompute ; tokens whenever multiple completions use the same way of determining tokens.; Returns:; the text to insert. isCompatible; boolean isCompatible(String text,; int pos,; String lastToken); Test if this completion is compatible with the provided text. Parameters:; text - the full text; pos - the current caret position; lastToken - the final token, as output by getTokenizer().; If null, the token will be calculated - but it can improve performance to precompute ; tokens whenever multiple completions use the same way of determining tokens.; Returns:. getTokenizer; default AutoCompletions.CompletionTokenizer getTokenizer(); Get the tokenizer needed to extract the relevant bit of the text to determine the validity and/or ; insertion for the completion.; ; Important! This exists for efficiency, so that if many completions use the same tokenizer, ; the (possibly long) text does not need to be re-tokenized each time.; It is therefore important to return a shared instance, rather than a new object for each completion. Returns:; the completion tokenizer, which must not be null; See Also:. AutoCompletions.SUBSTRING_TOKENIZER; AutoCompletions.JAVA_TOKENIZER. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html:2723,perform,performance,2723,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.Completion.html,1,['perform'],['performance']
Performance,"taOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; Returns:; the ImageDataServer. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; tileWidth - the tile width for the server; tileHeight - the tile height of the server; Returns:; the ImageDataServer. buildImageDataOp; public static ImageDataOp buildImageDataOp(ColorTransforms.ColorTransform... inputChannels); Create an ImageDataOp, optionally using a specified array of input channels. Parameters:; inputChannels - array of ColorTransforms.ColorTransform objects used to extract the pixels that will form the channels of the output Mat.; If empty, the original image channels will be used.; Returns:; the ImageDataOp. buildImageDataOp; public static ImageDataOp buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels); Create an ImageDataOp, optionally using a specified collection of input channels. Parameters:; inputChannels - array of ColorTransforms.ColorTransform objects used to extract the pixels that will form the channels of the output Mat.; If empty, the original image channels will be used.; Returns:; the ImageData",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:5301,perform,performing,5301,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['perform'],['performing']
Performance,"terpolation(ImageInterpolation); interpolationProperty(). Constructor Details. AbstractImageOverlay; protected AbstractImageOverlay(OverlayOptions options). Method Details. setInterpolation; public void setInterpolation(ImageInterpolation interpolation); Set the preferred method of interpolation to use for display. Parameters:; interpolation - . getInterpolation; public ImageInterpolation getInterpolation(); Get the preferred method of interpolation to use for display. Returns:. interpolationProperty; public ObjectProperty<ImageInterpolation> interpolationProperty(); The preferred method of interpolation to use for display. Returns:; See Also:. getInterpolation(); setInterpolation(ImageInterpolation). setInterpolation; protected void setInterpolation(Graphics2D g2d). paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html:3822,perform,performed,3822,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,2,['perform'],"['performance', 'performed']"
Performance,"th a specified initial downsample value ; (e.g. scaleVariance - Variable in class qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Smoothing scale for Gaussian-weighted standard deviation estimate. scatterChart() - Static method in class qupath.lib.gui.charts.Charts. Create a Charts.ScatterChartBuilder for generating a custom scatter plot. SCREENSHOT - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; SCRIPT_EDITOR - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; SCRIPT_EDITOR - Variable in class qupath.lib.gui.actions.AutomateActions;  ; SCRIPT_EDITOR - Variable in class qupath.lib.gui.actions.menus.AutomateMenuActions.Actions;  ; SCRIPT_INTERPRETER - Variable in class qupath.lib.gui.actions.AutomateActions;  ; SCRIPT_INTERPRETER - Variable in class qupath.lib.gui.actions.menus.AutomateMenuActions.Actions;  ; ScriptableWorkflowStep - Interface in qupath.lib.plugins.workflow. A WorkflowStep that can also return some Javascript that, if run, would perform the step. ScriptAttributes - Class in qupath.lib.scripting. Default attributes that can be set when running scripts. ScriptAttributes() - Constructor for class qupath.lib.scripting.ScriptAttributes;  ; ScriptAutoCompletor - Interface in qupath.lib.scripting.languages. Interface for classes that implement auto-completion (e.g. ScriptEditor - Interface in qupath.lib.gui.scripting. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T> - Interface in qupath.lib.gui.scripting. Basic script editor control using JavaFX. ScriptingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ScriptingPreferences;  ; ScriptLanguage - Class in qupath.lib.scripting.languages. Abstract class to represent languages supported by the script editor. ScriptLanguage(String, String) - Constructor for class qupath.lib.scripting.languages.ScriptLanguage. Default constructor for a ScriptLanguage. ScriptLanguage(String, Collection<S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:887626,perform,perform,887626,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['perform'],['perform']
Performance,"th.lib.roi.PolylineROI;  ; getImagePlane() - Method in class qupath.lib.roi.RectangleROI;  ; getImagePlane() - Method in interface qupath.lib.roi.interfaces.ROI. Get the ImagePlane, which contains the values for c, z and t in a single object. getImagePlane(Roi, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Get the ImagePlane of an ImageJ Roi, based upon its stored positions. getImageRegion() - Method in interface qupath.lib.images.PathImage. The region within the (original, possibly larger) image that this particular image corresponds to. getImageRegion(Rectangle, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a specified Rectangle bounding box. getImageRegion(Shape, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a the bounding box of a Shape. getImageRegionStore() - Method in class qupath.lib.gui.QuPathGUI. Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. getImageRegionStore() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the region store used by this viewer for tile caching and painting. getImages() - Method in interface qupath.lib.projects.ProjectImageEntry. Access additional images associated with the project entry, e.g. getImageServer() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getImageServerTypeAdapterFactory(boolean) - Static method in class qupath.lib.images.servers.ImageServers. Get a TypeAdapterFactory for ImageServers, optionally including metadata in the serialized ; form of the server. getImageSupport(URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Get the ImageServerBuilder.UriImageSupport that is best able to open the specified image with optional args. getImageSupport(ImageServerBuilder<BufferedImage>, URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Get the ImageServerBuilder.Ur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:408721,cache,cache,408721,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cache']
Performance,"the result of chaining the other ops together. sequential; public static ImageOp sequential(ImageOp... ops); Apply an array of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. splitMerge; public static ImageOp splitMerge(ImageOp... ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. identity; public static ImageOp identity(); Create an op that returns its input unchanged.; This is useful where an op is required, but no processing should be performed (e.g. with splitSubtract(ImageOp, ImageOp)). Returns:. exp; public static ImageOp exp(); Create an op that returns Euler's number e raise to the power of the Mat values. Returns:. log; public static ImageOp log(); Create an op that returns the natural logarithm of values. Returns:. round; public static ImageOp round(); Create an op that rounds floating point values.; Non-finite input values are left unchanged. Returns:. floor; public static ImageOp floor(); Create an op that floors floating point values.; Non-finite input values are left unchanged. Returns:. ceil; public static ImageOp ceil(); Create an op that ceils floating point values.; Non-finite input values are left unchanged. Returns:. replaceNaNs; public static ImageOp replaceNaNs(double replaceValue); Create an op that replaces NaNs with a specified value. Parameters:; replaceValue - the value to replace NaNs; Returns:. replace; public static ImageOp replace(double originalValue,; double ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:6255,perform,performed,6255,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,1,['perform'],['performed']
Performance,"this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Get the x coordinate of the ROI centroid;. double; getCentroidY(). Get the y coordinate of the ROI centroid;. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) po",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:2828,cache,caches,2828,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['cache'],['caches']
Performance,"thod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:2056,perform,perform,2056,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,1,['perform'],['perform']
Performance,"thod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:2041,perform,perform,2041,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,1,['perform'],['perform']
Performance,"thod to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cache - ; cls - . getCache; public static <T> Map<RegionRequest,T> getCache(Class<T> cls); Get the cache in use for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cls - ; Returns:. setServiceLoader; public static void setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader); Replace the default service loader with another.; ; This can be handy if the ServiceLoader should be using an alternative ClassLoader,; e.g. to auto-discover ImageServerBuilders in alternative directories. Parameters:; newLoader - . getInstalledImageServerBuilders; public static List<ImageServerBuilder<?>> getInstalledImageServerBuilders(); Request all available ImageServerBuilders. Returns:. getInstalledImageServerBuilders; public static <T> List<ImageServerBuilder<T>> getInstalledImageServerBuilders(Class<T> imageClass); Request all available ImageServerBuilders supporting a given image class. Type Parameters:; T - ; Parameters:; imageClass - ; Returns:. legacyPathToURI; public static URI legacyPathToURI(String path); throws IOException; Method to help with converting legacy image paths to URIs.; This is intended for compatibility with data files used in QuPath v0.1.2, where servers ; were represented using paths only (rather than JSON). Parameters:; path - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:2809,load,loader,2809,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,1,['load'],['loader']
Performance,"thodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been lo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:1671,load,load,1671,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['load'],['load']
Performance,"throws an IllegalArgumentException if the classifier cannot be found. Parameters:; imageData - ; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier within the current project, or file paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int sea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:132013,load,loadDensityMap,132013,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadDensityMap']
Performance,"ting.QP. Clear the measurement lists for all annotations in the current hierarchy. clearAnnotationMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all annotations in a hierarchy. clearAnnotations() - Static method in class qupath.lib.scripting.QP. Remove all the annotation objects from the current PathObjectHierarchy. clearBoundary(ByteProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Starting from all white pixels (value = 255) on a ROI's boundary,; fill the pixels with black. clearCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, including thumbnails, and cancel any pending requests. clearCache() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Clear any cached tiles. clearCache(boolean, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Clear the cache, optionally including thumbnails and stopping any pending requests. clearCachedOverlay() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetection",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:108097,cache,cache,108097,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['cache']
Performance,"tional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:15020,perform,performance,15020,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['perform'],['performance']
Performance,"tions.menus.ViewMenuActions.Actions;  ; BrightnessContrastChannelPane - Class in qupath.lib.gui.commands.display. A pane responsible for the display and selection of channels from an image display. BrightnessContrastChannelPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastChannelPane;  ; BrightnessContrastCommand - Class in qupath.lib.gui.commands. Command to show a Brightness/Contrast dialog to adjust the image display. BrightnessContrastCommand(QuPathGUI) - Constructor for class qupath.lib.gui.commands.BrightnessContrastCommand. Constructor. BrightnessContrastHistogramPane - Class in qupath.lib.gui.commands.display. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastHistogramPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane;  ; BrightnessContrastSettingsPane - Class in qupath.lib.gui.commands.display. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSettingsPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastSettingsPane;  ; BrightnessContrastSliderPane - Class in qupath.lib.gui.commands.display. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrightnessContrastSliderPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastSliderPane;  ; brown(int) - Static method in class qupath.lib.color.ColorTransformer. Extract brown value, (blue - (red + green)*0.3f). Brown - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Brown value, (blue - (red + green)*0.3f). browseDirectory(File) - Static method in class qupath.lib.gui.tools.GuiTools. Open the directory containing a file for browsing. browseURI(URI) - Static method in class qupath.lib.gui.tools.GuiTools. Try to open a URI in a web browser. BRUSH - Static variable in class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:63566,load,load,63566,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['load']
Performance,"tring). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel classifier; measurementID - . createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifierName - the name of the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selecte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:140311,load,loadPixelClassifier,140311,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['load'],['loadPixelClassifier']
Performance,"ts.classes.PathClass. Get the value of PathClass.NULL_CLASS, used to represent no classification. getNumBins() - Method in class qupath.lib.gui.charts.HistogramDisplay. Get the requested number of bins used for the histogram. getNumericValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getNumericValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get the numeric value from an object for the specific measurement. getNumNaNs() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of NaN values added. getNumPoints() - Method in class qupath.lib.roi.AreaROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.GeometryROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolygonROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolylineROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.EllipseROI. Returns 4 (since the ellipse is defined by its bounding box). getNumPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get the number of points, as would be returned by ROI.getAllPoints(). getNumPoints() - Method in class qupath.lib.roi.LineROI. Returns 2 (since the line is defined by its end points). getNumPoints() - Method in class qupath.lib.roi.PointsROI;  ; getNumPoints() - Method in class qupath.lib.roi.RectangleROI. Returns 4 (since the rectangle is defined by its bounding box). getNumThreads() - Static method in class qupath.lib.common.Prefs. Get the requested number of threads to use for parallelization. getObjectClassificationString(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string representing the object classificat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:460000,cache,caches,460000,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['cache'],['caches']
Performance,"uble theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:35701,cache,cached,35701,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['cache'],['cached']
Performance,"uest,BufferedImage> getCachedTilesForServer(ImageServer<BufferedImage> server); Get a map of all cached tiles pertaining to a specific ImageServer. Parameters:; server - ; Returns:. workerComplete; protected void workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker); Every TileWorker should call this when the task is done!. Parameters:; worker - . getCachedRegion; protected BufferedImage getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request). stopWaiting; protected boolean stopWaiting(RegionRequest request). requestImageTile; protected Object requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned); Request an image tile.; There are 3 possible return values:; - a T for the tile; - the TileWorker<T> object currently charged with fetching the tile; - null, if this is the value stored in the TiledImageCache (i.e. the tile has previously been fetched, and there is no image corresponding to the request). Parameters:; server - ; request - ; cache - ; ensureTileReturned - ; Returns:. createTileWorker; protected qupath.lib.gui.images.stores.TileWorker<BufferedImage> createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). getThumbnail; public BufferedImage getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache). clearCache; public void clearCache(); Clear the cache, including thumbnails, and cancel any pending requests. clearCache; public void clearCache(boolean clearThumbnails,; boolean stopWaiting); Clear the cache, optionally including thumbnails and stopping any pending requests. Parameters:; clearThumbnails - ; stopWaiting - . clearCacheForServer; public void clearCacheForServer(ImageServer<BufferedImage> server). clearCacheForRequestOverlap; public void clearCacheForRequestOverlap(RegionRequest request). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:8501,cache,cache,8501,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,4,['cache'],['cache']
Performance,"ufferedImage> imageData); Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. there has been no project set for the calling thread via setBatchProjectAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current image data in the user interface, when running interactively.; This is not necessarily always the image that is 'current' when running scripts, e.g. when batch processing. Parameters:; imageData - . setBatchProjectAndImage; public static void setBatchProjectAndImage(Project<BufferedImage> project,; ImageData<BufferedImage> imageData); Set the Project and ImageData to use for batch processing for the current thread. Parameters:; project - ; imageData - . resetBatchProjectAndImage; public static void resetBatchProjectAndImage(); Reset the Project and ImageData used for batch processing for the current thread. loadImageData; @Deprecated; public static ImageData<BufferedImage> loadImageData(String path,; boolean setBatchData); throws IOException; Deprecated.; Load ImageData from a file. Parameters:; path - path to the file containing ImageData.; setBatchData - if true, the setBatchImageData(ImageData) will be called if the loading is successful.; Returns:; Throws:; IOException; See Also:. setBatchImageData(qupath.lib.images.ImageData<java.awt.image.BufferedImage>). fireHierarchyUpdate; public static void fireHierarchyUpdate(); Trigger an update for the current hierarchy.; ; This should be called after any (non-standard) modifications are made to the hierarchy ; to ensure that all listeners are notified (including for any GUI).; ; It is common to call it at the end of any script that does any direct modification of objects ; (e.g. adding/removing measurements, setting classifications). fireHierarchyUpdate; public static void fireHierarchyUpdate(PathObjectHierarchy hierarchy); Trigger an update for the specified hierarchy.; ; This should be called after any (non-stan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:48192,load,loadImageData,48192,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['load'],['loadImageData']
Performance,"uld be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. getWindow; public static Window getWindow(String title); Access a window currently open within QuPath by its title. Parameters:; title - ; Returns:. copyToClipboard; public static void copyToClipboard(Object o); Try to copy an object to the clipboard.; This will attempt to perform a smart conversion; for example, if a window is provided a snapshot will be taken ; and copied as an image. Parameters:; o - the object to copy. loadDisplaySettings; public static ImageDisplaySettings loadDisplaySettings(String name); Load a display settings object from a file path or from the current project. Parameters:; name - ; Returns:; the settings if they could be read, or null otherwise. applyDisplaySettings; public static boolean applyDisplaySettings(String name); Apply the display settings with the specified name or file path to the current version.; This provides a convenient alternative to; . var settings = loadDisplaySettings(name);; var viewer = getCurrentViewer();; if (settings != null); applyDisplaySettings(viewer, settings);; ; . Parameters:; name - ; Returns:; See Also:. loadDisplaySettings(String). applyDisplaySettings; public static boolean applyDisplaySettings(ImageDisplaySettings settings); Apply the display settings to the current viewer. Parameters:; settings - ; Returns:. applyDisplaySettings; public static boolean applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings); Apply the display settings to the specified viewer. Parameters:; viewer - ; settings - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:23704,load,loadDisplaySettings,23704,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,2,['load'],['loadDisplaySettings']
Performance,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartThresholdPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.charts.ChartThresholdPane. All Implemented Interfaces:; Styleable, EventTarget. public class ChartThresholdPane; extends BorderPane; Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. Property Summary; Properties. Type; Property; Description; DoubleProperty; lineWidth. Line width property used for displaying threshold lines. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1094,cache,cacheShape,1094,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['cache'],['cacheShape']
Performance,"uppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read-only' mode. Returns:; See Also:. isReadOnly(); setReadOnly(boolean). setReadOnly; public void setReadOnly(boolean readOnly); Specify whether QuPath should be in 'read-only' mode. Parameters:; readOnly - ; See Also:. isReadOnly(). getScriptEditor; public ScriptEditor getScriptEditor(); Get a reference to the current ScriptEditor (which may or may not be open at the moment). Returns:. setScriptEditor; public void setScriptEditor(ScriptEditor scriptEditor); Set a new ScriptEditor, which will be used from now on. Parameters:; scriptEditor - . getOverlayOptions; public OverlayOptions getOverlayOptions(); Return the global OverlayOptions instance, used to control display within viewers by default. Returns:. getImageRegionStore; public DefaultImageRegionStore getImageRegionStore(); Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. Returns:. getMenuBar; public MenuBar getMenuBar(); Get the menubar for the main QuPath application. Returns:. getMenu; public Menu getMenu(String name,; boolean createMenu); Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. Parameters:; name - ; createMenu - ; Returns:. getStage; public Stage getStage(); Get the main QuPath stage. Returns:. refreshTitle; public void refreshTitle(); Refresh the title bar in the main QuPath window. getDisplayedImageName; public String getDisplayedImageName(ImageData<BufferedImage> imageData); Get the image name to display for a specified image.; This can be used to determine a name to display in the title bar, for example. Parameters:; imageData - ; Returns:. getBuildString; public static String getBuildString(); Get a String representing the QuPath version & build time. Returns:. getVersion; public stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:29296,cache,cache,29296,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['cache'],['cache']
Performance,"urce; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Specified by:; apply in interface ImageOp; Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. ImageOp.getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; public Padding getPadding(); Description copied from interface: ImageOp; Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when ImageOp.apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Specified by:; getPadding in interface ImageOp; Returns:; the padding requested by this operation. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:3140,perform,perform,3140,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,1,['perform'],['perform']
Performance,"vafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastHistogramPane; extends BorderPane; A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. Property Summary; Properties. Type; Property; Description; BooleanProperty; doLogCounts. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValue. The maximum value displayed on the histogram. DoubleProperty; minValue. The minimum value displayed on the histogram. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:1377,cache,cacheShape,1377,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['cache'],['cacheShape']
Performance,"ver<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit). Create objects based upon an ImageServer that provides classification or probability output. static boolean; createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one channel of another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one or more channels of another server. static int; getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t). Request the classification for a specific pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Const",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:5459,cache,cacheAllTiles,5459,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['cache'],['cacheAllTiles']
Performance,"vers.openslide.jna.OpenSlideJNA;  ; OpenSlide.OpenSlideDisposedException - Exception Class in qupath.lib.images.servers.openslide.jna. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideDisposedException() - Constructor for exception class qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException;  ; OpenSlideExtension - Class in qupath.ext.openslide;  ; OpenSlideExtension() - Constructor for class qupath.ext.openslide.OpenSlideExtension;  ; OpenslideImageServer - Class in qupath.lib.images.servers.openslide. ImageServer implementation using OpenSlide. OpenslideImageServer(URI, String...) - Constructor for class qupath.lib.images.servers.openslide.OpenslideImageServer. Create an ImageServer using OpenSlide for the specified file. OpenSlideJNA - Interface in qupath.lib.images.servers.openslide.jna. JNA interface for OpenSlide. OpenSlideLoader - Class in qupath.lib.images.servers.openslide.jna. Static helper class to manage loading the OpenSlide library. OpenSlideLoader() - Constructor for class qupath.lib.images.servers.openslide.jna.OpenSlideLoader;  ; openslidePathProperty - Variable in class qupath.ext.openslide.OpenSlideExtension;  ; OpenslideServerBuilder - Class in qupath.lib.images.servers.openslide. Builder for Openslide ImageServer. OpenslideServerBuilder() - Constructor for class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; Optical_density_sum - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Sum of red, green and blue optical densities. opticalDensitySum(int, double[]) - Static method in class qupath.lib.color.ColorTransformer. Extract optical density sum value from a packed RGB pixel. opticalDensitySum(int, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Extract optical density sum value from a packed RGB pixel. options(OverlayOptions) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:730263,load,loading,730263,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loading']
Performance," ; refreshAllEditors() - Method in class qupath.lib.gui.panes.PreferencePane. Request that all the property editors are regenerated. refreshChannelOptions() - Method in class qupath.lib.display.ImageDisplay. Refresh the channel options. refreshCombo() - Method in class qupath.lib.gui.charts.HistogramDisplay. Refresh the available measurements. refreshDuplicateIDs() - Static method in class qupath.lib.scripting.QP. Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. refreshDuplicateIDs(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. refreshEntries() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Refresh the measurement values. refreshExtensions(boolean) - Method in class qupath.lib.gui.ExtensionManager. Check the extensions directory, loading any new extensions found there. refreshFileContents() - Method in class qupath.lib.gui.scripting.ScriptTab;  ; refreshHistogram() - Method in class qupath.lib.gui.charts.HistogramDisplay. Refresh the currently-displayed histogram (e.g. refreshID() - Method in class qupath.lib.objects.PathObject. Regenerate a new random ID. refreshIDs() - Static method in class qupath.lib.scripting.QP. Refresh all object IDs for the current hierarchy. refreshIDs(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Refresh all object IDs for the current hierarchy. refreshingExtensions() - Method in class qupath.lib.gui.ExtensionManager. Property indicating whether extensions are in the process of being refreshed. refreshList(ListView<T>) - Static method in class qupath.lib.gui.tools.GuiTools. Refresh a ListView in the Application thread. refreshObjectIDs(ImageData<?>, boolean) - Static method in class qupath.lib.gui.commands.Commands. Refresh object IDs to ensure uniqueness. refres",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:836140,load,loading,836140,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['load'],['loading']
Safety," (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:2438,predict,prediction,2438,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['predict'],['prediction']
Safety," + Math.exp(-value)). SIGNED_DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SimpleImage - Interface in qupath.lib.analysis.images. A minimal interface for accessing pixel values in a single-channel image. SimpleImages - Class in qupath.lib.analysis.images. Create SimpleImage instances for basic pixel processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976039,avoid,avoid,976039,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avoid'],['avoid']
Safety," 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; AbstractDnnModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more O",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:1998,predict,prediction,1998,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,1,['predict'],['prediction']
Safety," ; Important! Use this with caution or, even better, not at all!; ; In general, the ID for an object should be unique.; This is best achieved by allowing the ID to be generated randomly when the object ; is created, and never changing it to anything else.; ; However, there are times when it is necessary to transfer the ID from an existing object, ; such as whenever the ROI of an object is being transformed and the original object deleted.; ; For that reason, it is possible (although discouraged) to set an ID explicitly. Parameters:; id - the ID to use; Throws:; IllegalArgumentException - if the specified ID is null. refreshID; public void refreshID(); Regenerate a new random ID. See Also:. setID(UUID). storeMetadataValue; protected Object storeMetadataValue(String key,; String value); Store a metadata value.; ; Note: This should be used with caution; for objects that could be plentiful (e.g. detections) it is likely; to be unwise to store any metadata values, since these can't be stored particularly efficiently - and; therefore this could lead to far too high memory requirements.; ; If metadata is never stored for an object, no storage object is created - only a null reference.; ; Therefore the intention is that some newly-defined PathObject classes may take advantage of this mechanism and expose their; own API for getting/setting values, backed-up by this store (which takes care of serialization/deserialization).; However class definitions can also avoid making any use of this whatsoever if it's expected that it could lead to too much ; memory being required. Parameters:; key - ; value - ; Returns:; See Also:. retrieveMetadataValue(java.lang.String). retrieveMetadataValue; protected Object retrieveMetadataValue(String key); Get a metadata value. Parameters:; key - ; Returns:; the metadata value if set, or null if not; See Also:. storeMetadataValue(java.lang.String, java.lang.String). retrieveMetadataKeys; protected Set<String> retrieveMetadataKeys(); Get the set of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:21186,detect,detections,21186,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['detect'],['detections']
Safety," ; Returns:. thresholdAboveEquals; public static ByteProcessor thresholdAboveEquals(ImageProcessor ip,; float threshold); Created a binary image by thresholding pixels to find where ip1 >= threshold. Parameters:; ip - ; threshold - ; Returns:. thresholdBetween; public static ByteProcessor thresholdBetween(ImageProcessor ip,; float lowThreshold,; float highThreshold); Created a binary image by thresholding pixels to find where ip >= lowThreshold and ip <= highThreshold. Parameters:; ip - ; lowThreshold - ; highThreshold - ; Returns:. thresholdToROI; public static ROI thresholdToROI(BufferedImage img,; double minThreshold,; double maxThreshold,; int band,; RegionRequest request); Generate a QuPath ROI by thresholding an image channel image. Parameters:; img - the input image (any type); minThreshold - minimum threshold; pixels >= minThreshold will be included; maxThreshold - maximum threshold; pixels <= maxThreshold will be included; band - the image band to threshold (channel); request - a RegionRequest corresponding to this image, used to calibrate the coordinates. If null, ; we assume no downsampling and an origin at (0,0).; Returns:; See Also:. thresholdToROI(ImageProcessor, TileRequest). thresholdToROI; public static ROI thresholdToROI(Raster raster,; double minThreshold,; double maxThreshold,; int band,; TileRequest request); Generate a QuPath ROI by thresholding an image channel image, deriving coordinates from a TileRequest.; ; This can give a more accurate result than depending on a RegionRequest because it is possible to avoid some loss of precision. Parameters:; raster - ; minThreshold - ; maxThreshold - ; band - ; request - ; Returns:; See Also:. thresholdToROI(ImageProcessor, RegionRequest). thresholdToROI; public static ROI thresholdToROI(ImageProcessor ip,; RegionRequest request); Generate a QuPath ROI from an ImageProcessor.; ; It is assumed that the ImageProcessor has had its min and max threshold values set. Parameters:; ip - ; request - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html:5806,avoid,avoid,5806,javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,1,['avoid'],['avoid']
Safety," ; relate to objects within the hierarchy of this data. Parameters:; imageData - the imageData to associated with this chart; Returns:; this builder. viewer; public Charts.ScatterChartBuilder viewer(QuPathViewer viewer); Specify a viewer. This can be used to make some charts 'live', e.g. if they ; relate to objects within the viewer. Parameters:; viewer - the viewer to associated with this chart; Returns:; this builder. width; public Charts.ScatterChartBuilder width(double width); Set the preferred width of the chart. Parameters:; width - preferred width; Returns:; this builder. height; public Charts.ScatterChartBuilder height(double height); Set the preferred height of the chart. Parameters:; height - preferred height; Returns:; this builder. size; public Charts.ScatterChartBuilder size(double width,; double height); Set the preferred size of the chart. Parameters:; width - preferred width; height - preferred height; Returns:; this builder. parent; public Charts.ScatterChartBuilder parent(Window parent); Set the parent window. If not set, QuPath will try to choose a sensible default.; This is useful to avoid the chart falling 'behind' other windows when not in focus.; ; This is relevant only if show() or toStage() will be called. Parameters:; parent - the requested parent window; Returns:; this builder. windowTitle; public Charts.ScatterChartBuilder windowTitle(String title); Title to use for the window, if the chart is shown.; ; This is relevant only if show() or toStage() will be called. Parameters:; title - window title; Returns:; this builder. build; public ScatterChart<Number,Number> build(); Build a chart according to the specified parameters. Returns:; the chart. toStage; public Stage toStage(); Add the chart to a stage, but do not show it. Returns:; the stage containing this Chart.; See Also:. show(). show; public Stage show(); Add the chart to a stage, and show it in the Application thread. Returns:; the stage containing this Chart.; See Also:. toStage(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:14447,avoid,avoid,14447,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,1,['avoid'],['avoid']
Safety," ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:257004,detect,detectionToAnnotationDistancesSigned,257004,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionToAnnotationDistancesSigned']
Safety," AbstractTileableDetectionPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractTileableDetectionPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>; qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; CellCountsCV, DoGSuperpixelsPlugin, SLICSuperpixelsPlugin, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public abstract class AbstractTileableDetectionPlugin<T>; extends AbstractDetectionPlugin<T>; Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps.; ; Particularly useful for tasks such as cell detection. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractTileableDetectionPlugin();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. protected abstract ObjectDetector<T>; createDetector(ImageData<T> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:996,detect,detection,996,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['detect'],['detection']
Safety," Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1497,avoid,avoid,1497,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,1,['avoid'],['avoid']
Safety," Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath and extensions on GitHub. QUPATH_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath updates only. QuPath_Send_Overlay_to_QuPath - Class in qupathj. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_Overlay_to_QuPath() - Constructor for class qupathj.QuPath_Send_Overlay_to_QuPath;  ; QuPath_Send_ROI_to_QuPath - Class in qupathj. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPath_Send_ROI_to_QuPath() - Constructor for class qupathj.QuPath_Send_ROI_to_QuPath;  ; QUPATH_STARTUP - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; qupath.ext.openslide - package qupath.ext.openslide;  ; qupath.imagej.detect.cells - package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray - package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue - package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui - package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers - package qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers - package qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing - package qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels - package qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools - package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms - package qupath.lib.algor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:805627,detect,detect,805627,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety," Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:255938,detect,detection,255938,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['detect'],['detection']
Safety," Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.NormalBayesClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:1302,predict,predict,1302,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,1,['predict'],['predict']
Safety," Get a PathClass with the specified name, derived from another PathClass. getDescendantObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all descendant objects. getDescendantObjects(PathObject, Collection<PathObject>, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get all descendant objects with a specified type. getDescription() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDescription() - Method in class qupath.imagej.gui.IJExtension;  ; getDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getDescription() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDescription() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getDescription() - Method in interface qupath.lib.gui.extensions.QuP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:378423,detect,detect,378423,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety," IOException. writeDensityMapImage; public static void writeDensityMapImage(String densityMapName,; String path); throws IOException; Write the output of applying a density map to the current image image. Parameters:; densityMapName - name of the density map, see loadDensityMap(String); path - output file path; Throws:; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:107486,detect,detectionCentroidDistances,107486,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,5,['detect'],"['detection', 'detectionCentroidDistances']"
Safety," IOException; Apply a segmentation model to an image region. Parameters:; model - the segmentation model; server - the image; request - the region; Returns:; a Mat containing the segmentation results; Throws:; IOException - if the input image could not be read. segment; public static Mat segment(SegmentationModel model,; Mat input,; Mat output); Apply a segmentation model to an image region. Parameters:; model - the segmentation model; input - the input image; output - the output image; Returns:; a Mat containing the segmentation results (the same as output, if provided). detect; public static List<PathObject> detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator); throws IOException; Apply a detection model to generate rectangles surrounding distinct structures. Parameters:; model - the detection model; server - the image; request - the region within which detection should be applied; classifier - function to convert the classification label into a PathClass; creator - function to create an object (e.g. detection, annotation) from a ROI; Returns:; a list of created objects; Throws:; IOException - if the image could not be read. detect; public static List<PathObject> detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator); Apply a detection model to generate rectangles surrounding distinct structures. Parameters:; model - the detection model; mat - the image; request - the region corresponding to the Mat; if provided, this is used to scale and translate detected regions; classifier - function to convert the classification label into a PathClass; creator - function to create an object (e.g. detection, annotation) from a ROI; Returns:; a list of created objects. blobFromImages; public static Mat blobFromImages(Mat... mats); Create an OpenCV blob from one or more mats. Parameters:; mats - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:13427,detect,detection,13427,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,2,['detect'],['detection']
Safety," IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. DetectCytokeratinCV - Class in qupath.opencv. Simple command to detect tumor regions stained with cytokeratin. DetectCytokeratinCV() - Constructor for class qupath.opencv.DetectCytokeratinCV;  ; detection() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current Ove",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:253057,detect,detection,253057,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,3,['detect'],['detection']
Safety," Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; PreferencePane - Class in qupath.lib.gui.panes. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane() - Constructor for class qupath.lib.gui.panes.PreferencePane;  ; PreferencePane.AppearancePreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.DrawingPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.ExtensionPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.GeneralPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.InputOutputPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.LocalePreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.MeasurementPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.ObjectPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.Scri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:778861,predict,predictWithLock,778861,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predictWithLock']
Safety," Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the prediction function that can apply a prediction with one or more blobs as input. Returns:. predict; public Map<String,Mat> predict(Map<String,Mat> blobs); Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat.; ; Note that this only supports a batch size of 1. For larger batches or more control, getBlobFunction(String) and; getPredictionFunction() should be used directly. Specified by:; predict in interface DnnModel; Parameters:; blobs - ; Returns:. predict; public Mat predict(Mat mat); Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat.; ; Note that this only supports a batch size of 1. For larger batches or more control, getBlobFunction(String) and; getPredictionFunction() should be used directly. Specified by:; predict in interface DnnModel; Parameters:; mat - ; Returns:. batchPredict; public List<Mat> batchPredict(List<? extends Mat> mats); Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats.; This method is intended for cases where the batch size should be greater than one; for a batch size of one, predict(Mat) can; be used instead. Specified by:; batchPredict in interface DnnModel; Parameters:; mats - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:3933,predict,predict,3933,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,5,['predict'],['predict']
Safety," Method. SEARCH. Package qupath.lib.gui; Class UndoRedoManager. java.lang.Object; qupath.lib.gui.UndoRedoManager. All Implemented Interfaces:; EventListener, ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener. public class UndoRedoManager; extends Object; implements ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener; Helper class to add undo/redo support to QuPath.; ; This is restricted to tracking changes in the PathObjectHierarchy for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer vi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:1368,risk,risks,1368,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['risk'],['risks']
Safety," Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMSGDClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:1267,predict,predict,1267,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,1,['predict'],['predict']
Safety," Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins. package qupath.lib.plugins. Classes to support general analysis commands.; ; The purpose of this is to help abstract away some of the more challenging things ; around running the command, handling parallelization and monitoring progress. Related Packages. Package; Description; qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:1101,detect,detected,1101,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['detect'],['detected']
Safety," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:1578,detect,detections,1578,javadoc/docs/qupath/process/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html,1,['detect'],['detections']
Safety," Parameters:; x - ; y - ; snapToPixel - if true, request that translations snap to pixel coordinates; Returns:. updateTranslation; public ROI updateTranslation(double x,; double y,; ImageRegion constrainRegion); Update a ROI by translation, optionally constraining its movement within a specified boundary.; ; Returns the same ROI if translation was not possible, or the translation resulted in no movement,; of if isTranslating() returns false.; Otherwise returns a translated version of the ROI;. Parameters:; x - ; y - ; constrainRegion - ; Returns:. finishTranslation; public boolean finishTranslation(); Notify the editor that translation should end. Returns:; true if there is any displacement between the current and starting translation points, false otherwise. isTranslating; public boolean isTranslating(); Query if a ROI is currently being translated through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, or an empty list if no handles are available. Returns:. hasROI; public boolean hasROI(); Returns true if this editor currently has a ROI. Returns:. getROI; public ROI getROI(); Retrieve the ROI currently being edited (may be null). Returns:. hasActiveHandle; public boolean hasActiveHandle(); Returns true if a handle is currently active, for example being reposition. Returns:; See Also:. getHandles(). resetActiveHandle; public void resetActiveHandle(); Ensure that no handle is active. requestNewHandle; public ROI requestNewHandle(double x,; double y); Request an updated ROI with a new handle inserted - useful e.g. when drawing a polygon. Parameters:; x - ; y - ; Returns:. grabHandle; public boolean grabHandle(double x,; double y,; double maxDist,; boolean shiftDown); Try to grab a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:5426,avoid,avoid,5426,javadoc/docs/qupath/lib/roi/RoiEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html,1,['avoid'],['avoid']
Safety," PathClass with the specified name, derived from another PathClass. getDerivedPathClass(PathClass, String, Integer) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getInstance(PathClass, String, Integer). getDerivedPathClass(PathClass, String, Integer) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name, derived from another PathClass. getDescendantObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all descendant objects. getDescendantObjects(PathObject, Collection<PathObject>, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get all descendant objects with a specified type. getDescription() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDescription() - Method in class qupath.imagej.gui.IJExtension;  ; getDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getDescription() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDescription() - Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:378058,detect,detect,378058,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety," Static method in class qupath.lib.gui.tools.GuiTools. Populate a Menu with standard options to operate on selected annotation objects. positionCaret(int) - Method in interface qupath.lib.gui.scripting.EditableText. Set the caret position to the specified index. positionCaret(int) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; positionCaret(int) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; POSITIVE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; General class to represent something 'positive'. POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. General class to represent something 'positive'. PositiveCellDetection - Class in qupath.imagej.detect.cells. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositiveCellDetection() - Constructor for class qupath.imagej.detect.cells.PositiveCellDetection. Default constructor. positiveClassification(boolean) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true of an object has a positive classification. PositivePixelCounterIJ - Class in qupath.imagej.detect.tissue. Simple command to detect regions with positive staining. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:773456,detect,detect,773456,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety," T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:2153,detect,detection,2153,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['detect'],['detection']
Safety," a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ign",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108090,detect,detectionCentroidDistances,108090,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionCentroidDistances']
Safety," add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinary(ByteProcessor, double, int, int, Roi) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Detect TMA cores from a (low-resolution) whole",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:257315,detect,detectionToAnnotationDistancesSigned,257315,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionToAnnotationDistancesSigned']
Safety," and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SparseImageServer. An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector.DefaultStains. Enum representing default stains. StatisticsHelpe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:54253,detect,detection,54253,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detection']
Safety," and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; protected Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(). addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:5486,detect,detection,5486,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['detect'],['detection']
Safety," are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - las",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:143571,avoid,avoid,143571,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avoid'],['avoid']
Safety," are likely to be useful for scripting. static PathObjectHierarchy; getCurrentHierarchy(). Get the PathObjectHierarchy of the current ImageData. static ImageData<BufferedImage>; getCurrentImageData(). Get the path to the current ImageData. static String; getCurrentImageName(). Get the name of the current image. static String; getCurrentImageNameWithoutExtension(). Get the name of the current image, removing any file extension. static ImageServer<?>; getCurrentServer(). Get the ImageServer of the current ImageData. static String; getCurrentServerPath(). Get the path to the ImageServer of the current ImageData. static PathClass; getDerivedPathClass(PathClass baseClass,; String name). Get a PathClass with the specified name, derived from another PathClass. static PathClass; getDerivedPathClass(PathClass baseClass,; String name,; Integer rgb). Get a PathClass with the specified name, derived from another PathClass. static Collection<PathObject>; getDetectionObjects(). Get a list of the current detection objects. static org.slf4j.Logger; getLogger(). Get the logger associated with this class. static PathClass; getNonIntensityAncestorPathClass(PathObject pathObject). Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. static List<PathObject>; getObjects(Predicate<PathObject> predicate). Get a list of all objects in the current hierarchy according to a specified predicate. static List<PathObject>; getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Get a list of all objects in the specified hierarchy according to a specified predicate. static PathClass; getPathClass(String name). Get a PathClass with the specified name. static PathClass; getPathClass(String name,; Integer rgb). Get a PathClass with the specified name and color. static Project<BufferedImage>; getProject(). Get the current project. static ProjectImageEntry<BufferedImage>; getProjectEntry(). Get the project entry for the currently-open image w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:19063,detect,detection,19063,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety," as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb,; boolean hasAlpha); Get cached color, explicitly stating whether alpha should be included or not. Parameters:; rgb - ; hasAlpha - ; Returns:. getRGB; public static int getRGB(Color color); Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Parameters:; color - ; Returns:. getARGB; public static int getARGB(Color color); Get a packed int (ARGB) representation of a Color object. Parameters:; color - ; Returns:. getDisplayedColor; public static Color getDisplayedColor(PathObject pathObject); Get a Color appropriate for displaying an object. Parameters:; pathObject - ; Returns:; Se",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:3222,avoid,avoid,3222,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,1,['avoid'],['avoid']
Safety," available by OpenCV. isDAB(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""dab"" or ""d"" (ignoring case). isDefaultStyle() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Check if the default JavaFX style is used. isDerivedClass() - Method in class qupath.lib.objects.classes.PathClass. Returns true if #getParentClass() != null. isDerivedFrom(PathClass) - Method in class qupath.lib.objects.classes.PathClass. Returns true if this class, or any ancestor class, is equal to the specified parent class. isDetection() - Method in class qupath.lib.objects.PathObject. Returns true if the object is a detection. isDirectory(String) - Static method in class qupath.lib.scripting.QP. Query if a file path corresponds to a directory. isDynamic() - Method in interface qupath.lib.measurements.Measurement. Deprecated. isEditable() - Method in class qupath.lib.objects.PathDetectionObject. Always returns false - detection objects shouldn't be edited. isEditable() - Method in class qupath.lib.objects.PathObject. Flag indicating that the object is editable. isEditable() - Method in class qupath.lib.objects.PathROIObject. Deprecated.; since v0.4.0. isEditable() - Method in class qupath.lib.objects.PathRootObject. The root object is never locked. isEmpty() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Returns true if there are no events included. isEmpty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Query if the table is empty, i.e. isEmpty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether the collection of recorded frames is empty. isEmpty() - Method in interface qupath.lib.measurements.MeasurementList. Returns true if the list does not contain any measurements. isEmpty() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Check if the hierarchy is empty (i.e. isEmpty() - Method in class qupath.lib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:618844,detect,detection,618844,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety," boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its centroid; ignored if ≤ 1; Returns:; a Geometry providing a cell boundary estimate. constrainCellByNucleusDistance; public static PathCellObject constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance.; This can be used to create more biologically pl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3937,detect,detections,3937,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,1,['detect'],['detections']
Safety," cells. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathCellObject; constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1475,detect,detectionsToCells,1475,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,2,['detect'],"['detections', 'detectionsToCells']"
Safety," chart. width(double) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog width. width(int) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Export image width. width(int) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the full-resolution image width. windowTitle(String) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Title to use for the window, if the chart is shown. windowTitle(String) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Title to use for the window, if the chart is shown. windowTitle(String) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Title to use for the window, if the chart is shown. WITH_ICONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Show detections with ROI icons. WITHOUT_ICONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Show detections without ROI icons. workerComplete(TileWorker<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Every TileWorker should call this when the task is done!. Workflow - Class in qupath.lib.plugins.workflow. A collection of steps that relate to how an image has been - or should be - processed. Workflow() - Constructor for class qupath.lib.plugins.workflow.Workflow;  ; WorkflowCommandLogView - Class in qupath.lib.gui.panes. Show logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1108035,detect,detections,1108035,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety," charts 'live', e.g. if they ; relate to objects within the hierarchy of this data. Parameters:; imageData - the imageData to associated with this chart; Returns:; this builder. viewer; public Charts.BarChartBuilder viewer(QuPathViewer viewer); Specify a viewer. This can be used to make some charts 'live', e.g. if they ; relate to objects within the viewer. Parameters:; viewer - the viewer to associated with this chart; Returns:; this builder. width; public Charts.BarChartBuilder width(double width); Set the preferred width of the chart. Parameters:; width - preferred width; Returns:; this builder. height; public Charts.BarChartBuilder height(double height); Set the preferred height of the chart. Parameters:; height - preferred height; Returns:; this builder. size; public Charts.BarChartBuilder size(double width,; double height); Set the preferred size of the chart. Parameters:; width - preferred width; height - preferred height; Returns:; this builder. parent; public Charts.BarChartBuilder parent(Window parent); Set the parent window. If not set, QuPath will try to choose a sensible default.; This is useful to avoid the chart falling 'behind' other windows when not in focus.; ; This is relevant only if show() or toStage() will be called. Parameters:; parent - the requested parent window; Returns:; this builder. windowTitle; public Charts.BarChartBuilder windowTitle(String title); Title to use for the window, if the chart is shown.; ; This is relevant only if show() or toStage() will be called. Parameters:; title - window title; Returns:; this builder. build; public BarChart<String,Number> build(); Build a chart according to the specified parameters. Returns:; the chart. toStage; public Stage toStage(); Add the chart to a stage, but do not show it. Returns:; the stage containing this Chart.; See Also:. show(). show; public Stage show(); Add the chart to a stage, and show it in the Application thread. Returns:; the stage containing this Chart.; See Also:. toStage(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:11580,avoid,avoid,11580,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,1,['avoid'],['avoid']
Safety," clearRootMeasurements, clearSelectedObjects, clearSelectedObjects, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7808,detect,detectionToAnnotationDistances,7808,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['detect'],['detectionToAnnotationDistances']
Safety," colors. void; setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode). Set the current OverlayOptions.DetectionDisplayMode. void; setFillAnnotations(boolean fill). Show annotation objects 'filled' in viewers. void; setFillDetections(boolean fill). Show detection objects 'filled' in viewers. void; setFontSize(float size). Set the requested font size for the 'Show names' option. void; setGridLines(GridLines gridLines). Set the GridLines object that defines how a counting grid may be show in viewers. void; setMeasurementMapper(MeasurementMapper mapper). Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. void; setOpacity(float opacity). Set global opacity for overlay drawing. void; setPathClassHidden(PathClass pathClass,; boolean hidden). Request that objects with a particular PathClass not be displayed. void; setPixelClassificationRegionFilter(RegionFilter region). Control where pixel classifications should be calculated during live prediction. void; setShowAnnotations(boolean show). Show the annotations on the image. void; setShowConnections(boolean show). Show connections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on the image. void; setShowGrid(boolean showGrid). Set whether a counting grid should be shown in viewers. void; setShowNames(boolean show). Show the object names on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:5139,predict,prediction,5139,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['predict'],['prediction']
Safety," current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel classifier; measurementID - . createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifierName - the name of the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the mini",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:139828,detect,detection,139828,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety," deleteFile(File, boolean) - Static method in class qupath.lib.common.GeneralTools. Delete a file, optionally requesting that it be moved to the trash rather than permanently deleted. deleteText(int, int) - Method in interface qupath.lib.gui.scripting.EditableText. Request deleting the text within the specified range. deleteText(int, int) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; deleteText(int, int) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; DELIMITER - Static variable in class qupath.lib.objects.classes.PathClass. Get the delimiter to use between names of the PathClass when converting to a string. DEMOS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; DENSITY - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a density value, such as in a density map (e.g. DensityMapCommand - Class in qupath.process.gui.commands. Command for generating density maps from detections on an image. DensityMapCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.DensityMapCommand. Constructor. DensityMapDialog - Class in qupath.process.gui.commands.density. Dialog for interactively generating a custom density map. DensityMapDialog(QuPathGUI) - Constructor for class qupath.process.gui.commands.density.DensityMapDialog. Constructor. DensityMaps - Class in qupath.lib.analysis.heatmaps. Class for constructing and using density maps. DensityMaps() - Constructor for class qupath.lib.analysis.heatmaps.DensityMaps;  ; DensityMaps.DensityMapBuilder - Class in qupath.lib.analysis.heatmaps. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters - Class in qupath.lib.analysis.heatmaps. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType - Enum Class in qupath.lib.analysis.heatmaps. Density map types. DensityMapUI - Cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:248701,detect,detections,248701,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety," distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(boolean). setPixelSizeMicrons; public static boolean setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for an ImageServer to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; imageData - ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:110948,detect,detectionToAnnotationDistancesSigned,110948,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['detect'],"['detectionToAnnotationDistances', 'detectionToAnnotationDistancesSigned']"
Safety," distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinary(ByteProcessor, double, int, int, Roi) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. detectVendor(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Tr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:257471,detect,detection,257471,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['detect'],['detection']
Safety," enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellDetection;  ; WatershedCellMembraneDetection - Class in qupath.imagej.detect.cells. Cell detection that takes into consideration membrane staining. WatershedCellMembraneDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellMembraneDetection. Default constructor. watershedExpandLabels(ImageProcessor, double, boolean) - Static method in class qupath.imagej.processing.Watershed. Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging. watershedIntensitySplit(Mat, Mat, double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. WatershedNucleiCV - Class in qupath.opencv. Alternative (incomplete) attempt at nucleus segmentation. WatershedNucleiCV() - Constructor for class qupath.opencv.WatershedNucleiCV;  ; WebViews - Class in qupath.lib.gui.tools. Helper class for creating a WebView in a standardized way. WebViews() - Constructor for class qupath.lib.gui.tools.WebViews;  ; WEIGHTED_STD_DEV - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Weighted stan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1104850,detect,detect,1104850,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety," extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the current hierarchy. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Set the intensity classifications for the specified objects. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for the specified objects. setIntensityClassifications(PathObjectHierarchy, Class<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the specified hierarchy. setIntensityClassificationsForSelected(PathObjectHierarchy, String, double...) - Static method in class qupath.lib.scripting.QP. Set intensity classifications for all selected (detection) objects in the specified hierarchy. setInterpolation(Graphics2D) - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; setInterpolation(ImageInterpolation) - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay. Set the preferred method of interpolation to use for display. setIsInteractive(boolean) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Sets the value of ChartThresholdPane.isInteractiveProperty(). setLastSavedPath(String, boolean) - Method in class qupath.lib.images.ImageData. Set the last path used to save this object;. setLineChartLegendLines(Chart, double) - Static method in class qupath.lib.gui.charts.ChartTools. Charts tend to show their legends with circular/square markers... setLineWidth(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Set the threshold line width. setLivePrediction(boolean) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Turn on or off live predic",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:932028,detect,detection,932028,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety," for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; PreferencePane - Class in qupath.lib.gui.panes. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane() - Constructor for class qupath.lib.gui.panes.Pr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:778254,predict,predictWithLock,778254,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predictWithLock']
Safety," freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> scalebarFontWeightProperty(); Preferred font weight in the viewer. Returns:. scalebarLineWidthProperty; public static DoubleProperty scalebarLineWidthProperty(); Preferred line width for the scalebar. Returns:. allredMinPercentagePositiveProperty; public static DoubleProperty allredMinPercentagePositiveProperty(); The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. Returns:. minPyramidDimensionProperty; public static IntegerProperty minPyramidDimensionProperty(); Minimum image width or height before pyramidalizing (if required). Returns:. pointRadiusProperty; public static IntegerProperty pointRadiusProperty(); Radius of the circle used to draw individual points in a point annotation (in pixels). Returns:. createPersistentPreference; public static BooleanProperty createPersistentPreference(String name,; boolean defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static IntegerProperty createPersistentPreference(String name,; int defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public stat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:60665,detect,detection,60665,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detection']
Safety," if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Timestamp of the last change (probably in milliseconds). getLastResultsDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResult",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:423055,detect,detect,423055,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety," implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:777666,predict,predictWithLock,777666,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predictWithLock']
Safety," in DensityMaps.builder(PathObjectPredicate) to ; extract a subset of objects for which densities are determined. Parameters:; name - name of the filter; usually this is the name of a classification that the objects should have; filter - the filter itself (predicate that must be JSON-serializable); Returns:; this builder. colorModel; public DensityMaps.DensityMapBuilder colorModel(ColorModels.ColorModelBuilder colorModelBuilder); Set a ColorModels.ColorModelBuilder that can be used in conjunction with buildServer(ImageData).; If this is not set, the default ColorModel used with buildServer(ImageData) may not ; convert well to RGB. Parameters:; colorModelBuilder - ; Returns:. radius; public DensityMaps.DensityMapBuilder radius(double radius); The radius of the filter used to calculate densities. Parameters:; radius - ; Returns:; this builder. buildParameters; public DensityMaps.DensityMapParameters buildParameters(); Build a DensityMaps.DensityMapParameters object containing the main density map parameters. Returns:. buildClassifier; public PixelClassifier buildClassifier(ImageData<BufferedImage> imageData); Build a PixelClassifier for a density map using the current parameters and the specified ImageData. Parameters:; imageData - ; Returns:; the density map; See Also:. buildServer(ImageData). buildServer; public ImageServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData); Build an ImageServer representing this density map.; ; Note that this involved generating a unique ID and caching all tiles.; The reason is that density maps can change over time as the object hierarchy changes, ; and therefore one should be generated that represents a snapshot in time.; However, this imposes a limit on the size of density map that can be generated to ; avoid memory errors.; ; If greater control is needed over when and how the density map is created, using buildClassifier(ImageData) instead. Parameters:; imageData - ; Returns:; See Also:. buildClassifier(ImageData). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html:4981,avoid,avoid,4981,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,1,['avoid'],['avoid']
Safety," in an appropriate format. train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; TRAIN_VALIDATION_TEST_METADATA_KEY - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata key for the flag indicating the image type (Train, Validation, Test or None). trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement trainWithLock rather than train di",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1047810,predict,prediction,1047810,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety," in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.process.gui.WandToolEventHandler. Reset the constraining objects. resetCustomPixelLayerOverlay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Reset the custom pixel layer overlay to null. resetDetectionClassifications() - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all detection objects in the current hierarchy. resetGridSize() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; resetImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Remove the image. resetImageData() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Reset the last image data. resetImageData() - Method in class qupath.lib.gui.viewer.QuPathViewer. Reset the image data to null. resetIntensityClassifications() - Static method in class qupath.lib.scripting.QP. Reset the intensity classifications for all detections in the current hierarchy. resetIntensityClassifications(Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the intensity classifications for all specified objects. resetIntensityClassifications(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Reset the intensity classifications for all detections in the specified hierarchy. resetMeasurementMapper() - Method in class qupath.lib.gui.viewer.OverlayOptions. Reset any MeasurementMapper, so that measurements are not used to determine object colors. resetMinimumRepaintSpacingMillis() - Method in class qupath.lib.gui.viewer.QuPathViewer. Return to processing all repainting requests. resetPathClass() - Method in class qupath.lib.objects.PathObject. Reset the classification (i.e. resetPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Reset the preferences to their defaults. resetSelection() - Static method in class qupath.lib.scripting.QP. Clear the selected o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:862888,detect,detections,862888,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety," in viewers, false otherwise; See Also:. getGridLines(). getGridLines; public GridLines getGridLines(). Returns:; the GridLines object that defines how a counting grid may be show in viewers; See Also:. getShowGrid(). setGridLines; public void setGridLines(GridLines gridLines); Set the GridLines object that defines how a counting grid may be show in viewers. Parameters:; gridLines - . gridLinesProperty; public ObjectProperty<GridLines> gridLinesProperty(). Returns:; an object property containing a GridLines object that defines how a counting grid may be show in viewers; See Also:. getGridLines(); setGridLines(GridLines). setMeasurementMapper; public void setMeasurementMapper(MeasurementMapper mapper); Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. Parameters:; mapper - . getMeasurementMapper; public MeasurementMapper getMeasurementMapper(). Returns:; the MeasurementMapper object that defines how detections should be color coded according to their measurement values in viewers. measurementMapperProperty; public ObjectProperty<MeasurementMapper> measurementMapperProperty(). Returns:; object property containing the current MeasurementMapper, if one has been set, or null otherwise; See Also:. getMeasurementMapper(); setMeasurementMapper(MeasurementMapper). resetMeasurementMapper; public void resetMeasurementMapper(); Reset any MeasurementMapper, so that measurements are not used to determine object colors. getAllPathClassesVisible; public boolean getAllPathClassesVisible(). Returns:; true if objects should be displayed regardless of classification (i.e. no classifications are 'hidden'); See Also:. hiddenClassesProperty(). isPathClassHidden; public boolean isPathClassHidden(PathClass pathClass); Query whether objects with a specified classification should be displayed or hidden. Parameters:; pathClass - the classification to query; Returns:; true if objects with the classification should be dis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:16119,detect,detections,16119,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detections']
Safety," info message to the action. installRangePrompt(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Install a mouse click listener to prompt the user to input min/max values for a slider. installStyles(Collection<File>) - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Handle installing CSS files (which can be used to style QuPath). installTool(PathTool, KeyCodeCombination) - Method in class qupath.lib.gui.ToolManager. Install a new tool for interacting with viewers. INT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit signed integer. INT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit signed integer. INT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit signed integer. INTENSITY_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; IntensityFeaturesPlugin - Class in qupath.lib.algorithms. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. IntensityFeaturesPlugin() - Constructor for class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; InteractiveObjectImporter - Class in qupath.lib.gui.commands. Static methods to import object(s) from different sources. INTERLEAVED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are interleaved ('PLANARCONFIG_CONTIG'). interp2D(Indexer, double, double) - Static method in class qupath.opencv.tools.Interpolation. Request a value from an Indexer using bilinear interpolation. interp3D(Indexer, double, double, double) - Static method in class qupath.opencv.tools.Interpolation. Request a value from an Indexer using trilinear interpolation. interpolateBilinear - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; Interpolation - Class in qupath.opencv.tools. Methods to help with requesting interpolated values. Interpolation() - Constructor for class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:610037,detect,detections,610037,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety," inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:2231,detect,detection,2231,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,2,['detect'],['detection']
Safety," int). readPatch; public static Mat readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding); throws IOException; Read an image patch, optionally with a fixed size.; If the patch width and height are specified, these relate to the output (downsampled) image; and are centered on the ROI centroid. Otherwise the ROI bounds are used. Parameters:; server - the image server; roi - the ROI for which the patch should be extracted; downsample - the downsample value; width - the patch width, or -1 if the ROI bounds should be used; height - the patch height, or -1 if the ROI bounds should be used; borderPadding - the border padding for out-of-bounds requests, for use with OpenCV's copyMakeBorder; Returns:; Throws:; IOException; See Also:. readPatch(ImageServer, ROI, double, int, int). classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException; Apply a classification model to an image patch to classify an object. Parameters:; model - the model for prediction; pathObject - the object to classify; server - the image supplying the patch; downsample - the requested downsample at which classification should be applied; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability) ; in the measurement list of the object.; Returns:; true if the classification of the object has changed, false otherwise; Throws:; IOException - if the patch cannot be read. classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException,; IllegalArgum",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:9644,predict,predictionMeasurement,9644,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['predict'],['predictionMeasurement']
Safety," interface qupath.lib.plugins.workflow.WorkflowStep. Get a map of parameters required for this step. getParameters() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the ParameterList displayed in this panel. getParameters() - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameters. getParent() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent object. getParent() - Method in class qupath.lib.objects.PathObject. Request the parent object. getParentClass() - Method in class qupath.lib.objects.classes.PathClass. Get the parent classification, or null if this classification has no parent. getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractDetectionPlugin. Get all selected objects that are instances of a supported class. getParentObjects(ImageData<T>) - M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:474978,detect,detect,474978,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety," is turned on. String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. int; getMaxThreads(). Get the maximum number of threads that may be used during live prediction. ImageServer<BufferedImage>; getPixelClassificationServer(ImageData<BufferedImage> imageData). Get the ImageServer that would be used by this overlay for the specified ImageData. ImageRenderer; getRenderer(). Get the ImageRenderer used with this overlay, which may be null. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). Turn on or off live prediction. void; setMaxThreads(int nThreads). Set the maximum number of threads that may be used during live prediction. void; setRenderer(ImageRenderer renderer). Set the ImageRenderer to be used with this overlay. void; stop(). Stop the overlap, halting any pending tile requests. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. renderer; public ObjectProperty<ImageRenderer> rendererProperty; Get the ImageRenderer property used with this overlay. See Also:. getRenderer(); setRenderer(ImageRenderer); rendererProperty(). Method Details.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:3856,predict,prediction,3856,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['predict'],['prediction']
Safety," measurements were added, false otherwise. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Apply classification from a server to a collection of objects. Parameters:; classifierServer - an ImageServer with output type; pathObjects - ; preferNucleusROI - . getClassification; public static int getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t); throws IOException; Request the classification for a specific pixel.; ; If the output for the server is ImageServerMetadata.ChannelType.PROBABILITY and only one channel is available, ; the return value will be -1 if the probability is less than 0.5 (or 127.5 if 8-bit). Parameters:; server - ; x - ; y - ; z - ; t - ; Returns:; Throws:; IOException. classifyCellsByCentroid; public static void classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI); Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; preferNucleusROI - whether to use the nucleus ROI (if available) rather than the cell ROI. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Classify objects according to the prediction of ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:18146,predict,prediction,18146,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['predict'],['prediction']
Safety," method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. resetClassifications(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the specified hierarchy. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.process.gui.WandToolEventHandler. Reset the constraining objects. resetCustomPixelLayerOverlay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Reset the custom pixel layer overlay to null. resetDetectionClassifications() - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all detection objects in the current hierarchy. resetGridSize() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; resetImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Remove the image. resetImageData() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Reset the last image data. resetImageData() - Method in class qupath.lib.gui.viewer.QuPathViewer. Reset the image data to null. resetIntensityClassifications() - Static method in class qupath.lib.scripting.QP. Reset the intensity classifications for all detections in the current hierarchy. resetIntensityClassifications(Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the intensity classifications for all specified objects. resetIntensityClassifications(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Reset the intensity classifications for all detections in the specified hierarchy. resetMeasurementMapper() - Method in class qupath.lib.gui.viewer.OverlayOp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:862343,detect,detection,862343,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety," missing TMA core objects. See Also:. colorTMAMissingProperty(). colorTile; public static IntegerProperty colorTileProperty; The default color used to display tile objects. See Also:. colorTileProperty(). autoSetAnnotationClass; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty; Classification that should automatically be applied to all new annotations. May be null. See Also:. autoSetAnnotationClassProperty(). alwaysPaintSelectedObjects; public static BooleanProperty alwaysPaintSelectedObjectsProperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. lo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:38583,detect,detectionTreeDisplayModeProperty,38583,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,2,['detect'],"['detectionTreeDisplayModeProperty', 'detections']"
Safety," naming consistency). addPixelClassifierMeasurements(String, String) - Static method in class qupath.lib.scripting.QP. Add measurements from pixel classification to the selected objects. addPixelClassifierMeasurements(PixelClassifier, String) - Static method in class qupath.lib.scripting.QP. Add measurements from pixel classification to the selected objects. addPropertyChangeListener(PropertyChangeListener) - Method in class qupath.lib.images.ImageData. Add a new property change listener. addPropertyPreference(Property<T>, Class<? extends T>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addRow(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:25923,detect,detect,25923,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety," object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double scaleFactor). Resize the ROIs of all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to contain all objects. static void; selectAnnotations(). Select all annotation objects in the current hierarchy. static void; selectAnnotations(PathObjectHierarchy hierarchy). Select all annotation objects in the specified hierarchy. static void; selectCells(). Select all cell objects in the current hierarchy. static void; selectCells(PathObjectHierarchy hierarchy). Select all cell objects in the specified hierarchy. static void; selectDetections(). Select all detection objects in the current hierarchy. static void; selectDetections(PathObjectHierarchy hierarchy). Select all detection objects in the specified hierarchy. static void; selectObjects(Collection<? extends PathObject> pathObjects). Set all objects in a collection to be selected, without any being chosen as the main object. static void; selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection). Set all objects in a collection to be selected, including a specified main selected object. static void; selectObjects(Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Set one or more objects to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:33050,detect,detection,33050,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety," of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the sig",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13865,detect,detectionToAnnotationDistances,13865,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionToAnnotationDistances']
Safety," of parameters suitably to aid with creating JavaFX GUIs. Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathClass. Representation of an object's classification - which can be defined using any unique string; identifier (e.g. PathClass.StandardPathClasses. Enum representing standard classifications. PathClassFactory; Deprecated.; since v0.4.0 in favor of methods added to PathClass directly. PathClassFactory.StandardPathClasses. Enum representing standard classifications. PathClassTools. Static methods for use with PathClass objects. PathDetectionObject. A detection PathObject. PathHierarchyImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. PathImage<T>. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to sele",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:38405,detect,detection,38405,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detection']
Safety," or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToDetection(Roi, double, ImagePlus). convertToAnnotation; public static PathObject convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp); Create an annotation object for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToAnnotation(Roi, double, double, double, ImagePlane). convertToDetection; public static PathObject convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp); Create a detection object for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToDetection(Roi, double, double, double, ImagePlane). readImageJRois; public static List<Roi> readImageJRois(File file); Read ImageJ Rois from a .roi or a RoiSet.zip file. Parameters:; file - ; Returns:. containsImageJRois; public static boolean containsImageJRois(File file); Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. Parameters:; file - ; Returns:; true if the file seems to contain ImageJ ROIs, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:16155,detect,detection,16155,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['detect'],['detection']
Safety," output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally channel numbers of the output ; (zero-based), or could be labels in a single-channel labeled image. Returns:. getPreprocessing; public List<ImageOp> getPreprocessing(); Get any preprocessing steps that should be applied. Returns:. getPredictionOp; public ImageOp getPredictionOp(); Get the image op used for prediction only.; This is applied after any preprocessing steps, but before ; any postprocessing steps. Returns:. getPostprocessing; public List<ImageOp> getPostprocessing(); Get any postprocessing steps that should",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:3000,avoid,avoid,3000,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,1,['avoid'],['avoid']
Safety," patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6607,predict,prediction,6607,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['predict'],['prediction']
Safety," pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass); Create a cell object with an optional classification.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus); Create a cell object.; ; Cell objects represent a special case of a detection objects, wh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:8301,detect,detection,8301,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['detect'],['detection']
Safety," possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. caretPositionProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; caretPositionProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Property for the current caret position. caretPositionProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; ceil() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that ceils floating point values. ceil(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Ceil values in a floating point Mat. CELL - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region. CELL_NUCLEI_BOTH - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; CELL_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; CellCountsCV - Class in qupath.opencv. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellCountsCV() - Constructor for class qupath.opencv.CellCountsCV;  ; cellDisplayActions - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; CellDisplayActions() - Constructor for class qupath.lib.gui.actions.menus.ViewMenuActions.CellDisplayActions;  ; CellIntensityClassificationCommand - Class in qupath.process.gui.commands. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellIntensityClassificationCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.CellIntensityClassificationCommand. Constructor. cells() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept cell objects only. CELLS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept cells. CellTools - Class in qupath.lib.objects. Helper class for working with PathObjects that r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:86076,detect,detection,86076,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety," power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:775688,predict,predict,775688,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety," prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. tRange(int, int) - Method in class qupath.lib.images.writers.TileExporter. Define the range of timepoints to process. TRANSFER_ANNOTATION - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; transform(AffineTransform) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Apply an AffineTransform to the server. transformAllObjects(AffineTransform) - Static method in class qupath.lib.scripting.QP. Apply an affine transform to all selected objects in the current hierarchy. transformAllObjects(PathObjectHierarchy, AffineTransform) - Static method in class qupath.lib.scripting.QP. Apply an affine transform to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1048844,predict,prediction,1048844,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety," providing a nucleus and corresponding cell labels. static RegionRequest; parseRegion(String name,; int width,; int height). Attempt to parse a RegionRequest corresponding to an image region from the file name. static Map<Integer,Geometry>; traceGeometries(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; ContourTracing.ChannelThreshold... thresholds). Trace one or more geometries in an image. static Geometry; traceGeometry(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; int channel,; double minThreshold,; double maxThreshold). Trace a geometry from a single channel of a single image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ContourTracing; public ContourTracing(). Method Details. labelsToDetections; public static List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToDetections; public static List<PathObject> labelsToDetections(Path path,; RegionRequest request); throws IOException; Convert a labeled image to detection objects. Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:6303,detect,detection,6303,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['detect'],['detection']
Safety," public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positive, 1+, 2+ or 3+).; ; This will return null if pathClass is null, or if no non-intensity classes are found. Parameters:; pathObject - ; Returns:. setIntensityClassifications; public static void setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds); Set the intensity classifications for the specified objects. Parameters:; pathObjects - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassificationsForSelected; public static void setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set intensity classifications for all selected (detection) objects in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the curren",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:101384,detect,detection,101384,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety," public int nDescendants(); Total number of descendant objects.; This involves counting objects recursively; to get the number of direct child object only ; see nChildObjects(). Returns:; the number of child objects, plus the number of each child object's descendants; See Also:. nChildObjects(). hasChildObjects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecated; public boolean hasChildren(); Deprecated.; since v0.4.0, replaced by hasChildObjects(). Legacy method to check for child objects. Returns:. hasROI; public boolean hasROI(); Returns true if this object has a ROI.; ; In general, objects are expected to have ROIs unless they are root objects. Returns:. isAnnotation; public boolean isAnnotation(); Returns true if the object is an annotation. Returns:; See Also:. PathAnnotationObject. isDetection; public boolean isDetection(); Returns true if the object is a detection.; ; Note that this returns true also if the object is a subclass of a detection, ; e.g. a tile or cell. Returns:; See Also:. isCell(); PathDetectionObject; PathCellObject; PathTileObject. isCell; public boolean isCell(); Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). Returns:; See Also:. isDetection(); PathDetectionObject; PathCellObject; PathTileObject. hasMeasurements; public boolean hasMeasurements(); Returns true if the measurement list for this object is not empty. Returns:. isTMACore; public boolean isTMACore(); Returns true if this object represents a TMA core. Returns:; See Also:. TMACoreObject. isTile; public boolean isTile(); Returns true if this object represents an image tile. Returns:; See Also:. PathTileObject. isEditable; public abstract boolean isEditable(); Flag indicating that the object is editable.; ; If this returns false, this indicates the object h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:13266,detect,detection,13266,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['detect'],['detection']
Safety," qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Timestamp of the last change (probably in milliseconds). getLastResultsDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:423256,detect,detect,423256,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety," qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellDetection;  ; WatershedCellMembraneDetection - Class in qupath.imagej.detect.cells. Cell detection that takes into consideration membrane staining. WatershedCellMembraneDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellMembraneDetection. Default constructor. watershedExpandLabels(ImageProcessor, double, boolean) - Static method in class qupath.imagej.processing.Watershed. Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging. watershedIntensitySplit(Mat, Mat, double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. WatershedNucleiCV - Class in qupath.opencv. Alternative (incomplete) attempt at nucleus segmentation. WatershedNucleiCV() - Constructor for class qupath.opencv.WatershedNucleiCV;  ; WebViews - Class in qupath.lib.gui.tools. H",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1104605,detect,detect,1104605,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety," qupath.lib.gui.actions.menus.FileMenuActions.TmaActions;  ; tmaActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; TmaActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.TmaActions;  ; tmaColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; TMACommands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACommands() - Constructor for class qupath.lib.gui.commands.TMACommands;  ; TMACoreObject - Class in qupath.lib.objects. A special PathObject used exclusively to represent TMA cores. TMACoreObject() - Constructor for class qupath.lib.objects.TMACoreObject. Default constructor. TMADataIO - Class in qupath.lib.gui.tma. Static methods for exporting TMA data, optionally with small images. TMADataIO() - Constructor for class qupath.lib.gui.tma.TMADataIO;  ; TMADearrayer - Class in qupath.imagej.detect.dearray. Static methods used by the TMA dearrayer plugin. TMADearrayer() - Constructor for class qupath.imagej.detect.dearray.TMADearrayer;  ; TMADearrayerPluginIJ - Class in qupath.imagej.detect.dearray. Plugin for automatically dearraying tissue microarrays (TMAs). TMADearrayerPluginIJ() - Constructor for class qupath.imagej.detect.dearray.TMADearrayerPluginIJ. Default constructor. TMAExplorer - Class in qupath.lib.gui.tma. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAExplorer(QuPathGUI) - Constructor for class qupath.lib.gui.tma.TMAExplorer. Constructor. tmaExportDownsample - Variable in class qupath.lib.gui.panes.PreferencePane.InputOutputPreferences;  ; tmaExportDownsampleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default downsample factor to use when exporting TMA cores. TMAGrid - Interface in qupath.lib.objects.hierarchy. Interface defining a (rectangular) TMA grid. TMAGridOverlay - Class in qupath.lib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1031816,detect,detect,1031816,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety," qupath.lib.scripting.QP. Set the default project, which will be returned by QP.getProject() if it would otherwise return null ; (i.e. setDefaultStaticImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDescription(String) - Method in class qupath.lib.objects.PathAnnotationObject. Set a free text description for this annotation. setDescription(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Set the description. setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the current OverlayOptions.DetectionDisplayMode. setDetectionIntensityClassifications(String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for detections in the current hierarchy. setDetectionIntensityClassifications(PathObjectHierarchy, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for detections in the specified hierarchy. setDisplayMaxValue(double) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set the measurement value that maps to the last color in the color mapper. setDisplayMinValue(double) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set the measurement value that maps to the first color in the color mapper. setDisplayMode(HistogramChart.DisplayMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the histogram display mode. setDoFasterRepaint(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set flag to indicate that repaints should prefer speed over accuracy. setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:923342,detect,detections,923342,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety," qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.BoostClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on Boost. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:1447,predict,predictWithLock,1447,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,3,['predict'],"['predict', 'predictWithLock']"
Safety," signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DistanceTools; public DistanceTools(). Method Details. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; Since:; v0.4.0; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:4689,detect,detectionToAnnotationDistances,4689,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,1,['detect'],['detectionToAnnotationDistances']
Safety," simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default void; close(). Close this model if it will not be needed again. Map<String,Mat>; predict(Map<String,Mat> blobs). Prediction function that can take multiple inputs. default Mat; predict(Mat mat). Prediction function that takes a single input and gives a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default input layer name. This should be used when the input layer name is known or ; unimportant (e.g. the common case of a single input). See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default output layer name. This should be used when the output layer name is known or ; unimportant (e.g. the common case of a single output). See Also:. Constant Field Values. Method Details. predict; Map<String,Mat> predict(Map<String,Mat> blobs); Prediction function that can take multiple inputs. Parameters:; blobs - ; Returns:. predict; default Mat predict(Mat mat); Prediction function that takes a single input and gives a single output. Parameters:; mat - ; Returns:. batchPredict; default List<Mat> batchPredict(List<? extends Mat> mats); Prediction function that can take a batch of inputs",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html:2179,predict,predict,2179,javadoc/docs/qupath/opencv/dnn/DnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html,1,['predict'],['predict']
Safety," static boolean; classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an existing image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(Net net). Get the names of all unconnected output layers. static Map<String,DnnShape>; getOutputLayers(Net net,; DnnShape... inputShape). Get the names of all unconnected output layers. static List<Mat>; imagesFromBlob(Mat blob). Extract images from an OpenCV blob. static boolean; isCudaAvailable(). Query whether CUDA is reported as available by OpenCV. static List<DnnTools.DNNLayer>; parseLayers(Net net,; int width,; int height,; int channels,; int batchSize). Parse the layers for a Net, which allows inspection of names and sizes. static List<DnnShape>; parseShape(MatShapeVector vector). Extract Mat dimensions from a MatShapeVector. static Lis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:2524,detect,detection,2524,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['detect'],['detection']
Safety," successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - last known compatible version (inclusive); maxVersion - next known incompatible version; Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkMinVersion(String). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(); Remove objects that are entirely outside the current image. Returns:; true if objects were removed, false otherwise; Since:; v0.4.0; See Also:. removeObjectsOutsideImage(ImageData, boolean). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(boolean ignoreIntersecting); Remove objects that are entirely or partially outside the current image. Parameters:; ignoreIntersecting - if true, ignore objects that are intersecting the image bounds; if false, remove these intersecting objects too; Returns:; true if objects were removed, false otherwise; Sin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:144476,avoid,avoid,144476,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avoid'],['avoid']
Safety," that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). isComplete() - Method in class qupath.lib.plugins.ParallelTileObject. Returns true if setComplete() has been called. isCudaAvailable() - Static method in class qupath.opencv.dnn.DnnTools. Query whether CUDA is reported as available by OpenCV. isDAB(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""dab"" or ""d"" (ignoring case). isDefaultStyle() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Check if the default JavaFX style is used. isDerivedClass() - Method in class qupath.lib.objects.classes.PathClass. Returns true if #getParentClass() != null. isDerivedFrom(PathClass) - Method in class qupath.lib.objects.classes.PathClass. Returns true if this class, or any ancestor class, is equal to the specified parent class. isDetection() - Method in class qupath.lib.objects.PathObject. Returns true if the object is a detection. isDirectory(String) - Static method in class qupath.lib.scripting.QP. Query if a file path corresponds to a directory. isDynamic() - Method in interface qupath.lib.measurements.Measurement. Deprecated. isEditable() - Method in class qupath.lib.objects.PathDetectionObject. Always returns false - detection objects shouldn't be edited. isEditable() - Method in class qupath.lib.objects.PathObject. Flag indicating that the object is editable. isEditable() - Method in class qupath.lib.objects.PathROIObject. Deprecated.; since v0.4.0. isEditable() - Method in class qupath.lib.objects.PathRootObject. The root object is never locked. isEmpty() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Returns true if there are no events included. isEmpty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Query if the table is empty, i.e. isEmpty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether the co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:618537,detect,detection,618537,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety," the available PathClasses. setPathClassHidden(PathClass, boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Request that objects with a particular PathClass not be displayed. setPathMemoization(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set the directory where memoization files should be written. setPathObject(PathObject) - Method in class qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane. Set the PathObject to display (may be null). setPenManager(QuPathPenManager.PenInputManager) - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Set the PenInputManager. setPieChartData(PieChart, Map<T, ? extends Number>, Function<T, String>, Function<T, Color>, boolean, boolean) - Static method in class qupath.lib.gui.charts.ChartTools. Set pie chart data from a count map. setPixelClassificationRegionFilter(RegionFilter) - Method in class qupath.lib.gui.viewer.OverlayOptions. Control where pixel classifications should be calculated during live prediction. setPixelLayer(ImageData<BufferedImage>, ImageServer<BufferedImage>) - Static method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Set an ImageServer as a property in the ImageData. setPixelSizeMicrons(Number, Number) - Static method in class qupath.lib.scripting.QP. Set the metadata for the current ImageData to have the required pixel sizes. setPixelSizeMicrons(Number, Number, Number) - Static method in class qupath.lib.scripting.QP. Set the metadata for the current ImageData to have the required pixel sizes and z-spacing. setPixelSizeMicrons(ImageData<?>, Number, Number, Number) - Static method in class qupath.lib.scripting.QP. Set the metadata for an ImageServer to have the required pixel sizes and z-spacing. setPlaceholderText(String) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Set the placeholder text to show if no image is available. setPredicate(Predicate<? super PathObject>) - Method in class qupath.lib.gui",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:941050,predict,prediction,941050,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety," the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRoot",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6037,detect,detections,6037,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['detect'],['detections']
Safety," the image display that should be shown and managed by this pane. imageDisplayProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. The image display to which the sliders are applied. ImageDisplaySettings - Class in qupath.lib.display.settings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageDisplaySettings() - Constructor for class qupath.lib.display.settings.ImageDisplaySettings;  ; imageExtension(String) - Method in class qupath.lib.images.writers.TileExporter. Specify a file extension for the original pixels, which determines the export file format. imageFunction(ImageSupplier<S>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used ot lazily read the image. ImageInterpolation - Enum Class in qupath.lib.gui.viewer. Supported interpolation methods when displaying images. ImageJMacroRunner - Class in qupath.imagej.gui. QuPath plugin for running ImageJ macros & returning detected regions. ImageJMacroRunner(QuPathGUI) - Constructor for class qupath.imagej.gui.ImageJMacroRunner. Constructor. imageJPathProperty() - Static method in class qupath.imagej.gui.IJExtension. Property representing the path to a local ImageJ installation, or null if no path has been set. ImageJProcessor - Class in qupath.lib.experimental.pixels. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJProcessor() - Constructor for class qupath.lib.experimental.pixels.ImageJProcessor;  ; ImageJServer - Class in qupath.imagej.images.servers. ImageServer that uses ImageJ's image-reading capabilities. ImageJServer(URI, String...) - Constructor for class qupath.imagej.images.servers.ImageJServer. Constructor. ImageJServerBuilder - Class in qupath.imagej.images.servers. Builder for ImageServers that use ImageJ to read images. ImageJServerBuilder() - Constructor for class qupath.imagej.images.servers.ImageJServerBuilder;  ; imageL",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:590006,detect,detected,590006,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detected']
Safety," the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinary(ByteProcessor, double, int, int, Roi) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. detectVendor(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to detect the vendor of the image at the specified path. determinant() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the determinant of the matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:258082,detect,detectonStrokeThickness,258082,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectonStrokeThickness']
Safety," to construct Geometries within QuPath. getDefaultImports() - Method in class qupath.lib.scripting.ScriptParameters. Get default imports that should be included with the script, where possible. getDefaultInstance() - Static method in class qupath.lib.images.servers.PixelCalibration. Get the default PixelCalibration. getDefaultInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default instance. getDefaultLocationString(ImageServer<BufferedImage>, double, double, int, int) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Default method for getting a location string from an ImageServer using cached tiles. getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlug",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:370439,detect,detect,370439,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety," to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; PreferencePane - Class in qupath.lib.gui.panes. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane() - Constructor for class qupath.lib.gui.panes.PreferencePane;  ; PreferencePane.AppearancePreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.DrawingPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.ExtensionPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.GeneralPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.InputOutputPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.LocalePreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.MeasurementPreferences - Class in qupath.lib.gui.panes;  ; PreferenceP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:778775,predict,predictWithLock,778775,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,3,['predict'],"['predict', 'predictWithLock']"
Safety," to integrate machine learning libraries ; into existing QuPath pipelines that use OpenCV for processing (e.g. object or pixel classification).; ; Note that, where possible, implementations should support JSON serialization via Gson if they are ; intended to support serialization. Author:; Pete Bankhead; See Also:. BlobFunction; DnnModel; GsonTools. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default name to use for single input. static final String; DEFAULT_OUTPUT_NAME. Default name to use for single output. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Map<String,DnnShape>; getInputs(). Get the required inputs. Map<String,DnnShape>; getOutputs(DnnShape... inputShapes). Get the output names mapped to the output shapes. default Map<String,T>; predict(Map<String,T> input). Call a function that takes one or more inputs to produce zero or more outputs. T; predict(T input). Call a function that takes a single input and provides a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default name to use for single input. See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default name to use for single output. See Also:. Constant Field Values. Method Details. predict; default Map<String,T> predict(Map<String,T> input); Call a function that takes one or more inputs to produce zero or more outputs. Parameters:; input - map of input names and blobs; Returns:; map of output names and blobs. predict; T predict(T input); Call a function that takes a single input and provides a single output. Parameters:; input - input to the function; Returns:; output of the function. getInputs; Map<String,DnnShape> getInputs(); Get the required inputs.; ; Often, this is a singleton map with key DEFAULT_INPUT_NAME for functions that take a single input.; ; If the shape is known, the axis o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html:1583,predict,predict,1583,javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,1,['predict'],['predict']
Safety," to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109883,detect,detectionToAnnotationDistances,109883,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,4,['detect'],"['detection', 'detectionToAnnotationDistances']"
Safety," to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DistanceTools; public DistanceTools(). Method Details. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances wi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:4111,detect,detectionToAnnotationDistances,4111,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,4,['detect'],"['detection', 'detectionToAnnotationDistances']"
Safety," train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Train the classifier using data in an appropriate format. train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; TRAIN_VALIDATION_TEST_METADATA_KEY - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata key for the flag indicating the image type (Train, Validation, Test or None). trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Implement trainWithLock rather than train direct",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1047307,predict,prediction,1047307,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety," void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed region of an image. static void; showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData). Show the QuPath script editor with a script corresponding to the command history of a specified image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Commands; public Commands(). Method Details. insertSelectedObjectsInHierarchy; public static void insertSelectedObjectsInHierarchy(ImageData<?> imageData); Insert the selected objects in the hierarchy, resolving positions accordingly.; ; This causes smaller 'completely-contained' annotations to be positioned below larger containing annotations, ; and detections to be assigned to other annotations based on centroid location. Parameters:; imageData - the image data containing the hierarchy. promptToResolveHierarchy; public static void promptToResolveHierarchy(ImageData<?> imageData); Resolve parent-child relationships within the object hierarchy.; This means that objects will be arranged hierarchically, rather than as a flat list. Parameters:; imageData - the image data to process. createFullImageAnnotation; public static void createFullImageAnnotation(QuPathViewer viewer); Create a full image annotation for the image in the specified viewer.; The z and t positions of the viewer will be used. Parameters:; viewer - the viewer containing the image to be processed. editSelectedAnnotation; public static void editSelectedAnnotation(QuPathGUI qupath); Prompt to edit the selected annotation by translation and rotation.; ; Note that this method may change in future versions to be tied to a specified image data, ; rather",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:10923,detect,detections,10923,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['detect'],['detections']
Safety,"  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape; detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi). Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. static Polygon; fitCorePolygonToGrid(Polygon poly,; double coreDiameterPx,; int nHorizontal,; int nVertical). Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. static ByteProcessor; makeBinaryImage(ImageProcessor ip,; double coreDiameterPx,; Roi roi,; boolean isFluorescence). Make a binary image depicting (hopefully) the TMA cores. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMADearrayer; public TMADearrayer(). Method Details. detectTMACoresFromBinary; public static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi); Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image.; Cores should be circular and arranged in a grid pattern, although this may be (slightly) rotated; and some cores may be missing (but at least a few should be present in all rows / columns of the grid). Parameters:; bp - - the TMA slide image, after thresholding.; coreDiameterPx - - approximate diameter of a single TMA core, in pixels; nHorizontal - - number of cores per row of the full grid; nVertical - - number of cores per column of the full grid; roi - - optional region of interest determining where cores should be found (may be useful if edge artifacts are problematic); Returns:; Polygon in which points are arranged in order, row-by-row, starting from the top-left corner of the grid. makeBinar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html:1615,detect,detectTMACoresFromBinary,1615,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,1,['detect'],['detectTMACoresFromBinary']
Safety,"  ; getDescription() - Method in class qupath.process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getDetails() - Method in interface qupath.lib.images.writers.ImageWriter. Get further details of the writer, which may be displayed to a user. getDetails() - Method in class qupath.lib.images.writers.JpegWriter;  ; getDetails() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getDetails() - Method in class qupath.lib.images.writers.PngWriter;  ; getDetectionDisplayMode() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get the current OverlayOptions.DetectionDisplayMode. getDetectionObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all detection objects in the hierarchy (including sub-classes of detections). getDetectionObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current detection objects. getDeterminant() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the determinant for each pixel. getDeterminant() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getDeterminant() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getDisplayableImageName(ImageServer<?>) - Static method in class qupath.lib.images.servers.ServerTools. Get an ImageServer name suitable for displaying. getDisplayedClipShape(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer. Transform a clip shape into image coordinates for this viewer. getDisplayedColor(PathObject) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color appropriate for displaying an object. getDisplayedColorARGB(PathObject) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get the color with which an object should be displayed, as a packaged ARGB integer. getDisplayedImageName(ImageData<BufferedImage>) - Method in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:382910,detect,detection,382910,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.process.gui.WandToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. UriResource - Interface in qupath.lib.io. Interface for objects that depend upon URIs. URIs(URI...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs. URIs(Collection<URI>) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as a collection. UriUpdater<T> - Class in qupath.lib.io. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem - Class in qupath.lib.io. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus - Enum Class in qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1069467,avoid,avoid,1069467,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avoid'],['avoid']
Safety,"() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI encloses an area. isBigTiff() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if URI is for a local file known/expected to be a BigTIFF image. isBrightfield() - Method in class qupath.lib.images.ImageData. Returns true if the image type is set to brightfield. isBrightnessContrastRescaled() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isBrightnessContrastRescaled() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. isCancelled() - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; isCancelled() - Method in interface qupath.lib.plugins.TaskRunner. Query if the plugin can be cancelled while running. isCell() - Method in class qupath.lib.objects.PathObject. Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). isCensored() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. Returns true if the event should be considered right-censored. isChanged() - Method in class qupath.lib.images.ImageData. Returns true if changes have been recorded since the last time this object was notified that it was saved. isChanging() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if changes are still being made, so more events will be fired. isCircle() - Method in class qupath.lib.roi.EllipseROI. Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. isCircle(double, double) - Method in class qupath.lib.roi.EllipseROI. Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. isCompatible(String, int, String) - Method in interface qupath.lib.scripting.languages.AutoCompletions.Comp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:616140,detect,detection,616140,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. locationFontSizeProperty(). scalebarFontWeight; public static ObjectProperty<FontWeight> scalebarFontWeightProperty; Preferred font weight in the viewer. See Also:. scalebarFontWeightProperty(). scalebarLineWidth; public static DoubleProperty scalebarLineWidthProperty; Preferred line width for the scalebar. See Also:. scalebarLineWidthProperty(). allredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:40288,detect,detection,40288,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detection']
Safety,"(Mat mat). Create an OpenCV blob from a single mat. static Mat; blobFromImages(Collection<Mat> mats,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a batch of Mats with optional scaling, resizing and cropping. static Mat; blobFromImages(Mat... mats). Create an OpenCV blob from one or more mats. static Mat; blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. static OpenCVDnn.Builder; builder(String modelPath). Initiative building and configuring an OpenCVDnn. static boolean; classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an existing image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:1992,predict,predictionMeasurement,1992,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['predict'],['predictionMeasurement']
Safety,"(PathObject) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Ensure that the specified object is removed from the selection. deselectObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Ensure the specified objects are deselected. DETACH_VIEWER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions;  ; DETACH_VIEWER - Variable in class qupath.lib.gui.actions.ViewerActions;  ; detachActiveViewerFromGrid() - Method in class qupath.lib.gui.viewer.ViewerManager. Detach the currently active viewer from the viewer grid, if possible. detachViewerFromGrid(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Detach the specified viewer from the viewer grid, if possible. detect(DetectionModel, Mat, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. detect(DetectionModel, ImageServer<BufferedImage>, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. DetectCytokeratinCV - Class in qupath.opencv. Simple command to detect tumor regions stained with cytokeratin. DetectCytokeratinCV() - Constructor for class qupath.opencv.DetectCytokeratinCV;  ; detection() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:251993,detect,detection,251993,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"(TileRequest) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; readTile(TileRequest) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; readTile(TileRequest) - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; readTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Read a single image tile. readTile(TileRequest) - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; readTile(TileRequest) - Method in class qupath.lib.images.servers.LabeledImageServer;  ; readTile(TileRequest) - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; readTile(TileRequest) - Method in class qupath.lib.images.servers.SparseImageServer;  ; readTile(TileRequest) - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; readURLAsString(URL, int) - Static method in class qupath.lib.common.GeneralTools. Read URL as String, with specified timeout in milliseconds. rearrangeByStride(Collection<T>, T[], int) - Static method in class qupath.lib.plugins.AbstractPlugin. Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. RearrangeRGBImageServer - Class in qupath.lib.images.servers. Simple image server to swap the red and blue channels of an RGB image. RearrangeRGBImageServer(ImageServer<BufferedImage>, String) - Constructor for class qupath.lib.images.servers.RearrangeRGBImageServer;  ; RECENT_COMMAND_LIST - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; Reclassifier - Class in qupath.lib.objects.classes. Helper class when classifying PathObjects. Reclassifier(PathObject, PathClass, boolean) - Constructor for class qupath.lib.objects.classes.Reclassifier. Helper class to store an object prior to reclassifying it. Reclassifier(PathObject, PathClass, boolean, double) - Constructor for class qupath.lib.objects.classes.Reclassifier. Helper c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:830026,timeout,timeout,830026,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['timeout'],['timeout']
Safety,"). Set the channels for the specified ImageData. static void; setChannels(ImageChannel... channels). Set the channels for the current ImageData. static boolean; setColorDeconvolutionStains(String arg). Set the color deconvolution stains for hte current image data using a (JSON) String representation. static void; setDefaultImageData(ImageData<BufferedImage> imageData). Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. static void; setDefaultProject(Project<BufferedImage> project). Set the default project, which will be returned by getProject() if it would otherwise return null ; (i.e. static void; setDetectionIntensityClassifications(String measurementName,; double... thresholds). Set the intensity classifications for detections in the current hierarchy. static void; setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set the intensity classifications for detections in the specified hierarchy. static boolean; setImageType(String typeName). Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. static boolean; setImageType(ImageData.ImageType type). Set the image type for the current image data. static void; setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the current hierarchy. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static void; setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the specified hierarchy. static void; setIntensityClassification",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:38578,detect,detections,38578,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,"). getSuitableName(Class<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get a user-friendly name for a specific type of PathObject, based on its Java class. getSum() - Method in class qupath.lib.analysis.stats.Histogram. Get the sum of all the values being histogrammed. getSum() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the sum of all non-NaN values that were added. getSummary() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a summary string representing this image entry. getSupportedObjects(Collection<? extends PathObject>, Collection<Class<? extends PathObject>>) - Static method in class qupath.lib.objects.PathObjectTools. From a collection of available objects, extract those that are instances of specified supported classes. getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:525202,detect,detect,525202,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMap - builder to generate a density map; channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the current image. Parameters:; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:135859,avoid,avoid,135859,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avoid'],['avoid']
Safety,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1939,avoid,avoid,1939,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,2,['avoid'],['avoid']
Safety,", String, Collection<T>, T) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). showChoiceDialog(String, String, T[], T) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). showConfirmDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a confirm dialog (OK/Cancel). showConfirmDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a confirm dialog (OK/Cancel). showConnectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showDeprecatedCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showDetectionMeasurementManager(QuPathGUI, ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Show a simple dialog for viewing (and optionally removing) detection measurements. showDetectionMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:963913,detect,detection,963913,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,", WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathPlugin<T>; Primary interface for defining a 'plugin' command.; ; Although the interface is very basic, developers wanting to create new plugins should general start ; by modifying an existing plugin that does something similar.; ; By paying attention to the type hierarchy and making use of the most appropriate interfaces/abstract classes, ; it is possible to get quite a bit of functionality 'for free', including scriptability and parallelization ; with appropriate calls to update the object hierarchy. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Method Details. getName; String getName(); Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; String getDescription(); Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Parameters:; taskRunner - ; arg - ; Returns:. getLastResultsDescription; String getLastResultsDescription(); (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html:3059,detect,detected,3059,javadoc/docs/qupath/lib/plugins/PathPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html,1,['detect'],['detected']
Safety,", ignoring NaNs. static double[]; channelStdDev(Mat mat). Get the standard deviation of image channels, ignoring NaNs. static double[]; channelSum(Mat mat). Get the sum of image channels, ignoring NaNs. static void; closingFilter(Mat mat,; int radius). Apply a 2D closing filter (dilation followed by erosion) to all channels of an image. static List<PathObject>; createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create annotation objects by tracing contours in a labelled image. static Mat; createBinaryMask(Mat mat,; DoublePredicate predicate). Create a binary mask (0, 255 values) by applying a predicate to pixel values. static List<PathObject>; createCells(Mat matLabelsNuclei,; Mat matLabelsCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects by tracing contours in a labelled image. static List<PathObject>; createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create detection objects by tracing contours in a labelled image. static Mat; createDisk(int radius,; boolean doMean). Create a disk filter. static Mat; createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue). Create a mask by applying a predicate to pixel values. static List<PathObject>; createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creatin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:2867,detect,detection,2867,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['detect'],['detection']
Safety,",; boolean isMissing,; ImagePlane plane); Create a TMA core object with an ellipse ROI. Parameters:; x - ; y - ; width - ; height - ; isMissing - ; plane - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a classified detection object with a specified measurement list.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createCellObject(ROI, ROI, PathClass, MeasurementList). createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass); Create a classified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi); Create an unclassified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; Returns:. createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a tile object, with a classification and measurements list.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:6123,detect,detection,6123,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['detect'],['detection']
Safety,"- ; Returns:. convertTransform; public static AffineTransformation convertTransform(AffineTransform transform); Convert an AffineTransform to an AffineTransformation. Parameters:; transform - ; Returns:. shapeToGeometry; public static Geometry shapeToGeometry(Shape shape); Convert a java.awt.Shape to a JTS Geometry. Parameters:; shape - ; Returns:. envelopToRegion; public static ImageRegion envelopToRegion(Envelope env,; int z,; int t); Convert an Envelope to an ImageRegion. Parameters:; env - envelop; z - z index for the region (default is 0); t - timepoint for the region (default is 0); Returns:; the smallest ImageRegion that contains the specified envelop. attemptOperation; public static Geometry attemptOperation(Geometry input,; Function<Geometry,Geometry> fun); Attempt to apply a function to a geometry, returning the input unchanged if there was an exception.; ; The purpose of this is to make it easier to apply non-essential functions that might fail (e.g. with a TopologyException ; and to recover easily. Parameters:; input - the input geometry; fun - the function to (attempt) to apply; Returns:; the new geometry if the function succeeded, otherwise the original geometry. roundCoordinates; public static Geometry roundCoordinates(Geometry geometry); Round coordinates in a Geometry to integer values. Parameters:; geometry - the updated Geometry; Returns:. constrainToBounds; public static Geometry constrainToBounds(Geometry geometry,; double x,; double y,; double width,; double height); Compute the intersection of a Geometry and a specified bounding box.; The original Geometry may be returned unchanged if no changes are required to fit within the bounds. Parameters:; geometry - the updated Geometry; x - ; y - ; width - ; height - ; Returns:. createRectangle; public static Geometry createRectangle(double x,; double y,; double width,; double height); Create a rectangular Geometry for the specified bounding box. Parameters:; x - ; y - ; width - ; height - ; Returns:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html:5864,recover,recover,5864,javadoc/docs/qupath/lib/roi/GeometryTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html,1,['recover'],['recover']
Safety,"- Method in class qupath.lib.images.servers.AbstractTileableImageServer. Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. getTileCacheSize() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Get the tile cache size, in bytes. getTileHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile at the tile resolution. getTileHeight() - Method in class qupath.lib.objects.utils.Tiler. Get the height of output tiles. getTileObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all tile objects in the hierarchy. getTileObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current tile objects. getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV. Returns zero - indicating no overlap... getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getTileOverlap(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. getTileRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the tile request, if available. getTileRequest(int, int, int, int, int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get the single TileReque",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:533590,detect,detect,533590,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"- Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly more) translucent version of the specified color. getMousePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getMousePosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor position within this viewer, or null if the cursor is outside the viewer. getName() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getName() - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getName() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getName() - Method in class qupath.imagej.gui.IJExtension;  ; getName() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getName() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getName() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getName() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getName() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getName() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getName() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getName() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getName() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getName() - Method in class qupath.lib.analysis.stats.survival.Kapla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:447524,detect,detect,447524,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"- Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify ONNX Runtime. FRAMEWORK_OPENCV_DNN - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify OpenCV DNN. FRAMEWORK_PYTORCH - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify PyTorch. FRAMEWORK_TENSORFLOW - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow. FRAMEWORK_TF_LITE - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow Lite. from2D(double[][]) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. fromArray(String...) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass from an array of individual names. fromBlob(T) - Method in interface qupath.opencv.dnn.BlobFunction. Convert a blob (generally the result of a prediction) to a list of mats. fromCollection(Collection<String>) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass using all the name elements specified in the collection, ; without providing a default color. fromCollection(Collection<String>, Integer) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass instance using all the name elements specified in ; the collection, with optional default color if a new instance is created. fromColumns(double...) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. fromFriendlyString(String) - Static method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Get the CompressionType corresponding to the given input. fromJTS(AffineTransformation) - Static method in class qupath.lib.awt.common.AffineTransforms. Create a Java affine transfo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:314286,predict,prediction,314286,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,". AbstractDetectionPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractDetectionPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; AbstractTileableDetectionPlugin, DetectCytokeratinCV, PositivePixelCounterIJ, SimpleTissueDetection2, TileClassificationsToAnnotationsPlugin, TilerPlugin. public abstract class AbstractDetectionPlugin<T>; extends AbstractInteractivePlugin<T>; Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations).; ; TODO: Note this isn't a very stable API (because it's quite awkward), and it's therefore liable to change... Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:977,detect,detected,977,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,1,['detect'],['detected']
Safety,". AbstractDnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class AbstractDnnModel<T>. java.lang.Object; qupath.opencv.dnn.AbstractDnnModel<T>. Type Parameters:; T - . All Implemented Interfaces:; AutoCloseable, DnnModel. Direct Known Subclasses:; OpenCVDnn. public abstract class AbstractDnnModel<T>; extends Object; implements DnnModel; Wrapper for a deep learning model in a pipeline using OpenCV.; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format,; and the output back into one or more Mats.; ; This provides convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; AbstractDnnModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the pre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:900,predict,predict,900,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,1,['predict'],['predict']
Safety,". Add a viewer listener. void; centerImage(). Center the current image in the viewer, while keeping the same downsample factor. void; centerROI(ROI roi). Center the specified ROI in the viewer. void; closeViewer(). Request that this viewer is closed. protected boolean; componentContains(double x,; double y);  ; Point2D; componentPointToImagePoint(double x,; double y,; Point2D pointDest,; boolean constrainToBounds). Convert x and y coordinates from the component space to the image space. Point2D; componentPointToImagePoint(Point2D point,; Point2D pointDest,; boolean constrainToBounds). Convert a coordinate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds. protected void; fireImageDataChanged(ImageData<BufferedImage> imageDataPrevious,; ImageData<BufferedImage> imageDataNew);  ; protected void; fireVisibleRegionChangedEvent(Shape shape);  ; void; forceOverlayUpdate(). Force the overlay displaying detections and annotations to be repainted. DoubleProperty; gammaProperty(). Get the gamma property for this viewer. PathTool; getActiveTool(). Get the active PathTool for this viewer. Collection<PathObject>; getAllSelectedObjects(). Get all currently-selected objects from the hierarchy. List<BufferedImage>; getAllThumbnails(). Get thumbnails for all z-slices & time points. Color; getBorderColor(). Get the border color set for this viewer. double; getCenterPixelX(). Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. double; getCenterPixelY(). Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. ROI; getCurrentROI(). Get the current ROI, i.e. Cursor; getCursor(). Get the current cursor for this viewer. ObservableList<PathOverlay>; getCustomOverlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:3011,detect,detections,3011,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['detect'],['detections']
Safety,". All Classes and Interfaces (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Classes and Interfaces. All Classes and InterfacesInterfacesClassesEnum ClassesException ClassesAnnotation Interfaces. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:411,detect,detected,411,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detected']
Safety,". All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathCellObject; constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1645,detect,detections,1645,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,1,['detect'],['detections']
Safety,". All Packages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. All Packages. Package Summary. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:309,detect,detect,309,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,5,['detect'],"['detect', 'detection']"
Safety,". Apply a new classification to all objects in the current hierarchy with a specified original classification. static void; replaceClassification(PathObjectHierarchy hierarchy,; PathClass originalClass,; PathClass newClass). Apply a new classification to all objects with a specified original classification in the provided hierarchy. static void; resetBatchProjectAndImage(). Reset the Project and ImageData used for batch processing for the current thread. static void; resetClassifications(Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the current hierarchy. static void; resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the specified hierarchy. static void; resetDetectionClassifications(). Reset the PathClass for all detection objects in the current hierarchy. static void; resetIntensityClassifications(). Reset the intensity classifications for all detections in the current hierarchy. static void; resetIntensityClassifications(Collection<PathObject> pathObjects). Reset the intensity classifications for all specified objects. static void; resetIntensityClassifications(PathObjectHierarchy hierarchy). Reset the intensity classifications for all detections in the specified hierarchy. static void; resetSelection(). Clear the selected objects for the current PathObjectHierarchy. static void; resetTMAMetadata(boolean includeMeasurements). Remove all TMA metadata from the current TMA grid. static void; resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements). Remove all TMA metadata from the TMA grid of the specified hierarchy. static void; resolveHierarchy(). Resolve the location of annotations in the current hierarchy by setting parent/child relationships. static void; resolveHierarchy(PathObjectHierarchy hierarchy). Resolve the location of annotations in the specified hierarchy by setting parent/child relation",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:29751,detect,detections,29751,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,". AreaROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class AreaROI. java.lang.Object; qupath.lib.roi.AreaROI. All Implemented Interfaces:; Serializable, ROI. public class AreaROI; extends Object; implements Serializable; Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions.; ; It may be decomposed into one or more polygons (vertices), in which case the sign of the area is important ; in indicating whether the region should be considered 'positive' or a hole.; ; The underlying idea is based on java.awt.Area, but implemented so as to avoid a dependency on AWT.; ; However, because this implementation is relatively simple, it doesn't do the complicated checking and ; computations of AWT Areas - and so ought not be used directly. Rather, AWTAreaROI is strongly to be preferred.; ; The real usefulness of this class is in enabling Serialization of all ROIs to avoid a dependency on AWT,; since potentially a deserialized version of this could then be used to create different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:869,avoid,avoid,869,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['avoid'],['avoid']
Safety,". BlobFunction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface BlobFunction<T>. Type Parameters:; T - preferred tensor format for the framework. public interface BlobFunction<T>; Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. Author:; Pete Bankhead; See Also:. PredictionFunction; DnnModel. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<Mat>; fromBlob(T blob). Convert a blob (generally the result of a prediction) to a list of mats. T; toBlob(Mat... mats). Convert one or more mats to a blob. Method Details. toBlob; T toBlob(Mat... mats); Convert one or more mats to a blob. ; This is intended primarily for cases where each input mat corresponds to an image, ; and the length of the input array corresponds to the batch size. Parameters:; mats - ; Returns:. fromBlob; List<Mat> fromBlob(T blob); Convert a blob (generally the result of a prediction) to a list of mats.; The length of the output list corresponds to the batch size.; ; Note that while this is typically used for blobs that are images, implementing classes ; should sensibly handle cases where the number of dimensions indicates a different kind of ; output. Parameters:; blob - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/BlobFunction.html:798,predict,prediction,798,javadoc/docs/qupath/opencv/dnn/BlobFunction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/BlobFunction.html,2,['predict'],['prediction']
Safety,". CellCountsCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class CellCountsCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.opencv.CellCountsCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class CellCountsCV; extends AbstractTileableDetectionPlugin<BufferedImage>; Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection.; ; Currently, only H&E or hematoxylin and DAB are supported.; ; An improved plugin would be desirable to perform the task in a more general way, and without ; requesting the 'magnification' by default (which is less meaningful than resolution/pixel size). Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; CellCountsCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Option",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:908,detect,detection,908,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['detect'],['detection']
Safety,". Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For All Packages. Package Hierarchies:. qupath, ; qupath.ext.openslide, ; qupath.imagej.detect.cells, ; qupath.imagej.detect.dearray, ; qupath.imagej.detect.tissue, ; qupath.imagej.gui, ; qupath.imagej.images.servers, ; qupath.imagej.images.writers, ; qupath.imagej.processing, ; qupath.imagej.superpixels, ; qupath.imagej.tools, ; qupath.lib.algorithms, ; qupath.lib.analysis, ; qupath.lib.analysis.algorithms, ; qupath.lib.analysis.features, ; qupath.lib.analysis.heatmaps, ; qupath.lib.analysis.images, ; qupath.lib.analysis.stats, ; qupath.lib.analysis.stats.survival, ; qupath.lib.awt.common, ; qupath.lib.classifiers, ; qupath.lib.classifiers.object, ; qupath.lib.classifiers.pixel, ; qupath.lib.color, ; qupath.lib.common, ; qupath.lib.display, ; qupath.lib.display.settings, ; qupath.lib.experimental.pixels, ; qupath.lib.extension.svg, ; qupath.lib.geom, ; qupath.lib.gui, ; qupath.lib.gui.actions, ; qupath.lib.gui.actions.annotations, ; qupath.lib.gui.actions.menus, ; qupath.lib.gui.charts, ; qupath.lib.gui.commands, ; qupath.lib.gui.commands.display, ; qupath.lib.gui.commands.objects, ; qupath.lib.gui.dialogs, ; qupath.lib.gui.extensions, ; qupath.lib.gui.images.servers, ; qupath.lib.gui.images.stores, ; qupath.lib.gui.localization, ; qupath.lib.gui.logging, ; qupath.lib.gui.measure, ; qupath.lib.gui.panes, ; qupath.lib.gui.prefs, ; qupath.lib.gui.scripting, ; qupath.lib.gui.scripting.completors, ; qupath.lib.gui.scripting.languages, ; qupath.lib.gui.scripting.richtextfx, ; qupath.lib.gui.scripting.richtextfx.stylers, ; qupath.lib.gui.scripting.syntax, ; qupath.lib.gui.tma, ; qupath.lib.gui.tools, ; qupath.lib.gui.viewer, ; qupath.lib.gui.viewer.overlays, ; qupath.lib.gui.viewer.recording, ; qupath.lib.gui.viewer.tools, ; qupath.lib.gui.viewer.tools.handlers, ; qupath.lib.images, ; qupath.lib.im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:265,detect,detect,265,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,3,['detect'],['detect']
Safety,". Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. Returns:; true if NaNs are supported, false otherwise. getName; public abstract String getName(); User-friendly, readable name for the classifier. Returns:; the classifier name. isTrained; public abstract boolean isTrained(); Classifier has already been trained and is ready to predict. Returns:; true if the classifier is trained, false otherwise. supportsMulticlass; public abstract boolean supportsMulticlass(); Classifier is able to handle more than one outputs for a single sample. Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public abstract boolean supportsAutoUpdate(); Classifier can be trained interactively (i.e. quickly). Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public abstract boolean supportsProbabilities(); Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Returns:; true if (pseudo-)probabilities can be provided. getParameterList; public abstract ParameterList getParameterList(); Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:3015,predict,predict,3015,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,1,['predict'],['predict']
Safety,". Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:109400,detect,detections,109400,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['detect'],['detections']
Safety,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html:659,avoid,avoid,659,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html,1,['avoid'],['avoid']
Safety,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.color.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.DisplayBand.html:635,avoid,avoid,635,javadoc/docs/qupath/lib/color/ColorModels.DisplayBand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.DisplayBand.html,1,['avoid'],['avoid']
Safety,". CreateChannelTrainingImagesCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateChannelTrainingImagesCommand. java.lang.Object; qupath.process.gui.commands.CreateChannelTrainingImagesCommand. All Implemented Interfaces:; Runnable. public class CreateChannelTrainingImagesCommand; extends Object; implements Runnable; Command to create training images based upon channel names, and add these to a project.; ; The purpose of this is to help with training multiple separate classifiers for multiplexed images.; Normally, this command should be run after running other commands (e.g. cell detection). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateChannelTrainingImagesCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateChannelTrainingImagesCommand; public CreateChannelTrainingImagesCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html:903,detect,detection,903,javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,1,['detect'],['detection']
Safety,". DefaultPathObjectComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:677,predict,predictable,677,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,2,"['detect', 'predict']","['detection', 'predictable']"
Safety,". DefaultROIComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class DefaultROIComparator. java.lang.Object; qupath.lib.roi.DefaultROIComparator. All Implemented Interfaces:; Comparator<ROI>. public class DefaultROIComparator; extends Object; implements Comparator<ROI>; Default comparator to enable ROIs to be sorted in a more predictable manner.; ; The aim is to help sorted lists to sort first on ROI location (time, z, channel, y coordinate, then x); and afterwards on ROI type. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultROIComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(ROI o1,; ROI o2);  ; static Comparator<ROI>; getInstance(). Get a static instance of this comparator, to avoid needing to construct it. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultROIComparator; public DefaultROIComparator(). Method Details. compare; public int compare(ROI o1,; ROI o2). Specified by:; compare in interface Comparator<ROI>. getInstance; public static Comparator<ROI> getInstance(); Get a static instance of this comparator, to avoid needing to construct it. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/DefaultROIComparator.html:624,predict,predictable,624,javadoc/docs/qupath/lib/roi/DefaultROIComparator.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/DefaultROIComparator.html,3,"['avoid', 'predict']","['avoid', 'predictable']"
Safety,". DensityMapCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class DensityMapCommand. java.lang.Object; qupath.process.gui.commands.DensityMapCommand. All Implemented Interfaces:; Runnable. public class DensityMapCommand; extends Object; implements Runnable; Command for generating density maps from detections on an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapCommand; public DensityMapCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html:608,detect,detections,608,javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,1,['detect'],['detections']
Safety,". DetectCytokeratinCV (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class DetectCytokeratinCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.opencv.DetectCytokeratinCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class DetectCytokeratinCV; extends AbstractDetectionPlugin<BufferedImage>; Simple command to detect tumor regions stained with cytokeratin. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DetectCytokeratinCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:801,detect,detect,801,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['detect'],['detect']
Safety,". DetectionPluginTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class DetectionPluginTools. java.lang.Object; qupath.lib.plugins.DetectionPluginTools. public class DetectionPluginTools; extends Object; Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy.; ; Internally, a PathTask is used with the important resolution/event-firing occurring within the; taskComplete method. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DetectionPluginTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Runnable; createRunnableTask(ObjectDetector<T> task,; ParameterList params,; ImageData<T> imageData,; PathObject parentObject). Create a task that applies an object detector to a parent object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DetectionPluginTools; public DetectionPluginTools(). Method Details. createRunnableTask; public static <T> Runnable createRunnableTask(ObjectDetector<T> task,; ParameterList params,; ImageData<T> imageData,; PathObject parentObject); Create a task that applies an object detector to a parent object.; ; Detected objects will be added as children of the parent. If the parent has a ROI, this may define the detection ROI. Type Parameters:; T - ; Parameters:; task - ; params - ; imageData - ; parentObject - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/DetectionPluginTools.html:645,detect,detection,645,javadoc/docs/qupath/lib/plugins/DetectionPluginTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/DetectionPluginTools.html,4,['detect'],"['detection', 'detector']"
Safety,". DnnModel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface DnnModel. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; AbstractDnnModel, OpenCVDnn. public interface DnnModel; extends AutoCloseable; General interface for implementing a deep learning model in a pipeline using OpenCV.; ; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format, ; and the output back into one or more Mats.; ; Implementations should provide convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. If only a single input and output are required, then only predict(Mat); needs to be implemented.; ; Note: This was originally implemented in QuPath v0.3.0, but simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html:825,predict,predict,825,javadoc/docs/qupath/opencv/dnn/DnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html,1,['predict'],['predict']
Safety,". FileFormatInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class FileFormatInfo. java.lang.Object; qupath.lib.images.servers.FileFormatInfo. public class FileFormatInfo; extends Object; Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data.; ; In particular, it attempts to extract some usable information from TIFF images using ImageIO to help ; a reader determine whether or not it should attempt to read the image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Constructor Summary; Constructors. Constructor; Description; FileFormatInfo();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static FileFormatInfo.ImageCheckType; checkType(URI uri). Check the type of an image for a specified URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileFormatInfo; public FileFormatInfo(). Method Details. checkType; public static FileFormatInfo.ImageCheckType checkType(URI uri); Check the type of an image for a specified URI.; ; This will return a cached value if possible, to avoid applying (potentially costly) checks too often. Parameters:; uri - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html:1823,avoid,avoid,1823,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,1,['avoid'],['avoid']
Safety,". FindConvexHullDetectionsPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class FindConvexHullDetectionsPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class FindConvexHullDetectionsPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to identify/remove detections from the convex hull of all detections.; ; Currently works only for TMA cores.; ; Purpose is to remove edge detections, where the tissue quality tends to be lower. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FindConvexHullDetectionsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, base",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:795,detect,detections,795,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,3,['detect'],['detections']
Safety,". HaralickFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class HaralickFeaturesPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.HaralickFeaturesPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class HaralickFeaturesPlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin for calculating Haralick texture features, within or around detections or tiles.; ; The ROIs of the detections can be used directly as masks, or else the textures can alternatively be ; calculated within square or circular regions around the object centroids.; This latter option makes it possible to calculate a high density of tiles (for example), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeaturesPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:821,detect,detections,821,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,2,['detect'],['detections']
Safety,". ImageData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Class ImageData<T>. java.lang.Object; qupath.lib.images.ImageData<T>. Type Parameters:; T - . All Implemented Interfaces:; EventListener, PathObjectHierarchyListener, WorkflowListener. public class ImageData<T>; extends Object; implements WorkflowListener, PathObjectHierarchyListener; Class that brings together the main data in connection with the analysis of a single image.; ; Currently, this is really the server (to access the image & its pixels) and the object hierarchy that represents detections.; In addition, there is an ImageType - as some options may change depending on this.; ; One particularly significant example is that of Brightfield images in pathology, for which stain vectors are often required for; effective stain separation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ImageData.ImageType. Enum representing possible image types. Constructor Summary; Constructors. Constructor; Description; ImageData(ImageServer<T> server). Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. ImageData(ImageServer<T> server,; ImageData.ImageType type). Create a new ImageData with a specified type and creating a new object hierarchy. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy). Create a new ImageData with ImageType.UNKNOWN. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type). Create a new ImageData with a specified object hierarchy and type. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPropertyChangeListener(Pro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:845,detect,detections,845,javadoc/docs/qupath/lib/images/ImageData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html,1,['detect'],['detections']
Safety,". ImageJMacroRunner (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.gui; Class ImageJMacroRunner. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.imagej.gui.ImageJMacroRunner. All Implemented Interfaces:; PathPlugin<BufferedImage>. public class ImageJMacroRunner; extends AbstractPlugin<BufferedImage>; QuPath plugin for running ImageJ macros & returning detected regions.; ; TODO: Support script recording. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageJMacroRunner(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:668,detect,detected,668,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['detect'],['detected']
Safety,". ImageOps.ML (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If mo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:851,predict,prediction,851,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,1,['predict'],['prediction']
Safety,". ImageSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface ImageSupplier<S>. Type Parameters:; S - the type of image. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface ImageSupplier<S>; A functional interface for supplying an image region for processing. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static ImageSupplier<BufferedImage>; createBufferedImageSupplier(). Create a image supplier that returns a buffered image. S; getImage(Parameters<S,?> parameters). Get the image to process. Method Details. getImage; S getImage(Parameters<S,?> parameters); throws IOException; Get the image to process.; This should correspond to the region request and image server stored in the parameters.; ; This has access to the parameters, but must not call parameters.getImage() or; parameters.getMask() to avoid the risk of infinite recursion. Parameters:; parameters - ; Returns:; an image based upon the stored parameters; Throws:; IOException. createBufferedImageSupplier; static ImageSupplier<BufferedImage> createBufferedImageSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html:1341,avoid,avoid,1341,javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,2,"['avoid', 'risk']","['avoid', 'risk']"
Safety,". ImageWriter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers; Interface ImageWriter<T>. Type Parameters:; T - . All Known Implementing Classes:; JpegWriter, OMETiffWriter, PngWriter, TiffWriterIJ, ZipWriterIJ. public interface ImageWriter<T>; Interface for defining class that can write images.; ; This may not have been a particularly good idea and may change in the future... (e.g. using services?).; ; As it is, it's best to avoid using it because the design is rather clumsy (and goes back to a day whenever ; external dependencies were avoided with an enthusiasm that may have been a bit too much). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; getDefaultExtension(). Get the default extension. String; getDetails(). Get further details of the writer, which may be displayed to a user. Collection<String>; getExtensions(). Get the file extensions used by the image writer. Class<T>; getImageClass(). Get the class of supported images. String; getName(). Get the name of the image writer. boolean; supportsImageType(ImageServer<T> server). Test whether images provided by a specified ImageServer can be successfully written. boolean; supportsPixelSize(). Returns true if the writer is capable of storing pixel size information. boolean; supportsPyramidal(). Returns true if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImageServer<T> server,; OutputS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriter.html:727,avoid,avoid,727,javadoc/docs/qupath/lib/images/writers/ImageWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriter.html,2,['avoid'],"['avoid', 'avoided']"
Safety,". IntensityFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class IntensityFeaturesPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.IntensityFeaturesPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class IntensityFeaturesPlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles.; ; The ROIs of the detections can be used directly as masks, or else the textures can alternatively be ; calculated within square or circular regions around the object centroids.; This latter option makes it possible to calculate a high density of tiles (for example), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; IntensityFeaturesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:853,detect,detections,853,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,2,['detect'],['detections']
Safety,". Interface for objects that need to be notified when parameters have their values changed. Parameterizable - Interface in qupath.lib.plugins.parameters. Interface for indicating that the implementing class takes adjustable parameters. ParameterList - Class in qupath.lib.plugins.parameters. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterList() - Constructor for class qupath.lib.plugins.parameters.ParameterList;  ; ParameterPanelFX - Class in qupath.lib.gui.dialogs. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. ParameterPanelFX(ParameterList) - Constructor for class qupath.lib.gui.dialogs.ParameterPanelFX. Create a ParameterPanelFX. Parameters<S,T> - Class in qupath.lib.experimental.pixels. Parameters for use with a PixelProcessor. Parameters.Builder<S,T> - Class in qupath.lib.experimental.pixels. Builder class for Parameters. parametersInitialized - Variable in class qupath.imagej.detect.cells.WatershedCellDetection;  ; params - Variable in class qupath.lib.plugins.AbstractInteractivePlugin;  ; parent(Window) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the parent window. parent(Window) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Set the parent window. parent(Window) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the parent window. parent(PathObject) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Set the parent object. parentObjects(Collection<? extends PathObject>) - Method in class qupath.lib.images.writers.TileExporter. Specify parent objects to define tiles. parentObjects(Predicate<PathObject>) - Method in class qupath.lib.images.writers.TileExporter. Specify a filter to extract parent objects to define tiles. parentProxy(PathObject) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Optionally set a temporary object to use as a parent. parse(byte[][], int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:745801,detect,detect,745801,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,". LogRankTest.LogRankResult (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:824,hazard,hazard,824,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,2,['hazard'],['hazard']
Safety,". MeasurementListFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementListFactory. java.lang.Object; qupath.lib.measurements.MeasurementListFactory. public class MeasurementListFactory; extends Object; Factory for creating new measurement lists.; ; For efficiently, (static) Float lists are generally preferred for detection objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList; createMeasurementList(int capacity,; MeasurementList.MeasurementListType type). Create a measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createMeasurementList; public static MeasurementList createMeasurementList(int capacity,; MeasurementList.MeasurementListType type); Create a measurement list. Parameters:; capacity - ; type - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html:632,detect,detection,632,javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html,1,['detect'],['detection']
Safety,". MeasurementMapPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class MeasurementMapPane. java.lang.Object; qupath.lib.gui.panes.MeasurementMapPane. public class MeasurementMapPane; extends Object; Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getPane(). Get the pane, which can be added to a scene for display. void; updateMeasurements(). Update the measurements according to the current image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapPane; public MeasurementMapPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getPane; public Pane getPane(); Get the pane, which can be added to a scene for display. Returns:. updateMeasurements; public void updateMeasurements(); Update the measurements according to the current image. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html:553,detect,detection,553,javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,1,['detect'],['detection']
Safety,". Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:3337,detect,detected,3337,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,1,['detect'],['detected']
Safety,". Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVDnn.Builder. Helper class to build an OpenCVDnn. static enum ; OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; OpenCVDnn();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.Builder; builder(String pathModel). Create a new builder. <T extends Model>T; buildModel(). Build a model. <T extends Model>T; buildModel(OpenCVDnn.ModelType type). Build a model, specifying the OpenCVDnn.ModelType. Net; buildNet(). Build the OpenCV Net. void; close(). Close this model if it will not be needed again. BlobFunction<Mat>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. BlobFunction<Mat>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. URI; getConfigUri(). Get the path to the model configuration, if required. String; getFramework(). Get the framework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:1959,predict,prediction,1959,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,1,['predict'],['prediction']
Safety,". ObjectClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierCommand. All Implemented Interfaces:; Runnable. public class ObjectClassifierCommand; extends Object; implements Runnable; Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers.; ; This is intended as a replacement for 'Create detection classifier' in QuPath v0.1.2, supporting better ; classifier options and serialization. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierCommand; public ObjectClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html:741,detect,detection,741,javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,1,['detect'],['detection']
Safety,". ObjectDetector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface ObjectDetector<T>. Type Parameters:; T - . public interface ObjectDetector<T>; Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters.; ; This enables new detection plugins to be written with somewhat less boilerplate code. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getLastResultsDescription(). Get a String summarizing the result, which may be displayed to a user or logged. Collection<PathObject>; runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi). Detect objects. Method Details. runDetection; Collection<PathObject> runDetection(ImageData<T> imageData,; ParameterList params,; ROI roi); throws IOException; Detect objects. Parameters:; imageData - the ImageData for which objects should be detected; params - optional list of parameters required for the detection; roi - specific region within which the detection should be applied; Returns:; Throws:; IOException. getLastResultsDescription; String getLastResultsDescription(); Get a String summarizing the result, which may be displayed to a user or logged. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html:505,detect,detection,505,javadoc/docs/qupath/lib/plugins/ObjectDetector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ObjectDetector.html,5,['detect'],"['detected', 'detection']"
Safety,". ObjectsMenuActions.DeleteActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions.DeleteActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.DeleteActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; CLEAR_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; CLEAR_DETECTIONS;  ; final org.controlsfx.control.action.Action; CLEAR_HIERARCHY;  ; final org.controlsfx.control.action.Action; DELETE_SELECTED_OBJECTS;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; DeleteActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DELETE_SELECTED_OBJECTS; @ActionConfig(""Action.Objects.Delete.selected""); public final org.controlsfx.control.action.Action DELETE_SELECTED_OBJECTS. SEP_1; public final org.controlsfx.control.action.Action SEP_1. CLEAR_HIERARCHY; @ActionConfig(""Action.Objects.Delete.all""); public final org.controlsfx.control.action.Action CLEAR_HIERARCHY. CLEAR_ANNOTATIONS; @ActionConfig(""Action.Objects.Delete.annotations""); public final org.controlsfx.control.action.Action CLEAR_ANNOTATIONS. CLEAR_DETECTIONS; @ActionConfig(""Action.Objects.Delete.detections""); public final org.controlsfx.control.action.Action CLEAR_DETECTIONS. Constructor Details. DeleteActions; public DeleteActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.DeleteActions.html:1777,detect,detections,1777,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.DeleteActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.DeleteActions.html,1,['detect'],['detections']
Safety,". OpenCVDnn.ModelType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.dnn; Enum Class OpenCVDnn.ModelType. java.lang.Object; java.lang.Enum<OpenCVDnn.ModelType>; qupath.opencv.dnn.OpenCVDnn.ModelType. All Implemented Interfaces:; Serializable, Comparable<OpenCVDnn.ModelType>, Constable. Enclosing class:; OpenCVDnn. public static enum OpenCVDnn.ModelType; extends Enum<OpenCVDnn.ModelType>; Enum representing different classes of Model supported by OpenCV.; These can be used as a more convenient way to run predictions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Refers to ClassificationModel. DEFAULT. Default Model class. DETECTION. Refers to DetectionModel. KEYPOINTS. Refers to KeypointsModel. SEGMENTATION. Refers to SegmentationModel. TEXT_DETECTION_DB. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION. Refers to TextRecognitionModel. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.ModelType; valueOf(String name). Returns the enum constant of this class with the specified name. static OpenCVDnn.ModelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Det",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html:827,predict,predictions,827,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,1,['predict'],['predictions']
Safety,". OpenSlideLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlideLoader. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:781,detect,detectVendor,781,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,2,['detect'],"['detect', 'detectVendor']"
Safety,". OutputHandler.OutputToObjectConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler.OutputToObjectConverter<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<PathObject>; convertToObjects(Parameters<S,T> params,; U output). Convert the output of a pixel processor to a list of PathObjects. Method Details. convertToObjects; List<PathObject> convertToObjects(Parameters<S,T> params,; U output); Convert the output of a pixel processor to a list of PathObjects. Parameters:; params - the processing parameters; output - the output of the processor; Returns:; a list of objects, or null if the output is incompatible with this conversion.; Note that an empty list is not the same as null; an empty list indicates that; no objects were detected, whereas null indicates that the output is incompatible; and therefore should be passed to another output handler, if available. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html:1414,detect,detected,1414,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,1,['detect'],['detected']
Safety,". OverlayOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class OverlayOptions. java.lang.Object; qupath.lib.gui.viewer.OverlayOptions. public class OverlayOptions; extends Object; Default class for storing overlay display options. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<OverlayOptions.DetectionDisplayMode>; detectionDisplayMode. Property representing the current OverlayOptions.DetectionDisplayMode. BooleanProperty; fillAnnotations;  ; BooleanProperty; fillDetections;  ; FloatProperty; fontSize;  ; ObjectProperty<GridLines>; gridLines;  ; ObservableSet<PathClass>; hiddenClasses;  ; ObjectProperty<MeasurementMapper>; measurementMapper;  ; FloatProperty; opacity. Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegion;  ; BooleanProperty; showAnnotations;  ; BooleanProperty; showConnections;  ; BooleanProperty; showDetections;  ; BooleanProperty; showGrid;  ; BooleanProperty; showNames;  ; BooleanProperty; showPixelClassification;  ; BooleanProperty; showTMACoreLabels;  ; BooleanProperty; showTMAGrid;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Constructor Summary; Constructors. Constructor; Description; OverlayOptions(). Constructor, using default values. OverlayOptions(OverlayOptions options). Constructor, initializing values based on an existing OverlayOptions object. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<OverlayOptions.DetectionDisplayMod",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:670,detect,detectionDisplayMode,670,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detectionDisplayMode']
Safety,". OverlayOptions.DetectionDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:869,detect,detections,869,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,1,['detect'],['detections']
Safety,". Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty mat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:5131,predict,prediction,5131,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,6,['predict'],['prediction']
Safety,". Overview (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. QuPath 0.5.0. Packages. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index.html:298,detect,detect,298,javadoc/docs/index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index.html,5,['detect'],"['detect', 'detection']"
Safety,". ParallelTileObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class ParallelTileObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject; qupath.lib.objects.PathTileObject; qupath.lib.plugins.ParallelTileObject. All Implemented Interfaces:; Externalizable, Serializable, TemporaryObject. public class ParallelTileObject; extends PathTileObject; implements TemporaryObject; A temporary object, used during parallel processing to represent a tile currently being used for object; detection.; ; ParallelTileObjects maintain knowledge of adjacent tiles, and are thereby able to resolve overlaps; after detection is complete (here, based on keeping the object with the larger area). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ParallelTileObject.Status. Current processing status for the tile. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ParallelTileObject.Status; getStatus(). Get the current status (pending, processing or done). boolean; isComplete(). Returns true if setComplete() has been called. boolean; isProcessing(). Returns true if setIsProcessing(true) has recently been called. void; resolveOverlaps(). Request that the tile object attempts to resolve overlaps with its neighboring tiles. void; setComplete(boolean wasCancelled). Notify the tile that its processing is done. boolean; suggestNeighbor(ParallelTileObject pto). Register a neighboring tile, if it intersects with the bounds of this one. void; updateStatus(ParallelTileObject.Status status). Notify the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html:850,detect,detection,850,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,2,['detect'],['detection']
Safety,". PathDetectionObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathDetectionObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:688,detect,detection,688,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html,2,['detect'],['detection']
Safety,". PathHierarchyImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.servers; Class PathHierarchyImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.gui.images.servers.PathHierarchyImageServer. All Implemented Interfaces:; AutoCloseable, GeneratingImageServer<BufferedImage>, ImageServer<BufferedImage>. public class PathHierarchyImageServer; extends AbstractTileableImageServer; implements GeneratingImageServer<BufferedImage>; A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static String; DEFAULT_PREFIX. Prefix used for the path of all instances of this class. Constructor Summary; Constructors. Constructor; Description; PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Col",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:983,detect,detection,983,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['detect'],['detection']
Safety,". PathObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObject. java.lang.Object; qupath.lib.objects.PathObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathROIObject, PathRootObject. public abstract class PathObject; extends Object; implements Externalizable; Fundamental object of interest in QuPath.; ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Col",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:696,detect,detections,696,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['detect'],['detections']
Safety,". PathPrefs.DetectionTreeDisplayModes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static fin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:857,detect,detections,857,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,2,['detect'],"['detectionTreeDisplayModeProperty', 'detections']"
Safety,". PixelClassifierTools.CreateObjectOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Enum Class PixelClassifierTools.CreateObjectOptions. java.lang.Object; java.lang.Enum<PixelClassifierTools.CreateObjectOptions>; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. All Implemented Interfaces:; Serializable, Comparable<PixelClassifierTools.CreateObjectOptions>, Constable. Enclosing class:; PixelClassifierTools. public static enum PixelClassifierTools.CreateObjectOptions; extends Enum<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class ja",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:951,avoid,avoid,951,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,1,['avoid'],['avoid']
Safety,". PositiveCellDetection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class PositiveCellDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellDetection; qupath.imagej.detect.cells.PositiveCellDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositiveCellDetection; extends WatershedCellDetection; Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.imagej.detect.cells.WatershedCellDetection; parametersInitialized. Constructor Summary; Constructors. Constructor; Description; PositiveCellDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:358,detect,detect,358,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,3,['detect'],['detect']
Safety,". PositivePixelCounterIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class PositivePixelCounterIJ. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.PositivePixelCounterIJ. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositivePixelCounterIJ; extends AbstractDetectionPlugin<BufferedImage>; Simple command to detect regions with positive staining.; ; For versions <= v0.1.2 this gave simple measurements that were influenced by the downsample values used.; Later versions make calibrated measurements and give more flexibility in terms of output. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:359,detect,detect,359,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,3,['detect'],['detect']
Safety,". PreferencePane.ObjectPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html:802,detect,detectonStrokeThickness,802,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,1,['detect'],['detectonStrokeThickness']
Safety,". Reclassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.classes; Class Reclassifier. java.lang.Object; qupath.lib.objects.classes.Reclassifier. public class Reclassifier; extends Object; Helper class when classifying PathObjects.; ; When applying a classifier to make objects, it's desirable to make updating the classification an atomic ; operation, applied to all objects in one go. Consequently, it the classifier is aborted early ; (e.g. the thread interrupted), then the objects are not partially reclassified. Constructor Summary; Constructors. Constructor; Description; Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass). Helper class to store an object prior to reclassifying it. Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass,; double probability). Helper class to store an object prior to reclassifying it, including a classification probability. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; apply(). Apply the stored classification. PathObject; getPathObject(). Get the stored PathObject for which the PathClass may be set. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Reclassifier; public Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass); Helper class to store an object prior to reclassifying it. Parameters:; pathObject - ; pathClass - ; retainIntensityClass - of we have a single-level or two-level PathClass, with the second element an intensity classification, ; optionally retain this a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/Reclassifier.html:718,abort,aborted,718,javadoc/docs/qupath/lib/objects/classes/Reclassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/Reclassifier.html,1,['abort'],['aborted']
Safety,". RegionFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Interface RegionFilter. All Superinterfaces:; BiPredicate<ImageData<?>,RegionRequest>. All Known Implementing Classes:; RegionFilter.StandardRegionFilters. public interface RegionFilter; extends BiPredicate<ImageData<?>,RegionRequest>; Define the area of an image to which pixel classification should be applied.; This is used to filter regions during live prediction. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). Method Summary. Methods inherited from interface java.util.function.BiPredicate; and, negate, or, test. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html:715,predict,prediction,715,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.html,1,['predict'],['prediction']
Safety,". ResourceManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Class ResourceManager. java.lang.Object; qupath.lib.projects.ResourceManager. public class ResourceManager; extends Object; Manage the storage and retrieval of resources with a ResourceManager.; Examples may include pixel classifiers or scripts.; By using this it is possible to avoid reliance on a filesystem, for example, ; opening the possibility to have resources stored elsewhere.; ; Note that names may be case-insensitive, depending upon the specific backing store.; This is the case for the default implementations using file storage. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ResourceManager.Manager<T>. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. Constructor Summary; Constructors. Constructor; Description; ResourceManager();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ResourceManager; public ResourceManager(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.html:638,avoid,avoid,638,javadoc/docs/qupath/lib/projects/ResourceManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.html,1,['avoid'],['avoid']
Safety,". Set the classification (by name) for objects for which the specified measurement has a value below the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; below(PathClass pathClass). Set the classification for objects for which the specified measurement has a value below the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; belowEquals(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value below or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; belowEquals(PathClass pathClass). Set the classification for objects for which the specified measurement has a value below or equal to the threshold. ObjectClassifier<T>; build(). Build the classifier defined by the parameters of this builder. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; cells(). Set the filter to accept cell objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; detections(). Set the filter to accept all detection objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(PathClass pathClass). Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; filter(PathObjectFilter filter). Define the filter used to identify objects compatible with this classifier. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; threshold(double threshold). Set the threshold value used for the classification. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; tiles(). Set the filter to accept tile objects only. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ClassifyByMea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:2980,detect,detection,2980,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,1,['detect'],['detection']
Safety,". SimplePluginWorkflowStep (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Class SimplePluginWorkflowStep. java.lang.Object; qupath.lib.plugins.workflow.SimplePluginWorkflowStep. All Implemented Interfaces:; Externalizable, Serializable, ScriptableWorkflowStep, WorkflowStep. public class SimplePluginWorkflowStep; extends Object; implements ScriptableWorkflowStep, Externalizable; Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; SimplePluginWorkflowStep(). Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg). Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter). Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:766,avoid,avoid,766,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,1,['avoid'],['avoid']
Safety,". SimpleTissueDetection2 (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class SimpleTissueDetection2. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.SimpleTissueDetection2. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SimpleTissueDetection2; extends AbstractDetectionPlugin<BufferedImage>; Very basic global thresholding command to identify tissue regions.; ; Uses fixed approach to downsampling images & global threshold applied to RGB images only.; ; TODO: Provide choice of channels to threshold; TODO: Support 16-bit data. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleTissueDetection2(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:359,detect,detect,359,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,2,['detect'],['detect']
Safety,". SmoothFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class SmoothFeaturesPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class SmoothFeaturesPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function.; ; This effectively adds in some contextual information. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SmoothFeaturesPlugin(). Default constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:771,detect,detection,771,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,1,['detect'],['detection']
Safety,". SubcellularDetection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class SubcellularDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.imagej.detect.cells.SubcellularDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SubcellularDetection; extends AbstractInteractivePlugin<BufferedImage>; Experimental plugin to help with the quantification of subcellular structures. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SubcellularDetection();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:357,detect,detect,357,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,2,['detect'],['detect']
Safety,". SummaryMeasurementTableCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class SummaryMeasurementTableCommand. java.lang.Object; qupath.lib.gui.commands.SummaryMeasurementTableCommand. public class SummaryMeasurementTableCommand; extends Object; Show a summary table for an object of a particular type (annotation, detection, TMA core...). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SummaryMeasurementTableCommand(QuPathGUI qupath). Command to show a summary measurement table, for PathObjects of a specified type (e.g. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; copyTableContentsToClipboard(PathTableData<?> model,; Collection<String> excludeColumns). Get a single String representing the data in a table and copy it to the clipboard. static <T> String; getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html:620,detect,detection,620,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,1,['detect'],['detection']
Safety,". TMADearrayer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.dearray; Class TMADearrayer. java.lang.Object; qupath.imagej.detect.dearray.TMADearrayer. public class TMADearrayer; extends Object; Static methods used by the TMA dearrayer plugin. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMADearrayer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape; detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi). Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. static Polygon; fitCorePolygonToGrid(Polygon poly,; double coreDiameterPx,; int nHorizontal,; int nVertical). Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. static ByteProcessor; makeBinaryImage(ImageProcessor ip,; double coreDiameterPx,; Roi roi,; boolean isFluorescence). Make a binary image depicting (hopefully) the TMA cores. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMADearrayer; public TMADearrayer(). Method Details. detectTMACoresFromBinary; public static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi); Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image.; Cores should be circular and arranged in a grid pattern, although thi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html:349,detect,detect,349,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,4,['detect'],"['detect', 'detectTMACoresFromBinary']"
Safety,". TMADearrayerPluginIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.dearray; Class TMADearrayerPluginIJ. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class TMADearrayerPluginIJ; extends AbstractInteractivePlugin<BufferedImage>; Plugin for automatically dearraying tissue microarrays (TMAs). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMADearrayerPluginIJ(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. protected void; addWorkflowStep(ImageData<BufferedImage> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:357,detect,detect,357,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,2,['detect'],['detect']
Safety,". TMAScoreImporter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class TMAScoreImporter. java.lang.Object; qupath.lib.io.TMAScoreImporter. public class TMAScoreImporter; extends Object; Helper class for importing data in connection with TMA slides.; ; Some methods may be changed / moved in the future, e.g. because they are more generally useful,; such as those related to parsing CSV data. However, the attempts by these methods to auto-detect ; numeric data are not entirely robust - so more improvement is needed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAScoreImporter();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; importFromCSV(File file,; PathObjectHierarchy hierarchy). Import TMA scores from a file into the TMAGrid of an object hierarchy. static int; importFromCSV(String text,; PathObjectHierarchy hierarchy). Import TMA scores from a String into the TMAGrid of an object hierarchy. static double[]; parseNumeric(List<String> list,; boolean allOrNothing). Parse numeric values from a list of strings. static Map<String,List<String>>; readCSV(File file). Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(String text). Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(Scanner scanner). Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html:728,detect,detect,728,javadoc/docs/qupath/lib/io/TMAScoreImporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html,1,['detect'],['detect']
Safety,". TemporaryObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface TemporaryObject. All Known Implementing Classes:; ParallelTileObject. public interface TemporaryObject; Marker interface used to indicate that child objects shouldn't be added to any cache for display.; ; It can be used to create temporary objects that can be displayed faster while performing lengthy; processing operations.; ; Warning: It is better for programmers to avoid using this interface directly, as it may change in future implementations. Author:; Pete Bankhead. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TemporaryObject.html:738,avoid,avoid,738,javadoc/docs/qupath/lib/objects/TemporaryObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TemporaryObject.html,1,['avoid'],['avoid']
Safety,". UriResource (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an Unsup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html:705,predict,prediction,705,javadoc/docs/qupath/lib/io/UriResource.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html,1,['predict'],['prediction']
Safety,". WatershedCellDetection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class WatershedCellDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. Direct Known Subclasses:; PositiveCellDetection. public class WatershedCellDetection; extends AbstractTileableDetectionPlugin<BufferedImage>; Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining.; ; To automatically classify cells as positive or negative along with detection, see PositiveCellDetection.; ; To quantify membranous staining see WatershedCellMembraneDetection. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; parametersInitialized;  . Constructor Summary; Constructors. Constructor; Description; WatershedCellDetection();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. static boolean; getDebugMode(). Get whether debug mode is on or off. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to rep",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:359,detect,detect,359,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,3,['detect'],"['detect', 'detection']"
Safety,". WatershedCellMembraneDetection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class WatershedCellMembraneDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellMembraneDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class WatershedCellMembraneDetection; extends AbstractTileableDetectionPlugin<BufferedImage>; Cell detection that takes into consideration membrane staining.; ; This command only works (somewhat) for hematoxylin and DAB staining.; If membrane quantification is not required, WatershedCellDetection is more robust and versatile. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WatershedCellMembraneDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:367,detect,detect,367,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,3,['detect'],"['detect', 'detection']"
Safety,". getModelUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model. getModeRGB(int[]) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Get the mode from an array of (packed) RGB pixel values. getModificationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was last synchronized. getMoreTranslucentColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly more) translucent version of the specified color. getMousePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getMousePosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor position within this viewer, or null if the cursor is outside the viewer. getName() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getName() - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getName() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getName() - Method in class qupath.imagej.gui.IJExtension;  ; getName() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getName() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getName() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getName() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getName() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getName() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getName() - Method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:447107,detect,detect,447107,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,". int; nImages(). Return an estimate of the number of images if known, or -1 if unknown. int; nImagesLargest(). Return the number of images with the largest image size, if known, or -1 if unknown. Method Details. isURL; boolean isURL(); Return true if URI has a scheme beginning with http. Returns:. isTiff; boolean isTiff(); Returns true if URI is for a local file known/expected to be a TIFF image. Returns:. isBigTiff; boolean isBigTiff(); Returns true if URI is for a local file known/expected to be a BigTIFF image. Returns:. getDescription; String getDescription(); Get the image description, as stored in a TIFF, or null if no description is available. Returns:. getFile; File getFile(); Get a File object representing the local image file - or null if no file could be found. Returns:. nImages; int nImages(); Return an estimate of the number of images if known, or -1 if unknown.; ; Note that the maximum value returned may be less than the total number of images, if scanning the full ; file risks being prohibitively expensive (this has been found to be the case with some non-standard TIFF ; images). Returns:. nImagesLargest; int nImagesLargest(); Return the number of images with the largest image size, if known, or -1 if unknown.; ; This can be used to help distinguish images that contain multiple images where each image is really ; another z-slice, channel or time point - rather than a macro or label, for example. Returns:. isNotRGB; boolean isNotRGB(); Returns true if we can say with reasonable confidence that the image is not RGB.; ; This information can be used to prevent readers that only support RGB images from trying to read this one.; However, note that it is permissible to return false in cases where the RGB status of the image is unclear. Returns:. getLargestImageWidth; long getLargestImageWidth(); Get the width of the largest image, if known. Returns:; the width of the largest image, or -1 if this is not known. getLargestImageHeight; long getLargestImageHeigh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html:2502,risk,risks,2502,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html,1,['risk'],['risks']
Safety,". protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:3063,predict,predicted,3063,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['predict'],['predicted']
Safety,". qupath.imagej.detect.cells (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.detect.cells. package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. Classes. Class; Description; PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/package-summary.html:16,detect,detect,16,javadoc/docs/qupath/imagej/detect/cells/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/package-summary.html,6,['detect'],"['detect', 'detection']"
Safety,. qupath.imagej.detect.cells Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.imagej.detect.cells. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection. qupath.imagej.detect.cells.SubcellularDetection. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/package-tree.html:16,detect,detect,16,javadoc/docs/qupath/imagej/detect/cells/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/package-tree.html,6,['detect'],['detect']
Safety,. qupath.imagej.detect.dearray (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.detect.dearray. package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. Classes. Class; Description; TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/package-summary.html:16,detect,detect,16,javadoc/docs/qupath/imagej/detect/dearray/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/package-summary.html,3,['detect'],['detect']
Safety,. qupath.imagej.detect.dearray Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.imagej.detect.dearray. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.detect.dearray.TMADearrayer. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/package-tree.html:16,detect,detect,16,javadoc/docs/qupath/imagej/detect/dearray/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/package-tree.html,4,['detect'],['detect']
Safety,. qupath.imagej.detect.tissue (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.detect.tissue. package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. Classes. Class; Description; PositivePixelCounterIJ. Simple command to detect regions with positive staining. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/package-summary.html:16,detect,detect,16,javadoc/docs/qupath/imagej/detect/tissue/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/package-summary.html,5,['detect'],"['detect', 'detection']"
Safety,. qupath.imagej.detect.tissue Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.imagej.detect.tissue. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/package-tree.html:16,detect,detect,16,javadoc/docs/qupath/imagej/detect/tissue/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/package-tree.html,4,['detect'],['detect']
Safety,. qupath.imagej.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.gui. package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. Classes. Class; Description; IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/package-summary.html:722,detect,detected,722,javadoc/docs/qupath/imagej/gui/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/package-summary.html,1,['detect'],['detected']
Safety,". qupath.lib.algorithms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.algorithms. package qupath.lib.algorithms. Feature calculation plugins. Classes. Class; Description; CoherenceFeaturePlugin. Plugin to calculate coherence features for image tiles. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. LocalBinaryPatternsPlugin. Calculate local binary pattern features. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/package-summary.html:601,detect,detections,601,javadoc/docs/qupath/lib/algorithms/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/package-summary.html,2,['detect'],['detections']
Safety,". qupath.lib.gui.images.servers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.images.servers. package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. Classes. Class; Description; ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. PathHierarchyImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. RenderedImageServer. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder. Builder to create an ImageServer to display rendered images, with optional overlay layers. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/package-summary.html:771,detect,detection,771,javadoc/docs/qupath/lib/gui/images/servers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/package-summary.html,1,['detect'],['detection']
Safety,". qupath.lib.gui.panes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html:777,detect,detection,777,javadoc/docs/qupath/lib/gui/panes/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html,1,['detect'],['detection']
Safety,. qupath.lib.gui.prefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.prefs. package qupath.lib.gui.prefs. Custom preferences. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/package-summary.html:765,detect,detections,765,javadoc/docs/qupath/lib/gui/prefs/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/package-summary.html,1,['detect'],['detections']
Safety,". qupath.lib.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.objects. package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath.; ; There are four main object types in QuPath:; ; Root object, one per image, at the base of the object hierarchy; Annotation object, used to represent larger regions, often drawn by hand and used to define regions for analysis; TMA core object, similar to annotations but specifically for representing cores within a Tissue Microarray grid; Detection object, used to represent objects that may be very numerous (e.g. cell nuclei). There are further specialist subtypes of ; detection, including cells and tiles. In general, the idea is that annotations (and TMA cores) should be flexible and editable, whereas detections should be compact and efficient - but ; typically not editable after creation.; ; Each object can have a parent and multiple child objects. This means that all objects associated with an image can be found by traversing this hierarchical ; arrangement, starting from the root object for the image.; ; Objects also have optional classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectCon",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:932,detect,detection,932,javadoc/docs/qupath/lib/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html,1,['detect'],['detection']
Safety,". qupath.lib.plugins.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.objects. package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesClassesEnum Classes. Class; Description; DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. RefineAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. ShapeFeaturesPlugin<T>. Add shape measurements. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/package-summary.html:1205,detect,detections,1205,javadoc/docs/qupath/lib/plugins/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/package-summary.html,3,['detect'],"['detection', 'detections']"
Safety,". qupath.lib.plugins.workflow (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins.workflow. package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. Related Packages. Package; Description; qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html:1275,avoid,avoid,1275,javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/package-summary.html,1,['avoid'],['avoid']
Safety,". qupath.lib.roi (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.roi. package qupath.lib.roi. Classes that define regions of interest (ROIs). Related Packages. Package; Description; qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). All Classes and InterfacesClassesEnum Classes. Class; Description; AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ConvexHull. Helper method for calculating the convex hull from a list of points. DefaultROIComparator. Default comparator to enable ROIs to be sorted in a more predictable manner. EllipseROI. ROI implementing a circle, or (unrotated) ellipse. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. LineROI. ROI representing a straight line, defined by its end points. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. RectangleROI. ROI representing a square or rectangle (unrotated). RoiEditor. Helper class for interactively modifying existing ROIs. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/package-summary.html:844,predict,predictable,844,javadoc/docs/qupath/lib/roi/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/package-summary.html,1,['predict'],['predictable']
Safety,". qupath.opencv (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv. package qupath.opencv. Detection plugins using OpenCV. Related Packages. Package; Description; qupath. Package containing the main QuPath launcher. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. DetectCytokeratinCV. Simple command to detect tumor regions stained with cytokeratin. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/package-summary.html:1036,detect,detection,1036,javadoc/docs/qupath/opencv/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/package-summary.html,2,['detect'],"['detect', 'detection']"
Safety,". static Stage; createShowSystemInfoDialog(QuPathGUI qupath). Create a window summarizing key system information relevant for QuPath. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier). Create a command that generates a persistent single dialog on demand. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier,; String name). Create a named command that generates a persistent single dialog on demand. static Stage; createSpecifyAnnotationDialog(QuPathGUI qupath). Create a stage to prompt the user to specify an annotation to add. static Stage; createWorkflowDisplayDialog(QuPathGUI qupath). Create a dialog to show the workflow history for the current image data. static org.controlsfx.control.action.Action; createZoomCommand(QuPathGUI qupath,; int zoomAmount). Create a zoom in/out command action. static void; detectionCentroidDistances2D(ImageData<?> imageData). Compute the distance between the centroids of all detections, for all available classifications. static void; distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances). Compute the distance between all detections and the closest annotation, for all annotation classifications. static void; duplicateSelectedAnnotations(ImageData<?> imageData). Duplicate the selected annotations. static void; editSelectedAnnotation(QuPathGUI qupath). Prompt to edit the selected annotation by translation and rotation. static void; insertSelectedObjectsInHierarchy(ImageData<?> imageData). Insert the selected objects in the hierarchy, resolving positions accordingly. static void; launchTMADataViewer(QuPathGUI qupath). Open new window with the TMA data viewer. static void; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation for the selected objects, storing the command in the history workflow. static void; mergeSelectedAnnotations(ImageData<?> imageData). Merge the currently-selected annotations for an image, replacing",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:3459,detect,detections,3459,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['detect'],['detections']
Safety,".; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an UnsupportedOperationException if called too late. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException. getBlobFunction; public BlobFunction<Mat> getBlobFunction(); Description copied from class: AbstractDnnModel; Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Specified by:; getBlobFunction in class AbstractDnnModel<Mat>; Returns:. getBlobFunction; public BlobFunction<Mat> getBlobFunction(String name); Description copied from class: AbstractDnnModel; Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Specified by:; getBlobFunction in class AbstractDnnModel<Mat>; Parameters:; name - ; Returns:. getPredictionFunction; public PredictionFunction<Mat> getPredictionFunction(); Description copied from class: AbstractDnnModel; Get the prediction function that can apply a prediction with one or more blobs as input. Specified by:; getPredictionFunction in class AbstractDnnModel<Mat>; Returns:. close; public void close(); throws Exception; Description copied from interface: DnnModel; Close this model if it will not be needed again.; Subclasses that require cleanup may override this.; The default implementation does nothing. Specified by:; close in interface AutoCloseable; Specified by:; close in interface DnnModel; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:7063,predict,prediction,7063,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,3,['predict'],['prediction']
Safety,".Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:253527,detect,detectionCentroidDistances,253527,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionCentroidDistances']
Safety,".PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; PreferencePane - Class in qupath.lib.gui.panes. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane() - Constructor for class qupath.lib.gui.panes.PreferencePane;  ; PreferencePane.AppearancePreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.DrawingPreferences - Class i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:778378,predict,predictWithLock,778378,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,3,['predict'],"['predict', 'predictWithLock']"
Safety,".analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:257136,detect,detection,257136,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['detect'],['detection']
Safety,".classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:255590,detect,detections,255590,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,".color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.Im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:399755,hazard,hazard,399755,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hazard'],['hazard']
Safety,".gui.actions.menus.FileMenuActions.TmaActions;  ; tmaColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; TMACommands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACommands() - Constructor for class qupath.lib.gui.commands.TMACommands;  ; TMACoreObject - Class in qupath.lib.objects. A special PathObject used exclusively to represent TMA cores. TMACoreObject() - Constructor for class qupath.lib.objects.TMACoreObject. Default constructor. TMADataIO - Class in qupath.lib.gui.tma. Static methods for exporting TMA data, optionally with small images. TMADataIO() - Constructor for class qupath.lib.gui.tma.TMADataIO;  ; TMADearrayer - Class in qupath.imagej.detect.dearray. Static methods used by the TMA dearrayer plugin. TMADearrayer() - Constructor for class qupath.imagej.detect.dearray.TMADearrayer;  ; TMADearrayerPluginIJ - Class in qupath.imagej.detect.dearray. Plugin for automatically dearraying tissue microarrays (TMAs). TMADearrayerPluginIJ() - Constructor for class qupath.imagej.detect.dearray.TMADearrayerPluginIJ. Default constructor. TMAExplorer - Class in qupath.lib.gui.tma. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAExplorer(QuPathGUI) - Constructor for class qupath.lib.gui.tma.TMAExplorer. Constructor. tmaExportDownsample - Variable in class qupath.lib.gui.panes.PreferencePane.InputOutputPreferences;  ; tmaExportDownsampleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default downsample factor to use when exporting TMA cores. TMAGrid - Interface in qupath.lib.objects.hierarchy. Interface defining a (rectangular) TMA grid. TMAGridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay capable of painting a TMA Grid. TMAGridOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.TMAGridOverlay. Constructor. TMAMenuActions -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1032012,detect,detect,1032012,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,".gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath and extensions on GitHub. QUPATH_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath updates only. QuPath_Send_Overlay_to_QuPath - Class in qupathj. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_Overlay_to_QuPath() - Constructor for class qupathj.QuPath_Send_Overlay_to_QuPath;  ; QuPath_Send_ROI_to_QuPath - Class in qupathj. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPath_Send_ROI_to_QuPath() - Constructor for class qupathj.QuPath_Send_ROI_to_QuPath;  ; QUPATH_STARTUP - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; qupath.ext.openslide - package qupath.ext.openslide;  ; qupath.imagej.detect.cells - package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray - package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue - package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui - package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers - package qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers - package qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing - package qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels - package qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools - package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms - package qupath.lib.algorithms. Feature calculation plugins. qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:805666,detect,detect,805666,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,".lib.io; Class GsonTools.SubTypeAdapterFactory<T>. java.lang.Object; qupath.lib.io.GsonTools.SubTypeAdapterFactory<T>. Type Parameters:; T - . All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; GsonTools. public static class GsonTools.SubTypeAdapterFactory<T>; extends Object; implements TypeAdapterFactory; A TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON.; ; This is inspired and influenced by the RuntimeTypeAdapterFactory class available as part of Gson extras, ; but not the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:1364,avoid,avoids,1364,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,1,['avoid'],['avoids']
Safety,".opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:1460,predict,predictWithLock,1460,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,3,['predict'],"['predict', 'predictWithLock']"
Safety,".plugins.TaskRunnerUtils. Get the default instance. getDefaultLocationString(ImageServer<BufferedImage>, double, double, int, int) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Default method for getting a location string from an ImageServer using cached tiles. getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.CellCountsCV;  ; getDefaultParameterList(ImageD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:370813,detect,detect,370813,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,".scripting.richtextfx.CodeAreaControl;  ; positionCaret(int) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; POSITIVE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; General class to represent something 'positive'. POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. General class to represent something 'positive'. PositiveCellDetection - Class in qupath.imagej.detect.cells. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositiveCellDetection() - Constructor for class qupath.imagej.detect.cells.PositiveCellDetection. Default constructor. positiveClassification(boolean) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true of an object has a positive classification. PositivePixelCounterIJ - Class in qupath.imagej.detect.tissue. Simple command to detect regions with positive staining. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:773764,detect,detect,773764,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,".stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:109548,detect,detection,109548,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,".tools.MultiscaleFeatures.MultiscaleFeature. Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Middle eigenvalue of the 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIN - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Minimum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). structureTensorEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the eigenvalues of the structure tensor (not yet implemented!). SubcellularDetection - Class in qupath.imagej.detect.cells. Experimental plugin to help with the quantification of subcellular structures. SubcellularDetection() - Constructor for class qupath.imagej.detect.cells.SubcellularDetection;  ; Subcommand - Interface in qupath.lib.gui.extensions. A subcommand for the command line interface. submitShortTask(Runnable) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). submitShortTask(Runnable) - Method in class qupath.lib.gui.SharedThreadPoolManager. Submit a short task to a shared thread pool. subsample(int[], int) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Subsample an array so that it contains no more than maxEntries. SUBSTRING_TOKENIZER - Static variable in class qupath.lib.scripting.languages.AutoCompletions. A completion tokenizer that simply takes the first part of the text up to the caret position. subtract(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Subtract a constant from all pixels. subtract(Padding) - Method in class qupath.lib.regions.Padding. Add another padding from this one. subtract(ROI, Collection<? extends RO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1000843,detect,detect,1000843,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"1 if the ROI relates to all available channels. getC() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get channel index. getCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCache() - Method in class qupath.lib.images.servers.AbstractImageServer. Get the internal cache. getCache(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the cache in use for image tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(Integer) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color. getCachedColor(Integer) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color. getCachedColor(Integer, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color, explicitly stating whether alpha should be included or not. getCachedColor(Integer, boolean) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color, explicitly stating whether alpha should be included or not. getCachedMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject if all tiles are ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:344421,avoid,avoid,344421,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avoid'],['avoid']
Safety,"8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; Since:; v0.4.0; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; signedDistances - optionally calculate signed distances, i.e. negative values for source centroids that occur inside target objects representing the distance to the target object boundary; Since:; v0.4.0. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:5424,detect,detectionToAnnotationDistances,5424,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,4,['detect'],"['detection', 'detectionToAnnotationDistances']"
Safety,"; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class Commands. java.lang.Object; qupath.lib.gui.commands.Commands. public class Commands; extends Object; Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Commands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; closeProject(QuPathGUI qupath). Close the current project open in the QuPathGUI. static boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measurement maps. static Stage; createMemoryMonitorDialog(QuPathGUI qupath). Create a dialog to monitor memory usage. static Stage; cre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:1095,detect,detection,1095,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['detect'],['detection']
Safety,"; Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to crea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:3943,detect,detected,3943,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,3,['detect'],['detected']
Safety,"; Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:3815,detect,detected,3815,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['detect'],['detected']
Safety,"; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:1267,predict,predict,1267,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,1,['predict'],['predict']
Safety,"; Nested Classes. Modifier and Type; Class; Description; static enum ; PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; PixelClassificationMeasurementManager manager,; String measurementID). Add measurements to specified objects from a PixelClassificationMeasurementManager. static boolean; addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID). Add measurements to selected objects based upon the output of a PixelClassifier. static void; classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI). Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Apply classification from a server to a collection of objects. static boolean; createAnnotationsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions...",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:1582,predict,prediction,1582,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['predict'],['prediction']
Safety,"; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Specified by:; createDetector in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected int getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled.; ; If the overlap is 0, then tile boundaries are likely to be visible in the results.; ; If the overlap is > 0, then the overlap should also be > the expected largest size of a detected object -; otherwise objects may be lost of trimmed when overlaps are resolved. This is because (currently) ; the resolution of overlapping detections involves taking the largest one, rather than (for example) merging them.; ; (Merging may be permitted in later versions, but only where measurements are not made by the plugin -; since merged objects may require different measurements, e.g. for area or mean than can be easily computed; in a general way from the individual objects being merged). Specified by:; getTileOverlap in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:; The overlap size in pixels, or 0 if overlapped tiles are not supported. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:5789,detect,detected,5789,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,6,['detect'],"['detected', 'detections']"
Safety,"; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriter. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriter. public class OMEPyramidWriter; extends Object; Write OME-TIFF files based on QuPath ImageServers.; ; The files may optionally be pyramidal TIFFs. Some key metadata is set (e.g. channel names/colors, pixel size), ; and an effort is made to support multidimensional images - but this has not been extensively checked. ; ; Currently the magnification is not written, nor is the full OME XML metadata, and images written using this class ; should not be assumed to contain all the necessary information, correctly or at all (i.e. always keep your original data files!).; ; Note this requires Bio-Formats v6.0.0 or later. Author:; Pete Bankhead; ; modified by @phaub , 04'2021 (JPEG support for nChannels > 1, sanity check). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyramid. static enum ; OMEPyramidWriter.ChannelExportType. Enum representing different ways in which channels may be written to a file. static enum ; OMEPyramidWriter.CompressionType. Preferred compression type when using Bio-Formats. static class ; OMEPyramidWriter.OMEPyramidSeries. Class representing a single series to write to an OME-TIFF. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter; createWriter(Collection<OMEPyramidWriter.OMEPyramidSeries> series). Create a writer capable of writing an image with a collection of series. static OMEPyramidWriter; createWriter(OMEPyramidWriter.OMEPyramidSeries... series). Create a writer cap",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html:1165,sanity check,sanity check,1165,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,1,['sanity check'],['sanity check']
Safety,"; public ObservableList<PathClass> getAvailablePathClasses(); Get an observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone(); Query whether this is a standalone QuPathGUI instance, as flagged during startup.; It can be important to know this so as to avoid calling System.exit(0) or similar, ; and bringing down some other application entirely. Returns:; true if this is a standalone QuPathGUI instance, false otherwise. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an unmodifiable observable list of all viewers. Returns:; See Also:. ViewerManager.getAllViewers(). getViewer; public QuPathViewer getViewer(); Get the currently active viewer. Returns:. getInstance; public static QuPathGUI getInstance(); Get the static instance of the current QuPath GUI. Returns:. openSavedData; public boolean openSavedData(QuPathViewer viewer,; File file,; boolean keepExistingServer,; boolean promptToSaveChanges); throws IOException; Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open.; The purpose of this is to make it possible for a project (for example) to open the correct server prior to; opening the data file, enabling it to make use of relative path name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:17683,avoid,avoid,17683,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['avoid'],['avoid']
Safety,"; the result to the detection measurement list. detectionToAnnotationDistancesSigned(boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinary(ByteProcessor, double, int, int, Roi) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. detectVendor(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to detect the vendor of the image at the specified path. determinant() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the determinant of the matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:257923,detect,detectionTreeDisplayModeProperty,257923,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionTreeDisplayModeProperty']
Safety,"; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultImports(). builder; public static ScriptParameters.Builder builder(); Create a new builder for ScriptParameters. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:5559,avoid,avoid,5559,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html,1,['avoid'],['avoid']
Safety,";  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify all compatible objects from an ImageData. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify the objects in the specified collection. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; classifyObjectsByCentroid(ImageData<BufferedImage>, PixelClassifier, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. classifyObjectsByCentroid(ImageServer<BufferedImage>, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:104481,predict,prediction,104481,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,";  ; void; mouseExited(MouseEvent e);  ; protected Point2D; mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel);  ; void; mouseMoved(MouseEvent e);  ; void; mousePressed(MouseEvent e);  ; void; mouseReleased(MouseEvent e);  ; protected boolean; preferReturnToMove(). Returns false. protected Geometry; refineGeometryByParent(Geometry geometry);  ; protected ROI; refineROIByParent(ROI currentROI). Apply clipping based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrushToolEventHandler; public BrushToolEventHandler(). Method Details. preferReturnToMove; protected boolean preferReturnToMove(); Returns false. Returns:. getRequestedCursor; protected Cursor getRequestedCursor(). mouseExited; public void mouseExited(MouseEvent e). mouseEntered; public void mouseEntered(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). isSubtractMode; protected boolean isSubtractMode(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). getBrushDiameter; protected double getBrushDiameter(). createShape; protected Geometry createShape(MouseEvent e,; double x,; double y,; boolean useTiles,; Geo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html:2983,avoid,avoid,2983,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,1,['avoid'],['avoid']
Safety,"> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is usefu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:3234,avoid,avoiding,3234,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,1,['avoid'],['avoiding']
Safety,"Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerUtils",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:2072,detect,detection,2072,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['detect'],['detection']
Safety,"Annotation(boolean, int, int) instead. static void; createTMAGrid(String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for the current image. static void; createTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measureme",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13148,detect,detectionCentroidDistances,13148,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionCentroidDistances']
Safety,"AnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; signedDistances - optionally calculate signed distances, i.e. negative values for source centroids that occur inside target objects representing the distance to the target object boundary; Since:; v0.4.0. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8""). centroidToBoundsDistance2D; public static void centroidToBoundsDistance2D(Collection<PathObject> sourceObjects,; Collection<PathObject> targetObjects,; double pixelWidth,; double pixelHeight,; String measurementName); Calculate the distance between source object centroids and the boundary of specified target objects, adding the result to the measurement list of the source objects.; Calculations are all made in 2D; distances will not be calculated between objects occurring on different z-planes of at different timepoints. Parameters:; sourceObjects - source objects; measurements will be ad",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:6222,detect,detectionCentroidDistances,6222,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,4,['detect'],"['detection', 'detectionCentroidDistances']"
Safety,"CORES;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_3;  . Constructor Summary; Constructors. Constructor; Description; SelectActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. RESET_SELECTION; @ActionConfig(""Action.Objects.Select.reset""); @ActionAccelerator(""shortcut+alt+r""); public final org.controlsfx.control.action.Action RESET_SELECTION. SEP_2; public final org.controlsfx.control.action.Action SEP_2. SELECT_TMA_CORES; @ActionConfig(""Action.Objects.Select.tmaCores""); @ActionAccelerator(""shortcut+alt+t""); public final org.controlsfx.control.action.Action SELECT_TMA_CORES. SELECT_ANNOTATIONS; @ActionConfig(""Action.Objects.Select.annotations""); @ActionAccelerator(""shortcut+alt+a""); public final org.controlsfx.control.action.Action SELECT_ANNOTATIONS. SELECT_ALL_DETECTIONS; @ActionMenu(""Menu.Objects.Select.Detections""); @ActionConfig(""Action.Objects.Select.detections""); @ActionAccelerator(""shortcut+alt+d""); public final org.controlsfx.control.action.Action SELECT_ALL_DETECTIONS. SELECT_CELLS; @ActionMenu(""Menu.Objects.Select.Detections""); @ActionConfig(""Action.Objects.Select.cells""); @ActionAccelerator(""shortcut+alt+c""); public final org.controlsfx.control.action.Action SELECT_CELLS. SELECT_TILES; @ActionMenu(""Menu.Objects.Select.Detections""); @ActionConfig(""Action.Objects.Select.tiles""); public final org.controlsfx.control.action.Action SELECT_TILES. SEP_3; public final org.controlsfx.control.action.Action SEP_3. SELECT_BY_CLASSIFICATION; @ActionConfig(""Action.Objects.Select.selectByClassification""); public final org.controlsfx.control.action.Action SELECT_BY_CLASSIFICATION. SELECT_BY_PLANE; @ActionConfig(""Action.Objects.Select.selectOnCurrentPlane""); public final org.controlsfx.control.action.Action SELECT_BY_PLANE. Constructor Details. SelectActions; public SelectActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html:2245,detect,detections,2245,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html,1,['detect'],['detections']
Safety,"CVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement pred",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:1485,predict,predictWithLock,1485,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,3,['predict'],"['predict', 'predictWithLock']"
Safety,"CVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. Returns:; true if NaNs are supported, false otherwise. getName; public abstract String getName(); User-friendly, readable name for the classifier. Returns:; the classifier name. isTrained; public abstract boolean isTrained(); Classifier has already been trained and is ready to predict. Returns:; true if the classifier is trained, false otherwise. supportsMulticlass; public abstract boolean supportsMulticlass(); Classifier is able to handle more than one outputs for a single sample. Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public abstract boolean supportsAutoUpdate(); Classifier can be trained interactively (i.e. quickly). Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public abstract boolean supportsProbabilities(); Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Returns:; true if (pseudo-)probabilities can be provided. getParameterList; public abstract ParameterList getParameterList(); Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Returns:; the parameter list for this classifier. createTrainData; public abstract TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. train(TrainData). train; public abstract void train(TrainData trainData); Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. createTrainData(Mat, Mat, Mat, boolean). predi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:3593,predict,prediction,3593,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,1,['predict'],['prediction']
Safety,"CVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:1427,predict,predictWithLock,1427,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,3,['predict'],"['predict', 'predictWithLock']"
Safety,"Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACommands() - Constructor for class qupath.lib.gui.commands.TMACommands;  ; TMACoreObject - Class in qupath.lib.objects. A special PathObject used exclusively to represent TMA cores. TMACoreObject() - Constructor for class qupath.lib.objects.TMACoreObject. Default constructor. TMADataIO - Class in qupath.lib.gui.tma. Static methods for exporting TMA data, optionally with small images. TMADataIO() - Constructor for class qupath.lib.gui.tma.TMADataIO;  ; TMADearrayer - Class in qupath.imagej.detect.dearray. Static methods used by the TMA dearrayer plugin. TMADearrayer() - Constructor for class qupath.imagej.detect.dearray.TMADearrayer;  ; TMADearrayerPluginIJ - Class in qupath.imagej.detect.dearray. Plugin for automatically dearraying tissue microarrays (TMAs). TMADearrayerPluginIJ() - Constructor for class qupath.imagej.detect.dearray.TMADearrayerPluginIJ. Default constructor. TMAExplorer - Class in qupath.lib.gui.tma. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAExplorer(QuPathGUI) - Constructor for class qupath.lib.gui.tma.TMAExplorer. Constructor. tmaExportDownsample - Variable in class qupath.lib.gui.panes.PreferencePane.InputOutputPreferences;  ; tmaExportDownsampleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default downsample factor to use when exporting TMA cores. TMAGrid - Interface in qupath.lib.objects.hierarchy. Interface defining a (rectangular) TMA grid. TMAGridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay capable of painting a TMA Grid. TMAGridOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.TMAGridOverlay. Constructor. TMAMenuActions - Class in qupath.lib.gui.actions.menus;  ; TMAMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; TMAMenuActions.Actions.AddActi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1032152,detect,detect,1032152,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class OpenCVTools.IndexedPixel. java.lang.Object; qupath.opencv.tools.OpenCVTools.IndexedPixel. Enclosing class:; OpenCVTools. public static class OpenCVTools.IndexedPixel; extends Object; Class representing the indices of a pixel and its value.; This has considerable overhead, so should be used sparingly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; distanceSq(OpenCVTools.IndexedPixel p2). Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. int; getC(). Get channel index. long[]; getInds(). Get the index array. double; getValue(). Get the value stored internally for this pixel. double; getValue(Indexer idx). Get the value from another image via its Indexer. int; getX(). Get x index. int; getY(). Get y index. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getX; public int getX(); Get x index. Returns:. getY; public int getY(); Get y index. Returns:. getC; public int getC(); Get channel index. Returns:. getInds; public long[] getInds(); Get the index array. Note that this returns a clone of the array. Returns:; See Also:. getValue(Indexer). getValue; public double getValue(); Get the value stored internally for this pixel. Returns:. getValue; public double getValue(Indexer idx); Get the value from another image via its Indexer.; This is equivalent to Indexer.getDouble(IndexedPixel.getInds()) but avoids copying the inds array. Parameters:; idx - ; Returns:. distanceSq; public long distanceSq(OpenCVTools.IndexedPixel p2); Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. Parameters:; p2 - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html:1919,avoid,avoids,1919,javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html,1,['avoid'],['avoids']
Safety,"CoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi). Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. static Polygon; fitCorePolygonToGrid(Polygon poly,; double coreDiameterPx,; int nHorizontal,; int nVertical). Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. static ByteProcessor; makeBinaryImage(ImageProcessor ip,; double coreDiameterPx,; Roi roi,; boolean isFluorescence). Make a binary image depicting (hopefully) the TMA cores. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMADearrayer; public TMADearrayer(). Method Details. detectTMACoresFromBinary; public static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi); Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image.; Cores should be circular and arranged in a grid pattern, although this may be (slightly) rotated; and some cores may be missing (but at least a few should be present in all rows / columns of the grid). Parameters:; bp - - the TMA slide image, after thresholding.; coreDiameterPx - - approximate diameter of a single TMA core, in pixels; nHorizontal - - number of cores per row of the full grid; nVertical - - number of cores per column of the full grid; roi - - optional region of interest determining where cores should be found (may be useful if edge artifacts are problematic); Returns:; Polygon in which points are arranged in order, row-by-row, starting from the top-left corner of the grid. makeBinaryImage; public static ByteProcessor makeBinaryImage(ImageProcessor ip,; double coreDiameterPx,; Roi roi,; boolean isFluorescence); Make a binary image depicting (hopefully) the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html:1710,detect,detectTMACoresFromBinary,1710,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,1,['detect'],['detectTMACoresFromBinary']
Safety,"Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetections(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create detection objects by tracing contours in a labelled image. createDetections(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create detection objects from a labelled image. createDetectionsFromPixelClassifier(String, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PixelClassifier, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(ImageData<BufferedImage>, PixelClassifier, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PathObjectHierarchy, ImageServer<BufferedImage>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. createDetector(ImageData<BufferedImage>, ParameterList) - Meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:175228,detect,detection,175228,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:777006,predict,predict,777006,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"Data). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:2940,predict,prediction,2940,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,2,['predict'],['prediction']
Safety,"DebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Overrides:; getDefaultParameterList in class WatershedCellDetection; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Specified by:; getName in interface PathPlugin<BufferedImage>; Overrides:; getName in class WatershedCellDetection; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Wrap the detector to apply any required classification. Overrides:; createDetector in class WatershedCellDetection; Parameters:; imageData - ; params - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:3861,detect,detector,3861,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['detect'],['detector']
Safety,"Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:777777,predict,predictWithLock,777777,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,3,['predict'],"['predict', 'predictWithLock']"
Safety,"DefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:5270,detect,detection,5270,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,4,['detect'],['detection']
Safety,"Deprecated.; since v0.4.0, use PathClass.getInstance(PathClass, String, Integer). getDerivedPathClass(PathClass, String, Integer) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name, derived from another PathClass. getDescendantObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all descendant objects. getDescendantObjects(PathObject, Collection<PathObject>, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get all descendant objects with a specified type. getDescription() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDescription() - Method in class qupath.imagej.gui.IJExtension;  ; getDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getDescription() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:378244,detect,detect,378244,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. Returns:; true if NaNs are supported, false otherwise. getName; public abstract String getName(); User-friendly, readable name for the classifier. Returns:; the classifier name. isTrained; public abstract boolean isTrained(); Classifier has already been trained and is ready to predict. Returns:; true if the classifier is trained, false otherwise. supportsMulticlass; public abstract boolean supportsMulticlass(); Classifier is able to handle more than one outputs for a single sample. Ret",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:2193,predict,prediction,2193,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,1,['predict'],['prediction']
Safety,"Distance). Compute the shortest distance from a coordinate to a target geometry. static STRtree; createCoordinateCache(Collection<Coordinate> coords). Create an STRtree to enable nearest neighbor searching for a collection of coordinates. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DistanceTools; public DistanceTools(). Method Details. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:3453,detect,detection,3453,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,2,['detect'],['detection']
Safety,"DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:776718,predict,predict,776718,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. detect(DetectionModel, ImageServer<BufferedImage>, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. DetectCytokeratinCV - Class in qupath.opencv. Simple command to detect tumor regions stained with cytokeratin. DetectCytokeratinCV() - Constructor for class qupath.opencv.DetectCytokeratinCV;  ; detection() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:252942,detect,detectionCentroidDistances,252942,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionCentroidDistances']
Safety,"Exception. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:107912,detect,detectionCentroidDistances,107912,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['detect'],['detectionCentroidDistances']
Safety,"Extension(String ext). Returns true for file extensions containing multiple parts (or 'dots'). static boolean; isValidFilename(String name). Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. static boolean; isWindows(). Return true if running on Windows. static final String; micrometerSymbol(). Get a string to represent um (but with the proper 'mu' symbol). static int; numNaNs(double[] vals). Count the number of NaN values in an array. static Map<String,String>; parseArgStringValues(String s). Parse the contents of a JSON String. static String; readFileAsString(File file). Read the entire contents of a file into a single String. static String; readFileAsString(String path). Read the entire contents of a file given by the specified path into a single String. static String; readInputStreamAsString(InputStream stream). Read the entire contents of an InputStream into a single String. static String; readURLAsString(URL url,; int timeoutMillis). Read URL as String, with specified timeout in milliseconds. static String; replaceCurlyQuotes(String text). Replace different kinds of 'curly quote' in a String with straight quotes. static String; replaceGremlins(String text,; CharSequence replacement). Replace non-printable characters from a String with a specified replacement (may be null). static Comparator<String>; smartStringComparator(). Comparator for smart String sorting. static <T> void; smartStringSort(Collection<T> collection). Smart-sort a collection using the Object.toString() method applied to each element. static <T> void; smartStringSort(Collection<T> collection,; Function<T,String> extractor). Smart-sort a collection after extracting a String representation of each element. static String[]; splitLines(String s). Split new lines (in a cross-platform way... static String; stripExtension(String path). Strip the extension from a file name or path, leaving the rest of the string unchanged. st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:5197,timeout,timeoutMillis,5197,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['timeout'],['timeoutMillis']
Safety,"Factory.StandardPathClasses TUMOR; Tumor classification. STROMA; public static final PathClassFactory.StandardPathClasses STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClassFactory.StandardPathClasses IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClassFactory.StandardPathClasses IGNORE; Ignore classification, indicating what should not be further measured (e.g. background, whitespace). IMAGE_ROOT; public static final PathClassFactory.StandardPathClasses IMAGE_ROOT; Root object classification. NECROSIS; public static final PathClassFactory.StandardPathClasses NECROSIS; Necrosis classification. OTHER; public static final PathClassFactory.StandardPathClasses OTHER; Other classification. REGION; public static final PathClassFactory.StandardPathClasses REGION; Region class. This behaves slightly differently from other classes, e.g. it is not filled in when applied to; annotations. Consequently it is good to heavily annotated regions, or possibly detected tissue ; containing further annotations inside. POSITIVE; public static final PathClassFactory.StandardPathClasses POSITIVE; General class to represent something 'positive'. NEGATIVE; public static final PathClassFactory.StandardPathClasses NEGATIVE; General class to represent something 'negative'. Method Details. values; public static PathClassFactory.StandardPathClasses[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathClassFactory.StandardPathClasses valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html:3289,detect,detected,3289,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,1,['detect'],['detected']
Safety,"FeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:4324,predict,prediction,4324,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['predict'],['prediction']
Safety,"Filters;  ; filterSingleZ(List<Mat>, double[], int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a filter along the 'list' dimension for a list of Mats, computing the value ; for a single entry. filterZ(List<Mat>, Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Filter filter along entries in the input list. finalize() - Method in class qupath.lib.images.servers.AbstractImageServer. Attempt to close the server. findAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; findByStringID(Collection<String>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Find objects based on a String representation of their IDs. findByUUID(Collection<UUID>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Find objects based on their IDs. FindConvexHullDetectionsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to identify/remove detections from the convex hull of all detections. FindConvexHullDetectionsPlugin() - Constructor for class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; findDensityMapHotspots(String, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map for the current image. findDensityMapHotspots(ImageData<BufferedImage>, String, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map. findDensityMapHotspots(ImageData<BufferedImage>, DensityMaps.DensityMapBuilder, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map. findDirectionalMaxima(ImageProcessor) - Static method in class qupath.imagej.processing.RoiLabeling. Create a binary image for pixels that have a higher value than their neighbors. findDirectionalMinima(ImageProcessor) - Static method in class qupath.imagej.processing.RoiLabeling. Create a binary ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:305995,detect,detections,305995,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['detect'],['detections']
Safety,"Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. detect(DetectionModel, ImageServer<BufferedImage>, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. DetectCytokeratinCV - Class in qupath.opencv. Simple command to detect tumor regions stained with cytokeratin. DetectCytokeratinCV() - Constructor for class qupath.opencv.DetectCytokeratinCV;  ; detection() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Comman",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:252905,detect,detectionCentroidDistances,252905,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionCentroidDistances']
Safety,"H. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:1334,predict,predict,1334,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,1,['predict'],['predict']
Safety,"HierarchyImageServer;  ; createDefaultRGBImage(int, int) - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; createDefaultRGBImage(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create the default (blank) RGB image for this server. createDefaultRGBImage(int, int) - Method in class qupath.lib.images.servers.LabeledImageServer;  ; createDetectionConverter() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified detection object. createDetectionObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object. createDetectionObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object with a specified measurement list. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:173704,detect,detection,173704,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"I type supported for a TMA core (this behavior may change).; Any other object types result in an UnsupportedOperationException being thrown. Parameters:; pathObject - the object to transform; this will be unchanged; transform - optional affine transform; if null, this effectively acts to duplicate the object; copyMeasurements - if true, the measurement list of the new object will be populated with the measurements of pathObject; Returns:; a duplicate of pathObject, with affine transform applied to the object's ROI(s) if required; See Also:. transformObject(PathObject, AffineTransform, boolean, boolean). transformObject; public static PathObject transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs); Create a transformed version of a PathObject, optionally with a new ID.; If the transform is null or the identity transform, then a duplicate object is generated instead.; ; Note: only detections (including tiles and cells), annotations and root objects are fully supported by this method.; TMA core objects are transformed only if the resulting transform creates an ellipse ROI, since this is ; currently the only ROI type supported for a TMA core (this behavior may change).; Any other object types result in an UnsupportedOperationException being thrown. Parameters:; pathObject - the object to transform; this will be unchanged; transform - optional affine transform; if null, this effectively acts to duplicate the object; copyMeasurements - if true, the measurements and metadata maps of the new object will be populated with those from the pathObject; createNewIDs - if true, create new IDs for each copied object; otherwise, retain the same ID.; Returns:; a duplicate of pathObject, with affine transform applied to the object's ROI(s) if required; Since:; v0.4.0. transformObjectRecursive; public static PathObject transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements); Cr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:39569,detect,detections,39569,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['detect'],['detections']
Safety,"I.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(ROI, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(ROI, String) or ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:13123,detect,detectionToAnnotationDistances,13123,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"ID explicitly. Parameters:; id - the ID to use; Throws:; IllegalArgumentException - if the specified ID is null. refreshID; public void refreshID(); Regenerate a new random ID. See Also:. setID(UUID). storeMetadataValue; protected Object storeMetadataValue(String key,; String value); Store a metadata value.; ; Note: This should be used with caution; for objects that could be plentiful (e.g. detections) it is likely; to be unwise to store any metadata values, since these can't be stored particularly efficiently - and; therefore this could lead to far too high memory requirements.; ; If metadata is never stored for an object, no storage object is created - only a null reference.; ; Therefore the intention is that some newly-defined PathObject classes may take advantage of this mechanism and expose their; own API for getting/setting values, backed-up by this store (which takes care of serialization/deserialization).; However class definitions can also avoid making any use of this whatsoever if it's expected that it could lead to too much ; memory being required. Parameters:; key - ; value - ; Returns:; See Also:. retrieveMetadataValue(java.lang.String). retrieveMetadataValue; protected Object retrieveMetadataValue(String key); Get a metadata value. Parameters:; key - ; Returns:; the metadata value if set, or null if not; See Also:. storeMetadataValue(java.lang.String, java.lang.String). retrieveMetadataKeys; protected Set<String> retrieveMetadataKeys(); Get the set of metadata keys. Returns:. getUnmodifiableMetadataMap; protected Map<String,String> getUnmodifiableMetadataMap(); Get an unmodifiable map of the metadata. Returns:. clearMetadataMap; protected void clearMetadataMap(); Remove all stored metadata values. getMetadata; public Map<String,String> getMetadata(); Get a key/value pair map for object metadata. Returns:; Since:; v0.5.0. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizab",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:21755,avoid,avoid,21755,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['avoid'],['avoid']
Safety,"ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14474,detect,detectionToAnnotationDistancesSigned,14474,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionToAnnotationDistancesSigned']
Safety,"ImagePlane plane). Convert integer labeled images into cell objects. static PathObject; convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp). Create an annotation object for a specific ImageJ Roi. static PathObject; convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp). Create a detection object for a specific ImageJ Roi. static PathObject; convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). static ImageProcessor; convertToFloatProcessor(SimpleImage image). Convert a SimpleImage to an ImageProcessor. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; T pathImage). Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(String title,; ImageServer<Buffere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:2775,detect,detection,2775,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['detect'],['detection']
Safety,"ImageServer.Builder; setBoundaryLabel(PathClass pathClass,; int label). Set the classification and label to use for boundaries for classified areas. LabeledImageServer.Builder; setBoundaryLabel(PathClass pathClass,; int label,; Integer color). Set the classification and label to use for boundaries for classified areas. LabeledImageServer.Builder; shuffleInstanceLabels(boolean doShuffle). Optionally request that instance labels are shuffled. LabeledImageServer.Builder; tileSize(int tileSize). Set tile width and height (square tiles). LabeledImageServer.Builder; tileSize(int tileWidth,; int tileHeight). Set tile width and height. LabeledImageServer.Builder; useAnnotations(). Use annotations for labels. LabeledImageServer.Builder; useCellNuclei(). Use cells rather than annotations for labels, requesting the nucleus ROI where available. LabeledImageServer.Builder; useCells(). Use cells rather than annotations for labels. LabeledImageServer.Builder; useDetections(). Use detections rather than annotations for labels. LabeledImageServer.Builder; useFilter(Predicate<PathObject> filter). Use a custom method of selecting objects for inclusion. LabeledImageServer.Builder; useInstanceLabels(). Request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useInstanceLabels(boolean instanceLabels). Optionally request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useUniqueLabels(). Deprecated.; in favor of useInstanceLabels(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageData<BufferedImage> imageData); Create a Builder for a LabeledImageServer for the specified ImageData. Parameters:; imageData - . Method Details. useDetections; public LabeledImageServer.Builder useDetections(); Use detections rather than annotations for labels.; The defa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:5261,detect,detections,5261,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,1,['detect'],['detections']
Safety,"Is(Map<URI, URI>). use instead UriResource.updateURIs(Map). qupath.lib.regions.ImageRegion.getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:12848,detect,detectionCentroidDistances,12848,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['detect'],['detectionCentroidDistances']
Safety,"LES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static final PathObjectFilter ROI_POINT; Accept any object that has a points ROI. Method Details. values; public static PathObjectFilter[] values(); Returns an array containing the constants of this enum class, in; the order they are ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:2511,detect,detection,2511,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,1,['detect'],['detection']
Safety,"List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each val",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13578,detect,detection,13578,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,3,['detect'],['detection']
Safety,"ME. Default name to use for single input. static final String; DEFAULT_OUTPUT_NAME. Default name to use for single output. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Map<String,DnnShape>; getInputs(). Get the required inputs. Map<String,DnnShape>; getOutputs(DnnShape... inputShapes). Get the output names mapped to the output shapes. default Map<String,T>; predict(Map<String,T> input). Call a function that takes one or more inputs to produce zero or more outputs. T; predict(T input). Call a function that takes a single input and provides a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default name to use for single input. See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default name to use for single output. See Also:. Constant Field Values. Method Details. predict; default Map<String,T> predict(Map<String,T> input); Call a function that takes one or more inputs to produce zero or more outputs. Parameters:; input - map of input names and blobs; Returns:; map of output names and blobs. predict; T predict(T input); Call a function that takes a single input and provides a single output. Parameters:; input - input to the function; Returns:; output of the function. getInputs; Map<String,DnnShape> getInputs(); Get the required inputs.; ; Often, this is a singleton map with key DEFAULT_INPUT_NAME for functions that take a single input.; ; If the shape is known, the axis order is typically NCHW.; NCHW is used by OpenCV https://docs.opencv.org/4.5.2/d6/d0f/group__dnn.html#ga29f34df9376379a603acd8df581ac8d7; and also by PyTorch; for TensorFlow some rearrangement may be needed. Returns:. getOutputs; Map<String,DnnShape> getOutputs(DnnShape... inputShapes); Get the output names mapped to the output shapes.; ; Often, this is a singleton map with key DEFAULT_OUTPUT_NAME for functions that provide a single output. Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html:1971,predict,predict,1971,javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,2,['predict'],['predict']
Safety,"Mat, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an existing image patch to classify an object. classify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, int, int, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an image patch to classify an object. classify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an image patch to classify an object. ClassifyByMeasurementBuilder(String) - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Constructor. classifyCellsByCentroid(ImageData<BufferedImage>, PixelClassifier, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. classifyDetectionsByCentroid(String) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(PixelClassifier) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. ClassifyMenuActions - Class in qupath.lib.gui.actions.menus;  ; ClassifyMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:102446,predict,prediction,102446,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:6112,predict,predict,6112,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,36,['predict'],"['predict', 'predictWithLock']"
Safety,"Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the def",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:1887,predict,prediction,1887,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,1,['predict'],['prediction']
Safety,"Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Desc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:1820,predict,prediction,1820,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,2,['predict'],['prediction']
Safety,"Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:1822,predict,prediction,1822,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,3,['predict'],['prediction']
Safety,"Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getDescription() - Method in class qupath.process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getDetails() - Method in interface qupath.lib.images.writers.ImageWriter. Get further details of the writer, which may be displayed to a user. getDetails() - Method in class qupath.lib.images.writers.JpegWriter;  ; getDetails() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getDetails() - Method in class qupath.lib.images.writers.PngWriter;  ; getDetectionDisplayMode() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get the current OverlayOptions.DetectionDisplayMode. getDetectionObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all detection objects in the hierarchy (including sub-classes of detections). getDetectionObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current detection objects. getDeterminant() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the determinant for each pixel. getDeterminant() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getDeterminant() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getDisplayableImageName(ImageServer<?>) - Static method in class qupath.lib.images.servers.ServerTools. Get an ImageServer name suitable for displaying. getDisplayedClipShape(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer. Transform a clip shape into image coordinates for this viewer. getDisplayedColor(PathObject) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color appropriate for displaying an object. getDisplayedColorARGB(PathObject) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get the c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:382738,detect,detection,382738,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['detect'],"['detection', 'detections']"
Safety,"Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Timestamp of the last change (probably in milliseconds). getLastResultsDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeatur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:422847,detect,detect,422847,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.BoostClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.BoostClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on Boost. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:1269,predict,predict,1269,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,1,['predict'],['predict']
Safety,"Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @ColorPref(""Prefs.Objects.tmaCoreColor""); public final IntegerProperty tmaColor. tmaMissingColor; @ColorPref(""Prefs.Objects.tmaCoreMissingColor""); public final IntegerProperty tmaMissingColor. Constructor Details. ObjectPreferences; public ObjectPreferences(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html:1544,detect,detectonStrokeThickness,1544,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,3,['detect'],"['detectionLineThickness', 'detectonStrokeThickness']"
Safety,"OException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; imageData - the original image data, which will be the input to the pixel classifier; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createObjectsFromPredictions; public static boolean createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. Parameters:; server - the image to threshold; hierarchy - the hierarchy to which the objects should be added; selectedObjects - the selected objects, if the classification should be constrained to these; creator - function to create an object of the required type; minArea - the minimum size of a connected region to retain, in calibrated units; minHoleArea - the minimum size of a hole to retain, in calibrated units; options - additional options to control how objects are created; Returns:; true if the command ran successfully to completion, false otherwise.; Throws:; IOException; See Also:. GeometryTools.refineAreas(Geometry, double, double). createAnnotationsFromPixelClassifier; public static boolean createAnnotationsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOExcepti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:8617,predict,predictions,8617,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['predict'],['predictions']
Safety,"Objects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60801,detect,detection,60801,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety,"ObjectsByClass(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Set objects that are a subclass of a specified class.; Not to be confused with selectObjectsByPathClass(PathObjectHierarchy, PathClass...) and selectObjectsByClassification(PathObjectHierarchy, String...). Parameters:; hierarchy - ; cls - . selectAnnotations; public static void selectAnnotations(PathObjectHierarchy hierarchy); Select all annotation objects in the specified hierarchy. Parameters:; hierarchy - . selectTMACores; public static void selectTMACores(PathObjectHierarchy hierarchy); Select all TMA core objects in the specified hierarchy, excluding missing cores. Parameters:; hierarchy - . selectTMACores; public static void selectTMACores(PathObjectHierarchy hierarchy,; boolean includeMissing); Select all TMA core objects in the specified hierarchy, optionally including missing cores. Parameters:; hierarchy - ; includeMissing - . selectDetections; public static void selectDetections(PathObjectHierarchy hierarchy); Select all detection objects in the specified hierarchy. Parameters:; hierarchy - . selectCells; public static void selectCells(PathObjectHierarchy hierarchy); Select all cell objects in the specified hierarchy. Parameters:; hierarchy - . selectAnnotations; public static void selectAnnotations(); Select all annotation objects in the current hierarchy. selectTMACores; public static void selectTMACores(); Select all TMA core objects in the current hierarchy, excluding missing cores. selectTMACores; public static void selectTMACores(boolean includeMissing); Select all TMA core objects in the current hierarchy, optionally including missing cores. Parameters:; includeMissing - . selectDetections; public static void selectDetections(); Select all detection objects in the current hierarchy. selectCells; public static void selectCells(); Select all cell objects in the current hierarchy. selectTiles; public static void selectTiles(PathObjectHierarchy hierarchy); Select all tile o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:88192,detect,detection,88192,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety,"ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellDetection;  ; WatershedCellMembraneDetection - Class in qupath.imagej.detect.cells. Cell detection that takes into consideration membrane staining. WatershedCellMembraneDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellMembraneDetection. Default constructor. watershedExpandLabels(ImageProcessor, double, boolean) - Static method in class qupath.imagej.processing.Watershed. Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging. watershedIntensitySplit(Mat, Mat, double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. WatershedNucleiCV - Class in qupath.opencv. Alternative (incomplete) attempt at nucleus segmentation. WatershedNucleiCV() - Constructor for class qupath.opencv.WatershedNucleiCV;  ; WebViews - Class in qupath.lib.gui.tools. Helper class for creating a WebView in a standardized way. WebViews() - Constructor for class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1104701,detect,detect,1104701,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"OpenCVClassifiers.EMClusterer. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:1353,predict,predictWithLock,1353,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,1,['predict'],['predictWithLock']
Safety,"OpenCVClassifiers.SVMClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Train the classifier using data in an appropriate format. train(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; TRAIN_VALIDATION_TEST_METADATA_KEY - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata key for the flag indicating the image type (Train, Validation, Test or None). trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Implement trainWithLock rather than train direct",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1047561,predict,prediction,1047561,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"OpenSlide. Get the image height at the specified level. getLevels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get an unmodifiable list containing the resolution levels. getLevelWidth(int) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the image width at the specified level. getLibraryVersion() - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Get the version of the OpenSlide library. getLineCommentString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get the String that represents the start of a comment line. getLineObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with line ROIs from a collection of objects. getLineWidth() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Get the threshold line width. getLivePrediction() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Query whether live prediction is turned on. getLoadedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getLocalizationDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where localization property files should be written. getLocalizedResourceManager() - Static method in class qupath.lib.gui.localization.QuPathResources. Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:428731,predict,prediction,428731,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"Package containing the main QuPath launcher. QuPath - Class in qupath. Main QuPath launcher. QuPath() - Constructor for class qupath.QuPath;  ; QUPATH_AND_EXTENSIONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath and extensions on GitHub. QUPATH_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath updates only. QuPath_Send_Overlay_to_QuPath - Class in qupathj. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_Overlay_to_QuPath() - Constructor for class qupathj.QuPath_Send_Overlay_to_QuPath;  ; QuPath_Send_ROI_to_QuPath - Class in qupathj. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPath_Send_ROI_to_QuPath() - Constructor for class qupathj.QuPath_Send_ROI_to_QuPath;  ; QUPATH_STARTUP - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; qupath.ext.openslide - package qupath.ext.openslide;  ; qupath.imagej.detect.cells - package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray - package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue - package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui - package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers - package qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers - package qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing - package qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels - package qupath.imagej.superpixels. Classes to generate superpixels",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:805460,detect,detect,805460,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"Parameters:; qupath - . promptToCreateProject; public static boolean promptToCreateProject(QuPathGUI qupath); Prompt the user to select an empty directory, and use this to create a new project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be created.; Returns:; true if a project was created, false otherwise (e.g. the user cancelled). promptToOpenProject; public static boolean promptToOpenProject(QuPathGUI qupath); Prompt the user to open an existing project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be opened.; Returns:; true if a project was opened, false otherwise (e.g. the user cancelled). launchTMADataViewer; public static void launchTMADataViewer(QuPathGUI qupath); Open new window with the TMA data viewer. Parameters:; qupath - current QuPathGUI instance (may be null). distanceToAnnotations2D; public static void distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances); Compute the distance between all detections and the closest annotation, for all annotation classifications. Parameters:; imageData - the image data to process; signedDistances - if true, use signed distances. detectionCentroidDistances2D; public static void detectionCentroidDistances2D(ImageData<?> imageData); Compute the distance between the centroids of all detections, for all available classifications. Parameters:; imageData - the image data to process. promptToSetGridLineSpacing; public static void promptToSetGridLineSpacing(OverlayOptions options); Prompt to input the spacing for the grid lines optionally displayed on viewers. Parameters:; options - the OverlayOptions that manage the grid lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:22490,detect,detections,22490,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['detect'],['detections']
Safety,"PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its centroid; ignored if ≤ 1; Returns:; a Geometry providing a cell boundary estimate. constrainCellByNucleusDistance; public static PathCellObject constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3988,detect,detections,3988,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,1,['detect'],['detections']
Safety,"PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97998,detect,detections,97998,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,"PathObjects();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObject; createAnnotationObject(ROI roi). Create an unclassified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass). Create a classified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified annotation object with a specified measurement list. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus). Create a cell object. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass). Create a cell object with an optional classification. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements). Create a cell object with an optional classification and measurements list. static PathObject; createDetectionObject(ROI roi). Create an unclassified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass). Create a classified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified detection object with a specified measurement list. static PathObject; createTileObject(ROI roi). Create an unclassified tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass). Create a tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a tile object, with a classification and measurements list. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an circular ROI. static TMACor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:1706,detect,detection,1706,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['detect'],['detection']
Safety,"PixelClassifierTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; PixelClassificationMeasurementManager manager,; String measurementID). Add measurements to specified objects from a PixelClassificationMeasurementManager. static boolean; addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID). Add measurements to selected objects based upon the output of a PixelClassifier. static void; classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI). Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Apply classification from a server to a collection of objects. static boolean; createAnnotationsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static boolean; createAnnotationsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:1783,detect,detections,1783,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,3,"['detect', 'predict']","['detection', 'detections', 'prediction']"
Safety,"PixelClassifierTools.CreateObjectOptions... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static PathObject; createFullImageAnnotation(boolean setSelected). Create an annotation around the full image for the current image, on the default (first) z-slice and timepoint. static PathObject; createFullImageAnnotation(boolean setSelected,; int z,; int t). Create an annotation around the full image for the current image, on the specified z-slice and timepoint. static PathObject; createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected). Create an annotation around the full image for the specified image, on the default (first) z-slice and timepoint. static PathObject; createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected,; int z,; int t). Create an annotation around the full image for the specified image, on the specified z-slice and timepoint. static void; createSelectAllObject(boolean setSelected). Deprecated.; v0.4.0 use createFullImageAnnotation(boolean) instead. static void; createSelectAllObject(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:11029,detect,detection,11029,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety,"Plugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Specified by:; createDetector in class AbstractTileableDetectionPlugin<Bu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:4468,detect,detected,4468,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['detect'],['detected']
Safety,"Plus,ImagePlus> createImagePlusMaskSupplier(); Create a MaskSupplier that returns an ImageJ ByteProcessor. Returns:. createDetectionOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createAnnotationOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createDetectionConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects.; ; The behavior depends upon whatever the Processor return.; For example, the converter is able to generate one or more objects from; ; an ImageJ Roi, or list or array of Roi objects; an ImageJ Overlay; a BinaryProcessor (creating a single object); a ByteProcessor or ShortProcessor (treated as a labeled image, to create 0 or more objects); another ImageProcessor with a threshold set (handled similar to a binary image); an ImagePlus, after extracting the ImageProcessor. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <U>; OutputHandler.OutputToObject",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:3897,detect,detection,3897,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,1,['detect'],['detection']
Safety,"S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. cre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:4388,detect,detection,4388,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['detect'],['detection']
Safety,"S. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<PathPrefs.DetectionTreeDisplayModes>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:2276,detect,detections,2276,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,1,['detect'],['detections']
Safety,"SelectedObjectsProperty; public static BooleanProperty alwaysPaintSelectedObjectsProperty(); Always paint selected objects in the viewer, even if the opacity setting is 0. Returns:. viewerInterpolateBilinearProperty; public static BooleanProperty viewerInterpolateBilinearProperty(); Request that images are displayed in viewers using bilinear interpolation. Returns:. detectionTreeDisplayModeProperty; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty(); Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). Returns:. maxObjectsToClipboardProperty; public static IntegerProperty maxObjectsToClipboardProperty(); The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> scalebarFontWeightProperty(); Preferred font weight in the viewer. Returns:. scalebarLineWidthProperty; public static DoubleProperty scalebarLineWidthProperty(); Preferred line width for the scalebar. Returns:. allredMinPercentagePositiveProperty; public static DoubleProperty allredMinPercentagePositiveProperty(); The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:59543,avoid,avoid,59543,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['avoid'],['avoid']
Safety,"StageAction(Supplier<Stage> supplier). Create a command that generates a persistent single dialog on demand. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier,; String name). Create a named command that generates a persistent single dialog on demand. static Stage; createSpecifyAnnotationDialog(QuPathGUI qupath). Create a stage to prompt the user to specify an annotation to add. static Stage; createWorkflowDisplayDialog(QuPathGUI qupath). Create a dialog to show the workflow history for the current image data. static org.controlsfx.control.action.Action; createZoomCommand(QuPathGUI qupath,; int zoomAmount). Create a zoom in/out command action. static void; detectionCentroidDistances2D(ImageData<?> imageData). Compute the distance between the centroids of all detections, for all available classifications. static void; distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances). Compute the distance between all detections and the closest annotation, for all annotation classifications. static void; duplicateSelectedAnnotations(ImageData<?> imageData). Duplicate the selected annotations. static void; editSelectedAnnotation(QuPathGUI qupath). Prompt to edit the selected annotation by translation and rotation. static void; insertSelectedObjectsInHierarchy(ImageData<?> imageData). Insert the selected objects in the hierarchy, resolving positions accordingly. static void; launchTMADataViewer(QuPathGUI qupath). Open new window with the TMA data viewer. static void; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation for the selected objects, storing the command in the history workflow. static void; mergeSelectedAnnotations(ImageData<?> imageData). Merge the currently-selected annotations for an image, replacing them with a single new annotation. static void; pasteFromClipboard(QuPathGUI qupath,; boolean addToCurrentPlane). Attempt to paste objects from the system clipboard to the current image, if",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:3627,detect,detections,3627,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['detect'],['detections']
Safety,"Static method in class qupath.opencv.tools.OpenCVTools. Create detection objects by tracing contours in a labelled image. createDetections(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create detection objects from a labelled image. createDetectionsFromPixelClassifier(String, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PixelClassifier, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(ImageData<BufferedImage>, PixelClassifier, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PathObjectHierarchy, ImageServer<BufferedImage>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.PositiveCellDetection. Wrap the detector to apply any required classification. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; createDetector(ImageData<Buffer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:175766,detect,detection,175766,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This wil",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:4807,detect,detection,4807,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['detect'],['detection']
Safety,"T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationConverter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:4141,detect,detection,4141,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['detect'],['detection']
Safety,"Tools. Tools for creating and querying Delaunay triangulations and Voronoi diagrams. DelaunayTools.Builder. Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. DelaunayTriangulation. Compute Delaunay triangulation using OpenCV. DensityMapCommand. Command for generating density maps from detections on an image. DensityMapDialog. Dialog for interactively generating a custom density map. DensityMaps. Class for constructing and using density maps. DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType. Density map types. DensityMapUI. UI elements associated with density maps. DetectCytokeratinCV. Simple command to detect tumor regions stained with cytokeratin. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. Dialogs; Deprecated.; since v0.5.0. Dialogs.Builder; Deprecated.; Dialogs.DialogButton. Possible buttons pressed in a yes/no/cancel dialog. DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. DirectServerChannelInfo. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:13731,detect,detect,13731,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detect']
Safety,"UI, ContextMenu) - Static method in class qupath.lib.gui.tools.GuiTools. Populate a ContextMenu with standard options to operate on selected annotation objects. populateAnnotationsMenu(QuPathGUI, Menu) - Static method in class qupath.lib.gui.tools.GuiTools. Populate a Menu with standard options to operate on selected annotation objects. positionCaret(int) - Method in interface qupath.lib.gui.scripting.EditableText. Set the caret position to the specified index. positionCaret(int) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; positionCaret(int) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; POSITIVE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; General class to represent something 'positive'. POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. General class to represent something 'positive'. PositiveCellDetection - Class in qupath.imagej.detect.cells. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositiveCellDetection() - Constructor for class qupath.imagej.detect.cells.PositiveCellDetection. Default constructor. positiveClassification(boolean) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true of an object has a positive classification. PositivePixelCounterIJ - Class in qupath.imagej.detect.tissue. Simple command to detect regions with positive staining. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; pos",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:773253,detect,detect,773253,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"UPATH_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath updates only. QuPath_Send_Overlay_to_QuPath - Class in qupathj. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_Overlay_to_QuPath() - Constructor for class qupathj.QuPath_Send_Overlay_to_QuPath;  ; QuPath_Send_ROI_to_QuPath - Class in qupathj. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPath_Send_ROI_to_QuPath() - Constructor for class qupathj.QuPath_Send_ROI_to_QuPath;  ; QUPATH_STARTUP - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; qupath.ext.openslide - package qupath.ext.openslide;  ; qupath.imagej.detect.cells - package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray - package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue - package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui - package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers - package qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers - package qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing - package qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels - package qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools - package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms - package qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis - package qupath.lib.analysis. Classes to aid with analysis. qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:805747,detect,detect,805747,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"Viewer viewer); Create a full image annotation for the image in the specified viewer.; The z and t positions of the viewer will be used. Parameters:; viewer - the viewer containing the image to be processed. editSelectedAnnotation; public static void editSelectedAnnotation(QuPathGUI qupath); Prompt to edit the selected annotation by translation and rotation.; ; Note that this method may change in future versions to be tied to a specified image data, ; rather than a specific QuPath instance. Parameters:; qupath - the QuPath instance for which the object should be edited. showAnnotationGridView; public static void showAnnotationGridView(QuPathGUI qupath); Show a grid view for annotation objects. Parameters:; qupath - the QuPath instance. showTMACoreGridView; public static void showTMACoreGridView(QuPathGUI qupath); Show a grid view for TMA core objects. Parameters:; qupath - the QuPath instance. showDetectionMeasurementTable; public static void showDetectionMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a measurement table for all detection objects. Parameters:; qupath - the QuPath instance; imageData - the image data for which to show measurements. showCellMeasurementTable; public static void showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a measurement table for all cell objects. Parameters:; qupath - the QuPath instance; imageData - the image data for which to show measurements. showAnnotationMeasurementTable; public static void showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a measurement table for all annotation objects. Parameters:; qupath - the QuPath instance; imageData - the image data for which to show measurements. showTMAMeasurementTable; public static void showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a measurement table for all TMA core objects. Parameters:; qupath - the QuPath instance; imageData - the i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:12515,detect,detection,12515,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['detect'],['detection']
Safety,"Z(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.process.gui.WandToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. UriResource - Interface in qupath.lib.io. Interface for objects that depend upon URIs. URIs(URI...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs. URIs(Collection<URI>) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as a collection. UriUpdater<T> - Class in qupath.lib.io. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem - Class in qupath.lib.io. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus - Enum Class in qupath.lib.io. Enum representing the status of a URI, i.e. Urls - Class in qupath.lib.gui. Class to return core QuPath URLs centrally. Urls() - Constructor for class qupath.lib.gui.Urls;  ; useAnnotations() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use annotations for labels. useCa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1069772,avoid,avoid,1069772,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avoid'],['avoid']
Safety,"a String to represent the enum ImageData.ImageType. static boolean; setImageType(ImageData.ImageType type). Set the image type for the current image data. static void; setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the current hierarchy. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static void; setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the specified hierarchy. static void; setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set intensity classifications for all selected (detection) objects in the specified hierarchy. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Set the metadata for the current ImageData to have the required pixel sizes. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons). Set the metadata for the current ImageData to have the required pixel sizes and z-spacing. static boolean; setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons). Set the metadata for an ImageServer to have the required pixel sizes and z-spacing. static boolean; setSelectedObject(PathObject pathObject). Set the selected object for the current PathObjectHierarchy. static boolean; splitAllAnnotationAreasByLines(). Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy. static boolean; split",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:39719,detect,detection,39719,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety,"a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:142945,detect,detections,142945,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,"a,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; protected Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(). addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the ro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:4479,detect,detected,4479,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['detect'],['detected']
Safety,"able manner. DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. DefaultScriptEditor. Default multilingual script editor. DefaultScriptLanguage. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. DefaultTMAGrid. Default implementation of a TMAGrid. DelaunayClusteringPlugin<T>. Plugin for calculating Delaunay clustering, and associated features. DelaunayTools. Tools for creating and querying Delaunay triangulations and Voronoi diagrams. DelaunayTools.Builder. Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. DelaunayTriangulation. Compute Delaunay triangulation using OpenCV. DensityMapCommand. Command for generating density maps from detections on an image. DensityMapDialog. Dialog for interactively generating a custom density map. DensityMaps. Class for constructing and using density maps. DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType. Density map types. DensityMapUI. UI elements associated with density maps. DetectCytokeratinCV. Simple command to detect tumor regions stained with cytokeratin. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. Dialogs; Deprecated.; since v0.5.0. Dialogs.Builder; Deprecated.; Dialogs.DialogButton. Possible buttons pressed in a yes/no/cancel dialog. DilateAnnotatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:13189,detect,detections,13189,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detections']
Safety,"ace for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. FileMenuActions;  ; FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. GeneralTools. Collection of generally useful static methods. GeneratingImageServer<T>. Marker interface to indicate that this ImageServer generates tiles on request. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting wi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:18594,detect,detections,18594,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,2,['detect'],['detections']
Safety,"acity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb,; boolean hasAlpha); Get cached color, explicitly stating whether alpha should be included or not. Parameters:; rgb - ; hasAlpha - ; Returns:. getRGB; public static int getRGB(Color color); Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Parameters:; color - ; Returns:. getARGB; public static int getARGB(Color color); Get a packed int (ARGB) represen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:2996,avoid,avoid,2996,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,1,['avoid'],['avoid']
Safety,"age, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. opacity; public FloatProperty opacityProperty; Property representing the global opacity for overlay drawing. See Also:. getOpacity(); setOpacity(float); opacityProperty(). detectionDisplayMode; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty; Property representing the current OverlayOptions.DetectionDisplayMode. See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode); detectionDisplayModeProperty(). showTMACoreLabels; public BooleanProperty showTMACoreLabelsProperty. See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean); showTMACoreLabelsProperty(). showConnections; public BooleanProperty showConnectionsProperty. See Also:. getShowConnections(); setShowConnections(boolean); showConnectionsProperty(). gridLines; public ObjectProperty<GridLines> gridLinesProperty. See Also:. getGridLines(); setGridLines(GridLines); gridLinesProperty(). measurementMapper; public ObjectProperty<MeasurementMapper> measurementMapperProperty. See Also:. getMeasurementMapper(); setMeasurementMapper(MeasurementMapper); measurementMapperProperty(). hiddenClasses; public ObservableSet<PathClass> hiddenClassesProperty. See Also:. hiddenClassesProperty(). showAnnotations; public BooleanProperty showAnnotationsProperty. See Also:. getShowAnnotations(); setShowAnnotations(boolean); showAnnotationsProperty(). showNames; public BooleanProperty showNamesProperty. See Also:. ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:6796,detect,detectionDisplayModeProperty,6796,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detectionDisplayModeProperty']
Safety,"ageData. static void; setChannelNames(ImageData<?> imageData,; String... names). Set the channel names for the specified ImageData. static void; setChannels(ImageData<?> imageData,; ImageChannel... channels). Set the channels for the specified ImageData. static void; setChannels(ImageChannel... channels). Set the channels for the current ImageData. static boolean; setColorDeconvolutionStains(String arg). Set the color deconvolution stains for hte current image data using a (JSON) String representation. static void; setDefaultImageData(ImageData<BufferedImage> imageData). Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. static void; setDefaultProject(Project<BufferedImage> project). Set the default project, which will be returned by getProject() if it would otherwise return null ; (i.e. static void; setDetectionIntensityClassifications(String measurementName,; double... thresholds). Set the intensity classifications for detections in the current hierarchy. static void; setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set the intensity classifications for detections in the specified hierarchy. static boolean; setImageType(String typeName). Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. static boolean; setImageType(ImageData.ImageType type). Set the image type for the current image data. static void; setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the current hierarchy. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static void; setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? exte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:38373,detect,detections,38373,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,"ages.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels, requesting the nucleus ROI where available. useCells() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels. useColorLUTs() - Method in class qupath.lib.display.ImageDisplay. The opposite of ImageDisplay.useGrayscaleLuts(). useCompiled() - Method in class qupath.lib.scripting.ScriptParameters. Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. useCompiled(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. useCuda() - Static method in class qupath.opencv.dnn.DnnTools. Returns true if CUDA is available and requested. useDetections() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use detections rather than annotations for labels. useExtensions - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; useFilter(Predicate<PathObject>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use a custom method of selecting objects for inclusion. useGrayscaleLutProperty() - Method in class qupath.lib.display.ImageDisplay. Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. useGrayscaleLuts() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useGrayscaleLutProperty(). useInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Request that unique labels are used for all objects, rather than classifications. useInstanceLabels(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally request that unique labels are used for all objects, rather than classifications. useInvertedBackgrou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1071982,detect,detections,1071982,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"agged(MouseEvent e);  ; void; mouseEntered(MouseEvent e);  ; void; mouseExited(MouseEvent e);  ; protected Point2D; mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel);  ; void; mouseMoved(MouseEvent e);  ; void; mousePressed(MouseEvent e);  ; void; mouseReleased(MouseEvent e);  ; protected Geometry; refineGeometryByParent(Geometry geometry);  ; protected ROI; refineROIByParent(ROI currentROI). Apply clipping based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MoveToolEventHandler; public MoveToolEventHandler(). Method Details. mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html:2468,avoid,avoid,2468,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,1,['avoid'],['avoid']
Safety,"ails. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Des",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:4074,detect,detected,4074,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['detect'],['detected']
Safety,"ails. getPreferredPixelSizeMicrons; protected abstract double getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params); Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Parameters:; imageData - ; params - ; Returns:. createDetector; protected abstract ObjectDetector<T> createDetector(ImageData<T> imageData,; ParameterList params); Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected abstract int getTileOverlap(ImageData<T> imageData,; ParameterList params); Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled.; ; If the overlap is 0, then tile boundaries are likely to be visible in the results.; ; If the overlap is > 0, then the overlap should also be > the expected largest size of a detected object -; otherwise objects may be lost of trimmed when overlaps are resolved. This is because (currently) ; the resolution of overlapping detections involves taking the largest one, rather than (for example) merging them.; ; (Merging may be permitted in later versions, but only where measurements are not made by the plugin -; since merged objects may require different measurements, e.g. for area or mean than can be easily computed; in a general way from the individual objects being merged). Parameters:; imageData - ; params - ; Returns:; The overlap size in pixels, or 0 if overlapped tiles are not supported. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces.; ; TODO: Avoid hard-coding what is considered a 'manageable size",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:4230,detect,detected,4230,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['detect'],['detected']
Safety,"ain ImageJ ROIs, false otherwise. calibrateObject; public static void calibrateObject(PathObject pathObject,; Roi roi); Set the properties of a PathObject based upon an ImageJ Roi.; This attempts to extract as much useful information as is relevant, including name, color and group. Parameters:; pathObject - ; roi - . convertToAnnotation; @Deprecated; public static PathObject convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane); Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). Create an annotation object for a specific ImageJ Roi. Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; plane - ; Returns:. convertToDetection; @Deprecated; public static PathObject convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane); Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). Create an detection object for a specific ImageJ Roi. Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; plane - ; Returns:. convertLabelsToCells; public static SortedMap<Number,PathObject> convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane); Convert integer labeled images into cell objects. Parameters:; ipNuclei - labels corresponding to cell nuclei; non-zero values here must be identical to the values in ipCells; ipCells - labels corresponding to full cell areas; cal - a Calibration object used to aid conversion between ImageJ and QuPath ROIs; downsample - the downsample value for the ImageProcessors, used to aid conversion between ImageJ and QuPath ROIs; plane - the ImagePlane defining where ROIs should be added; Returns:; a SortedMap containing integer labels from the original labeled images mapped to the corresponding cells that have been created. convertLabelsToCells; public static SortedMap<Number,PathObject> convertLab",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:18081,detect,detection,18081,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['detect'],['detection']
Safety,"ait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:3369,predict,prediction,3369,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,1,['predict'],['prediction']
Safety,"al TMA core labels.; This can be a space-separated list, or an ascending or descending numeric or alphabetic range.; ; Examples:; ; ""A-H""; ""1-9""; ""H-A""; ""A B D E"". Parameters:; labelString - ; Returns:. getSupportedObjects; public static Collection<? extends PathObject> getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses); From a collection of available objects, extract those that are instances of specified supported classes. Parameters:; availableObjects - ; supportedClasses - ; Returns:. getROI; public static ROI getROI(PathObject pathObject,; boolean preferNucleus); Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. Parameters:; pathObject - ; preferNucleus - ; Returns:. getNucleusOrMainROI; public static ROI getNucleusOrMainROI(PathObject pathObject); Get the nucleus ROI for a cell, or the main ROI if no nucleus is found.; This is equivalent to getROI(pathObject, true), but avoids the mysterious boolean flag to make; code more readable. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusROI(PathObject). getNucleusROI; public static ROI getNucleusROI(PathObject pathObject); Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusOrMainROI(PathObject). getDescendantObjects; public static Collection<PathObject> getDescendantObjects(PathObject pathObject,; Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get all descendant objects with a specified type. Parameters:; pathObject - ; pathObjects - ; cls - ; Returns:. splitAreasByLines; public static Map<PathObject,List<PathObject>> splitAreasByLines(Collection<? extends PathObject> pathObjects); Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. Parameters:; pathObjects - an input collec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:31765,avoid,avoids,31765,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['avoid'],['avoids']
Safety,"al classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathDetectionObject. A detection PathObject. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectTools. A collection of static methods to help work with PathObjects. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObject",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:2395,detect,detection,2395,javadoc/docs/qupath/lib/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html,1,['detect'],['detection']
Safety,"allocating a LUT with the 0-255 required values. convertToAnnotation(Roi, double, double, double, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. convertToAnnotation(Roi, double, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Create an annotation object for a specific ImageJ Roi. convertToAnnotation(ImagePlus, ImageServer<?>, Roi, double, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Deprecated.; use instead IJTools.convertToAnnotation(Roi, double, double, double, ImagePlane). convertToBufferedImage(ImagePlus, int, int, ColorModel) - Static method in class qupath.imagej.images.servers.ImageJServer. Convert an ImagePlus to a BufferedImage, for a specific z-slice and timepoint. convertToDetection(Roi, double, double, double, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. convertToDetection(Roi, double, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Create a detection object for a specific ImageJ Roi. convertToDetection(ImagePlus, ImageServer<?>, Roi, double, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Deprecated.; use instead IJTools.convertToDetection(Roi, double, double, double, ImagePlane). convertToFloatProcessor(SimpleImage) - Static method in class qupath.imagej.tools.IJTools. Convert a SimpleImage to an ImageProcessor. convertToIJRoi(ROI, double, double, double) - Static method in class qupath.imagej.tools.IJTools. Convert a QuPath ROI to an ImageJ Roi. convertToIJRoi(ROI, Calibration, double) - Static method in class qupath.imagej.tools.IJTools. Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. convertToIJRoi(ROI, T) - Static method in class qupath.imagej.tools.IJTools. Create an ImageJ Roi from a ROI, suitable for displayin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:142128,detect,detection,142128,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"als, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the prediction function that can apply a prediction with one or more blobs as input. Returns:. predict; public Map<String,Mat> predict(Map<String,Mat> blobs); Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat.; ; Note that this only supports a batch size of 1. For larger batches or more control, getBlobFunction(String) and; getPredictionFunction() should be used directly. Specified by:; predict in interface DnnModel; Parameters:; blobs - ; Returns:. predict; public Mat predict(Mat mat); Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat.; ; Note that this only supports a batch size of 1. For larger batches or more control, getBlobFunction(String) and; getPredictionFunction() should be used directly. Specified by:; predict in interface DnnModel; Parameters:; mat - ; Returns:. batchPredict; public List<Mat> batchPredict(List<? extends Mat> mats); Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats.; This method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:3514,predict,predict,3514,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,2,['predict'],['predict']
Safety,"alue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellDetection;  ; WatershedCellMembraneDetection - Class in qupath.imagej.detect.cells. Cell detection that takes into consideration membrane staining. WatershedCellMembraneDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellMembraneDetection. Default constructor. watershedExpandLabels(ImageProcessor, double, boolean) - Static method in class qupath.imagej.processing.Watershed. Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging. watershedIntensitySplit(Mat, Mat, double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. WatershedNucleiCV - Class in qupath.opencv. Alt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1104427,detect,detect,1104427,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"ames. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109306,detect,detectionToAnnotationDistances,109306,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['detect'],"['detectionToAnnotationDistances', 'detectionToAnnotationDistancesSigned']"
Safety,"ams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:775487,predict,predict,775487,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. convertToAnnotation(Roi, double, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Create an annotation object for a specific ImageJ Roi. convertToAnnotation(ImagePlus, ImageServer<?>, Roi, double, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Deprecated.; use instead IJTools.convertToAnnotation(Roi, double, double, double, ImagePlane). convertToBufferedImage(ImagePlus, int, int, ColorModel) - Static method in class qupath.imagej.images.servers.ImageJServer. Convert an ImagePlus to a BufferedImage, for a specific z-slice and timepoint. convertToDetection(Roi, double, double, double, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. convertToDetection(Roi, double, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Create a detection object for a specific ImageJ Roi. convertToDetection(ImagePlus, ImageServer<?>, Roi, double, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Deprecated.; use instead IJTools.convertToDetection(Roi, double, double, double, ImagePlane). convertToFloatProcessor(SimpleImage) - Static method in class qupath.imagej.tools.IJTools. Convert a SimpleImage to an ImageProcessor. convertToIJRoi(ROI, double, double, double) - Static method in class qupath.imagej.tools.IJTools. Convert a QuPath ROI to an ImageJ Roi. convertToIJRoi(ROI, Calibration, double) - Static method in class qupath.imagej.tools.IJTools. Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. convertToIJRoi(ROI, T) - Static method in class qupath.imagej.tools.IJTools. Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. convertToImagePlus(String, ImageServer<BufferedImage>, BufferedImage, RegionRequest) - Static method in class qupath.imagej.t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:142321,detect,detection,142321,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"an image region. Parameters:; model - the segmentation model; input - the input image; output - the output image; Returns:; a Mat containing the segmentation results (the same as output, if provided). detect; public static List<PathObject> detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator); throws IOException; Apply a detection model to generate rectangles surrounding distinct structures. Parameters:; model - the detection model; server - the image; request - the region within which detection should be applied; classifier - function to convert the classification label into a PathClass; creator - function to create an object (e.g. detection, annotation) from a ROI; Returns:; a list of created objects; Throws:; IOException - if the image could not be read. detect; public static List<PathObject> detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator); Apply a detection model to generate rectangles surrounding distinct structures. Parameters:; model - the detection model; mat - the image; request - the region corresponding to the Mat; if provided, this is used to scale and translate detected regions; classifier - function to convert the classification label into a PathClass; creator - function to create an object (e.g. detection, annotation) from a ROI; Returns:; a list of created objects. blobFromImages; public static Mat blobFromImages(Mat... mats); Create an OpenCV blob from one or more mats. Parameters:; mats - ; Returns:. blobFromImage; public static Mat blobFromImage(Mat mat); Create an OpenCV blob from a single mat. Parameters:; mat - ; Returns:. blobFromImages; public static Mat blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop); Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. Parameters:; mat - i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:13775,detect,detect,13775,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,3,['detect'],"['detect', 'detection']"
Safety,"ance MethodsAbstract Methods. Modifier and Type; Method; Description; void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer renderer). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds). Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Method Details. paintRegionCompletely; void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds); Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; observer - an ImageObserver (often ignored); renderer - an ImageRenderer to convert images to RGB; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html:1637,timeout,timeoutMilliseconds,1637,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,2,"['abort', 'timeout']","['abort', 'timeoutMilliseconds']"
Safety,"andler.ViewerMover. Start moving, with initial velocity given by dx and dy. startTranslation(double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. Returns true if the current ROI is translatable, and at the end of this call the translation has started. startupMessage - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptPath - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a startup script that should be run immediately after QuPath's launch. StatisticsHelper - Class in qupath.lib.analysis.stats. Static methods for computing statistics from images, with or without a corresponding labeled image. StatisticsHelper() - Constructor for class qupath.lib.analysis.stats.StatisticsHelper;  ; statModel(OpenCVClassifiers.OpenCVStatModel, boolean) - Static method in class qupath.opencv.ops.ImageOps.ML. Apply a StatModel to pixels to generate a prediction. std(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Calculate the standard deviation of all elements in a Mat, ignoring NaNs. STD_DEV - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Standard deviation value. stdDev(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D circular standard deviation filter. stdDev(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the standard deviation of an image, across all pixels (regardless of channels), ignoring NaNs. stdDevFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D local standard deviation filter to all channels of an image, with symmetric boundary padding. stdDevFilter(Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D local standard deviation filter to all channels of an image. stop() - Method in class qupath.lib.common.Timeit. Stop t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:997195,predict,prediction,997195,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"ane with channel, z and t set from an existing ROI. getPluginClass() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Get the full name of the plugin class. getPointObjects(Class<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get objects that contain Point ROIs. getPointObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with point ROIs from a collection of objects. getPoolSizeProp() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager;  ; getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClass. Get a standalone or derived Positive classification. getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). getPostprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any postprocessing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:487819,predict,prediction,487819,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"ang.Object; qupath.lib.color.ColorToolsAwt. public class ColorToolsAwt; extends Object; Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK. Black, with 50% opacity. static final Color; TRANSLUCENT_WHITE. White, with 50% opacity. Constructor Summary; Constructors. Constructor; Description; ColorToolsAwt();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IndexColorModel; createIndexColorModel(int red,; int green,; int blue,; boolean whiteBackground). Get an IndexColorModel representing a linear LUT based on a RGB color. static Color; darkenColor(Color color). Get a (slightly) darker version of the specified color. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Get a color with a specified opacity, setting the alpha channel accordingly. static Color; getColorWithOpacity(Integer rgb,; double opacity). Get a color with a specified opacity, based on the packed RGB values in an Integer. static IndexColorModel; getIndexColorModel(StainVector stain). Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). static IndexColorModel; getIndexColorModel(StainVector stain,; boolean whiteBackground). Get an IndexColorModel representing a co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:1386,avoid,avoid,1386,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,1,['avoid'],['avoid']
Safety,"angles surrounding distinct structures. DetectCytokeratinCV - Class in qupath.opencv. Simple command to detect tumor regions stained with cytokeratin. DetectCytokeratinCV() - Constructor for class qupath.opencv.DetectCytokeratinCV;  ; detection() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:253235,detect,detectionCentroidDistances,253235,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionCentroidDistances']
Safety,"an debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:4843,safe,safe,4843,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['safe'],['safe']
Safety,"an splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Dup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14197,detect,detectionToAnnotationDistances,14197,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"ap<String,Number>; getMeasurements(). Get a map-based view on getMeasurementList(). Map<String,String>; getMetadata(). Get a key/value pair map for object metadata. String; getName(). Request the stored object name. PathObject; getParent(). Request the parent object. abstract PathClass; getPathClass(). Get the classification of the object. abstract ROI; getROI(). Get the region of interest (ROI) for the object. protected Map<String,String>; getUnmodifiableMetadataMap(). Get an unmodifiable map of the metadata. boolean; hasChildObjects(). Check if this object has children, or if its child object list is empty. boolean; hasChildren(). Deprecated.; since v0.4.0, replaced by hasChildObjects(). boolean; hasMeasurements(). Returns true if the measurement list for this object is not empty. boolean; hasROI(). Returns true if this object has a ROI. boolean; isAnnotation(). Returns true if the object is an annotation. boolean; isCell(). Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). boolean; isDetection(). Returns true if the object is a detection. abstract boolean; isEditable(). Flag indicating that the object is editable. boolean; isLocked(). Query the locked status. boolean; isRootObject(). Returns true if the object is the 'root' of an object hierarchy. boolean; isTile(). Returns true if this object represents an image tile. boolean; isTMACore(). Returns true if this object represents a TMA core. int; nChildObjects(). Total number of child objects. int; nDescendants(). Total number of descendant objects. protected String; objectCountPostfix();  ; void; readExternal(ObjectInput in);  ; void; refreshID(). Regenerate a new random ID. void; removeChildObject(PathObject pathObject). Remove a single object from the child list of this object. void; removeChildObjects(Collection<PathObject> pathObjects). Remove multiple objects from the child list of this object. void; removePathObject(PathObject pathObject)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:3992,detect,detection,3992,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['detect'],['detection']
Safety,"apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:776593,predict,predict,776593,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"ar ROI. Parameters:; xCenter - ; yCenter - ; diameter - ; isMissing - ; plane - ; Returns:. createTMACoreObject; public static TMACoreObject createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing); Create a TMA core object with an circular ROI. Parameters:; xCenter - ; yCenter - ; diameter - ; isMissing - ; Returns:. createTMACoreObject; public static TMACoreObject createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing); Create a TMA core object with an ellipse ROI. Parameters:; x - ; y - ; width - ; height - ; isMissing - ; Returns:. createTMACoreObject; public static TMACoreObject createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing,; ImagePlane plane); Create a TMA core object with an ellipse ROI. Parameters:; x - ; y - ; width - ; height - ; isMissing - ; plane - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a classified detection object with a specified measurement list.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createCellObject(ROI, ROI, PathClass, MeasurementList). createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass); Create a classified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi); Create an unclassified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; Returns:. createTileObject; public static PathObject createT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:5400,detect,detection,5400,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['detect'],['detection']
Safety,"arPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. suggestNeighbor; public boolean suggestNeighbor(ParallelTileObject pto); Register a neighboring tile, if it intersects with the bounds of this one. Parameters:; pto - ; Returns:. updateStatus; public void updateStatus(ParallelTileObject.Status status); Notify the object if it is currently being processed.; ; This is used to update how it is displayed (here implemented using a classification). Parameters:; status - . getStatus; public ParallelTileObject.Status getStatus(); Get the current status (pending, processing or done). Returns:. isProcessing; public boolean isProcessing(); Returns true if setIsProcessing(true) has recently been called. Returns:. isComplete; public boolean isComplete(); Returns true if setComplete() has been called. Returns:. setComplete; public void setComplete(boolean wasCancelled); Notify the tile that its processing is done.; ; This both changes its display color, and triggers a check to see if overlaps with; detections made in adjacent tiles can be resolved. Parameters:; wasCancelled - . resolveOverlaps; public void resolveOverlaps(); Request that the tile object attempts to resolve overlaps with its neighboring tiles. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html:4293,detect,detections,4293,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,1,['detect'],['detections']
Safety,"arameterList; protected ParameterList getParameterList(ImageData<T> imageData); Get a reference to a ParameterList stored internally, and which will be used for analysis.; ; If there is no list presently available, getDefaultParameterList will be called.; ; If there is a list available, it will be returned.; ; The reason for needing this in addition to getDefaultParameterList, is that parseArgument could ; modify the internal ParameterList that will actually be used, while getDefaultParameterList is useful; when creating GUIs and ensuring that there is always a sensible starting point. Parameters:; imageData - image data for which the parameters should be generated. This may influence which parameters are shown.; Returns:. parseArgument; protected boolean parseArgument(ImageData<T> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<T>; Parameters:; imageData - ; arg - ; Returns:. getLoggableParameters; protected ParameterList getLoggableParameters(ImageData<T> imageData); Get a copy of the current parameter list (with empty parameters removed) suitable for logging.; Subclasses might choose to append extra parameters here, which aren't part of the main list; (e.g. because they shouldn't be included in any automatically created dialog box). Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:4978,abort,abort,4978,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,2,"['abort', 'safe']","['abort', 'safe']"
Safety,"arge. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its cent",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3358,detect,detectionsToCells,3358,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,4,['detect'],"['detections', 'detectionsToCells']"
Safety,"ass qupath.lib.gui.viewer.PathObjectPainter. Paint the specified tissue microarray grid. paintViewer(Graphics, int, int) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; PaneTools - Class in qupath.lib.gui.tools. Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PaneTools() - Constructor for class qupath.lib.gui.tools.PaneTools. Deprecated.;  ; parallelize() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Parallelize tile export, if possible. parallelize(boolean) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the default number of threads (current 4). parallelize(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the requested number of threads. ParallelTileObject - Class in qupath.lib.plugins. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status - Enum Class in qupath.lib.plugins. Current processing status for the tile. Parameter<S> - Interface in qupath.lib.plugins.parameters. Interface defining algorithm parameters, which need to be displayed to users somehow. parameterChanged(ParameterList, String, boolean) - Method in class qupath.lib.gui.charts.HistogramDisplay;  ; parameterChanged(ParameterList, String, boolean) - Method in interface qupath.lib.plugins.parameters.ParameterChangeListener. Notify listener that a parameter value has changed. ParameterChangeListener - Interface in qupath.lib.plugins.parameters. Interface for objects that need to be notified when parameters have their values changed. Parameterizable - Interface in qupath.lib.plugins.parameters. Interface for indicating that the implementing class takes adjustable parameters. ParameterList - Class in qupath.lib.plugins.parameters. A collection of Parameters, which can be used ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:744190,detect,detection,744190,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. isGradedIntensityClass; public static boolean isGradedIntensityClass(PathClass pathClass); Return true if the PathClass represents a built-in intensity class.; Here, this means its name is equal to ""1+"", ""2+"" or ""3+"". Parameters:; pathClass - ; Returns:. isIgnoredClass; public static boolean isIgnoredClass(PathClass pathClass); Return true if the PathClass should be ignored from some operations, or is null. ; In practice, this checks if the PathClass is null or if the name is either null or ends with an asterisk.; It is useful to avoid generating objects for certain classes (e.g. Ignore*, Artefact*, Background*) ; where these would not be meaningful.; ; Warning: the 'ignored' status is ambiguous if the PathClass is null. ; In a future version this method may throw an exception rather than accepting null classifications. ; Code that calls this method therefore should explicitly handle cases where the PathClass is ; null (or its name is null) to avoid ambiguity and potential exceptions in the future. Parameters:; pathClass - ; Returns:; See Also:. isNullClass(PathClass). isNullClass; public static boolean isNullClass(PathClass pathClass); Return true if the PathClass is null, its name is null or if it is equal ; to the special case of 'Unclassified' path object. Parameters:; pathClass - ; Returns:. isValidClass; public static boolean isValidClass(PathClass pathClass); Returns true if the PathClass represents a valid (non-null) classification. Parameters:; pathClass - input classification to check; Returns:; true if the input represents a valid classification, or false if the input is null or is equivalent to PathClass.NULL_CLASS. isOnePlus; public static boolean isOnePlus(PathClass pathClass); Returns true if the name of the class is ""1+"", indicating a weakly-positive staining. Parameters:; pathClass - ; Returns:. isTwoPlus; public static boolean isTwoPlus(PathClass pathClass); Return true i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html:4408,avoid,avoid,4408,javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,1,['avoid'],['avoid']
Safety,"assFun); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; pathClassFun - function used to create a PathClass from a cluster number (determined by where it falls within the collection).; Returns:; a collection of objects that have had their classifications set by this method. classifyObjectsByCluster; public static Collection<PathObject> classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; Returns:; a collection of objects that have had their classifications set by this method. nameObjectsByCluster; public static Collection<PathObject> nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; pathClassFun - function used to create a PathClass from a cluster number (determined by where it falls within the collection).; However rather than set this as the object classification, it will be used to set the name and color of the object ; (so as to avoid overriding an existing classification).; Returns:; a collection of objects that have had their classifications set by this method. nameObjectsByCluster; public static Collection<PathObject> nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters); Assign object names based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; Returns:; a collection of objects that have had their classifications set by this method. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:8684,avoid,avoid,8684,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['avoid'],['avoid']
Safety,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:1932,detect,detection,1932,javadoc/docs/qupath/lib/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html,1,['detect'],['detection']
Safety,"asses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; chan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3009,predict,prediction,3009,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['predict'],['prediction']
Safety,assets; . /css; ; main.css. /images; . /icons; ; angle-left-solid.svg; angle-right-solid.svg; apple.svg; code-solid.svg; comments-regular.svg; file-lines-regular.svg; github.svg; linux.svg; twitter.svg; windows.svg; xmark-solid.svg. favicon.ico. /js; ; os.js; slider.js. javadoc; . /docs; . /qupath; . /ext; . /openslide; ; OpenSlideExtension (QuPath 0.5.0); qupath.ext.openslide (QuPath 0.5.0); qupath.ext.openslide Class Hierarchy (QuPath 0.5.0). /imagej; . /detect; . /cells; ; qupath.imagej.detect.cells (QuPath 0.5.0); qupath.imagej.detect.cells Class Hierarchy (QuPath 0.5.0); PositiveCellDetection (QuPath 0.5.0); SubcellularDetection (QuPath 0.5.0); WatershedCellDetection (QuPath 0.5.0); WatershedCellMembraneDetection (QuPath 0.5.0). /dearray; ; qupath.imagej.detect.dearray (QuPath 0.5.0); qupath.imagej.detect.dearray Class Hierarchy (QuPath 0.5.0); TMADearrayer (QuPath 0.5.0); TMADearrayerPluginIJ (QuPath 0.5.0). /tissue; ; qupath.imagej.detect.tissue (QuPath 0.5.0); qupath.imagej.detect.tissue Class Hierarchy (QuPath 0.5.0); PositivePixelCounterIJ (QuPath 0.5.0); SimpleTissueDetection2 (QuPath 0.5.0). /gui; ; IJExtension (QuPath 0.5.0); IJExtension.IJExtensionCommands (QuPath 0.5.0); ImageJMacroRunner (QuPath 0.5.0); qupath.imagej.gui (QuPath 0.5.0); qupath.imagej.gui Class Hierarchy (QuPath 0.5.0). /images; . /servers; ; ImageJServer (QuPath 0.5.0); ImageJServerBuilder (QuPath 0.5.0); qupath.imagej.images.servers (QuPath 0.5.0); qupath.imagej.images.servers Class Hierarchy (QuPath 0.5.0). /writers; ; qupath.imagej.images.writers (QuPath 0.5.0); qupath.imagej.images.writers Class Hierarchy (QuPath 0.5.0); TiffWriterIJ (QuPath 0.5.0); ZipWriterIJ (QuPath 0.5.0). /processing; ; MorphologicalReconstruction (QuPath 0.5.0); qupath.imagej.processing (QuPath 0.5.0); qupath.imagej.processing Class Hierarchy (QuPath 0.5.0); RoiLabeling (QuPath 0.5.0); SimpleThresholding (QuPath 0.5.0); Watershed (QuPath 0.5.0). /superpixels; ; DoGSuperpixelsPlugin (QuPath 0.5.0); qupath.ima,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:1008,detect,detect,1008,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['detect'],['detect']
Safety,"assification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinary(ByteProcessor, double, int, int, Roi) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. detectVendor(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to detect the vendor of the image at the specified path. determinant() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the determinant of the matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:258184,detect,detectTMACoresFromBinary,258184,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectTMACoresFromBinary']
Safety,"assifier; measurementID - . createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifierName - the name of the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifierName - the name of the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:140546,detect,detection,140546,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety,"assifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:1386,predict,predictWithLock,1386,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,1,['predict'],['predictWithLock']
Safety,"asurement list of the source objects. static double; computeCoordinateDistance(Coordinate coord,; Collection<Coordinate> targets). Compute the shortest distance from a coordinate to one of a collection of target coordinates. static double; computeCoordinateDistance(Coordinate coord,; STRtree tree). Compute the distance to the nearest coordinate stored within an STRtree. static double; computeDistance(Coordinate coord,; Geometry geometry,; PointOnGeometryLocator locator). Compute the (unsigned) shortest distance from a coordinate to a target geometry, or zero if the coordinate occurs ; within. static double; computeDistance(Coordinate coord,; Geometry geometry,; PointOnGeometryLocator locator,; boolean signedDistance). Compute the shortest distance from a coordinate to a target geometry. static STRtree; createCoordinateCache(Collection<Coordinate> coords). Create an STRtree to enable nearest neighbor searching for a collection of coordinates. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation wi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:2766,detect,detectionCentroidDistances,2766,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,1,['detect'],['detectionCentroidDistances']
Safety,"at, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; PreferencePane - Class in qupath.lib.gui.panes. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane() - Constructor for class qupath.lib.gui.panes.PreferencePane;  ; PreferencePane.AppearancePreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.DrawingPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.ExtensionPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.GeneralPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.InputOutputPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.LocalePreference",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:778661,predict,predictWithLock,778661,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predictWithLock']
Safety,"atProperty; opacity. Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegion;  ; BooleanProperty; showAnnotations;  ; BooleanProperty; showConnections;  ; BooleanProperty; showDetections;  ; BooleanProperty; showGrid;  ; BooleanProperty; showNames;  ; BooleanProperty; showPixelClassification;  ; BooleanProperty; showTMACoreLabels;  ; BooleanProperty; showTMAGrid;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Constructor Summary; Constructors. Constructor; Description; OverlayOptions(). Constructor, using default values. OverlayOptions(OverlayOptions options). Constructor, initializing values based on an existing OverlayOptions object. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<OverlayOptions.DetectionDisplayMode>; detectionDisplayModeProperty(). Property representing the current OverlayOptions.DetectionDisplayMode. BooleanProperty; fillAnnotationsProperty();  ; BooleanProperty; fillDetectionsProperty();  ; FloatProperty; fontSizeProperty();  ; boolean; getAllPathClassesVisible();  ; OverlayOptions.DetectionDisplayMode; getDetectionDisplayMode(). Get the current OverlayOptions.DetectionDisplayMode. boolean; getFillAnnotations();  ; boolean; getFillDetections();  ; float; getFontSize();  ; GridLines; getGridLines();  ; MeasurementMapper; getMeasurementMapper();  ; float; getOpacity(). Get the global opacity for overlay drawing. RegionFilter; getPixelClassificationRegionFilter();  ; boolean; getShowAnnotations();  ; boolean; getShowCellBoundaries(). Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. boolean; getShowCellNuclei(). Query the current OverlayOptions.DetectionDisplayMode to see if nuclei ROIs should be drawn. boolean; getShowConnections();  ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:2005,detect,detectionDisplayModeProperty,2005,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detectionDisplayModeProperty']
Safety,"ata; renderer - rendered used to create an RGB image; Returns:; the PixelClassificationOverlay. rendererProperty; public ObjectProperty<ImageRenderer> rendererProperty(); Get the ImageRenderer property used with this overlay. Returns:; See Also:. getRenderer(); setRenderer(ImageRenderer). getRenderer; public ImageRenderer getRenderer(); Get the ImageRenderer used with this overlay, which may be null. Returns:. setMaxThreads; public void setMaxThreads(int nThreads); Set the maximum number of threads that may be used during live prediction. Parameters:; nThreads - . getMaxThreads; public int getMaxThreads(); Get the maximum number of threads that may be used during live prediction. Returns:. setRenderer; public void setRenderer(ImageRenderer renderer); Set the ImageRenderer to be used with this overlay. Parameters:; renderer - . getLivePrediction; public boolean getLivePrediction(); Query whether live prediction is turned on. Returns:. setLivePrediction; public void setLivePrediction(boolean livePrediction); Turn on or off live prediction.; This requests tile classifications as the overlay is being viewed. Parameters:; livePrediction - . getPixelClassificationServer; public ImageServer<BufferedImage> getPixelClassificationServer(ImageData<BufferedImage> imageData); Get the ImageServer that would be used by this overlay for the specified ImageData.; Note that the servers are cached internally. Parameters:; imageData - ; Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:8463,predict,prediction,8463,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['predict'],['prediction']
Safety,"atchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelTy",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2275,predict,prediction,2275,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,1,['predict'],['prediction']
Safety,"ate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static File; promptForFile(String... extensions). Prompt the user to select a file from a file chooser. static boolean; runPlugin(String className,; String args);  ; static boolean; runPlugin(String className,; ImageData<?> imageData,; String args);  ; static void; saveAnnotationMeasurements(String path,; String... includeColumns). Save annotation measurements for the current image. static void; saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save annotation measurements for the specified image. static void; saveDetectionMeasurements(String path,; String... includeColumns). Save detection measurements for the current image. static void; saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save detection measurements for the specified image. static void; saveImageMeasurements(String path,; String... includeColumns). Save whole image measurements for the current image. static void; saveImageMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save whole image measurements for the specified image. static void; saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the current image for objects of a fixed type. static void; saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the specified image for objects of a fixed type. static void; saveTMAMeasurements(String path,; String... includeColumns). Save TMA measurements for the current image. static void; saveTMAMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save TMA measurements for the specified image. static void; setChannelDisplayRange(int channe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:3508,detect,detection,3508,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['detect'],['detection']
Safety,"ate>) - Static method in class qupath.lib.analysis.DistanceTools. Create an STRtree to enable nearest neighbor searching for a collection of coordinates. createDefaultRGBImage(int, int) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; createDefaultRGBImage(int, int) - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; createDefaultRGBImage(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create the default (blank) RGB image for this server. createDefaultRGBImage(int, int) - Method in class qupath.lib.images.servers.LabeledImageServer;  ; createDetectionConverter() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified detection object. createDetectionObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object. createDetectionObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object with a specified measurement list. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.Op",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:173466,detect,detection,173466,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108852,detect,detectionToAnnotationDistances,108852,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,4,['detect'],"['detection', 'detectionToAnnotationDistances']"
Safety,"ated; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION !=",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:142599,detect,detections,142599,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,"ath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0, use PathObjectHierarchy.addObject(PathObject, boolean) instead (for naming consistency). addPixelClassifierMeasurements(String, String) - Static method in class qupath.lib.scripting.QP. Add measurements from pixel classification to the selected objects. addPixelClassifierMeasurements(PixelClassifier, String) - Static method in class qupath.lib.scripting.QP. Add measurements from pixel classification to the selected objects. addPropertyChangeListener(PropertyChangeListener) - Method in class qupath.lib.images.ImageData. Add a new property change listener. addPropertyPreference(Property<T>, Class<? extends T>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addRow(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.IntensityFeaturesPl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:25782,detect,detect,25782,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"ath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:777863,predict,predictWithLock,777863,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predictWithLock']
Safety,"athClass with name elements sorted using an arbitrary Comparator. static List<String>; splitNames(PathClass pathClass). Get a list containing the names of all constituent parts of a PathClass. static PathClass; uniqueNames(PathClass pathClass). Remove duplicate names from a derived PathClass. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. isGradedIntensityClass; public static boolean isGradedIntensityClass(PathClass pathClass); Return true if the PathClass represents a built-in intensity class.; Here, this means its name is equal to ""1+"", ""2+"" or ""3+"". Parameters:; pathClass - ; Returns:. isIgnoredClass; public static boolean isIgnoredClass(PathClass pathClass); Return true if the PathClass should be ignored from some operations, or is null. ; In practice, this checks if the PathClass is null or if the name is either null or ends with an asterisk.; It is useful to avoid generating objects for certain classes (e.g. Ignore*, Artefact*, Background*) ; where these would not be meaningful.; ; Warning: the 'ignored' status is ambiguous if the PathClass is null. ; In a future version this method may throw an exception rather than accepting null classifications. ; Code that calls this method therefore should explicitly handle cases where the PathClass is ; null (or its name is null) to avoid ambiguity and potential exceptions in the future. Parameters:; pathClass - ; Returns:; See Also:. isNullClass(PathClass). isNullClass; public static boolean isNullClass(PathClass pathClass); Return true if the PathClass is null, its name is null or if it is equal ; to the special case of 'Unclassified' path object. Parameters:; pathClass - ; Returns:. isValidClass; public static boolean isValidClass(PathClass pathClass); Returns true if the PathClass represents a valid (non-null) classification. Parameters:; pathClass - input classification to check; Returns:; true if the input re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html:3986,avoid,avoid,3986,javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,1,['avoid'],['avoid']
Safety,"athClass, String, Integer) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getInstance(PathClass, String, Integer). getDerivedPathClass(PathClass, String, Integer) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name, derived from another PathClass. getDescendantObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all descendant objects. getDescendantObjects(PathObject, Collection<PathObject>, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get all descendant objects with a specified type. getDescription() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDescription() - Method in class qupath.imagej.gui.IJExtension;  ; getDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getDescription() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDescription() - Method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:378147,detect,detect,378147,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"athObject> creator). Create an OutputHandler.OutputToObjectConverter for one specify type. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJProcessor; public ImageJProcessor(). Method Details. createImagePlusImageSupplier; public static ImageSupplier<ImagePlus> createImagePlusImageSupplier(); Create an ImageSupplier that returns an ImageJ ImagePlus. Returns:. createImagePlusMaskSupplier; public static MaskSupplier<ImagePlus,ImagePlus> createImagePlusMaskSupplier(); Create a MaskSupplier that returns an ImageJ ByteProcessor. Returns:. createDetectionOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createAnnotationOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createDetectionConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Crea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:3173,detect,detection,3173,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,1,['detect'],['detection']
Safety,"athObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed, and may still be changing. fireVisibleRegionChangedEvent(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireWorkflowUpdatedEvent() - Method in class qupath.lib.plugins.workflow.Workflow;  ; fitCorePolygonToGrid(Polygon, double, int, int) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. fixUris(UriResource, Project<?>) - Static method in class qupath.lib.io.UriUpdater. Attempt to fix any broken paths by updating URIs based upon the current project. FLAT - Enum constant in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Flat cap. flatness(double) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the flatness for any operation where a PathIterator is required. flatten(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Flatten a Mat to give a single column. FLOAT - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of floats. FLOAT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit floating point. FLOAT64 - Enum constant in enum class qupath.lib.images.servers.PixelType. 64-bit floating point. floor() - St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:310693,detect,detect,310693,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"athObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5892,detect,detections,5892,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,"atic DoubleProperty scalebarLineWidthProperty; Preferred line width for the scalebar. See Also:. scalebarLineWidthProperty(). allredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. See Also:. annotationStrokeThicknessProperty(). usePixelSnapping; public static BooleanProperty usePixelSnappingProperty; If true, pixels should be snapped to integer coordinates when using the drawing tools. See Also:. usePixelSnappingProperty(). Constructor Details. PathPrefs; public PathPrefs(). Method Details. useSystemMenubarProperty; @Deprecated; public static BooleanProperty useSystemMenubarProperty(); Deprecated.; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This shoul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:40766,detect,detectionStrokeThickness,40766,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,3,['detect'],"['detectionStrokeThickness', 'detectionStrokeThicknessProperty', 'detections']"
Safety,"ationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an image patch to classify an object. ClassifyByMeasurementBuilder(String) - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Constructor. classifyCellsByCentroid(ImageData<BufferedImage>, PixelClassifier, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. classifyDetectionsByCentroid(String) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(PixelClassifier) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. ClassifyMenuActions - Class in qupath.lib.gui.actions.menus;  ; ClassifyMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:102848,detect,detections,102848,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,3,"['detect', 'predict']","['detection', 'detections', 'prediction']"
Safety,"ault implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:777149,predict,prediction,777149,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"aultImageRegionStore;  ; getCache() - Method in class qupath.lib.images.servers.AbstractImageServer. Get the internal cache. getCache(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the cache in use for image tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(Integer) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color. getCachedColor(Integer) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color. getCachedColor(Integer, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color, explicitly stating whether alpha should be included or not. getCachedColor(Integer, boolean) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color, explicitly stating whether alpha should be included or not. getCachedMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. getCachedMeasurementValue(ROI, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a spec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:344620,avoid,avoid,344620,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avoid'],['avoid']
Safety,"ava.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:3674,detect,detected,3674,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['detect'],['detected']
Safety,"ay,; double maxDisplay); Set the minimum and maximum display range for the specified ImageData for a channel identified by name. Parameters:; imageData - ; channelName - ; minDisplay - ; maxDisplay - . saveAnnotationMeasurements; public static void saveAnnotationMeasurements(String path,; String... includeColumns); Save annotation measurements for the current image. Parameters:; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveTMAMeasurements; public static void saveTMAMeasurements(String path,; String... includeColumns); Save TMA measurements for the current image. Parameters:; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveDetectionMeasurements; public static void saveDetectionMeasurements(String path,; String... includeColumns); Save detection measurements for the current image. Parameters:; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveImageMeasurements; public static void saveImageMeasurements(String path,; String... includeColumns); Save whole image measurements for the current image. Parameters:; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveImageMeasurements; public static void saveImageMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save whole image measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveAnnotationMeasurements; public static void saveAnnotatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:19781,detect,detection,19781,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['detect'],['detection']
Safety,"ayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are treated as unsigned 8-bit values (0-255);. Parameters:; array - ; Returns:. makeUnsignedShortArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedShortArrayWrapper(short[] array); Create a wrapper for a short array, returning values as doubles.; ; Shorts are treated as unsigned 16-bit values (0-65535",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:2054,predict,predictably,2054,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,1,['predict'],['predictably']
Safety,"b.experimental.pixels.ImageJProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified detection object. createDetectionObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object. createDetectionObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object with a specified measurement list. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetections(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create detection objects by tracing contours in a labelled image. createDetections(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create detection objects from a labelled image. createDetectionsFromPixelCla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:174113,detect,detection,174113,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"bal opacity for overlay drawing. Returns:; opacity property, which should accept values between 0 and 1.; See Also:. getOpacity(); setOpacity(float). getDetectionDisplayMode; public OverlayOptions.DetectionDisplayMode getDetectionDisplayMode(); Get the current OverlayOptions.DetectionDisplayMode. Returns:; the current display mode. getShowCellNuclei; public boolean getShowCellNuclei(); Query the current OverlayOptions.DetectionDisplayMode to see if nuclei ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. getShowCellBoundaries; public boolean getShowCellBoundaries(); Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. setDetectionDisplayMode; public void setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode); Set the current OverlayOptions.DetectionDisplayMode. Parameters:; mode - the requested mode to set. detectionDisplayModeProperty; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty(); Property representing the current OverlayOptions.DetectionDisplayMode. Returns:; See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode). getThickStrokeWidth; public float getThickStrokeWidth(double downsample); Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). Parameters:; downsample - downsample at which the annotations should be drawn; Returns:; preferred stroke thickness to use. setShowTMAGrid; public void setShowTMAGrid(boolean show); Show the TMA grid on the image, if present. Parameters:; show - . setShowAnnotations; public void setShowAnnotations(boolean show); Show the annotations on the image. Parameters:; show - . setShowNames; public void setShowNames(boolean show); Show the object names on the image. Parameters:; show - . setFontSize; public void setFontSize(float",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:11012,detect,detectionDisplayModeProperty,11012,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detectionDisplayModeProperty']
Safety,"be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. tRange(int, int) - Method in class qupath.lib.images.writers.TileExporter. Define the range of timepoints to process. TRANSFER_ANNOTATION - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; transform(AffineTransform) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Apply an AffineTransform to the server. transformAllObjects(AffineTransform) - Static method in class qupath.lib.scripting.QP. Apply an affine transform to all selected objects in the current hierarchy. transformAllObjects(PathObjectHierarchy, AffineTransform) - Static method in class qupath.lib.scripting.QP. Apply an affine transform to all selected objects in the specified hierarchy. TransformedServerBuilder - Class in qupath.lib.images.servers. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformedServerBuilder(ImageSe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1049100,predict,prediction,1049100,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"bject centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:254671,detect,detection,254671,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,bjectClassifier (implements qupath.lib.io.UriResource). qupath.lib.gui.viewer.overlays.AbstractOverlay (implements qupath.lib.gui.viewer.overlays.PathOverlay). qupath.lib.gui.viewer.overlays.AbstractImageOverlay. qupath.lib.gui.viewer.overlays.BufferedImageOverlay (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. qupath.lib.gui.viewer.overlays.GridOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.opencv.CellCountsCV; qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupa,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:6128,detect,detect,6128,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['detect'],['detect']
Safety,"bjectHierarchy hierarchy,; String measurementName,; double... thresholds). Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. resetIntensityClassifications; public static void resetIntensityClassifications(Collection<PathObject> pathObjects); Reset the intensity classifications for all specified objects.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; pathObjects - . resetIntensityClassifications; public static void resetIntensityClassifications(PathObjectHierarchy hierarchy); Reset the intensity classifications for all detections in the specified hierarchy.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; hierarchy - . resetIntensityClassifications; public static void resetIntensityClassifications(); Reset the intensity classifications for all detections in the current hierarchy.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). writeImageRegion; public static void writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path); throws IOException; Write an image region image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; request - ; path - ; Throws:; IOException. writePredictionImage; public static void writePredictionImage(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String path); throws IOException; Write the output of applying a pixel classifier to an image. The writer will be determined based on the file extension. Parameters:; imageData - image to which the classifier should be applied; classifier - pixel classifier; path - output file path; Throws:; IOException. writePredictionImage; public static void writePredicti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:104980,detect,detections,104980,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,"bjectTools. Get a user-friendly name for a specific type of PathObject, based on its Java class. getSum() - Method in class qupath.lib.analysis.stats.Histogram. Get the sum of all the values being histogrammed. getSum() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the sum of all non-NaN values that were added. getSummary() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a summary string representing this image entry. getSupportedObjects(Collection<? extends PathObject>, Collection<Class<? extends PathObject>>) - Static method in class qupath.lib.objects.PathObjectTools. From a collection of available objects, extract those that are instances of specified supported classes. getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:525308,detect,detect,525308,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"bjects. createDetectionObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified detection object. createDetectionObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object. createDetectionObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object with a specified measurement list. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetections(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create detection objects by tracing contours in a labelled image. createDetections(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create detection objects from a labelled image. createDetectionsFromPixelClassifier(String, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PixelClassifier, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(ImageData<BufferedImage>, PixelClassifier, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:174739,detect,detection,174739,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ble) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getPreferredPixelSizeMicrons(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get the preferred pixel size that would be used for the specified ImageData and ParameterList. getPreferredResolutionLevel(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the preferred resolution level to request regions from an ImageServer at a specified downsa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:489339,detect,detect,489339,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"blic SvgTools.SvgBuilder pathObjects(PathObject... pathObjects); Specify an array of objects to export.; This may be used instead of imageData(ImageData) if the raster image is not required. Parameters:; pathObjects - ; Returns:; this builder. includeOverlays; public SvgTools.SvgBuilder includeOverlays(boolean doInclude); Specify whether overlays should be included.; This only has an effect if images are also included, and a viewer is provided. Parameters:; doInclude - ; Returns:; this builder. options; public SvgTools.SvgBuilder options(OverlayOptions options); Specify the overlay options to control display.; This will override any previous customizations added to the builder. Parameters:; options - ; Returns:; this builder. fillAnnotations; public SvgTools.SvgBuilder fillAnnotations(boolean doFill); Request whether annotations are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. fillDetections; public SvgTools.SvgBuilder fillDetections(boolean doFill); Request whether detections are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. showSelection; public SvgTools.SvgBuilder showSelection(boolean doShow); Request whether selected objects are displayed. Parameters:; doShow - ; Returns:; this builder. region; public SvgTools.SvgBuilder region(ImageRegion region); Specify the region (in terms of the full resolution image space) for export.; If a RegionRequest is supplied, the downsample factor will be used if none has otherwise been set. Parameters:; region - ; Returns:; this builder. downsample; public SvgTools.SvgBuilder downsample(double downsample); Specify downsample factor (defined in terms of the full resolution image space). Parameters:; downsample - ; Returns:; this builder. width; public SvgTools.SvgBuilder width(int width); Export image width. Parameters:; width - width (in pixels) of the SVG image.; Returns:; this builder. height; public SvgTools.SvgBuilder height(int height); Export image height. Parameters:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:5471,detect,detections,5471,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,1,['detect'],['detections']
Safety,"boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:5206,predict,predictWithLock,5206,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,6,['predict'],['predictWithLock']
Safety,"box of hte ROI is used directly and the model is assumed able to ; resize if needed.; If the patch width and height are anything else, an IllegalArgumentException is thrown. Parameters:; model - the model for prediction; pathObject - the object to classify; server - the image supplying the patch; downsample - the requested downsample at which classification should be applied; width - the fixed input size; height - the fixed input size; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability) ; in the measurement list of the object.; Returns:; true if the classification of the object has changed, false otherwise; Throws:; IOException - if the patch cannot be read; IllegalArgumentException - if the patch width or height are invalid. classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement); Apply a classification model to an existing image patch to classify an object. Parameters:; model - the model for prediction; pathObject - the object to classify; input - image patch; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability) ; in the measurement list of the object.; Returns:; true if the classification of the object has changed, false otherwise. segment; public static Mat segment(SegmentationModel model,; ImageServer<BufferedImage> server,; RegionRequest request); throws IOException; Apply a segmentation model to an image region. Parameters:; model - the segmentation model; server - the image; request - the region; Returns:; a Mat containing the segmentation results; Throws:; IOException - if the input image could not be read. segment; public static Mat segment(SegmentationModel model,; Mat ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:11873,predict,predictionMeasurement,11873,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['predict'],['predictionMeasurement']
Safety,"c abstract boolean supportsProbabilities(); Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Returns:; true if (pseudo-)probabilities can be provided. getParameterList; public abstract ParameterList getParameterList(); Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Returns:; the parameter list for this classifier. createTrainData; public abstract TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. train(TrainData). train; public abstract void train(TrainData trainData); Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. createTrainData(Mat, Mat, Mat, boolean). predict; public abstract void predict(Mat samples,; Mat results,; Mat probabilities); Apply classification, optionally requesting probability estimates.; ; Not all StatModels are capable of estimating probability values, in which case ; probabilities will be null (if not supplied) or an empty matrix.; ; Note also that if probabilities are required, these will not necessarily be normalized ; between 0 and 1 (although they generally are). They represent a best-effort for the ; StatModel to provide confidence values, but are not (necessarily) strictly probabilities.; ; For example, RTrees estimates probabilities based on the proportion of votes for the 'winning' ; classification. Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:4586,predict,predict,4586,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,2,['predict'],['predict']
Safety,"c method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified detection object. createDetectionObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object. createDetectionObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object with a specified measurement list. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetections(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create detection objects by tracing contours in a labelled image. createDetections(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create detection objects from a labelled image. createDetectionsFromPixelClassifier(String, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:174334,detect,detection,174334,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"cated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractTileableDetectionPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>; qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; CellCountsCV, DoGSuperpixelsPlugin, SLICSuperpixelsPlugin, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public abstract class AbstractTileableDetectionPlugin<T>; extends AbstractDetectionPlugin<T>; Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps.; ; Particularly useful for tasks such as cell detection. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractTileableDetectionPlugin();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. protected abstract ObjectDetector<T>; createDetector(ImageData<T> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. protected abstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:1174,detect,detection,1174,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['detect'],['detection']
Safety,"cation and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String...",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14308,detect,detection,14308,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['detect'],['detection']
Safety,"cationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was last synchronized. getMoreTranslucentColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly more) translucent version of the specified color. getMousePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getMousePosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor position within this viewer, or null if the cursor is outside the viewer. getName() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getName() - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getName() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getName() - Method in class qupath.imagej.gui.IJExtension;  ; getName() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getName() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getName() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getName() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getName() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getName() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getName() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getName() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:447359,detect,detect,447359,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"cations for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChanne",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2909,predict,prediction,2909,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['predict'],['prediction']
Safety,"ceDialog(String, String, T[], T) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). showConfirmDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a confirm dialog (OK/Cancel). showConfirmDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a confirm dialog (OK/Cancel). showConnectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showDeprecatedCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showDetectionMeasurementManager(QuPathGUI, ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Show a simple dialog for viewing (and optionally removing) detection measurements. showDetectionMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecate",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:964096,detect,detection,964096,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"cePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addColorPropertyPreference(IntegerProperty, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addDirectoryPropertyPreference(Property<String>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addPropertyPreference(Property<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.createPropertySheetItem(Property<T>, Class<? extends T>). use PropertyItemBuilder instead. qupath.lib.gui.prefs.PathPrefs.getUserPreferences(). since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). qupath.lib.gui.prefs.PathPrefs.useSystemMenubarProperty(). qupath.lib.gui.QuPathGUI.createSharedPoolCompletionService(Class<V>). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.createSingleThreadExecutor(Object). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.submitShortTask(Runnable). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.createFeatureDisplayOverlay(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer). Use PixelClassificationOverlay.create(OverlayOptions, Function, ImageRenderer) instead. qupath.lib.images.servers.ImageServer.readBufferedImage(RegionRequest). since v0.4.0. Implementations of ImageServer should override ImageServer.readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:3942,avoid,avoid,3942,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['avoid'],['avoid']
Safety,"ces(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions). Export specified objects to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; PathIO.GeoJsonExportOp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14889,detect,detection,14889,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['detect'],['detection']
Safety,"chy.events.PathObjectSelectionModel. Ensure the specified objects are deselected. DETACH_VIEWER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions;  ; DETACH_VIEWER - Variable in class qupath.lib.gui.actions.ViewerActions;  ; detachActiveViewerFromGrid() - Method in class qupath.lib.gui.viewer.ViewerManager. Detach the currently active viewer from the viewer grid, if possible. detachViewerFromGrid(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Detach the specified viewer from the viewer grid, if possible. detect(DetectionModel, Mat, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. detect(DetectionModel, ImageServer<BufferedImage>, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. DetectCytokeratinCV - Class in qupath.opencv. Simple command to detect tumor regions stained with cytokeratin. DetectCytokeratinCV() - Constructor for class qupath.opencv.DetectCytokeratinCV;  ; detection() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:252243,detect,detection,252243,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ciatedImageList; List<String> getAssociatedImageList(); Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Returns:; See Also:. getAssociatedImage(String). getAssociatedImage; T getAssociatedImage(String name); Get the image for a given associated image name. Parameters:; name - ; Returns:; See Also:. getAssociatedImageList(). isEmptyRegion; boolean isEmptyRegion(RegionRequest request); Test whether a region is empty, i.e. it contains nothing to be painted (e.g. the server paints objects; but there are no objects present in the region) and readBufferedImage(RegionRequest region) would return null.; ; This makes it possible to avoid a (potentially more expensive) request to readRegion(RegionRequest),; or to add it to a request queue, if we know there will be nothing to show for it.; ; Note: if this method returns true, it is safe to assume readBufferedImage would return null.; However, even if the method returns false it is possible that the region is still empty -; the purpose of this method is to assist performance, and it should return quickly.; Therefore if the calculations needed to identify if the region is empty are too onerous, it may conservatively return false. Parameters:; request - ; Returns:. getPixelType; PixelType getPixelType(); The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Returns:. getChannel; ImageChannel getChannel(int channel); Request information for one channel (0-based index). Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getMetadata; ImageServerMetadata getMetadata(); Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Returns:; See Also:. getOriginalMetadata(). setMetadata; void setMetadata(ImageServerMetada",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:12539,safe,safe,12539,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['safe'],['safe']
Safety,"cified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Specified by:; createDetector in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected int getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled.; ; If the overlap is 0, then tile boundaries are likely to be visible in the results.; ; If the overlap is > 0, then the overlap should also be > the expected largest size of a detected object -; otherwise objects may be lost of trimmed when overlaps are resolved. This is because (currently) ; the resolution of overlapping detections involves taking the largest one, rather than (for example) merging them.; ; (Merging may be permitted in later versions, but only where measurements are not made by the plugin -; since merged objects may require different measurements, e.g. for area or mean than can be easily computed; in a general way from the individual objects being merged). Specified by:; getTileOverlap in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:; The overlap size in pixels, or 0 if overlapped tiles are not supported. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specifi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:5464,detect,detected,5464,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,2,['detect'],['detected']
Safety,"class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellDetection;  ; WatershedCellMembraneDetection - Class in qupath.imagej.detect.cells. Cell detection that takes into consideration membrane staining. WatershedCellMembraneDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellMembraneDetection. Default constructor. watershedExpandLabels(ImageProcessor, double, boolean) - Static method in class qupath.imagej.processing.Watershed. Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging. watershedIntensitySplit(Mat, Mat, double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. WatershedNucleiCV - Class in qupath.opencv. Alternative (incomplete) attempt at nucleus segmentation. WatershedNucleiCV() - Constructor for class qupath.opencv.WatershedNucleiCV;  ; WebViews - Class in qupath.lib.gui.tools. Helper class for creating a WebView in a standardized way. WebViews() - Constructor for class qupath.lib.gui.tools.WebViews;  ; WEIGHTED_S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1104720,detect,detection,1104720,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:256117,detect,detectionToAnnotationDistances,256117,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:2058,detect,detections,2058,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,1,['detect'],['detections']
Safety,"convert the output into detection objects. createDetectionOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetections(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create detection objects by tracing contours in a labelled image. createDetections(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create detection objects from a labelled image. createDetectionsFromPixelClassifier(String, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PixelClassifier, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(ImageData<BufferedImage>, PixelClassifier, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PathObjectHierarchy, ImageServer<BufferedImage>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.PositiveCellDetection. Wrap the detector to apply any required classification. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:175457,detect,detection,175457,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"counting grid. getStage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get the help viewer stage. getStage() - Method in class qupath.lib.gui.commands.PathObjectGridView. Get the stage used to show the grid view. getStage() - Method in class qupath.lib.gui.JavadocViewer. Get the stage used to show the javadocs. getStage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the stage used to display the image. getStage() - Method in class qupath.lib.gui.QuPathGUI. Get the main QuPath stage. getStage() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Get the stage for this script editor. getStage() - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Get the stage for display. getStage() - Method in class qupath.process.gui.commands.density.DensityMapDialog. Get the stage. getStain(int) - Method in class qupath.lib.color.ColorDeconvolutionStains. Get a specified color deconvolution stain vector, where n should be 1, 2 or 3 ; (because color deconvolution on a 3-channel image can recover [to some extent] up to 3 stains). getStainNumber(StainVector) - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the number for a specific stain (1, 2 or 3). getStainProjection(int, double, double, double, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Calculate magnitude of projection of pixel OD onto stain OD. getStainRejection(int, double, double, double, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Calculate magnitude of rejection of pixel OD onto stain OD. getStains(boolean) - Method in class qupath.lib.color.ColorDeconvolutionStains. Get a collection of all the stains. getStartTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the first recorded frame. getStartX() - Method in class qupath.lib.gui.viewer.GridLines. Starting x coordinate for any counting grid (usually 0). getSt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:520258,recover,recover,520258,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['recover'],['recover']
Safety,"ct; Class to generate a PixelProcessor when using ImageJ for the primary image representation. Constructor Summary; Constructors. Constructor; Description; ImageJProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<ImagePlus,ImagePlus,Object>; builder(Processor<ImagePlus,ImagePlus,Object> processor). Create a PixelProcessor.Builder for an ImageJ ImagePlus. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<ImagePlus>; createImagePlusImageSupplier(). Create an ImageSupplier that returns an ImageJ ImagePlus. static MaskSupplier<ImagePlus,ImagePlus>; createImagePlusMaskSupplier(). Create a MaskSupplier that returns an ImageJ ByteProcessor. static <U> OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U>; createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter for one specify type. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:1525,detect,detection,1525,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,1,['detect'],['detection']
Safety,"ction, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; PreferencePane - Class in qupath.lib.gui.panes. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane() - Constructor for class qupath.lib.gui.panes.PreferencePane;  ; PreferencePane.AppearancePreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.DrawingPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.ExtensionPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.GeneralPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.InputOutputPr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:778575,predict,predictWithLock,778575,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,3,['predict'],"['predict', 'predictWithLock']"
Safety,"ctionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed di",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:256413,detect,detectionToAnnotationDistances,256413,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"ctor stain,; boolean whiteBackground). Get an IndexColorModel representing a color deconvolution stain. static Color; getMoreTranslucentColor(Color color). Get a (slightly more) translucent version of the specified color. static Color; getTranslucentColor(Color color). Get a (slightly) translucent version of the specified color. static Color; scaleColor(Color color,; double factor). Get a scaled version of the specified color, where the RGB values are independently scaled by a specified factor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_WHITE; public static final Color TRANSLUCENT_WHITE; White, with 50% opacity. TRANSLUCENT_BLACK; public static final Color TRANSLUCENT_BLACK; Black, with 50% opacity. Constructor Details. ColorToolsAwt; public ColorToolsAwt(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb,; boolean hasAlpha); Get cached color, explicitly stating whether alpha should be included or not. Parameters:; rgb - ; hasAlpha - ; Returns:. getIndexColorModel; public static IndexColorModel getIndexColorModel(StainVector stain,; boolean whiteBackground); Get an IndexColorModel representing a color deconvolution stain.; The color is just an approximation for visualization purposes, it do",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:3349,avoid,avoid,3349,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,1,['avoid'],['avoid']
Safety,"cts are problematic); Returns:; Polygon in which points are arranged in order, row-by-row, starting from the top-left corner of the grid. makeBinaryImage; public static ByteProcessor makeBinaryImage(ImageProcessor ip,; double coreDiameterPx,; Roi roi,; boolean isFluorescence); Make a binary image depicting (hopefully) the TMA cores.; The diameter of each core, in pixels, is used to determine filter sizes:; - for background estimation (morphological opening); - for morphological cleaning of the thresholded image; The threshold itself is computed using the triangle method. Parameters:; ip - - the TMA slide image - this should show cores as dark-on-light (or in colour).; Fluorescence images may be inverted beforehand.; coreDiameterPx - - typical diameter of a TMA core, given in pixels; roi - - optionally null; everything outside the ROI will be set to zero.; isFluorescence - - true if this is a fluorescence image, false if it is brightfield.; Returns:; ByteProcessor with detected regions having values 255, background having the value 0. fitCorePolygonToGrid; public static Polygon fitCorePolygonToGrid(Polygon poly,; double coreDiameterPx,; int nHorizontal,; int nVertical); Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid.; Essentially this amounts to sorting the points starting from the top left,; continuing along each row.; In practice the process is more complicated (and less certain to be correct...); because coordinates in the same TMA row cannot be trusted to occur with the same image y coordinate,; similarly coordinates in the same TMA column can have different x coordinates. Parameters:; poly - - The original centroid coordinates; this should have exactly nHorizontal * nVertical points.; coreDiameterPx - - Approximate diameter of one TMA core (used to determine potential variability between core centroids); nHorizontal - - The number of cores in each row; nVertical - - The number of cores in each column; Returns:; A polyg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html:3474,detect,detected,3474,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,1,['detect'],['detected']
Safety,"d Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:4673,abort,abort,4673,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['abort'],['abort']
Safety,"d after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; PreferencePane - Class in qupath.lib.gui.panes. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane() - Constructor for class qupath.lib.gui.panes.PreferencePane;  ; PreferencePane.AppearancePreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.DrawingPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.ExtensionPreferences - Class in qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:778464,predict,predictWithLock,778464,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predictWithLock']
Safety,"d in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Timestamp of the last change (probably in milliseconds). getLastResultsDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatterns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:422947,detect,detect,422947,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"d to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. tRange(int, int) - Method in class qupath.lib.images.writers.TileExporter. Define the range of timepoints to process. TRANSFER_ANNOTATION - Variable in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1048337,predict,prediction,1048337,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"d to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. tRange(int, int) - Method in class qupath.lib.images.writers.TileExporter. Define the range of timepoints to process. TRANSFER_ANNOTATION - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; transform(AffineTransform) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Apply an AffineTransform to the server. transformAllObjects(AffineTransform) - Static ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1048591,predict,prediction,1048591,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"d upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(ImageData<BufferedImage>, PixelClassifier, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PathObjectHierarchy, ImageServer<BufferedImage>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.PositiveCellDetection. Wrap the detector to apply any required classification. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; createDetector(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. createDisk(int, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Create a disk filter. createDocument() - Method in class qupath.lib.extension",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:176476,detect,detect,176476,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"d. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.EMClusterer. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:1234,predict,predict,1234,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,1,['predict'],['predict']
Safety,"d. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Interface ImageRegionRenderer. All Known Implementing Classes:; DefaultImageRegionStore. public interface ImageRegionRenderer; Interface for painting regions of an ImageServer onto a Graphics object. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer renderer). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds). Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Method Details. paintRegionCompletely; void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds); Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; observer - an ImageObserver (often ignored); renderer - an ImageRenderer to convert im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html:1351,abort,abort,1351,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,1,['abort'],['abort']
Safety,"d. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class AreaROI. java.lang.Object; qupath.lib.roi.AreaROI. All Implemented Interfaces:; Serializable, ROI. public class AreaROI; extends Object; implements Serializable; Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions.; ; It may be decomposed into one or more polygons (vertices), in which case the sign of the area is important ; in indicating whether the region should be considered 'positive' or a hole.; ; The underlying idea is based on java.awt.Area, but implemented so as to avoid a dependency on AWT.; ; However, because this implementation is relatively simple, it doesn't do the complicated checking and ; computations of AWT Areas - and so ought not be used directly. Rather, AWTAreaROI is strongly to be preferred.; ; The real usefulness of this class is in enabling Serialization of all ROIs to avoid a dependency on AWT,; since potentially a deserialized version of this could then be used to create different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top le",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:1195,avoid,avoid,1195,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['avoid'],['avoid']
Safety,"d; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.BoostClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.BoostClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on Boost. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:1254,predict,predict,1254,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,1,['predict'],['predict']
Safety,"dDisplaySettings(String name). Load a display settings object from a file path or from the current project. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static File; promptForFile(String... extensions). Prompt the user to select a file from a file chooser. static boolean; runPlugin(String className,; String args);  ; static boolean; runPlugin(String className,; ImageData<?> imageData,; String args);  ; static void; saveAnnotationMeasurements(String path,; String... includeColumns). Save annotation measurements for the current image. static void; saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save annotation measurements for the specified image. static void; saveDetectionMeasurements(String path,; String... includeColumns). Save detection measurements for the current image. static void; saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save detection measurements for the specified image. static void; saveImageMeasurements(String path,; String... includeColumns). Save whole image measurements for the current image. static void; saveImageMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save whole image measurements for the specified image. static void; saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the current image for objects of a fixed type. static void; saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the specified image for objects of a fixed type. static void; saveTMAMeasurements(String path,; String... includeColumns). Save TMA measurements for the current image. static void; saveTMAMeasurements(Im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:3352,detect,detection,3352,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['detect'],['detection']
Safety,"dWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin cou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:3514,detect,detected,3514,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,1,['detect'],['detected']
Safety,"date, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; task",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:3755,detect,detected,3755,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,1,['detect'],['detected']
Safety,"description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; protected Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(). addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Descri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:3844,abort,abort,3844,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['abort'],['abort']
Safety,"detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:256546,detect,detection,256546,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['detect'],['detection']
Safety,"dict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:776467,predict,predict,776467,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"dictionFunction. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; AbstractDnnModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:2113,predict,prediction,2113,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,2,['predict'],['prediction']
Safety,"directory path relative to the current project, but do not make ; any changes on the file system. static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Deprecated.; In the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build an ImageServer with the class BufferedImage. static ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Build an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:4420,detect,detections,4420,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,3,"['detect', 'predict']","['detection', 'detections', 'prediction']"
Safety,"ds.ProjectCommands. Get an RGB thumbnail for an image server, suitable for showing as a project thumbnail. getTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. getTileCacheSize() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Get the tile cache size, in bytes. getTileHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile at the tile resolution. getTileHeight() - Method in class qupath.lib.objects.utils.Tiler. Get the height of output tiles. getTileObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all tile objects in the hierarchy. getTileObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current tile objects. getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV. Returns zero - indicating no overlap... getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getTileOverlap(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. getTileRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the tile request, if available. getT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:533462,detect,detect,533462,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"dth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6565,predict,prediction,6565,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['predict'],['prediction']
Safety,"d BufferedImage createDefaultRGBImage(int width,; int height); Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Parameters:; width - ; height - ; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). allowSmoothInterpolation; protected boolean allowSmoothInterpolation(); Returns true if this server is permitted to use smooth interpolation when resizing.; The default implementation returns true if the channel type is not ImageServerMetadata.ChannelType.CLASSIFICATION. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:5914,avoid,avoid,5914,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['avoid'],['avoid']
Safety,"e ROI bounds are used. Parameters:; server - the image server; roi - the ROI for which the patch should be extracted; downsample - the downsample value; width - the patch width, or -1 if the ROI bounds should be used; height - the patch height, or -1 if the ROI bounds should be used; borderPadding - the border padding for out-of-bounds requests, for use with OpenCV's copyMakeBorder; Returns:; Throws:; IOException; See Also:. readPatch(ImageServer, ROI, double, int, int). classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException; Apply a classification model to an image patch to classify an object. Parameters:; model - the model for prediction; pathObject - the object to classify; server - the image supplying the patch; downsample - the requested downsample at which classification should be applied; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability) ; in the measurement list of the object.; Returns:; true if the classification of the object has changed, false otherwise; Throws:; IOException - if the patch cannot be read. classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException,; IllegalArgumentException; Apply a classification model to an image patch to classify an object.; If a patch width and height both > 0, the patch is cropped around the ROI centroid and padded if necessary.; If a patch width and height both < 0, the bounding box of hte ROI is used directly and the model is assumed able to ; resize if needed.; If the patch width and height are anythin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:9793,predict,prediction,9793,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,3,['predict'],"['prediction', 'predictionMeasurement']"
Safety,"e detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinary(ByteProcessor, double, int, int, Roi) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. detectVendor(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to detect the vendor of the image at the specified path. determinant() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:257624,detect,detectionToAnnotationDistancesSigned,257624,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionToAnnotationDistancesSigned']
Safety,"e for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:66486,detect,detect,66486,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detect']
Safety,"e have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual.; Note the order of the stains must be 1-Hematoxylin, 2-DAB, 3-residual (missing). Returns:. changeStain; public ColorDeconvolutionStains changeStain(StainVector stainNew,; int stainNumber); Create a new stains object, identical to this one but for one StainVector having been changed. Parameters:; stainNew - ; stainNumber - ; Returns:. changeName; public ColorDeconvolutionStains changeName(String name); Create a new stains object with the same StainVectors but a new name. Parameters:; name - ; Returns:. changeMaxValues; public ColorDeconvolutionStains changeMaxValues(double maxRed,; double maxGreen,; double maxBlue); Create a new stains object with the same StainVectors but new max (background) values. Parameters:; maxRed - ; maxGreen - ; maxBlue - ; Returns:. getStain; public StainVector getStain(int n); Get a specified color deconvolution stain vector, where n should be 1, 2 or 3 ; (because color deconvolution on a 3-channel image can recover [to some extent] up to 3 stains).; ; If only 2 stains are set (i.e. stain1 and stain2), then a third stain is computed; orthogonal to the first two, with the name 'residual'. Parameters:; n - ; Returns:; The requested stain vector, or null if n is out of range or the stain was not set. getStains; public Collection<StainVector> getStains(boolean includeResidual); Get a collection of all the stains. Parameters:; includeResidual - if true, include residual stains in the list. If false, only include non-residual stains.; Returns:; a collection of stains. getName; public String getName(); Get the stains name. Returns:. getStainNumber; public int getStainNumber(StainVector stain); Get the number for a specific stain (1, 2 or 3). Parameters:; stain - ; Returns:. getMaxRed; public double getMaxRed(); Get the maximum value for the red channel (default = 255). Returns:. getMaxGreen; public double getMaxGreen(); Get the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html:8596,recover,recover,8596,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,1,['recover'],['recover']
Safety,"e if a project was created, false otherwise (e.g. the user cancelled). promptToOpenProject; public static boolean promptToOpenProject(QuPathGUI qupath); Prompt the user to open an existing project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be opened.; Returns:; true if a project was opened, false otherwise (e.g. the user cancelled). launchTMADataViewer; public static void launchTMADataViewer(QuPathGUI qupath); Open new window with the TMA data viewer. Parameters:; qupath - current QuPathGUI instance (may be null). distanceToAnnotations2D; public static void distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances); Compute the distance between all detections and the closest annotation, for all annotation classifications. Parameters:; imageData - the image data to process; signedDistances - if true, use signed distances. detectionCentroidDistances2D; public static void detectionCentroidDistances2D(ImageData<?> imageData); Compute the distance between the centroids of all detections, for all available classifications. Parameters:; imageData - the image data to process. promptToSetGridLineSpacing; public static void promptToSetGridLineSpacing(OverlayOptions options); Prompt to input the spacing for the grid lines optionally displayed on viewers. Parameters:; options - the OverlayOptions that manage the grid lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists and the user did not create one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAdd",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:22819,detect,detections,22819,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['detect'],['detections']
Safety,"e measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6275,detect,detections,6275,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,"e of the plugin class. getPointObjects(Class<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get objects that contain Point ROIs. getPointObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with point ROIs from a collection of objects. getPoolSizeProp() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager;  ; getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClass. Get a standalone or derived Positive classification. getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). getPostprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any postprocessing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:487917,predict,prediction,487917,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['predict'],['prediction']
Safety,"e the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:254007,detect,detectionDisplayModeProperty,254007,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionDisplayModeProperty']
Safety,"e the shortest distance from a coordinate to one of a collection of target coordinates. static double; computeCoordinateDistance(Coordinate coord,; STRtree tree). Compute the distance to the nearest coordinate stored within an STRtree. static double; computeDistance(Coordinate coord,; Geometry geometry,; PointOnGeometryLocator locator). Compute the (unsigned) shortest distance from a coordinate to a target geometry, or zero if the coordinate occurs ; within. static double; computeDistance(Coordinate coord,; Geometry geometry,; PointOnGeometryLocator locator,; boolean signedDistance). Compute the shortest distance from a coordinate to a target geometry. static STRtree; createCoordinateCache(Collection<Coordinate> coords). Create an STRtree to enable nearest neighbor searching for a collection of coordinates. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Methods inherited from class java.lang",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:2873,detect,detection,2873,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,2,['detect'],['detection']
Safety,"e, or empty to indicate that all measurements should be exported. saveAnnotationMeasurements; public static void saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save annotation measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveTMAMeasurements; public static void saveTMAMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save TMA measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveDetectionMeasurements; public static void saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save detection measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the current image for objects of a fixed type. Parameters:; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:21654,detect,detection,21654,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['detect'],['detection']
Safety,"e. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builde",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6385,predict,prediction,6385,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,3,['predict'],"['prediction', 'predictionOp']"
Safety,"e>, PixelClassifier, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PathObjectHierarchy, ImageServer<BufferedImage>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.PositiveCellDetection. Wrap the detector to apply any required classification. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; createDetector(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. createDisk(int, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Create a disk filter. createDocument() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Create a String representation of the SVG document. createDoubleArrowEventHandler() - Static method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:176604,detect,detect,176604,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"eImage; extractBand(Raster raster,; int band). Extract a band from a a raster as a SimpleImage. static List<PathObject>; labelsToAnnotations(Path path,; RegionRequest request). Convert a labeled image to annotation objects. static List<PathObject>; labelsToAnnotations(Collection<Path> paths,; boolean mergeByLabel). Convert labeled images to annotation objects, determining the region from the filename if possible. static List<PathObject>; labelsToCells(Path path,; RegionRequest request). Convert a 2-channel labeled image to cell objects. static List<PathObject>; labelsToCells(Collection<Path> paths,; boolean mergeByLabel). Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. static List<PathObject>; labelsToDetections(Path path,; RegionRequest request). Convert a labeled image to detection objects. static List<PathObject>; labelsToDetections(Collection<Path> paths,; boolean mergeByLabel). Convert labeled images to detection objects, determining the region from the filename if possible. static List<PathObject>; labelsToObjects(Path path,; RegionRequest request,; BiFunction<ROI,Number,PathObject> creator). Convert a labeled image to objects. static boolean; maybeCellLabels(Raster raster,; int bandNuclei,; int bandCells,; int minLabel). Check whether a raster could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static boolean; maybeCellLabels(SimpleImage imageNuclei,; SimpleImage imageCells,; int minLabel). Check whether two images could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static RegionRequest; parseRegion(String name,; int width,; int height). Attempt to parse a RegionRequest corresponding to an image region from the file name. static Map<Integer,Geometry>; traceGeometries(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; ContourTracing.ChannelThreshold... thresholds). Trace one or more geomet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:4648,detect,detection,4648,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['detect'],['detection']
Safety,"eImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108156,detect,detection,108156,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,3,['detect'],['detection']
Safety,"eMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurement, importObjectsFromFile, insertO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7904,detect,detectionToAnnotationDistancesSigned,7904,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['detect'],['detectionToAnnotationDistancesSigned']
Safety,"ePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. addWorkflowStep; protected void addWorkflowStep(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Overrides:; addWorkflowStep in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:5300,detect,detection,5300,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,2,"['avoid', 'detect']","['avoid', 'detection']"
Safety,"ePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Des",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:6055,detect,detected,6055,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['detect'],['detected']
Safety,"ePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects.; ; The behavior depends upon whatever the Processor return.; For example, the converter is able to generate one or more objects from; ; an ImageJ Roi, or list or array of Roi objects; an ImageJ Overlay; a BinaryProcessor (creating a single object); a ByteProcessor or ShortProcessor (treated as a labeled image, to create 0 or more objects); another ImageProcessor with a threshold set (handled similar to a binary image); an ImagePlus, after extracting the ImageProcessor. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <U>; OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U> createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter for one specify type.; See #createObjectConverter(Function) for more details; this method reduces ambiguity by handling only one; possible kind of output. Type Parameters:; U - ; Parameters:; cls - the class to handle; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. builder; public static PixelProcessor.Builder<ImagePlus,ImagePlus,Object> builder(Processor<ImagePlus,ImagePlus,Object> processor); Create a PixelProcessor.Builder for an ImageJ ImagePlus.; By default, this will attempt to convert any output to detection objects - but the builder may be further; customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:4754,detect,detection,4754,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,3,['detect'],['detection']
Safety,"eRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:109710,detect,detections,109710,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"eTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . smoothMeasurements; public static void smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames); Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Parameters:; pathObjects - ; measurements - ; fwhmPixels - ; fwhmString - ; withinClass - ; useLegacyNames - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:5997,detect,detection,5997,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,1,['detect'],['detection']
Safety,"eanProperty showConnectionsProperty(). Returns:; boolean property indicating whether collections between objects should be shown (e.g. after Delaunay triangulation); See Also:. getShowConnections(); setShowConnections(boolean). getShowPixelClassification; public boolean getShowPixelClassification(). Returns:; true if the current active pixel classification should be shown, false otherwise. getShowAnnotations; public boolean getShowAnnotations(). Returns:; true if annotations should be displayed in viewers, false otherwise. getShowNames; public boolean getShowNames(). Returns:; true if annotation names should be displayed in viewers, false otherwise. getFontSize; public float getFontSize(). Returns:; the requested font size for showing annotation names on the viewer. getShowTMAGrid; public boolean getShowTMAGrid(). Returns:; true if any TMA grids should be displayed in viewers, false otherwise. getShowDetections; public boolean getShowDetections(). Returns:; true if detections should be displayed in viewers, false otherwise. getShowConnections; public boolean getShowConnections(). Returns:; true if any calculated connections between objects should be displayed in viewers, false otherwise. getFillDetections; public boolean getFillDetections(). Returns:; true if detections should be displayed 'filled' in viewers, false otherwise. getFillAnnotations; public boolean getFillAnnotations(). Returns:; true if annotations should be displayed 'filled' in viewers, false otherwise. setShowGrid; public void setShowGrid(boolean showGrid); Set whether a counting grid should be shown in viewers. Parameters:; showGrid - ; See Also:. setGridLines(GridLines). getShowGrid; public boolean getShowGrid(). Returns:; true if a counting grid should be displayed in viewers, false otherwise; See Also:. getGridLines(). getGridLines; public GridLines getGridLines(). Returns:; the GridLines object that defines how a counting grid may be show in viewers; See Also:. getShowGrid(). setGridLines; publ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:14347,detect,detections,14347,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detections']
Safety,"earMeasurements, clearMeasurements, clearRootMeasurements, clearRootMeasurements, clearSelectedObjects, clearSelectedObjects, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getPro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7752,detect,detectionCentroidDistances,7752,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['detect'],['detectionCentroidDistances']
Safety,"easurementBuilder<T>; below(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value below the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; below(PathClass pathClass). Set the classification for objects for which the specified measurement has a value below the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; belowEquals(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value below or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; belowEquals(PathClass pathClass). Set the classification for objects for which the specified measurement has a value below or equal to the threshold. ObjectClassifier<T>; build(). Build the classifier defined by the parameters of this builder. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; cells(). Set the filter to accept cell objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; detections(). Set the filter to accept all detection objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(PathClass pathClass). Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; filter(PathObjectFilter filter). Define the filter used to identify objects compatible with this classifier. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; threshold(double threshold). Set the threshold value used for the classification. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; tiles(). Set the filter to accept tile objects only. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:2937,detect,detections,2937,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,1,['detect'],['detections']
Safety,"ect being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideExtension;  ; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. OpenslideServerBuilder. Builder for Openslide ImageServer. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; OverlayActions. Actions that interact with OverlayOptions. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Padding. Requested padding for a 2D image. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have their values changed. Parameterizable. Interface for indicating that the implementing class takes adjustable parameters. ParameterList. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterPanelFX. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:36597,detect,detections,36597,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detections']
Safety,"ect. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:1500,detect,detection,1500,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html,1,['detect'],['detection']
Safety,"ectedObjects, clearSelectedObjects, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7840,detect,detectionToAnnotationDistances,7840,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"ects.PathObjects. Create a classified detection object with a specified measurement list. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetections(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create detection objects by tracing contours in a labelled image. createDetections(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create detection objects from a labelled image. createDetectionsFromPixelClassifier(String, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PixelClassifier, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(ImageData<BufferedImage>, PixelClassifier, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PathObjectHierarchy, ImageServer<BufferedImage>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:175059,detect,detection,175059,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ed by this viewer. getMaxFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute maximum features from all four rotations. getMaxGreen() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the green channel (default = 255). getMaxHeight() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the maximum height of the density map. getMaxNormalizedCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin, divided by the total counts across the entire histogram. getMaxRed() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the red channel (default = 255). getMaxROIHandleSize() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the maximum size for which ROI handles may be drawn. getMaxThreads() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the maximum number of threads that may be used during live prediction. getMaxThreshold() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the maximum threshold value. getMaxTime() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the time of the last event, or -1 if there are no events. getMaxValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum of all the values being histogrammed. getMaxValue() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the minimum value supported by this image. getMaxWidth() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the maximum width of the density map. getMaxX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the bottom right of the region bounding box. getMaxY() - Method in class qupath.lib.regions.ImageRegion. Get the y coordinate of the bottom right of the region bounding box. getMean() - Method in class qupath.lib.analy",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:435263,predict,prediction,435263,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"ed image to store the output; connectivity - either 4 or 8; Returns:; number of connected components, equal to the value of the highest integer label. createROIs; public static Map<Number,ROI> createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Convert integer labels into ROIs. Parameters:; matLabels - labelled image; each label should be an integer value; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; an ordered map containing all the ROIs that could be found; corresponding labels are keys in the map; // * @see #findROIs(Mat, RegionRequest, int, int); See Also:. ContourTracing.createROIs(SimpleImage, RegionRequest, int, int). createDetections; public static List<PathObject> createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Create detection objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; detection objects generated by tracing contours; See Also:. ContourTracing.createDetections(SimpleImage, RegionRequest, int, int). createAnnotations; public static List<PathObject> createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Create annotation objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:39817,detect,detection,39817,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['detect'],['detection']
Safety,"ed int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:2260,predict,prediction,2260,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,1,['predict'],['prediction']
Safety,"ed int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:2193,predict,prediction,2193,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,2,['predict'],['prediction']
Safety,"ed int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Spe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:2195,predict,prediction,2195,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,3,['predict'],['prediction']
Safety,"ed only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnno",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14005,detect,detection,14005,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['detect'],['detection']
Safety,"ed to display tile objects. See Also:. colorTileProperty(). autoSetAnnotationClass; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty; Classification that should automatically be applied to all new annotations. May be null. See Also:. autoSetAnnotationClassProperty(). alwaysPaintSelectedObjects; public static BooleanProperty alwaysPaintSelectedObjectsProperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. locationFontSizeProperty(). scalebarFontWeight; public static ObjectProperty<FontWeight> scalebarFontWeightProperty; Preferred font weight in the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:38699,detect,detections,38699,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detections']
Safety,"ed to make some charts 'live', e.g. if they ; relate to objects within the hierarchy of this data. Parameters:; imageData - the imageData to associated with this chart; Returns:; this builder. viewer; public Charts.PieChartBuilder viewer(QuPathViewer viewer); Specify a viewer. This can be used to make some charts 'live', e.g. if they ; relate to objects within the viewer. Parameters:; viewer - the viewer to associated with this chart; Returns:; this builder. width; public Charts.PieChartBuilder width(double width); Set the preferred width of the chart. Parameters:; width - preferred width; Returns:; this builder. height; public Charts.PieChartBuilder height(double height); Set the preferred height of the chart. Parameters:; height - preferred height; Returns:; this builder. size; public Charts.PieChartBuilder size(double width,; double height); Set the preferred size of the chart. Parameters:; width - preferred width; height - preferred height; Returns:; this builder. parent; public Charts.PieChartBuilder parent(Window parent); Set the parent window. If not set, QuPath will try to choose a sensible default.; This is useful to avoid the chart falling 'behind' other windows when not in focus.; ; This is relevant only if show() or toStage() will be called. Parameters:; parent - the requested parent window; Returns:; this builder. windowTitle; public Charts.PieChartBuilder windowTitle(String title); Title to use for the window, if the chart is shown.; ; This is relevant only if show() or toStage() will be called. Parameters:; title - window title; Returns:; this builder. build; public PieChart build(); Build a chart according to the specified parameters. Returns:; the chart. toStage; public Stage toStage(); Add the chart to a stage, but do not show it. Returns:; the stage containing this Chart.; See Also:. show(). show; public Stage show(); Add the chart to a stage, and show it in the Application thread. Returns:; the stage containing this Chart.; See Also:. toStage(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:7420,avoid,avoid,7420,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,1,['avoid'],['avoid']
Safety,"ed width of the chart. width(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the preferred width of the chart. width(double) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog width. width(int) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Export image width. width(int) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the full-resolution image width. windowTitle(String) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Title to use for the window, if the chart is shown. windowTitle(String) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Title to use for the window, if the chart is shown. windowTitle(String) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Title to use for the window, if the chart is shown. WITH_ICONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Show detections with ROI icons. WITHOUT_ICONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Show detections without ROI icons. workerComplete(TileWorker<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Every TileWorker should call this when the task is done!. Workflow - Class in qupath.lib.plugins.workflow. A collection of steps that relate to how an image has been - or should be - processed. Workflow() - Constructor for class qupath.lib.plugins.workflow.Workflow;  ; WorkflowCommandLogView - Class in qupath.lib.gui.panes. Show logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view display",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1107901,detect,detections,1107901,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"edROI(SimpleImage image,; double minThresholdInclusive,; double maxThresholdInclusive,; RegionRequest request). Create a traced ROI from a SimpleImage. static SimpleImage; extractBand(Raster raster,; int band). Extract a band from a a raster as a SimpleImage. static List<PathObject>; labelsToAnnotations(Path path,; RegionRequest request). Convert a labeled image to annotation objects. static List<PathObject>; labelsToAnnotations(Collection<Path> paths,; boolean mergeByLabel). Convert labeled images to annotation objects, determining the region from the filename if possible. static List<PathObject>; labelsToCells(Path path,; RegionRequest request). Convert a 2-channel labeled image to cell objects. static List<PathObject>; labelsToCells(Collection<Path> paths,; boolean mergeByLabel). Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. static List<PathObject>; labelsToDetections(Path path,; RegionRequest request). Convert a labeled image to detection objects. static List<PathObject>; labelsToDetections(Collection<Path> paths,; boolean mergeByLabel). Convert labeled images to detection objects, determining the region from the filename if possible. static List<PathObject>; labelsToObjects(Path path,; RegionRequest request,; BiFunction<ROI,Number,PathObject> creator). Convert a labeled image to objects. static boolean; maybeCellLabels(Raster raster,; int bandNuclei,; int bandCells,; int minLabel). Check whether a raster could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static boolean; maybeCellLabels(SimpleImage imageNuclei,; SimpleImage imageCells,; int minLabel). Check whether two images could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static RegionRequest; parseRegion(String name,; int width,; int height). Attempt to parse a RegionRequest corresponding to an image region from the file name. static Map<Integer,Geometry>; traceGeom",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:4511,detect,detection,4511,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['detect'],['detection']
Safety,"ed boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This might depend upon the MouseEvent. Parameters:; e - ; Returns:. refineROIByParent; protected ROI refineROIByParent(ROI currentROI); Apply clipping based on the current parent object.; ; Returns an empty ROI if this result of the clipping is an empty area. Parameters:; currentROI - ; Returns:. refineGeometryByParent; protected Geometry refineGeometryByParent(Geometry geometry). updatingConstrainingObjects; protected void updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions); New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation.; ; This method requests that the constraining objects are identified now based upon the specified mouse position.; It is useful when starting to draw with a tool that makes use of constraining objects. Parameters:; viewer - the viewer that may contain potential constraining objects; xx - x-coordinate in the image space of the starting point for the new object; yy - y-coordinate in the image space of the starting point for the new object; exclusions - objects not to consider (e.g. the new ROI being created). resetConstrainingObjects; protected void resetConstrainingObjects(); Reset the constraining objects.; These should be done as soon as they are no longer required, to prevent a memory leak by inadvertently; holding on to an object hierarchy too long. getCurrentParent; protected PathObject getCurrentParent(). mouseClicked; publ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:11374,avoid,avoid,11374,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html,3,['avoid'],['avoid']
Safety,"efault imports that should be included with the script, where possible. getDefaultInstance() - Static method in class qupath.lib.images.servers.PixelCalibration. Get the default PixelCalibration. getDefaultInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default instance. getDefaultLocationString(ImageServer<BufferedImage>, double, double, int, int) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Default method for getting a location string from an ImageServer using cached tiles. getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:370561,detect,detect,370561,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"el(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. addUnclassifiedLabel(int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. addValue(double) - Method in class qupath.lib.analysis.stats.RunningStatistics. Add another value; NaN values are counted but do not contribute to the statistics. addViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Add a viewer listener. addWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Add a listener for changes to the workflow. addWorkflowStep(ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; addWorkflowStep(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin. Add a workflow step to the ImageData indicating the argument that this plugin was run with. AffineTransformImageServer - Class in qupath.lib.images.servers. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransformImageServer(ImageServer<BufferedImage>, AffineTransform) - Constructor for class qupath.lib.images.servers.AffineTransformImageServer;  ; AffineTransforms - Class in qupath.lib.awt.common. Helper class for working with affine transforms. AffineTransforms() - Constructor for class qupath.lib.awt.common.AffineTransforms;  ; alertType(Alert.AlertType) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a dialog styled as a specified alert type. alignBottomCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the bottom center of the ROI bounding box. alignBott",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:32775,detect,detect,32775,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"elClassifier, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(ImageData<BufferedImage>, PixelClassifier, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PathObjectHierarchy, ImageServer<BufferedImage>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.PositiveCellDetection. Wrap the detector to apply any required classification. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; createDetector(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. createDisk(int, boolean) - Static metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:176341,detect,detector,176341,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detector']
Safety,"elString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SummaryMeasurementTableCommand; public SummaryMeasurementTableCommand(QuPathGUI qupath); Command to show a summary measurement table, for PathObjects of a specified type (e.g. annotation, detection). Parameters:; qupath - . Method Details. showTable; public void showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type); Show a measurement table for the specified image data. Parameters:; imageData - the image data; type - the object type to show. getTableModelStrings; public static <T> List<String> getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); Get a list of Strings representing table data.; ; Each entry in the list corresponds to a row. Type Parameters:; T - the data type for the table; Parameters:; model - ; delim - ; excludeColumns - ; Returns:. getTableModelString; public static <T> String getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); throws IllegalArgumentException; Get a single String representing the data in a table.; ; Note: if the required String is too long (approximately Integer.MAX_VALUE characters), this will throw an IllegalArgumentExc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html:2199,detect,detection,2199,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,1,['detect'],['detection']
Safety,"eld; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:1252,predict,predict,1252,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,1,['predict'],['predict']
Safety,"eld | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnn.Builder. java.lang.Object; qupath.opencv.dnn.OpenCVDnn.Builder. Enclosing class:; OpenCVDnn. public static class OpenCVDnn.Builder; extends Object; Helper class to build an OpenCVDnn. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OpenCVDnn.Builder; backend(int backend). Specify the backend, e.g. OpenCVDnn; build(). Build a new OpenCVDnn. OpenCVDnn.Builder; classification(). Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. OpenCVDnn.Builder; config(String pathConfig). Path to config file (if required). OpenCVDnn.Builder; config(URI pathConfig). Path to config file (if required). OpenCVDnn.Builder; cpu(). Request CPU backend and target, if available. OpenCVDnn.Builder; cuda(). Request CUDA backend and target, if available. OpenCVDnn.Builder; cuda16(). Request CUDA backend and target, if available, with 16-bit floating point. OpenCVDnn.Builder; detection(). Set the model type to be OpenCVDnn.ModelType.DETECTION. OpenCVDnn.Builder; framework(String name). Specify the framework (used to identify the appropriate loader for the model). OpenCVDnn.Builder; mean(Scalar mean). Mean values which should be subtracted from the image channels before input to the Net. OpenCVDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:1296,detect,detection,1296,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,1,['detect'],['detection']
Safety,"ells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. resetIntensityClassifications; public static void resetIntensityClassifications(Collection<PathObject> pathObjects); Reset the intensity classifications for all specified objects.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; pathObjects - . resetIntensityClassifications; public static void resetIntensityClassifications(PathObjectHierarchy hierarchy); Reset the intensity classifications for all detections in the specified hierarchy.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; hierarchy - . resetIntensityClassifications; public static void resetIntensityClassifications(); Reset the intensity classifications for all detections in the current hierarchy.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). writeImageRegion; public static void writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path); throws IOException; Write an image region image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; request - ; path - ; Throws:; IOException. writePredictionImage; public static void writePredictionImage(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String path); throws IOException; Write the output",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:104683,detect,detections,104683,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,"els; tileHeight - requested tile height, in pixels; trimToROI - if true, trim tiles at the ROI boundary according to the ROI shape, otherwise retain full tiles that may only partially overlap; Returns:. computeTiledROIs; public static Collection<? extends ROI> computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap); Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps.; ; The purpose of this is to create useful tiles whenever the exact tile size may not be essential, and overlaps may be required.; Tiles at the parentROI boundary will be trimmed to fit inside. If the parentROI is smaller, it is returned as is. Parameters:; parentROI - main ROI to be tiled; sizePreferred - the preferred size; in general tiles should have this size; sizeMax - the maximum allowed size; occasionally it is more efficient to have a tile larger than the preferred size towards a ROI boundary to avoid creating very small tiles unnecessarily; fixedSize - if true, the tile size is enforced so that complete tiles have the same size; overlap - optional requested overlap between tiles; Returns:; See Also:. makeTiles(ROI, int, int, boolean). buffer; public static ROI buffer(ROI roi,; double distance); Buffer the specified ROI, dilating (or eroding) by the specified distance. Parameters:; roi - the ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array return",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:15721,avoid,avoid,15721,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['avoid'],['avoid']
Safety,"ements, clearRootMeasurements, clearRootMeasurements, clearSelectedObjects, clearSelectedObjects, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7780,detect,detectionCentroidDistances,7780,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['detect'],['detectionCentroidDistances']
Safety,"empt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. Returns:. getConfigPath; public static Path getConfigPath(); throws IOException,; URISyntaxException; Try to get the path to the config file.; Editing this is sometimes needed for preferences that need to be fixed during starting, ; such as the java.library.path or max memory settings. Returns:; Throws:; IOException; URISyntaxException. maxMemoryMBProperty; public static IntegerProperty maxMemoryMBProperty(); Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. Returns:. getUserPreferences; @Deprecated; public static Preferences getUserPreferences(); Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). Get the Preferences object for storing user preferences.; ; Note that the preferences object returned by this method must not be retained and reused,; because it may be invalidated by a call to resetPreferences().; Rather, as far as possible other methods of this class should be used rather than accessing the; Preferences directly.; . Returns:. savePreferences; public static boolean savePreferences(); Save the preferences. Returns:. resetPreferences; public static void resetPreferences(); Reset the preferences to their defaults. This requires QuPath to be restarted. scrollSpeedProperty; public static IntegerProperty scrollSpeedProperty(); Percentage to scale scroll speed for zooming etc.; Helps customize the viewer according to more/less enthusiastic input devices. Returns:. getScaledScrollSpeed; public static double getScaledScrollSpeed(); Get scroll speed scaled as a proportion and forced to be in the range 0-1. For example, 100",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:46343,avoid,avoid,46343,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['avoid'],['avoid']
Safety,enCVMLClassifier<T>; qupath.opencv.dnn.OpenCVModelObjectClassifier (implements qupath.lib.io.UriResource). qupath.lib.gui.viewer.overlays.AbstractOverlay (implements qupath.lib.gui.viewer.overlays.PathOverlay). qupath.lib.gui.viewer.overlays.AbstractImageOverlay. qupath.lib.gui.viewer.overlays.BufferedImageOverlay (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. qupath.lib.gui.viewer.overlays.GridOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.opencv.CellCountsCV; qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:6077,detect,detect,6077,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['detect'],['detect']
Safety,"encePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getPreferredPixelSizeMicrons(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get the preferred pixel size that would be used for the specified ImageData and ParameterList. getPreferredResolutionLevel(ImageServer<?>, double) - Static method i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:489197,detect,detect,489197,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"enerate new patch classifier params. static PatchClassifierParams.Builder; builder(PatchClassifierParams params). Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2209,predict,prediction,2209,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,1,['predict'],['prediction']
Safety,"ent to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; imageData - ; Returns:; Throws:; InterruptedException; Since:; v0.4.0. getTMACoreList; public static List<TMACoreObject> getTMACoreList(); Get the list of TMA core objects for the current hierarchy. Returns:; the list of TMACoreObjects, or an empty list if there is no TMA grid present.; See Also:. getCurrentHierarchy(). getAnnotationObjects; public static Collection<PathObject> getAnnotationObjects(); Get a list of the current annotation objects. Returns:; See Also:. getCurrentHierarchy(). getDetectionObjects; public static Collection<PathObject> getDetectionObjects(); Get a list of the current detection objects. Returns:; See Also:. getCurrentHierarchy(). getTileObjects; public static Collection<PathObject> getTileObjects(); Get a list of the current tile objects.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:67359,detect,detectionImage,67359,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionImage']
Safety,"entName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for cells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:102800,detect,detections,102800,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,"ep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getParameterMap() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get a map of parameters required for this step. getParameters() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the ParameterList displayed in this panel. getParameters() - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameters. getParent() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent object. getParent() - Method in class qupath.lib.objects.PathObject. Request the parent object. getParentClass() - Method in class qupath.lib.objects.classes.PathClass. Get the parent classification, or null if this classification has no parent. getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algori",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:474750,detect,detect,474750,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"eption. readRegion; default T readRegion(RegionRequest request); throws IOException; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(double, int, int, int, int, int, int); readRegion(double, int, int, int, int); readBufferedImage(RegionRequest). readRegion; default T readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t); throws IOException; Read a 2D(+C) image region for a specified z-plane and timepoint.; Coordinates and bounding box dimensions are in pixel units, at the full image resolution ; (i.e. when downsample = 1).; ; All channels are always returned. Parameters:; downsample - downsample factor for the region; x - x coordinate of the top left of the region bounding box; y - y coordinate of the top left of the region bounding box; width - bounding box width; height - bounding box height; z - index for the z-position; t - index for the t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:9431,avoid,avoid,9431,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['avoid'],['avoid']
Safety,"equest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getCropRegion; public ImageRegion getCropRegion(); Get the region being cropped, in terms of the bounding box within the base ImageServer. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class Tran",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:4680,avoid,avoid,4680,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['avoid'],['avoid']
Safety,"equest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). createID; protected String createID(); Description copied from cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:4683,avoid,avoid,4683,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['avoid'],['avoid']
Safety,"equest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). getServerType; public String getServerType(); Description copied ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html:3838,avoid,avoid,3838,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,1,['avoid'],['avoid']
Safety,"equest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the curre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:4003,avoid,avoid,4003,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['avoid'],['avoid']
Safety,"equest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:5174,avoid,avoid,5174,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,1,['avoid'],['avoid']
Safety,"equest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getTransform; public AffineTransform getTransform(); Get the affine transform for this server. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html:4504,avoid,avoid,4504,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,1,['avoid'],['avoid']
Safety,"equired URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an UnsupportedOperationException if called too late. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException. getBlobFunction; public BlobFunction<Mat> getBlobFunction(); Description copied from class: AbstractDnnModel; Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Specified by:; getBlobFunction in class AbstractDnnModel<Mat>; Returns:. getBlobFunction; public BlobFunction<Mat> getBlobFunction(String name); Description copied from class: AbstractDnnModel; Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Specified by:; getBlobFunction in class AbstractDnnModel<Mat>; Parameters:; name - ; Returns:. getPredictionFunction; public PredictionFunction<Mat> getPredictionFunction(); Description copied from class: AbstractDnnModel; Get the prediction function that can apply a prediction with one or more blobs as input. Specified by:; getPredictionFunction in class AbstractDnnModel<Mat>; Returns:. close; public void close(); throws Exception; Description copied from interface: DnnModel; Close this model if it will not be needed again.; Subclasses t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:6730,predict,prediction,6730,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,1,['predict'],['prediction']
Safety,"er. Static methods to assist with painting PathObjects. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectSelectionListener. A listener to selection changes within a PathObjectSelectionModel. PathObjectSelectionModel. Model for handling selection of single and multiple PathObjects. PathObjectTools. A collection of static methods to help work with PathObjects. PathOverlay. Interface defining an overlay to paint on top of a viewer. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTableData<T>. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. PathTool. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers;  ; PathTools. Default PathTool implementations. PixelCalibration. Class used to represent pixel sizes. PixelCalibration.Builder",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:41260,detect,detections,41260,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detections']
Safety,"erLoadCommand. Constructor. ObjectClassifiers - Class in qupath.lib.classifiers.object. Helper class for creating ObjectClassifiers. ObjectClassifiers() - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers;  ; ObjectClassifiers.ClassifyByMeasurementBuilder<T> - Class in qupath.lib.classifiers.object. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory - Class in qupath.lib.classifiers.object. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. objectCountPostfix() - Method in class qupath.lib.objects.PathObject;  ; ObjectDescriptionPane<T> - Class in qupath.lib.gui.panes. Wraps a pane used to display an object description, if one is available. ObjectDetector<T> - Interface in qupath.lib.plugins. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements - Class in qupath.lib.analysis.features. Experimental class to generate object measurements. ObjectMeasurements() - Constructor for class qupath.lib.analysis.features.ObjectMeasurements;  ; ObjectMeasurements.Compartments - Enum Class in qupath.lib.analysis.features. Cell compartments. ObjectMeasurements.Measurements - Enum Class in qupath.lib.analysis.features. Requested intensity measurements. ObjectMeasurements.ShapeFeatures - Enum Class in qupath.lib.analysis.features. Standard measurements that may be computed from shapes. ObjectMerger - Class in qupath.lib.objects.utils. Helper class for merging objects using different criteria. ObjectPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; ObjectsMenuActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.Annotatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:718021,detect,detection,718021,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"erer renderer,; long timeoutMilliseconds). Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Method Details. paintRegionCompletely; void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds); Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; observer - an ImageObserver (often ignored); renderer - an ImageRenderer to convert images to RGB; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer renderer); Paint an image region. Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ImageObs",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html:2297,timeout,timeoutMilliseconds,2297,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,1,['timeout'],['timeoutMilliseconds']
Safety,"erform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T> - Class in qupath.lib.plugins. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractPlugin() - Constructor for class qupath.lib.plugins.AbstractPlugin;  ; AbstractTaskRunner - Class in qupath.lib.plugins. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTaskRunner() - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner(int) - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that optionally uses a fixed number of threads. AbstractTileableDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractTileableDetectionPlugin;  ; AbstractTileableImageServer - Class in qupath.lib.images.servers. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AbstractTileableImageServer() - Constructor for class qupath.lib.images.servers.AbstractTileableImageServer;  ; accelerator(ObservableValue<KeyCombination>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the accelerator property of the action to an ObservableValue, bidirectionally if possible. accelerator(KeyCombination) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the accelerator property of the action. acceleratorTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getAcceleratorText(). Acti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:4310,detect,detection,4310,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ers.SVMClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:1371,predict,predictWithLock,1371,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,1,['predict'],['predictWithLock']
Safety,"ershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.gui.ImageJMacroRunner. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.plugins.CommandLineTaskRunner; qupath.lib.gui.TaskRunnerFX. qupath.lib.gui.actions.ActionTools; qupath.lib.gui.actions.ActionTools.ActionBuilder; qupath.lib.awt.common.AffineTransforms; qupath.lib.gui.actions.menus.AnalyzeMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions; qupath.lib.gui.panes.AnnotationPane (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); javafx.application.Application. qupath.lib.gui.QuPathApp; qupath.lib.gui.tma.QuPathTMAViewer. qupath.lib.roi.AreaROI (implements java.io.Serializable); qupath.lib.analysis.stats.ArrayWrappers; qupath.lib.scripting.languages.AutoCompletions; qupath.lib.gui.actions.AutomateAc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:7191,detect,detect,7191,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['detect'],['detect']
Safety,"erver(ImageServer<BufferedImage> server); Optional server providing image labels.; These may be export as corresponding images alongside the 'original' pixels, e.g. to create ; training data for an AI algorithm. Parameters:; server - the labeled server; Returns:; this exporter. imageSubDir; public TileExporter imageSubDir(String subdir); Specify a subdirectory within which image tiles should be saved.; By default, tiles are written to the directory specified within writeTiles(String).; This option makes it possible to split images and labels into separate subdirectories. Parameters:; subdir - ; Returns:; this exporter. labeledImageSubDir; public TileExporter labeledImageSubDir(String subdir); Specify a subdirectory within which labeled image tiles should be saved.; By default, tile labels are written to the directory specified within writeTiles(String).; This option makes it possible to split images and labels into separate subdirectories.; ; Only relevant if labeledServer(ImageServer) is provided. Parameters:; subdir - ; Returns:; this exporter. labeledImageId; public TileExporter labeledImageId(String labelId); Specify an identifier appended to the filename for labeled images.; The labeled image name will be in the format imageName + labeledImageId + labeledImageExtension.; ; This can be used to avoid name clashes with export image tiles.; If not specified, QuPath will generate a default ID if required.; ; Only relevant if labeledServer(ImageServer) is provided. Parameters:; labelId - ; Returns:; this exporter. exportJson; public TileExporter exportJson(boolean exportJson); Optionally export a JSON file that includes label information and image/label pairs, where available. Parameters:; exportJson - ; Returns:; this exporter. writeTiles; public void writeTiles(String dirOutput); throws IOException; Export the image tiles to the specified directory. Parameters:; dirOutput - full path to the export directory; Throws:; IOException - if an error occurs during export. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:12062,avoid,avoid,12062,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,1,['avoid'],['avoid']
Safety,"erver. createDefaultRGBImage(int, int) - Method in class qupath.lib.images.servers.LabeledImageServer;  ; createDetectionConverter() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified detection object. createDetectionObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object. createDetectionObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object with a specified measurement list. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetections(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create detection objects by tracing contours in a labelled image. createDetections(SimpleImage, Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:173963,detect,detection,173963,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"erver<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. If no objects are selected, objects are created across the entire image. Parameters:; hierarchy - ; classifierServer - ; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createDetectionsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; imageData - the original image data, which will be the input to the pixel classifier; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createObjectsFromPredictions; public static boolean createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create objects from an image (usually created with a pixel classifier) where values represent",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:7570,detect,detection,7570,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['detect'],['detection']
Safety,"es between 0 and 1.; See Also:. getOpacity(); setOpacity(float). getDetectionDisplayMode; public OverlayOptions.DetectionDisplayMode getDetectionDisplayMode(); Get the current OverlayOptions.DetectionDisplayMode. Returns:; the current display mode. getShowCellNuclei; public boolean getShowCellNuclei(); Query the current OverlayOptions.DetectionDisplayMode to see if nuclei ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. getShowCellBoundaries; public boolean getShowCellBoundaries(); Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. setDetectionDisplayMode; public void setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode); Set the current OverlayOptions.DetectionDisplayMode. Parameters:; mode - the requested mode to set. detectionDisplayModeProperty; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty(); Property representing the current OverlayOptions.DetectionDisplayMode. Returns:; See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode). getThickStrokeWidth; public float getThickStrokeWidth(double downsample); Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). Parameters:; downsample - downsample at which the annotations should be drawn; Returns:; preferred stroke thickness to use. setShowTMAGrid; public void setShowTMAGrid(boolean show); Show the TMA grid on the image, if present. Parameters:; show - . setShowAnnotations; public void setShowAnnotations(boolean show); Show the annotations on the image. Parameters:; show - . setShowNames; public void setShowNames(boolean show); Show the object names on the image. Parameters:; show - . setFontSize; public void setFontSize(float size); Set the requested font size for the 'Show names' option. Parameters:; size - .",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:11101,detect,detectionDisplayModeProperty,11101,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detectionDisplayModeProperty']
Safety,"escription; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:2161,detect,detections,2161,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,1,['detect'],['detections']
Safety,"essor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<ImagePlus,ImagePlus,Object>; builder(Processor<ImagePlus,ImagePlus,Object> processor). Create a PixelProcessor.Builder for an ImageJ ImagePlus. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<ImagePlus>; createImagePlusImageSupplier(). Create an ImageSupplier that returns an ImageJ ImagePlus. static MaskSupplier<ImagePlus,ImagePlus>; createImagePlusMaskSupplier(). Create a MaskSupplier that returns an ImageJ ByteProcessor. static <U> OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U>; createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter for one specify type. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJProcessor; public ImageJProcessor(). Method Details. createImagePlusImageSupp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:1691,detect,detection,1691,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,1,['detect'],['detection']
Safety,"essor.Builder for an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an Output",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:1907,detect,detection,1907,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['detect'],['detection']
Safety,"est.LogRankResult (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1008,hazard,hazard,1008,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,1,['hazard'],['hazard']
Safety,"estamp from when the project was last synchronized. getMoreTranslucentColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly more) translucent version of the specified color. getMousePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getMousePosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor position within this viewer, or null if the cursor is outside the viewer. getName() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getName() - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getName() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getName() - Method in class qupath.imagej.gui.IJExtension;  ; getName() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getName() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getName() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getName() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getName() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getName() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getName() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getName() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getName() - Method in class qupath.lib.algorithms.T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:447441,detect,detect,447441,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"etName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:2065,predict,prediction,2065,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['predict'],['prediction']
Safety,"etServerType(); A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getAssociatedImageList; List<String> getAssociatedImageList(); Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Returns:; See Also:. getAssociatedImage(String). getAssociatedImage; T getAssociatedImage(String name); Get the image for a given associated image name. Parameters:; name - ; Returns:; See Also:. getAssociatedImageList(). isEmptyRegion; boolean isEmptyRegion(RegionRequest request); Test whether a region is empty, i.e. it contains nothing to be painted (e.g. the server paints objects; but there are no objects present in the region) and readBufferedImage(RegionRequest region) would return null.; ; This makes it possible to avoid a (potentially more expensive) request to readRegion(RegionRequest),; or to add it to a request queue, if we know there will be nothing to show for it.; ; Note: if this method returns true, it is safe to assume readBufferedImage would return null.; However, even if the method returns false it is possible that the region is still empty -; the purpose of this method is to assist performance, and it should return quickly.; Therefore if the calculations needed to identify if the region is empty are too onerous, it may conservatively return false. Parameters:; request - ; Returns:. getPixelType; PixelType getPixelType(); The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Returns:. getChannel; ImageChannel getChannel(int channel); Request information for one channel (0-based index). Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getMetadata; ImageServerMetadata getMetadata(); Get essential metadata associated with the ImageServer as a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:12337,avoid,avoid,12337,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['avoid'],['avoid']
Safety,"eters:; options - options to control the overlay display; fun - function to create an ImageServer from the ImageData; renderer - rendered used to create an RGB image; Returns:; the PixelClassificationOverlay. rendererProperty; public ObjectProperty<ImageRenderer> rendererProperty(); Get the ImageRenderer property used with this overlay. Returns:; See Also:. getRenderer(); setRenderer(ImageRenderer). getRenderer; public ImageRenderer getRenderer(); Get the ImageRenderer used with this overlay, which may be null. Returns:. setMaxThreads; public void setMaxThreads(int nThreads); Set the maximum number of threads that may be used during live prediction. Parameters:; nThreads - . getMaxThreads; public int getMaxThreads(); Get the maximum number of threads that may be used during live prediction. Returns:. setRenderer; public void setRenderer(ImageRenderer renderer); Set the ImageRenderer to be used with this overlay. Parameters:; renderer - . getLivePrediction; public boolean getLivePrediction(); Query whether live prediction is turned on. Returns:. setLivePrediction; public void setLivePrediction(boolean livePrediction); Turn on or off live prediction.; This requests tile classifications as the overlay is being viewed. Parameters:; livePrediction - . getPixelClassificationServer; public ImageServer<BufferedImage> getPixelClassificationServer(ImageData<BufferedImage> imageData); Get the ImageServer that would be used by this overlay for the specified ImageData.; Note that the servers are cached internally. Parameters:; imageData - ; Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface Pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:8334,predict,prediction,8334,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['predict'],['prediction']
