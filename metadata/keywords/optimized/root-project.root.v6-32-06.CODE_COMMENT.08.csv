quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,"// update global CC",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitResult.cxx:3,update,update,3,math/mathcore/src/FitResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitResult.cxx,1,['update'],['update']
Deployability,"// update gradient",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/RecurrentPropagation.hxx:3,update,update,3,tmva/tmva/src/DNN/Architectures/Cpu/RecurrentPropagation.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/RecurrentPropagation.hxx,2,['update'],['update']
Deployability,"// update gradient and step values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/MnHesse.cxx:3,update,update,3,math/minuit2/src/MnHesse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/MnHesse.cxx,1,['update'],['update']
Deployability,"// update gradient using G2 from Hessian calculation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/MnSeedGenerator.cxx:3,update,update,3,math/minuit2/src/MnSeedGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/MnSeedGenerator.cxx,1,['update'],['update']
Deployability,// update group counter,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/three.mjs:3,update,update,3,js/modules/three.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/three.mjs,1,['update'],['update']
Deployability,"// update hierarchy",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx:3,update,update,3,geom/webviewer/src/RGeomViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx,1,['update'],['update']
Deployability,// update histogram attributes,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,update,update,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,"// update i to reflect change in body string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:3,update,update,3,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['update'],['update']
Deployability,// update id,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/three.mjs:3,update,update,3,js/modules/three.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/three.mjs,1,['update'],['update']
Deployability,// update image viewer,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:3,update,update,3,ui5/browser/controller/Browser.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js,1,['update'],['update']
Deployability,"// update image with indices (pixels) into the new RGB colormap",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:3,update,update,3,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['update'],['update']
Deployability,"// update indices data in case of negative dim values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_Gather.hxx:3,update,update,3,tmva/sofie/inc/TMVA/ROperator_Gather.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_Gather.hxx,1,['update'],['update']
Deployability,"// update input/output list views",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:3,update,update,3,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['update'],['update']
Deployability,"// update internal rho parameters; // redetermine static and/or adaptive bandwidth",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:3,update,update,3,roofit/roofit/src/RooNDKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx,1,['update'],['update']
Deployability,"// update interval",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRootFinder.cxx:3,update,update,3,math/mathmore/src/GSLRootFinder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRootFinder.cxx,1,['update'],['update']
Deployability,"// update interval ?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx:3,update,update,3,tmva/tmva/src/MethodCuts.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx,1,['update'],['update']
Deployability,"// update interval values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMinimizer1D.cxx:3,update,update,3,math/mathmore/src/GSLMinimizer1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMinimizer1D.cxx,1,['update'],['update']
Deployability,// update item itself,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,update,update,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,// update landBlk,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineCFGStructurizer.cpp:3,update,update,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineCFGStructurizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineCFGStructurizer.cpp,1,['update'],['update']
Deployability,"// update last result for next iteration in loop",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BernsteinCorrection.cxx:3,update,update,3,roofit/roostats/src/BernsteinCorrection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BernsteinCorrection.cxx,1,['update'],['update']
Deployability,// update length property,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js:3,update,update,3,ui5/browser/model/BrowserModel.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js,1,['update'],['update']
Deployability,"// update length since Clobber clamps to MaxSize (if Fatal does not abort)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:3,update,update,3,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['update'],['update']
Deployability,"// update list of data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx:3,update,update,3,gui/fitpanelv7/src/RFitPanel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx,1,['update'],['update']
Deployability,"// update list of files opened in the remote session",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFileBrowser.cxx:3,update,update,3,gui/gui/src/TGFileBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFileBrowser.cxx,2,['update'],['update']
Deployability,"// update list of signal lists",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQObject.cxx:3,update,update,3,core/base/src/TQObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQObject.cxx,1,['update'],['update']
Deployability,"// update list tree",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx:3,update,update,3,gui/sessionviewer/src/TSessionDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx,4,['update'],['update']
Deployability,"// update list tree, query frame information, and buttons state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:3,update,update,3,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,2,['update'],['update']
Deployability,"// update list view",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx:3,update,update,3,gui/sessionviewer/src/TSessionDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx,4,['update'],['update']
Deployability,"// update logger",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:3,update,update,3,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,2,['update'],['update']
Deployability,"// update mapping tables to convert bin number to matrix index",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:3,update,update,3,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['update'],['update']
Deployability,"// update marked region",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextView.cxx:3,update,update,3,gui/gui/src/TGTextView.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextView.cxx,1,['update'],['update']
Deployability,"// update max E/Et values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx:3,update,update,3,graf3d/eve/src/TEveCaloData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx,4,['update'],['update']
Deployability,"// update mean and variance calculations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:3,update,update,3,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,1,['update'],['update']
Deployability,"// update minimizer (but cannot re-create in this case). Must use an existing one",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx:3,update,update,3,math/mathcore/src/Fitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx,1,['update'],['update']
Deployability,"// update minimizer (recreate if not done or if name has changed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx:3,update,update,3,math/mathcore/src/Fitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx,1,['update'],['update']
Deployability,"// update minimizer options for re-fitting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:3,update,update,3,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['update'],['update']
Deployability,"// update minimizer options when re-doing a Fit or computing Hesse or Minos errors; // create a new minimizer if it is different type; // minimizer type string stored in FitResult is ""minimizer name"" + "" / "" + minimizer algo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx:3,update,update,3,math/mathcore/src/Fitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx,2,['update'],['update']
Deployability,"// update minimizer results with what comes out from Hesse; // in case is empty - create from a FitConfig",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx:3,update,update,3,math/mathcore/src/Fitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx,2,['update'],['update']
Deployability,"// update minimum and maximum values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TStatistic.cxx:3,update,update,3,math/mathcore/src/TStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TStatistic.cxx,1,['update'],['update']
Deployability,"// update minimum value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitResult.cxx:3,update,update,3,math/mathcore/src/FitResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitResult.cxx,2,['update'],['update']
Deployability,// update new eew,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Support/RISCVVIntrinsicUtils.cpp:3,update,update,3,interpreter/llvm-project/clang/lib/Support/RISCVVIntrinsicUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Support/RISCVVIntrinsicUtils.cpp,1,['update'],['update']
Deployability,// update new elmul = (eew/sew) * lmul,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Support/RISCVVIntrinsicUtils.cpp:3,update,update,3,interpreter/llvm-project/clang/lib/Support/RISCVVIntrinsicUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Support/RISCVVIntrinsicUtils.cpp,1,['update'],['update']
Deployability,"// update number of function calls",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitResult.cxx:3,update,update,3,math/mathcore/src/FitResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitResult.cxx,1,['update'],['update']
Deployability,"// update number of non empty lines",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Tetris.cxx:3,update,update,3,test/Tetris.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Tetris.cxx,1,['update'],['update']
Deployability,"// update obj function in case it was an external one",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx:3,update,update,3,math/mathcore/src/Fitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx,2,['update'],['update']
Deployability,"// update of the covarianze matrix (BFGS formula, see Tutorial, par. 4.8 pag 26); // in case of delgam > gvg (PHI > 1) use rank one formula; // see par 4.10 pag 30",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/BFGSErrorUpdator.cxx:3,update,update,3,math/minuit2/src/BFGSErrorUpdator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/BFGSErrorUpdator.cxx,1,['update'],['update']
Deployability,"// update of the covarianze matrix (Davidon formula, see Tutorial, par. 4.8 pag 26); // in case of delgam > gvg (PHI > 1) use rank one formula; // see par 4.10 pag 30; // ( Tutorial: https://seal.web.cern.ch/seal/documents/minuit/mntutorial.pdf )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/DavidonErrorUpdator.cxx:3,update,update,3,math/minuit2/src/DavidonErrorUpdator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/DavidonErrorUpdator.cxx,1,['update'],['update']
Deployability,"// update of weights using Adam algorithm; // we use the formulation defined before section 2.1 in the original paper; // 'Adam: A method for stochastic optimization, D. Kingma, J. Ba, see https://arxiv.org/abs/1412.6980",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adam.h:3,update,update,3,tmva/tmva/inc/TMVA/DNN/Adam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adam.h,1,['update'],['update']
Deployability,// update only object attributes; // apply all changes in the object (pad or canvas),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,update,update,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,// update only pad/canvas attributes,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,update,update,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,// update or insert,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:3,update,update,3,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['update'],['update']
Deployability,"// update our limits if necessary",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:3,update,update,3,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,1,['update'],['update']
Deployability,// update our own type,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/InclusionRewriter.cpp:3,update,update,3,interpreter/llvm-project/clang/lib/Frontend/Rewrite/InclusionRewriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/InclusionRewriter.cpp,1,['update'],['update']
Deployability,"// update our y-axis label and limits",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:3,update,update,3,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,2,['update'],['update']
Deployability,"// update ours sets of category and real args to refer to the cache dataset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsNumGenerator.cxx:3,update,update,3,roofit/roofitcore/src/RooAbsNumGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsNumGenerator.cxx,1,['update'],['update']
Deployability,"// update pad margins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TFrame.cxx:3,update,update,3,graf2d/graf/src/TFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TFrame.cxx,1,['update'],['update']
Deployability,"// update parameter counters in case of many functions (e.g. gaus(0)+gaus(3) )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:3,update,update,3,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['update'],['update']
Deployability,"// update parameters that changed since last calculation (or creation if first time)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx:3,update,update,3,roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,1,['update'],['update']
Deployability,"// update parameters value shown in dialog; //if (!fFuncPars) fFuncPars = new Double_t[fitFunc->GetNpar()][3];",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:3,update,update,3,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['update'],['update']
Deployability,"// update posMethodName to point behind the method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:3,update,update,3,html/src/TDocParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx,1,['update'],['update']
Deployability,"// update position every minute",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Aclock.cxx:3,update,update,3,test/Aclock.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Aclock.cxx,2,['update'],['update']
Deployability,"// update position every second",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Aclock.cxx:3,update,update,3,test/Aclock.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Aclock.cxx,1,['update'],['update']
Deployability,"// update processing rate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:3,update,update,3,proof/proofplayer/src/TPacketizerAdaptive.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx,1,['update'],['update']
Deployability,"// update projected center",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjections.cxx:3,update,update,3,graf3d/eve/src/TEveProjections.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjections.cxx,2,['update'],['update']
Deployability,// update projection matrix for proper view frustum culling,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,update,update,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,"// update query description fields",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx:3,update,update,3,gui/sessionviewer/src/TSessionDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx,2,['update'],['update']
Deployability,"// update query information and buttons state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:3,update,update,3,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['update'],['update']
Deployability,"// update raster screen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:3,update,update,3,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['update'],['update']
Deployability,"// update saved histogram in case it was deleted or if it is the first time the method is called; // for example when called from TF1::GetHistogram()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:3,update,update,3,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['update'],['update']
Deployability,// update scene graph,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,update,update,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,"// update score policy (could be modified)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Tetris.cxx:3,update,update,3,test/Tetris.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Tetris.cxx,1,['update'],['update']
Deployability,"// update server frame information",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:3,update,update,3,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['update'],['update']
Deployability,"// update session information frame",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:3,update,update,3,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,2,['update'],['update']
Deployability,"// update sigmas (rho dependent)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:3,update,update,3,roofit/roofit/src/RooNDKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx,1,['update'],['update']
Deployability,// update sorted/unsorted idx map,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js:3,update,update,3,ui5/eve7/controller/EveTable.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js,1,['update'],['update']
Deployability,"// update statistics (do here to avoid changes by SetBinContent)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:3,update,update,3,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['update'],['update']
Deployability,"// update statistics (do here to avoid changes by SetBinContent) FIXME remove???",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:3,update,update,3,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['update'],['update']
Deployability,"// update stats & free old element",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx:3,update,update,3,proof/proofplayer/src/TPacketizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizer.cxx,2,['update'],['update']
Deployability,"// update status infos",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:3,update,update,3,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,2,['update'],['update']
Deployability,"// update sum of (value * weight) pairs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TStatistic.cxx:3,update,update,3,math/mathcore/src/TStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TStatistic.cxx,1,['update'],['update']
Deployability,"// update sum of weights",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TStatistic.cxx:3,update,update,3,math/mathcore/src/TStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TStatistic.cxx,1,['update'],['update']
Deployability,// update the CriticalMemDep.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h:3,update,update,3,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,1,['update'],['update']
Deployability,"// update the SimplexParameter object with a new value y = FCN(p)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/SimplexParameters.cxx:3,update,update,3,math/minuit2/src/SimplexParameters.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/SimplexParameters.cxx,1,['update'],['update']
Deployability,"// update the cache",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:3,update,update,3,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['update'],['update']
Deployability,"// update the cache to ensure it records the user has explicitly; // requested it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:3,update,update,3,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['update'],['update']
Deployability,"// update the color palette",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx:3,update,update,3,graf2d/asimage/src/TASPaletteEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx,1,['update'],['update']
Deployability,"// update the error fields and weights of all pre-synapses, sequential mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h:3,update,update,3,tmva/tmva/inc/TMVA/TNeuron.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h,1,['update'],['update']
Deployability,"// update the error fields of all pre-synapses, batch mode; // to actually update the weights, call adjust synapse weights",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h:3,update,update,3,tmva/tmva/inc/TMVA/TNeuron.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h,2,['update'],['update']
Deployability,"// update the expression with the new formula",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:3,update,update,3,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['update'],['update']
Deployability,"// update the fit configuration after a fit using the obtained result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx:3,update,update,3,math/mathcore/src/Fitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx,4,"['configurat', 'update']","['configuration', 'update']"
Deployability,// update the geometry,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/three.mjs:3,update,update,3,js/modules/three.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/three.mjs,1,['update'],['update']
Deployability,"// update the image",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx:3,update,update,3,graf2d/asimage/src/TASPaletteEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx,1,['update'],['update']
Deployability,// update the index for Outs,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:3,update,update,3,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp,1,['update'],['update']
Deployability,"// update the limit lines",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx:3,update,update,3,graf2d/asimage/src/TASPaletteEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx,1,['update'],['update']
Deployability,"// update the number of nodes after the cleaning",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:3,update,update,3,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['update'],['update']
Deployability,"// update the number of nodes after the pruning",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:3,update,update,3,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['update'],['update']
Deployability,"// update the number of processed entries",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:3,update,update,3,tree/treeplayer/src/TMPWorkerTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx,1,['update'],['update']
Deployability,"// update the original data histogram",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:3,update,update,3,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['update'],['update']
Deployability,"// update the pdf parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PdfProposal.cxx:3,update,update,3,roofit/roostats/src/PdfProposal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PdfProposal.cxx,1,['update'],['update']
Deployability,// update the pointer in case it moved,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:3,update,update,3,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,1,['update'],['update']
Deployability,"// update the priority queue of leaf bounding boxes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoParallelWorld.cxx:3,update,update,3,geom/geom/src/TGeoParallelWorld.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoParallelWorld.cxx,1,['update'],['update']
Deployability,"// update the state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/VariableMetricBuilder.cxx:3,update,update,3,math/minuit2/src/VariableMetricBuilder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/VariableMetricBuilder.cxx,1,['update'],['update']
Deployability,"// update the step size for the next refinement of the summation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:3,update,update,3,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,1,['update'],['update']
Deployability,"// update the stored number of nodes in the Tree",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:3,update,update,3,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['update'],['update']
Deployability,"// update the text in the lower left corner",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/mvaeffs.cxx:3,update,update,3,tmva/tmvagui/src/mvaeffs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/mvaeffs.cxx,1,['update'],['update']
Deployability,"// update the user set filename with the current process ID and Rank ID; // this ensures collectors do not overwrite one anothers files",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/mpi/src/TMPIFile.cxx:3,update,update,3,io/mpi/src/TMPIFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/mpi/src/TMPIFile.cxx,1,['update'],['update']
Deployability,"// update the weights of the all pre-synapses, batch mode; //(call UpdateSynapsesBatch first)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h:3,update,update,3,tmva/tmva/inc/TMVA/TNeuron.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h,2,"['Update', 'update']","['UpdateSynapsesBatch', 'update']"
Deployability,"// update the worker status",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx:3,update,update,3,proof/proofplayer/src/TPacketizerUnit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerUnit.cxx,1,['update'],['update']
Deployability,"// update the x positions to the means for each bin and use poisson asymmetric errors for data ..",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx:3,update,update,3,roofit/xroofit/src/xRooNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx,1,['update'],['update']
Deployability,"// update this bin's calculated volume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:3,update,update,3,roofit/roofitcore/src/RooGrid.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx,1,['update'],['update']
Deployability,"// update this existing one with the information found in; // in the new one, if needed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:3,update,update,3,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,2,['update'],['update']
Deployability,"// update this new one with the information found in; // in the existing one (if needed) and ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:3,update,update,3,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,2,['update'],['update']
Deployability,// update total number of vertices,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,update,update,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,"// update transformation handler",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:3,update,update,3,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,2,['update'],['update']
Deployability,"// update undo / redo button",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx:3,update,update,3,graf2d/asimage/src/TASPaletteEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx,1,['update'],['update']
Deployability,"// update usage timestamp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:3,update,update,3,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,10,['update'],['update']
Deployability,// update user camera and its children,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,update,update,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,"// update user data with modified query description",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:3,update,update,3,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['update'],['update']
Deployability,"// update user state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/Minuit2Minimizer.cxx:3,update,update,3,math/minuit2/src/Minuit2Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/Minuit2Minimizer.cxx,1,['update'],['update']
Deployability,"// update user state for new value of up (scaling of errors)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FunctionMinimum.h:3,update,update,3,math/minuit2/inc/Minuit2/FunctionMinimum.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FunctionMinimum.h,1,['update'],['update']
Deployability,"// update values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMinimizer1D.cxx:3,update,update,3,math/mathmore/src/GSLMinimizer1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMinimizer1D.cxx,3,['update'],['update']
Deployability,// update values here to let access even when frame is not really updated,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,update,update,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['update'],"['update', 'updated']"
Deployability,"// update viewer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:3,update,update,3,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,3,['update'],['update']
Deployability,"// updateLoopStack is called on every basic block, therefore it needs to be fast",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/LoopUnrolling.cpp:3,update,updateLoopStack,3,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/LoopUnrolling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/LoopUnrolling.cpp,1,['update'],['updateLoopStack']
Deployability,"// updatePredecessors - Interval generation only sets the successor fields of; // the interval data structures. After interval generation is complete,; // run through all of the intervals and propagate successor info as; // predecessor info.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IntervalPartition.h:3,update,updatePredecessors,3,interpreter/llvm-project/llvm/include/llvm/Analysis/IntervalPartition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IntervalPartition.h,2,['update'],['updatePredecessors']
Deployability,"// updateRegDefUses can add an ""undef"" flag to the definition, since; // it will replace DstReg with DstReg.DstIdx. If NewIdx is 0, make; // sure that ""undef"" is not set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:3,update,updateRegDefUses,3,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['update'],['updateRegDefUses']
Deployability,// updateStatistics - Update statistic about created regions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h:3,update,updateStatistics,3,interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,4,"['Update', 'update']","['Update', 'updateStatistics']"
Deployability,"// updateVMCntOnly should only leave us with VGPRs; // MUBUF, MTBUF, MIMG, FlatGlobal, and FlatScratch only have VGPR/AGPR; // defs. That's required for a sane index into `VgprMemTypes` below",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp:3,update,updateVMCntOnly,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp,1,['update'],['updateVMCntOnly']
Deployability,"// updated by Init",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:3,update,updated,3,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,2,['update'],['updated']
Deployability,"// updated by Init; // Does not change (user customization): fBufferSize;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:3,update,updated,3,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,1,['update'],['updated']
Deployability,"// updated by Init; // Does not change: fFile",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:3,update,updated,3,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,1,['update'],['updated']
Deployability,"// updated when the keys are written",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:3,update,updated,3,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,1,['update'],['updated']
Deployability,"// updates all objects in shared memory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/test/TMapFileTest.cxx:3,update,updates,3,io/io/test/TMapFileTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/test/TMapFileTest.cxx,1,['update'],['updates']
Deployability,"// updates search data when necessary",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx:3,update,updates,3,geom/webviewer/src/RGeomViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx,1,['update'],['updates']
Deployability,"// use ROOT integration method if there are nuisance parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:12,integrat,integration,12,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['integrat'],['integration']
Deployability,"// use R__ASSERT which remains also in release mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/FlexibleInterpVar.cxx:39,release,release,39,roofit/histfactory/src/FlexibleInterpVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/FlexibleInterpVar.cxx,1,['release'],['release']
Deployability,"// use UpdateBinCOntent to not screw up histogram entries",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:7,Update,UpdateBinCOntent,7,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['Update'],['UpdateBinCOntent']
Deployability,"// use a different integrator by default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx:19,integrat,integrator,19,roofit/roofit/src/RooJeffreysPrior.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx,1,['integrat'],['integrator']
Deployability,// use animation frame to disable update in inactive form,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:34,update,update,34,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,"// use callback to release pointer, actually not needed but just to avoid compiler warning",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RFileDialog.cxx:19,release,release,19,gui/browserv7/src/RFileDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RFileDialog.cxx,1,['release'],['release']
Deployability,"// use integration method if there are nuisance parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:7,integrat,integration,7,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['integrat'],['integration']
Deployability,"// use nojQuery while we are already load jquery and jquery-ui, later one can use directly sap-ui-core.js; // this is location of openui5 scripts when working with THttpServer or when scripts are installed inside JSROOT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:196,install,installed,196,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['install'],['installed']
Deployability,"// use now plugin-manager for creating the GSL integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Integrator.cxx:47,integrat,integrator,47,math/mathcore/src/Integrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Integrator.cxx,1,['integrat'],['integrator']
Deployability,"// use objc_storeStrong(&dest, value) for retaining the; // object. But first, store a null into 'dest' because; // objc_storeStrong attempts to release its old value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:145,release,release,145,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,1,['release'],['release']
Deployability,"// use smooth speedometer update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/inc/TProofProgressDialog.h:26,update,update,26,gui/sessionviewer/inc/TProofProgressDialog.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/inc/TProofProgressDialog.h,1,['update'],['update']
Deployability,"// use to update fFriendLockStatus",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTree.h:10,update,update,10,tree/tree/inc/TTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTree.h,1,['update'],['update']
Deployability,"// used to update every second",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Aclock.h:11,update,update,11,test/Aclock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Aclock.h,1,['update'],['update']
Deployability,"// user can change configurations only when create (recreate) options; // was specified. When first object will be saved, configurations will; // be frozen.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:19,configurat,configurations,19,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,2,['configurat'],['configurations']
Deployability,"// visibility changed from RGeomViewer, update hierarchy",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomHierarchy.cxx:40,update,update,40,geom/webviewer/src/RGeomHierarchy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomHierarchy.cxx,1,['update'],['update']
Deployability,"// vmxor.mm vd, vd, v0 is used to update active value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp:34,update,update,34,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,1,['update'],['update']
Deployability,// void InitializeDescriptors();; // void ReleaseDescriptors();; // void InitializeWorkspace();; // void FreeWorkspace();; /** Getters */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/RNNLayer.h:42,Release,ReleaseDescriptors,42,tmva/tmva/inc/TMVA/DNN/RNN/RNNLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/RNNLayer.h,1,['Release'],['ReleaseDescriptors']
Deployability,"// void|i64 @llvm.experimental.patchpoint.void|i64(i64 <id>,; // i32 <numBytes>,; // i8* <target>,; // i32 <numArgs>,; // [Args...],; // [live variables...])",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:31,patch,patchpoint,31,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,2,['patch'],['patchpoint']
Deployability,"// volume->SetLineWidth(3);; // volume->SetLineColor(2);; // gPad->Modified();; // gPad->Update();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx:89,Update,Update,89,geom/geompainter/src/TGeoPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx,1,['Update'],['Update']
Deployability,"// volume->SetLineWidth(width);; // volume->SetLineColor(color);; // gPad->Modified();; // gPad->Update();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx:97,Update,Update,97,geom/geompainter/src/TGeoPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx,1,['Update'],['Update']
Deployability,"// wait for handshake from queue or update from SUB socket",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:36,update,update,36,roofit/multiprocess/src/worker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx,1,['update'],['update']
Deployability,// warn: attempt to free released,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/newdelete_example.cpp:25,release,released,25,interpreter/llvm-project/clang/docs/analyzer/checkers/newdelete_example.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/newdelete_example.cpp,1,['release'],['released']
Deployability,// warn: attempt to free released memory,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/unix_malloc_example.c:25,release,released,25,interpreter/llvm-project/clang/docs/analyzer/checkers/unix_malloc_example.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/unix_malloc_example.c,1,['release'],['released']
Deployability,// warn: memory is never released,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/unix_malloc_example.c:25,release,released,25,interpreter/llvm-project/clang/docs/analyzer/checkers/unix_malloc_example.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/checkers/unix_malloc_example.c,1,['release'],['released']
Deployability,"// we don't want the AU destructor to release the memory buffer that MB; // owns twice, because MB handles its resource on its own.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Interpreter/CodeCompletion.cpp:38,release,release,38,interpreter/llvm-project/clang/lib/Interpreter/CodeCompletion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Interpreter/CodeCompletion.cpp,1,['release'],['release']
Deployability,"// when ""Pars"" tab is selected, automatically update function parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx:46,update,update,46,gui/fitpanelv7/src/RFitPanel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx,1,['update'],['update']
Deployability,"// when not an embedded dialog, update configuration from server",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js:32,update,update,32,ui5/browser/controller/FileDialog.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,// when selected data is changing - cause update of complete model,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/fitpanel/controller/FitPanel.controller.js:42,update,update,42,ui5/fitpanel/controller/FitPanel.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/fitpanel/controller/FitPanel.controller.js,1,['update'],['update']
Deployability,"// while loop, because multiple jobs may have updated state coming",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx:46,update,updated,46,roofit/multiprocess/src/worker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/worker.cxx,1,['update'],['updated']
Deployability,"// without special objects no need for explicit update of the pad",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebCanvas.cxx:48,update,update,48,gui/webgui6/src/TWebCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebCanvas.cxx,1,['update'],['update']
Deployability,"// workaround to release all connection-specific handles as soon as possible; // required to work with QWebEngine; // once problem solved, can be removed here",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx:17,release,release,17,gui/webdisplay/src/RWebWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx,1,['release'],['release']
Deployability,"// wrappers to pdf to be integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testStatFunc.cxx:25,integrat,integrated,25,math/mathmore/test/testStatFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testStatFunc.cxx,1,['integrat'],['integrated']
Deployability,"// xmax < 0 so integrate from (-inf,xmax)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:15,integrat,integrate,15,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,1,['integrat'],['integrate']
Deployability,"// xmax >= 0 so integrate from (-inf,-1) and (-1,xmax)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:16,integrat,integrate,16,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,1,['integrat'],['integrate']
Deployability,"// xmin <= 0 so integrate from (xmin,+1) and (+1,+inf)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:16,integrat,integrate,16,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,1,['integrat'],['integrate']
Deployability,"// xmin > 0 so integrate from (xmin,+inf)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:15,integrat,integrate,15,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,1,['integrat'],['integrate']
Deployability,// z/OS tool chain depends on LE data sets and the CSSLIB data set.; // These data sets can have different high level qualifiers (HLQs); // as each installation can define them differently.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ZOS.cpp:148,install,installation,148,interpreter/llvm-project/clang/lib/Driver/ToolChains/ZOS.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ZOS.cpp,1,['install'],['installation']
Deployability,// { cond-update-stmt v = x; },MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:10,update,update-stmt,10,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update-stmt']
Deployability,// { v = x; cond-update-stmt },MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:17,update,update-stmt,17,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update-stmt']
Deployability,"//! Lower integration bound",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.h:10,integrat,integration,10,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.h,2,['integrat'],['integration']
Deployability,"//! The integration cache manager",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealSumFunc.h:8,integrat,integration,8,roofit/roofitcore/inc/RooRealSumFunc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealSumFunc.h,1,['integrat'],['integration']
Deployability,"//! Upper integration bound",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.h:10,integrat,integration,10,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.h,2,['integrat'],['integration']
Deployability,"//! largest box diagonal seen in OfInterest() - used when; //! bootstrapping interest box; // Internal cache update - const as the actual camera configuration is unaffected",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLCamera.h:109,update,update,109,graf3d/gl/inc/TGLCamera.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLCamera.h,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"//! table update time",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSQLTableInfo.h:10,update,update,10,net/net/inc/TSQLTableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSQLTableInfo.h,1,['update'],['update']
Deployability,"//! the interest box - created in UpdateInterest()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLCamera.h:34,Update,UpdateInterest,34,graf3d/gl/inc/TGLCamera.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLCamera.h,1,['Update'],['UpdateInterest']
Deployability,"//!!! --- Only if new ---; //!!! --- Else update the old one ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx:42,update,update,42,test/periodic/XSReactionDlg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx,1,['update'],['update']
Deployability,"//!the Cling ID of the transaction that last updated the object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:45,update,updated,45,core/meta/inc/TDictionary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h,1,['update'],['updated']
Deployability,"//""Unknown integration type"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLIntegrator.cxx:11,integrat,integration,11,math/mathmore/src/GSLIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLIntegrator.cxx,1,['integrat'],['integration']
Deployability,"//""text,update=50"" );; // write weights to File;; // this is not nice, but fMLP gets deleted at the end of Train()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx:8,update,update,8,tmva/tmva/src/MethodTMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx,1,['update'],['update']
Deployability,"//#ifndef USE_MULTIPRECISION_LC; //#pragma GCC diagnostic push; //#pragma GCC diagnostic ignored ""-Wunused-parameter""; //#endif; ////////////////////////////////////////////////////////////////////////////////; /// update sample weight (-?-)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:215,update,update,215,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['update'],['update']
Deployability,"//((TCanvas *)fgXArr[1])->Update();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:26,Update,Update,26,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['Update'],['Update']
Deployability,"//*****************************************************************************; //**** FixAllFDIVSQRT pass; //*****************************************************************************; // This pass fixes the incorrectly working FDIVx and FSQRTx instructions that; // exist for some earlier versions of the LEON processor line. Five NOP; // instructions need to be inserted after these instructions to ensure the; // correct result is placed in the destination registers before they are used.; //; // This pass implements two fixes:; // 1) fixing the FSQRTS and FSQRTD instructions.; // 2) fixing the FDIVS and FDIVD instructions.; //; // FSQRTS and FDIVS are converted to FDIVD and FSQRTD respectively earlier in; // the pipeline when this option is enabled, so this pass needs only to deal; // with the changes that still need implementing for the ""double"" versions; // of these instructions.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/LeonPasses.cpp:726,pipeline,pipeline,726,interpreter/llvm-project/llvm/lib/Target/Sparc/LeonPasses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/LeonPasses.cpp,1,['pipeline'],['pipeline']
Deployability,"//*-*- Update directory record",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:7,Update,Update,7,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,1,['Update'],['Update']
Deployability,"//*-*----------------UPDATE; //char *header = new char[kBEGIN];",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:21,UPDATE,UPDATE,21,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['UPDATE'],['UPDATE']
Deployability,"//*TOGGLE*",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/inc/TASImage.h:3,TOGGLE,TOGGLE,3,graf2d/asimage/inc/TASImage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/inc/TASImage.h,1,['TOGGLE'],['TOGGLE']
Deployability,"//*TOGGLE* *GETTER=IsDisabled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGLabel.h:3,TOGGLE,TOGGLE,3,gui/gui/inc/TGLabel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGLabel.h,1,['TOGGLE'],['TOGGLE']
Deployability,"//*TOGGLE* *GETTER=IsEnabled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGColorSelect.h:3,TOGGLE,TOGGLE,3,gui/gui/inc/TGColorSelect.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGColorSelect.h,2,['TOGGLE'],['TOGGLE']
Deployability,"//*TOGGLE* *GETTER=IsGray",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/inc/TASImage.h:3,TOGGLE,TOGGLE,3,graf2d/asimage/inc/TASImage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/inc/TASImage.h,1,['TOGGLE'],['TOGGLE']
Deployability,"//*TOGGLE* *GETTER=IsMenuEnabled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGTextEdit.h:3,TOGGLE,TOGGLE,3,gui/gui/inc/TGTextEdit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGTextEdit.h,1,['TOGGLE'],['TOGGLE']
Deployability,"//-- static methods to set configurations; /// set tolerance (absolute and relative); /// relative tolerance is only use to verify the convergence; /// do it is a minor parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h:27,configurat,configurations,27,math/mathmore/inc/Math/GSLMultiRootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h,1,['configurat'],['configurations']
Deployability,"//--- install default handlers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:6,install,install,6,core/unix/src/TUnixSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx,1,['install'],['install']
Deployability,"//--- install default handlers; // Actually: don't. If we want a stack trace we need a context for the; // signal. Signals don't have one. If we don't handle them, Windows will; // raise an exception, which has a context, and which is handled by; // ExceptionFilter.; //WinNTSignal(kSigChild, SigHandler);; //WinNTSignal(kSigBus, SigHandler);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:6,install,install,6,core/winnt/src/TWinNTSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx,1,['install'],['install']
Deployability,//------------------------------------------------------------------------------; // XXXX UT = UpdateTrigger functions. XXXX Can /should we place them; // somewhere else?; // ------------------------------------------------------------------------------,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:95,Update,UpdateTrigger,95,ui5/eve7/lib/EveManager.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js,1,['Update'],['UpdateTrigger']
Deployability,"//-------------------------------------------------------------------; /// \cond ROOFIT_INTERNAL; // register integrator class; // create a derived class in order to call the protected method of the; // RoodaptiveGaussKronrodIntegrator1D",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:110,integrat,integrator,110,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['integrat'],['integrator']
Deployability,"//------------------------------------------------------------------; /// Extract a uint16_t value from \a *offset_ptr.; ///; /// Extract a single uint16_t from the binary data at the offset; /// pointed to by \a offset_ptr, and update the offset on success.; ///; /// @param[in,out] offset_ptr; /// A pointer to an offset within the data that will be advanced; /// by the appropriate number of bytes if the value is extracted; /// correctly. If the offset is out of bounds or there are not; /// enough bytes to extract this value, the offset will be left; /// unmodified.; ///; /// @param[in,out] Err; /// A pointer to an Error object. Upon return the Error object is set to; /// indicate the result (success/failure) of the function. If the Error; /// object is already set when calling this function, no extraction is; /// performed.; ///; /// @return; /// The extracted uint16_t value.; //------------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h:229,update,update,229,interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,1,['update'],['update']
Deployability,"//------------------------------------------------------------------; /// Extract an pointer from \a *offset_ptr.; ///; /// Extract a single pointer from the data and update the offset; /// pointed to by \a offset_ptr. The size of the extracted pointer; /// is \a getAddressSize(), so the address size has to be; /// set correctly prior to extracting any pointer values.; ///; /// @param[in,out] offset_ptr; /// A pointer to an offset within the data that will be advanced; /// by the appropriate number of bytes if the value is extracted; /// correctly. If the offset is out of bounds or there are not; /// enough bytes to extract this value, the offset will be left; /// unmodified.; ///; /// @return; /// The extracted pointer value as a 64 integer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h:167,update,update,167,interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,1,['update'],['update']
Deployability,"//-----------------------------------------------------------; //; // processBoxB(Int_t par); //; // Processes information from the listbox ""Non empty bins"" (ListBoxB).; // Updates the fields ""Bin content"" and ""Bin range"".; // Higlights the selected bin on the canvas cB.; // Called when an item in the listbox ""Non empty bins"" is highlighted.; // Input parameter - bin index.; //; //------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/histviewer/histaction.cxx:173,Update,Updates,173,test/histviewer/histaction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/histviewer/histaction.cxx,1,['Update'],['Updates']
Deployability,"/// 'device' clause, allowed on the 'update' construct.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h:37,update,update,37,interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h,1,['update'],['update']
Deployability,"/// 'device_type' clause, allowed on Constructs, 'data', 'init', 'shutdown',; /// 'set', update', 'loop', 'routine', and Combined constructs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h:89,update,update,89,interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h,1,['update'],['update']
Deployability,"/// 'host' clause, allowed on 'update' construct.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h:31,update,update,31,interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h,1,['update'],['update']
Deployability,"/// 'if_present' clause, allowed on 'host_data' and 'update' directives.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h:53,update,update,53,interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h,1,['update'],['update']
Deployability,/// 'ios' is the Apple-provided NeXT-derived runtime on iOS or the iOS; /// simulator; it is always non-fragile. The version is a release; /// version of iOS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h:130,release,release,130,interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,1,['release'],['release']
Deployability,/// 'macosx' is the Apple-provided NeXT-derived runtime on Mac OS; /// X platforms that use the non-fragile ABI; the version is a; /// release of that OS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h:135,release,release,135,interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,1,['release'],['release']
Deployability,/// 'macosx-fragile' is the Apple-provided NeXT-derived runtime on; /// Mac OS X platforms that use the fragile ABI; the version is a; /// release of that OS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h:139,release,release,139,interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,1,['release'],['release']
Deployability,"/// 'rnglist'(DW_AT_ranges, DW_AT_start_scope) attributes to patch after; /// we have gathered all the unit's function addresses.; /// @{",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinkerCompileUnit.h:61,patch,patch,61,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinkerCompileUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinkerCompileUnit.h,1,['patch'],['patch']
Deployability,"/// 'self' clause, allowed on Compute and Combined Constructs, plus 'update'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h:69,update,update,69,interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h,1,['update'],['update']
Deployability,/// 'watchos' is a variant of iOS for Apple's watchOS. The version; /// is a release version of watchOS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h:77,release,release,77,interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,1,['release'],['release']
Deployability,/// (Re-)Initialize this bottom up pointer returning true if we detected a; /// pointer with nested releases.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h:100,release,releases,100,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h,2,['release'],['releases']
Deployability,"/// - Determine whether this is a conversion from a scalar type to an; /// atomic type.; ///; /// If successful, updates \c SCS's second and third steps in the conversion; /// sequence to finish the conversion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:113,update,updates,113,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['update'],['updates']
Deployability,/// 1 if 'v' is updated only when the condition is false (compare capture; /// only).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:16,update,updated,16,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['update'],['updated']
Deployability,"/// <summary>; /// A enumerator of installed <see cref=""ISetupInstance""/> objects.; /// </summary>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h:35,install,installed,35,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,1,['install'],['installed']
Deployability,"/// <summary>; /// Enumerates all completed product instances installed.; /// </summary>; /// <param name=""ppEnumInstances"">An enumeration of completed, installed; /// product instances.</param>; /// <returns>Standard HRESULT indicating success or failure.</returns>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h:62,install,installed,62,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,2,['install'],['installed']
Deployability,"/// <summary>; /// Gets the description of the product installed in this instance.; /// </summary>; /// <param name=""lcid"">The LCID for the description.</param>; /// <param name=""pbstrDescription"">The description of the product installed in; /// this instance.</param>; /// <returns>Standard HRESULT indicating success or failure, including; /// E_FILENOTFOUND if the instance state does not exist and E_NOTFOUND if the; /// property is not defined.</returns>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h:55,install,installed,55,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,2,['install'],['installed']
Deployability,"/// <summary>; /// Gets the display name (title) of the product installed in this instance.; /// </summary>; /// <param name=""lcid"">The LCID for the display name.</param>; /// <param name=""pbstrDisplayName"">The display name (title) of the product; /// installed in this instance.</param>; /// <returns>Standard HRESULT indicating success or failure, including; /// E_FILENOTFOUND if the instance state does not exist and E_NOTFOUND if the; /// property is not defined.</returns>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h:64,install,installed,64,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,2,['install'],['installed']
Deployability,"/// <summary>; /// Gets the local date and time when the installation was originally; /// installed.; /// </summary>; /// <param name=""pInstallDate"">The local date and time when the installation; /// was originally installed.</param>; /// <returns>Standard HRESULT indicating success or failure, including; /// E_FILENOTFOUND if the instance state does not exist and E_NOTFOUND if the; /// property is not defined.</returns>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h:57,install,installation,57,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,4,['install'],"['installation', 'installed']"
Deployability,"/// <summary>; /// Gets the path to the installation root of the product.; /// </summary>; /// <param name=""pbstrInstallationPath"">The path to the installation root of; /// the product.</param>; /// <returns>Standard HRESULT indicating success or failure, including; /// E_FILENOTFOUND if the instance state does not exist and E_NOTFOUND if the; /// property is not defined.</returns>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h:40,install,installation,40,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,2,['install'],['installation']
Deployability,"/// <summary>; /// Gets the unique name of the installation, often indicating the branch and; /// other information used for telemetry.; /// </summary>; /// <param name=""pbstrInstallationName"">The unique name of the installation,; /// often indicating the branch and other information used for; /// telemetry.</param>; /// <returns>Standard HRESULT indicating success or failure, including; /// E_FILENOTFOUND if the instance state does not exist and E_NOTFOUND if the; /// property is not defined.</returns>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h:47,install,installation,47,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,2,['install'],['installation']
Deployability,"/// <summary>; /// Gets the version of the product installed in this instance.; /// </summary>; /// <param name=""pbstrInstallationVersion"">The version of the product; /// installed in this instance.</param>; /// <returns>Standard HRESULT indicating success or failure, including; /// E_FILENOTFOUND if the instance state does not exist and E_NOTFOUND if the; /// property is not defined.</returns>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h:51,install,installed,51,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,2,['install'],['installed']
Deployability,/// <summary>; /// The instance installation path exists.; /// </summary>,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h:32,install,installation,32,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,1,['install'],['installation']
Deployability,/// <summary>; /// The instance represents a complete install.; /// </summary>,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h:54,install,install,54,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,1,['install'],['install']
Deployability,"/// @brief Change ownership of a file.; ///; /// @param Owner The owner of the file to change to.; /// @param Group The group of the file to change to.; /// @returns errc::success if successfully updated file ownership, otherwise an; /// error code is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h:196,update,updated,196,interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h,1,['update'],['updated']
Deployability,"/// @brief Find and update calls to \p F, which match a specialization; /// @param F Orginal function; /// @param Begin Start of a range of possibly matching specialisations; /// @param End End of a range (exclusive) of possibly matching specialisations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionSpecialization.h:20,update,update,20,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionSpecialization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionSpecialization.h,1,['update'],['update']
Deployability,"/// @brief Function to calculate the integral of an un-normalized RooGaussian over x. To calculate the integral over; /// mean, just interchange the respective values of x and mean.; /// @param xMin Minimum value of variable to integrate wrt.; /// @param xMax Maximum value of of variable to integrate wrt.; /// @param mean Mean.; /// @param sigma Sigma.; /// @return The integral of an un-normalized RooGaussian over the value in x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFit/Detail/MathFuncs.h:228,integrat,integrate,228,roofit/roofitcore/inc/RooFit/Detail/MathFuncs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFit/Detail/MathFuncs.h,2,['integrat'],['integrate']
Deployability,"/// @brief Get the TargetMachine used by the JIT.; /// Non-const because BackendPasses need to update OptLevel.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:95,update,update,95,interpreter/cling/lib/Interpreter/IncrementalJIT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.h,1,['update'],['update']
Deployability,"/// @name Configuration; /// @{; /// Whether to perform case-sensitive comparisons.; ///; /// Currently, case-insensitive matching only works correctly with ASCII.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/VirtualFileSystem.h:10,Configurat,Configuration,10,interpreter/llvm-project/llvm/include/llvm/Support/VirtualFileSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/VirtualFileSystem.h,1,['Configurat'],['Configuration']
Deployability,"/// @name Implementation Action Interface; /// @{; /// Prepare to execute the action on the given CompilerInstance.; ///; /// This is called before executing the action on any inputs, and can modify; /// the configuration as needed (including adjusting the input list).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendAction.h:208,configurat,configuration,208,interpreter/llvm-project/clang/include/clang/Frontend/FrontendAction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendAction.h,1,['configurat'],['configuration']
Deployability,"/// @}; /// @name Primary Functionality; /// @{; /// CreateOffloadingDeviceToolChains - create all the toolchains required to; /// support offloading devices given the programming models specified in the; /// current compilation. Also, update the host tool chain kind accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:236,update,update,236,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['update'],['update']
Deployability,"/// @}; /// Inserts in the IR a target-specific intrinsic specifying a fence.; /// It is called by AtomicExpandPass before expanding an; /// AtomicRMW/AtomicCmpXchg/AtomicStore/AtomicLoad; /// if shouldInsertFencesForAtomic returns true.; ///; /// Inst is the original atomic instruction, prior to other expansions that; /// may be performed.; ///; /// This function should either return a nullptr, or a pointer to an IR-level; /// Instruction*. Even complex fence sequences can be represented by a; /// single Instruction* through an intrinsic to be lowered later.; ///; /// The default implementation emits an IR fence before any release (or; /// stronger) operation that stores, and after any acquire (or stronger); /// operation. This is generally a correct implementation, but backends may; /// override if they wish to use alternative schemes (e.g. the PowerPC; /// standard ABI uses a fence before a seq_cst load instead of after a; /// seq_cst store).; /// @{",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:632,release,release,632,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['release'],['release']
Deployability,/// @}; /// Releases and removes the lock; /// Destructor,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/RWMutex.h:12,Release,Releases,12,interpreter/llvm-project/llvm/include/llvm/Support/RWMutex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/RWMutex.h,1,['Release'],['Releases']
Deployability,/// @}; /// Set input string into loop metadata by keeping other values intact.; /// If the string is already in loop metadata update value if it is; /// different.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h:127,update,update,127,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,1,['update'],['update']
Deployability,/// @}; /// Update the current source location. If \arg loc is invalid it is; /// ignored.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.h:12,Update,Update,12,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.h,1,['Update'],['Update']
Deployability,"/// @}; ///; /// \defgroup ARCOpt ARC Optimization.; /// @{; // TODO: On code like this:; //; // objc_retain(%x); // stuff_that_cannot_release(); // objc_autorelease(%x); // stuff_that_cannot_release(); // objc_retain(%x); // stuff_that_cannot_release(); // objc_autorelease(%x); //; // The second retain and autorelease can be deleted.; // TODO: It should be possible to delete; // objc_autoreleasePoolPush and objc_autoreleasePoolPop; // pairs if nothing is actually autoreleased between them. Also, autorelease; // calls followed by objc_autoreleasePoolPop calls (perhaps in ObjC++ code; // after inlining) can be turned into plain release calls.; // TODO: Critical-edge splitting. If the optimial insertion point is; // a critical edge, the current algorithm has to fail, because it doesn't; // know how to split edges. It should be possible to make the optimizer; // think in terms of edges, rather than blocks, and then split critical; // edges on demand.; // TODO: OptimizeSequences could generalized to be Interprocedural.; // TODO: Recognize that a bunch of other objc runtime calls have; // non-escaping arguments and non-releasing arguments, and may be; // non-autoreleasing.; // TODO: Sink autorelease calls as far as possible. Unfortunately we; // usually can't sink them past other calls, which would be the main; // case where it would be useful.; // TODO: The pointer returned from objc_loadWeakRetained is retained.; // TODO: Delete release+retain pairs (rare).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:635,release,release,635,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,2,['release'],['release']
Deployability,"/// @}}; /// Parse a textual MIR pipeline into the provided \c MachineFunctionPass; /// manager.; /// The format of the textual machine pipeline is a comma separated list of; /// machine pass names:; ///; /// machine-funciton-pass,machine-module-pass,...; ///; /// There is no need to specify the pass nesting, and this function; /// currently cannot handle the pass nesting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:33,pipeline,pipeline,33,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],['pipeline']
Deployability,"/// @}}; /// Register a callback for a top-level pipeline entry.; ///; /// If the PassManager type is not given at the top level of the pipeline; /// text, this Callback should be used to determine the appropriate stack of; /// PassManagers and populate the passed ModulePassManager.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:49,pipeline,pipeline,49,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],['pipeline']
Deployability,"/// @}}; /// {{@ Register pipeline parsing callbacks with this pass builder instance.; /// Using these callbacks, callers can parse both a single pass name, as well; /// as entire sub-pipelines, and populate the PassManager instance; /// accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:26,pipeline,pipeline,26,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],"['pipeline', 'pipelines']"
Deployability,"/// A 32-bit PC-relative branch.; ///; /// Represents a PC-relative call or branch to a target. This can be used to; /// identify, record, and/or patch call sites.; ///; /// The fixup expression for this kind includes an implicit offset to account; /// for the PC (unlike the Delta edges) so that a Branch32PCRel with a target; /// T and addend zero is a call/branch to the start (offset zero) of T.; ///; /// Fixup expression:; /// Fixup <- Target - (Fixup + 4) + Addend : int32; ///; /// Errors:; /// - The result of the fixup expression must fit into an int32, otherwise; /// an out-of-range error will be returned.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/i386.h:146,patch,patch,146,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/i386.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/i386.h,2,['patch'],['patch']
Deployability,/// A BumpPtrAllocator object used to quickly allocate and release; /// objects internal to the Preprocessor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h:59,release,release,59,interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,1,['release'],['release']
Deployability,"/// A CRTP mixin class that adds reference counting to a type.; ///; /// The lifetime of an object which inherits from RefCountedBase is managed by; /// calls to Release() and Retain(), which increment and decrement the object's; /// refcount, respectively. When a Release() call decrements the refcount to 0,; /// the object deletes itself.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:162,Release,Release,162,interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h,2,['Release'],['Release']
Deployability,"/// A Clang configuration for end-to-end tests that can be converted to; /// command line arguments for the driver.; ///; /// The configuration is represented as typed, named values, making it easier; /// and safer to work with compared to an array of string command line flags.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Testing/TestClangConfig.h:12,configurat,configuration,12,interpreter/llvm-project/clang/include/clang/Testing/TestClangConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Testing/TestClangConfig.h,2,['configurat'],['configuration']
Deployability,"/// A SARIF Reporting Configuration (\c reportingConfiguration) object contains; /// properties for a \ref SarifRule that can be configured at runtime before; /// analysis begins.; ///; /// Reference:; /// 1. <a href=""https://docs.oasis-open.org/sarif/sarif/v2.1.0/os/sarif-v2.1.0-os.html#_Toc34317852"">reportingConfiguration object</a>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Sarif.h:22,Configurat,Configuration,22,interpreter/llvm-project/clang/include/clang/Basic/Sarif.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Sarif.h,1,['Configurat'],['Configuration']
Deployability,"/// A callback to allow target a chance to update register allocation hints; /// when a register is ""changed"" (e.g. coalesced) to another register.; /// e.g. On ARM, some virtual registers should target register pairs,; /// if one of pair is coalesced to another register, the allocation hint of; /// the other half of the pair should be changed to point to the new register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h:43,update,update,43,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,1,['update'],['update']
Deployability,/// A callback value handle updates the cache when values are erased.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp:28,update,updates,28,interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,1,['update'],['updates']
Deployability,"/// A chain of blocks which will be laid out contiguously.; ///; /// This is the datastructure representing a chain of consecutive blocks that; /// are profitable to layout together in order to maximize fallthrough; /// probabilities and code locality. We also can use a block chain to represent; /// a sequence of basic blocks which have some external (correctness); /// requirement for sequential layout.; ///; /// Chains can be built around a single basic block and can be merged to grow; /// them. They participate in a block-to-chain mapping, which is updated; /// automatically as chains are merged together.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp:557,update,updated,557,interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,1,['update'],['updated']
Deployability,/// A class to find a viable CUDA installation,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h:34,install,installation,34,interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h,1,['install'],['installation']
Deployability,/// A class to find a viable ROCM installation; /// TODO: Generalize to handle libclc.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h:34,install,installation,34,interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,1,['install'],['installation']
Deployability,"/// A class which abstracts out some details necessary for; /// making a call.; ///; /// It is not actually used directly for storing this information in; /// a FunctionType, although FunctionType does currently use the; /// same bit-pattern.; ///; // If you add a field (say Foo), other than the obvious places (both,; // constructors, compile failures), what you need to update is; // * Operator==; // * getFoo; // * withFoo; // * functionType. Add Foo, getFoo.; // * ASTContext::getFooType; // * ASTContext::mergeFunctionTypes; // * FunctionNoProtoType::Profile; // * FunctionProtoType::Profile; // * TypePrinter::PrintFunctionProto; // * AST read and write; // * Codegen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h:373,update,update,373,interpreter/llvm-project/clang/include/clang/AST/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h,1,['update'],['update']
Deployability,/// A cleanup to perform a release of an object at the end of a; /// function. This is used to balance out the incoming +1 of a; /// ns_consumed argument when we can't reasonably do that just by; /// not doing the initial retain for a __block argument.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:27,release,release,27,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,1,['release'],['release']
Deployability,"/// A collection of trees covering the input tokens.; /// When created, each tree corresponds to a single token in the file.; /// Clients call 'foldChildren' to attach one or more subtrees to a parent; /// node and update the list of trees accordingly.; ///; /// Ensures that added nodes properly nest and cover the whole token stream.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/BuildTree.cpp:215,update,update,215,interpreter/llvm-project/clang/lib/Tooling/Syntax/BuildTree.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/BuildTree.cpp,1,['update'],['update']
Deployability,/// A command line argument to force pipeliner to use specified initial; /// interval.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:37,pipeline,pipeliner,37,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['pipeline'],['pipeliner']
Deployability,/// A command line argument to force pipeliner to use specified issue; /// width.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:37,pipeline,pipeliner,37,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['pipeline'],['pipeliner']
Deployability,/// A command line argument to limit the number of stages in the pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:65,pipeline,pipeline,65,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['pipeline'],['pipeline']
Deployability,/// A convenient wrapper around computeObjectUnderConstruction; /// and updateObjectsUnderConstruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h:72,update,updateObjectsUnderConstruction,72,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h,1,['update'],['updateObjectsUnderConstruction']
Deployability,"/// A custom implementation of ASTImporter, for ExternalASTMerger's purposes.; ///; /// There are several modifications:; ///; /// - It enables lazy lookup (via the HasExternalLexicalStorage flag and a few; /// others), which instructs Clang to refer to ExternalASTMerger. Also, it; /// forces MinimalImport to true, which is necessary to make this work.; /// - It maintains a reverse importer for use with names. This allows lookup of; /// arbitrary names in the source context.; /// - It updates the ExternalASTMerger's origin map as needed whenever a; /// it sees a DeclContext.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExternalASTMerger.cpp:490,update,updates,490,interpreter/llvm-project/clang/lib/AST/ExternalASTMerger.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExternalASTMerger.cpp,1,['update'],['updates']
Deployability,"/// A flag for test, so we can print the content of the advisor when running it; /// as part of the default (e.g. -O3) pipeline.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp:119,pipeline,pipeline,119,interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,1,['pipeline'],['pipeline']
Deployability,/// A flag indicating whether the optimization that removes or moves; /// retain/release pairs should be performed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:81,release,release,81,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['release']
Deployability,"/// A functor to release the memory acquired by CreateValue (memory and constructor).; /// This implementation works for types with a trivial destructor. More complex fields implement a derived deleter.; /// The deleter is operational without the field object and thus can be used to destruct/release a value after; /// the field has been destructed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx:17,release,release,17,tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,2,['release'],['release']
Deployability,"/// A hacky area where the inliner can retain history about inlining; /// decisions that mutated the call graph's SCC structure in order to avoid; /// infinite inlining. See the comments in the inliner's CG update logic.; ///; /// FIXME: Keeping this here seems like a big layering issue, we should look; /// for a better technique.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h:207,update,update,207,interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,1,['update'],['update']
Deployability,/// A handler for state updates occurring while an HTTPRequest is performed.; /// Can trigger the client to abort the request by returning an Error from any; /// of its methods.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Debuginfod/HTTPClient.h:24,update,updates,24,interpreter/llvm-project/llvm/include/llvm/Debuginfod/HTTPClient.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Debuginfod/HTTPClient.h,1,['update'],['updates']
Deployability,/// A helper class to do register promotion for all profile counter; /// updates in a loop.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:73,update,updates,73,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['update'],['updates']
Deployability,/// A key-value table of use-specified configuration values.; // TODO: This shouldn't be public.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h:39,configurat,configuration,39,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h,1,['configurat'],['configuration']
Deployability,"/// A macro is used, update information about macros that need unused; /// warnings.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h:21,update,update,21,interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,1,['update'],['update']
Deployability,"/// A map from continuous integer ranges to some value, with a very; /// specialized interface.; ///; /// CRM maps from integer ranges to values. The ranges are continuous, i.e.; /// where one ends, the next one begins. So if the map contains the stops I0-3,; /// the first range is from I0 to I1, the second from I1 to I2, the third from; /// I2 to I3 and the last from I3 to infinity.; ///; /// Ranges must be inserted in order. Inserting a new stop I4 into the map will; /// shrink the fourth range to I3 to I4 and add the new range I4 to inf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ContinuousRangeMap.h:15,continuous,continuous,15,interpreter/llvm-project/clang/include/clang/Serialization/ContinuousRangeMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ContinuousRangeMap.h,2,['continuous'],['continuous']
Deployability,"/// A mapping from module IDs to information about each module.; ///; /// This vector may have gaps, if module files have been removed or have; /// been updated since the index was built. A gap is indicated by an empty; /// file name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/GlobalModuleIndex.h:153,update,updated,153,interpreter/llvm-project/clang/include/clang/Serialization/GlobalModuleIndex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/GlobalModuleIndex.h,1,['update'],['updated']
Deployability,"/// A mock class satisfying the interface expected by ReleaseModeModelRunner for; /// its `TGen` parameter. Useful to avoid conditional compilation complexity, as; /// a compile-time replacement for a real AOT-ed model.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ReleaseModeModelRunner.h:54,Release,ReleaseModeModelRunner,54,interpreter/llvm-project/llvm/include/llvm/Analysis/ReleaseModeModelRunner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ReleaseModeModelRunner.h,1,['Release'],['ReleaseModeModelRunner']
Deployability,"/// A model is usually immutable after passing it to an `RNTupleWriter`. However, for the rare; /// cases that require changing the model after the fact, `RUpdater` provides limited support for; /// incremental updates, e.g. addition of new fields.; ///; /// See `RNTupleWriter::CreateModelUpdater()` for an example.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleModel.hxx:211,update,updates,211,tree/ntuple/v7/inc/ROOT/RNTupleModel.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleModel.hxx,1,['update'],['updates']
Deployability,"/// A new empty BasicBlock (New) now branches directly to Old. Some of; /// Old's predecessors (Preds) are now branching to New instead of Old.; /// If New is the only predecessor, move Old's Phi, if present, to New.; /// Otherwise, add a new Phi in New with appropriate incoming values, and; /// update the incoming values in Old's Phi node too, if present.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:297,update,update,297,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,1,['update'],['update']
Deployability,/// A pass that does profile-guided sinking of instructions into loops.; ///; /// This is a function pass as it shouldn't be composed into any kind of; /// unified loop pass pipeline. The goal of it is to sink code into loops that; /// is loop invariant but only required within the loop body when doing so; /// reduces the global expected dynamic frequency with which it executes.; /// A classic example is an extremely cold branch within a loop body.; ///; /// We do this as a separate pass so that during normal optimization all; /// invariant operations can be held outside the loop body to simplify; /// fundamental analyses and transforms of the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopSink.h:174,pipeline,pipeline,174,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopSink.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopSink.h,1,['pipeline'],['pipeline']
Deployability,"/// A pipeline for a specific subtarget.; ///; /// It emulates an out-of-order execution of instructions. Instructions are; /// fetched from a MCInst sequence managed by an initial 'Fetch' stage.; /// Instructions are firstly fetched, then dispatched to the schedulers, and; /// then executed.; ///; /// This class tracks the lifetime of an instruction from the moment where; /// it gets dispatched to the schedulers, to the moment where it finishes; /// executing and register writes are architecturally committed.; /// In particular, it monitors changes in the state of every instruction; /// in flight.; ///; /// Instructions are executed in a loop of iterations. The number of iterations; /// is defined by the SourceMgr object, which is managed by the initial stage; /// of the instruction pipeline.; ///; /// The Pipeline entry point is method 'run()' which executes cycles in a loop; /// until there are new instructions to dispatch, and not every instruction; /// has been retired.; ///; /// Internally, the Pipeline collects statistical information in the form of; /// histograms. For example, it tracks how the dispatch group size changes; /// over time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Pipeline.h:6,pipeline,pipeline,6,interpreter/llvm-project/llvm/include/llvm/MCA/Pipeline.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Pipeline.h,4,"['Pipeline', 'pipeline']","['Pipeline', 'pipeline']"
Deployability,"/// A pointer to a known latest declaration, either statically known or; /// generationally updated as decls are added by an external source.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Redeclarable.h:92,update,updated,92,interpreter/llvm-project/clang/include/clang/AST/Redeclarable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Redeclarable.h,1,['update'],['updated']
Deployability,"/// A property of the node order in swing-modulo-scheduling is; /// that for nodes outside circuits the following holds:; /// none of them is scheduled after both a successor and a; /// predecessor.; /// The method below checks whether the property is met.; /// If not, debug information is printed and statistics information updated.; /// Note that we do not use an assert statement.; /// The reason is that although an invalid node oder may prevent; /// the pipeliner from finding a pipelined schedule for arbitrary II,; /// it does not lead to the generation of incorrect code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:326,update,updated,326,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,3,"['pipeline', 'update']","['pipelined', 'pipeliner', 'updated']"
Deployability,"/// A query AA is always scheduled as long as we do updates because it does; /// lazy computation that cannot be determined to be done from the outside.; /// However, while query AAs will not be fixed if they do not have outstanding; /// dependences, we will only schedule them like other AAs. If a query AA that; /// received a new query it needs to request an update via; /// `Attributor::requestUpdateForAA`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:52,update,updates,52,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,2,['update'],"['update', 'updates']"
Deployability,"/// A runtime availability query.; ///; /// There are 2 ways to spell this node:; /// \code; /// @available(macos 10.10, ios 8, *); // Objective-C; /// __builtin_available(macos 10.10, ios 8, *); // C, C++, and Objective-C; /// \endcode; ///; /// Note that we only need to keep track of one \c VersionTuple here, which is; /// the one that corresponds to the current deployment target. This is meant to; /// be used in the condition of an \c if, but it is also usable as top level; /// expressions.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprObjC.h:367,deploy,deployment,367,interpreter/llvm-project/clang/include/clang/AST/ExprObjC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprObjC.h,1,['deploy'],['deployment']
Deployability,/// A set of all the nodes updated during legalization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp:27,update,updated,27,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,1,['update'],['updated']
Deployability,"/// A set of analyses that are preserved following a run of a transformation; /// pass.; ///; /// Transformation passes build and return these objects to communicate which; /// analyses are still valid after the transformation. For most passes this is; /// fairly simple: if they don't change anything all analyses are preserved,; /// otherwise only a short list of analyses that have been explicitly updated; /// are preserved.; ///; /// This class also lets transformation passes mark abstract *sets* of analyses; /// as preserved. A transformation that (say) does not alter the CFG can; /// indicate such by marking a particular AnalysisSetKey as preserved, and; /// then analyses can query whether that AnalysisSetKey is preserved.; ///; /// Finally, this class can represent an ""abandoned"" analysis, which is; /// not preserved even if it would be covered by some abstract set of analyses.; ///; /// Given a `PreservedAnalyses` object, an analysis will typically want to; /// figure out whether it is preserved. In the example below, MyAnalysisType is; /// preserved if it's not abandoned, and (a) it's explicitly marked as; /// preserved, (b), the set AllAnalysesOn<MyIRUnit> is preserved, or (c) both; /// AnalysisSetA and AnalysisSetB are preserved.; ///; /// ```; /// auto PAC = PA.getChecker<MyAnalysisType>();; /// if (PAC.preserved() || PAC.preservedSet<AllAnalysesOn<MyIRUnit>>() ||; /// (PAC.preservedSet<AnalysisSetA>() &&; /// PAC.preservedSet<AnalysisSetB>())) {; /// // The analysis has been successfully preserved ...; /// }; /// ```",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h:401,update,updated,401,interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,1,['update'],['updated']
Deployability,/// A simple RAII based Delegate installer.; /// Use this in a scope to install a delegate to the MachineFunction and reset; /// it at the end of the scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GISelChangeObserver.h:33,install,installer,33,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GISelChangeObserver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GISelChangeObserver.h,2,['install'],"['install', 'installer']"
Deployability,/// A simple RAII based Observer installer.; /// Use this in a scope to install the Observer to the MachineFunction and reset; /// it at the end of the scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GISelChangeObserver.h:33,install,installer,33,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GISelChangeObserver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GISelChangeObserver.h,2,['install'],"['install', 'installer']"
Deployability,"/// A struct to capture parsed pass pipeline names.; ///; /// A pipeline is defined as a series of names, each of which may in itself; /// recursively contain a nested pipeline. A name is either the name of a pass; /// (e.g. ""instcombine"") or the name of a pipeline type (e.g. ""cgscc""). If the; /// name is the name of a pass, the InnerPipeline is empty, since passes; /// cannot contain inner pipelines. See parsePassPipeline() for a more; /// detailed description of the textual pipeline format.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:36,pipeline,pipeline,36,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,6,['pipeline'],"['pipeline', 'pipelines']"
Deployability,"/// A thread-safe stack of N indexes (0 to size - 1).; /// RSlotStack can be used to safely assign a ""processing slot"" number to; /// each thread in multi-thread applications.; /// In release builds, pop and push operations are unchecked, potentially; /// resulting in undefined behavior if more slot numbers than available are; /// requested.; /// An important design assumption is that a slot will almost always be available; /// when a thread asks for it, and if it is not available it will be very soon,; /// therefore a spinlock is used for synchronization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx:184,release,release,184,core/imt/inc/ROOT/RSlotStack.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RSlotStack.hxx,1,['release'],['release']
Deployability,"/// A vector of macros that should be interpreted as conditionals; /// instead of as function calls.; ///; /// These are expected to be macros of the form:; /// \code; /// IF(...); /// <conditional-body>; /// else IF(...); /// <conditional-body>; /// \endcode; ///; /// In the .clang-format configuration file, this can be configured like:; /// \code{.yaml}; /// IfMacros: ['IF']; /// \endcode; ///; /// For example: `KJ_IF_MAYBE; /// <https://github.com/capnproto/capnproto/blob/master/kjdoc/tour.md#maybes>`_; /// \version 13",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:291,configurat,configuration,291,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['configurat'],['configuration']
Deployability,"/// A vector of macros that should be interpreted as foreach loops; /// instead of as function calls.; ///; /// These are expected to be macros of the form:; /// \code; /// FOREACH(<variable-declaration>, ...); /// <loop-body>; /// \endcode; ///; /// In the .clang-format configuration file, this can be configured like:; /// \code{.yaml}; /// ForEachMacros: ['RANGES_FOR', 'FOREACH']; /// \endcode; ///; /// For example: BOOST_FOREACH.; /// \version 3.7",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:272,configurat,configuration,272,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['configurat'],['configuration']
Deployability,"/// A vector of macros which are whitespace-sensitive and should not; /// be touched.; ///; /// These are expected to be macros of the form:; /// \code; /// STRINGIZE(...); /// \endcode; ///; /// In the .clang-format configuration file, this can be configured like:; /// \code{.yaml}; /// WhitespaceSensitiveMacros: ['STRINGIZE', 'PP_STRINGIZE']; /// \endcode; ///; /// For example: BOOST_PP_STRINGIZE; /// \version 11",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:217,configurat,configuration,217,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['configurat'],['configuration']
Deployability,"/// A vector of prefixes ordered by the desired groups for Java imports.; ///; /// One group's prefix can be a subset of another - the longest prefix is; /// always matched. Within a group, the imports are ordered lexicographically.; /// Static imports are grouped separately and follow the same group rules.; /// By default, static imports are placed before non-static imports,; /// but this behavior is changed by another option,; /// ``SortJavaStaticImport``.; ///; /// In the .clang-format configuration file, this can be configured like; /// in the following yaml example. This will result in imports being; /// formatted as in the Java example below.; /// \code{.yaml}; /// JavaImportGroups: ['com.example', 'com', 'org']; /// \endcode; ///; /// \code{.java}; /// import static com.example.function1;; ///; /// import static com.test.function2;; ///; /// import static org.example.function3;; ///; /// import com.example.ClassA;; /// import com.example.Test;; /// import com.example.a.ClassB;; ///; /// import com.test.ClassC;; ///; /// import org.example.ClassD;; /// \endcode; /// \version 8",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:494,configurat,configuration,494,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['configurat'],['configuration']
Deployability,"/// A vector of strings that should be interpreted as attributes/qualifiers; /// instead of identifiers. This can be useful for language extensions or; /// static analyzer annotations.; ///; /// For example:; /// \code; /// x = (char *__capability)&y;; /// int function(void) __unused;; /// void only_writes_to_buffer(char *__output buffer);; /// \endcode; ///; /// In the .clang-format configuration file, this can be configured like:; /// \code{.yaml}; /// AttributeMacros: ['__capability', '__output', '__unused']; /// \endcode; ///; /// \version 12",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:387,configurat,configuration,387,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['configurat'],['configuration']
Deployability,"/// A virtual file system parsed from a YAML file.; ///; /// Currently, this class allows creating virtual files and directories. Virtual; /// files map to existing external files in \c ExternalFS, and virtual; /// directories may either map to existing directories in \c ExternalFS or list; /// their contents in the form of other virtual directories and/or files.; ///; /// The basic structure of the parsed file is:; /// \verbatim; /// {; /// 'version': <version number>,; /// <optional configuration>; /// 'roots': [; /// <directory entries>; /// ]; /// }; /// \endverbatim; ///; /// The roots may be absolute or relative. If relative they will be made; /// absolute against either current working directory or the directory where; /// the Overlay YAML file is located, depending on the 'root-relative'; /// configuration.; ///; /// All configuration options are optional.; /// 'case-sensitive': <boolean, default=(true for Posix, false for Windows)>; /// 'use-external-names': <boolean, default=true>; /// 'root-relative': <string, one of 'cwd' or 'overlay-dir', default='cwd'>; /// 'overlay-relative': <boolean, default=false>; /// 'fallthrough': <boolean, default=true, deprecated - use 'redirecting-with'; /// instead>; /// 'redirecting-with': <string, one of 'fallthrough', 'fallback', or; /// 'redirect-only', default='fallthrough'>; ///; /// To clarify, 'root-relative' option will prepend the current working; /// directory, or the overlay directory to the 'roots->name' field only if; /// 'roots->name' is a relative path. On the other hand, when 'overlay-relative'; /// is set to 'true', external paths will always be prepended with the overlay; /// directory, even if external paths are not relative paths. The; /// 'root-relative' option has no interaction with the 'overlay-relative'; /// option.; ///; /// Virtual directories that list their contents are represented as; /// \verbatim; /// {; /// 'type': 'directory',; /// 'name': <string>,; /// 'contents': [ <file or directory entr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/VirtualFileSystem.h:490,configurat,configuration,490,interpreter/llvm-project/llvm/include/llvm/Support/VirtualFileSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/VirtualFileSystem.h,3,['configurat'],['configuration']
Deployability,"/// A wrapper pass around a callback which can be used to populate the; /// AAResults in the AAResultsWrapperPass from an external AA.; ///; /// The callback provided here will be used each time we prepare an AAResults; /// object, and will receive a reference to the function wrapper pass, the; /// function, and the AAResults object to populate. This should be used when; /// setting up a custom pass pipeline to inject a hook into the AA results.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:403,pipeline,pipeline,403,interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h,1,['pipeline'],['pipeline']
Deployability,/// AArch64 Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp:32,Configurat,Configuration,32,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,/// ARC Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCTargetMachine.cpp:28,Configurat,Configuration,28,interpreter/llvm-project/llvm/lib/Target/ARC/ARCTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCTargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,/// ARM Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetMachine.cpp:28,Configurat,Configuration,28,interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,/// AVR Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRTargetMachine.cpp:28,Configurat,Configuration,28,interpreter/llvm-project/llvm/lib/Target/AVR/AVRTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRTargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,"/// Abbrev IDs initialized in the block info block.; /// Note: depending on the container type, some IDs might be uninitialized.; /// Warning: When adding more abbrev IDs, make sure to update the; /// BlockCodeSize (in the call to EnterSubblock).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/BitstreamRemarkSerializer.h:185,update,update,185,interpreter/llvm-project/llvm/include/llvm/Remarks/BitstreamRemarkSerializer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/BitstreamRemarkSerializer.h,1,['update'],['update']
Deployability,/// Abbrevs installed at in this block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamReader.h:12,install,installed,12,interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamReader.h,1,['install'],['installed']
Deployability,/// ActOnCaseStmtBody - This installs a statement as the body of a case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:29,install,installs,29,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['install'],['installs']
Deployability,/// Active chains. The vector gets updated at runtime when chains are merged.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp:35,update,updated,35,interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp,1,['update'],['updated']
Deployability,"/// Adam update of first and second momentum of the weights",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adam.h:9,update,update,9,tmva/tmva/inc/TMVA/DNN/Adam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adam.h,1,['update'],['update']
Deployability,"/// Adam updates ; //____________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Reference/Arithmetic.hxx:9,update,updates,9,tmva/tmva/src/DNN/Architectures/Reference/Arithmetic.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Reference/Arithmetic.hxx,1,['update'],['updates']
Deployability,"/// Adam updates; //____________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/Arithmetic.hxx:9,update,updates,9,tmva/tmva/src/DNN/Architectures/Cpu/Arithmetic.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/Arithmetic.hxx,1,['update'],['updates']
Deployability,"/// Adaptor that maps from a function to its loops.; ///; /// Designed to allow composition of a LoopPass(Manager) and a; /// FunctionPassManager. Note that if this pass is constructed with a \c; /// FunctionAnalysisManager it will run the \c LoopAnalysisManagerFunctionProxy; /// analysis prior to running the loop passes over the function to enable a \c; /// LoopAnalysisManager to be used within this run safely.; ///; /// The adaptor comes with two modes: the loop mode and the loop-nest mode, and; /// the worklist updater lived inside will be in the same mode as the adaptor; /// (refer to the documentation of \c LPMUpdater for more detailed explanation).; /// Specifically, in loop mode, all loops in the function will be pushed into; /// the worklist and processed by \p Pass, while only top-level loops are; /// processed in loop-nest mode. Please refer to the various specializations of; /// \fn createLoopFunctionToLoopPassAdaptor to see when loop mode and loop-nest; /// mode are used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h:520,update,updater,520,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,1,['update'],['updater']
Deployability,"/// Add Succ as a successor of this MachineBasicBlock. The Predecessors list; /// of Succ is automatically updated. The probability is not provided because; /// BPI is not available (e.g. -O0 is used), in which case edge probabilities; /// won't be used. Using this interface can save some space.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:107,update,updated,107,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,1,['update'],['updated']
Deployability,/// Add a CodeGen pass at this point in the pipeline after checking for target; /// and command line overrides.; ///; /// addPass cannot return a pointer to the pass instance because is internal the; /// PassManager and the instance we create here may already be freed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:44,pipeline,pipeline,44,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,1,['pipeline'],['pipeline']
Deployability,/// Add a definition and source virtual registers pair for SSA update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp:63,update,update,63,interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,1,['update'],['update']
Deployability,/// Add a new JITDylib to this ExecutionSession.; ///; /// The JITDylib Name is required to be unique. Clients should verify that; /// names are not being re-used (e.g. by calling getJITDylibByName) if names; /// are based on user input.; ///; /// If a Platform is attached then Platform::setupJITDylib will be called to; /// install standard platform symbols (e.g. standard library interposes).; /// If no Platform is attached this call is equivalent to createBareJITDylib.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Core.h:326,install,install,326,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Core.h,1,['install'],['install']
Deployability,/// Add a new bare JITDylib to this ExecutionSession.; ///; /// The JITDylib Name is required to be unique. Clients should verify that; /// names are not being re-used (E.g. by calling getJITDylibByName) if names; /// are based on user input.; ///; /// This call does not install any library code or symbols into the newly; /// created JITDylib. The client is responsible for all configuration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Core.h:272,install,install,272,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Core.h,2,"['configurat', 'install']","['configuration', 'install']"
Deployability,/// Add a re-exported library.; ///; /// \param InstallName The name of the library to re-export.; /// \param Target The target triple for which this applies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h:48,Install,InstallName,48,interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,1,['Install'],['InstallName']
Deployability,"/// Add a segment to the interval LI for the value number VNI. If LI has; /// subranges, corresponding segments will be added to them as well, but; /// with newly created value numbers. If Original is true, dead def will; /// only be added a subrange of LI if the corresponding subrange of the; /// original interval has a def at this index. Otherwise, all subranges; /// of LI will be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h:386,update,updated,386,interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,1,['update'],['updated']
Deployability,"/// Add a stack map intrinsic call's live variable operands to a stackmap; /// or patchpoint target node's operand list.; ///; /// Constants are converted to TargetConstants purely as an optimization to; /// avoid constant materialization and register allocation.; ///; /// FrameIndex operands are converted to TargetFrameIndex so that ISEL does not; /// generate addess computation nodes, and so FinalizeISel can convert the; /// TargetFrameIndex into a DirectMemRefOp StackMap location. This avoids; /// address materialization and register allocation, but may also be required; /// for correctness. If a StackMap (or PatchPoint) intrinsic directly uses an; /// alloca in the entry block, then the runtime may assume that the alloca's; /// StackMap location can be read immediately after compilation and that the; /// location is valid at any point during execution (this is similar to the; /// assumption made by the llvm.gcroot intrinsic). If the alloca's location were; /// only available in a register, then the runtime would need to trap when; /// execution reaches the StackMap in order to read the alloca's location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:82,patch,patchpoint,82,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,2,"['Patch', 'patch']","['PatchPoint', 'patchpoint']"
Deployability,/// Add a stackmap or patchpoint intrinsic call's live variable; /// operands to a stackmap or patchpoint machine instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FastISel.h:22,patch,patchpoint,22,interpreter/llvm-project/llvm/include/llvm/CodeGen/FastISel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FastISel.h,2,['patch'],['patchpoint']
Deployability,/// Add a transition noting the release of the given value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:32,release,release,32,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['release']
Deployability,/// Add an allowable client.; ///; /// Mach-O Dynamic libraries have the concept of allowable clients that are; /// checked during static link time. The name of the application or library; /// that is being generated needs to match one of the allowable clients or the; /// linker refuses to link this library.; ///; /// \param InstallName The name of the client that is allowed to link this; /// library.; /// \param Target The target triple for which this applies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h:327,Install,InstallName,327,interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,1,['Install'],['InstallName']
Deployability,/// Add an object file to be linked. Pre-load compile unit die. Call; /// \p OnCUDieLoaded for each compile unit die. If \p File has reference to; /// a Clang module and UpdateIndexTablesOnly == false then the module is be; /// pre-loaded by \p Loader.; ///; /// \pre a call to setNoODR(true) and/or setUpdateIndexTablesOnly(bool Update); /// must be made when required.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/DWARFLinkerBase.h:170,Update,UpdateIndexTablesOnly,170,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/DWARFLinkerBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/DWARFLinkerBase.h,2,['Update'],"['Update', 'UpdateIndexTablesOnly']"
Deployability,"/// Add object file to be linked. Pre-load compile unit die. Call; /// \p OnCUDieLoaded for each compile unit die. If specified \p File; /// has reference to the Clang module then such module would be; /// pre-loaded by \p Loader for !Update case.; ///; /// \pre NoODR, Update options should be set before call to addObjectFile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h:235,Update,Update,235,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,4,['Update'],['Update']
Deployability,"/// Add or update the an entry (Kind, MD) to MetadataToCopy, if \p MD is not; /// null. If \p MD is null, remove the entry with \p Kind.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h:11,update,update,11,interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h,1,['update'],['update']
Deployability,/// Add pass P into the PassVector. Update; /// AvailableAnalysis appropriately if ProcessAnalysis is true.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h:36,Update,Update,36,interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,2,['Update'],['Update']
Deployability,"/// Add the complete set of target-independent postISel code generator passes.; ///; /// This can be read as the standard order of major LLVM CodeGen stages. Stages; /// with nontrivial configuration or multiple passes are broken out below in; /// add%Stage routines.; ///; /// Any CodeGenPassBuilder<Derived>::addXX routine may be overriden by the; /// Target. The addPre/Post methods with empty header implementations allow; /// injecting target-specific fixups just before or after major stages.; /// Additionally, targets have the flexibility to change pass order within a; /// stage by overriding default implementation of add%Stage routines below. Each; /// technique has maintainability tradeoffs because alternate pass orders are; /// not well supported. addPre/Post works better if the target pass is easily; /// tied to a common pass. But if it has subtle dependencies on multiple passes,; /// the target should override the stage instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:186,configurat,configuration,186,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,1,['configurat'],['configuration']
Deployability,"/// Add the complete set of target-independent postISel code generator passes.; ///; /// This can be read as the standard order of major LLVM CodeGen stages. Stages; /// with nontrivial configuration or multiple passes are broken out below in; /// add%Stage routines.; ///; /// Any TargetPassConfig::addXX routine may be overriden by the Target. The; /// addPre/Post methods with empty header implementations allow injecting; /// target-specific fixups just before or after major stages. Additionally,; /// targets have the flexibility to change pass order within a stage by; /// overriding default implementation of add%Stage routines below. Each; /// technique has maintainability tradeoffs because alternate pass orders are; /// not well supported. addPre/Post works better if the target pass is easily; /// tied to a common pass. But if it has subtle dependencies on multiple passes,; /// the target should override the stage instead.; ///; /// TODO: We could use a single addPre/Post(ID) hook to allow pass injection; /// before/after any target-independent pass. But it's currently overkill.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:186,configurat,configuration,186,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,1,['configurat'],['configuration']
Deployability,/// Add the given processor resource to this scheduled zone.; ///; /// \param ReleaseAtCycle indicates the number of consecutive (non-pipelined); /// cycles during which this resource is released.; ///; /// \param AcquireAtCycle indicates the number of consecutive (non-pipelined); /// cycles at which the resource is aquired after issue (assuming no stalls).; ///; /// \return the next cycle at which the instruction may execute without; /// oversubscribing resources.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:78,Release,ReleaseAtCycle,78,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,4,"['Release', 'pipeline', 'release']","['ReleaseAtCycle', 'pipelined', 'released']"
Deployability,"/// Add the instruction \param I to this prefetch. If it's not the first; /// one, 'InsertPt' and 'Writes' will be updated as required.; /// \param PtrDiff the known constant address difference to the first added; /// instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDataPrefetch.cpp:115,update,updated,115,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDataPrefetch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDataPrefetch.cpp,1,['update'],['updated']
Deployability,/// Add the specified loop to be a child of this loop.; /// This updates the loop depth of the new child.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h:65,update,updates,65,interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h,1,['update'],['updates']
Deployability,/// Add the user to the use list and update the cost.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/ConstantHoisting.h:37,update,update,37,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/ConstantHoisting.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/ConstantHoisting.h,2,['update'],['update']
Deployability,"/// Add undef values dominating the loop and the optionally given additional; /// blocks, so that the SSA updater doesn't have to search all the way to the; /// function entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.cpp:106,update,updater,106,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.cpp,1,['update'],['updater']
Deployability,/// AddPred - adds a predecessor edge to SUnit SU.; /// This returns true if this is a new predecessor.; /// Updates the topological ordering if required.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:109,Update,Updates,109,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['Update'],['Updates']
Deployability,/// AddPredQueued - Queues and update to add a predecessor edge to SUnit SU.; /// This returns true if this is a new predecessor.; /// Does *NOT* update the topological ordering! It just queues an update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:31,update,update,31,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,3,['update'],['update']
Deployability,"/// AddPseudoTwoAddrDeps - If two nodes share an operand and one of them uses; /// it as a def&use operand. Add a pseudo control edge from it to the other; /// node (if it won't create a cycle) so the two-address one will be scheduled; /// first (lower in the schedule). If both nodes are two-address, favor the; /// one that has a CopyToReg use (more likely to be a loop induction update).; /// If both are two-address, but one is commutable while the other is not; /// commutable, favor the one that's not commutable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:382,update,update,382,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['update'],['update']
Deployability,/// Additional paths to search for `.include` directives when using the; /// integrated assembler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCTargetOptions.h:77,integrat,integrated,77,interpreter/llvm-project/llvm/include/llvm/MC/MCTargetOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCTargetOptions.h,1,['integrat'],['integrated']
Deployability,"/// Adds a complex addressing mode to the given machine instr builder.; /// Note, this will constrain the index register. If its not possible to; /// constrain the given index register, then a new one will be created. The; /// IndexReg field of the addressing mode will be updated to match in this case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:273,update,updated,273,interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp,1,['update'],['updated']
Deployability,/// Adds an AsmPrinter pass to the pipeline that prints assembly or; /// machine code from the MI representation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h:35,pipeline,pipeline,35,interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,1,['pipeline'],['pipeline']
Deployability,/// Adds and/or updates the parent/child-relations of the complete; /// stmt tree of S. All children of S including indirect descendants are; /// visited and updated or inserted but not the parents of S.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ParentMap.h:16,update,updates,16,interpreter/llvm-project/clang/include/clang/AST/ParentMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ParentMap.h,2,['update'],"['updated', 'updates']"
Deployability,"/// Advance one step based on the previous match status unless the previous; /// status is MS_None. Then update Status based on the comparison between two; /// container iterators at the current step. If the previous status is; /// MS_None, it means two iterators are at the beginning and no comparison has; /// been made, so we simply update Status without advancing the iterators.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp:105,update,update,105,interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp,2,['update'],['update']
Deployability,"/// After FromBB is tail duplicated into its predecessor blocks, the successors; /// have gained new predecessors. Update the PHI instructions in them; /// accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp:115,Update,Update,115,interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,1,['Update'],['Update']
Deployability,"/// After Peeling the loop is modified quite a bit, hence all of the Blocks; /// need to be updated accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:92,update,updated,92,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['update'],['updated']
Deployability,"/// After an CGSCC pass changes a function in ways that affect the call; /// graph, this method can be called to update it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h:113,update,update,113,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h,1,['update'],['update']
Deployability,"/// After an objc_retain, the reference count of the referenced; /// object is known to be positive. Similarly, before an objc_release, the; /// reference count of the referenced object is known to be positive. If; /// there are retain-release pairs in code regions where the retain count; /// is known to be positive, they can be eliminated, regardless of any side; /// effects between them.; ///; /// Also, a retain+release pair nested within another retain+release; /// pair all on the known same pointer value can be eliminated, regardless; /// of any intervening side effects.; ///; /// KnownSafe is true when either of these conditions is satisfied.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h:236,release,release,236,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h,3,['release'],['release']
Deployability,/// After cloning stage the output DIEs offsets are deallocated.; /// This method copies output offsets for referenced DIEs into DIEs patches.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerCompileUnit.h:134,patch,patches,134,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerCompileUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerCompileUnit.h,1,['patch'],['patches']
Deployability,"/// After the first step of rebuilding the GEP index without the constant; /// offset, distribute s/zext to the operands of all operators in UserChain.; /// e.g., zext(sext(a + (b + 5)) (assuming no overflow) =>; /// zext(sext(a)) + (zext(sext(b)) + zext(sext(5))).; ///; /// The function also updates UserChain to point to new subexpressions after; /// distributing s/zext. e.g., the old UserChain of the above example is; /// 5 -> b + 5 -> a + (b + 5) -> sext(...) -> zext(sext(...)),; /// and the new UserChain is; /// zext(sext(5)) -> zext(sext(b)) + zext(sext(5)) ->; /// zext(sext(a)) + (zext(sext(b)) + zext(sext(5)); ///; /// \p ChainIndex The index to UserChain. ChainIndex is initially; /// UserChain.size() - 1, and is decremented during; /// the recursion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp:294,update,updates,294,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,1,['update'],['updates']
Deployability,"/// Align for dynamic shared memory if any. Dynamic shared memory is; /// allocated directly after the static one, i.e., LDSSize. Need to pad; /// LDSSize to ensure that dynamic one is aligned accordingly.; /// The maximal alignment is updated during IR translation or lowering; /// stages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineFunction.h:236,update,updated,236,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineFunction.h,1,['update'],['updated']
Deployability,"/// All instructions and registers in B are moved to A, and B is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h:65,release,released,65,interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,1,['release'],['released']
Deployability,"/// Allocate memory according to the rules of the active lowering.; ///; /// \param CG - if non-null, will be updated for the new call",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInternal.h:110,update,updated,110,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInternal.h,1,['update'],['updated']
Deployability,"/// Allow DirectoryEntryRef to degrade into 'const DirectoryEntry*' to; /// facilitate incremental adoption.; ///; /// The goal is to avoid code churn due to dances like the following:; /// \code; /// // Old code.; /// lvalue = rvalue;; ///; /// // Temporary code from an incremental patch.; /// lvalue = &rvalue.getDirectoryEntry();; ///; /// // Final code.; /// lvalue = rvalue;; /// \endcode; ///; /// FIXME: Once DirectoryEntryRef is ""everywhere"" and DirectoryEntry::getName; /// has been deleted, delete this implicit conversion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DirectoryEntry.h:284,patch,patch,284,interpreter/llvm-project/clang/include/clang/Basic/DirectoryEntry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DirectoryEntry.h,1,['patch'],['patch']
Deployability,"/// Allow FileEntryRef to degrade into 'const FileEntry*' to facilitate; /// incremental adoption.; ///; /// The goal is to avoid code churn due to dances like the following:; /// \code; /// // Old code.; /// lvalue = rvalue;; ///; /// // Temporary code from an incremental patch.; /// lvalue = &rvalue.getFileEntry();; ///; /// // Final code.; /// lvalue = rvalue;; /// \endcode; ///; /// FIXME: Once FileEntryRef is ""everywhere"" and FileEntry::LastRef and; /// FileEntry::getName have been deleted, delete this implicit conversion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileEntry.h:274,patch,patch,274,interpreter/llvm-project/clang/include/clang/Basic/FileEntry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileEntry.h,1,['patch'],['patch']
Deployability,"/// Allow adding more CGSCC passes, besides inlining. This should be called; /// before run is called, as part of pass pipeline building.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Inliner.h:119,pipeline,pipeline,119,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Inliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Inliner.h,1,['pipeline'],['pipeline']
Deployability,"/// Allow standard passes to be disabled by the command line, regardless of who; /// is adding the pass.; ///; /// StandardID is the pass identified in the standard pass pipeline and provided; /// to addPass(). It may be a target-specific ID in the case that the target; /// directly adds its own pass, but in that case we harmlessly fall through.; ///; /// TargetID is the pass that the target has configured to override StandardID.; ///; /// StandardID may be a pseudo ID. In that case TargetID is the name of the real; /// pass to run. This allows multiple options to control a single pass depending; /// on where in the pipeline that pass is added.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:170,pipeline,pipeline,170,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,2,['pipeline'],['pipeline']
Deployability,/// Allow the target to modify the pass pipeline.; // TODO: Populate all pass names by using <Target>PassRegistry.def.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h:40,pipeline,pipeline,40,interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,1,['pipeline'],['pipeline']
Deployability,"/// Allow the target to override a specific pass without overriding the pass; /// pipeline. When passes are added to the standard pipeline at the; /// point where StandardID is expected, add TargetID in its place.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h:82,pipeline,pipeline,82,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,2,['pipeline'],['pipeline']
Deployability,/// Allows a query AA to request an update if a new query was received.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:36,update,update,36,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['update']
Deployability,"/// Allows us to assert that ASTUnit is not being used concurrently,; /// which is not supported.; ///; /// Clients should create instances of the ConcurrencyCheck class whenever; /// using the ASTUnit in a way that isn't intended to be concurrent, which is; /// just about any usage.; /// Becomes a noop in release mode; only useful for debug mode checking.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/ASTUnit.h:308,release,release,308,interpreter/llvm-project/clang/include/clang/Frontend/ASTUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/ASTUnit.h,1,['release'],['release']
Deployability,"/// An LinkGraph pass configuration, consisting of a list of pre-prune,; /// post-prune, and post-fixup passes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h:22,configurat,configuration,22,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h,1,['configurat'],['configuration']
Deployability,"/// An RAII helper object ensure that the unique lock file is removed.; ///; /// Ensures that if there is an error or a signal before we finish acquiring the; /// lock, the unique file will be removed. And if we successfully take the lock,; /// the signal handler is left in place so that signals while the lock is held; /// will remove the unique lock file. The caller should ensure there is a; /// matching call to sys::DontRemoveFileOnSignal when the lock is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/LockFileManager.cpp:462,release,released,462,interpreter/llvm-project/llvm/lib/Support/LockFileManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/LockFileManager.cpp,1,['release'],['released']
Deployability,"/// An abstract base class for streams implementations that also support a; /// pwrite operation. This is useful for code that can mostly stream out data,; /// but needs to patch in a header that needs to know the output size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:173,patch,patch,173,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,1,['patch'],['patch']
Deployability,/// An expression contains semantical error not related to; /// 'omp atomic [update]',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:77,update,update,77,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update']
Deployability,"/// An extension of the MLInlineAdvisor for the 'development' mode, targeting; /// the offline training scenario. Note that training happens outside of the; /// compiler, this facility is concerned with producing training data (""logs"").; /// This InlineAdvisor can operate in the following modes:; ///; /// 1) collect logs for the default policy. This is useful for bootstrapping; /// training, which will be considerably faster by starting from a reasonable; /// policy.; ///; /// 2) collect logs for the ML policy, using a model from a previous; /// training. Potentially, that model uses internally some small random; /// perturbation of its weights, to induce exploration (setting this up is the; /// responsibility of the training algorithm). The logs would then be used to; /// retrain and improve on this model.; ///; /// 3) use the provided model, with no logging. This is useful for end to end; /// validation - the model, in this case, is a release candidate and shouldn't; /// have random perturbations. It is a convenience feature: rather than needing; /// to take the release candidate model and compile it in 'release' mode,; /// validate it, then potentially discard it, it's easier to just pass the model; /// to the compiler, albeit compilation would be slower, as a one-off. Once the; /// model behaves satisfactorily, it can be compiled AOT, for efficiency, in; /// release mode. The expectation is that a well-trained model provides a good; /// policy over a sufficiently diverse codebase, over many changes (i.e.; /// training happens seldom).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DevelopmentModeInlineAdvisor.cpp:951,release,release,951,interpreter/llvm-project/llvm/lib/Analysis/DevelopmentModeInlineAdvisor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DevelopmentModeInlineAdvisor.cpp,4,['release'],['release']
Deployability,/// An implementation detail class which is introduced to split the checker; /// logic into several methods while maintaining a consistently updated state; /// and access to other contextual data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BitwiseShiftChecker.cpp:141,update,updated,141,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BitwiseShiftChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BitwiseShiftChecker.cpp,1,['update'],['updated']
Deployability,"/// An instance of this object exists for each enum constant; /// that is defined. For example, in ""enum X {a,b}"", each of a/b are; /// EnumConstantDecl's, X is an instance of EnumDecl, and the type of a/b is a; /// TagType for the X EnumDecl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:123,a/b,a/b,123,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,2,['a/b'],['a/b']
Deployability,/// An instruction propagated through the simulated instruction pipeline.; ///; /// This class is used to monitor changes to the internal state of instructions; /// that are sent to the various components of the simulated hardware pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h:64,pipeline,pipeline,64,interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,2,['pipeline'],['pipeline']
Deployability,/// An object that helps properly build a continuous range map; /// from a set of values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ContinuousRangeMap.h:42,continuous,continuous,42,interpreter/llvm-project/clang/include/clang/Serialization/ContinuousRangeMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ContinuousRangeMap.h,1,['continuous'],['continuous']
Deployability,/// An ordered list of stages that define this instruction pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Pipeline.h:59,pipeline,pipeline,59,interpreter/llvm-project/llvm/include/llvm/MCA/Pipeline.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Pipeline.h,1,['pipeline'],['pipeline']
Deployability,/// An update to a Decl.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTWriter.h:7,update,update,7,interpreter/llvm-project/clang/include/clang/Serialization/ASTWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTWriter.h,1,['update'],['update']
Deployability,"/// Analyze loop L, which must be a single-basic-block loop, and if the; /// conditions can be understood enough produce a PipelinerLoopInfo object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:123,Pipeline,PipelinerLoopInfo,123,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,4,['Pipeline'],['PipelinerLoopInfo']
Deployability,/// Another root entry which references this RootDieEntry.; /// ReferencedByDieEntry is kept to update placement.; /// if RootDieEntry has placement incompatible with placement; /// of ReferencedByDieEntry then it should be updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.h:96,update,update,96,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.h,2,['update'],"['update', 'updated']"
Deployability,/// Any textual suffix on the patch number.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h:30,patch,patch,30,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,1,['patch'],['patch']
Deployability,"/// Appends the next token to \p State and updates information; /// necessary for indentation.; ///; /// Adds a line break and necessary indentation.; ///; /// If \p DryRun is \c false, also creates and stores the required; /// \c Replacement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h:43,update,updates,43,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,1,['update'],['updates']
Deployability,"/// Appends the next token to \p State and updates information; /// necessary for indentation.; ///; /// Puts the token on the current line if \p Newline is \c false and adds a; /// line break and necessary indentation otherwise.; ///; /// If \p DryRun is \c false, also creates and stores the required; /// \c Replacement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h:43,update,updates,43,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,1,['update'],['updates']
Deployability,"/// Appends the next token to \p State and updates information; /// necessary for indentation.; ///; /// Puts the token on the current line.; ///; /// If \p DryRun is \c false, also creates and stores the required; /// \c Replacement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h:43,update,updates,43,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,1,['update'],['updates']
Deployability,"/// Apply CFG insert updates, analogous with the DT edge updates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:21,update,updates,21,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,2,['update'],['updates']
Deployability,"/// Apply CFG updates, analogous with the DT edge updates. By default, the; /// DT is assumed to be already up to date. If UpdateDTFirst is true, first; /// update the DT with the same updates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:14,update,updates,14,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,5,"['Update', 'update']","['UpdateDTFirst', 'update', 'updates']"
Deployability,/// Apply all pending updates to available trees and flush all BasicBlocks; /// awaiting deletion.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:22,update,updates,22,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,1,['update'],['updates']
Deployability,/// Apply all the recorded critical edges to the DT.; /// This updates the underlying DT information in a way that uses; /// the fast query path of DT as much as possible.; ///; /// \post CriticalEdgesToSplit.empty().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineDominators.h:63,update,updates,63,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineDominators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineDominators.h,1,['update'],['updates']
Deployability,"/// Apply corrections on the fvalue if errors were signaled.; ///; /// Two kinds of errors are possible: 1. infinite or nan values (the latter; /// can be a signaling nan, using RooNaNPacker) or 2. logEvalError-type errors.; /// Both are caught here and fvalue is updated so that Minuit in turn is nudged; /// to move the search outside of the problematic parameter space area.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsMinimizerFcn.cxx:264,update,updated,264,roofit/roofitcore/src/RooAbsMinimizerFcn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsMinimizerFcn.cxx,1,['update'],['updated']
Deployability,/// Arguments originated from configuration file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:30,configurat,configuration,30,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['configurat'],['configuration']
Deployability,"/// As we scan instructions optimizing them, this is the next instruction; /// to optimize. Transforms that can invalidate this should update it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:135,update,update,135,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['update'],['update']
Deployability,/// Assert that this is a shufflevector and return the mask.; ///; /// TODO: This is a temporary hack until we update the bitcode format for; /// shufflevector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h:111,update,update,111,interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,1,['update'],['update']
Deployability,/// Assign VirtReg to PhysReg.; /// This will mark VirtReg's live range as occupied in the LiveRegMatrix and; /// update VirtRegMap. The live range is expected to be available in PhysReg.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegMatrix.h:114,update,update,114,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegMatrix.h,1,['update'],['update']
Deployability,/// Assigning into this object requires the old value to be; /// released and the new value to be retained. The timing of the; /// release of the old value is inexact: it may be moved to; /// immediately after the last known point where the value is; /// live.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h:65,release,released,65,interpreter/llvm-project/clang/include/clang/AST/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h,2,['release'],"['release', 'released']"
Deployability,"/// Assigns the given Node to calls at or inlined into the location with; /// the Node's stack id, after post order traversing and processing its; /// caller nodes. Uses the call information recorded in the given; /// StackIdToMatchingCalls map, and creates new nodes for inlined sequences; /// as needed. Called by updateStackNodes which sets up the given; /// StackIdToMatchingCalls map.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:316,update,updateStackNodes,316,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['update'],['updateStackNodes']
Deployability,"/// Atomic ordering for LLVM's memory model.; ///; /// C++ defines ordering as a lattice. LLVM supplements this with NotAtomic and; /// Unordered, which are both below the C++ orders.; ///; /// not_atomic-->unordered-->relaxed-->release--------------->acq_rel-->seq_cst; /// \-->consume-->acquire--/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AtomicOrdering.h:229,release,release,229,interpreter/llvm-project/llvm/include/llvm/Support/AtomicOrdering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AtomicOrdering.h,1,['release'],['release']
Deployability,"/// Attempt to extract the fields of \p LCV and bind them to the struct region; /// \p R.; ///; /// This path is used when it seems advantageous to ""force"" loading the values; /// within a LazyCompoundVal to bind memberwise to the struct region, rather; /// than using a Default binding at the base of the entire region. This is a; /// heuristic attempting to avoid building long chains of LazyCompoundVals.; ///; /// \returns The updated store bindings, or \c std::nullopt if binding; /// non-lazily would be too expensive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:431,update,updated,431,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,1,['update'],['updated']
Deployability,"/// Attempt to fix the degenerate cases when the instruction serialization; /// causes the register lifetimes to overlap. For example,; /// p' = store_pi(p, b); /// = load p, offset; /// In this case p and p' overlap, which means that two registers are needed.; /// Instead, this function changes the load to use p' and updates the offset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:320,update,updates,320,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['update'],['updates']
Deployability,"/// Attempt to join these two intervals. On failure, this; /// returns false. The output ""SrcInt"" will not have been modified, so we; /// can use this information below to update aliases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:172,update,update,172,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['update'],['update']
Deployability,"/// Attempt to merge an objc_release with a store, load, and objc_retain to form; /// an objc_storeStrong. An objc_storeStrong:; ///; /// objc_storeStrong(i8** %old_ptr, i8* new_value); ///; /// is equivalent to the following IR sequence:; ///; /// ; Load old value.; /// %old_value = load i8** %old_ptr (1); ///; /// ; Increment the new value and then release the old value. This must occur; /// ; in order in case old_value releases new_value in its destructor causing; /// ; us to potentially have a dangling ptr.; /// tail call i8* @objc_retain(i8* %new_value) (2); /// tail call void @objc_release(i8* %old_value) (3); ///; /// ; Store the new_value into old_ptr; /// store i8* %new_value, i8** %old_ptr (4); ///; /// The safety of this optimization is based around the following; /// considerations:; ///; /// 1. We are forming the store strong at the store. Thus to perform this; /// optimization it must be safe to move the retain, load, and release to; /// (4).; /// 2. We need to make sure that any re-orderings of (1), (2), (3), (4) are; /// safe.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp:353,release,release,353,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,3,['release'],"['release', 'releases']"
Deployability,"/// Attempts to merge a block into its predecessor, if possible. The return; /// value indicates success or failure.; /// By default do not merge blocks if BB's predecessor has multiple successors.; /// If PredecessorWithTwoSuccessors = true, the blocks can only be merged; /// if BB's Pred has a branch to BB and to AnotherBB, and BB has a single; /// successor Sing. In this case the branch will be updated with Sing instead of; /// BB, and BB will still be merged into its predecessor and removed.; /// If \p DT is not nullptr, update it directly; in that case, DTU must be; /// nullptr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:401,update,updated,401,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,2,['update'],"['update', 'updated']"
Deployability,"/// Attempts to release the lock in reader mode.; /// @returns false if any kind of error occurs, true otherwise.; /// Unconditionally release the lock in reader mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/RWMutex.h:16,release,release,16,interpreter/llvm-project/llvm/include/llvm/Support/RWMutex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/RWMutex.h,2,['release'],['release']
Deployability,"/// Attempts to release the lock in writer mode.; /// @returns false if any kind of error occurs, true otherwise.; /// Unconditionally release the lock in write mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/RWMutex.h:16,release,release,16,interpreter/llvm-project/llvm/include/llvm/Support/RWMutex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/RWMutex.h,2,['release'],['release']
Deployability,"/// BB is declared dead, which implied other blocks become dead as well. This; /// function is to add all these blocks to ""DeadBlocks"". For the dead blocks'; /// live successors, update their phi nodes by replacing the operands; /// corresponding to dead blocks with UndefVal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:179,update,update,179,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['update'],['update']
Deployability,"/// BBInsertBeforeMap holds a description for the set of location defs to be; /// inserted after the analysis is complete. It is updated during the dataflow; /// and the entry for a block is CLEARED each time it is (re-)visited. After; /// the dataflow is complete, each block entry will contain the set of defs; /// calculated during the final (fixed-point) iteration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:129,update,updated,129,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['update'],['updated']
Deployability,/// Base class for instructions consumed by the simulation pipeline.; ///; /// This class tracks data dependencies as well as generic properties; /// of the instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h:59,pipeline,pipeline,59,interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,1,['pipeline'],['pipeline']
Deployability,"/// Base class of the Configurations for the member wise looping routines.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TStreamerInfoActions.h:22,Configurat,Configurations,22,io/io/inc/TStreamerInfoActions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TStreamerInfoActions.h,1,['Configurat'],['Configurations']
Deployability,"/// Base class of the Configurations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TStreamerInfoActions.h:22,Configurat,Configurations,22,io/io/inc/TStreamerInfoActions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TStreamerInfoActions.h,1,['Configurat'],['Configurations']
Deployability,"/// Base struct for all ""concrete attribute"" deductions.; ///; /// The abstract attribute is a minimal interface that allows the Attributor to; /// orchestrate the abstract/fixpoint analysis. The design allows to hide away; /// implementation choices made for the subclasses but also to structure their; /// implementation and simplify the use of other abstract attributes in-flight.; ///; /// To allow easy creation of new attributes, most methods have default; /// implementations. The ones that do not are generally straight forward, except; /// `AbstractAttribute::updateImpl` which is the location of most reasoning; /// associated with the abstract attribute. The update is invoked by the; /// Attributor in case the situation used to justify the current optimistic; /// state might have changed. The Attributor determines this automatically; /// by monitoring the `Attributor::getAAFor` calls made by abstract attributes.; ///; /// The `updateImpl` method should inspect the IR and other abstract attributes; /// in-flight to justify the best possible (=optimistic) state. The actual; /// implementation is, similar to the underlying abstract state encoding, not; /// exposed. In the most common case, the `updateImpl` will go through a list of; /// reasons why its optimistic state is valid given the current information. If; /// any combination of them holds and is sufficient to justify the current; /// optimistic state, the method shall return UNCHAGED. If not, the optimistic; /// state is adjusted to the situation and the method shall return CHANGED.; ///; /// If the manifestation of the ""concrete attribute"" deduced by the subclass; /// differs from the ""default"" behavior, which is a (set of) LLVM-IR; /// attribute(s) for an argument, call site argument, function return value, or; /// function, the `AbstractAttribute::manifest` method should be overloaded.; ///; /// NOTE: If the state obtained via getState() is INVALID, thus if; /// AbstractAttribute::getState().isValidState() ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:569,update,updateImpl,569,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,2,['update'],"['update', 'updateImpl']"
Deployability,"/// Before the llvm-mca pipeline dispatches an instruction, it first checks; /// for any register or resource dependencies / hazards. If it doesn't find; /// any, this method will be invoked to determine if there are any custom; /// hazards that the instruction needs to wait for.; /// The return value of this method is the number of cycles that the; /// instruction needs to wait for.; /// It's safe to underestimate the number of cycles to wait for since these; /// checks will be invoked again before the intruction gets dispatched.; /// However, it's not safe (accurate) to overestimate the number of cycles; /// to wait for since the instruction will wait for AT LEAST that number of; /// cycles before attempting to be dispatched again.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h:24,pipeline,pipeline,24,interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,1,['pipeline'],['pipeline']
Deployability,/// Binary path for the CUDA installation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp:29,install,installation,29,interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp,1,['install'],['installation']
Deployability,/// Block entrance. (Update counters).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:21,Update,Update,21,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,1,['Update'],['Update']
Deployability,/// Bonus to be applied when percentage of vector instructions in callee is; /// high (see more details in updateThreshold).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:107,update,updateThreshold,107,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['update'],['updateThreshold']
Deployability,/// Boolean toggled when .secure_log_unique / .secure_log_reset is seen to; /// catch errors if .secure_log_unique appears twice without; /// .secure_log_reset appearing between them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCContext.h:12,toggle,toggled,12,interpreter/llvm-project/llvm/include/llvm/MC/MCContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCContext.h,1,['toggle'],['toggled']
Deployability,/// Build 'release' clause.; ///; /// \param StartLoc Starting location of the clause.; /// \param EndLoc Ending location of the clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:11,release,release,11,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['release'],['release']
Deployability,/// Build 'update' clause.; ///; /// \param StartLoc Starting location of the clause.; /// \param EndLoc Ending location of the clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:11,update,update,11,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['update'],['update']
Deployability,/// Build H-CFG for TheLoop and update Plan accordingly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanHCFGBuilder.h:32,update,update,32,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanHCFGBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanHCFGBuilder.h,1,['update'],['update']
Deployability,"/// Build a fat object default optimization pipeline.; ///; /// This builds a pipeline that runs the LTO/ThinLTO pre-link pipeline, and; /// emits a section containing the pre-link bitcode along side the object code; /// generated in non-LTO compilation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:44,pipeline,pipeline,44,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,3,['pipeline'],['pipeline']
Deployability,"/// Build a per-module default optimization pipeline.; ///; /// This provides a good default optimization pipeline for per-module; /// optimization and code generation without any link-time optimization. It; /// typically correspond to frontend ""-O[123]"" options for optimization; /// levels \c O1, \c O2 and \c O3 resp.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:44,pipeline,pipeline,44,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],['pipeline']
Deployability,"/// Build a pre-link, LTO-targeting default optimization pipeline to a pass; /// manager.; ///; /// This adds the pre-link optimizations tuned to work well with a later LTO; /// run. It works to minimize the IR which needs to be analyzed without; /// making irreversible decisions which could be made better during the LTO; /// run.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:57,pipeline,pipeline,57,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipeline']
Deployability,"/// Build a pre-link, ThinLTO-targeting default optimization pipeline to; /// a pass manager.; ///; /// This adds the pre-link optimizations tuned to prepare a module for; /// a ThinLTO run. It works to minimize the IR which needs to be analyzed; /// without making irreversible decisions which could be made better during; /// the LTO run.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:61,pipeline,pipeline,61,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipeline']
Deployability,"/// Build an LTO default optimization pipeline to a pass manager.; ///; /// This provides a good default optimization pipeline for link-time; /// optimization and code generation. It is particularly tuned to fit well; /// when IR coming into the LTO phase was first run through \c; /// addPreLinkLTODefaultPipeline, and the two coordinate closely.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:38,pipeline,pipeline,38,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],['pipeline']
Deployability,/// Build an O0 pipeline with the minimal semantically required passes.; ///; /// This should only be used for non-LTO and LTO pre-link pipelines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:16,pipeline,pipeline,16,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],"['pipeline', 'pipelines']"
Deployability,"/// Build an ThinLTO default optimization pipeline to a pass manager.; ///; /// This provides a good default optimization pipeline for link-time; /// optimization and code generation. It is particularly tuned to fit well; /// when IR coming into the LTO phase was first run through \c; /// addPreLinkLTODefaultPipeline, and the two coordinate closely.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:42,pipeline,pipeline,42,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],['pipeline']
Deployability,"/// Build and insert `OldValRes<def> = G_ATOMICRMW_<Opcode> Addr, Val, MMO`.; ///; /// Atomically read-modify-update the value at \p Addr with \p Val. Puts the; /// original value from \p Addr in \p OldValRes. The modification is; /// determined by the opcode.; ///; /// \pre setBasicBlock or setMI must have been called.; /// \pre \p OldValRes must be a generic virtual register.; /// \pre \p Addr must be a generic virtual register with pointer type.; /// \pre \p OldValRes, and \p Val must be generic virtual registers of the; /// same type.; ///; /// \return a MachineInstrBuilder for the newly created instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h:110,update,update,110,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,1,['update'],['update']
Deployability,"/// Build the cloned blocks for an unswitched copy of the given loop.; ///; /// The cloned blocks are inserted before the loop preheader (`LoopPH`) and; /// after the split block (`SplitBB`) that will be used to select between the; /// cloned and original loop.; ///; /// This routine handles cloning all of the necessary loop blocks and exit; /// blocks including rewriting their instructions and the relevant PHI nodes.; /// Any loop blocks or exit blocks which are dominated by a different successor; /// than the one for this clone of the loop blocks can be trivially skipped. We; /// use the `DominatingSucc` map to determine whether a block satisfies that; /// property with a simple map lookup.; ///; /// It also correctly creates the unconditional branch in the cloned; /// unswitched parent block to only point at the unswitched successor.; ///; /// This does not handle most of the necessary updates to `LoopInfo`. Only exit; /// block splitting is correctly reflected in `LoopInfo`, essentially all of; /// the cloned blocks (and their loops) are left without full `LoopInfo`; /// updates. This also doesn't fully update `DominatorTree`. It adds the cloned; /// blocks to them but doesn't create the cloned `DominatorTree` structure and; /// instead the caller must recompute an accurate DT. It *does* correctly; /// update the `AssumptionCache` provided in `AC`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:902,update,updates,902,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,4,['update'],"['update', 'updates']"
Deployability,/// Build the default `AAManager` with the default alias analysis pipeline; /// registered.; ///; /// This also adds target-specific alias analyses registered via; /// TargetMachine::registerDefaultAliasAnalyses().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:66,pipeline,pipeline,66,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipeline']
Deployability,/// Build the internal SCCs for a RefSCC from a sequence of nodes.; ///; /// Appends the SCCs to the provided vector and updates the map with their; /// indices. Both the vector and map must be empty when passed into this; /// routine.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp:121,update,updates,121,interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,1,['update'],['updates']
Deployability,"/// Building the dominator tree can be expensive, so we only build it; /// lazily and update it when required.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:86,update,update,86,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['update'],['update']
Deployability,/// C++ wrapper function result: Same as CWrapperFunctionResult but; /// auto-releases memory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/WrapperFunctionUtils.h:78,release,releases,78,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/WrapperFunctionUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/WrapperFunctionUtils.h,1,['release'],['releases']
Deployability,/// CHAIN = CLRBHRB CHAIN - Clear branch history rolling buffer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h:49,rolling,rolling,49,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,1,['rolling'],['rolling']
Deployability,"/// CRTP base for graphs built from either IR or ThinLTO summary index.; ///; /// The graph represents the call contexts in all memprof metadata on allocation; /// calls, with nodes for the allocations themselves, as well as for the calls; /// in each context. The graph is initially built from the allocation memprof; /// metadata (or summary) MIBs. It is then updated to match calls with callsite; /// metadata onto the nodes, updating it to reflect any inlining performed on; /// those calls.; ///; /// Each MIB (representing an allocation's call context with allocation; /// behavior) is assigned a unique context id during the graph build. The edges; /// and nodes in the graph are decorated with the context ids they carry. This; /// is used to correctly update the graph when cloning is performed so that we; /// can uniquify the context for a single (possibly cloned) allocation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:362,update,updated,362,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,2,['update'],"['update', 'updated']"
Deployability,"/// Cache \p Matrix as result of \p Inst and update the uses of \p Inst. For; /// users with shape information, there's nothing to do: they will use the; /// cached value when they are lowered. For other users, \p Matrix is; /// flattened and the uses are updated to use it. Also marks \p Inst for; /// deletion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp:45,update,update,45,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp,2,['update'],"['update', 'updated']"
Deployability,/// Cache the current connection level of each subtree.; /// This mutable array is updated during scheduling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDFS.h:83,update,updated,83,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDFS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDFS.h,1,['update'],['updated']
Deployability,"/// Calculate an appropriate unique ID for a section, and update Flags,; /// EntrySize and NextUniqueID where appropriate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp:58,update,update,58,interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,1,['update'],['update']
Deployability,"/// Calculate the additional register pressure that the registers used in MI; /// cause.; ///; /// If 'ConsiderSeen' is true, updates 'RegSeen' and uses the information to; /// figure out which usages are live-ins.; /// FIXME: Figure out a way to consider 'RegSeen' from all code paths.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp:126,update,updates,126,interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,1,['update'],['updates']
Deployability,"/// CalculateStackSlotUsed - Return whether this argument will use its; /// stack slot (instead of being passed in registers). ArgOffset,; /// AvailableFPRs, and AvailableVRs must hold the current argument; /// position, and will be updated to account for this argument.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:233,update,updated,233,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['update'],['updated']
Deployability,"/// Calculates the SHA-1 state variable E from the SHA-1 state variables in; /// the 128-bit vector of [4 x i32] in \a __X, adds that to the next set of; /// four message elements in the 128-bit vector of [4 x i32] in \a __Y, and; /// returns the result.; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the \c SHA1NEXTE instruction.; ///; /// \param __X; /// A 128-bit vector of [4 x i32] containing the current SHA-1 state.; /// \param __Y; /// A 128-bit vector of [4 x i32] containing the next four elements of the; /// message.; /// \returns A 128-bit vector of [4 x i32] containing the updated SHA-1; /// values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/shaintrin.h:618,update,updated,618,interpreter/llvm-project/clang/lib/Headers/shaintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/shaintrin.h,1,['update'],['updated']
Deployability,/// Call MergeOps and update MemOps and merges accordingly on success.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:22,update,update,22,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,1,['update'],['update']
Deployability,"/// Call ReleasePred for each predecessor, then update register live def/gen.; /// Always update LiveRegDefs for a register dependence even if the current SU; /// also defines the register. This effectively create one large live range; /// across a sequence of two-address node. This is important because the; /// entire chain must be scheduled together. Example:; ///; /// flags = (3) add; /// flags = (2) addc flags; /// flags = (1) addc flags; ///; /// results in; ///; /// LiveRegDefs[flags] = 3; /// LiveRegGens[flags] = 1; ///; /// If (2) addc is unscheduled, then (1) addc must also be unscheduled to avoid; /// interference on flags.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:9,Release,ReleasePred,9,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,3,"['Release', 'update']","['ReleasePred', 'update']"
Deployability,/// Call after cross-module importing to update the recorded single impl; /// devirt target names for any locals that were exported.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h:41,update,update,41,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/WholeProgramDevirt.h,1,['update'],['update']
Deployability,/// Call backward() to update internal register state to just before \p *I.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterScavenging.h:23,update,update,23,interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterScavenging.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterScavenging.h,1,['update'],['update']
Deployability,/// Call the user-provided callback for each entry (including the end-of-list; /// entry) in the location list starting at \p Offset. The callback can return; /// false to terminate the iteration early. Returns an error if it was unable; /// to parse the entire location list correctly. Upon successful termination; /// \p Offset will be updated point past the end of the list.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugLoc.h:338,update,updated,338,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugLoc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugLoc.h,1,['update'],['updated']
Deployability,"/// Call this before applying any other heuristics to the Available queue.; /// Updates the Available/Pending Q's if necessary and returns the single; /// available instruction, or NULL if there are multiple candidates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:80,Update,Updates,80,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['Update'],['Updates']
Deployability,/// Call this method to notify LiveIntervals that instruction \p MI has been; /// moved within a basic block. This will update the live intervals for all; /// operands of \p MI. Moves between basic blocks are not supported.; ///; /// \param UpdateFlags Update live intervals for nonallocatable physregs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveIntervals.h:120,update,update,120,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveIntervals.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveIntervals.h,3,"['Update', 'update']","['Update', 'UpdateFlags', 'update']"
Deployability,"/// Callback to update the call graph, the first argument is a removed call,; /// the second an optional replacement call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:16,update,update,16,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['update'],['update']
Deployability,/// Callback type for Atomic Expression update; /// ex:; /// \code{.cpp}; /// unsigned x = 0;; /// #pragma omp atomic update; /// x = Expr(x_old); //Expr() is any legal operation; /// \endcode; ///; /// \param XOld the value of the atomic memory address to use for update; /// \param IRB reference to the IRBuilder to use; ///; /// \returns Value to update X to.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:40,update,update,40,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,4,['update'],['update']
Deployability,/// Called after ScheduleDAGMI has scheduled an instruction and updated; /// scheduled/remaining flags in the DAG nodes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:64,update,updated,64,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['update'],['updated']
Deployability,/// Called after the pipeline is resumed from pausing state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/Stage.h:21,pipeline,pipeline,21,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/Stage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/Stage.h,1,['pipeline'],['pipeline']
Deployability,/// Called by JITLink prior to linking to determine whether default passes for; /// the target should be added. The default implementation returns true.; /// If subclasses override this method to return false for any target then; /// they are required to fully configure the pass pipeline for that target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h:280,pipeline,pipeline,280,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h,1,['pipeline'],['pipeline']
Deployability,/// Called by JITLink to modify the pass pipeline prior to linking.; /// The default version performs no modification.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h:41,pipeline,pipeline,41,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h,1,['pipeline'],['pipeline']
Deployability,/// Called on well-formed '\#pragma omp target update'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:47,update,update,47,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['update'],['update']
Deployability,/// Called on well-formed 'release' clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:27,release,release,27,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['release'],['release']
Deployability,/// Called on well-formed 'update' clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:27,update,update,27,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,2,['update'],['update']
Deployability,/// Called to update debug info associated with the instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdater.h:14,update,update,14,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdater.h,1,['update'],['update']
Deployability,/// Called when an instruction is ready to move the next pipeline stage.; ///; /// Stages are responsible for moving instructions to their immediate; /// successor stages.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/Stage.h:57,pipeline,pipeline,57,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/Stage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/Stage.h,1,['pipeline'],['pipeline']
Deployability,/// Calls a C++ function to perform an action when a match is complete.; /// The MatcherState is passed to the function to allow it to modify; /// instructions.; /// This is less constrained than a custom renderer and can update; /// instructions; /// in the state.; /// - FnID(2) - The function to call.; /// TODO: Remove this at some point when combiners aren't reliant on it. It's; /// a bit of a hack.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GIMatchTableExecutor.h:222,update,update,222,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GIMatchTableExecutor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GIMatchTableExecutor.h,1,['update'],['update']
Deployability,"/// Canonicalize metadata arguments to intrinsics.; ///; /// To support bitcode upgrades (and assembly semantic sugar) for \a; /// MetadataAsValue, we need to canonicalize certain metadata.; ///; /// - nullptr is replaced by an empty MDNode.; /// - An MDNode with a single null operand is replaced by an empty MDNode.; /// - An MDNode whose only operand is a \a ConstantAsMetadata gets skipped.; ///; /// This maintains readability of bitcode from when metadata was a type of; /// value, and these bridges were unnecessary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Metadata.cpp:80,upgrade,upgrades,80,interpreter/llvm-project/llvm/lib/IR/Metadata.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Metadata.cpp,1,['upgrade'],['upgrades']
Deployability,"/// Canonicalizer for mangled names.; ///; /// This class allows specifying a list of ""equivalent"" manglings. For example,; /// you can specify that Ss is equivalent to; /// NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE; /// and then manglings that refer to libstdc++'s 'std::string' will be; /// considered equivalent to manglings that are the same except that they refer; /// to libc++'s 'std::string'.; ///; /// This can be used when data (eg, profiling data) is available for a version; /// of a program built in a different configuration, with correspondingly; /// different manglings.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/ItaniumManglingCanonicalizer.h:546,configurat,configuration,546,interpreter/llvm-project/llvm/include/llvm/ProfileData/ItaniumManglingCanonicalizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/ItaniumManglingCanonicalizer.h,1,['configurat'],['configuration']
Deployability,"/// CapturePred - This does the opposite of ReleasePred. Since SU is being; /// unscheduled, increase the succ left count of its predecessors. Remove; /// them from AvailableQueue if necessary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:44,Release,ReleasePred,44,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['Release'],['ReleasePred']
Deployability,"/// Captures attributes that affect generating LLVM-IR using the; /// OpenMPIRBuilder and related classes. Note that not all attributes are; /// required for all classes or functions. In some use cases the configuration; /// is not necessary at all, because because the only functions that are called; /// are ones that are not dependent on the configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:206,configurat,configuration,206,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,2,['configurat'],['configuration']
Deployability,/// Categorize the pointer arguments of CB that might access memory in; /// AccessedLoc and update the state and access map accordingly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:92,update,update,92,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['update'],['update']
Deployability,/// Change the SourceValue for this MachineMemOperand. This should only be; /// used when an object is being relocated and all references to it are being; /// updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineMemOperand.h:159,update,updated,159,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineMemOperand.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineMemOperand.h,1,['update'],['updated']
Deployability,"/// Change the callee of Edge to existing callee clone NewCallee, performing; /// the necessary context id and allocation type updates.; /// If callee's caller edge iterator is supplied, it is updated when removing; /// the edge from that list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:127,update,updates,127,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,2,['update'],"['updated', 'updates']"
Deployability,/// Change the position of an instruction within the basic block and update; /// live ranges and region boundary iterators.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:69,update,update,69,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['update'],['update']
Deployability,"/// Changes options inside \p CI to use PCH from this preamble. Also remaps; /// main file to \p MainFileBuffer and updates \p VFS to ensure the preamble; /// is accessible.; /// Requires that CanReuse() is true.; /// For in-memory preambles, PrecompiledPreamble instance continues to own the; /// MemoryBuffer with the Preamble after this method returns. The caller is; /// responsible for making sure the PrecompiledPreamble instance outlives the; /// compiler run and the AST that will be using the PCH.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/PrecompiledPreamble.h:116,update,updates,116,interpreter/llvm-project/clang/include/clang/Frontend/PrecompiledPreamble.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/PrecompiledPreamble.h,1,['update'],['updates']
Deployability,"/// Changing the major version indicates forward incompatible changes; such changes should correspond to a new; /// bit in the feature flag of the RNTuple header.; /// For the pre-release epoch 0, indicates the release candidate number",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTuple.hxx:180,release,release,180,tree/ntuple/v7/inc/ROOT/RNTuple.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTuple.hxx,2,['release'],['release']
Deployability,"/// Changing the patch version indicates new backported features from newer binary format versions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTuple.hxx:17,patch,patch,17,tree/ntuple/v7/inc/ROOT/RNTuple.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTuple.hxx,1,['patch'],['patch']
Deployability,"/// Check assignment constraints for an assignment of RHS to LHSType.; ///; /// \param LHSType The destination type for the assignment.; /// \param RHS The source expression for the assignment.; /// \param Diagnose If \c true, diagnostics may be produced when checking; /// for assignability. If a diagnostic is produced, \p RHS will be; /// set to ExprError(). Note that this function may still return; /// without producing a diagnostic, even for an invalid assignment.; /// \param DiagnoseCFAudited If \c true, the target is a function parameter; /// in an audited Core Foundation API and does not need to be checked; /// for ARC retain issues.; /// \param ConvertRHS If \c true, \p RHS will be updated to model the; /// conversions necessary to perform the assignment. If \c false,; /// \p Diagnose must also be \c false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:698,update,updated,698,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['update'],['updated']
Deployability,/// Check for missing releases even when -dealloc does not call; /// '[super dealloc]'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:22,release,releases,22,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['releases']
Deployability,/// Check for missing releases on early return.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:22,release,releases,22,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['releases']
Deployability,/// Check if a DIE should be kept.; /// \returns updated TraversalFlags.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:49,update,updated,49,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,1,['update'],['updated']
Deployability,"/// Check if a chain of actions can be combined and return the tool that can; /// handle the combination of actions. The pointer to the current inputs \a; /// Inputs and the list of offload actions \a CollapsedOffloadActions; /// connected to collapsed actions are updated accordingly. The latter enables; /// the caller of the selector to process them afterwards instead of just; /// dropping them. If no suitable tool is found, null will be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:265,update,updated,265,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['update'],['updated']
Deployability,/// Check if a function describing DIE should be kept.; /// \returns updated TraversalFlags.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:69,update,updated,69,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,1,['update'],['updated']
Deployability,/// Check if a variable describing DIE should be kept.; /// \returns updated TraversalFlags.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h:69,update,updated,69,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,2,['update'],['updated']
Deployability,"/// Check if dependencies have incompatible placement.; /// If that is the case modify placement to be compatible.; /// \returns true if any placement was updated, otherwise returns false.; /// This method should be called as a followup processing after; /// resolveDependenciesAndMarkLiveness().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.h:155,update,updated,155,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.h,1,['update'],['updated']
Deployability,/// Check if it is a valid conditional update statement (cond-update-stmt).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:39,update,update,39,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,2,['update'],"['update', 'update-stmt']"
Deployability,/// Check if it is possible to fold the condition from the XALU intrinsic; /// into the user. The condition code will only be updated on success.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:126,update,updated,126,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp,2,['update'],['updated']
Deployability,"/// Check if the @p Offset is a valid frame offset for @p MI.; /// The returned value reports the validity of the frame offset for @p MI.; /// It uses the values defined by AArch64FrameOffsetStatus for that.; /// If result == AArch64FrameOffsetCannotUpdate, @p MI cannot be updated to; /// use an offset.eq; /// If result & AArch64FrameOffsetIsLegal, @p Offset can completely be; /// rewritten in @p MI.; /// If result & AArch64FrameOffsetCanUpdate, @p Offset contains the; /// amount that is off the limit of the legal offset.; /// If set, @p OutUseUnscaledOp will contain the whether @p MI should be; /// turned into an unscaled operator, which opcode is in @p OutUnscaledOp.; /// If set, @p EmittableOffset contains the amount that can be set in @p MI; /// (possibly with @p OutUnscaledOp if OutUseUnscaledOp is true) and that; /// is a legal offset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.h:274,update,updated,274,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.h,1,['update'],['updated']
Deployability,"/// Check if the any of the methods inside the interface are annotated with; /// the invalidation annotation, update the IvarInfo accordingly.; /// \param LookForPartial is set when we are searching for partial; /// invalidators.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp:110,update,update,110,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp,1,['update'],['update']
Deployability,/// Check if the expression consists of exactly one entry value operand.; /// (This is the only configuration of entry values that is supported.),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h:96,configurat,configuration,96,interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h,1,['configurat'],['configuration']
Deployability,"/// Check if the frame lowering of \p MF needs a special fixup; /// code sequence for the epilogue.; /// Unlike T2 and ARM mode, the T1 pop instruction cannot restore; /// to LR, and we can't pop the value directly to the PC when; /// we need to update the SP after popping the value. So instead; /// we have to emit:; /// POP {r3}; /// ADD sp, #offset; /// BX r3; /// If this would clobber a return value, then generate this sequence instead:; /// MOV ip, r3; /// POP {r3}; /// ADD sp, #offset; /// MOV lr, r3; /// MOV r3, ip; /// BX lr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb1FrameLowering.h:246,update,update,246,interpreter/llvm-project/llvm/lib/Target/ARM/Thumb1FrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb1FrameLowering.h,1,['update'],['update']
Deployability,"/// Check if the loop header has a conditional branch that is not; /// loop-invariant, because it involves load instructions. If all paths from; /// either the true or false successor to the header or loop exists do not; /// modify the memory feeding the condition, perform 'partial unswitching'. That; /// is, duplicate the instructions feeding the condition in the pre-header. Then; /// unswitch on the duplicated condition. The condition is now known in the; /// unswitched version for the 'invariant' path through the original loop.; ///; /// If the branch condition of the header is partially invariant, return a pair; /// containing the instructions to duplicate and a boolean Constant to update; /// the condition in the loops created for the true or false successors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h:695,update,update,695,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,1,['update'],['update']
Deployability,/// Check if the memory associated with this symbol was released.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:56,release,released,56,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['release'],['released']
Deployability,/// Check if the retain/release is due to a GCD/XPC macro that are; /// defined as:; ///; /// #define dispatch_retain(object) ({ dispatch_object_t _o = (object); _dispatch_object_validate(_o); (void)[_o retain]; }); /// #define dispatch_release(object) ({ dispatch_object_t _o = (object); _dispatch_object_validate(_o); [_o release]; }); /// #define xpc_retain(object) ({ xpc_object_t _o = (object); _xpc_object_validate(_o); [_o retain]; }); /// #define xpc_release(object) ({ xpc_object_t _o = (object); _xpc_object_validate(_o); [_o release]; }); ///; /// and return the top container which is the StmtExpr and the macro argument; /// expression.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp:24,release,release,24,interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp,3,['release'],['release']
Deployability,/// Check if the toolchain should use AsmParser to parse inlineAsm when; /// integrated assembler is not default.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h:77,integrat,integrated,77,interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,1,['integrat'],['integrated']
Deployability,/// Check if the toolchain should use the integrated assembler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h:42,integrat,integrated,42,interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,1,['integrat'],['integrated']
Deployability,/// Check if the toolchain should use the integrated backend.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h:42,integrat,integrated,42,interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,1,['integrat'],['integrated']
Deployability,"/// Check specified statement that it is suitable for 'atomic update'; /// constructs and extract 'x', 'expr' and Operation from the original; /// expression. If DiagId and NoteId == 0, then only check is performed; /// without error notification.; /// \param DiagId Diagnostic which should be emitted if error is found.; /// \param NoteId Diagnostic note for the main error message.; /// \return true if statement is not an update expression, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:62,update,update,62,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,2,['update'],['update']
Deployability,"/// Check that \p MI does not have implicit uses that overlap with it's \p Use; /// operand (the register being replaced), since these can sometimes be; /// implicitly tied to other operands. For example, on AMDGPU:; ///; /// V_MOVRELS_B32_e32 %VGPR2, %M0<imp-use>, %EXEC<imp-use>, %VGPR2_VGPR3_VGPR4_VGPR5<imp-use>; ///; /// the %VGPR2 is implicitly tied to the larger reg operand, but we have no; /// way of knowing we need to update the latter when updating the former.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp:429,update,update,429,interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp,1,['update'],['update']
Deployability,"/// Check that the given template argument corresponds to the given; /// template parameter.; ///; /// \param Param The template parameter against which the argument will be; /// checked.; ///; /// \param Arg The template argument, which may be updated due to conversions.; ///; /// \param Template The template in which the template argument resides.; ///; /// \param TemplateLoc The location of the template name for the template; /// whose argument list we're matching.; ///; /// \param RAngleLoc The location of the right angle bracket ('>') that closes; /// the template argument list.; ///; /// \param ArgumentPackIndex The index into the argument pack where this; /// argument will be placed. Only valid if the parameter is a parameter pack.; ///; /// \param Converted The checked, converted argument will be added to the; /// end of this small vector.; ///; /// \param CTAK Describes how we arrived at this particular template argument:; /// explicitly written, deduced, etc.; ///; /// \returns true on error, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:245,update,updated,245,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['update'],['updated']
Deployability,"/// Check that the given template arguments can be provided to; /// the given template, converting the arguments along the way.; ///; /// \param Template The template to which the template arguments are being; /// provided.; ///; /// \param TemplateLoc The location of the template name in the source.; ///; /// \param TemplateArgs The list of template arguments. If the template is; /// a template template parameter, this function may extend the set of; /// template arguments to also include substituted, defaulted template; /// arguments.; ///; /// \param PartialTemplateArgs True if the list of template arguments is; /// intentionally partial, e.g., because we're checking just the initial; /// set of template arguments.; ///; /// \param Converted Will receive the converted, canonicalized template; /// arguments.; ///; /// \param UpdateArgsWithConversions If \c true, update \p TemplateArgs to; /// contain the converted forms of the template arguments as written.; /// Otherwise, \p TemplateArgs will not be modified.; ///; /// \param ConstraintsNotSatisfied If provided, and an error occurred, will; /// receive true if the cause for the error is the associated constraints of; /// the template not being satisfied by the template arguments.; ///; /// \returns true if an error occurred, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:839,Update,UpdateArgsWithConversions,839,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,2,"['Update', 'update']","['UpdateArgsWithConversions', 'update']"
Deployability,"/// Check that the integration over a subrange works when using an analytical; /// convolution with the RooTruthModel.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooTruthModel.cxx:19,integrat,integration,19,roofit/roofitcore/test/testRooTruthModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooTruthModel.cxx,1,['integrat'],['integration']
Deployability,/// Check the given exception-specification and update the; /// exception specification information with the results.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:48,update,update,48,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['update'],['update']
Deployability,"/// Check the servers of a node that has been computed and release its; /// resources if they are no longer needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:59,release,release,59,roofit/roofitcore/src/RooFit/Evaluator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx,1,['release'],['release']
Deployability,/// Check the use \p U and update \p State accordingly. Return true if we; /// should continue to update the state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:27,update,update,27,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,2,['update'],['update']
Deployability,"/// Check whether a nullability type specifier can be added to the given; /// type through some means not written in source (e.g. API notes).; ///; /// \param Type The type to which the nullability specifier will be; /// added. On success, this type will be updated appropriately.; ///; /// \param Nullability The nullability specifier to add.; ///; /// \param DiagLoc The location to use for diagnostics.; ///; /// \param AllowArrayTypes Whether to accept nullability specifiers on an; /// array type (e.g., because it will decay to a pointer).; ///; /// \param OverrideExisting Whether to override an existing, locally-specified; /// nullability specifier rather than complaining about the conflict.; ///; /// \returns true if nullability cannot be applied, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:258,update,updated,258,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['update'],['updated']
Deployability,"/// Check whether continuous CSE should be enabled in GISel passes.; /// By default, it's enabled for non O0 levels.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h:18,continuous,continuous,18,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,1,['continuous'],['continuous']
Deployability,"/// Check whether the given function decl's trailing requires clause is; /// satisfied, if any. Returns false and updates Satisfaction with the; /// satisfaction verdict if successful, emits a diagnostic and returns true if; /// an error occurred and satisfaction could not be determined.; ///; /// \returns true if an error occurred, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:114,update,updates,114,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['update'],['updates']
Deployability,"/// Check whether the range of the initializer \p ParentIList from element; /// \p Index onwards can be used to initialize an object of type \p T. Update; /// \p Index to indicate how many elements of the list were consumed.; ///; /// This also fills in \p StructuredList, from element \p StructuredIndex; /// onwards, with the fully-braced, desugared form of the initialization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:147,Update,Update,147,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['Update'],['Update']
Deployability,/// Check whether we detected a valid Cuda install.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h:43,install,install,43,interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h,1,['install'],['install']
Deployability,/// Check whether we detected a valid GCC install.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h:42,install,install,42,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,1,['install'],['install']
Deployability,"/// CheckConstructorDeclarator - Called by ActOnDeclarator to check; /// the well-formedness of the constructor declarator @p D with type @p; /// R. If there are any errors in the declarator, this routine will; /// emit diagnostics and set the invalid bit to true. In any case, the type; /// will be updated to reflect a well-formed type for the constructor and; /// returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:300,update,updated,300,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['update'],['updated']
Deployability,"/// CheckConversionDeclarator - Called by ActOnDeclarator to check the; /// well-formednes of the conversion function declarator @p D with; /// type @p R. If there are any errors in the declarator, this routine; /// will emit diagnostics and return true. Otherwise, it will return; /// false. Either way, the type @p R will be updated to reflect a; /// well-formed type for the conversion operator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:327,update,updated,327,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['update'],['updated']
Deployability,"/// CheckDestructorDeclarator - Called by ActOnDeclarator to check; /// the well-formednes of the destructor declarator @p D with type @p; /// R. If there are any errors in the declarator, this routine will; /// emit diagnostics and set the declarator to invalid. Even if this happens,; /// will be updated to reflect a well-formed type for the destructor and; /// returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:299,update,updated,299,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['update'],['updated']
Deployability,"/// CheckForLiveRegDef - Return true and update live register vector if the; /// specified register def of the specified SUnit clobbers any ""live"" registers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:41,update,update,41,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,2,['update'],['update']
Deployability,/// Checks if the lastprivate conditional was updated in inner region and; /// writes the value.; /// \code; /// lastprivate(conditional: a); /// ...; /// <type> a;bool Fired = false;; /// #pragma omp ... shared(a); /// {; /// lp_a = ...;; /// Fired = true;; /// }; /// if (Fired) {; /// #pragma omp critical(a); /// if (last_iv_a <= iv) {; /// last_iv_a = iv;; /// global_a = lp_a;; /// }; /// Fired = false;; /// }; /// \endcode,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h:46,update,updated,46,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,1,['update'],['updated']
Deployability,/// Checks if the provided \p LVal is lastprivate conditional and emits the; /// code to update the value of the original variable.; /// \code; /// lastprivate(conditional: a); /// ...; /// <type> a;; /// lp_a = ...;; /// #pragma omp critical(a); /// if (last_iv_a <= iv) {; /// last_iv_a = iv;; /// global_a = lp_a;; /// }; /// \endcode,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h:89,update,update,89,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,1,['update'],['update']
Deployability,"/// Checks if the specified directive is a target data offload directive.; /// \param DKind Specified directive.; /// \return true - the directive is a target data offload directive like; /// 'omp target data', 'omp target update', 'omp target enter data',; /// 'omp target exit data'; /// otherwise - false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenMPKinds.h:223,update,update,223,interpreter/llvm-project/clang/include/clang/Basic/OpenMPKinds.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenMPKinds.h,1,['update'],['update']
Deployability,"/// Checks the validity of a template parameter list, possibly; /// considering the template parameter list from a previous; /// declaration.; ///; /// If an ""old"" template parameter list is provided, it must be; /// equivalent (per TemplateParameterListsAreEqual) to the ""new""; /// template parameter list.; ///; /// \param NewParams Template parameter list for a new template; /// declaration. This template parameter list will be updated with any; /// default arguments that are carried through from the previous; /// template parameter list.; ///; /// \param OldParams If provided, template parameter list from a; /// previous declaration of the same template. Default template; /// arguments will be merged from the old template parameter list to; /// the new template parameter list.; ///; /// \param TPC Describes the context in which we are checking the given; /// template parameter list.; ///; /// \param SkipBody If we might have already made a prior merged definition; /// of this template visible, the corresponding body-skipping information.; /// Default argument redefinition is not an error when skipping such a body,; /// because (under the ODR) we can assume the default arguments are the same; /// as the prior merged definition.; ///; /// \returns true if an error occurred, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:433,update,updated,433,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['update'],['updated']
Deployability,/// Clang integrated assembler tool.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.h:10,integrat,integrated,10,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.h,1,['integrat'],['integrated']
Deployability,"/// Class Scheduler is responsible for issuing instructions to pipeline; /// resources.; ///; /// Internally, it delegates to a ResourceManager the management of processor; /// resources. This class is also responsible for tracking the progress of; /// instructions from the dispatch stage, until the write-back stage.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h:63,pipeline,pipeline,63,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,1,['pipeline'],['pipeline']
Deployability,"/// Class that handles post-update expression for some clauses, like; /// 'lastprivate', 'reduction' etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:28,update,update,28,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['update'],['update']
Deployability,"/// Class to acquire and release the Python GIL where it applies, i.e.; /// if libPython is loaded and the interpreter is initialized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:25,release,release,25,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,1,['release'],['release']
Deployability,/// Class to install both of the above.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GISelChangeObserver.h:13,install,install,13,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GISelChangeObserver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GISelChangeObserver.h,1,['install'],['install']
Deployability,"/// Class used to capture the result of searching for an existing; /// declaration of a specific kind and name, along with the ability; /// to update the place where this result was found (the declaration; /// chain hanging off an identifier or the DeclContext we searched in); /// if requested.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:143,update,update,143,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,1,['update'],['update']
Deployability,/// Class which can be overriden by targets to modify the; /// mca::Instruction objects before the pipeline starts.; /// A common usage of this class is to add immediate operands to certain; /// instructions or to remove Defs/Uses from an instruction where the; /// schedulinng model is incorrect.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h:99,pipeline,pipeline,99,interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,1,['pipeline'],['pipeline']
Deployability,"/// Class you can specialize to provide custom retain/release functionality for; /// a type.; ///; /// Usually specializing this class is not necessary, as IntrusiveRefCntPtr; /// works with any type which defines Retain() and Release() functions -- you; /// can define those functions yourself if RefCountedBase doesn't work for you.; ///; /// One case when you might want to specialize this type is if you have; /// - Foo.h defines type Foo and includes Bar.h, and; /// - Bar.h uses IntrusiveRefCntPtr<Foo> in inline functions.; ///; /// Because Foo.h includes Bar.h, Bar.h can't include Foo.h in order to pull in; /// the declaration of Foo. Without the declaration of Foo, normally Bar.h; /// wouldn't be able to use IntrusiveRefCntPtr<Foo>, which wants to call; /// T::Retain and T::Release.; ///; /// To resolve this, Bar.h could include a third header, FooFwd.h, which; /// forward-declares Foo and specializes IntrusiveRefCntPtrInfo<Foo>. Then; /// Bar.h could use IntrusiveRefCntPtr<Foo>, although it still couldn't call any; /// functions on Foo itself, because Foo would be an incomplete type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:54,release,release,54,interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h,3,"['Release', 'release']","['Release', 'release']"
Deployability,/// Clean up after the software pipeliner runs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:32,pipeline,pipeliner,32,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['pipeline'],['pipeliner']
Deployability,/// Cleanup handler that reclaims resource by calling its method 'Release'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CrashRecoveryContext.h:66,Release,Release,66,interpreter/llvm-project/llvm/include/llvm/Support/CrashRecoveryContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CrashRecoveryContext.h,1,['Release'],['Release']
Deployability,"/// Clear all memory not needed downstream.; ///; /// Releases all memory not used downstream. In particular, saves Freqs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp:54,Release,Releases,54,interpreter/llvm-project/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp,1,['Release'],['Releases']
Deployability,"/// Clear the cache payload but retain slot mapping w.r.t to; /// normalization and integration sets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCacheManager.h:84,integrat,integration,84,roofit/roofitcore/inc/RooCacheManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCacheManager.h,1,['integrat'],['integration']
Deployability,/// Clear the internal state. See updateState for more information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrAnalysis.h:34,update,updateState,34,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrAnalysis.h,1,['update'],['updateState']
Deployability,/// Clearance before partial register updates (in number of instructions),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMSubtarget.h:38,update,updates,38,interpreter/llvm-project/llvm/lib/Target/ARM/ARMSubtarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMSubtarget.h,1,['update'],['updates']
Deployability,"/// Clients of various APIs that cause global effects on; /// the DAG can optionally implement this interface. This allows the clients; /// to handle the various sorts of updates that happen.; ///; /// A DAGUpdateListener automatically registers itself with DAG when it is; /// constructed, and removes itself when destroyed in RAII fashion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h:171,update,updates,171,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,1,['update'],['updates']
Deployability,"/// Clone OldFunc into NewFunc, transforming the old arguments into references; /// to VMap values. Note that if NewFunc already has basic blocks, the ones; /// cloned into it will be added to the end of the function. This function; /// fills in a list of return instructions, and can optionally remap types; /// and/or append the specified suffix to all values cloned.; ///; /// If \p Changes is \a CloneFunctionChangeType::LocalChangesOnly, VMap is; /// required to contain no non-identity GlobalValue mappings. Otherwise,; /// referenced metadata will be cloned.; ///; /// If \p Changes is less than \a CloneFunctionChangeType::DifferentModule; /// indicating cloning into the same module (even if it's LocalChangesOnly), if; /// debug info metadata transitively references a \a DISubprogram, it will be; /// cloned, effectively upgrading \p Changes to GlobalChanges while suppressing; /// cloning of types and compile units.; ///; /// If \p Changes is \a CloneFunctionChangeType::DifferentModule, the new; /// module's \c !llvm.dbg.cu will get updated with any newly created compile; /// units. (\a CloneFunctionChangeType::ClonedModule leaves that work for the; /// caller.); ///; /// FIXME: Consider simplifying this function by splitting out \a; /// CloneFunctionMetadataInto() and expecting / updating callers to call it; /// first when / how it's needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:1048,update,updated,1048,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,1,['update'],['updated']
Deployability,"/// Clone the instruction for the new pipelined loop and update the; /// memory operands, if needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:38,pipeline,pipelined,38,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,2,"['pipeline', 'update']","['pipelined', 'update']"
Deployability,"/// Clone the instruction for the new pipelined loop. If needed, this; /// function updates the instruction using the values saved in the; /// InstrChanges structure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:38,pipeline,pipelined,38,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,2,"['pipeline', 'update']","['pipelined', 'updates']"
Deployability,/// Clones a loop \p OrigLoop. Returns the loop and the blocks in \p; /// Blocks.; ///; /// Updates LoopInfo and DominatorTree assuming the loop is dominated by block; /// \p LoopDomBB. Insert the new blocks before block specified in \p Before.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp:92,Update,Updates,92,interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp,1,['Update'],['Updates']
Deployability,/// Clones a loop \p OrigLoop. Returns the loop and the blocks in \p; /// Blocks.; ///; /// Updates LoopInfo and DominatorTree assuming the loop is dominated by block; /// \p LoopDomBB. Insert the new blocks before block specified in \p Before.; /// Note: Only innermost loops are supported.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:92,Update,Updates,92,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,1,['Update'],['Updates']
Deployability,/// Clones instruction or the whole instruction bundle \p Orig and; /// insert into \p MBB before \p InsertBefore. The target may update operands; /// that are required to be unique.; ///; /// \p Orig must not return true for MachineInstr::isNotDuplicable().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:130,update,update,130,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['update'],['update']
Deployability,/// Clones the original loop.; ///; /// Updates LoopInfo and DominatorTree using the information that block \p; /// LoopDomBB dominates the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp:40,Update,Updates,40,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp,1,['Update'],['Updates']
Deployability,"/// Clusters that are currently being processed by the pipeline. Every in-flight cluster has a corresponding; /// work item, first a read item and then an unzip item.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RClusterPool.hxx:55,pipeline,pipeline,55,tree/ntuple/v7/inc/ROOT/RClusterPool.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RClusterPool.hxx,1,['pipeline'],['pipeline']
Deployability,/// CoalescedWeights - mapping of basic blocks to the rolling counter of; /// coalesced weights.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMMachineFunctionInfo.h:54,rolling,rolling,54,interpreter/llvm-project/llvm/lib/Target/ARM/ARMMachineFunctionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMMachineFunctionInfo.h,1,['rolling'],['rolling']
Deployability,/// Collect all CMOV-group-candidates in \p CurrLoop and update \p; /// CmovInstGroups accordingly.; ///; /// \param Blocks List of blocks to process.; /// \param CmovInstGroups List of consecutive CMOV instructions in CurrLoop.; /// \returns true iff it found any CMOV-group-candidate.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp:57,update,update,57,interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,1,['update'],['update']
Deployability,/// Collect the set of header includes needed to construct the given; /// module and update the TopHeaders file set of the module.; ///; /// \param Module The module we're collecting includes from.; ///; /// \param Includes Will be augmented with the set of \#includes or \#imports; /// needed to load all of the named headers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/FrontendAction.cpp:85,update,update,85,interpreter/llvm-project/clang/lib/Frontend/FrontendAction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/FrontendAction.cpp,1,['update'],['update']
Deployability,"/// CombineBaseUpdate - Target-specific DAG combine function for VLDDUP,; /// NEON load/store intrinsics, and generic vector load/stores, to merge; /// base address updates.; /// For generic load/stores, the memory type is assumed to be a vector.; /// The caller is assumed to have checked legality.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:165,update,updates,165,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['update'],['updates']
Deployability,"/// Commute a two-address instruction and update the basic block, distance map,; /// and live variables if needed. Return true if it is successful.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp:42,update,update,42,interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,1,['update'],['update']
Deployability,"/// Compare and Add if Condition is Met. Compare value in operand 2 with; /// value in memory of operand 1. If condition of operand 4 is met, add; /// value operand 3 to m32 and write new value in operand 1. Operand 2 is; /// always updated with the original value from operand 1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h:233,update,updated,233,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,1,['update'],['updated']
Deployability,"/// Comparing internal representations of symbolic values (via; /// SVal::operator==()) is a valid way to check if the value was updated,; /// unless it's a LazyCompoundVal that may have a different internal; /// representation every time it is loaded from the state. In this function we; /// do an approximate comparison for lazy compound values, checking that they; /// are the immediate snapshots of the tracked region's bindings within the; /// node's respective states but not really checking that these snapshots; /// actually contain the same set of bindings.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporterVisitors.cpp:129,update,updated,129,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporterVisitors.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporterVisitors.cpp,1,['update'],['updated']
Deployability,"/// Compute all the symbols that are ""dead"": i.e these that can't be reached; /// in the graph from any of the given symbols listed in; /// \p GUIDPreservedSymbols. Non-prevailing symbols are symbols without a; /// prevailing copy anywhere in IR and are normally dead, \p isPrevailing; /// predicate returns status of symbol.; /// Also update call edges for indirect calls to local functions added from; /// SamplePGO when needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionImport.h:336,update,update,336,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionImport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionImport.h,1,['update'],['update']
Deployability,"/// Compute and emit debug locations (.debug_loc, .debug_loclists); /// for \p Unit, patch the attributes referencing it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h:85,patch,patch,85,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,1,['patch'],['patch']
Deployability,"/// Compute and emit debug ranges(.debug_aranges, .debug_ranges,; /// .debug_rnglists) for \p Unit, patch the attributes referencing it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h:100,patch,patch,100,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,1,['patch'],['patch']
Deployability,"/// Compute bin index for all values of the observable(s) in `evalData`, and return their volumes or inverse volumes, depending; /// on the configuration chosen in the constructor.; /// If a bin is not valid, return a volume of 1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinWidthFunction.cxx:140,configurat,configuration,140,roofit/roofitcore/src/RooBinWidthFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinWidthFunction.cxx,1,['configurat'],['configuration']
Deployability,"/// Compute current bin of observable, and return its volume or inverse volume, depending; /// on configuration chosen in the constructor.; /// If the bin is not valid, return a volume of 1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinWidthFunction.cxx:98,configurat,configuration,98,roofit/roofitcore/src/RooBinWidthFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinWidthFunction.cxx,1,['configurat'],['configuration']
Deployability,/// Compute instruction heights in the trace through MBB. This updates MBB and; /// the blocks below it in the trace. It is assumed that the trace has already; /// been computed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp:63,update,updates,63,interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,1,['update'],['updates']
Deployability,"/// Compute remaining latency. We need this both to determine whether the; /// overall schedule has become latency-limited and whether the instructions; /// outside this zone are resource or latency limited.; ///; /// The ""dependent"" latency is updated incrementally during scheduling as the; /// max height/depth of scheduled nodes minus the cycles since it was; /// scheduled:; /// DLat = max (N.depth - (CurrCycle - N.ReadyCycle) for N in Zone; ///; /// The ""independent"" latency is the max ready queue depth:; /// ILat = max N.depth for N in Available|Pending; ///; /// RemainingLatency is the greater of independent and dependent latency.; ///; /// These computations are expensive, especially in DAGs with many edges, so; /// only do them if necessary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:245,update,updated,245,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['update'],['updated']
Deployability,"/// Compute the list of required libraries for a given list of; /// components, in an order suitable for passing to a linker (that is, libraries; /// appear prior to their dependencies).; ///; /// \param Components - The names of the components to find libraries for.; /// \param IncludeNonInstalled - Whether non-installed components should be; /// reported.; /// \param GetComponentNames - True if one would prefer the component names.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp:314,install,installed,314,interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,1,['install'],['installed']
Deployability,"/// ComputeEffectiveClangTriple - Return the Clang triple to use for this; /// target, which may take into account the command line arguments. For; /// example, on Darwin the -mmacosx-version-min= command line argument (which; /// sets the deployment target) determines the version in the triple passed to; /// Clang.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h:240,deploy,deployment,240,interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,1,['deploy'],['deployment']
Deployability,/// ComputePosition - Examine the current output and update line and column; /// counts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FormattedStream.cpp:53,update,update,53,interpreter/llvm-project/llvm/lib/Support/FormattedStream.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FormattedStream.cpp,1,['update'],['update']
Deployability,"/// Computes safety information for a loop checks loop body & header for; /// the possibility of may throw exception, it takes LoopSafetyInfo and loop; /// as argument. Updates safety information in LoopSafetyInfo argument.; /// Note: This is defined to clear and reinitialize an already initialized; /// LoopSafetyInfo. Some callers rely on this fact.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h:169,Update,Updates,169,interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,1,['Update'],['Updates']
Deployability,"/// Concrete subclass of DominatorTreeBase that is used to compute a; /// normal dominator tree.; ///; /// Definition: A block is said to be forward statically reachable if there is; /// a path from the entry of the function to the block. A statically reachable; /// block may become statically unreachable during optimization.; ///; /// A forward unreachable block may appear in the dominator tree, or it may; /// not. If it does, dominance queries will return results as if all reachable; /// blocks dominate it. When asking for a Node corresponding to a potentially; /// unreachable block, calling code must handle the case where the block was; /// unreachable and the result of getNode() is nullptr.; ///; /// Generally, a block known to be unreachable when the dominator tree is; /// constructed will not be in the tree. One which becomes unreachable after; /// the dominator tree is initially constructed may still exist in the tree,; /// even if the tree is properly updated. Calling code should not rely on the; /// preceding statements; this is stated only to assist human understanding.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Dominators.h:974,update,updated,974,interpreter/llvm-project/llvm/include/llvm/IR/Dominators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Dominators.h,1,['update'],['updated']
Deployability,/// Configuration class for Z3,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Z3Solver.cpp:4,Configurat,Configuration,4,interpreter/llvm-project/llvm/lib/Support/Z3Solver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Z3Solver.cpp,1,['Configurat'],['Configuration']
Deployability,/// Configuration for the Attributor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:4,Configurat,Configuration,4,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['Configurat'],['Configuration']
Deployability,/// Configuration for the mach-o header of a JITDylib. Specify common load; /// commands that should be added to the header.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOPlatform.h:4,Configurat,Configuration,4,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOPlatform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOPlatform.h,1,['Configurat'],['Configuration']
Deployability,/// Configuration options and arrays for this bundler job,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/OffloadBundler.cpp:4,Configurat,Configuration,4,interpreter/llvm-project/clang/lib/Driver/OffloadBundler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/OffloadBundler.cpp,2,['Configurat'],['Configuration']
Deployability,"/// Configuration options for parallel minimization with multiprocessing library",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooGlobalFunc.h:4,Configurat,Configuration,4,roofit/roofitcore/inc/RooGlobalFunc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooGlobalFunc.h,1,['Configurat'],['Configuration']
Deployability,/// Configuration point for MDNodeInfo::isEqual().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LLVMContextImpl.h:4,Configurat,Configuration,4,interpreter/llvm-project/llvm/lib/IR/LLVMContextImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LLVMContextImpl.h,1,['Configurat'],['Configuration']
Deployability,"/// Configuration struct for RooAbsPdf::minimizeNLL with all the default values; /// that also should be taked as the default values for RooAbsPdf::fitTo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx:4,Configurat,Configuration,4,roofit/roofitcore/src/FitHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx,1,['Configurat'],['Configuration']
Deployability,/// Configure the LLJIT instance to scrape modules for llvm.global_ctors and; /// llvm.global_dtors variables and (if present) build initialization and; /// deinitialization functions. Platform specific initialization configurations; /// should be preferred where available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/LLJIT.h:218,configurat,configurations,218,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/LLJIT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/LLJIT.h,1,['configurat'],['configurations']
Deployability,"/// Connect the NewNode to OrigNode's callees if TowardsCallee is true,; /// else to its callers. Also updates OrigNode's edges to remove any context; /// ids moved to the newly created edge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:103,update,updates,103,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['update'],['updates']
Deployability,/// Connect the unrolling epilog code to the original loop.; /// The unrolling epilog code contains code to execute the; /// 'extra' iterations if the run-time trip count modulo the; /// unroll count is non-zero.; ///; /// This function performs the following:; /// - Update PHI nodes at the unrolling loop exit and epilog loop exit; /// - Create PHI nodes at the unrolling loop exit to combine; /// values that exit the unrolling loop code and jump around it.; /// - Update PHI operands in the epilog loop by the new PHI nodes; /// - Branch around the epilog loop if extra iters (ModVal) is zero.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp:268,Update,Update,268,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,2,['Update'],['Update']
Deployability,"/// Constrain the Register operand OpIdx, so that it is now constrained to the; /// TargetRegisterClass passed as an argument (RegClass).; /// If this fails, create a new virtual register in the correct class and insert; /// a COPY before \p InsertPt if it is a use or after if it is a definition.; /// In both cases, the function also updates the register of RegMo. The debug; /// location of \p InsertPt is used for the new copy.; ///; /// \return The virtual register constrained to the right register class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h:336,update,updates,336,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h,1,['update'],['updates']
Deployability,"/// Construct a FormatStyle based on ``StyleName``.; ///; /// ``StyleName`` can take several forms:; /// * ""{<key>: <value>, ...}"" - Set specic style parameters.; /// * ""<style name>"" - One of the style names supported by; /// getPredefinedStyle().; /// * ""file"" - Load style configuration from a file called ``.clang-format``; /// located in one of the parent directories of ``FileName`` or the current; /// directory if ``FileName`` is empty.; /// * ""file:<format_file_path>"" to explicitly specify the configuration file to; /// use.; ///; /// \param[in] StyleName Style name to interpret according to the description; /// above.; /// \param[in] FileName Path to start search for .clang-format if ``StyleName``; /// == ""file"".; /// \param[in] FallbackStyle The name of a predefined style used to fallback to; /// in case \p StyleName is ""file"" and no file can be found.; /// \param[in] Code The actual code to be formatted. Used to determine the; /// language if the filename isn't sufficient.; /// \param[in] FS The underlying file system, in which the file resides. By; /// default, the file system is the real file system.; /// \param[in] AllowUnknownOptions If true, unknown format options only; /// emit a warning. If false, errors are emitted on unknown format; /// options.; ///; /// \returns FormatStyle as specified by ``StyleName``. If ``StyleName`` is; /// ""file"" and no file is found, returns ``FallbackStyle``. If no style could be; /// determined, returns an Error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:276,configurat,configuration,276,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,2,['configurat'],['configuration']
Deployability,"/// Construct a basic pipeline for simulating an in-order pipeline.; /// This pipeline consists of Fetch, InOrderIssue, and Retire stages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Context.h:22,pipeline,pipeline,22,interpreter/llvm-project/llvm/include/llvm/MCA/Context.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Context.h,3,['pipeline'],['pipeline']
Deployability,"/// Construct a basic pipeline for simulating an out-of-order pipeline.; /// This pipeline consists of Fetch, Dispatch, Execute, and Retire stages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Context.h:22,pipeline,pipeline,22,interpreter/llvm-project/llvm/include/llvm/MCA/Context.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Context.h,3,['pipeline'],['pipeline']
Deployability,"/// Construct the IR attribute list of a function or call.; ///; /// When adding an attribute, please consider where it should be handled:; ///; /// - getDefaultFunctionAttributes is for attributes that are essentially; /// part of the global target configuration (but perhaps can be; /// overridden on a per-function basis). Adding attributes there; /// will cause them to also be set in frontends that build on Clang's; /// target-configuration logic, as well as for code defined in library; /// modules such as CUDA's libdevice.; ///; /// - ConstructAttributeList builds on top of getDefaultFunctionAttributes; /// and adds declaration-specific, convention-specific, and; /// frontend-specific logic. The last is of particular importance:; /// attributes that restrict how the frontend generates code must be; /// added here rather than getDefaultFunctionAttributes.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:250,configurat,configuration,250,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,2,['configurat'],['configuration']
Deployability,"/// Construct the core LLVM function canonicalization and simplification; /// pipeline.; ///; /// This is a long pipeline and uses most of the per-function optimization; /// passes in LLVM to canonicalize and simplify the IR. It is suitable to run; /// repeatedly over the IR and is not expected to destroy important; /// information about the semantics of the IR.; ///; /// Note that \p Level cannot be `O0` here. The pipelines produced are; /// only intended for use when attempting to optimize code. If frontends; /// require some transformations for semantic reasons, they should explicitly; /// build them.; ///; /// \p Phase indicates the current ThinLTO phase.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:78,pipeline,pipeline,78,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,3,['pipeline'],"['pipeline', 'pipelines']"
Deployability,"/// Construct the core LLVM module canonicalization and simplification; /// pipeline.; ///; /// This pipeline focuses on canonicalizing and simplifying the entire module; /// of IR. Much like the function simplification pipeline above, it is; /// suitable to run repeatedly over the IR and is not expected to destroy; /// important information. It does, however, perform inlining and other; /// heuristic based simplifications that are not strictly reversible.; ///; /// Note that \p Level cannot be `O0` here. The pipelines produced are; /// only intended for use when attempting to optimize code. If frontends; /// require some transformations for semantic reasons, they should explicitly; /// build them.; ///; /// \p Phase indicates the current ThinLTO phase.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:76,pipeline,pipeline,76,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,4,['pipeline'],"['pipeline', 'pipelines']"
Deployability,"/// Construct the core LLVM module optimization pipeline.; ///; /// This pipeline focuses on optimizing the execution speed of the IR. It; /// uses cost modeling and thresholds to balance code growth against runtime; /// improvements. It includes vectorization and other information destroying; /// transformations. It also cannot generally be run repeatedly on a module; /// without potentially seriously regressing either runtime performance of; /// the code or serious code size growth.; ///; /// Note that \p Level cannot be `O0` here. The pipelines produced are; /// only intended for use when attempting to optimize code. If frontends; /// require some transformations for semantic reasons, they should explicitly; /// build them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,3,['pipeline'],"['pipeline', 'pipelines']"
Deployability,/// Construct the module pipeline that performs inlining as well as; /// the inlining-driven cleanups.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:25,pipeline,pipeline,25,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipeline']
Deployability,/// Construct the module pipeline that performs inlining with; /// module inliner pass.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:25,pipeline,pipeline,25,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipeline']
Deployability,"/// Constructor for automatic configuration with basic settings and a; /// ModelConfig. Uses a UniformProposal, 10,000 iterations, 40 burn in; /// steps, 50 bins for each RooRealVar, determines interval by histogram,; /// and finds a 95% confidence interval. Any of these basic settings can; /// be overridden by calling one of the Set...() methods.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h:30,configurat,configuration,30,roofit/roostats/inc/RooStats/MCMCCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h,1,['configurat'],['configuration']
Deployability,"/// Constructor from data and a model configuration; /// If the ModelConfig defines a prior pdf for any of the parameters those will be included as constrained terms in the; /// likelihood function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProfileLikelihoodCalculator.h:38,configurat,configuration,38,roofit/roostats/inc/RooStats/ProfileLikelihoodCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProfileLikelihoodCalculator.h,1,['configurat'],['configuration']
Deployability,/// Constructor sets pipeline tuning defaults based on cl::opts. Each option; /// can be set in the PassBuilder when using a LLVM as a library.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:21,pipeline,pipeline,21,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipeline']
Deployability,/// Constructor; ///; /// \param Functions The set of functions we are deriving attributes for.; /// \param InfoCache Cache to hold various information accessible for; /// the abstract attributes.; /// \param Configuration The Attributor configuration which determines what; /// generic features to use.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:209,Configurat,Configuration,209,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,2,"['Configurat', 'configurat']","['Configuration', 'configuration']"
Deployability,/// Constructs a StmtSequence holding multiple statements.; ///; /// The resulting StmtSequence identifies a continuous sequence of statements; /// in the body of the given CompoundStmt. Which statements of the body should; /// be identified needs to be specified by providing a start and end index; /// that describe a non-empty sub-array in the body of the given CompoundStmt.; ///; /// \param Stmt A CompoundStmt that contains all statements in its body.; /// \param D The Decl containing this Stmt.; /// \param StartIndex The inclusive start index in the children array of; /// \p Stmt; /// \param EndIndex The exclusive end index in the children array of \p Stmt.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:109,continuous,continuous,109,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,1,['continuous'],['continuous']
Deployability,/// Consume a minimal well-formed code unit subsequence starting at; /// \a Cur. Return false if it is not the same Unicode scalar value as; /// \a Expected. This updates \a Column.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp:163,update,updates,163,interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp,1,['update'],['updates']
Deployability,/// Consume the next token from the input stream and return it.; ///; /// The lexer will continuously return the end-of-file token once the end of; /// the main input file has been reached.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCAsmLexer.h:89,continuous,continuously,89,interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCAsmLexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCAsmLexer.h,1,['continuous'],['continuously']
Deployability,"/// Contains the updated callee saved register list.; /// As opposed to the static list defined in register info,; /// all registers that were disabled are removed from the list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h:17,update,updated,17,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,1,['update'],['updated']
Deployability,"/// Context for (re-)mapping values (and metadata).; ///; /// A shared context used for mapping and remapping of Value and Metadata; /// instances using \a ValueToValueMapTy, \a RemapFlags, \a; /// ValueMapTypeRemapper, and \a ValueMaterializer.; ///; /// There are a number of top-level entry points:; /// - \a mapValue() (and \a mapConstant());; /// - \a mapMetadata() (and \a mapMDNode());; /// - \a remapInstruction();; /// - \a remapFunction(); and; /// - \a remapGlobalObjectMetadata().; ///; /// The \a ValueMaterializer can be used as a callback, but cannot invoke any; /// of these top-level functions recursively. Instead, callbacks should use; /// one of the following to schedule work lazily in the \a ValueMapper; /// instance:; /// - \a scheduleMapGlobalInitializer(); /// - \a scheduleMapAppendingVariable(); /// - \a scheduleMapGlobalAlias(); /// - \a scheduleMapGlobalIFunc(); /// - \a scheduleRemapFunction(); ///; /// Sometimes a callback needs a different mapping context. Such a context can; /// be registered using \a registerAlternateMappingContext(), which takes an; /// alternate \a ValueToValueMapTy and \a ValueMaterializer and returns a ID to; /// pass into the schedule*() functions.; ///; /// TODO: lib/Linker really doesn't need the \a ValueHandle in the \a; /// ValueToValueMapTy. We should template \a ValueMapper (and its; /// implementation classes), and explicitly instantiate on two concrete; /// instances of \a ValueMap (one as \a ValueToValueMap, and one with raw \a; /// Value pointers). It may be viable to do away with \a TrackingMDRef in the; /// \a Metadata side map for the lib/Linker case as well, in which case we'll; /// need a new template parameter on \a ValueMap.; ///; /// TODO: Update callers of \a RemapInstruction() and \a MapValue() (etc.) to; /// use \a ValueMapper directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ValueMapper.h:1732,Update,Update,1732,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ValueMapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ValueMapper.h,1,['Update'],['Update']
Deployability,"/// Convert an atomic cmpxchg of a non-integral type to an integer cmpxchg of; /// the equivalent bitwidth. We used to not support pointer cmpxchg in the; /// IR. As a migration step, we convert back to what use to be the standard; /// way to represent a pointer cmpxchg so that we can update backends one by; /// one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp:286,update,update,286,interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,1,['update'],['update']
Deployability,/// Convert calls to ARC runtime functions to intrinsic calls and upgrade the; /// old retain release marker to new module flag format.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h:66,upgrade,upgrade,66,interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,2,"['release', 'upgrade']","['release', 'upgrade']"
Deployability,"/// Converts BB from the original loop body to the rewritten, pipelined; /// steady-state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h:62,pipeline,pipelined,62,interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,1,['pipeline'],['pipelined']
Deployability,"/// Copies the upper element of the first 128-bit vector operand to the; /// corresponding upper element of the 128-bit result vector of [2 x double].; /// Rounds the lower element of the second 128-bit vector operand to an; /// integer value according to the rounding control specified by the third; /// argument and copies it to the lower element of the 128-bit result vector; /// of [2 x double].; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m128d _mm_round_sd(__m128d X, __m128d Y, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VROUNDSD / ROUNDSD </c> instruction.; ///; /// \param X; /// A 128-bit vector of [2 x double]. The value stored in bits [127:64] is; /// copied to the corresponding bits of the result.; /// \param Y; /// A 128-bit vector of [2 x double]. The value stored in bits [63:0] is; /// rounded to the nearest integer using the specified rounding control and; /// copied to the corresponding bits of the result.; /// \param M; /// An integer value that specifies the rounding operation. \n; /// Bits [7:4] are reserved. \n; /// Bit [3] is a precision exception value: \n; /// 0: A normal PE exception is used \n; /// 1: The PE field is not updated \n; /// Bit [2] is the rounding control source: \n; /// 0: Use bits [1:0] of \a M \n; /// 1: Use the current MXCSR setting \n; /// Bits [1:0] contain the rounding control definition: \n; /// 00: Nearest \n; /// 01: Downward (toward negative infinity) \n; /// 10: Upward (toward positive infinity) \n; /// 11: Truncated; /// \returns A 128-bit vector of [2 x double] containing the copied and rounded; /// values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1207,update,updated,1207,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,1,['update'],['updated']
Deployability,"/// Copies three upper elements of the first 128-bit vector operand to; /// the corresponding three upper elements of the 128-bit result vector of; /// [4 x float]. Rounds the lowest element of the second 128-bit vector; /// operand to an integer value according to the rounding control specified; /// by the third argument and copies it to the lowest element of the 128-bit; /// result vector of [4 x float].; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m128 _mm_round_ss(__m128 X, __m128 Y, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VROUNDSS / ROUNDSS </c> instruction.; ///; /// \param X; /// A 128-bit vector of [4 x float]. The values stored in bits [127:32] are; /// copied to the corresponding bits of the result.; /// \param Y; /// A 128-bit vector of [4 x float]. The value stored in bits [31:0] is; /// rounded to the nearest integer using the specified rounding control and; /// copied to the corresponding bits of the result.; /// \param M; /// An integer value that specifies the rounding operation. \n; /// Bits [7:4] are reserved. \n; /// Bit [3] is a precision exception value: \n; /// 0: A normal PE exception is used \n; /// 1: The PE field is not updated \n; /// Bit [2] is the rounding control source: \n; /// 0: Use bits [1:0] of \a M \n; /// 1: Use the current MXCSR setting \n; /// Bits [1:0] contain the rounding control definition: \n; /// 00: Nearest \n; /// 01: Downward (toward negative infinity) \n; /// 10: Upward (toward positive infinity) \n; /// 11: Truncated; /// \returns A 128-bit vector of [4 x float] containing the copied and rounded; /// values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1214,update,updated,1214,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,1,['update'],['updated']
Deployability,"/// Copy the properties of all axes to a histogram.; ///; /// \param hs histogram whose axes should be updated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnChain.cxx:103,update,updated,103,hist/hist/src/THnChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnChain.cxx,1,['update'],['updated']
Deployability,/// Correctly update FunctionPropertiesInfo post-inlining. A; /// FunctionPropertiesUpdater keeps the state necessary for tracking the changes; /// llvm::InlineFunction makes. The idea is that inlining will at most modify; /// a few BBs of the Caller (maybe the entry BB and definitely the callsite BB); /// and potentially affect exception handling BBs in the case of invoke; /// inlining.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/FunctionPropertiesAnalysis.h:14,update,update,14,interpreter/llvm-project/llvm/include/llvm/Analysis/FunctionPropertiesAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/FunctionPropertiesAnalysis.h,1,['update'],['update']
Deployability,"/// Create a LiveRangeEdit for breaking down parent into smaller pieces.; /// @param parent The register being spilled or split.; /// @param newRegs List to receive any new registers created. This needn't be; /// empty initially, any existing registers are ignored.; /// @param MF The MachineFunction the live range edit is taking place in.; /// @param lis The collection of all live intervals in this function.; /// @param vrm Map of virtual registers to physical registers for this; /// function. If NULL, no virtual register map updates will; /// be done. This could be the case if called before Regalloc.; /// @param deadRemats The collection of all the instructions defining an; /// original reg and are dead after remat.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeEdit.h:532,update,updates,532,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeEdit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeEdit.h,1,['update'],['updates']
Deployability,"/// Create a clone of Edge's callee and move Edge to that new callee node,; /// performing the necessary context id and allocation type updates.; /// If callee's caller edge iterator is supplied, it is updated when removing; /// the edge from that list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:136,update,updates,136,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,2,['update'],"['updated', 'updates']"
Deployability,"/// Create a condition to determine if the trip count of the loop is greater; /// than TC, where TC is always one more than for the previous prologue or; /// 0 if this is being called for the outermost prologue.; ///; /// If the trip count is statically known to be greater than TC, return; /// true. If the trip count is statically known to be not greater than TC,; /// return false. Otherwise return nullopt and fill out Cond with the test; /// condition.; ///; /// Note: This hook is guaranteed to be called from the innermost to the; /// outermost prologue of the loop being software pipelined.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:588,pipeline,pipelined,588,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['pipeline'],['pipelined']
Deployability,/// Create a copy of a const pool value. Update CPI to the new index and return; /// the label UID.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:41,Update,Update,41,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['Update'],['Update']
Deployability,"/// Create a copy of the thinlto import, mark it local, and redirect direct; /// calls to the copy. Only direct calls are replaced, so that e.g. indirect; /// call function pointer tests would use the global identity of the function.; ///; /// Currently, Value Profiling (""VP"") MD_prof data isn't updated to refer to the; /// clone's GUID (which will be different, because the name and linkage is; /// different), under the assumption that the last consumer of this data is; /// upstream the pipeline (e.g. ICP).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ElimAvailExtern.cpp:297,update,updated,297,interpreter/llvm-project/llvm/lib/Transforms/IPO/ElimAvailExtern.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ElimAvailExtern.cpp,2,"['pipeline', 'update']","['pipeline', 'updated']"
Deployability,"/// Create a new basic block that will be the predecessor of BB and successor of; /// all blocks in Preds. When profile data is available, update the frequency of; /// this new block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:139,update,update,139,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['update'],['update']
Deployability,/// Create a new flow node and update dominator tree and region info,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StructurizeCFG.cpp:31,update,update,31,interpreter/llvm-project/llvm/lib/Transforms/Scalar/StructurizeCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StructurizeCFG.cpp,1,['update'],['update']
Deployability,/// Create a pass configuration object to be used by addPassToEmitX methods; /// for generating a pipeline of CodeGen passes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h:18,configurat,configuration,18,interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,2,"['configurat', 'pipeline']","['configuration', 'pipeline']"
Deployability,/// Create a pointer that is not potentially updated by later generations of; /// the external AST source.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTSource.h:45,update,updated,45,interpreter/llvm-project/clang/include/clang/AST/ExternalASTSource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTSource.h,1,['update'],['updated']
Deployability,"/// Create a progress helper.; /// \param increment RDF callbacks are called every `n` events. Pass this `n` here.; /// \param totalFiles read total number of files in the RDF.; /// \param progressBarWidth Number of characters the progress bar will occupy.; /// \param printInterval Update every stats every `n` seconds.; /// \param useColors Use shell colour codes to colour the output. Automatically disabled when; /// we are not writing to a tty.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDFHelpers.hxx:283,Update,Update,283,tree/dataframe/inc/ROOT/RDFHelpers.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDFHelpers.hxx,1,['Update'],['Update']
Deployability,/// Create a repairing placement for the \p OpIdx-th operand of; /// \p MI. \p TRI is used to make some checks on the register aliases; /// if the machine operand is a physical register. \p P is used to; /// to update liveness information and such when materializing the; /// points.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h:211,update,update,211,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h,1,['update'],['update']
Deployability,"/// Create a segmented GSYM creator starting with function info index; /// \a FuncIdx.; ///; /// This function will create a GsymCreator object that will encode into; /// roughly \a SegmentSize bytes and return it. It is used by the private; /// saveSegments(...) function and also is used by the GSYM unit tests to test; /// segmenting of GSYM files. The returned GsymCreator can be finalized and; /// encoded.; ///; /// \param [in] SegmentSize The size in bytes to roughly segment the GSYM file; /// into.; /// \param [in,out] FuncIdx The index of the first function info to encode; /// into the returned GsymCreator. This index will be updated so it can be; /// used in subsequent calls to this function to allow more segments to be; /// created.; /// \returns An expected unique pointer to a GsymCreator or an error. The; /// returned unique pointer can be NULL if there are no more functions to; /// encode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h:639,update,updated,639,interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h,1,['update'],['updated']
Deployability,/// Create a tool invocation.; ///; /// \param CommandLine The command line arguments to clang. Note that clang; /// uses its binary name (CommandLine[0]) to locate its builtin headers.; /// Callers have to ensure that they are installed in a compatible location; /// (see clang driver implementation) or mapped in via mapVirtualFile.; /// \param FAction The action to be executed.; /// \param Files The FileManager used for the execution. Class does not take; /// ownership.; /// \param PCHContainerOps The PCHContainerOperations for loading and creating; /// clang modules.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Tooling.h:228,install,installed,228,interpreter/llvm-project/clang/include/clang/Tooling/Tooling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Tooling.h,1,['install'],['installed']
Deployability,"/// Create an IR BasicBlock to hold the output instructions generated by this; /// VPBasicBlock, and return it. Update the CFGState accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:112,Update,Update,112,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,1,['Update'],['Update']
Deployability,"/// Create an LTO object. A default constructed LTO object has a reasonable; /// production configuration, but you can customize it by passing arguments to; /// this constructor.; /// FIXME: We do currently require the DiagHandler field to be set in Conf.; /// Until that is fixed, a Config argument is required.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h:92,configurat,configuration,92,interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h,1,['configurat'],['configuration']
Deployability,/// Create an instance of the safepoint verifier pass which can be added to; /// a pass pipeline to check for relocation bugs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/SafepointIRVerifier.h:88,pipeline,pipeline,88,interpreter/llvm-project/llvm/include/llvm/IR/SafepointIRVerifier.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/SafepointIRVerifier.h,2,['pipeline'],['pipeline']
Deployability,/// Create and return a graph symbol for the given normalized symbol.; ///; /// NSym's GraphSymbol member will be updated to point at the newly created; /// symbol.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/MachOLinkGraphBuilder.h:114,update,updated,114,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/MachOLinkGraphBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/MachOLinkGraphBuilder.h,1,['update'],['updated']
Deployability,"/// Create integral over observables in iset in range named rangeName using specified configuration for any numeric integration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h:86,configurat,configuration,86,roofit/roofitcore/inc/RooAbsReal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h,2,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"/// Create integral over observables in iset in range named rangeName with integrand normalized over observables in nset while; /// using specified configuration for any numeric integration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h:148,configurat,configuration,148,roofit/roofitcore/inc/RooAbsReal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h,2,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,/// Create the exit value of first order recurrences in the middle block and; /// update their users.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:82,update,update,82,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['update']
Deployability,"/// Create the plugin to submit DebugObjects for JITLink artifacts. For all; /// options the recommended setting is true.; ///; /// RequireDebugSections:; /// Submit debug objects to the executor only if they contain actual debug; /// info. Turning this off may allow minimal debugging based on raw symbol; /// names. Note that this may cause significant memory and transport; /// overhead for objects built with a release configuration.; ///; /// AutoRegisterCode:; /// Notify the debugger for each new debug object. This is a good default; /// mode, but it may cause significant overhead when adding many modules in; /// sequence. When turning this off, the user has to issue the call to; /// __jit_debug_register_code() on the executor side manually.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/DebugObjectManagerPlugin.h:415,release,release,415,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/DebugObjectManagerPlugin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/DebugObjectManagerPlugin.h,2,"['configurat', 'release']","['configuration', 'release']"
Deployability,"/// CreateTempAlloca - This creates an alloca and inserts it into the entry; /// block if \p ArraySize is nullptr, otherwise inserts it at the current; /// insertion point of the builder. The caller is responsible for setting an; /// appropriate alignment on; /// the alloca.; ///; /// \p ArraySize is the number of array elements to be allocated if it; /// is not nullptr.; ///; /// LangAS::Default is the address space of pointers to local variables and; /// temporaries, as exposed in the source language. In certain; /// configurations, this is not the same as the alloca address space, and a; /// cast is needed to lift the pointer from the alloca AS into; /// LangAS::Default. This can happen when the target uses a restricted; /// address space for the stack but the source language requires; /// LangAS::Default to be a generic address space. The latter condition is; /// common for most programming languages; OpenCL is an exception in that; /// LangAS::Default is the private address space, which naturally maps; /// to the stack.; ///; /// Because the address of a temporary is often exposed to the program in; /// various ways, this function will perform the cast. The original alloca; /// instruction is returned through \p Alloca if it is not nullptr.; ///; /// The cast is not performaed in CreateTempAllocaWithoutCast. This is; /// more efficient if the caller knows that the address will not be exposed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:525,configurat,configurations,525,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['configurat'],['configurations']
Deployability,/// Creates SLocEntries and updates the locations of macro argument; /// tokens to their new expanded locations.; ///; /// \param ArgIdSpellLoc the location of the macro argument id inside the macro; /// definition.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp:28,update,updates,28,interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,1,['update'],['updates']
Deployability,/// Creates SLocEntries and updates the locations of macro argument; /// tokens to their new expanded locations.; ///; /// \param ArgIdSpellLoc the location of the macro argument id inside the; /// macro definition.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/TokenLexer.h:28,update,updates,28,interpreter/llvm-project/clang/include/clang/Lex/TokenLexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/TokenLexer.h,1,['update'],['updates']
Deployability,"/// Creates a new loop with header, body and latch blocks that iterates from; /// [0, Bound). Updates \p Preheader to branch to the new header and uses \p; /// Exit as exit block. Adds the new loop blocks to \L and applies dominator; /// tree updates to \p DTU.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/MatrixUtils.h:94,Update,Updates,94,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/MatrixUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/MatrixUtils.h,2,"['Update', 'update']","['Updates', 'updates']"
Deployability,/// Creates appreviations for the current DIE. Returns value of; /// abbreviation number. Updates offsets with the size of abbreviation; /// number.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEGenerator.h:90,Update,Updates,90,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEGenerator.h,1,['Update'],['Updates']
Deployability,"/// Cross-check the analytical integration code with the normal Gaussian.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBifurGauss.cxx:31,integrat,integration,31,roofit/roofit/test/testRooBifurGauss.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooBifurGauss.cxx,1,['integrat'],['integration']
Deployability,/// CurAbbrevs - Abbrevs installed at in this block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamWriter.h:25,install,installed,25,interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamWriter.h,1,['install'],['installed']
Deployability,/// Current target configuration. Controls how the pass handles errors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/IRTranslator.h:19,configurat,configuration,19,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/IRTranslator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/IRTranslator.h,2,['configurat'],['configuration']
Deployability,"/// Cycle at which the resource will be released by an instruction,; /// relatively to the cycle in which the instruction is issued; /// (assuming no stalls inbetween).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:40,release,released,40,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['release'],['released']
Deployability,"/// Darwin target variant triple, the variant of the deployment target; /// for which the code is being compiled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/driver/cc1as_main.cpp:53,deploy,deployment,53,interpreter/llvm-project/clang/tools/driver/cc1as_main.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/driver/cc1as_main.cpp,1,['deploy'],['deployment']
Deployability,/// Deallocate - Release storage for the pointed-to object. The; /// storage will be kept track of and may be recycled.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/RecyclingAllocator.h:17,Release,Release,17,interpreter/llvm-project/llvm/include/llvm/Support/RecyclingAllocator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/RecyclingAllocator.h,1,['Release'],['Release']
Deployability,"/// Deallocate memory according to the rules of the active lowering.; ///; /// \param CG - if non-null, will be updated for the new call",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInternal.h:112,update,updated,112,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInternal.h,1,['update'],['updated']
Deployability,"/// DeclContexts that have received extensions since their serialized; /// form.; ///; /// For namespaces, when we're chaining and encountering a namespace, we check; /// if its primary namespace comes from the chain. If it does, we add the; /// primary to this set, so that we can write out lexical content updates for; /// it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTWriter.h:308,update,updates,308,interpreter/llvm-project/clang/include/clang/Serialization/ASTWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTWriter.h,1,['update'],['updates']
Deployability,/// Declaration updates for already-loaded declarations that we need; /// to apply once we finish processing an import.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:16,update,updates,16,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['update'],['updates']
Deployability,"/// Decrement the fallible iterator.; ///; /// If the underlying 'dec' operation fails, this will set the Error value; /// and update this iterator value to point to end-of-range.; ///; /// The Error value is marked as needing checking, regardless of whether the; /// 'dec' operation succeeds or fails.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/fallible_iterator.h:127,update,update,127,interpreter/llvm-project/llvm/include/llvm/ADT/fallible_iterator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/fallible_iterator.h,1,['update'],['update']
Deployability,"/// Deduce template arguments for a function template when there is; /// nothing to deduce against (C++0x [temp.arg.explicit]p3).; ///; /// \param FunctionTemplate the function template for which we are performing; /// template argument deduction.; ///; /// \param ExplicitTemplateArgs the explicitly-specified template; /// arguments.; ///; /// \param Specialization if template argument deduction was successful,; /// this will be set to the function template specialization produced by; /// template argument deduction.; ///; /// \param Info the argument will be updated to provide additional information; /// about template argument deduction.; ///; /// \param IsAddressOfFunction If \c true, we are deducing as part of taking; /// the address of a function template in a context where we do not have a; /// target type, per [over.over]. If \c false, we are looking up a function; /// template specialization based on its signature, which only happens when; /// deducing a function parameter type from an argument that is a template-id; /// naming a function template specialization.; ///; /// \returns the result of template argument deduction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:566,update,updated,566,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['update'],['updated']
Deployability,"/// Deduce template arguments when taking the address of a function; /// template (C++ [temp.deduct.funcaddr]) or matching a specialization to; /// a template.; ///; /// \param FunctionTemplate the function template for which we are performing; /// template argument deduction.; ///; /// \param ExplicitTemplateArgs the explicitly-specified template; /// arguments.; ///; /// \param ArgFunctionType the function type that will be used as the; /// ""argument"" type (A) when performing template argument deduction from the; /// function template's function type. This type may be NULL, if there is no; /// argument type to compare against, in C++0x [temp.arg.explicit]p3.; ///; /// \param Specialization if template argument deduction was successful,; /// this will be set to the function template specialization produced by; /// template argument deduction.; ///; /// \param Info the argument will be updated to provide additional information; /// about template argument deduction.; ///; /// \param IsAddressOfFunction If \c true, we are deducing as part of taking; /// the address of a function template per [temp.deduct.funcaddr] and; /// [over.over]. If \c false, we are looking up a function template; /// specialization based on its signature, per [temp.deduct.decl].; ///; /// \returns the result of template argument deduction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:899,update,updated,899,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['update'],['updated']
Deployability,"/// Deduce the type for an auto type-specifier (C++11 [dcl.spec.auto]p6); ///; /// Note that this is done even if the initializer is dependent. (This is; /// necessary to support partial ordering of templates using 'auto'.); /// A dependent type will be produced when deducing from a dependent type.; ///; /// \param Type the type pattern using the auto type-specifier.; /// \param Init the initializer for the variable whose type is to be deduced.; /// \param Result if type deduction was successful, this will be set to the; /// deduced type.; /// \param Info the argument will be updated to provide additional information; /// about template argument deduction.; /// \param DependentDeduction Set if we should permit deduction in; /// dependent cases. This is necessary for template partial ordering with; /// 'auto' template parameters. The template parameter depth to be used; /// should be specified in the 'Info' parameter.; /// \param IgnoreConstraints Set if we should not fail if the deduced type does; /// not satisfy the type-constraint in the auto type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:583,update,updated,583,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['update'],['updated']
Deployability,/// Deduced return type updates that have been loaded but not yet propagated; /// across the relevant redeclaration chain. The map key is the canonical; /// declaration and the value is the deduced return type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:24,update,updates,24,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['update'],['updates']
Deployability,"/// Defines hints for detecting supported languages code blocks in raw; /// strings.; ///; /// A raw string with a matching delimiter or a matching enclosing function; /// name will be reformatted assuming the specified language based on the; /// style for that language defined in the .clang-format file. If no style has; /// been defined in the .clang-format file for the specific language, a; /// predefined style given by 'BasedOnStyle' is used. If 'BasedOnStyle' is not; /// found, the formatting is based on llvm style. A matching delimiter takes; /// precedence over a matching enclosing function name for determining the; /// language of the raw string contents.; ///; /// If a canonical delimiter is specified, occurrences of other delimiters for; /// the same language will be updated to the canonical if possible.; ///; /// There should be at most one specification per language and each delimiter; /// and enclosing function should not occur in multiple specifications.; ///; /// To configure this in the .clang-format file, use:; /// \code{.yaml}; /// RawStringFormats:; /// - Language: TextProto; /// Delimiters:; /// - 'pb'; /// - 'proto'; /// EnclosingFunctions:; /// - 'PARSE_TEXT_PROTO'; /// BasedOnStyle: google; /// - Language: Cpp; /// Delimiters:; /// - 'cc'; /// - 'cpp'; /// BasedOnStyle: llvm; /// CanonicalDelimiter: 'cc'; /// \endcode; /// \version 6",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:787,update,updated,787,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['update'],['updated']
Deployability,"/// Defines synch scope values used internally by clang.; ///; /// The enum values start from 0 and are contiguous. They are mainly used for; /// enumerating all supported synch scope values and mapping them to LLVM; /// synch scopes. Their numerical values may be different from the corresponding; /// synch scope enums used in source languages.; ///; /// In atomic builtin and expressions, language-specific synch scope enums are; /// used. Currently only OpenCL memory scope enums are supported and assumed; /// to be used by all languages. However, in the future, other languages may; /// define their own set of synch scope enums. The language-specific synch scope; /// values are represented by class AtomicScopeModel and its derived classes.; ///; /// To add a new enum value:; /// Add the enum value to enum class SyncScope.; /// Update enum value Last if necessary.; /// Update getAsString.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SyncScope.h:838,Update,Update,838,interpreter/llvm-project/clang/include/clang/Basic/SyncScope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SyncScope.h,2,['Update'],['Update']
Deployability,/// Defines when to put an empty line after access modifiers.; /// ``EmptyLineBeforeAccessModifier`` configuration handles the number of; /// empty lines between two access modifiers.; /// \version 13,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:101,configurat,configuration,101,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['configurat'],['configuration']
Deployability,"/// Delete DelBB. DelBB will be removed from its Parent and; /// erased from available trees if it exists and finally get deleted.; /// Under Eager UpdateStrategy, DelBB will be processed immediately.; /// Under Lazy UpdateStrategy, DelBB will be queued until a flush event and; /// all available trees are up-to-date. Assert if any instruction of DelBB is; /// modified while awaiting deletion. When both DT and PDT are nullptrs, DelBB; /// will be queued until flush() is called.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:148,Update,UpdateStrategy,148,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,2,['Update'],['UpdateStrategy']
Deployability,"/// Delete DelBB. DelBB will be removed from its Parent and; /// erased from available trees if it exists. Then the callback will; /// be called. Finally, DelBB will be deleted.; /// Under Eager UpdateStrategy, DelBB will be processed immediately.; /// Under Lazy UpdateStrategy, DelBB will be queued until a flush event and; /// all available trees are up-to-date. Assert if any instruction of DelBB is; /// modified while awaiting deletion. Multiple callbacks can be queued for one; /// DelBB under Lazy UpdateStrategy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:195,Update,UpdateStrategy,195,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,3,['Update'],['UpdateStrategy']
Deployability,/// Delete loop blocks that have become unreachable after folding. Make all; /// relevant updates to DT and LI.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp:90,update,updates,90,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp,1,['update'],['updates']
Deployability,"/// Delete the specified blocks from \p BB. The set of deleted blocks must have; /// no predecessors that are not being deleted themselves. \p BBs must have no; /// duplicating blocks. If there are loops among this set of blocks, all; /// relevant loop info updates should be done before this function is called.; /// If \p KeepOneInputPHIs is true, one-input Phis in successors of blocks; /// being deleted will be preserved.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:258,update,updates,258,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,1,['update'],['updates']
Deployability,"/// Describes a mapping between a continuous subrange of spelled tokens and; /// expanded tokens. Represents macro expansions, preprocessor directives,; /// conditionally disabled pp regions, etc.; /// #define FOO 1+2; /// #define BAR(a) a + 1; /// FOO // invocation #1, tokens = {'1','+','2'}, macroTokens = {'FOO'}.; /// BAR(1) // invocation #2, tokens = {'a', '+', '1'},; /// macroTokens = {'BAR', '(', '1', ')'}.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Syntax/Tokens.h:34,continuous,continuous,34,interpreter/llvm-project/clang/include/clang/Tooling/Syntax/Tokens.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Syntax/Tokens.h,1,['continuous'],['continuous']
Deployability,"/// Describes an operand in the kernel of a pipelined loop. Characteristics of; /// the operand are discovered, such as how many in-loop PHIs it has to jump; /// through and defaults for these phis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:44,pipeline,pipelined,44,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['pipeline'],['pipelined']
Deployability,/// Describes the result of waiting for the owner to release the lock.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/LockFileManager.h:53,release,release,53,interpreter/llvm-project/llvm/include/llvm/Support/LockFileManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/LockFileManager.h,1,['release'],['release']
Deployability,/// Determine if it is possible to modify the \p RHS and predicate \p P of a; /// G_ICMP instruction such that the right-hand side is an arithmetic immediate.; ///; /// \returns A pair containing the updated immediate and predicate which may; /// be used to optimize the instruction.; ///; /// \note This assumes that the comparison has been legalized.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp:200,update,updated,200,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp,1,['update'],['updated']
Deployability,"/// Determine if the given use can accommodate a fixup at the given offset and; /// other details. If so, update the use and return true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:106,update,update,106,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['update'],['update']
Deployability,"/// Determine the availability of the given declaration.; ///; /// This routine will determine the most restrictive availability of; /// the given declaration (e.g., preferring 'unavailable' to; /// 'deprecated').; ///; /// \param Message If non-NULL and the result is not \c; /// AR_Available, will be set to a (possibly empty) message; /// describing why the declaration has not been introduced, is; /// deprecated, or is unavailable.; ///; /// \param EnclosingVersion The version to compare with. If empty, assume the; /// deployment target version.; ///; /// \param RealizedPlatform If non-NULL and the availability result is found; /// in an available attribute it will set to the platform which is written in; /// the available attribute.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:526,deploy,deployment,526,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['deploy'],['deployment']
Deployability,"/// Determine the underlying locations kinds for \p Ptr, e.g., globals or; /// arguments, and update the state and access map accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:94,update,update,94,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['update'],['update']
Deployability,/// Determine whether or not it is possible to update the RHS and predicate of; /// a G_ICMP instruction such that the RHS will be selected as an arithmetic; /// immediate.; ///; /// \p MI - The G_ICMP instruction; /// \p MatchInfo - The new RHS immediate and predicate on success; ///; /// See tryAdjustICmpImmAndPred for valid transformations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp:47,update,update,47,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp,1,['update'],['update']
Deployability,"/// Determine whether the identifier II is a typo for the name of; /// the class type currently being defined. If so, update it to the identifier; /// that should have been used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:118,update,update,118,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['update'],['update']
Deployability,/// Determine whether to set the bit statically or dynamically based; /// on the deployment target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetOptions.h:81,deploy,deployment,81,interpreter/llvm-project/llvm/include/llvm/Target/TargetOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetOptions.h,1,['deploy'],['deployment']
Deployability,"/// Determine whether, in the current machine configuration, we should use; /// instruction referencing or not.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h:46,configurat,configuration,46,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,1,['configurat'],['configuration']
Deployability,"/// Determines if Phi may have been type-promoted. If Phi has a single user; /// that ANDs the Phi with a type mask, return the user. RT is updated to; /// account for the narrower bit width represented by the mask, and the AND; /// instruction is added to CI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp:140,update,updated,140,interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,1,['update'],['updated']
Deployability,"/// Determines the active Scope associated with the given declaration; /// context.; ///; /// This routine maps a declaration context to the active Scope object that; /// represents that declaration context in the parser. It is typically used; /// from ""scope-less"" code (e.g., template instantiation, lazy creation of; /// declarations) that injects a name for name-lookup purposes and, therefore,; /// must update the Scope.; ///; /// \returns The scope corresponding to the given declaraion context, or NULL; /// if no such scope is open.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp:409,update,update,409,interpreter/llvm-project/clang/lib/Sema/Sema.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp,1,['update'],['update']
Deployability,/// Determines the value to use as the phi node input for a block.; ///; /// Select between \p OldVal any value that we know flows from \p BB; /// to a particular phi on the basis of which one (if either) is not; /// undef. Update IncomingValues based on the selected value.; ///; /// \param OldVal The value we are considering selecting.; /// \param BB The block that the value flows in from.; /// \param IncomingValues A map from block-to-value for other phi inputs; /// that we have examined.; ///; /// \returns the selected value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:224,Update,Update,224,interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,1,['Update'],['Update']
Deployability,/// Determines whether the instance variable for \p PropImpl must or must not be; /// released in -dealloc or whether it cannot be determined.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:86,release,released,86,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['released']
Deployability,/// Determines whether the module failed to load due to a configuration; /// mismatch with an explicitly-named .pcm file from the command line.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ModuleLoader.h:58,configurat,configuration,58,interpreter/llvm-project/clang/include/clang/Lex/ModuleLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ModuleLoader.h,1,['configurat'],['configuration']
Deployability,/// Diagnose differences between the current definition of the given; /// configuration macro and the definition provided on the command line.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp:74,configurat,configuration,74,interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,1,['configurat'],['configuration']
Deployability,"/// Diagnostic handler that's installed for all google tests.; /// It will generate a test failure when a diagnostic message is issued.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx:30,install,installed,30,core/testsupport/src/TestSupport.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/src/TestSupport.cxx,1,['install'],['installed']
Deployability,/// Did not track -> allocated. Other state (released) -> allocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:45,release,released,45,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['release'],['released']
Deployability,/// Did not track -> released. Other state (allocated) -> released.; /// The statement associated with the release might be missing.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:21,release,released,21,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,3,['release'],"['release', 'released']"
Deployability,/// Different styles for empty line after access modifiers.; /// ``EmptyLineBeforeAccessModifier`` configuration handles the number of; /// empty lines between two access modifiers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:99,configurat,configuration,99,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['configurat'],['configuration']
Deployability,"/// Directives should contain the description on how to compile and link a; /// shared lib. This description can be any valid shell command, including; /// the use of ';' to separate several instructions. However, shell specific; /// construct should be avoided. In particular this description can contain; /// environment variables, like $ROOTSYS (or %ROOTSYS% on windows).; /// ~~~ {.cpp}; /// Five special variables will be expanded before execution:; /// Variable name Expands to; /// ------------- ----------; /// $SourceFiles Name of source files to be compiled; /// $SharedLib Name of the shared library being created; /// $LibName Name of shared library without extension; /// $BuildDir Directory where the files will be created; /// $IncludePath value of fIncludePath; /// $LinkedLibs value of fLinkedLibs; /// $DepLibs libraries on which this library depends on; /// $ObjectFiles Name of source files to be compiler with; /// their extension changed to .o or .obj; /// $Opt location of the optimization/debug options; /// set fFlagsDebug and fFlagsOpt; /// ~~~; /// e.g.:; /// ~~~ {.cpp}; /// gSystem->SetMakeSharedLib(; /// ""KCC -n32 --strict $IncludePath -K0 \$Opt $SourceFile; /// --no_exceptions --signed_chars --display_error_number; /// --diag_suppress 68 -o $SharedLib"");; ///; /// gSystem->setMakeSharedLib(; /// ""Cxx $IncludePath -c $SourceFile;; /// ld -L/usr/lib/cmplrs/cxx -rpath /usr/lib/cmplrs/cxx -expect_unresolved; /// \$Opt -shared /usr/lib/cmplrs/cc/crt0.o /usr/lib/cmplrs/cxx/_main.o; /// -o $SharedLib $ObjectFile -lcxxstd -lcxx -lexc -lots -lc""; ///; /// gSystem->SetMakeSharedLib(; /// ""$HOME/mygcc/bin/g++ \$Opt -Wall -fPIC $IncludePath $SourceFile; /// -shared -o $SharedLib"");; ///; /// gSystem->SetMakeSharedLib(; /// ""cl -DWIN32 -D_WIN32 -D_MT -D_DLL -MD /O2 /G5 /MD -DWIN32; /// -D_WINDOWS $IncludePath $SourceFile; /// /link -PDB:NONE /NODEFAULTLIB /INCREMENTAL:NO /RELEASE /NOLOGO; /// $LinkedLibs -entry:_DllMainCRTStartup@12 -dll /out:$SharedLib""); /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:1988,RELEASE,RELEASE,1988,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['RELEASE'],['RELEASE']
Deployability,"/// Directly uses the provided tree and opens the output file for writing (update).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx:75,update,update,75,tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx,1,['update'],['update']
Deployability,"/// Disable all caches for sub-branches in an expression tree.; /// This is helpful when an expression with cached sub-branches needs to be integrated numerically.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooFitImplHelpers.h:140,integrat,integrated,140,roofit/roofitcore/res/RooFitImplHelpers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooFitImplHelpers.h,1,['integrat'],['integrated']
Deployability,/// Disable the integrated assembler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetOptions.h:16,integrat,integrated,16,interpreter/llvm-project/llvm/include/llvm/Target/TargetOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetOptions.h,1,['integrat'],['integrated']
Deployability,"/// DisableSymbolSearching - If called, the JIT will not try to lookup unknown; /// symbols with dlsym. A client can still use InstallLazyFunctionCreator to; /// resolve symbols in a custom way.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h:127,Install,InstallLazyFunctionCreator,127,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,1,['Install'],['InstallLazyFunctionCreator']
Deployability,"/// Disabled because the integrator doesn't reach the asked precision. If this; /// behavior gets changed, this can be enabled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx:25,integrat,integrator,25,roofit/roofitcore/test/testRooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx,2,['integrat'],['integrator']
Deployability,/// Disables the register from the list of CSRs.; /// I.e. the register will not appear as part of the CSR mask.; /// \see UpdatedCalleeSavedRegs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h:123,Update,UpdatedCalleeSavedRegs,123,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,1,['Update'],['UpdatedCalleeSavedRegs']
Deployability,"/// Discriminated union of Pass ID types.; ///; /// The PassConfig API prefers dealing with IDs because they are safer and more; /// efficient. IDs decouple configuration from instantiation. This way, when a; /// pass is overriden, it isn't unnecessarily instantiated. It is also unsafe to; /// refer to a Pass pointer after adding it to a pass manager, which deletes; /// redundant pass instances.; ///; /// However, it is convient to directly instantiate target passes with; /// non-default ctors. These often don't have a registered PassInfo. Rather than; /// force all target passes to implement the pass registry boilerplate, allow; /// the PassConfig API to handle either type.; ///; /// AnalysisID is sadly char*, so PointerIntPair won't work.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h:157,configurat,configuration,157,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,1,['configurat'],['configuration']
Deployability,"/// Dithering mass distributer.; ///; /// This class splits up a single mass into portions by weight, dithering to; /// spread out error. No mass is lost. The dithering precision depends on the; /// precision of the product of \a BlockMass and \a BranchProbability.; ///; /// The distribution algorithm follows.; ///; /// 1. Initialize by saving the sum of the weights in \a RemWeight and the; /// mass to distribute in \a RemMass.; ///; /// 2. For each portion:; ///; /// 1. Construct a branch probability, P, as the portion's weight divided; /// by the current value of \a RemWeight.; /// 2. Calculate the portion's mass as \a RemMass times P.; /// 3. Update \a RemWeight and \a RemMass at each portion by subtracting; /// the current portion's weight and mass.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp:654,Update,Update,654,interpreter/llvm-project/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/BlockFrequencyInfoImpl.cpp,1,['Update'],['Update']
Deployability,/// Do all the relocation update via allocas and mem2reg,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp:26,update,update,26,interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,1,['update'],['update']
Deployability,"/// Do the constant promotion indicated by the Updates records, keeping track; /// of globals in PromotionCache.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp:47,Update,Updates,47,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp,1,['Update'],['Updates']
Deployability,"/// Does this runtime provide ARC entrypoints that are likely to be faster; /// than an ordinary message send of the appropriate selector?; ///; /// The ARC entrypoints are guaranteed to be equivalent to just sending the; /// corresponding message. If the entrypoint is implemented naively as just a; /// message send, using it is a trade-off: it sacrifices a few cycles of; /// overhead to save a small amount of code. However, it's possible for; /// runtimes to detect and special-case classes that use ""standard""; /// retain/release behavior; if that's dynamically a large proportion of all; /// retained objects, using the entrypoint will also be faster than using a; /// message send.; ///; /// When this method returns true, Clang will turn non-super message sends of; /// certain selectors into calls to the correspond entrypoint:; /// retain => objc_retain; /// release => objc_release; /// autorelease => objc_autorelease",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h:528,release,release,528,interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,2,['release'],['release']
Deployability,/// Drop all updates applied by all available trees and delete BasicBlocks if; /// all available trees are up-to-date.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:13,update,updates,13,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,1,['update'],['updates']
Deployability,/// DropOperands - Release the operands and set this node to have; /// zero operands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:19,Release,Release,19,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['Release'],['Release']
Deployability,/// Dump the Workspace content as configuration file; /* It needs some workspace object list or something..*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HLFactory.h:34,configurat,configuration,34,roofit/roostats/inc/RooStats/HLFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HLFactory.h,1,['configurat'],['configuration']
Deployability,/// Dump the compiler configuration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendOptions.h:22,configurat,configuration,22,interpreter/llvm-project/clang/include/clang/Frontend/FrontendOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendOptions.h,1,['configurat'],['configuration']
Deployability,/// Dump the location list at the given \p Offset. The function returns true; /// iff it has successfully reched the end of the list. This means that one; /// can attempt to parse another list after the current one (\p Offset will be; /// updated to point past the end of the current list).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugLoc.h:239,update,updated,239,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugLoc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugLoc.h,1,['update'],['updated']
Deployability,/// Duplicate a TailBB instruction to PredBB and update; /// the source operands due to earlier PHI translation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp:49,update,update,49,interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,1,['update'],['update']
Deployability,"/// During commit, WriteTFileKeysList() updates fNBytesKeys and fSeekKeys of the RTFFile located at; /// fSeekFileRecord. Given that the TFile key starts at offset 100 and the file name, which is written twice,; /// is shorter than 255 characters, we should need at most ~600 bytes. However, the header also needs to be; /// aligned to kBlockAlign...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RMiniFile.hxx:40,update,updates,40,tree/ntuple/v7/inc/ROOT/RMiniFile.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RMiniFile.hxx,1,['update'],['updates']
Deployability,"/// During lowering new call nodes can be created (such as memset, etc.).; /// Those will become new roots of the current DAG, but complications arise; /// when they are tail calls. In such cases, the call lowering will update; /// the root, but the builder still needs to know that a tail call has been; /// lowered in order to avoid generating an additional return.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:220,update,update,220,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['update'],['update']
Deployability,/// ELF specific e_header flags; // It would be good if there were an MCELFAssembler class to hold this.; // ELF header flags are used both by the integrated and standalone assemblers.; // Access to the flags is necessary in cases where assembler directives affect; // which flags to be set.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAssembler.h:147,integrat,integrated,147,interpreter/llvm-project/llvm/include/llvm/MC/MCAssembler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAssembler.h,1,['integrat'],['integrated']
Deployability,"/// Emit HSA Metadata; ///; /// When \p Strict is true, known metadata elements must already be; /// well-typed. When \p Strict is false, known types are inferred and; /// the \p HSAMetadata structure is updated with the correct types.; ///; /// \returns True on success, false on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUTargetStreamer.h:204,update,updated,204,interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUTargetStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUTargetStreamer.h,1,['update'],['updated']
Deployability,"/// Emit a series of CopyFromReg nodes that copies from this value and returns; /// the result as a ValueVTs value. This uses Chain/Flag as the input and; /// updates them for the output Chain/Flag. If the Flag pointer is NULL, no; /// flag is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h:159,update,updates,159,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,1,['update'],['updates']
Deployability,"/// Emit a series of CopyToReg nodes that copies the specified value into the; /// registers specified by this object. This uses Chain/Flag as the input and; /// updates them for the output Chain/Flag. If the Flag pointer is nullptr, no; /// flag is used. If V is not nullptr, then it is used in printing better; /// diagnostic messages on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h:162,update,updates,162,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,1,['update'],['updates']
Deployability,"/// Emit all available macro tables(DWARFv4 and DWARFv5).; /// Use \p UnitMacroMap to get compilation unit by macro table offset.; /// Side effects: Fill \p StringPool with macro strings, update; /// DW_AT_macro_info, DW_AT_macros attributes for corresponding compile; /// units.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h:188,update,update,188,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,1,['update'],['update']
Deployability,"/// Emit an unconditional branch to the given block, unless it is the immediate; /// (fall-through) successor, and update the CFG.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:115,update,update,115,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,1,['update'],['update']
Deployability,"/// Emit an unconditional branch to the given block, unless it is the; /// immediate (fall-through) successor, and update the CFG.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FastISel.h:115,update,update,115,interpreter/llvm-project/llvm/include/llvm/CodeGen/FastISel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FastISel.h,1,['update'],['update']
Deployability,"/// Emit atomic compare for constructs: --- Only scalar data types; /// cond-expr-stmt:; /// x = x ordop expr ? expr : x;; /// x = expr ordop x ? expr : x;; /// x = x == e ? d : x;; /// x = e == x ? d : x; (this one is not in the spec); /// cond-update-stmt:; /// if (x ordop expr) { x = expr; }; /// if (expr ordop x) { x = expr; }; /// if (x == e) { x = d; }; /// if (e == x) { x = d; } (this one is not in the spec); /// conditional-update-capture-atomic:; /// v = x; cond-update-stmt; (IsPostfixUpdate=true, IsFailOnly=false); /// cond-update-stmt; v = x; (IsPostfixUpdate=false, IsFailOnly=false); /// if (x == e) { x = d; } else { v = x; } (IsPostfixUpdate=false,; /// IsFailOnly=true); /// r = x == e; if (r) { x = d; } (IsPostfixUpdate=false, IsFailOnly=false); /// r = x == e; if (r) { x = d; } else { v = x; } (IsPostfixUpdate=false,; /// IsFailOnly=true); ///; /// \param Loc The insert and source location description.; /// \param X The target atomic pointer to be updated.; /// \param V Memory address where to store captured value (for; /// compare capture only).; /// \param R Memory address where to store comparison result; /// (for compare capture with '==' only).; /// \param E The expected value ('e') for forms that use an; /// equality comparison or an expression ('expr') for; /// forms that use 'ordop' (logically an atomic maximum or; /// minimum).; /// \param D The desired value for forms that use an equality; /// comparison. If forms that use 'ordop', it should be; /// \p nullptr.; /// \param AO Atomic ordering of the generated atomic instructions.; /// \param Op Atomic compare operation. It can only be ==, <, or >.; /// \param IsXBinopExpr True if the conditional statement is in the form where; /// x is on LHS. It only matters for < or >.; /// \param IsPostfixUpdate True if original value of 'x' must be stored in; /// 'v', not an updated one (for compare capture; /// only).; /// \param IsFailOnly True if the original value of 'x' is stored to 'v'; /// only when",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:246,update,update-stmt,246,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,5,['update'],"['update-capture-atomic', 'update-stmt', 'updated']"
Deployability,/// Emit atomic update as LLVM instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp:16,update,update,16,interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,2,['update'],['update']
Deployability,/// Emit atomic update as libcalls.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp:16,update,update,16,interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,2,['update'],['update']
Deployability,"/// Emit atomic update code for constructs: \a X = \a X \a BO \a E or; /// \a X = \a E \a BO \a E.; ///; /// \param X Value to be updated.; /// \param E Update value.; /// \param BO Binary operation for update operation.; /// \param IsXLHSInRHSPart true if \a X is LHS in RHS part of the update; /// expression, false otherwise.; /// \param AO Atomic ordering of the generated atomic instructions.; /// \param CommonGen Code generator for complex expressions that cannot be; /// expressed through atomicrmw instruction.; /// \returns <true, OldAtomicValue> if simple 'atomicrmw' instruction was; /// generated, <false, RValue::get(nullptr)> otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:16,update,update,16,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,5,"['Update', 'update']","['Update', 'update', 'updated']"
Deployability,"/// Emit atomic update for constructs: --- Only Scalar data types; /// V = X; X = X BinOp Expr ,; /// X = X BinOp Expr; V = X,; /// V = X; X = Expr BinOp X,; /// X = Expr BinOp X; V = X,; /// V = X; X = UpdateOp(X),; /// X = UpdateOp(X); V = X,; ///; /// \param Loc The insert and source location description.; /// \param AllocaIP The insertion point to be used for alloca instructions.; /// \param X The target atomic pointer to be updated; /// \param V Memory address where to store captured value; /// \param Expr The value to update X with.; /// \param AO Atomic ordering of the generated atomic instructions; /// \param RMWOp The binary operation used for update. If; /// operation is not supported by atomicRMW, or belong to; ///	 {FADD, FSUB, BAD_BINOP}. Then a cmpExch based; /// atomic will be generated.; /// \param UpdateOp Code generator for complex expressions that cannot be; /// expressed through atomicrmw instruction.; /// \param UpdateExpr true if X is an in place update of the form; /// X = X BinOp Expr or X = Expr BinOp X; /// \param IsXBinopExpr true if X is Left H.S. in Right H.S. part of the; /// update expression, false otherwise.; /// (e.g. true for X = X BinOp Expr); /// \param IsPostfixUpdate true if original value of 'x' must be stored in; /// 'v', not an updated one.; ///; /// \return Insertion point after generated atomic capture IR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:16,update,update,16,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,11,"['Update', 'update']","['UpdateExpr', 'UpdateOp', 'update', 'updated']"
Deployability,"/// Emit atomic update for constructs: X = X BinOp Expr ,or X = Expr BinOp X; /// For complex Operations: X = UpdateOp(X) => CmpExch X, old_X, UpdateOp(X); /// Only Scalar data types.; ///; /// \param AllocaIP	 The insertion point to be used for alloca; /// instructions.; /// \param X			 The target atomic pointer to be updated; /// \param XElemTy The element type of the atomic pointer.; /// \param Expr		 The value to update X with.; /// \param AO			 Atomic ordering of the generated atomic; /// instructions.; /// \param RMWOp		 The binary operation used for update. If; /// operation is not supported by atomicRMW,; /// or belong to {FADD, FSUB, BAD_BINOP}.; /// Then a `cmpExch` based	atomic will be generated.; /// \param UpdateOp 	Code generator for complex expressions that cannot be; /// expressed through atomicrmw instruction.; /// \param VolatileX	 true if \a X volatile?; /// \param IsXBinopExpr true if \a X is Left H.S. in Right H.S. part of the; /// update expression, false otherwise.; /// (e.g. true for X = X BinOp Expr); ///; /// \returns A pair of the old value of X before the update, and the value; /// used for the update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:16,update,update,16,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,10,"['Update', 'update']","['UpdateOp', 'update', 'updated']"
Deployability,"/// Emit atomic update for constructs: X = X BinOp Expr ,or X = Expr BinOp X; /// For complex Operations: X = UpdateOp(X) => CmpExch X, old_X, UpdateOp(X); /// Only Scalar data types.; ///; /// \param Loc The insert and source location description.; /// \param AllocaIP The insertion point to be used for alloca instructions.; /// \param X The target atomic pointer to be updated; /// \param Expr The value to update X with.; /// \param AO Atomic ordering of the generated atomic instructions.; /// \param RMWOp The binary operation used for update. If operation; /// is	not supported by atomicRMW, or belong to; ///	 {FADD, FSUB, BAD_BINOP}. Then a `cmpExch` based; /// atomic will be generated.; /// \param UpdateOp 	Code generator for complex expressions that cannot be; /// expressed through atomicrmw instruction.; /// \param IsXBinopExpr true if \a X is Left H.S. in Right H.S. part of the; /// update expression, false otherwise.; ///	 (e.g. true for X = X BinOp Expr); ///; /// \return Insertion point after generated atomic update IR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:16,update,update,16,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,9,"['Update', 'update']","['UpdateOp', 'update', 'updated']"
Deployability,/// Emit diagnostics for the user for potential configuration errors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CrossTU/CrossTranslationUnit.h:48,configurat,configuration,48,interpreter/llvm-project/clang/include/clang/CrossTU/CrossTranslationUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CrossTU/CrossTranslationUnit.h,1,['configurat'],['configuration']
Deployability,/// Emit final update of reduction values to original variables at; /// the end of the directive.; ///; /// \param D Directive that has at least one 'reduction' directives.; /// \param ReductionKind The kind of reduction to perform.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:15,update,update,15,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['update'],['update']
Deployability,"/// Emit instructions for the leading candidate expression for this LSRUse (this; /// is called ""expanding""), and update the UserInst to reference the newly; /// expanded value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:114,update,update,114,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['update'],['update']
Deployability,/// Emit materialization code for all rebased constants and update their; /// users.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp:60,update,update,60,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp,1,['update'],['update']
Deployability,/// Emit proper patchable instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BTFDebug.cpp:16,patch,patchable,16,interpreter/llvm-project/llvm/lib/Target/BPF/BTFDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BTFDebug.cpp,1,['patch'],['patchable']
Deployability,"/// Emit the callsite info for each callsite.; ///; /// StkMapRecord[NumRecords] {; /// uint64 : PatchPoint ID; /// uint32 : Instruction Offset; /// uint16 : Reserved (record flags); /// uint16 : NumLocations; /// Location[NumLocations] {; /// uint8 : Register | Direct | Indirect | Constant | ConstantIndex; /// uint8 : Size in Bytes; /// uint16 : Dwarf RegNum; /// int32 : Offset; /// }; /// uint16 : Padding; /// uint16 : NumLiveOuts; /// LiveOuts[NumLiveOuts] {; /// uint16 : Dwarf RegNum; /// uint8 : Reserved; /// uint8 : Size in Bytes; /// }; /// uint32 : Padding (only if required to align to 8 byte); /// }; ///; /// Location Encoding, Type, Value:; /// 0x1, Register, Reg (value in register); /// 0x2, Direct, Reg + Offset (frame index); /// 0x3, Indirect, [Reg + Offset] (spilled value); /// 0x4, Constant, Offset (small constant); /// 0x5, ConstIndex, Constants[Offset] (large constant)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackMaps.cpp:97,Patch,PatchPoint,97,interpreter/llvm-project/llvm/lib/CodeGen/StackMaps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackMaps.cpp,1,['Patch'],['PatchPoint']
Deployability,/// Emit the callsite info for each stackmap/patchpoint intrinsic call.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h:45,patch,patchpoint,45,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,1,['patch'],['patchpoint']
Deployability,"/// Emit the data mapping/movement code associated with the directive; /// \a D that should be of the form 'target [{enter|exit} data | update]'.; /// \param D Directive to emit.; /// \param IfCond Expression evaluated in if clause associated with the target; /// directive, or null if no if clause is used.; /// \param Device Expression evaluated in device clause associated with the; /// target directive, or null if no device clause is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h:136,update,update,136,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,2,['update'],['update']
Deployability,/// Emit update for lastprivate conditional data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h:9,update,update,9,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,1,['update'],['update']
Deployability,/// Emits a warning if the current context is -dealloc and ReleasedValue; /// must not be directly released in a -dealloc. Returns true if a diagnostic; /// was emitted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:59,Release,ReleasedValue,59,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,2,"['Release', 'release']","['ReleasedValue', 'released']"
Deployability,/// Emits atomic update.; /// \param AO Atomic ordering.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp:17,update,update,17,interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,1,['update'],['update']
Deployability,/// Emits atomic update.; /// \param AO Atomic ordering.; /// \param UpdateOp Update operation for the current lvalue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp:17,update,update,17,interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,3,"['Update', 'update']","['Update', 'UpdateOp', 'update']"
Deployability,"/// Enable/Disable IR module verification.; ///; /// Note: Module verification is enabled by default in Debug builds, and; /// disabled by default in Release. Use this method to override the default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h:150,Release,Release,150,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,1,['Release'],['Release']
Deployability,"/// EnableDebugBuffering - This defaults to false. If true, the debug; /// stream will install signal handlers to dump any buffered debug; /// output. It allows clients to selectively allow the debug stream; /// to install signal handlers if they are certain there will be no; /// conflict.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Debug.h:87,install,install,87,interpreter/llvm-project/llvm/include/llvm/Support/Debug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Debug.h,2,['install'],['install']
Deployability,/// EnableDebugBuffering - Turn on signal handler installation.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Debug.cpp:50,install,installation,50,interpreter/llvm-project/llvm/lib/Support/Debug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Debug.cpp,1,['install'],['installation']
Deployability,/// Encapsulate information regarding vectorization of a loop and its epilogue.; /// This information is meant to be updated and used across two stages of; /// epilogue vectorization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:117,update,updated,117,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['updated']
Deployability,"/// Encode information on a single operation to perform on a byte; /// sequence (e.g., an encoded instruction) which requires assemble- or run-; /// time patching.; ///; /// Fixups are used any time the target instruction encoder needs to represent; /// some value in an instruction which is not yet concrete. The encoder will; /// encode the instruction assuming the value is 0, and emit a fixup which; /// communicates to the assembler backend how it should rewrite the encoded; /// value.; ///; /// During the process of relaxation, the assembler will apply fixups as; /// symbolic values become concrete. When relaxation is complete, any remaining; /// fixups become relocations in the object file (or errors, if the fixup cannot; /// be encoded on the target).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCFixup.h:154,patch,patching,154,interpreter/llvm-project/llvm/include/llvm/MC/MCFixup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCFixup.h,1,['patch'],['patching']
Deployability,"/// Ensure that all exit blocks of the loop are dedicated exits.; ///; /// For any loop exit block with non-loop predecessors, we split the loop; /// predecessors to use a dedicated loop exit block. We update the dominator; /// tree and loop info if provided, and will preserve LCSSA if requested.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h:202,update,update,202,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,1,['update'],['update']
Deployability,"/// Enumerate all sections, for each section apply all section patches.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:63,patch,patches,63,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['patch'],['patches']
Deployability,"/// Enumerate all sections, for each section set current offset; /// (kept by \p SectionSizesAccumulator), update current offset with section; /// length.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:107,update,update,107,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['update'],['update']
Deployability,/// Enumerates all patches and update them with the correct values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerImpl.h:19,patch,patches,19,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerImpl.h,2,"['patch', 'update']","['patches', 'update']"
Deployability,"/// Erase whole section content(data bits, list of patches).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:51,patch,patches,51,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['patch'],['patches']
Deployability,/// Error results for atomic update expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:29,update,update,29,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update']
Deployability,"/// Errors that actually prevent compilation, not those that are; /// upgraded from a warning by -Werror.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h:70,upgrade,upgraded,70,interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,1,['upgrade'],['upgraded']
Deployability,/// Evaluates `S` and updates `Env` accordingly.; ///; /// Requirements:; ///; /// `S` must not be `ParenExpr` or `ExprWithCleanups`.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Transfer.h:22,update,updates,22,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Transfer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Transfer.h,1,['update'],['updates']
Deployability,/// Evaluates the computation and (potentially) updates the accumulator \c; /// Result. \c Result is undefined in the case of an error. `Result` is an; /// out parameter to optimize case where the computation involves composing; /// the result of sub-computation evaluations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/MatchConsumer.h:48,update,updates,48,interpreter/llvm-project/clang/include/clang/Tooling/Transformer/MatchConsumer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/MatchConsumer.h,1,['update'],['updates']
Deployability,/// Examine the instruction for potentai LICM candidate. Also; /// gather register def and frame object update information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp:104,update,update,104,interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,1,['update'],['update']
Deployability,/// Exception specification updates that have been loaded but not yet; /// propagated across the relevant redeclaration chain. The map key is the; /// canonical declaration (used only for deduplication) and the value is a; /// declaration that has an exception specification.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:28,update,updates,28,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['update'],['updates']
Deployability,"/// Explicitly record a dependence from \p FromAA to \p ToAA, that is if; /// \p FromAA changes \p ToAA should be updated as well.; ///; /// This method should be used in conjunction with the `getAAFor` method and; /// with the DepClass enum passed to the method set to None. This can; /// be beneficial to avoid false dependences but it requires the users of; /// `getAAFor` to explicitly record true dependences through this method.; /// The \p DepClass flag indicates if the dependence is striclty necessary.; /// That means for required dependences, if \p FromAA changes to an invalid; /// state, \p ToAA can be moved to a pessimistic fixpoint because it required; /// information from \p FromAA but none are available anymore.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:114,update,updated,114,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['updated']
Deployability,/// Explicitly specialize the pass manager run method to handle call graph; /// updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:80,update,updates,80,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,1,['update'],['updates']
Deployability,/// Explicitly specialize the pass manager's run method to handle loop nest; /// structure updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp:91,update,updates,91,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp,1,['update'],['updates']
Deployability,/// Expressions for loop counters update for CodeGen.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:34,update,update,34,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['update'],['update']
Deployability,"/// Extract a 24-bit unsigned value from \a *offset_ptr and return it; /// in a uint32_t.; ///; /// Extract 3 bytes from the binary data at the offset pointed to by; /// \a offset_ptr, construct a uint32_t from them and update the offset; /// on success.; ///; /// @param[in,out] OffsetPtr; /// A pointer to an offset within the data that will be advanced; /// by the 3 bytes if the value is extracted correctly. If the offset; /// is out of bounds or there are not enough bytes to extract this value,; /// the offset will be left unmodified.; ///; /// @param[in,out] Err; /// A pointer to an Error object. Upon return the Error object is set to; /// indicate the result (success/failure) of the function. If the Error; /// object is already set when calling this function, no extraction is; /// performed.; ///; /// @return; /// The extracted 24-bit value represented in a uint32_t.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h:220,update,update,220,interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,1,['update'],['update']
Deployability,"/// Extract a C string from \a *offset_ptr.; ///; /// Returns a StringRef for the C String from the data at the offset; /// pointed to by \a offset_ptr. A variable length NULL terminated C; /// string will be extracted and the \a offset_ptr will be; /// updated with the offset of the byte that follows the NULL; /// terminator byte.; ///; /// \param[in,out] OffsetPtr; /// A pointer to an offset within the data that will be advanced; /// by the appropriate number of bytes if the value is extracted; /// correctly. If the offset is out of bounds or there are not; /// enough bytes to extract this value, the offset will be left; /// unmodified.; ///; /// @param[in,out] Err; /// A pointer to an Error object. Upon return the Error object is set to; /// indicate the result (success/failure) of the function. If the Error; /// object is already set when calling this function, no extraction is; /// performed.; ///; /// \return; /// A StringRef for the C string value in the data. If the offset; /// pointed to by \a offset_ptr is out of bounds, or if the; /// offset plus the length of the C string is out of bounds,; /// a default-initialized StringRef will be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h:254,update,updated,254,interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,1,['update'],['updated']
Deployability,"/// Extract a C string from \a *offset_ptr.; ///; /// Returns a pointer to a C String from the data at the offset; /// pointed to by \a offset_ptr. A variable length NULL terminated C; /// string will be extracted and the \a offset_ptr will be; /// updated with the offset of the byte that follows the NULL; /// terminator byte.; ///; /// @param[in,out] OffsetPtr; /// A pointer to an offset within the data that will be advanced; /// by the appropriate number of bytes if the value is extracted; /// correctly. If the offset is out of bounds or there are not; /// enough bytes to extract this value, the offset will be left; /// unmodified.; ///; /// @param[in,out] Err; /// A pointer to an Error object. Upon return the Error object is set to; /// indicate the result (success/failure) of the function. If the Error; /// object is already set when calling this function, no extraction is; /// performed.; ///; /// @return; /// A pointer to the C string value in the data. If the offset; /// pointed to by \a offset_ptr is out of bounds, or if the; /// offset plus the length of the C string is out of bounds,; /// NULL will be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h:249,update,updated,249,interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,1,['update'],['updated']
Deployability,"/// Extract a signed LEB128 value from \a *offset_ptr.; ///; /// Extracts an signed LEB128 number from this object's data; /// starting at the offset pointed to by \a offset_ptr. The offset; /// pointed to by \a offset_ptr will be updated with the offset of; /// the byte following the last extracted byte.; ///; /// @param[in,out] OffsetPtr; /// A pointer to an offset within the data that will be advanced; /// by the appropriate number of bytes if the value is extracted; /// correctly. If the offset is out of bounds or there are not; /// enough bytes to extract this value, the offset will be left; /// unmodified.; ///; /// @param[in,out] Err; /// A pointer to an Error object. Upon return the Error object is set to; /// indicate the result (success/failure) of the function. If the Error; /// object is already set when calling this function, no extraction is; /// performed.; ///; /// @return; /// The extracted signed integer value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h:231,update,updated,231,interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,1,['update'],['updated']
Deployability,"/// Extract a uint32_t value from \a *offset_ptr.; ///; /// Extract a single uint32_t from the binary data at the offset; /// pointed to by \a offset_ptr, and update the offset on success.; ///; /// @param[in,out] offset_ptr; /// A pointer to an offset within the data that will be advanced; /// by the appropriate number of bytes if the value is extracted; /// correctly. If the offset is out of bounds or there are not; /// enough bytes to extract this value, the offset will be left; /// unmodified.; ///; /// @param[in,out] Err; /// A pointer to an Error object. Upon return the Error object is set to; /// indicate the result (success/failure) of the function. If the Error; /// object is already set when calling this function, no extraction is; /// performed.; ///; /// @return; /// The extracted uint32_t value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h:159,update,update,159,interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,1,['update'],['update']
Deployability,"/// Extract a uint64_t value from \a *offset_ptr.; ///; /// Extract a single uint64_t from the binary data at the offset; /// pointed to by \a offset_ptr, and update the offset on success.; ///; /// @param[in,out] offset_ptr; /// A pointer to an offset within the data that will be advanced; /// by the appropriate number of bytes if the value is extracted; /// correctly. If the offset is out of bounds or there are not; /// enough bytes to extract this value, the offset will be left; /// unmodified.; ///; /// @param[in,out] Err; /// A pointer to an Error object. Upon return the Error object is set to; /// indicate the result (success/failure) of the function. If the Error; /// object is already set when calling this function, no extraction is; /// performed.; ///; /// @return; /// The extracted uint64_t value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h:159,update,update,159,interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,1,['update'],['update']
Deployability,"/// Extract a unsigned LEB128 value from \a *offset_ptr.; ///; /// Extracts an unsigned LEB128 number from this object's data; /// starting at the offset pointed to by \a offset_ptr. The offset; /// pointed to by \a offset_ptr will be updated with the offset of; /// the byte following the last extracted byte.; ///; /// @param[in,out] offset_ptr; /// A pointer to an offset within the data that will be advanced; /// by the appropriate number of bytes if the value is extracted; /// correctly. If the offset is out of bounds or there are not; /// enough bytes to extract this value, the offset will be left; /// unmodified.; ///; /// @param[in,out] Err; /// A pointer to an Error object. Upon return the Error object is set to; /// indicate the result (success/failure) of the function. If the Error; /// object is already set when calling this function, no extraction is; /// performed.; ///; /// @return; /// The extracted unsigned integer value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h:235,update,updated,235,interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,1,['update'],['updated']
Deployability,"/// Extract an signed integer of size \a byte_size from \a *offset_ptr.; ///; /// Extract a single signed integer value (sign extending if required); /// and update the offset pointed to by \a offset_ptr. The size of; /// the extracted integer is specified by the \a byte_size argument.; /// \a byte_size should have a value greater than or equal to one; /// and less than or equal to eight since the return value is 64; /// bits wide. Any \a byte_size values less than 1 or greater than; /// 8 will result in nothing being extracted, and zero being returned.; ///; /// @param[in,out] offset_ptr; /// A pointer to an offset within the data that will be advanced; /// by the appropriate number of bytes if the value is extracted; /// correctly. If the offset is out of bounds or there are not; /// enough bytes to extract this value, the offset will be left; /// unmodified.; ///; /// @param[in] size; /// The size in bytes of the integer to extract.; ///; /// @return; /// The sign extended signed integer value that was extracted,; /// or zero on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h:158,update,update,158,interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,1,['update'],['update']
Deployability,"/// Extract an unsigned integer of size \a byte_size from \a; /// *offset_ptr.; ///; /// Extract a single unsigned integer value and update the offset; /// pointed to by \a offset_ptr. The size of the extracted integer; /// is specified by the \a byte_size argument. \a byte_size should; /// have a value greater than or equal to one and less than or equal; /// to eight since the return value is 64 bits wide. Any; /// \a byte_size values less than 1 or greater than 8 will result in; /// nothing being extracted, and zero being returned.; ///; /// @param[in,out] offset_ptr; /// A pointer to an offset within the data that will be advanced; /// by the appropriate number of bytes if the value is extracted; /// correctly. If the offset is out of bounds or there are not; /// enough bytes to extract this value, the offset will be left; /// unmodified.; ///; /// @param[in] byte_size; /// The size in byte of the integer to extract.; ///; /// @param[in,out] Err; /// A pointer to an Error object. Upon return the Error object is set to; /// indicate the result (success/failure) of the function. If the Error; /// object is already set when calling this function, no extraction is; /// performed.; ///; /// @return; /// The unsigned integer value that was extracted, or zero on; /// failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h:133,update,update,133,interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataExtractor.h,1,['update'],['update']
Deployability,"/// Extract call from statepoint, lower it and return pointer to the; /// call node. Also update NodeMap so that getValue(statepoint) will; /// reference lowered call result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp:90,update,update,90,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,1,['update'],['update']
Deployability,/// FileChanged - Whenever the preprocessor enters or exits a #include file; /// it invokes this handler. Update our conception of the current source; /// position.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp:106,Update,Update,106,interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp,1,['Update'],['Update']
Deployability,"/// Find all globals in \p TheModule that are referenced in; /// \p AsmUndefinedRefs, as well as the user-supplied functions definitions that; /// are also libcalls, and create or update the magic ""llvm.compiler_used""; /// global in \p TheModule.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/UpdateCompilerUsed.h:180,update,update,180,interpreter/llvm-project/llvm/include/llvm/LTO/legacy/UpdateCompilerUsed.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/UpdateCompilerUsed.h,1,['update'],['update']
Deployability,/// Find hints specified in the loop metadata and update local values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h:50,update,update,50,interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,1,['update'],['update']
Deployability,"/// Find location of the object that is being constructed by a given; /// constructor. This should ideally always succeed but due to not being; /// fully implemented it sometimes indicates that it failed via its; /// out-parameter CallOpts; in such cases a fake temporary region is; /// returned, which is better than nothing but does not represent; /// the actual behavior of the program. The Idx parameter is used if we; /// construct an array of objects. In that case it points to the index; /// of the continuous memory region.; /// E.g.:; /// For `int arr[4]` this index can be 0,1,2,3.; /// For `int arr2[3][3]` this index can be 0,1,...,7,8.; /// A multi-dimensional array is also a continuous memory location in a; /// row major order, so for arr[0][0] Idx is 0 and for arr[2][2] Idx is 8.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h:506,continuous,continuous,506,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h,2,['continuous'],['continuous']
Deployability,/// Find the path to a SPACK package under the ROCm candidate installation; /// directory if the candidate is a SPACK ROCm candidate. \returns empty; /// string if the candidate is not SPACK ROCm candidate or the requested; /// package is not found.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h:62,install,installation,62,interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,1,['install'],['installation']
Deployability,"/// Finds the first cycle in which a resource can be allocated.; ///; /// The function uses the \param IntervalBuider [*] to build a; /// resource interval [a, b[ out of the input parameters \param; /// CurrCycle, \param AcquireAtCycle and \param ReleaseAtCycle.; ///; /// The function then loops through the intervals in the ResourceSegments; /// and shifts the interval [a, b[ and the ReturnCycle to the; /// right until there is no intersection between the intervals of; /// the \ref ResourceSegments instance and the new shifted [a, b[. When; /// this condition is met, the ReturnCycle (which; /// correspond to the cycle in which the resource can be; /// allocated) is returned.; ///; /// c = CurrCycle in input; /// c 1 2 3 4 5 6 7 8 9 10 ... ---> (time; /// flow); /// ResourceSegments... [---) [-------) [-----------); /// c [1 3[ -> AcquireAtCycle=1, ReleaseAtCycle=3; /// ++c [1 3); /// ++c [1 3); /// ++c [1 3); /// ++c [1 3); /// ++c [1 3) ---> returns c; /// incremented by 5 (c+5); ///; ///; /// Notice that for bottom-up scheduling the diagram is slightly; /// different because the current cycle c is always on the right; /// of the interval [a, b) (see \ref; /// `getResourceIntervalBottom`). This is because the cycle; /// increments for bottom-up scheduling moved in the direction; /// opposite to the direction of time:; ///; /// --------> direction of time.; /// XXYZZZ (resource usage); /// --------> direction of top-down execution cycles.; /// <-------- direction of bottom-up execution cycles.; ///; /// Even though bottom-up scheduling moves against the flow of; /// time, the algorithm used to find the first free slot in between; /// intervals is the same as for top-down scheduling.; ///; /// [*] See \ref `getResourceIntervalTop` and; /// \ref `getResourceIntervalBottom` to see how such resource intervals; /// are built.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:247,Release,ReleaseAtCycle,247,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,2,['Release'],['ReleaseAtCycle']
Deployability,"/// Finds the tokens that are consecutive (from the same FileID); /// creates a single SLocEntry, and assigns SourceLocations to each token that; /// point to that SLocEntry. e.g for; /// assert(foo == bar);; /// There will be a single SLocEntry for the ""foo == bar"" chunk and locations; /// for the 'foo', '==', 'bar' tokens will point inside that chunk.; ///; /// \arg begin_tokens will be updated to a position past all the found; /// consecutive tokens.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp:392,update,updated,392,interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,1,['update'],['updated']
Deployability,"/// Finish parsing a C++ unqualified-id that is a template-id of; /// some form.; ///; /// This routine is invoked when a '<' is encountered after an identifier or; /// operator-function-id is parsed by \c ParseUnqualifiedId() to determine; /// whether the unqualified-id is actually a template-id. This routine will; /// then parse the template arguments and form the appropriate template-id to; /// return to the caller.; ///; /// \param SS the nested-name-specifier that precedes this template-id, if; /// we're actually parsing a qualified-id.; ///; /// \param ObjectType if this unqualified-id occurs within a member access; /// expression, the type of the base object whose member is being accessed.; ///; /// \param ObjectHadErrors this unqualified-id occurs within a member access; /// expression, indicates whether the original subexpressions had any errors.; ///; /// \param Name for constructor and destructor names, this is the actual; /// identifier that may be a template-name.; ///; /// \param NameLoc the location of the class-name in a constructor or; /// destructor.; ///; /// \param EnteringContext whether we're entering the scope of the; /// nested-name-specifier.; ///; /// \param Id as input, describes the template-name or operator-function-id; /// that precedes the '<'. If template arguments were parsed successfully,; /// will be updated with the template-id.; ///; /// \param AssumeTemplateId When true, this routine will assume that the name; /// refers to a template without performing name lookup to verify.; ///; /// \returns true if a parse error occurred, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:1357,update,updated,1357,interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,1,['update'],['updated']
Deployability,"/// Finishes off the hash, and returns the 16-byte hash data.; /// This is suitable for getting the MD5 at any time without invalidating the; /// internal state, so that more calls can be made into `update`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MD5.h:199,update,update,199,interpreter/llvm-project/llvm/include/llvm/Support/MD5.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MD5.h,1,['update'],['update']
Deployability,/// First remove all the instructions of DelBB and then make sure DelBB has a; /// valid terminator instruction which is necessary to have when DelBB still; /// has to be inside of its parent Function while awaiting deletion under Lazy; /// UpdateStrategy to prevent other routines from asserting the state of the; /// IR is inconsistent. Assert if DelBB is nullptr or has predecessors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:241,Update,UpdateStrategy,241,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,1,['Update'],['UpdateStrategy']
Deployability,"/// First special line opcode - leave room for the standard opcodes.; /// Note: If you want to change this, you'll have to update the; /// ""StandardOpcodeLengths"" table that is emitted in; /// \c Emit().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCDwarf.h:123,update,update,123,interpreter/llvm-project/llvm/include/llvm/MC/MCDwarf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCDwarf.h,1,['update'],['update']
Deployability,"/// Fix the ordering, by either recomputing from scratch or by applying; /// any outstanding updates. Uses a heuristic to estimate what will be; /// cheaper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:93,update,updates,93,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['update'],['updates']
Deployability,"/// Fix-its that *must* be applied before inserting the text for the; /// corresponding completion.; ///; /// By default, CodeCompletionBuilder only returns completions with empty; /// fix-its. Extra completions with non-empty fix-its should be explicitly; /// requested by setting CompletionOptions::IncludeFixIts.; ///; /// For the clients to be able to compute position of the cursor after; /// applying fix-its, the following conditions are guaranteed to hold for; /// RemoveRange of the stored fix-its:; /// - Ranges in the fix-its are guaranteed to never contain the completion; /// point (or identifier under completion point, if any) inside them, except; /// at the start or at the end of the range.; /// - If a fix-it range starts or ends with completion point (or starts or; /// ends after the identifier under completion point), it will contain at; /// least one character. It allows to unambiguously recompute completion; /// point after applying the fix-it.; ///; /// The intuition is that provided fix-its change code around the identifier; /// we complete, but are not allowed to touch the identifier itself or the; /// completion point. One example of completions with corrections are the ones; /// replacing '.' with '->' and vice versa:; ///; /// std::unique_ptr<std::vector<int>> vec_ptr;; /// In 'vec_ptr.^', one of the completions is 'push_back', it requires; /// replacing '.' with '->'.; /// In 'vec_ptr->^', one of the completions is 'release', it requires; /// replacing '->' with '.'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/CodeCompleteConsumer.h:1459,release,release,1459,interpreter/llvm-project/clang/include/clang/Sema/CodeCompleteConsumer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/CodeCompleteConsumer.h,1,['release'],['release']
Deployability,"/// FixOverloadedFunctionReference - E is an expression that refers to; /// a C++ overloaded function (possibly with some parentheses and; /// perhaps a '&' around it). We have resolved the overloaded function; /// to the function declaration Fn, so patch up the expression E to; /// refer (possibly indirectly) to Fn. Returns the new expr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:250,patch,patch,250,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['patch'],['patch']
Deployability,"/// Fixable gadgets correspond to code patterns that aren't always unsafe but need to be; /// properly recognized in order to emit fixes. For example, if a raw pointer-type; /// variable is replaced by a safe C++ container, every use of such variable must be; /// carefully considered and possibly updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp:298,update,updated,298,interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,1,['update'],['updated']
Deployability,/// Fixpoint iteration update function. Will be called every time a dependence; /// changed its state (and in the beginning).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:23,update,update,23,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['update'],['update']
Deployability,"/// Fixup any string and file references by updating any file indexes and; /// strings offsets in the InlineInfo parameter.; ///; /// When copying InlineInfo entries, we can simply make a copy of the object; /// and then fixup the files and strings for efficiency.; ///; /// \param SrcGC The source gsym creator to copy from.; /// \param II The inline info that contains file indexes and string offsets; /// that come from \a SrcGC. The entries will be updated by coping any files; /// and strings over into this object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h:453,update,updated,453,interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h,1,['update'],['updated']
Deployability,/// Flush PostDomTree updates and return PostDomTree.; /// It flushes Deleted BBs if both trees are up-to-date.; /// It must only be called when it has a PostDomTree.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:22,update,updates,22,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,1,['update'],['updates']
Deployability,/// Flush the updater state to LR so it is valid and contains all added; /// segments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h:14,update,updater,14,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h,1,['update'],['updater']
Deployability,/// Fold the instructions after selecting them.; /// Returns null if users were already updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:88,update,updated,88,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['update'],['updated']
Deployability,/// Follow the chain of dead DomainValues until a live DomainValue is reached.; /// Update the referenced pointer when necessary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h:84,Update,Update,84,interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,1,['Update'],['Update']
Deployability,"/// Following functions update call site info. They should be called before; /// removing, replacing or copying call instruction.; /// Erase the call site info for \p MI. It is used to remove a call; /// instruction from the instruction stream.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h:24,update,update,24,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,1,['update'],['update']
Deployability,"/// For Win64 AArch64 EH, the offset to the Unwind object is from the SP; /// before the update. This is easily retrieved as it is exactly the offset; /// that is set in processFunctionBeforeFrameFinalized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:89,update,update,89,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['update'],['update']
Deployability,"/// For a patchpoint, stackmap, or statepoint intrinsic, return the range of; /// operands which can't be folded into stack references. Operands outside; /// of the range are most likely foldable but it is not guaranteed.; /// These instructions are unique in that stack references for some operands; /// have the same execution cost (e.g. none) as the unfolded register forms.; /// The ranged return is guaranteed to include all operands which can't be; /// folded at zero cost.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:10,patch,patchpoint,10,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['patch'],['patchpoint']
Deployability,"/// For a shared lock, wait until the owner releases the lock.; /// Total timeout for the file to appear is ~1.5 minutes.; /// \param MaxSeconds the maximum total wait time in seconds.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/LockFileManager.h:44,release,releases,44,interpreter/llvm-project/llvm/include/llvm/Support/LockFileManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/LockFileManager.h,1,['release'],['releases']
Deployability,"/// For a specific ThreadingPath \p Path, create an exit path starting from; /// the determinator block.; ///; /// To remember the correct destination, we have to duplicate blocks; /// corresponding to each state. Also update the terminating instruction of; /// the predecessors, and phis in the successor blocks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp:219,update,update,219,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,1,['update'],['update']
Deployability,"/// For consumptions, just emit the subexpression and thus elide; /// the retain/release pair.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:81,release,release,81,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['release'],['release']
Deployability,"/// For each alloca, keep an instance of a helper class that gives us an easy; /// way to update assignment tracking debug info if the alloca is promoted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp:90,update,update,90,interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,1,['update'],['update']
Deployability,"/// For each object containing debug info, installs JITLink passes to synthesize; /// a debug object and then register it via the GDB JIT-registration interface.; ///; /// Currently MachO only. For ELF use DebugObjectManagerPlugin. These two; /// plugins will be merged in the near future.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Debugging/DebuggerSupportPlugin.h:43,install,installs,43,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Debugging/DebuggerSupportPlugin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Debugging/DebuggerSupportPlugin.h,1,['install'],['installs']
Deployability,"/// For each store we execute, we update this map. Loads check this to get; /// the most up-to-date value. If evaluation is successful, this state is; /// committed to the process.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Evaluator.h:34,update,update,34,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Evaluator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Evaluator.h,1,['update'],['update']
Deployability,"/// For nullary selectors, immediately before the end:; /// ""[foo release]"" / ""-(void)release;""; /// Or immediately before the arguments:; /// ""[foo first:1 second:2]"" / ""-(id)first:(int)x second:(int)y;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/SelectorLocationsKind.h:66,release,release,66,interpreter/llvm-project/clang/include/clang/AST/SelectorLocationsKind.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/SelectorLocationsKind.h,2,['release'],['release']
Deployability,"/// For nullary selectors, immediately before the end:; /// ""[foo release]"" / ""-(void)release;""; /// Or with a space between the arguments:; /// ""[foo first: 1 second: 2]"" / ""-(id)first: (int)x second: (int)y;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/SelectorLocationsKind.h:66,release,release,66,interpreter/llvm-project/clang/include/clang/AST/SelectorLocationsKind.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/SelectorLocationsKind.h,2,['release'],['release']
Deployability,"/// Force RooRealIntegral to offer all observables for internal integration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAddPdf.h:64,integrat,integration,64,roofit/roofitcore/inc/RooAddPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAddPdf.h,1,['integrat'],['integration']
Deployability,"/// Force disabling MT running and release the thread pool by using instead seriaql execution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h:35,release,release,35,tmva/tmva/inc/TMVA/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h,1,['release'],['release']
Deployability,/// Force files Atime to be updated on access. Only makes a difference on; /// Windows.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h:28,update,updated,28,interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h,1,['update'],['updated']
Deployability,/// Forcibly set this pointer (which must be lazy) as needing updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTSource.h:62,update,updates,62,interpreter/llvm-project/clang/include/clang/AST/ExternalASTSource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTSource.h,1,['update'],['updates']
Deployability,"/// FormTokenWithChars - When we lex a token, we have identified a span; /// starting at BufferPtr, going to TokEnd that forms the token. This method; /// takes that range and assigns it to the token as its location and size. In; /// addition, since tokens cannot overlap, this also updates BufferPtr to be; /// TokEnd.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h:283,update,updates,283,interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,1,['update'],['updates']
Deployability,"/// Forward determination of analytical integration capabilities to input p.d.f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooExtendPdf.h:40,integrat,integration,40,roofit/roofitcore/inc/RooExtendPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooExtendPdf.h,2,['integrat'],['integration']
Deployability,/// Forward to `HasherT::update(ArrayRef<uint8_t>)`.; ///; /// This may not take the size of `Data` into account.; /// Users of this function should pay attention to respect endianness; /// contraints.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h:25,update,update,25,interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,2,['update'],['update']
Deployability,/// Freeze the ToFreeze and update the use in \p User to use it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp:28,update,update,28,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,1,['update'],['update']
Deployability,"/// FreshBBs is like worklist, it collected the updated BBs which need; /// to be optimized again.; /// Note: Consider building time in this pass, when a BB updated, we need; /// to insert such BB into FreshBBs for huge function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:48,update,updated,48,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,2,['update'],['updated']
Deployability,/// Function called if fast enumeration detects that the collection is; /// modified during the update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:96,update,update,96,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,1,['update'],['update']
Deployability,/// Function called when exiting an \@synchronize block. Releases the lock.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:57,Release,Releases,57,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,1,['Release'],['Releases']
Deployability,"/// Function to find current Python executable; /// used by ROOT; /// If ""Python3"" is installed, return ""python3""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/PyMethodBase.h:86,install,installed,86,tmva/pymva/inc/TMVA/PyMethodBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/PyMethodBase.h,1,['install'],['installed']
Deployability,"/// Function type for signals, invoked when canvas drawing or update is completed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h:62,update,update,62,gui/webgui6/inc/TWebCanvas.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h,1,['update'],['update']
Deployability,"/// Functions that attempt to perform the combining. They detect if that is; /// legal, and if so they update the inputs \a Inputs and the offload action; /// that were collapsed in \a CollapsedOffloadAction. A tool that deals with; /// the combined action is returned. If the combining is not legal or if the; /// tool does not exist, null is returned.; /// Currently three kinds of collapsing are supported:; /// - Assemble + Backend + Compile;; /// - Assemble + Backend ;; /// - Backend + Compile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:103,update,update,103,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['update'],['update']
Deployability,"/// Functions used to generate atomic reductions. Such functions take two; /// Values representing pointers to LHS and RHS of the reduction, as well as; /// the element type of these pointers. They are expected to atomically; /// update the LHS to the reduced value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:230,update,update,230,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['update'],['update']
Deployability,"/// Functions used to generate reductions. Such functions take two Values; /// representing LHS and RHS of the reduction, respectively, and a reference; /// to the value that is updated to refer to the reduction result.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:178,update,updated,178,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['update'],['updated']
Deployability,"/// Fuse two fusion candidates, creating a new fused loop.; ///; /// This method contains the mechanics of fusing two loops, represented by \p; /// FC0 and \p FC1. It is assumed that \p FC0 dominates \p FC1 and \p FC1; /// postdominates \p FC0 (making them control flow equivalent). It also; /// assumes that the other conditions for fusion have been met: adjacent,; /// identical trip counts, and no negative distance dependencies exist that; /// would prevent fusion. Thus, there is no checking for these conditions in; /// this method.; ///; /// Fusion is performed by rewiring the CFG to update successor blocks of the; /// components of tho loop. Specifically, the following changes are done:; ///; /// 1. The preheader of \p FC1 is removed as it is no longer necessary; /// (because it is currently only a single statement block).; /// 2. The latch of \p FC0 is modified to jump to the header of \p FC1.; /// 3. The latch of \p FC1 i modified to jump to the header of \p FC0.; /// 4. All blocks from \p FC1 are removed from FC1 and added to FC0.; ///; /// All of these modifications are done with dominator tree updates, thus; /// keeping the dominator (and post dominator) information up-to-date.; ///; /// This can be improved in the future by actually merging blocks during; /// fusion. For example, the preheader of \p FC1 can be merged with the; /// preheader of \p FC0. This would allow loops with more than a single; /// statement in the preheader to be fused. Similarly, the latch blocks of the; /// two loops could also be fused into a single block. This will require; /// analysis to prove it is safe to move the contents of the block past; /// existing code, which currently has not been implemented.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:592,update,update,592,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,2,['update'],"['update', 'updates']"
Deployability,"/// Fuse two guarded fusion candidates, creating a new fused loop.; ///; /// Fusing guarded loops is handled much the same way as fusing non-guarded; /// loops. The rewiring of the CFG is slightly different though, because of; /// the presence of the guards around the loops and the exit blocks after the; /// loop body. As such, the new loop is rewired as follows:; /// 1. Keep the guard branch from FC0 and use the non-loop block target; /// from the FC1 guard branch.; /// 2. Remove the exit block from FC0 (this exit block should be empty; /// right now).; /// 3. Remove the guard branch for FC1; /// 4. Remove the preheader for FC1.; /// The exit block successor for the latch of FC0 is updated to be the header; /// of FC1 and the non-exit block successor of the latch of FC1 is updated to; /// be the header of FC0, thus creating the fused loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:692,update,updated,692,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,2,['update'],['updated']
Deployability,"/// GPRC, CHAIN = MFBHRBE CHAIN, Entry, Dummy - Move from branch; /// history rolling buffer entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h:78,rolling,rolling,78,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,1,['rolling'],['rolling']
Deployability,/// Generate Phis for the specific block in the generated pipelined code.; /// This function looks at the Phis from the original code to guide the; /// creation of new Phis.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:58,pipeline,pipelined,58,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['pipeline'],['pipelined']
Deployability,/// Generate Phis for the specified block in the generated pipelined code.; /// These are new Phis needed because the definition is scheduled after the; /// use in the pipelined sequence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:59,pipeline,pipelined,59,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,2,['pipeline'],['pipelined']
Deployability,/// Generate a stackmap record for a patchpoint instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h:37,patch,patchpoint,37,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,1,['patch'],['patchpoint']
Deployability,"/// Generate a stackmap record for a stackmap instruction.; ///; /// MI must be a raw STACKMAP, not a PATCHPOINT.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h:102,PATCH,PATCHPOINT,102,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,1,['PATCH'],['PATCHPOINT']
Deployability,/// Generate code to get an argument from the passed in pointer; /// and update it accordingly.; /// \param VE The \c VAArgExpr for which to generate code.; /// \param VAListAddr Receives a reference to the \c va_list as emitted by; /// either \c EmitVAListRef or \c EmitMSVAListRef.; /// \returns A pointer to the argument.; // FIXME: We should be able to get rid of this method and use the va_arg; // instruction in LLVM instead once it works well enough.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:73,update,update,73,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['update'],['update']
Deployability,/// Generate the pipeline epilog code. The epilog code finishes the iterations; /// that were started in either the prolog or the kernel. We create a basic; /// block for each stage that needs to complete.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:17,pipeline,pipeline,17,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['pipeline'],['pipeline']
Deployability,/// Generate the pipeline prolog code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:17,pipeline,pipeline,17,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['pipeline'],['pipeline']
Deployability,"/// Generates an object of the field type and allocates new initialized memory according to the type.; /// Implemented at the end of this header because the implementation is using RField<T>::TypeName(); /// The returned object can be released with `delete`, i.e. it is valid to call; /// auto ptr = field->CreateObject();; /// delete ptr.release();; ///; /// Note that CreateObject<void> is supported. The returned unique_ptr has a custom deleter that reports an error; /// if it is called. The intended use of the returned unique_ptr<void> is to call `release()`. In this way, the; /// transfer of pointer ownership is explicit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx:235,release,released,235,tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,3,['release'],"['release', 'released']"
Deployability,"/// Generates code to check that this instruction is a constant whose value; /// meets an immediate predicate.; ///; /// Immediates are slightly odd since they are typically used like an operand; /// but are represented as an operator internally. We typically write simm8:$src; /// in a tablegen pattern, but this is just syntactic sugar for; /// (imm:i32)<<P:Predicate_simm8>>:$imm which more directly describes the nodes; /// that will be matched and the predicate (which is attached to the imm; /// operator) that will be tested. In SelectionDAG this describes a; /// ConstantSDNode whose internal value will be tested using the simm8; /// predicate.; ///; /// The corresponding GlobalISel representation is %1 = G_CONSTANT iN Value. In; /// this representation, the immediate could be tested with an; /// InstructionMatcher, InstructionOpcodeMatcher, OperandMatcher, and a; /// OperandPredicateMatcher-subclass to check the Value meets the predicate but; /// there are two implementation issues with producing that matcher; /// configuration from the SelectionDAG pattern:; /// * ImmLeaf is a PatFrag whose root is an InstructionMatcher. This means that; /// were we to sink the immediate predicate to the operand we would have to; /// have two partial implementations of PatFrag support, one for immediates; /// and one for non-immediates.; /// * At the point we handle the predicate, the OperandMatcher hasn't been; /// created yet. If we were to sink the predicate to the OperandMatcher we; /// would also have to complicate (or duplicate) the code that descends and; /// creates matchers for the subtree.; /// Overall, it's simpler to handle it in the place it was found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelMatchTable.h:1032,configurat,configuration,1032,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelMatchTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelMatchTable.h,1,['configurat'],['configuration']
Deployability,"/// Generic helper that updates a postorder sequence of SCCs for a potentially; /// cycle-introducing edge insertion.; ///; /// A postorder sequence of SCCs of a directed graph has one fundamental; /// property: all deges in the DAG of SCCs point ""up"" the sequence. That is,; /// all edges in the SCC DAG point to prior SCCs in the sequence.; ///; /// This routine both updates a postorder sequence and uses that sequence to; /// compute the set of SCCs connected into a cycle. It should only be called to; /// insert a ""downward"" edge which will require changing the sequence to; /// restore it to a postorder.; ///; /// When inserting an edge from an earlier SCC to a later SCC in some postorder; /// sequence, all of the SCCs which may be impacted are in the closed range of; /// those two within the postorder sequence. The algorithm used here to restore; /// the state is as follows:; ///; /// 1) Starting from the source SCC, construct a set of SCCs which reach the; /// source SCC consisting of just the source SCC. Then scan toward the; /// target SCC in postorder and for each SCC, if it has an edge to an SCC; /// in the set, add it to the set. Otherwise, the source SCC is not; /// a successor, move it in the postorder sequence to immediately before; /// the source SCC, shifting the source SCC and all SCCs in the set one; /// position toward the target SCC. Stop scanning after processing the; /// target SCC.; /// 2) If the source SCC is now past the target SCC in the postorder sequence,; /// and thus the new edge will flow toward the start, we are done.; /// 3) Otherwise, starting from the target SCC, walk all edges which reach an; /// SCC between the source and the target, and add them to the set of; /// connected SCCs, then recurse through them. Once a complete set of the; /// SCCs the target connects to is known, hoist the remaining SCCs between; /// the source and the target to be above the target. Note that there is no; /// need to process the source SCC, it is already ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp:24,update,updates,24,interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,2,['update'],['updates']
Deployability,"/// Get B histo integration extremes to obtain the requested area fraction; /// call delete [] res to release memory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HybridPlot.h:16,integrat,integration,16,roofit/roostats/inc/RooStats/HybridPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HybridPlot.h,2,"['integrat', 'release']","['integration', 'release']"
Deployability,/// Get GEP indices to access Offset inside ElemTy. ElemTy is updated to be; /// the result element type and Offset to be the residual offset.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h:62,update,updated,62,interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h,1,['update'],['updated']
Deployability,"/// Get SB histo integration extremes to obtain the requested area fraction; /// call delete [] res to release memory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HybridPlot.h:17,integrat,integration,17,roofit/roostats/inc/RooStats/HybridPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HybridPlot.h,2,"['integrat', 'release']","['integration', 'release']"
Deployability,/// Get Windows SDK installation directory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCPaths.h:20,install,installation,20,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCPaths.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCPaths.h,1,['install'],['installation']
Deployability,"/// Get a `RNTupleModel::RUpdater` that provides limited support for incremental updates to the underlying; /// model, e.g. addition of new fields.; ///; /// **Example: add a new field after the model has been used to construct a `RNTupleWriter` object**; /// ~~~ {.cpp}; /// #include <ROOT/RNTuple.hxx>; /// using ROOT::Experimental::RNTupleModel;; /// using ROOT::Experimental::RNTupleWriter;; ///; /// auto model = RNTupleModel::Create();; /// auto fldFloat = model->MakeField<float>(""fldFloat"");; /// auto writer = RNTupleWriter::Recreate(std::move(model), ""myNTuple"", ""some/file.root"");; /// auto updater = writer->CreateModelUpdater();; /// updater->BeginUpdate();; /// updater->AddField(std::make_unique<RField<float>>(""pt""));; /// updater->CommitUpdate();; ///; /// // ...; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleWriter.hxx:81,update,updates,81,tree/ntuple/v7/inc/ROOT/RNTupleWriter.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleWriter.hxx,5,['update'],"['updater', 'updates']"
Deployability,"/// Get a direct memory input to behave well as an indirect operand.; /// This may introduce stores, hence the need for a \p Chain.; /// \return The (possibly updated) chain.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:159,update,updated,159,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['update'],['updated']
Deployability,"/// Get a pointer to an object of type T from the underlying stream, as if by; /// memcpy, and store the result into \p Dest. It is up to the caller to; /// ensure that objects of type T can be safely treated in this manner.; /// Updates the stream's offset to point after the newly read object. Whether; /// a copy occurs depends upon the implementation of the underlying; /// stream.; ///; /// \returns a success error code if the data was successfully read, otherwise; /// returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h:230,Update,Updates,230,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,1,['Update'],['Updates']
Deployability,"/// Get a reference to a \p NumElements element array of objects of type T; /// from the underlying stream as if by memcpy, and store the resulting array; /// slice into \p array. It is up to the caller to ensure that objects of; /// type T can be safely treated in this manner. Updates the stream's offset; /// to point after the newly read object. Whether a copy occurs depends upon; /// the implementation of the underlying stream.; ///; /// \returns a success error code if the data was successfully read, otherwise; /// returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h:279,Update,Updates,279,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,1,['Update'],['Updates']
Deployability,/// Get index of Num Patch Bytes operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h:21,Patch,Patch,21,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,1,['Patch'],['Patch']
Deployability,/// Get post-update expression for the clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:13,update,update,13,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,2,['update'],['update']
Deployability,"/// Get reference to Fit configuration (NOTE: it will be invalid when class is deleted)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TBackCompFitter.h:25,configurat,configuration,25,hist/hist/inc/TBackCompFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TBackCompFitter.h,1,['configurat'],['configuration']
Deployability,"/// Get single GEP index to access Offset inside ElemTy. Returns std::nullopt; /// if index cannot be computed, e.g. because the type is not an aggregate.; /// ElemTy is updated to be the result element type and Offset to be the; /// residual offset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h:170,update,updated,170,interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h,1,['update'],['updated']
Deployability,"/// Get the ""effective sigmas"" of the histo, call delete [] res to release memory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HybridPlot.h:67,release,release,67,roofit/roostats/inc/RooStats/HybridPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HybridPlot.h,1,['release'],['release']
Deployability,"/// Get the ""standard"" location of a selector identifier, e.g:; /// For nullary selectors, immediately before ']': ""[foo release]""; ///; /// \param WithArgSpace if true the standard location is with a space apart; /// before arguments: ""-(id)first: (int)x second: (int)y;""; /// If false: ""-(id)first:(int)x second:(int)y;""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/SelectorLocationsKind.h:121,release,release,121,interpreter/llvm-project/clang/include/clang/AST/SelectorLocationsKind.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/SelectorLocationsKind.h,1,['release'],['release']
Deployability,"/// Get the ""standard"" location of a selector identifier, e.g:; /// For nullary selectors, immediately before ']': ""[foo release]""; ///; /// \param WithArgSpace if true the standard location is with a space apart; /// before arguments: ""[foo first: 1 second: 2]""; /// If false: ""[foo first:1 second:2]""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/SelectorLocationsKind.h:121,release,release,121,interpreter/llvm-project/clang/include/clang/AST/SelectorLocationsKind.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/SelectorLocationsKind.h,1,['release'],['release']
Deployability,/// Get the GCC triple for the detected install.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h:40,install,install,40,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,1,['install'],['install']
Deployability,/// Get the detected Cuda install's version.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h:26,install,install,26,interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h,1,['install'],['install']
Deployability,/// Get the detected Cuda installation path.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h:26,install,installation,26,interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h,1,['install'],['installation']
Deployability,"/// Get the detected GCC installation path suffix for the multi-arch; /// target variant. Always starts with a '/', unless empty",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Multilib.h:25,install,installation,25,interpreter/llvm-project/clang/include/clang/Driver/Multilib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Multilib.h,2,['install'],['installation']
Deployability,/// Get the detected GCC installation path.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h:25,install,installation,25,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,1,['install'],['installation']
Deployability,/// Get the detected Rocm install's version.; // RocmVersion version() const { return Version; }; /// Get the detected Rocm installation path.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h:26,install,install,26,interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,2,['install'],"['install', 'installation']"
Deployability,"/// Get the directory where installed packages should put their; /// machine-local cache, e.g. $XDG_CACHE_HOME.; ///; /// @param result Holds the resulting path name.; /// @result True if the appropriate path was determined, it need not exist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Path.h:28,install,installed,28,interpreter/llvm-project/llvm/include/llvm/Support/Path.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Path.h,1,['install'],['installed']
Deployability,"/// Get the directory where packages should read user-specific configurations.; /// e.g. $XDG_CONFIG_HOME.; ///; /// @param result Holds the resulting path name.; /// @result True if the appropriate path was determined, it need not exist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Path.h:63,configurat,configurations,63,interpreter/llvm-project/llvm/include/llvm/Support/Path.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Path.h,1,['configurat'],['configurations']
Deployability,/// Get the final counter updates storage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:26,update,updates,26,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['update'],['updates']
Deployability,/// Get the identifier resolver used for name lookup / updates; /// in the translation unit scope. We have one of these even if we don't; /// have a Sema object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:55,update,updates,55,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['update'],['updates']
Deployability,/// Get the install name of the library.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h:12,install,install,12,interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,1,['install'],['install']
Deployability,/// Get the instruction that updates the loop induction variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:29,update,updates,29,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h,1,['update'],['updates']
Deployability,/// Get the list of Parent Umbrella frameworks.; ///; /// \return Returns a list of target information and install name of parent; /// umbrellas.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h:107,install,install,107,interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,1,['install'],['install']
Deployability,"/// Get the mapping of the different operands of \p MI; /// on the register bank.; /// This mapping should be the direct translation of \p MI.; /// In other words, when \p MI is mapped with the returned mapping,; /// only the register banks of the operands of \p MI need to be updated.; /// In particular, neither the opcode nor the type of \p MI needs to be; /// updated for this direct mapping.; ///; /// The target independent implementation gives a mapping based on; /// the register classes for the target specific opcode.; /// It uses the ID RegisterBankInfo::DefaultMappingID for that mapping.; /// Make sure you do not use that ID for the alternative mapping; /// for MI. See getInstrAlternativeMappings for the alternative; /// mappings.; ///; /// For instance, if \p MI is a vector add, the mapping should; /// not be a scalarization of the add.; ///; /// \post returnedVal.verify(MI).; ///; /// \note If returnedVal does not verify MI, this would probably mean; /// that the target does not support that instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterBankInfo.h:277,update,updated,277,interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterBankInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterBankInfo.h,2,['update'],['updated']
Deployability,"/// Get the offset of the bit range covered by a sub-register index.; /// If an Offset doesn't make sense (the index isn't continuous, or is used to; /// access sub-registers at different offsets), return -1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCRegisterInfo.h:123,continuous,continuous,123,interpreter/llvm-project/llvm/include/llvm/MC/MCRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCRegisterInfo.h,1,['continuous'],['continuous']
Deployability,/// Get the patchpoint/stackmap ID for this record.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/StackMapParser.h:12,patch,patchpoint,12,interpreter/llvm-project/llvm/include/llvm/Object/StackMapParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/StackMapParser.h,1,['patch'],['patchpoint']
Deployability,/// Get the path to where the clang executable was installed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:51,install,installed,51,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['install'],['installed']
Deployability,"/// Get the size of the bit range covered by a sub-register index.; /// If the index isn't continuous, return the sum of the sizes of its parts.; /// If the index is used to access subregisters of different sizes, return -1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCRegisterInfo.h:91,continuous,continuous,91,interpreter/llvm-project/llvm/include/llvm/MC/MCRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCRegisterInfo.h,1,['continuous'],['continuous']
Deployability,"/// Get the statistics. This can be used to look up the value of; /// statistics without needing to parse JSON.; ///; /// This function does not prevent statistics being updated by other threads; /// during it's execution. It will return the value at the point that it is; /// read. However, it will prevent new statistics from registering until it; /// completes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h:170,update,updated,170,interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h,1,['update'],['updated']
Deployability,/// Get the step that the loop induction variable gets updated by in each; /// loop iteration. Return nullptr if not found.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:55,update,updated,55,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h,1,['update'],['updated']
Deployability,/// Get the updates storage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:12,update,updates,12,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,2,['update'],['updates']
Deployability,/// Get this TBAAStructTypeNode's field in the type DAG with; /// given offset. Update the offset to be relative to the field type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp:80,Update,Update,80,interpreter/llvm-project/llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp,1,['Update'],['Update']
Deployability,/// GetInstrType - Classify the specified powerpc opcode according to its; /// pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.h:79,pipeline,pipeline,79,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.h,1,['pipeline'],['pipeline']
Deployability,"/// Gets called after attributes have been manifested, cleans up the IR.; /// Deletes dead functions, blocks and instructions.; /// Rewrites function signitures and updates the call graph.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:165,update,updates,165,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['updates']
Deployability,/// Gets configuration in a YAML string.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:9,configurat,configuration,9,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['configurat'],['configuration']
Deployability,"/// Gets the address of the global copy used for lastprivate conditional; /// update, if any.; /// \param PrivLVal LValue for the private copy.; /// \param VD Original lastprivate declaration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h:78,update,update,78,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,1,['update'],['update']
Deployability,"/// Gets the list of initial values for linear variables.; ///; /// There are NumVars expressions with initial values allocated after the; /// varlist, they are followed by NumVars update expressions (used to update; /// the linear variable's value on current iteration) and they are followed by; /// NumVars final expressions (used to calculate the linear variable's; /// value after the loop body). After these lists, there are 2 helper; /// expressions - linear step and a helper to calculate it before the; /// loop body (used when the linear step is not constant):; ///; /// { Vars[] /* in OMPVarListClause */; Privates[]; Inits[]; Updates[];; /// Finals[]; Step; CalcStep; }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:181,update,update,181,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,3,"['Update', 'update']","['Updates', 'update']"
Deployability,/// Gets the size and alignment of a field taking pragma pack and; /// __declspec(align) into account. It also updates RequiredAlignment as a; /// side effect because it is most convenient to do so here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:111,update,updates,111,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['update'],['updates']
Deployability,"/// Getter function without integration set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCacheManager.h:28,integrat,integration,28,roofit/roofitcore/inc/RooCacheManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCacheManager.h,1,['integrat'],['integration']
Deployability,"/// Given a DIE, update its incompleteness based on whether its children are; /// incomplete.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h:17,update,update,17,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,1,['update'],['update']
Deployability,"/// Given a DIE, update its incompleteness based on whether the DIEs it; /// references are incomplete.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h:17,update,update,17,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,1,['update'],['update']
Deployability,/// Given a \p Def clobbering a load from \p Ptr according to the MSSA check; /// if this is actually a memory update or an artificial clobber to facilitate; /// ordering constraints.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUMemoryUtils.h:111,update,update,111,interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUMemoryUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUMemoryUtils.h,1,['update'],['update']
Deployability,"/// Given a basic block \p Successor that potentially contains PHIs, this; /// function will look for any incoming values in the PHIs that are supposed to; /// be coming from \p OrigMBB but whose definition is actually in \p NewMBB.; /// Any such PHIs will be updated to reflect reality.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp:260,update,updated,260,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp,1,['update'],['updated']
Deployability,"/// Given a group ID, returns the flag that toggles the group.; /// For example, for ""deprecated-declarations"", returns; /// Group::DeprecatedDeclarations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h:44,toggle,toggles,44,interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h,1,['toggle'],['toggles']
Deployability,"/// Given a group ID, returns the flag that toggles the group.; /// For example, for Group::DeprecatedDeclarations, returns; /// ""deprecated-declarations"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h:44,toggle,toggles,44,interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h,1,['toggle'],['toggles']
Deployability,"/// Given a list of merge types, try to merge two chains and update Gain; /// with a better alternative.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp:61,update,update,61,interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp,1,['update'],['update']
Deployability,"/// Given a merge offset and a list of merge types, try to merge two chains; /// and update Gain with a better alternative.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp:85,update,update,85,interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp,1,['update'],['update']
Deployability,"/// Given a select instruction that was understood by; /// analyzeSelect and returned Optimizable = true, attempt to optimize MI by; /// merging it with one of its operands. Returns NULL on failure.; ///; /// When successful, returns the new select instruction. The client is; /// responsible for deleting MI.; ///; /// If both sides of the select can be optimized, PreferFalse is used to pick; /// a side.; ///; /// @param MI Optimizable select instruction.; /// @param NewMIs Set that record all MIs in the basic block up to \p; /// MI. Has to be updated with any newly created MI or deleted ones.; /// @param PreferFalse Try to optimize FalseOp instead of TrueOp.; /// @returns Optimized instruction or NULL.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:549,update,updated,549,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['update'],['updated']
Deployability,"/// Given a set of incoming and outgoing blocks, create a ""hub"" such that every; /// edge from an incoming block InBB to an outgoing block OutBB is now split; /// into two edges, one from InBB to the hub and another from the hub to; /// OutBB. The hub consists of a series of guard blocks, one for each outgoing; /// block. Each guard block conditionally branches to the corresponding outgoing; /// block, or the next guard block in the chain. These guard blocks are returned; /// in the argument vector.; ///; /// Since the control flow edges from InBB to OutBB have now been replaced, the; /// function also updates any PHINodes in OutBB. For each such PHINode, the; /// operands corresponding to incoming blocks are moved to a new PHINode in the; /// hub, and the hub is made an operand of the original PHINode.; ///; /// Input CFG:; /// ----------; ///; /// Def; /// |; /// v; /// In1 In2; /// | |; /// | |; /// v v; /// Foo ---> Out1 Out2; /// |; /// v; /// Use; ///; ///; /// Create hub: Incoming = {In1, In2}, Outgoing = {Out1, Out2}; /// ----------------------------------------------------------; ///; /// Def; /// |; /// v; /// In1 In2 Foo; /// | Hub | |; /// | + - - | - - + |; /// | ' v ' V; /// +------> Guard1 -----> Out1; /// ' | '; /// ' v '; /// ' Guard2 -----> Out2; /// ' ' |; /// + - - - - - + |; /// v; /// Use; ///; /// Limitations:; /// -----------; /// 1. This assumes that all terminators in the CFG are direct branches (the; /// ""br"" instruction). The presence of any other control flow such as; /// indirectbr, switch or callbr will cause an assert.; ///; /// 2. The updates to the PHINodes are not sufficient to restore SSA; /// form. Consider a definition Def, its use Use, incoming block In2 and; /// outgoing block Out2, such that:; /// a. In2 is reachable from D or contains D.; /// b. U is reachable from Out2 or is contained in Out2.; /// c. U is not a PHINode if U is contained in Out2.; ///; /// Clearly, Def dominates Out2 since the program is valid SSA. But when ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:610,update,updates,610,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,1,['update'],['updates']
Deployability,"/// Given an annotation pointer for a nested-name-specifier, restore; /// the nested-name-specifier structure.; ///; /// \param Annotation The annotation pointer, produced by; /// \c SaveNestedNameSpecifierAnnotation().; ///; /// \param AnnotationRange The source range corresponding to the annotation.; ///; /// \param SS The nested-name-specifier that will be updated with the contents; /// of the annotation pointer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:362,update,updated,362,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['update'],['updated']
Deployability,"/// Given an instruction or constant expr, see if we can fold the operation; /// into the addressing mode. If so, update the addressing mode and return; /// true, otherwise return false without modifying AddrMode.; /// If \p MovedAway is not NULL, it contains the information of whether or; /// not AddrInst has to be folded into the addressing mode on success.; /// If \p MovedAway == true, \p AddrInst will not be part of the addressing; /// because it has been moved away.; /// Thus AddrInst must not be added in the matched instructions.; /// This state can happen when AddrInst is a sext, since it may be moved away.; /// Therefore, AddrInst may not be valid when MovedAway is true and it must; /// not be referenced anymore.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:114,update,update,114,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['update'],['update']
Deployability,"/// Given an updated version of the dataflow liveness results, update the; /// liveset and base pointer maps for the call site CS.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp:13,update,updated,13,interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,2,['update'],"['update', 'updated']"
Deployability,"/// Given that this builder was created by beginning an array or struct; /// directly on a ConstantInitBuilder, finish the array/struct and; /// return a future which can be used to install the initializer in; /// a global later.; ///; /// This is useful for allowing a finished initializer to passed to; /// an API which will build the global. However, the ""future"" preserves; /// a dependency on the original builder; it is an error to pass it aside.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/ConstantInitBuilder.h:182,install,install,182,interpreter/llvm-project/clang/include/clang/CodeGen/ConstantInitBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/ConstantInitBuilder.h,1,['install'],['install']
Deployability,"/// Given the common symbols discovered in the object file, emit a; /// new section for them and update the symbol mappings in the object and; /// symbol table.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h:97,update,update,97,interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h,1,['update'],['update']
Deployability,"/// Given the language and code-generation options that Clang was configured; /// with, set the default LLVM IR attributes for a function definition.; /// The attributes set here are mostly global target-configuration and; /// pipeline-configuration options like the target CPU, variant stack; /// rules, whether to optimize for size, and so on. This is useful for; /// frontends (such as Swift) that generally intend to interoperate with; /// C code and rely on Clang's target configuration logic.; ///; /// As a general rule, this function assumes that meaningful attributes; /// haven't already been added to the builder. It won't intentionally; /// displace any existing attributes, but it also won't check to avoid; /// overwriting them. Callers should generally apply customizations after; /// making this call.; ///; /// This function assumes that the caller is not defining a function that; /// requires special no-builtin treatment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/CodeGenABITypes.h:204,configurat,configuration,204,interpreter/llvm-project/clang/include/clang/CodeGen/CodeGenABITypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/CodeGenABITypes.h,3,"['configurat', 'pipeline']","['configuration', 'pipeline-configuration']"
Deployability,"/// Given two 128-bit floating-point vectors of [2 x double], perform an; /// element-by-element comparison of the double-precision element in the; /// first source vector and the corresponding element in the second source; /// vector.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of double-precision elements where the; /// sign-bits of both elements are 1, the ZF flag is set to 0. Otherwise the; /// ZF flag is set to 1. \n; /// If there is at least one pair of double-precision elements where the; /// sign-bit of the first element is 0 and the sign-bit of the second element; /// is 1, the CF flag is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns 1 if both the ZF and CF flags are set to 0,; /// otherwise it returns 0.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VTESTPD </c> instruction.; ///; /// \param __a; /// A 128-bit vector of [2 x double].; /// \param __b; /// A 128-bit vector of [2 x double].; /// \returns 1 if both the ZF and CF flags are set to 0, otherwise returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:269,update,updated,269,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Given two 128-bit floating-point vectors of [2 x double], perform an; /// element-by-element comparison of the double-precision element in the; /// first source vector and the corresponding element in the second source; /// vector.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of double-precision elements where the; /// sign-bits of both elements are 1, the ZF flag is set to 0. Otherwise the; /// ZF flag is set to 1. \n; /// If there is at least one pair of double-precision elements where the; /// sign-bit of the first element is 0 and the sign-bit of the second element; /// is 1, the CF flag is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns the value of the CF flag.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VTESTPD </c> instruction.; ///; /// \param __a; /// A 128-bit vector of [2 x double].; /// \param __b; /// A 128-bit vector of [2 x double].; /// \returns the CF flag in the EFLAGS register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:269,update,updated,269,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Given two 128-bit floating-point vectors of [4 x float], perform an; /// element-by-element comparison of the single-precision element in the; /// first source vector and the corresponding element in the second source; /// vector.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of single-precision elements where the; /// sign-bits of both elements are 1, the ZF flag is set to 0. Otherwise the; /// ZF flag is set to 1. \n; /// If there is at least one pair of single-precision elements where the; /// sign-bit of the first element is 0 and the sign-bit of the second element; /// is 1, the CF flag is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns 1 if both the ZF and CF flags are set to 0,; /// otherwise it returns 0.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VTESTPS </c> instruction.; ///; /// \param __a; /// A 128-bit vector of [4 x float].; /// \param __b; /// A 128-bit vector of [4 x float].; /// \returns 1 if both the ZF and CF flags are set to 0, otherwise returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:268,update,updated,268,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Given two 128-bit floating-point vectors of [4 x float], perform an; /// element-by-element comparison of the single-precision element in the; /// first source vector and the corresponding element in the second source; /// vector.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of single-precision elements where the; /// sign-bits of both elements are 1, the ZF flag is set to 0. Otherwise the; /// ZF flag is set to 1. \n; /// If there is at least one pair of single-precision elements where the; /// sign-bit of the first element is 0 and the sign-bit of the second element; /// is 1, the CF flag is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns the value of the CF flag.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VTESTPS </c> instruction.; ///; /// \param __a; /// A 128-bit vector of [4 x float].; /// \param __b; /// A 128-bit vector of [4 x float].; /// \returns the CF flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:268,update,updated,268,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Given two 128-bit floating-point vectors of [4 x float], perform an; /// element-by-element comparison of the single-precision element in the; /// first source vector and the corresponding element in the second source; /// vector.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of single-precision elements where the; /// sign-bits of both elements are 1, the ZF flag is set to 0. Otherwise the; /// ZF flag is set to 1. \n; /// If there is at least one pair of single-precision elements where the; /// sign-bit of the first element is 0 and the sign-bit of the second element; /// is 1, the CF flag is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns the value of the ZF flag.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VTESTPS </c> instruction.; ///; /// \param __a; /// A 128-bit vector of [4 x float].; /// \param __b; /// A 128-bit vector of [4 x float].; /// \returns the ZF flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:268,update,updated,268,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Given two 256-bit floating-point vectors of [4 x double], perform an; /// element-by-element comparison of the double-precision elements in the; /// first source vector and the corresponding elements in the second source; /// vector.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of double-precision elements where the; /// sign-bits of both elements are 1, the ZF flag is set to 0. Otherwise the; /// ZF flag is set to 1. \n; /// If there is at least one pair of double-precision elements where the; /// sign-bit of the first element is 0 and the sign-bit of the second element; /// is 1, the CF flag is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns 1 if both the ZF and CF flags are set to 0,; /// otherwise it returns 0.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VTESTPD </c> instruction.; ///; /// \param __a; /// A 256-bit vector of [4 x double].; /// \param __b; /// A 256-bit vector of [4 x double].; /// \returns 1 if both the ZF and CF flags are set to 0, otherwise returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:271,update,updated,271,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Given two 256-bit floating-point vectors of [4 x double], perform an; /// element-by-element comparison of the double-precision elements in the; /// first source vector and the corresponding elements in the second source; /// vector.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of double-precision elements where the; /// sign-bits of both elements are 1, the ZF flag is set to 0. Otherwise the; /// ZF flag is set to 1. \n; /// If there is at least one pair of double-precision elements where the; /// sign-bit of the first element is 0 and the sign-bit of the second element; /// is 1, the CF flag is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns the value of the CF flag.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VTESTPD </c> instruction.; ///; /// \param __a; /// A 256-bit vector of [4 x double].; /// \param __b; /// A 256-bit vector of [4 x double].; /// \returns the CF flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:271,update,updated,271,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Given two 256-bit floating-point vectors of [4 x double], perform an; /// element-by-element comparison of the double-precision elements in the; /// first source vector and the corresponding elements in the second source; /// vector.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of double-precision elements where the; /// sign-bits of both elements are 1, the ZF flag is set to 0. Otherwise the; /// ZF flag is set to 1. \n; /// If there is at least one pair of double-precision elements where the; /// sign-bit of the first element is 0 and the sign-bit of the second element; /// is 1, the CF flag is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns the value of the ZF flag.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VTESTPD </c> instruction.; ///; /// \param __a; /// A 256-bit vector of [4 x double].; /// \param __b; /// A 256-bit vector of [4 x double].; /// \returns the ZF flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:271,update,updated,271,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Given two 256-bit floating-point vectors of [8 x float], perform an; /// element-by-element comparison of the single-precision element in the; /// first source vector and the corresponding element in the second source; /// vector.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of single-precision elements where the; /// sign-bits of both elements are 1, the ZF flag is set to 0. Otherwise the; /// ZF flag is set to 1. \n; /// If there is at least one pair of single-precision elements where the; /// sign-bit of the first element is 0 and the sign-bit of the second element; /// is 1, the CF flag is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns the value of the CF flag.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VTESTPS </c> instruction.; ///; /// \param __a; /// A 256-bit vector of [8 x float].; /// \param __b; /// A 256-bit vector of [8 x float].; /// \returns the CF flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:268,update,updated,268,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Given two 256-bit floating-point vectors of [8 x float], perform an; /// element-by-element comparison of the single-precision element in the; /// first source vector and the corresponding element in the second source; /// vector.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of single-precision elements where the; /// sign-bits of both elements are 1, the ZF flag is set to 0. Otherwise the; /// ZF flag is set to 1. \n; /// If there is at least one pair of single-precision elements where the; /// sign-bit of the first element is 0 and the sign-bit of the second element; /// is 1, the CF flag is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns the value of the ZF flag.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VTESTPS </c> instruction.; ///; /// \param __a; /// A 256-bit vector of [8 x float].; /// \param __b; /// A 256-bit vector of [8 x float].; /// \returns the ZF flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:268,update,updated,268,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Given two 256-bit floating-point vectors of [8 x float], perform an; /// element-by-element comparison of the single-precision elements in the; /// first source vector and the corresponding elements in the second source; /// vector.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of single-precision elements where the; /// sign-bits of both elements are 1, the ZF flag is set to 0. Otherwise the; /// ZF flag is set to 1. \n; /// If there is at least one pair of single-precision elements where the; /// sign-bit of the first element is 0 and the sign-bit of the second element; /// is 1, the CF flag is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns 1 if both the ZF and CF flags are set to 0,; /// otherwise it returns 0.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VTESTPS </c> instruction.; ///; /// \param __a; /// A 256-bit vector of [8 x float].; /// \param __b; /// A 256-bit vector of [8 x float].; /// \returns 1 if both the ZF and CF flags are set to 0, otherwise returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:270,update,updated,270,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Given two 256-bit integer vectors, perform a bit-by-bit comparison; /// of the two source vectors.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of bits where both bits are 1, the ZF flag; /// is set to 0. Otherwise the ZF flag is set to 1. \n; /// If there is at least one pair of bits where the bit from the first source; /// vector is 0 and the bit from the second source vector is 1, the CF flag; /// is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns 1 if both the ZF and CF flags are set to 0,; /// otherwise it returns 0.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VPTEST </c> instruction.; ///; /// \param __a; /// A 256-bit integer vector.; /// \param __b; /// A 256-bit integer vector.; /// \returns 1 if both the ZF and CF flags are set to 0, otherwise returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:136,update,updated,136,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Given two 256-bit integer vectors, perform a bit-by-bit comparison; /// of the two source vectors.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of bits where both bits are 1, the ZF flag; /// is set to 0. Otherwise the ZF flag is set to 1. \n; /// If there is at least one pair of bits where the bit from the first source; /// vector is 0 and the bit from the second source vector is 1, the CF flag; /// is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns the value of the CF flag.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VPTEST </c> instruction.; ///; /// \param __a; /// A 256-bit integer vector.; /// \param __b; /// A 256-bit integer vector.; /// \returns the CF flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:136,update,updated,136,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Given two 256-bit integer vectors, perform a bit-by-bit comparison; /// of the two source vectors.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of bits where both bits are 1, the ZF flag; /// is set to 0. Otherwise the ZF flag is set to 1. \n; /// If there is at least one pair of bits where the bit from the first source; /// vector is 0 and the bit from the second source vector is 1, the CF flag; /// is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns the value of the ZF flag.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VPTEST </c> instruction.; ///; /// \param __a; /// A 256-bit integer vector.; /// \param __b; /// A 256-bit integer vector.; /// \returns the ZF flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:136,update,updated,136,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,/// Global flag to indicate that the LTO pipeline threw an error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp:41,pipeline,pipeline,41,interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp,1,['pipeline'],['pipeline']
Deployability,"/// GlobalDecl - represents a global declaration. This can either be a; /// CXXConstructorDecl and the constructor type (Base, Complete).; /// a CXXDestructorDecl and the destructor type (Base, Complete),; /// a FunctionDecl and the kernel reference type (Kernel, Stub), or; /// a VarDecl, a FunctionDecl or a BlockDecl.; ///; /// When a new type of GlobalDecl is added, the following places should; /// be updated to convert a Decl* to a GlobalDecl:; /// PredefinedExpr::ComputeName() in lib/AST/Expr.cpp.; /// getParentOfLocalEntity() in lib/AST/ItaniumMangle.cpp; /// ASTNameGenerator::Implementation::writeFuncOrVarName in lib/AST/Mangle.cpp; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/GlobalDecl.h:407,update,updated,407,interpreter/llvm-project/clang/include/clang/AST/GlobalDecl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/GlobalDecl.h,1,['update'],['updated']
Deployability,"/// GlobalNumberState assigns an integer to each global value in the program,; /// which is used by the comparison routine to order references to globals. This; /// state must be preserved throughout the pass, because Functions and other; /// globals need to maintain their relative order. Globals are assigned a number; /// when they are first visited. This order is deterministic, and so the; /// assigned numbers are as well. When two functions are merged, neither number; /// is updated. If the symbols are weak, this would be incorrect. If they are; /// strong, then one will be replaced at all references to the other, and so; /// direct callsites will now see one or the other symbol, and no update is; /// necessary. Note that if we were guaranteed unique names, we could just; /// compare those, but this would not work for stripped bitcodes or for those; /// few symbols without a name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/FunctionComparator.h:483,update,updated,483,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/FunctionComparator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/FunctionComparator.h,2,['update'],"['update', 'updated']"
Deployability,/// HACK: 2014-11-14 libstdc++ had a bug where it shadows std::swap with a; /// member swap function then tries to call std::swap unqualified from the; /// exception specification of that function. This function detects whether; /// we're in such a case and turns off delay-parsing of exception; /// specifications. Libstdc++ 6.1 (released 2016-04-27) appears to have; /// resolved it as side-effect of commit ddb63209a8d (2015-06-05).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExceptionSpec.cpp:331,release,released,331,interpreter/llvm-project/clang/lib/Sema/SemaExceptionSpec.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExceptionSpec.cpp,1,['release'],['released']
Deployability,"/// Handle the \#pragma clang loop directive.; /// #pragma clang 'loop' loop-hints; ///; /// loop-hints:; /// loop-hint loop-hints[opt]; ///; /// loop-hint:; /// 'vectorize' '(' loop-hint-keyword ')'; /// 'interleave' '(' loop-hint-keyword ')'; /// 'unroll' '(' unroll-hint-keyword ')'; /// 'vectorize_predicate' '(' loop-hint-keyword ')'; /// 'vectorize_width' '(' loop-hint-value ')'; /// 'interleave_count' '(' loop-hint-value ')'; /// 'unroll_count' '(' loop-hint-value ')'; /// 'pipeline' '(' disable ')'; /// 'pipeline_initiation_interval' '(' loop-hint-value ')'; ///; /// loop-hint-keyword:; /// 'enable'; /// 'disable'; /// 'assume_safety'; ///; /// unroll-hint-keyword:; /// 'enable'; /// 'disable'; /// 'full'; ///; /// loop-hint-value:; /// constant-expression; ///; /// Specifying vectorize(enable) or vectorize_width(_value_) instructs llvm to; /// try vectorizing the instructions of the loop it precedes. Specifying; /// interleave(enable) or interleave_count(_value_) instructs llvm to try; /// interleaving multiple iterations of the loop it precedes. The width of the; /// vector instructions is specified by vectorize_width() and the number of; /// interleaved loop iterations is specified by interleave_count(). Specifying a; /// value of 1 effectively disables vectorization/interleaving, even if it is; /// possible and profitable, and 0 is invalid. The loop vectorizer currently; /// only works on inner loops.; ///; /// The unroll and unroll_count directives control the concatenation; /// unroller. Specifying unroll(enable) instructs llvm to unroll the loop; /// completely if the trip count is known at compile time and unroll partially; /// if the trip count is not known. Specifying unroll(full) is similar to; /// unroll(enable) but will unroll the loop only if the trip count is known at; /// compile time. Specifying unroll(disable) disables unrolling for the; /// loop. Specifying unroll_count(_value_) instructs llvm to try to unroll the; /// loop the number of time",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParsePragma.cpp:484,pipeline,pipeline,484,interpreter/llvm-project/clang/lib/Parse/ParsePragma.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParsePragma.cpp,1,['pipeline'],['pipeline']
Deployability,/// Handles check and update for lastprivate conditional variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:22,update,update,22,interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,1,['update'],['update']
Deployability,"/// Helper class for SSA formation on a set of values defined in multiple; /// blocks.; ///; /// This is used when code duplication or another unstructured transformation; /// wants to rewrite a set of uses of one value with uses of a set of values.; /// The update is done only when RewriteAllUses is called, all other methods are; /// used for book-keeping. That helps to share some common computations between; /// updates of different uses (which is not the case when traditional SSAUpdater; /// is used).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h:259,update,update,259,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h,2,['update'],"['update', 'updates']"
Deployability,/// Helper class for checking expression in 'omp atomic [update]'; /// construct.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:57,update,update,57,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update']
Deployability,/// Helper class for performant LiveRange bulk updates.; ///; /// Calling LiveRange::addSegment() repeatedly can be expensive on large; /// live ranges because segments after the insertion point may need to be; /// shifted. The LiveRangeUpdater class can defer the shifting when adding; /// many segments in order.; ///; /// The LiveRange will be in an invalid state until flush() is called.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h:47,update,updates,47,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h,1,['update'],['updates']
Deployability,/// Helper function to apply all pending DomTree updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:49,update,updates,49,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,1,['update'],['updates']
Deployability,/// Helper function to apply all pending PostDomTree updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:53,update,updates,53,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,1,['update'],['updates']
Deployability,"/// Helper function to calculate dereferenceable bytes from current known; /// bytes and accessed bytes.; ///; /// int f(int *A){; /// *A = 0;; /// *(A+2) = 2;; /// *(A+1) = 1;; /// *(A+10) = 10;; /// }; /// ```; /// In that case, AccessedBytesMap is `{0:4, 4:4, 8:4, 40:4}`.; /// AccessedBytesMap is std::map so it is iterated in accending order on; /// key(Offset). So KnownBytes will be updated like this:; ///; /// |Access | KnownBytes; /// |(0, 4)| 0 -> 4; /// |(4, 4)| 4 -> 8; /// |(8, 4)| 8 -> 12; /// |(40, 4) | 12 (break)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:390,update,updated,390,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['updated']
Deployability,/// Helper function to clamp a state \p S of type \p StateType with the; /// information in \p R and indicate/return if \p S did change (as-in update is; /// required to be run again).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:143,update,update,143,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['update']
Deployability,"/// Helper function to createAddRecFromPHIWithCasts. We have a phi; /// node whose symbolic (unknown) SCEV is \p SymbolicPHI, which is updated via; /// the loop backedge by a SCEVAddExpr, possibly also with a few casts on the; /// way. This function checks if \p Op, an operand of this SCEVAddExpr,; /// follows one of the following patterns:; /// Op == (SExt ix (Trunc iy (%SymbolicPHI) to ix) to iy); /// Op == (ZExt ix (Trunc iy (%SymbolicPHI) to ix) to iy); /// If the SCEV expression of \p Op conforms with one of the expected patterns; /// we return the type of the truncation operation, and indicate whether the; /// truncated type should be treated as signed/unsigned by setting; /// \p Signed to true/false, respectively.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:135,update,updated,135,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['update'],['updated']
Deployability,"/// Helper function to update both the \c CGSCCAnalysisManager \p AM and the \c; /// CGSCCPassManager's \c CGSCCUpdateResult \p UR based on a range of newly; /// added SCCs.; ///; /// The range of new SCCs must be in postorder already. The SCC they were split; /// out of must be provided as \p C. The current node being mutated and; /// triggering updates must be passed as \p N.; ///; /// This function returns the SCC containing \p N. This will be either \p C if; /// no new SCCs have been split out, or it will be the new SCC containing \p N.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:23,update,update,23,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,2,['update'],"['update', 'updates']"
Deployability,/// Helper function to update the liveness information for the callee-saved; /// registers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp:23,update,update,23,interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,1,['update'],['update']
Deployability,/// Helper function which updates \p Flags when \p AttrFn returns true.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CallLowering.cpp:26,update,updates,26,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CallLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CallLowering.cpp,1,['update'],['updates']
Deployability,/// Helper that updates the completeness of the current DIE based on the; /// completeness of one of its children. It depends on the incompleteness of; /// the children already being computed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:16,update,updates,16,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,1,['update'],['updates']
Deployability,/// Helper that updates the completeness of the current DIE based on the; /// completeness of the DIEs it references. It depends on the incompleteness of; /// the referenced DIE already being computed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:16,update,updates,16,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,1,['update'],['updates']
Deployability,/// Helper to update an underlying call graph and to delete functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:14,update,update,14,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['update']
Deployability,/// Helper to update assignment tracking debug info.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp:14,update,update,14,interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,1,['update'],['update']
Deployability,/// Helper to update pointers back to the graph object during moves.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:14,update,update,14,interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,1,['update'],['update']
Deployability,/// Helper to update the call graph after running a CGSCC pass.; ///; /// CGSCC passes can only mutate the call graph in specific ways. This; /// routine provides a helper that updates the call graph in those ways; /// including returning whether any changes were made and populating a CG; /// update result struct for the overall CGSCC walk.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h:14,update,update,14,interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,3,['update'],"['update', 'updates']"
Deployability,/// Helper to update the call graph after running a function pass.; ///; /// Function passes can only mutate the call graph in specific ways. This; /// routine provides a helper that updates the call graph in those ways; /// including returning whether any changes were made and populating a CG; /// update result struct for the overall CGSCC walk.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h:14,update,update,14,interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,3,['update'],"['update', 'updates']"
Deployability,"/// Here we are integrating a function that has shape servers to verify that; /// they are correctly propagated as shape servers to the integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRealIntegral.cxx:16,integrat,integrating,16,roofit/roofitcore/test/testRooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRealIntegral.cxx,1,['integrat'],['integrating']
Deployability,/// Hexagon Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonTargetMachine.cpp:32,Configurat,Configuration,32,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonTargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,"/// Holds all the casts that participate in the update chain of the induction; /// variables, and that have been proven to be redundant (possibly under a; /// runtime guard). These casts can be ignored when creating the vectorized; /// loop body.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h:48,update,update,48,interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,1,['update'],['update']
Deployability,/// Holds and updates state information required to vectorize the main loop; /// and its epilogue in two separate passes. This setup helps us avoid; /// regenerating and recomputing runtime safety checks. It also helps us to; /// shorten the iteration-count-check path length for the cases where the; /// iteration count of the loop is so small that the main vector loop is; /// completely skipped.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:14,update,updates,14,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['updates']
Deployability,"/// Hook called whenever a macro \#undef is seen.; /// \param MacroNameTok The active Token; /// \param MD A MacroDefinition for the named macro.; /// \param Undef New MacroDirective if the macro was defined, null otherwise.; ///; /// MD is released immediately following this callback.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/PPCallbacks.h:241,release,released,241,interpreter/llvm-project/clang/include/clang/Lex/PPCallbacks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/PPCallbacks.h,1,['release'],['released']
Deployability,/// Hook called whenever a macro \#undef is seen.; ///; /// MD is released immediately following this callback.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MacroPPCallbacks.h:66,release,released,66,interpreter/llvm-project/clang/lib/CodeGen/MacroPPCallbacks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MacroPPCallbacks.h,1,['release'],['released']
Deployability,"/// Hook for the Attributor to trigger an update of the internal state.; ///; /// If this attribute is already fixed, this method will return UNCHANGED,; /// otherwise it delegates to `AbstractAttribute::updateImpl`.; ///; /// \Return CHANGED if the internal state changed, otherwise UNCHANGED.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:42,update,update,42,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,2,['update'],"['update', 'updateImpl']"
Deployability,/// Hook into the preprocessor and update the list of parsed; /// files when the preprocessor indicates a new file is entered.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/VerifyDiagnosticConsumer.cpp:35,update,update,35,interpreter/llvm-project/clang/lib/Frontend/VerifyDiagnosticConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/VerifyDiagnosticConsumer.cpp,1,['update'],['update']
Deployability,/// ISelUpdater - helper class to handle updates of the instruction selection; /// graph.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:41,update,updates,41,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['update'],['updates']
Deployability,"/// Identification block contains a string that describes the producer details,; /// and an epoch that defines the auto-upgrade capability.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/LLVMBitCodes.h:120,upgrade,upgrade,120,interpreter/llvm-project/llvm/include/llvm/Bitcode/LLVMBitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/LLVMBitCodes.h,1,['upgrade'],['upgrade']
Deployability,"/// Identifies a list of statements.; ///; /// Can either identify a single arbitrary Stmt object, a continuous sequence of; /// child statements inside a CompoundStmt or no statements at all.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:101,continuous,continuous,101,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,1,['continuous'],['continuous']
Deployability,"/// Identify pairings between the retains and releases, and delete and/or move; /// them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:46,release,releases,46,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['releases']
Deployability,/// Identify program paths which execute sequences of retains and releases which; /// can be eliminated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:66,release,releases,66,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['releases']
Deployability,/// If 'v' is only updated when the comparison fails.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:19,update,updated,19,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['updated']
Deployability,"/// If FollowRAUW is true, the ValueMap will update mappings on RAUW. If it's; /// false, the ValueMap will leave the original mapping in place.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueMap.h:45,update,update,45,interpreter/llvm-project/llvm/include/llvm/IR/ValueMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueMap.h,1,['update'],['update']
Deployability,"/// If Old is a target of the jump tables, update the jump table to branch to; /// New instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp:43,update,update,43,interpreter/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp,1,['update'],['update']
Deployability,"/// If Old is the target of any jump tables, update the jump tables to branch; /// to New instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp:45,update,update,45,interpreter/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp,1,['update'],['update']
Deployability,"/// If Sec is compressed section, decompresses and updates its contents; /// provided by Data. Otherwise leaves it unchanged.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFContext.cpp:51,update,updates,51,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFContext.cpp,1,['update'],['updates']
Deployability,"/// If \p PreserveCFG is set, then the pass is not allowed to modify CFG; /// in any way, even if it would update CFG analyses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/SROA.h:107,update,update,107,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/SROA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/SROA.h,1,['update'],['update']
Deployability,"/// If \p S gets a fresh counter, update the counter mappings. Return the; /// V1 hash of \p S.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp:34,update,update,34,interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp,1,['update'],['update']
Deployability,"/// If a LazyFunctionCreator is installed, use it to get/create the function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/MCJIT/MCJIT.cpp:32,install,installed,32,interpreter/llvm-project/llvm/lib/ExecutionEngine/MCJIT/MCJIT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/MCJIT/MCJIT.cpp,1,['install'],['installed']
Deployability,"/// If a TFile container is written by a C stream (simple file), on dataset commit, the file header; /// and the TFile record need to be updated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RMiniFile.cxx:137,update,updated,137,tree/ntuple/v7/src/RMiniFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RMiniFile.cxx,1,['update'],['updated']
Deployability,"/// If a new function was created by outlining, this method can be called; /// to update the call graph for the new function. Note that the old one; /// still needs to be re-analyzed or manually updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h:82,update,update,82,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h,2,['update'],"['update', 'updated']"
Deployability,/// If a symbol escapes conservatively assume unseen code released it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:58,release,released,58,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['released']
Deployability,"/// If an edge from Src to Dst is critical, split the edge and return true,; /// otherwise return false. This method requires that there be an edge between; /// the two blocks. It updates the analyses passed in the options struct",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:180,update,updates,180,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,1,['update'],['updates']
Deployability,"/// If an existing load has uses of its chain, create a token factor node with; /// that chain and the new memory node's chain and update users of the old; /// chain to the token factor. This ensures that the new memory node will have; /// the same relative memory dependency position as the old load. Returns the; /// new merged load chain.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h:131,update,update,131,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,2,['update'],['update']
Deployability,"/// If any user of a VPWidenIntOrFpInductionRecipe needs scalar values,; /// provide them by building scalar steps off of the canonical scalar IV and; /// update the original IV's users. This is an optional optimization to reduce; /// the needs of vector extracts.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.h:155,update,update,155,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.h,1,['update'],['update']
Deployability,"/// If hasLimitedCodeGenPipeline is true, this method returns; /// a string with the name of the options that caused this; /// pipeline to be limited.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h:127,pipeline,pipeline,127,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,1,['pipeline'],['pipeline']
Deployability,"/// If non-null, InlineFunction will update the callgraph to reflect the; /// changes it makes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:37,update,update,37,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,1,['update'],['update']
Deployability,"/// If non-null, the updated current \c SCC being processed.; ///; /// This is set when a graph refinement takes place and the ""current"" point; /// in the graph moves ""down"" or earlier in the post-order walk. This will; /// often cause the ""current"" SCC to be a newly created SCC object and the; /// old one to be added to the above worklist. When that happens, this; /// pointer is non-null and can be used to continue processing the ""top"" of; /// the post-order walk.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h:21,update,updated,21,interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,1,['update'],['updated']
Deployability,"/// If one def has many copy like uses, and those copy uses are all; /// rematerialized, the live interval update needed for those; /// rematerializations will be delayed and done all at once instead; /// of being done multiple times. This is to save compile cost because; /// live interval update is costly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:107,update,update,107,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,2,['update'],['update']
Deployability,"/// If one of the EPPipeline command line options was given, register callbacks; /// for parsing and inserting the given pipeline",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/NewPMDriver.cpp:121,pipeline,pipeline,121,interpreter/llvm-project/llvm/tools/opt/NewPMDriver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/NewPMDriver.cpp,1,['pipeline'],['pipeline']
Deployability,"/// If original value of 'x' must be stored in 'v', not an updated one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:59,update,updated,59,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['updated']
Deployability,"/// If the current top is not less than or equal to the next index, open it.; /// We happen to need the SlotIndex for the next top for pressure update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterPressure.cpp:144,update,update,144,interpreter/llvm-project/llvm/lib/CodeGen/RegisterPressure.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterPressure.cpp,1,['update'],['update']
Deployability,"/// If the expression is not a call, and the state change is; /// released -> allocated, it must be the realloc return value; /// check. If we have to handle more cases here, it might be cleaner just; /// to track this extra bit in the state itself.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:66,release,released,66,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['release'],['released']
Deployability,"/// If the given TBAA tag uses the scalar TBAA format, create a new node; /// corresponding to the upgrade to the struct-path aware TBAA format.; /// Otherwise return the \p TBAANode itself.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h:99,upgrade,upgrade,99,interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,1,['upgrade'],['upgrade']
Deployability,"/// If the indices to \p GEP can be traced to constants, incorporate all; /// of these into \p UsrOI.; ///; /// \return true iff \p UsrOI is updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:141,update,updated,141,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['update'],['updated']
Deployability,"/// If the insert point of the current builder or any of the builders on the; /// stack of saved builders has 'I' as its insert point, update it to point to; /// the instruction after 'I'. This is intended to be used when the instruction; /// 'I' is being moved. If this fixup is not done and 'I' is moved to a; /// different block, the inconsistent insert point (with a mismatched; /// Instruction and Block) can lead to an instruction being inserted in a block; /// other than its parent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp:135,update,update,135,interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,1,['update'],['update']
Deployability,"/// If the message was a call to '[super dealloc]', diagnose any missing; /// releases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:78,release,releases,78,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['releases']
Deployability,"/// If there are duplicate directory entries in the specified search list,; /// remove the later (dead) ones. Returns the number of non-system headers; /// removed, which is used to update NumAngled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/InitHeaderSearch.cpp:182,update,update,182,interpreter/llvm-project/clang/lib/Lex/InitHeaderSearch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/InitHeaderSearch.cpp,1,['update'],['update']
Deployability,"/// If this edge is a critical edge, insert a new node to split the critical; /// edge. This will update the analyses passed in through the option struct.; /// This returns the new block if the edge was split, null otherwise.; ///; /// If MergeIdenticalEdges in the options struct is true (not the default),; /// *all* edges from TI to the specified successor will be merged into the same; /// critical edge block. This is most commonly interesting with switch; /// instructions, which may have many edges to any one destination. This; /// ensures that all edges to that dest go to one block instead of each going; /// to a different block, but isn't the standard definition of a ""critical; /// edge"".; ///; /// It is invalid to call this function on a critical edge that starts at an; /// IndirectBrInst. Splitting these edges will almost always create an invalid; /// program because the address of the new block won't be the one that is jumped; /// to.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:98,update,update,98,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,1,['update'],['update']
Deployability,"/// If this field is set, LTO will write input file paths and symbol; /// resolutions here in llvm-lto2 command line flag format. This can be; /// used for testing and for running the LTO pipeline outside of the linker; /// with llvm-lto2.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h:188,pipeline,pipeline,188,interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,1,['pipeline'],['pipeline']
Deployability,"/// If this is the beginning of -dealloc, mark the values initially stored in; /// instance variables that must be released by the end of -dealloc; /// as unreleased in the state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:115,release,released,115,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['released']
Deployability,"/// If this is true, we cannot perform code motion but can still remove; /// retain/release pairs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h:84,release,release,84,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h,1,['release'],['release']
Deployability,"/// If we are in -dealloc or -dealloc is on the stack, handle the call if it is; /// a release or a nilling-out property setter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:87,release,release,87,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['release']
Deployability,"/// If we have a comparison with a non-canonical predicate, if we can update; /// all the users, invert the predicate and adjust all the users.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:70,update,update,70,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['update'],['update']
Deployability,"/// If we have something like phi [add (a,b), add(a,c)] and if a/b/c and the; /// adds all have a single user, turn this into a phi and a single binop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp:63,a/b,a/b,63,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp,1,['a/b'],['a/b']
Deployability,"/// If we reduce or update the program somehow, call this method to update; /// bugdriver with it. This deletes the old module and sets the specified one; /// as the current program.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.cpp:20,update,update,20,interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.cpp,4,['update'],['update']
Deployability,"/// If whole program visibility asserted, then upgrade all public vcall; /// visibility metadata on vtable definition summaries to linkage unit; /// visibility in Module summary index (for ThinLTO).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp:47,upgrade,upgrade,47,interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,1,['upgrade'],['upgrade']
Deployability,"/// If whole program visibility asserted, then upgrade all public vcall; /// visibility metadata on vtable definitions to linkage unit visibility in; /// Module IR (for regular or hybrid LTO).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp:47,upgrade,upgrade,47,interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,1,['upgrade'],['upgrade']
Deployability,"/// ImmutableList - This class represents an immutable (functional) list.; /// It is implemented as a smart pointer (wraps ImmutableListImpl), so it; /// it is intended to always be copied by value as if it were a pointer.; /// This interface matches ImmutableSet and ImmutableMap. ImmutableList; /// objects should almost never be created directly, and instead should; /// be created by ImmutableListFactory objects that manage the lifetime; /// of a group of lists. When the factory object is reclaimed, all lists; /// created by that factory are released as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableList.h:549,release,released,549,interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableList.h,1,['release'],['released']
Deployability,"/// Implement hashing for user-defined `struct`s.; ///; /// Any user-define `struct` can participate in hashing via `HashBuilder` by; /// providing a `addHash` templated function.; ///; /// ```; /// template <typename HasherT, llvm::endianness Endianness>; /// void addHash(HashBuilder<HasherT, Endianness> &HBuilder,; /// const UserDefinedStruct &Value);; /// ```; ///; /// For example:; /// ```; /// struct SimpleStruct {; /// char c;; /// int i;; /// };; ///; /// template <typename HasherT, llvm::endianness Endianness>; /// void addHash(HashBuilder<HasherT, Endianness> &HBuilder,; /// const SimpleStruct &Value) {; /// HBuilder.add(Value.c);; /// HBuilder.add(Value.i);; /// }; /// ```; ///; /// To avoid endianness issues, specializations of `addHash` should; /// generally rely on exising `add`, `addRange`, and `addRangeElements`; /// functions. If directly using `update`, an implementation must correctly; /// handle endianness.; ///; /// ```; /// struct __attribute__ ((packed)) StructWithFastHash {; /// int I;; /// char C;; ///; /// // If possible, we want to hash both `I` and `C` in a single; /// // `update` call for performance concerns.; /// template <typename HasherT, llvm::endianness Endianness>; /// friend void addHash(HashBuilder<HasherT, Endianness> &HBuilder,; /// const StructWithFastHash &Value) {; /// if (Endianness == llvm::endianness::native) {; /// HBuilder.update(ArrayRef(; /// reinterpret_cast<const uint8_t *>(&Value), sizeof(Value)));; /// } else {; /// // Rely on existing `add` methods to handle endianness.; /// HBuilder.add(Value.I);; /// HBuilder.add(Value.C);; /// }; /// }; /// };; /// ```; ///; /// To avoid collisions, specialization of `addHash` for variable-size; /// types must take the size into account.; ///; /// For example:; /// ```; /// struct CustomContainer {; /// private:; /// size_t Size;; /// int Elements[100];; ///; /// public:; /// CustomContainer(size_t Size) : Size(Size) {; /// for (size_t I = 0; I != Size; ++I); /// Elements[I] = ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h:874,update,update,874,interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,1,['update'],['update']
Deployability,"/// Implementation of CodeView type stream merging.; ///; /// A CodeView type stream is a series of records that reference each other; /// through type indices. A type index is either ""simple"", meaning it is less; /// than 0x1000 and refers to a builtin type, or it is complex, meaning it; /// refers to a prior type record in the current stream. The type index of a; /// record is equal to the number of records before it in the stream plus; /// 0x1000.; ///; /// Type records are only allowed to use type indices smaller than their own, so; /// a type stream is effectively a topologically sorted DAG. Cycles occurring in; /// the type graph of the source program are resolved with forward declarations; /// of composite types. This class implements the following type stream merging; /// algorithm, which relies on this DAG structure:; ///; /// - Begin with a new empty stream, and a new empty hash table that maps from; /// type record contents to new type index.; /// - For each new type stream, maintain a map from source type index to; /// destination type index.; /// - For each record, copy it and rewrite its type indices to be valid in the; /// destination type stream.; /// - If the new type record is not already present in the destination stream; /// hash table, append it to the destination type stream, assign it the next; /// type index, and update the two hash tables.; /// - If the type record already exists in the destination stream, discard it; /// and update the type index map to forward the source type index to the; /// existing destination type index.; ///; /// As an additional complication, type stream merging actually produces two; /// streams: an item (or IPI) stream and a type stream, as this is what is; /// actually stored in the final PDB. We choose which records go where by; /// looking at the record kind.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/TypeStreamMerger.cpp:1359,update,update,1359,interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/TypeStreamMerger.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/TypeStreamMerger.cpp,2,['update'],['update']
Deployability,"/// Implementation of Zhang and Shasha's Algorithm for tree edit distance.; /// Computes an optimal mapping between two trees using only insertion,; /// deletion and update as edit actions (similar to the Levenshtein distance).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/ASTDiff/ASTDiff.cpp:166,update,update,166,interpreter/llvm-project/clang/lib/Tooling/ASTDiff/ASTDiff.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/ASTDiff/ASTDiff.cpp,1,['update'],['update']
Deployability,"/// In rare circumstances instructions can be speculatively removed from; /// blocks, and then be re-inserted back into that position later. When this; /// happens in RemoveDIs debug-info mode, some special patching-up needs to; /// occur: inserting into the middle of a sequence of dbg.value intrinsics; /// does not have an equivalent with DPValues.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h:207,patch,patching-up,207,interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,1,['patch'],['patching-up']
Deployability,"/// In release builds, this is a no-op. For !NDEBUG builds, the checks are; /// implemented in the .cpp file to avoid circular header deps.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h:7,release,release,7,interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,1,['release'],['release']
Deployability,"/// In the per-module summary, indicates that the global value is; /// linkonce_odr and global unnamed addr (so eligible for auto-hiding; /// via hidden visibility). In the combined summary, indicates that the; /// prevailing linkonce_odr copy can be auto-hidden via hidden visibility; /// when it is upgraded to weak_odr in the backend. This is legal when; /// all copies are eligible for auto-hiding (i.e. all copies were; /// linkonce_odr global unnamed addr. If any copy is not (e.g. it was; /// originally weak_odr, we cannot auto-hide the prevailing copy as it; /// means the symbol was externally visible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ModuleSummaryIndex.h:301,upgrade,upgraded,301,interpreter/llvm-project/llvm/include/llvm/IR/ModuleSummaryIndex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ModuleSummaryIndex.h,1,['upgrade'],['upgraded']
Deployability,"/// Includes are never sorted.; /// \code; /// #include ""B/A.h""; /// #include ""A/B.h""; /// #include ""a/b.h""; /// #include ""A/b.h""; /// #include ""B/a.h""; /// \endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:79,A/B,A/B,79,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,3,"['A/B', 'A/b', 'a/b']","['A/B', 'A/b', 'a/b']"
Deployability,"/// Includes are sorted in an ASCIIbetical or case sensitive fashion.; /// \code; /// #include ""A/B.h""; /// #include ""A/b.h""; /// #include ""B/A.h""; /// #include ""B/a.h""; /// #include ""a/b.h""; /// \endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:96,A/B,A/B,96,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,3,"['A/B', 'A/b', 'a/b']","['A/B', 'A/b', 'a/b']"
Deployability,"/// Includes are sorted in an alphabetical or case insensitive fashion.; /// \code; /// #include ""A/B.h""; /// #include ""A/b.h""; /// #include ""a/b.h""; /// #include ""B/A.h""; /// #include ""B/a.h""; /// \endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:98,A/B,A/B,98,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,3,"['A/B', 'A/b', 'a/b']","['A/B', 'A/b', 'a/b']"
Deployability,"/// Incoming for lane maks phi as machine instruction, incoming register \p Reg; /// and incoming block \p Block are taken from machine instruction.; /// \p UpdatedReg (if valid) is \p Reg lane mask merged with another lane mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.h:157,Update,UpdatedReg,157,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.h,1,['Update'],['UpdatedReg']
Deployability,"/// Increment the fallible iterator.; ///; /// If the underlying 'inc' operation fails, this will set the Error value; /// and update this iterator value to point to end-of-range.; ///; /// The Error value is marked as needing checking, regardless of whether the; /// 'inc' operation succeeds or fails.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/fallible_iterator.h:127,update,update,127,interpreter/llvm-project/llvm/include/llvm/ADT/fallible_iterator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/fallible_iterator.h,1,['update'],['update']
Deployability,/// Indicates patch which points to immediate compile unit's attribute.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:14,patch,patch,14,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['patch'],['patch']
Deployability,"/// Indicates when the AST writing is actively performing; /// serialization, rather than just queueing updates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTWriter.h:104,update,updates,104,interpreter/llvm-project/clang/include/clang/Serialization/ASTWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTWriter.h,1,['update'],['updates']
Deployability,/// Indicates whether an instance variable is required to be released in; /// -dealloc.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:61,release,released,61,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['released']
Deployability,/// Inform safety info that we are planning to remove the instruction \p Inst; /// from its block. It will make all cache updates to keep it correct after; /// this removal.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h:122,update,updates,122,interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,1,['update'],['updates']
Deployability,"/// Inform the BreakFalseDeps pass how many idle instructions we would like; /// before certain undef register reads.; ///; /// This catches the VCVTSI2SD family of instructions:; ///; /// vcvtsi2sdq %rax, undef %xmm0, %xmm14; ///; /// We should to be careful *not* to catch VXOR idioms which are presumably; /// handled specially in the pipeline:; ///; /// vxorps undef %xmm1, undef %xmm1, %xmm1; ///; /// Like getPartialRegUpdateClearance, this makes a strong assumption that the; /// high bits that are passed-through are not live.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:338,pipeline,pipeline,338,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['pipeline'],['pipeline']
Deployability,/// Inform the BreakFalseDeps pass how many idle; /// instructions we would like before a partial register update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:107,update,update,107,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['update'],['update']
Deployability,/// Inform the dominator tree about a CFG edge deletion and update the tree.; ///; /// This function has to be called just after making the update on the actual; /// CFG. An internal functions checks if the edge doesn't exist in the CFG in; /// DEBUG mode. There cannot be any other updates that the; /// dominator tree doesn't know about.; ///; /// Note that for postdominators it automatically takes care of deleting; /// a reverse edge internally (so there's no need to swap the parameters).; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:60,update,update,60,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,3,['update'],"['update', 'updates']"
Deployability,/// Inform the dominator tree about a CFG edge insertion and update the tree.; ///; /// This function has to be called just before or just after making the update; /// on the actual CFG. There cannot be any other updates that the dominator; /// tree doesn't know about.; ///; /// Note that for postdominators it automatically takes care of inserting; /// a reverse edge internally (so there's no need to swap the parameters).; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:61,update,update,61,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,3,['update'],"['update', 'updates']"
Deployability,"/// Inform the entry that it has been modified, and needs to update its; /// last-changed time stamp.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectoryEntry.hxx:61,update,update,61,core/base/v7/inc/ROOT/RDirectoryEntry.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RDirectoryEntry.hxx,1,['update'],['update']
Deployability,/// Inform the safety info that we are planning to insert a new instruction; /// \p Inst into the basic block \p BB. It will make all cache updates to keep; /// it correct after this insertion.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h:140,update,updates,140,interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,1,['update'],['updates']
Deployability,/// Information about a dependence. If FromAA is changed ToAA needs to be; /// updated as well.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:79,update,updated,79,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['updated']
Deployability,"/// Information about a single command.; ///; /// When reordering, adding or removing members please update the corresponding; /// TableGen backend.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CommentCommandTraits.h:101,update,update,101,interpreter/llvm-project/clang/include/clang/AST/CommentCommandTraits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CommentCommandTraits.h,1,['update'],['update']
Deployability,/// Initialize - Reset this object to get ready for a new set of SSA; /// updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineSSAUpdater.h:74,update,updates,74,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineSSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineSSAUpdater.h,2,['update'],['updates']
Deployability,/// Initialize all the fields to null.; /// \param Size Number of elements in the; /// counters/finals/updates/dependent_counters/dependent_inits/finals_conditions; /// arrays.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:103,update,updates,103,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['update'],['updates']
Deployability,"/// Initialize the state with the information in the Attributor \p A.; ///; /// This function is called by the Attributor once all abstract attributes; /// have been identified. It can and shall be used for task like:; /// - identify existing knowledge in the IR and use it for the ""known state""; /// - perform any work that is not going to change over time, e.g., determine; /// a subset of the IR, or attributes in-flight, that have to be looked at; /// in the `updateImpl` method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:464,update,updateImpl,464,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['updateImpl']
Deployability,/// Insert a definition of a new global variable at each point contained in; /// InsPtsPerFunc and update the related uses (also contained in; /// InsPtsPerFunc).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp:99,update,update,99,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp,1,['update'],['update']
Deployability,/// Insert spill instruction for \p AssignedReg before \p Before. Update; /// DBG_VALUEs with \p VirtReg operands with the stack slot.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp:66,Update,Update,66,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp,1,['Update'],['Update']
Deployability,/// Insert spill instruction for \p AssignedReg before \p Before.; /// TODO: Update DBG_VALUEs with \p VirtReg operands with the stack slot.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp:77,Update,Update,77,interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,1,['Update'],['Update']
Deployability,"/// Inserts InsInstrs and deletes DelInstrs. Incrementally updates instruction; /// depths if requested.; ///; /// \param MBB basic block to insert instructions in; /// \param MI current machine instruction; /// \param InsInstrs new instructions to insert in \p MBB; /// \param DelInstrs instruction to delete from \p MBB; /// \param TraceEnsemble is a pointer to the machine trace information; /// \param RegUnits set of live registers, needed to compute instruction depths; /// \param TII is target instruction info, used to call target hook; /// \param Pattern is used to call target hook finalizeInsInstrs; /// \param IncrementalUpdate if true, compute instruction depths incrementally,; /// otherwise invalidate the trace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCombiner.cpp:59,update,updates,59,interpreter/llvm-project/llvm/lib/CodeGen/MachineCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCombiner.cpp,1,['update'],['updates']
Deployability,"/// Inserts an edge into the graph with Identifier Val.first, and; /// Attribute Val.second. If the key is already in the map, it returns false; /// and doesn't update the value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/XRay/Graph.h:161,update,update,161,interpreter/llvm-project/llvm/include/llvm/XRay/Graph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/XRay/Graph.h,2,['update'],['update']
Deployability,"/// Install PHI values into the live-in array for each block, according to; /// the IDF of each register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h:4,Install,Install,4,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,1,['Install'],['Install']
Deployability,"/// Install a ROOT diagnostic handler to analyse diagnostics.; /// It will record all diagnostics during its lifetime, and analyse them at destruction.; /// Required and/or optional diagnostics need to be predefined with expected location and message.; /// Unexpected or missing diagnostics will lead to gtest failures.; ///; /// Example:; /// ```c++; /// CheckDiagsRAII diagRAII{CheckDiagsRAII::EDK_Error, ""TFile::TFile"", ""<Expected message>""};; /// diagRAII.optionalDiag(kInfo, ""TFile::TFile"", ""Message that is issued only sometimes"");; /// <test code>; ///; /// ```",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx:4,Install,Install,4,core/testsupport/inc/ROOT/TestSupport.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/testsupport/inc/ROOT/TestSupport.hxx,1,['Install'],['Install']
Deployability,/// Install any platform-specific symbols (e.g. `__dso_handle`) and create a; /// mach-o header based on the given options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOPlatform.h:4,Install,Install,4,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOPlatform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOPlatform.h,1,['Install'],['Install']
Deployability,/// Install empty handlers for all pragmas (making them ignored).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h:4,Install,Install,4,interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,1,['Install'],['Install']
Deployability,/// Install name of the framework/library.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readtapi/DiffEngine.h:4,Install,Install,4,interpreter/llvm-project/llvm/tools/llvm-readtapi/DiffEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readtapi/DiffEngine.h,1,['Install'],['Install']
Deployability,/// Install the given buffer and mode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:4,Install,Install,4,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,1,['Install'],['Install']
Deployability,/// Install the initializer into a global variable. This cannot; /// be called multiple times.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/ConstantInitFuture.h:4,Install,Install,4,interpreter/llvm-project/clang/include/clang/CodeGen/ConstantInitFuture.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/ConstantInitFuture.h,1,['Install'],['Install']
Deployability,/// Install the standard preprocessor pragmas:; /// \#pragma GCC poison/system_header/dependency and \#pragma once.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h:4,Install,Install,4,interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,1,['Install'],['Install']
Deployability,"/// InstallLazyFunctionCreator - If an unknown function is needed, the; /// specified function pointer is invoked to create it. If it returns null,; /// the JIT will abort.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h:4,Install,InstallLazyFunctionCreator,4,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,1,['Install'],['InstallLazyFunctionCreator']
Deployability,/// Installs a handler that is executed when a compilation job is finished.; /// The arguments of the callback specify the compilation job as an instance; /// of class Command and the exit status of the child process executed that; /// job.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Compilation.h:4,Install,Installs,4,interpreter/llvm-project/clang/include/clang/Driver/Compilation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Compilation.h,1,['Install'],['Installs']
Deployability,"/// Installs a new bad alloc error handler that should be used whenever a; /// bad alloc error, e.g. failing malloc/calloc, is encountered by LLVM.; ///; /// The user can install a bad alloc handler, in order to define the behavior; /// in case of failing allocations, e.g. throwing an exception. Note that this; /// handler must not trigger any additional allocations itself.; ///; /// If no error handler is installed the default is to print the error message; /// to stderr, and call exit(1). If an error handler is installed then it is; /// the handler's responsibility to log the message, it will no longer be; /// printed to stderr. If the error handler returns, then exit(1) will be; /// called.; ///; ///; /// \param user_data - An argument which will be passed to the installed error; /// handler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h:4,Install,Installs,4,interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h,5,"['Install', 'install']","['Installs', 'install', 'installed']"
Deployability,"/// Installs an oracle to decide whether two global values are; /// equivalent as operands. Without an oracle, global values are; /// considered equivalent as operands precisely when they have the; /// same name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.h:4,Install,Installs,4,interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.h,1,['Install'],['Installs']
Deployability,/// Installs the provided FileSystemStatCache object within; /// the FileManager.; ///; /// Ownership of this object is transferred to the FileManager.; ///; /// \param statCache the new stat cache to install. Ownership of this; /// object is transferred to the FileManager.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileManager.h:4,Install,Installs,4,interpreter/llvm-project/clang/include/clang/Basic/FileManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileManager.h,2,"['Install', 'install']","['Installs', 'install']"
Deployability,"/// Instruction I will be changed to an unreachable. Remove all accesses in; /// I's block that follow I (inclusive), and update the Phis in the blocks'; /// successors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:122,update,update,122,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,1,['update'],['update']
Deployability,/// Instruction that updates a pointer,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:21,update,updates,21,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['update'],['updates']
Deployability,/// Integrate an invoked expression into the collected data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:4,Integrat,Integrate,4,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['Integrat'],['Integrate']
Deployability,/// Integrate an invoked statement into the collected data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:4,Integrat,Integrate,4,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['Integrat'],['Integrate']
Deployability,/// Integrate another called method into the collected data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:4,Integrat,Integrate,4,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['Integrat'],['Integrate']
Deployability,"/// Integrate other statistical data into the current data.; ///; /// The implementation assumes that the other statistics were recorded with; /// the same binning configuration, and that the statistics of `OtherData`; /// are a superset of those recorded by the active `RHistData` instance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:4,Integrat,Integrate,4,hist/histv7/inc/ROOT/RHistData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx,2,"['Integrat', 'configurat']","['Integrate', 'configuration']"
Deployability,"/// Integrate the PDF over bins. Improves accuracy for binned fits. Switch off using `0.` as argument. \see; /// RooAbsPdf::fitTo().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGlobalFunc.cxx:4,Integrat,Integrate,4,roofit/roofitcore/src/RooGlobalFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGlobalFunc.cxx,1,['Integrat'],['Integrate']
Deployability,"/// Interface to help hash various types through a hasher type.; ///; /// Via provided specializations of `add`, `addRange`, and `addRangeElements`; /// functions, various types (e.g. `ArrayRef`, `StringRef`, etc.) can be hashed; /// without requiring any knowledge of hashed types from the hasher type.; ///; /// The only method expected from the templated hasher type `HasherT` is:; /// * void update(ArrayRef<uint8_t> Data); ///; /// Additionally, the following methods will be forwarded to the hasher type:; /// * decltype(std::declval<HasherT &>().final()) final(); /// * decltype(std::declval<HasherT &>().result()) result(); ///; /// From a user point of view, the interface provides the following:; /// * `template<typename T> add(const T &Value)`; /// The `add` function implements hashing of various types.; /// * `template <typename ItT> void addRange(ItT First, ItT Last)`; /// The `addRange` function is designed to aid hashing a range of values.; /// It explicitly adds the size of the range in the hash.; /// * `template <typename ItT> void addRangeElements(ItT First, ItT Last)`; /// The `addRangeElements` function is also designed to aid hashing a range of; /// values. In contrast to `addRange`, it **ignores** the size of the range,; /// behaving as if elements were added one at a time with `add`.; ///; /// User-defined `struct` types can participate in this interface by providing; /// an `addHash` templated function. See the associated template specialization; /// for details.; ///; /// This interface does not impose requirements on the hasher; /// `update(ArrayRef<uint8_t> Data)` method. We want to avoid collisions for; /// variable-size types; for example for; /// ```; /// builder.add({1});; /// builder.add({2, 3});; /// ```; /// and; /// ```; /// builder.add({1, 2});; /// builder.add({3});; /// ```; /// . Thus, specializations of `add` and `addHash` for variable-size types must; /// not assume that the hasher type considers the size as part of the hash; they; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h:396,update,update,396,interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,1,['update'],['update']
Deployability,"/// Internal Utility routine to correctly release the memory for an object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:42,release,release,42,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['release'],['release']
Deployability,"/// Invalidate cached information about MBB. This must be called *before* MBB; /// is erased, or the CFG is otherwise changed.; ///; /// This invalidates per-block information about resource usage for MBB only,; /// and it invalidates per-trace information for any trace that passes; /// through MBB.; ///; /// Call Ensemble::getTrace() again to update any trace handles.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h:346,update,update,346,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,1,['update'],['update']
Deployability,"/// Invalidate the fragments starting with F because it has been; /// resized. The fragment's size should have already been updated, but; /// its bundle padding will be recomputed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmLayout.h:124,update,updated,124,interpreter/llvm-project/llvm/include/llvm/MC/MCAsmLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmLayout.h,1,['update'],['updated']
Deployability,/// Is 'x' a LHS in a RHS part of full update expression. It is; /// important for non-associative operations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:39,update,update,39,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update']
Deployability,"/// Is integrator in valid state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsIntegrator.h:7,integrat,integrator,7,roofit/roofitcore/inc/RooAbsIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsIntegrator.h,1,['integrat'],['integrator']
Deployability,"/// Is the assembler allowed to insert padding automatically? For; /// correctness reasons, we sometimes need to ensure instructions aren't; /// separated in unexpected ways. At the moment, this feature is only; /// useable from an integrated assembler, but assembly syntax is under; /// discussion for future inclusion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h:232,integrat,integrated,232,interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h,1,['integrat'],['integrated']
Deployability,/// Is the integrated assembler required for this streamer to function; /// correctly?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h:11,integrat,integrated,11,interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h,1,['integrat'],['integrated']
Deployability,/// Is this predicate the predefined acquire-release atomic predicate?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h:45,release,release,45,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h,1,['release'],['release']
Deployability,/// Is this predicate the predefined release atomic predicate?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h:37,release,release,37,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h,1,['release'],['release']
Deployability,/// Is this predicate the predefined release-or-stronger atomic predicate?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h:37,release,release-or-stronger,37,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h,1,['release'],['release-or-stronger']
Deployability,/// Is this predicate the predefined weaker-than-release atomic predicate?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h:49,release,release,49,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h,1,['release'],['release']
Deployability,/// Is this the minimal version executed in the backend pipelines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp:56,pipeline,pipelines,56,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp,1,['pipeline'],['pipelines']
Deployability,/// IsIntegratedAssemblerDefault - Does this tool chain enable -integrated-as; /// by default.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h:64,integrat,integrated-as,64,interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,1,['integrat'],['integrated-as']
Deployability,/// IsNonIntegratedBackendSupported - Does this tool chain support; /// -fno-integrated-objemitter.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h:77,integrat,integrated-objemitter,77,interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,1,['integrat'],['integrated-objemitter']
Deployability,"/// Issue an instruction and populates a vector of used pipeline resources,; /// and a vector of instructions that transitioned to the ready state as a; /// result of this event.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h:56,pipeline,pipeline,56,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,1,['pipeline'],['pipeline']
Deployability,"/// Issue the instruction, or update the StallInfo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/InOrderIssueStage.h:30,update,update,30,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/InOrderIssueStage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/InOrderIssueStage.h,1,['update'],['update']
Deployability,"/// Iteratively inline hot callsites of a function.; ///; /// Iteratively traverse all callsites of the function \p F, so as to; /// find out callsites with corresponding inline instances.; ///; /// For such callsites,; /// - If it is hot enough, inline the callsites and adds callsites of the callee; /// into the caller. If the call is an indirect call, first promote; /// it to direct call. Each indirect call is limited with a single target.; ///; /// - If a callsite is not inlined, merge the its profile to the outline; /// version (if --sample-profile-merge-inlinee is true), or scale the; /// counters of standalone function based on the profile of inlined; /// instances (if --sample-profile-merge-inlinee is false).; ///; /// Later passes may consume the updated profiles.; ///; /// \param F function to perform iterative inlining.; /// \param InlinedGUIDs a set to be updated to include all GUIDs that are; /// inlined in the profiled binary.; ///; /// \returns True if there is any inline happened.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp:765,update,updated,765,interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,2,['update'],['updated']
Deployability,/// Iterator returning form of getFirstNonPHI. Installed as a placeholder for; /// the RemoveDIs project that will eventually remove debug intrinsics.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h:47,Install,Installed,47,interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,1,['Install'],['Installed']
Deployability,/// JITLink sub-arch configuration for Arm CPU models,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/aarch32.h:21,configurat,configuration,21,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/aarch32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/aarch32.h,1,['configurat'],['configuration']
Deployability,/// Keep track of a DW_AT_range attribute that we will need to patch up later.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinkerCompileUnit.h:63,patch,patch,63,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinkerCompileUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinkerCompileUnit.h,1,['patch'],['patch']
Deployability,"/// Keeps track of TFile control structures, which need to be updated on committing the data set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RMiniFile.hxx:62,update,updated,62,tree/ntuple/v7/inc/ROOT/RMiniFile.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RMiniFile.hxx,1,['update'],['updated']
Deployability,"/// LICalc - Cache for computing live ranges and SSA update. Each instance; /// can only handle non-overlapping live ranges, so use a separate; /// LiveIntervalCalc instance for the complement interval when in spill mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h:53,update,update,53,interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,1,['update'],['update']
Deployability,/// LTO configuration. A linker can configure LTO by setting fields in this data; /// structure and passing it to the lto::LTO constructor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h:8,configurat,configuration,8,interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,1,['configurat'],['configuration']
Deployability,"/// Last chance recoloring has a high compile time cost especially for; /// targets with a lot of registers.; /// This method is used to decide whether or not \p VirtReg should; /// go through this expensive heuristic.; /// When this target hook is hit, by returning false, there is a high; /// chance that the register allocation will fail altogether (usually with; /// ""ran out of registers"").; /// That said, this error usually points to another problem in the; /// optimization pipeline.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h:482,pipeline,pipeline,482,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,1,['pipeline'],['pipeline']
Deployability,/// Layout - Mapping of allocations to the required SSPLayoutKind.; /// StackProtector analysis will update this map when determining if an; /// AllocaInst triggers a stack protector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackProtector.h:101,update,update,101,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackProtector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackProtector.h,1,['update'],['update']
Deployability,"/// Layout pointer size in bytes, rounded up to a whole; /// number of bytes.; /// FIXME: The defaults need to be removed once all of; /// the backends/clients are updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h:164,update,updated,164,interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h,1,['update'],['updated']
Deployability,"/// Layout pointer size, in bits; /// FIXME: The defaults need to be removed once all of; /// the backends/clients are updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h:119,update,updated,119,interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h,1,['update'],['updated']
Deployability,"/// Legalize all operands in this instruction. This function may create new; /// instructions and control-flow around \p MI. If present, \p MDT is; /// updated.; /// \returns A new basic block that contains \p MI if new blocks were created.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.h:152,update,updated,152,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.h,1,['update'],['updated']
Deployability,"/// Like the overload taking a `Function &`, but intended specifically; /// for frontends that want to build on Clang's target-configuration logic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h:127,configurat,configuration,127,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,1,['configurat'],['configuration']
Deployability,"/// Link the pipeline as if \p SU was in the SchedGroup with ID \p SGID. It; /// returns the cost (in terms of missed pipeline edges), and tracks the edges; /// added in \p AddedEdges",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:13,pipeline,pipeline,13,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,2,['pipeline'],['pipeline']
Deployability,/// List of nodes that need to be updated in ::iterate.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h:34,update,updated,34,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,1,['update'],['updated']
Deployability,"/// List that automatically updates parent links and symbol tables.; ///; /// When nodes are inserted into and removed from this list, the associated; /// symbol table will be automatically updated. Similarly, parent links get; /// updated automatically.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/SymbolTableListTraits.h:28,update,updates,28,interpreter/llvm-project/llvm/include/llvm/IR/SymbolTableListTraits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/SymbolTableListTraits.h,3,['update'],"['updated', 'updates']"
Deployability,/// LiveIn - Work list of blocks where the live-in value has yet to be; /// determined. This list is typically computed by findReachingDefs() and; /// used as a work list by updateSSA(). The low-level interface may also be; /// used to add entries directly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h:174,update,updateSSA,174,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,1,['update'],['updateSSA']
Deployability,"/// Load the AST file and validate its contents against the given; /// Preprocessor.; ///; /// \param PP the preprocessor associated with the context in which this; /// precompiled header will be loaded.; ///; /// \param Context the AST context that this precompiled header will be; /// loaded into, if any.; ///; /// \param PCHContainerRdr the PCHContainerOperations to use for loading and; /// creating modules.; ///; /// \param Extensions the list of module file extensions that can be loaded; /// from the AST files.; ///; /// \param isysroot If non-NULL, the system include path specified by the; /// user. This is only used with relocatable PCH files. If non-NULL,; /// a relocatable PCH file will use the default path ""/"".; ///; /// \param DisableValidationKind If set, the AST reader will suppress most; /// of its regular consistency checking, allowing the use of precompiled; /// headers and module files that cannot be determined to be compatible.; ///; /// \param AllowASTWithCompilerErrors If true, the AST reader will accept an; /// AST file the was created out of an AST with compiler errors,; /// otherwise it will reject it.; ///; /// \param AllowConfigurationMismatch If true, the AST reader will not check; /// for configuration differences between the AST file and the invocation.; ///; /// \param ValidateSystemInputs If true, the AST reader will validate; /// system input files in addition to user input files. This is only; /// meaningful if \p DisableValidation is false.; ///; /// \param UseGlobalIndex If true, the AST reader will try to load and use; /// the global module index.; ///; /// \param ReadTimer If non-null, a timer used to track the time spent; /// deserializing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:1234,configurat,configuration,1234,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['configurat'],['configuration']
Deployability,"/// Load tile configuration from a 64-byte memory location specified by; /// ""mem_addr"". The tile configuration includes the tile type palette, the; /// number of bytes per row, and the number of rows. If the specified; /// palette_id is zero, that signifies the init state for both the tile; /// config and the tile data, and the tiles are zeroed. Any invalid; /// configurations will result in #GP fault.; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the <c> LDTILECFG </c> instruction.; ///; /// \param __config; /// A pointer to 512-bits configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h:14,configurat,configuration,14,interpreter/llvm-project/clang/lib/Headers/amxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h,4,['configurat'],"['configuration', 'configurations']"
Deployability,"/// Load tile rows from memory specifieid by ""base"" address and ""stride"" into; /// destination tile ""dst"" using the tile configuration previously configured; /// via ""_tile_loadconfig"". This intrinsic provides a hint to the implementation; /// that the data will likely not be reused in the near future and the data; /// caching can be optimized accordingly.; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the <c> TILELOADDT1 </c> instruction.; ///; /// \param dst; /// A destination tile. Max size is 1024 Bytes.; /// \param base; /// A pointer to base address.; /// \param stride; /// The stride between the rows' data to be loaded in memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h:121,configurat,configuration,121,interpreter/llvm-project/clang/lib/Headers/amxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h,1,['configurat'],['configuration']
Deployability,"/// Load tile rows from memory specifieid by ""base"" address and ""stride"" into; /// destination tile ""dst"" using the tile configuration previously configured; /// via ""_tile_loadconfig"".; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the <c> TILELOADD </c> instruction.; ///; /// \param dst; /// A destination tile. Max size is 1024 Bytes.; /// \param base; /// A pointer to base address.; /// \param stride; /// The stride between the rows' data to be loaded in memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h:121,configurat,configuration,121,interpreter/llvm-project/clang/lib/Headers/amxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h,1,['configurat'],['configuration']
Deployability,"/// Load, create, or return global module.; /// This function returns an existing global module index, if one; /// had already been loaded or created, or loads one if it; /// exists, or creates one if it doesn't exist.; /// Also, importantly, if the index doesn't cover all the modules; /// in the module map, it will be update to do so here, because; /// of its use in searching for needed module imports and; /// associated fixit messages.; /// \param TriggerLoc The location for what triggered the load.; /// \returns Returns null if load failed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ModuleLoader.h:321,update,update,321,interpreter/llvm-project/clang/include/clang/Lex/ModuleLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ModuleLoader.h,1,['update'],['update']
Deployability,/// Load/store instruction that can be merged with a base address; /// update,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:71,update,update,71,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['update'],['update']
Deployability,"/// Locks the underlying file.; ///; /// @returns RAII object that releases the lock upon leaving the scope, if the; /// locking was successful. Otherwise returns corresponding; /// error code.; ///; /// The function blocks the current thread until the lock become available or; /// error occurs.; ///; /// Possible use of this function may be as follows:; ///; /// @code{.cpp}; /// if (auto L = stream.lock()) {; /// // ... do action that require file to be locked.; /// } else {; /// handleAllErrors(std::move(L.takeError()), [&](ErrorInfoBase &EIB) {; /// // ... handle lock error.; /// });; /// }; /// @endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:67,release,releases,67,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,1,['release'],['releases']
Deployability,/// Log something if there is a logging callback installed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTMerger.h:49,install,installed,49,interpreter/llvm-project/clang/include/clang/AST/ExternalASTMerger.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTMerger.h,1,['install'],['installed']
Deployability,"/// Look for an Objective-C class in the translation unit.; ///; /// \param Id The name of the Objective-C class we're looking for. If; /// typo-correction fixes this name, the Id will be updated; /// to the fixed name.; ///; /// \param IdLoc The location of the name in the translation unit.; ///; /// \param DoTypoCorrection If true, this routine will attempt typo correction; /// if there is no class with the given name.; ///; /// \returns The declaration of the named Objective-C class, or NULL if the; /// class could not be found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:188,update,updated,188,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['update'],['updated']
Deployability,"/// Look through operations that will be free to find the earliest source of; /// this value.; ///; /// @param ValLoc If V has aggregate type, we will be interested in a particular; /// scalar component. This records its address; the reverse of this list gives a; /// sequence of indices appropriate for an extractvalue to locate the important; /// value. This value is updated during the function and on exit will indicate; /// similar information for the Value returned.; ///; /// @param DataBits If this function looks through truncate instructions, this; /// will record the smallest size attained.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/Analysis.cpp:370,update,updated,370,interpreter/llvm-project/llvm/lib/CodeGen/Analysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/Analysis.cpp,1,['update'],['updated']
Deployability,"/// Looks for the specified configuration file.; ///; /// \param[in] FileName Name of the file to search for.; /// \param[out] FilePath File absolute path, if it was found.; /// \return True if file was found.; ///; /// If the specified file name contains a directory separator, it is searched; /// for by its absolute path. Otherwise looks for file sequentially in; /// directories specified by SearchDirs field.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:28,configurat,configuration,28,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,1,['configurat'],['configuration']
Deployability,"/// Looks through shuffles trying to reduce final number of shuffles in the; /// code. The function looks through the previously emitted shuffle; /// instructions and properly mark indices in mask as undef.; /// For example, given the code; /// \code; /// %s1 = shufflevector <2 x ty> %0, poison, <1, 0>; /// %s2 = shufflevector <2 x ty> %1, poison, <1, 0>; /// \endcode; /// and if need to emit shuffle of %s1 and %s2 with mask <1, 0, 3, 2>, it will; /// look through %s1 and %s2 and select vectors %0 and %1 with mask; /// <0, 1, 2, 3> for the shuffle.; /// If 2 operands are of different size, the smallest one will be resized and; /// the mask recalculated properly.; /// For example, given the code; /// \code; /// %s1 = shufflevector <2 x ty> %0, poison, <1, 0, 1, 0>; /// %s2 = shufflevector <2 x ty> %1, poison, <1, 0, 1, 0>; /// \endcode; /// and if need to emit shuffle of %s1 and %s2 with mask <1, 0, 5, 4>, it will; /// look through %s1 and %s2 and select vectors %0 and %1 with mask; /// <0, 1, 2, 3> for the shuffle.; /// So, it tries to transform permutations to simple vector merge, if; /// possible.; /// \param V The input vector which must be shuffled using the given \p Mask.; /// If the better candidate is found, \p V is set to this best candidate; /// vector.; /// \param Mask The input mask for the shuffle. If the best candidate is found; /// during looking-through-shuffles attempt, it is updated accordingly.; /// \param SinglePermute true if the shuffle operation is originally a; /// single-value-permutation. In this case the look-through-shuffles procedure; /// may look for resizing shuffles as the best candidates.; /// \return true if the shuffle results in the non-resizing identity shuffle; /// (and thus can be ignored), false - otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:1415,update,updated,1415,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['update'],['updated']
Deployability,/// Lower llvm.experimental.patchpoint directly to its target opcode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:28,patch,patchpoint,28,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['patch'],['patchpoint']
Deployability,"/// LowerMatrixIntrinsics contains the methods used to lower matrix intrinsics.; ///; /// Currently, the lowering for each matrix intrinsic is done as follows:; /// 1. Propagate the shape information from intrinsics to connected; /// instructions.; /// 2. Lower instructions with shape information (assuming column-major layout).; /// The lowering works similarly using row-major layout.; /// 2.1. Get column vectors for each argument. If we already lowered the; /// definition of an argument, use the produced column vectors directly.; /// If not, split the operand vector containing an embedded matrix into; /// a set of column vectors,; /// 2.2. Lower the instruction in terms of column major operations, which; /// yields a set of column vectors containing result matrix. Note that we; /// lower all instructions that have shape information. Besides the; /// intrinsics, this includes stores for example.; /// 2.3. Update uses of the lowered instruction. If we have shape information; /// for a user, there is nothing to do, as we will look up the result; /// column matrix when lowering the user. For other uses, we embed the; /// result matrix in a flat vector and update the use.; /// 2.4. Cache the result column matrix for the instruction we lowered; /// 3. After we lowered all instructions in a function, remove the now; /// obsolete instructions.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp:919,Update,Update,919,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp,2,"['Update', 'update']","['Update', 'update']"
Deployability,/// Lowers generic MASSV entries to PowerPC subtarget-specific MASSV entries.; /// e.g.: __sind2_massv --> __sind2_P9 for a Power9 subtarget.; /// Both function prototypes and their callsites are updated during lowering.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLowerMASSVEntries.cpp:196,update,updated,196,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLowerMASSVEntries.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLowerMASSVEntries.cpp,1,['update'],['updated']
Deployability,/// Lowers scalar math functions to scalar MASS functions.; /// e.g.: tanh --> __xl_tanh_finite or __xl_tanh; /// Both function prototype and its callsite is updated during lowering.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCGenScalarMASSEntries.cpp:158,update,updated,158,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCGenScalarMASSEntries.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCGenScalarMASSEntries.cpp,1,['update'],['updated']
Deployability,"/// MI-level Statepoint operands; ///; /// Statepoint operands take the form:; /// <id>, <num patch bytes >, <num call arguments>, <call target>,; /// [call arguments...],; /// <StackMaps::ConstantOp>, <calling convention>,; /// <StackMaps::ConstantOp>, <statepoint flags>,; /// <StackMaps::ConstantOp>, <num deopt args>, [deopt args...],; /// <StackMaps::ConstantOp>, <num gc pointer args>, [gc pointer args...],; /// <StackMaps::ConstantOp>, <num gc allocas>, [gc allocas args...],; /// <StackMaps::ConstantOp>, <num entries in gc map>, [base/derived pairs]; /// base/derived pairs in gc map are logical indices into <gc pointer args>; /// section.; /// All gc pointers assigned to VRegs produce new value (in form of MI Def; /// operand) and are tied to it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h:94,patch,patch,94,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,1,['patch'],['patch']
Deployability,"/// MI-level patchpoint operands.; ///; /// MI patchpoint operations take the form:; /// [<def>], <id>, <numBytes>, <target>, <numArgs>, <cc>, ...; ///; /// IR patchpoint intrinsics do not have the <cc> operand because calling; /// convention is part of the subclass data.; ///; /// SD patchpoint nodes do not have a def operand because it is part of the; /// SDValue.; ///; /// Patchpoints following the anyregcc convention are handled specially. For; /// these, the stack map also records the location of the return value and; /// arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h:13,patch,patchpoint,13,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,5,"['Patch', 'patch']","['Patchpoints', 'patchpoint']"
Deployability,/// MO_GOTPCREL_NORELAX - Same as MO_GOTPCREL except that R_X86_64_GOTPCREL; /// relocations are guaranteed to be emitted by the integrated assembler; /// instead of the relaxable R_X86_64[_REX]_GOTPCRELX relocations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h:129,integrat,integrated,129,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h,1,['integrat'],['integrated']
Deployability,/// MRI contains all the register class/bank information that this; /// pass uses and updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Localizer.h:86,update,updates,86,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Localizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Localizer.h,2,['update'],['updates']
Deployability,/// MSP430 Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430TargetMachine.cpp:31,Configurat,Configuration,31,interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430TargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430TargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,/// MachO deployment target version information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAssembler.h:10,deploy,deployment,10,interpreter/llvm-project/llvm/include/llvm/MC/MCAssembler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAssembler.h,1,['deploy'],['deployment']
Deployability,/// MachO specific deployment target version info.; // A Major version of 0 indicates that no version information was supplied; // and so the corresponding load command should not be emitted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAssembler.h:19,deploy,deployment,19,interpreter/llvm-project/llvm/include/llvm/MC/MCAssembler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAssembler.h,1,['deploy'],['deployment']
Deployability,/// Machine Pipeliner customization,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.h:12,Pipeline,Pipeliner,12,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.h,1,['Pipeline'],['Pipeliner']
Deployability,/// MachineSSAUpdater - This class updates SSA form for a set of virtual; /// registers defined in multiple blocks. This is used when code duplication; /// or another unstructured transformation wants to rewrite a set of uses of one; /// vreg with uses of a set of vregs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineSSAUpdater.h:35,update,updates,35,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineSSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineSSAUpdater.h,1,['update'],['updates']
Deployability,/// MacroUndefined - This hook is called whenever a macro #undef is seen.; /// MI is released immediately following this callback.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/Indexing.cpp:85,release,released,85,interpreter/llvm-project/clang/tools/libclang/Indexing.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/Indexing.cpp,1,['release'],['released']
Deployability,/// Make sure Results are legal and update the translation cache.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp:36,update,update,36,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp,1,['update'],['update']
Deployability,"/// Make sure that the normalization set for a RooAddPdf is always defined when; /// numerically integrating a RooProdPdf where the RooAddPdf is one of the; /// factors. Covers GitHub #11476 and JIRA issue ROOT-9436.; ///; /// Disabled for now because the fix to the bug that is covered by this unit; /// test caused a severe performance problem and was reverted. The performance; /// regression is covered by another unit test in this file, called; /// ""ProjectConditional"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRealIntegral.cxx:97,integrat,integrating,97,roofit/roofitcore/test/testRooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRealIntegral.cxx,1,['integrat'],['integrating']
Deployability,"/// Make sure the offsets are up to date; ///; /// If the offsets need to be updated, this function triggers a likelihood evaluation.; /// The likelihood will make sure the offset is set correctly in their shared_ptr; /// offsets object, that is also shared with possible other LikelihoodWrapper members; /// of MinuitFcnGrad and also the LikelihoodGradientWrapper member. Other necessary; /// synchronization steps are also performed from the Wrapper child classes (e.g.; /// sending the values to workers from MultiProcess::Jobs).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:77,update,updated,77,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,1,['update'],['updated']
Deployability,"/// Manages a sequence of passes over a particular unit of IR.; ///; /// A pass manager contains a sequence of passes to run over a particular unit; /// of IR (e.g. Functions, Modules). It is itself a valid pass over that unit of; /// IR, and when run over some given IR will run each of its contained passes in; /// sequence. Pass managers are the primary and most basic building block of a; /// pass pipeline.; ///; /// When you run a pass manager, you provide an \c AnalysisManager<IRUnitT>; /// argument. The pass manager will propagate that analysis manager to each; /// pass it runs, and will call the analysis manager's invalidation routine with; /// the PreservedAnalyses of each pass it runs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h:402,pipeline,pipeline,402,interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,1,['pipeline'],['pipeline']
Deployability,"/// Manually sets the parent of \p S to \p Parent.; ///; /// If \p S is already in the map, this method will update the mapping.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ParentMap.h:109,update,update,109,interpreter/llvm-project/clang/include/clang/AST/ParentMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ParentMap.h,1,['update'],['update']
Deployability,/// Map DIAssignID -> Instructions with that attachment.; /// Managed by Instruction via Instruction::updateDIAssignIDMapping.; /// Query using the at:: functions defined in DebugInfo.h.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LLVMContextImpl.h:102,update,updateDIAssignIDMapping,102,interpreter/llvm-project/llvm/lib/IR/LLVMContextImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LLVMContextImpl.h,1,['update'],['updateDIAssignIDMapping']
Deployability,/// Map from instruction numbers defined by DBG_PHIs to a record of what that; /// DBG_PHI read and where. Populated and edited during the machine value; /// location problem -- we use LLVMs SSA Updater to fix changes by; /// optimizations that destroy PHI instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h:195,Update,Updater,195,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,1,['Update'],['Updater']
Deployability,"/// Map in-memory field and column IDs to their on-disk counterparts. This function is unconditionally called; /// during header serialization. This function must be manually called after an incremental schema update as page; /// list serialization requires all columns to be mapped.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleSerialize.hxx:210,update,update,210,tree/ntuple/v7/inc/ROOT/RNTupleSerialize.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleSerialize.hxx,1,['update'],['update']
Deployability,"/// Mapping from the already-imported declarations in the ""from""; /// context to the error status of the import of that declaration.; /// This map contains only the declarations that were not correctly; /// imported. The same declaration may or may not be included in; /// ImportedDecls. This map is updated continuously during imports and never; /// cleared (like ImportedDecls).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h:300,update,updated,300,interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,2,"['continuous', 'update']","['continuously', 'updated']"
Deployability,"/// Mapping from the already-imported declarations in the ""to""; /// context to the error status of the import of that declaration.; /// This map contains only the declarations that were not correctly; /// imported. The same declaration may or may not be included in; /// ImportedFromDecls. This map is updated continuously during imports and; /// never cleared (like ImportedFromDecls).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporterSharedState.h:302,update,updated,302,interpreter/llvm-project/clang/include/clang/AST/ASTImporterSharedState.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporterSharedState.h,2,"['continuous', 'update']","['continuously', 'updated']"
Deployability,"/// Maps \p *It to a legal integer.; ///; /// Updates \p CanOutlineWithPrevInstr, \p HaveLegalRange, \p InstrListForMBB,; /// \p UnsignedVecForMBB, \p InstructionIntegerMap, and \p LegalInstrNumber.; ///; /// \returns The integer that \p *It was mapped to.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOutliner.cpp:46,Update,Updates,46,interpreter/llvm-project/llvm/lib/CodeGen/MachineOutliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOutliner.cpp,1,['Update'],['Updates']
Deployability,"/// Maps \p *It to an illegal integer.; ///; /// Updates \p InstrListForMBB, \p UnsignedVecForMBB, and \p; /// IllegalInstrNumber.; ///; /// \returns The integer that \p *It was mapped to.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOutliner.cpp:49,Update,Updates,49,interpreter/llvm-project/llvm/lib/CodeGen/MachineOutliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOutliner.cpp,1,['Update'],['Updates']
Deployability,"/// Mark \p F cold. Based on this assumption, also optimize it for minimum size.; /// If \p UpdateEntryCount is true (set when this is a new split function and; /// module has profile data), set entry count to 0 to ensure treated as cold.; /// Return true if the function is changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/HotColdSplitting.cpp:92,Update,UpdateEntryCount,92,interpreter/llvm-project/llvm/lib/Transforms/IPO/HotColdSplitting.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/HotColdSplitting.cpp,1,['Update'],['UpdateEntryCount']
Deployability,/// Mark pointer symbols associated with the given memory region released; /// in the program state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InnerPointerChecker.cpp:65,release,released,65,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InnerPointerChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InnerPointerChecker.cpp,1,['release'],['released']
Deployability,"/// Match a pattern where a wide type scalar value is loaded by several narrow; /// loads and combined by shifts and ors. Fold it into a single load or a load; /// and a BSWAP if the targets supports it.; ///; /// Assuming little endian target:; /// i8 *a = ...; /// i32 val = a[0] | (a[1] << 8) | (a[2] << 16) | (a[3] << 24); /// =>; /// i32 val = *((i32)a); ///; /// i8 *a = ...; /// i32 val = (a[0] << 24) | (a[1] << 16) | (a[2] << 8) | a[3]; /// =>; /// i32 val = BSWAP(*((i32)a)); ///; /// TODO: This rule matches complex patterns with OR node roots and doesn't; /// interact well with the worklist mechanism. When a part of the pattern is; /// updated (e.g. one of the loads) its direct users are put into the worklist,; /// but the root node of the pattern which triggers the load combine is not; /// necessarily a direct user of the changed node. For example, once the address; /// of t28 load is reassociated load combine won't be triggered:; /// t25: i32 = add t4, Constant:i32<2>; /// t26: i64 = sign_extend t25; /// t27: i64 = add t2, t26; /// t28: i8,ch = load<LD1[%tmp9]> t0, t27, undef:i64; /// t29: i32 = zero_extend t28; /// t32: i32 = shl t29, Constant:i8<8>; /// t33: i32 = or t23, t32; /// As a possible fix visitLoad can check if the load can be a part of a load; /// combine pattern and add corresponding OR roots to the worklist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:650,update,updated,650,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['update'],['updated']
Deployability,"/// Match the index of a gather or scatter operation as an operation; /// with twice the element width and half the number of elements. This is; /// generally profitable (if legal) because these operations are linear; /// in VL, so even if we cause some extract VTYPE/VL toggles, we still; /// come out ahead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:271,toggle,toggles,271,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['toggle'],['toggles']
Deployability,"/// Matches the pattern string against the input buffer \p Buffer.; ///; /// \returns either (1) an error resulting in no match or (2) a match possibly; /// with an error encountered while processing the match.; ///; /// The GlobalVariableTable StringMap in the FileCheckPatternContext class; /// instance provides the current values of FileCheck string variables and is; /// updated if this match defines new values. Likewise, the; /// GlobalNumericVariableTable StringMap in the same class provides the; /// current values of FileCheck numeric variables and is updated if this; /// match defines new numeric values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:376,update,updated,376,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,2,['update'],['updated']
Deployability,"/// Merge Interfaces for the same library. The following library attributes; /// must match.; /// * Install name, Current & Compatibility version,; /// * Two-level namespace enablement, and App extension enablement.; ///; /// \param O The Interface to merge.; /// \return New Interface File that was merged.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h:100,Install,Install,100,interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,1,['Install'],['Install']
Deployability,"/// Merge chain From into chain Into, update the list of active chains,; /// adjacency information, and the corresponding cached values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp:38,update,update,38,interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp,2,['update'],['update']
Deployability,"/// Merge the instructions from SourceRegion.BranchBlock,; /// SourceRegion.BranchTargetBlock, and SourceRegion.FallThroughBlock into; /// TargetRegion.BranchBlock, TargetRegion.BranchTargetBlock and; /// TargetRegion.FallThroughBlock respectively.; ///; /// The successors for blocks in TargetRegion will be updated to use the; /// successors from blocks in SourceRegion. Finally, the blocks in SourceRegion; /// will be removed from the function.; ///; /// A region consists of a BranchBlock, a FallThroughBlock, and a; /// BranchTargetBlock. Branch coalesce works on patterns where the; /// TargetRegion's BranchTargetBlock must also be the SourceRegions's; /// BranchBlock.; ///; /// Before mergeCandidates:; ///; /// +---------------------------+; /// | TargetRegion.BranchBlock |; /// +---------------------------+; /// / |; /// / +--------------------------------+; /// | | TargetRegion.FallThroughBlock |; /// \ +--------------------------------+; /// \ |; /// +----------------------------------+; /// | TargetRegion.BranchTargetBlock |; /// | SourceRegion.BranchBlock |; /// +----------------------------------+; /// / |; /// / +--------------------------------+; /// | | SourceRegion.FallThroughBlock |; /// \ +--------------------------------+; /// \ |; /// +----------------------------------+; /// | SourceRegion.BranchTargetBlock |; /// +----------------------------------+; ///; /// After mergeCandidates:; ///; /// +-----------------------------+; /// | TargetRegion.BranchBlock |; /// | SourceRegion.BranchBlock |; /// +-----------------------------+; /// / |; /// / +---------------------------------+; /// | | TargetRegion.FallThroughBlock |; /// | | SourceRegion.FallThroughBlock |; /// \ +---------------------------------+; /// \ |; /// +----------------------------------+; /// | SourceRegion.BranchTargetBlock |; /// +----------------------------------+; ///; /// \param[in] SourceRegion The candidate to move blocks from; /// \param[in] TargetRegion The candidate to move blo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp:309,update,updated,309,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,1,['update'],['updated']
Deployability,"/// Merge two lists together.; ///; /// Merges \c L and \c R using \c Cmp. To enable stable sorts, always pushes; /// ""equal"" items from L before items from R.; ///; /// \return the first element in the list.; ///; /// \note Completely ignores \a Use::Prev (doesn't read, doesn't update).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Value.h:280,update,update,280,interpreter/llvm-project/llvm/include/llvm/IR/Value.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Value.h,1,['update'],['update']
Deployability,"/// Merge type nullability from for a redeclaration of the same entity,; /// producing the updated type of the redeclared entity.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:91,update,updated,91,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['update'],['updated']
Deployability,"/// Merge with other RHistStatContent, assuming same bin configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:57,configurat,configuration,57,hist/histv7/inc/ROOT/RHistData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx,1,['configurat'],['configuration']
Deployability,"/// Merge with other RHistStatTotalSumOfSquaredWeights data, assuming same bin configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:79,configurat,configuration,79,hist/histv7/inc/ROOT/RHistData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx,1,['configurat'],['configuration']
Deployability,"/// Merge with other RHistStatTotalSumOfWeights data, assuming same bin configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:72,configurat,configuration,72,hist/histv7/inc/ROOT/RHistData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx,1,['configurat'],['configuration']
Deployability,"/// Merge with other `RHistStatUncertainty` data, assuming same bin configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:68,configurat,configuration,68,hist/histv7/inc/ROOT/RHistData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx,1,['configurat'],['configuration']
Deployability,"/// Method to try and mark a result as invalid.; ///; /// When the outer analysis manager detects a change in some underlying; /// unit of the IR, it will call this method on all of the results cached.; ///; /// \p PA is a set of preserved analyses which can be used to avoid; /// invalidation because the pass which changed the underlying IR took care; /// to update or preserve the analysis result in some way.; ///; /// \p Inv is typically a \c AnalysisManager::Invalidator object that can be; /// used by a particular analysis result to discover if other analyses; /// results are also invalidated in the event that this result depends on; /// them. See the documentation in the \c AnalysisManager for more details.; ///; /// \returns true if the result is indeed invalid (the default).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:361,update,update,361,interpreter/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h,1,['update'],['update']
Deployability,"/// Methods with trivial inline returns are convenient points in the common; /// codegen pass pipeline where targets may insert passes. Methods with; /// out-of-line standard implementations are major CodeGen stages called by; /// addMachinePasses. Some targets may override major stages when inserting; /// passes is insufficient, but maintaining overriden stages is more work.; ///; /// addMachineSSAOptimization - Add standard passes that optimize machine; /// instructions in SSA form.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:94,pipeline,pipeline,94,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,1,['pipeline'],['pipeline']
Deployability,"/// Methods with trivial inline returns are convenient points in the common; /// codegen pass pipeline where targets may insert passes. Methods with; /// out-of-line standard implementations are major CodeGen stages called by; /// addMachinePasses. Some targets may override major stages when inserting; /// passes is insufficient, but maintaining overriden stages is more work.; ///; /// addPreISelPasses - This method should add any ""last minute"" LLVM->LLVM; /// passes (which are run just before instruction selector).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h:94,pipeline,pipeline,94,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,1,['pipeline'],['pipeline']
Deployability,"/// Minimal configuration struct to steer the evaluation of a single node with; /// the RooBatchCompute library.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:12,configurat,configuration,12,roofit/batchcompute/res/RooBatchCompute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h,1,['configurat'],['configuration']
Deployability,/// Mips Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsTargetMachine.cpp:29,Configurat,Configuration,29,interpreter/llvm-project/llvm/lib/Target/Mips/MipsTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsTargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,"/// Modifies the canonical loop to be a dynamically-scheduled workshare loop.; ///; /// This takes a \p LoopInfo representing a canonical loop, such as the one; /// created by \p createCanonicalLoop and emits additional instructions to; /// turn it into a workshare loop. In particular, it calls to an OpenMP; /// runtime function in the preheader to obtain, and then in each iteration; /// to update the loop counter.; ///; /// \param DL Debug location for instructions added for the; /// workshare-loop construct itself.; /// \param CLI A descriptor of the canonical loop to workshare.; /// \param AllocaIP An insertion point for Alloca instructions usable in the; /// preheader of the loop.; /// \param SchedType Type of scheduling to be passed to the init function.; /// \param NeedsBarrier Indicates whether a barrier must be insterted after; /// the loop.; /// \param Chunk The size of loop chunk considered as a unit when; /// scheduling. If \p nullptr, defaults to 1.; ///; /// \returns Point where to insert code after the workshare construct.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:394,update,update,394,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['update'],['update']
Deployability,"/// Modifies the canonical loop to be a statically-scheduled workshare loop.; ///; /// This takes a \p LoopInfo representing a canonical loop, such as the one; /// created by \p createCanonicalLoop and emits additional instructions to; /// turn it into a workshare loop. In particular, it calls to an OpenMP; /// runtime function in the preheader to obtain the loop bounds to be used in; /// the current thread, updates the relevant instructions in the canonical; /// loop and calls to an OpenMP runtime finalization function after the loop.; ///; /// \param DL Debug location for instructions added for the; /// workshare-loop construct itself.; /// \param CLI A descriptor of the canonical loop to workshare.; /// \param AllocaIP An insertion point for Alloca instructions usable in the; /// preheader of the loop.; /// \param NeedsBarrier Indicates whether a barrier must be inserted after; /// the loop.; ///; /// \returns Point where to insert code after the workshare construct.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:412,update,updates,412,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['update'],['updates']
Deployability,"/// Modifies the canonical loop to be a workshare loop.; ///; /// This takes a \p LoopInfo representing a canonical loop, such as the one; /// created by \p createCanonicalLoop and emits additional instructions to; /// turn it into a workshare loop. In particular, it calls to an OpenMP; /// runtime function in the preheader to obtain the loop bounds to be used in; /// the current thread, updates the relevant instructions in the canonical; /// loop and calls to an OpenMP runtime finalization function after the loop.; ///; /// The concrete transformation is done by applyStaticWorkshareLoop,; /// applyStaticChunkedWorkshareLoop, or applyDynamicWorkshareLoop, depending; /// on the value of \p SchedKind and \p ChunkSize.; ///; /// \param DL Debug location for instructions added for the; /// workshare-loop construct itself.; /// \param CLI A descriptor of the canonical loop to workshare.; /// \param AllocaIP An insertion point for Alloca instructions usable in the; /// preheader of the loop.; /// \param NeedsBarrier Indicates whether a barrier must be insterted after; /// the loop.; /// \param SchedKind Scheduling algorithm to use.; /// \param ChunkSize The chunk size for the inner loop.; /// \param HasSimdModifier Whether the simd modifier is present in the; /// schedule clause.; /// \param HasMonotonicModifier Whether the monotonic modifier is present in; /// the schedule clause.; /// \param HasNonmonotonicModifier Whether the nonmonotonic modifier is; /// present in the schedule clause.; /// \param HasOrderedClause Whether the (parameterless) ordered clause is; /// present.; /// \param LoopType Information about type of loop worksharing.; /// It corresponds to type of loop workshare OpenMP pragma.; ///; /// \returns Point where to insert code after the workshare construct.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:391,update,updates,391,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['update'],['updates']
Deployability,"/// Modify anything using 'From' to use 'To' instead.; /// This can cause recursive merging of nodes in the DAG. Use the first; /// version if 'From' is known to have a single result, use the second; /// if you have two nodes with identical results (or if 'To' has a superset; /// of the results of 'From'), use the third otherwise.; ///; /// These methods all take an optional UpdateListener, which (if not null) is; /// informed about nodes that are deleted and modified due to recursive; /// changes in the dag.; ///; /// These functions only replace all existing uses. It's possible that as; /// these replacements are being performed, CSE may cause the From node; /// to be given new uses. These new uses of From are left in place, and; /// not automatically transferred to To.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h:378,Update,UpdateListener,378,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,1,['Update'],['UpdateListener']
Deployability,"/// MorphNodeTo - This *mutates* the specified node to have the specified; /// return type, opcode, and operands.; ///; /// Note that MorphNodeTo returns the resultant node. If there is already a; /// node of the specified opcode and operands, it returns that node instead of; /// the current one. Note that the SDLoc need not be the same.; ///; /// Using MorphNodeTo is faster than creating a new node and swapping it in; /// with ReplaceAllUsesWith both because it often avoids allocating a new; /// node, and because it doesn't require CSE recalculation for any of; /// the node's users.; ///; /// However, note that MorphNodeTo recursively deletes dead nodes from the DAG.; /// As a consequence it isn't appropriate to use from within the DAG combiner or; /// the legalizer which maintain worklists that would need to be updated when; /// deleting things.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:825,update,updated,825,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['update'],['updated']
Deployability,"/// Move NumOps MachineOperands from Src to Dst, with support for overlapping; /// ranges. If MRI is non-null also update use-def chains.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineInstr.cpp:115,update,update,115,interpreter/llvm-project/llvm/lib/CodeGen/MachineInstr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineInstr.cpp,1,['update'],['update']
Deployability,/// Move \p Child to \p NewParent by manipulating Children vectors.; ///; /// Note: This is an incomplete operation that does not update the depth of; /// the subtree.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericCycleInfo.h:130,update,update,130,interpreter/llvm-project/llvm/include/llvm/ADT/GenericCycleInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericCycleInfo.h,1,['update'],['update']
Deployability,/// Move an instruction and update register pressure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:28,update,update,28,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,2,['update'],['update']
Deployability,/// Move node N in the AllNodes list to be immediately; /// before the given iterator Position. This may be used to update the; /// topological ordering when the list of nodes is modified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h:116,update,update,116,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,1,['update'],['update']
Deployability,/// Move the calls in RetainsToMove and ReleasesToMove.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:40,Release,ReleasesToMove,40,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['Release'],['ReleasesToMove']
Deployability,"/// NOTE: if you change this version you also need to update RTFNTuple::fClassVersion in RMiniFile.cxx",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTuple.hxx:54,update,update,54,tree/ntuple/v7/inc/ROOT/RNTuple.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTuple.hxx,1,['update'],['update']
Deployability,"/// NodeDeleted - Handle nodes deleted from the graph. If the node being; /// deleted is the current ISelPosition node, update ISelPosition.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:120,update,update,120,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['update'],['update']
Deployability,"/// Normalize probabilities of all successors so that the sum of them becomes; /// one. This is usually done when the current update on this MBB is done, and; /// the sum of its successors' probabilities is not guaranteed to be one. The; /// user is responsible for the correct use of this function.; /// MBB::removeSuccessor() has an option to do this automatically.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:126,update,update,126,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,1,['update'],['update']
Deployability,"/// Note: The correctness of this analysis depends on the fact that the; /// following 2 sets will stop changing after some point.; /// ""Change"" here means that their size changes.; /// The size of each set is monotonically increasing; /// (we only add items to them) and it is upper bounded by the number of; /// instructions in the processed function (we can never save more; /// elements in either set than this number). Hence, at some point,; /// they will stop increasing.; /// Consequently, at some point, both sets will have stopped; /// changing, effectively making the analysis reach a fixpoint.; /// Note: These 2 sets are disjoint and an instruction can be considered; /// one of 3 things:; /// 1) Known to cause UB (AAUndefinedBehavior could prove it) and put it in; /// the KnownUBInsts set.; /// 2) Assumed to cause UB (in every updateImpl, AAUndefinedBehavior; /// has a reason to assume it).; /// 3) Assumed to not cause UB. very other instruction - AAUndefinedBehavior; /// could not find a reason to assume or prove that it can cause UB,; /// hence it assumes it doesn't. We have a set for these instructions; /// so that we don't reprocess them in every update.; /// Note however that instructions in this set may cause UB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:843,update,updateImpl,843,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,2,['update'],"['update', 'updateImpl']"
Deployability,"/// Notifies the target JITDylib that the given symbols have been resolved.; /// This will update the given symbols' addresses in the JITDylib, and notify; /// any pending queries on the given symbols of their resolution. The given; /// symbols must be ones covered by this MaterializationResponsibility; /// instance. Individual calls to this method may resolve a subset of the; /// symbols, but all symbols must have been resolved prior to calling emit.; ///; /// This method will return an error if any symbols being resolved have been; /// moved to the error state due to the failure of a dependency. If this; /// method returns an error then clients should log it and call; /// failMaterialize. If no dependencies have been registered for the; /// symbols covered by this MaterializationResponsibility then this method; /// is guaranteed to return Error::success() and can be wrapped with cantFail.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Core.h:91,update,update,91,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Core.h,1,['update'],['update']
Deployability,/// Notifies this tracking that we are going to insert a new instruction \p; /// Inst to the basic block \p BB. It makes all necessary updates to internal; /// caches to keep them consistent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h:135,update,updates,135,interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h,1,['update'],['updates']
Deployability,/// Notifies this tracking that we are going to remove the instruction \p Inst; /// It makes all necessary updates to internal caches to keep them consistent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h:107,update,updates,107,interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h,1,['update'],['updates']
Deployability,/// Notifies this tracking that we are going to replace all uses of \p Inst.; /// It makes all necessary updates to internal caches to keep them consistent.; /// Should typically be called before a RAUW.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h:105,update,updates,105,interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h,1,['update'],['updates']
Deployability,/// Notify MachineSchedStrategy that ScheduleDAGMI has scheduled an; /// instruction and updated scheduled/remaining flags in the DAG nodes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:89,update,updated,89,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['update'],['updated']
Deployability,/// Notify the class that an eligible SMF has been added.; /// This updates triviality and destructor based properties of the class accordingly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h:68,update,updates,68,interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,1,['update'],['updates']
Deployability,/// Notify this strategy that all roots have been released (including those; /// that depend on EntrySU or ExitSU).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:50,release,released,50,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['release'],['released']
Deployability,"/// Number of logical and physical columns; updated by the descriptor builder when columns are added",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleDescriptor.hxx:44,update,updated,44,tree/ntuple/v7/inc/ROOT/RNTupleDescriptor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleDescriptor.hxx,1,['update'],['updated']
Deployability,"/// Number of points used by current integration rule. \see SetNPoints().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:37,integrat,integration,37,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,1,['integrat'],['integration']
Deployability,"/// OBSOLETED - Used for stack based JavaScript calls; // WebKit_JS = 12,; /// Used for dynamic register based calls (e.g. stackmap and patchpoint; /// intrinsics).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/CallingConv.h:136,patch,patchpoint,136,interpreter/llvm-project/llvm/include/llvm/IR/CallingConv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/CallingConv.h,1,['patch'],['patchpoint']
Deployability,/// Object returned by analyzeLoopForPipelining. Allows software pipelining; /// implementations to query attributes of the loop being pipelined and to; /// apply target-specific updates to the loop once pipelining is complete.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:135,pipeline,pipelined,135,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,2,"['pipeline', 'update']","['pipelined', 'updates']"
Deployability,/// Object streamers require the integrated assembler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCObjectStreamer.h:33,integrat,integrated,33,interpreter/llvm-project/llvm/include/llvm/MC/MCObjectStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCObjectStreamer.h,1,['integrat'],['integrated']
Deployability,/// Object that stores strings read from configuration file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:41,configurat,configuration,41,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['configurat'],['configuration']
Deployability,"/// Observe - Update liveness information to account for the current; /// instruction, which will not be scheduled.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:14,Update,Update,14,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,2,['Update'],['Update']
Deployability,/// Obtain the sub-arch configuration for a given Arm CPU model.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/aarch32.h:24,configurat,configuration,24,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/aarch32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/aarch32.h,1,['configurat'],['configuration']
Deployability,/// Offsets inside patch records are updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerCompileUnit.h:19,patch,patch,19,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerCompileUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerCompileUnit.h,2,"['patch', 'update']","['patch', 'updated']"
Deployability,"/// Offsets to the stored exprs.; /// This enumeration contains offsets to all the pointers to children; /// expressions stored in OMPLoopDirective.; /// The first 9 children are necessary for all the loop directives,; /// the next 8 are specific to the worksharing ones, and the next 11 are; /// used for combined constructs containing two pragmas associated to loops.; /// After the fixed children, three arrays of length NumAssociatedLoops are; /// allocated: loop counters, their updates and final values.; /// PrevLowerBound and PrevUpperBound are used to communicate blocking; /// information in composite constructs which require loop blocking; /// DistInc is used to generate the increment expression for the distribute; /// loop when combined with a further nested loop; /// PrevEnsureUpperBound is used as the EnsureUpperBound expression for the; /// for loop when combined with a previous distribute loop in the same pragma; /// (e.g. 'distribute parallel for'); ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:484,update,updates,484,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['update'],['updates']
Deployability,"/// Old node has been deleted, and New is to be used in its place, update the; /// ExternalCallingNode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraph.h:67,update,update,67,interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraph.h,1,['update'],['update']
Deployability,/// Only the llvm-as tool may set this to false to bypass; /// UpgradeDebuginfo so it can generate broken bitcode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/AsmParser/LLParser.h:63,Upgrade,UpgradeDebuginfo,63,interpreter/llvm-project/llvm/include/llvm/AsmParser/LLParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/AsmParser/LLParser.h,1,['Upgrade'],['UpgradeDebuginfo']
Deployability,"/// Opens the input file for reading and the output file for writing (update).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx:70,update,update,70,tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx,1,['update'],['update']
Deployability,/// Option names for limiting the codegen pipeline.; /// Those are used in error reporting and we didn't want; /// to duplicate their names all over the place.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:42,pipeline,pipeline,42,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,1,['pipeline'],['pipeline']
Deployability,/// Overload that takes an explicit value \p OldValue for when the value in; /// \p MLoc has changed and the TransferTracker's locations have not been; /// updated yet.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:156,update,updated,156,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['update'],['updated']
Deployability,/// P is used to update the analysis passes as applicable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h:17,update,update,17,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h,1,['update'],['update']
Deployability,"/// PHINodesToUpdate - A list of phi instructions whose operand list will; /// be updated after processing the current basic block.; /// TODO: This isn't per-function state, it's per-basic-block state. But; /// there's no other convenient place for it to live right now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FunctionLoweringInfo.h:82,update,updated,82,interpreter/llvm-project/llvm/include/llvm/CodeGen/FunctionLoweringInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FunctionLoweringInfo.h,1,['update'],['updated']
Deployability,/// PPC Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.cpp:28,Configurat,Configuration,28,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,/// PPC970_Mask/Shift - This is a bitmask that selects the pipeline type that; /// an instruction is issued to.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h:59,pipeline,pipeline,59,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h,1,['pipeline'],['pipeline']
Deployability,"/// Padding used by the derived classes to store various bits. If you; /// need to add some data here, shrink this padding and add your data; /// above. NumOverloadExprBits also needs to be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:190,update,updated,190,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['update'],['updated']
Deployability,"/// ParamVarRegion - Represents a region for paremters. Only parameters of the; /// function in the current stack frame are represented as `ParamVarRegion`s.; /// Parameters of top-level analyzed functions as well as captured paremeters; /// by lambdas and blocks are repesented as `VarRegion`s.; // FIXME: `ParamVarRegion` only supports parameters of functions, C++; // constructors, blocks and Objective-C methods with existing `Decl`. Upon; // implementing stack frame creations for functions without decl (functions; // passed by unknown function pointer) methods of `ParamVarRegion` must be; // updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:600,update,updated,600,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,1,['update'],['updated']
Deployability,"/// Parse \p Input as function head.; ///; /// Parse one line of \p Input, and update function name in \p FName,; /// function's total sample count in \p NumSamples, function's entry; /// count in \p NumHeadSamples.; ///; /// \returns true if parsing is successful.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/SampleProfReader.cpp:79,update,update,79,interpreter/llvm-project/llvm/lib/ProfileData/SampleProfReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/SampleProfReader.cpp,1,['update'],['update']
Deployability,"/// Parse a configuration macro declaration.; ///; /// module-declaration:; /// 'config_macros' attributes[opt] config-macro-list?; ///; /// config-macro-list:; /// identifier (',' identifier)?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/ModuleMap.cpp:12,configurat,configuration,12,interpreter/llvm-project/clang/lib/Lex/ModuleMap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/ModuleMap.cpp,1,['configurat'],['configuration']
Deployability,"/// Parse a textual alias analysis pipeline into the provided AA manager.; ///; /// The format of the textual AA pipeline is a comma separated list of AA; /// pass names:; ///; /// basic-aa,globals-aa,...; ///; /// The AA manager is set up such that the provided alias analyses are tried; /// in the order specified. See the \c AAManaager documentation for details; /// about the logic used. This routine just provides the textual mapping; /// between AA names and the analyses to register with the manager.; ///; /// Returns false if the text cannot be parsed cleanly. The specific state of; /// the \p AA manager is unspecified if such an error is encountered and this; /// returns false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:35,pipeline,pipeline,35,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],['pipeline']
Deployability,"/// Parse a textual pass pipeline description into a \c; /// ModulePassManager.; ///; /// The format of the textual pass pipeline description looks something like:; ///; /// module(function(instcombine,sroa),dce,cgscc(inliner,function(...)),...); ///; /// Pass managers have ()s describing the nest structure of passes. All passes; /// are comma separated. As a special shortcut, if the very first pass is not; /// a module pass (as a module pass manager is), this will automatically form; /// the shortest stack of pass managers that allow inserting that first pass.; /// So, assuming function passes 'fpassN', CGSCC passes 'cgpassN', and loop; /// passes 'lpassN', all of these are valid:; ///; /// fpass1,fpass2,fpass3; /// cgpass1,cgpass2,cgpass3; /// lpass1,lpass2,lpass3; ///; /// And they are equivalent to the following (resp.):; ///; /// module(function(fpass1,fpass2,fpass3)); /// module(cgscc(cgpass1,cgpass2,cgpass3)); /// module(function(loop(lpass1,lpass2,lpass3))); ///; /// This shortcut is especially useful for debugging and testing small pass; /// combinations.; ///; /// The sequence of passes aren't necessarily the exact same kind of pass.; /// You can mix different levels implicitly if adaptor passes are defined to; /// make them work. For example,; ///; /// mpass1,fpass1,fpass2,mpass2,lpass1; ///; /// This pipeline uses only one pass manager: the top-level module manager.; /// fpass1,fpass2 and lpass1 are added into the top-level module manager; /// using only adaptor passes. No nested function/loop pass managers are; /// added. The purpose is to allow easy pass testing when the user; /// specifically want the pass to run under a adaptor directly. This is; /// preferred when a pipeline is largely of one type, but one or just a few; /// passes are of different types(See PassBuilder.cpp for examples).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:25,pipeline,pipeline,25,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,4,['pipeline'],['pipeline']
Deployability,"/// Parse an XCOFF Traceback Table from \a Ptr with \a Size bytes.; /// Returns an XCOFFTracebackTable upon successful parsing, otherwise an; /// Error is returned.; ///; /// \param[in] Ptr; /// A pointer that points just past the initial 4 bytes of zeros at the; /// beginning of an XCOFF Traceback Table.; ///; /// \param[in, out] Size; /// A pointer that points to the length of the XCOFF Traceback Table.; /// If the XCOFF Traceback Table is not parsed successfully or there are; /// extra bytes that are not recognized, \a Size will be updated to be the; /// size up to the end of the last successfully parsed field of the table.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h:541,update,updated,541,interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h,1,['update'],['updated']
Deployability,"/// Parse and store a sequence of CFI instructions from Data,; /// starting at *Offset and ending at EndOffset. *Offset is updated; /// to EndOffset upon successful parsing, or indicates the offset; /// where a problem occurred in case an error is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugFrame.h:123,update,updated,123,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugFrame.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugFrame.h,1,['update'],['updated']
Deployability,"/// Parse configuration from YAML-formatted text.; ///; /// Style->Language is used to get the base style, if the ``BasedOnStyle``; /// option is present.; ///; /// The FormatStyleSet of Style is reset.; ///; /// When ``BasedOnStyle`` is not present, options not present in the YAML; /// document, are retained in \p Style.; ///; /// If AllowUnknownOptions is true, no errors are emitted if unknown; /// format options are occurred.; ///; /// If set all diagnostics are emitted through the DiagHandler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:10,configurat,configuration,10,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['configurat'],['configuration']
Deployability,"/// Parse map-type in map clause.; /// map([ [map-type-modifier[,] [map-type-modifier[,] ...] map-type : ] list); /// where, map-type ::= to | from | tofrom | alloc | release | delete",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp:167,release,release,167,interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,1,['release'],['release']
Deployability,"/// Parse the information in the CFIProgram and update the CurrRow object; /// that the state machine describes.; ///; /// This is an internal implementation that emulates the state machine; /// described in the DWARF Call Frame Information opcodes and will push; /// CurrRow onto the Rows container when needed.; ///; /// \param CFIP the CFI program that contains the opcodes from a CIE or FDE.; ///; /// \param CurrRow the current row to modify while parsing the state machine.; ///; /// \param InitialLocs If non-NULL, we are parsing a FDE and this contains; /// the initial register locations from the CIE. If NULL, then a CIE's; /// opcodes are being parsed and this is not needed. This is used for the; /// DW_CFA_restore and DW_CFA_restore_extended opcodes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugFrame.h:48,update,update,48,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugFrame.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugFrame.h,1,['update'],['update']
Deployability,"/// Parses and updates \p RemainingExpr for a binary operation at line; /// \p LineNumber, or before input is parsed if \p LineNumber is None. The; /// left operand of this binary operation is given in \p LeftOp and \p Expr; /// holds the string for the full expression, including the left operand.; /// Parameter \p IsLegacyLineExpr indicates whether we are parsing a legacy; /// @LINE expression. Parameter \p Context points to the class instance; /// holding the live string and numeric variables. \returns the class; /// representing the binary operation in the AST of the expression, or an; /// error holding a diagnostic against \p SM otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:15,update,updates,15,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,1,['update'],['updates']
Deployability,/// Parsing of OpenMP clauses.; ///; /// clause:; /// if-clause | final-clause | num_threads-clause | safelen-clause |; /// default-clause | private-clause | firstprivate-clause | shared-clause; /// | linear-clause | aligned-clause | collapse-clause | bind-clause |; /// lastprivate-clause | reduction-clause | proc_bind-clause |; /// schedule-clause | copyin-clause | copyprivate-clause | untied-clause |; /// mergeable-clause | flush-clause | read-clause | write-clause |; /// update-clause | capture-clause | seq_cst-clause | device-clause |; /// simdlen-clause | threads-clause | simd-clause | num_teams-clause |; /// thread_limit-clause | priority-clause | grainsize-clause |; /// nogroup-clause | num_tasks-clause | hint-clause | to-clause |; /// from-clause | is_device_ptr-clause | task_reduction-clause |; /// in_reduction-clause | allocator-clause | allocate-clause |; /// acq_rel-clause | acquire-clause | release-clause | relaxed-clause |; /// depobj-clause | destroy-clause | detach-clause | inclusive-clause |; /// exclusive-clause | uses_allocators-clause | use_device_addr-clause |; /// has_device_addr; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp:479,update,update-clause,479,interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,2,"['release', 'update']","['release-clause', 'update-clause']"
Deployability,"/// Parsing of declarative or executable OpenMP directives.; ///; /// threadprivate-directive:; /// annot_pragma_openmp 'threadprivate' simple-variable-list; /// annot_pragma_openmp_end; ///; /// allocate-directive:; /// annot_pragma_openmp 'allocate' simple-variable-list; /// annot_pragma_openmp_end; ///; /// declare-reduction-directive:; /// annot_pragma_openmp 'declare' 'reduction' '(' <reduction_id> ':'; /// <type> {',' <type>} ':' <expression> ')' ['initializer' '('; /// ('omp_priv' '=' <expression>|<function_call>) ')']; /// annot_pragma_openmp_end; ///; /// declare-mapper-directive:; /// annot_pragma_openmp 'declare' 'mapper' '(' [<mapper-identifer> ':']; /// <type> <var> ')' [<clause>[[,] <clause>] ... ]; /// annot_pragma_openmp_end; ///; /// executable-directive:; /// annot_pragma_openmp 'parallel' | 'simd' | 'for' | 'sections' |; /// 'section' | 'single' | 'master' | 'critical' [ '(' <name> ')' ] |; /// 'parallel for' | 'parallel sections' | 'parallel master' | 'task' |; /// 'taskyield' | 'barrier' | 'taskwait' | 'flush' | 'ordered' | 'error'; /// | 'atomic' | 'for simd' | 'parallel for simd' | 'target' | 'target; /// data' | 'taskgroup' | 'teams' | 'taskloop' | 'taskloop simd' |; /// 'master taskloop' | 'master taskloop simd' | 'parallel master; /// taskloop' | 'parallel master taskloop simd' | 'distribute' | 'target; /// enter data' | 'target exit data' | 'target parallel' | 'target; /// parallel for' | 'target update' | 'distribute parallel for' |; /// 'distribute paralle for simd' | 'distribute simd' | 'target parallel; /// for simd' | 'target simd' | 'teams distribute' | 'teams distribute; /// simd' | 'teams distribute parallel for simd' | 'teams distribute; /// parallel for' | 'target teams' | 'target teams distribute' | 'target; /// teams distribute parallel for' | 'target teams distribute parallel; /// for simd' | 'target teams distribute simd' | 'masked' |; /// 'parallel masked' {clause} annot_pragma_openmp_end; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp:1447,update,update,1447,interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,1,['update'],['update']
Deployability,/// Parsing of simple OpenMP clauses like 'default' or 'proc_bind'.; ///; /// default-clause:; /// 'default' '(' 'none' | 'shared' | 'private' | 'firstprivate' ')'; ///; /// proc_bind-clause:; /// 'proc_bind' '(' 'master' | 'close' | 'spread' ')'; ///; /// bind-clause:; /// 'bind' '(' 'teams' | 'parallel' | 'thread' ')'; ///; /// update-clause:; /// 'update' '(' 'in' | 'out' | 'inout' | 'mutexinoutset' |; /// 'inoutset' ')'; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp:332,update,update-clause,332,interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,2,['update'],"['update', 'update-clause']"
Deployability,/// Pass embeds a copy of the module optimized with the provided pass pipeline; /// into a global variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/EmbedBitcodePass.h:70,pipeline,pipeline,70,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/EmbedBitcodePass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/EmbedBitcodePass.h,1,['pipeline'],['pipeline']
Deployability,/// Patch the frame info for an object file and emit it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h:4,Patch,Patch,4,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,1,['Patch'],['Patch']
Deployability,/// Patch the input object file relevant debug_ranges or debug_rnglists; /// entries and emit them in the output file. Update the relevant attributes; /// to point at the new entries.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:4,Patch,Patch,4,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,2,"['Patch', 'Update']","['Patch', 'Update']"
Deployability,/// Patch the replacement so that it is not more restrictive than the value; /// being replaced. It assumes that the replacement does not get moved from; /// its original position.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h:4,Patch,Patch,4,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,1,['Patch'],['Patch']
Deployability,/// Patches for the cloned attributes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.h:4,Patch,Patches,4,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.h,1,['Patch'],['Patches']
Deployability,/// Paths to configuration files used.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:13,configurat,configuration,13,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['configurat'],['configuration']
Deployability,"/// Peels a single block loop. Loop must have two successors, one of which; /// must be itself. Similarly it must have two predecessors, one of which must; /// be itself.; ///; /// The loop block is copied and inserted into the CFG such that two copies of; /// the loop follow on from each other. The copy is inserted either before or; /// after the loop based on Direction.; ///; /// Phis are updated and an unconditional branch inserted at the end of the; /// clone so as to execute a single iteration.; ///; /// The trip count of Loop is not updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineLoopUtils.h:394,update,updated,394,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineLoopUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineLoopUtils.h,2,['update'],['updated']
Deployability,"/// Perform all actions needed to make the code owned by this RuntimeDyld; /// instance executable:; ///; /// 1) Apply relocations.; /// 2) Register EH frames.; /// 3) Update memory permissions*.; ///; /// * Finalization is potentially recursive**, and the 3rd step will only be; /// applied by the outermost call to finalize. This allows different; /// RuntimeDyld instances to share a memory manager without the innermost; /// finalization locking the memory and causing relocation fixup errors in; /// outer instances.; ///; /// ** Recursive finalization occurs when one RuntimeDyld instances needs the; /// address of a symbol owned by some other instance in order to apply; /// relocations.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RuntimeDyld.h:168,Update,Update,168,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RuntimeDyld.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RuntimeDyld.h,1,['Update'],['Update']
Deployability,"/// Perform all the necessary updates, including new PHI-nodes insertion and the; /// requested uses update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SSAUpdaterBulk.cpp:30,update,updates,30,interpreter/llvm-project/llvm/lib/Transforms/Utils/SSAUpdaterBulk.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SSAUpdaterBulk.cpp,2,['update'],"['update', 'updates']"
Deployability,"/// Perform all the necessary updates, including new PHI-nodes insertion and; /// the requested uses update.; ///; /// The function requires dominator tree DT, which is used for computing; /// locations for new phi-nodes insertions. If a nonnull pointer to a vector; /// InsertedPHIs is passed, all the new phi-nodes will be added to this; /// vector.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h:30,update,updates,30,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h,2,['update'],"['update', 'updates']"
Deployability,/// Perform bitcode upgrades on llvm.dbg.* calls.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.h:20,upgrade,upgrades,20,interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.h,1,['upgrade'],['upgrades']
Deployability,"/// Perform name lookup on the given name, classifying it based on; /// the results of name lookup and the following token.; ///; /// This routine is used by the parser to resolve identifiers and help direct; /// parsing. When the identifier cannot be found, this routine will attempt; /// to correct the typo and classify based on the resulting name.; ///; /// \param S The scope in which we're performing name lookup.; ///; /// \param SS The nested-name-specifier that precedes the name.; ///; /// \param Name The identifier. If typo correction finds an alternative name,; /// this pointer parameter will be updated accordingly.; ///; /// \param NameLoc The location of the identifier.; ///; /// \param NextToken The token following the identifier. Used to help; /// disambiguate the name.; ///; /// \param CCC The correction callback, if typo correction is desired.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:610,update,updated,610,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['update'],['updated']
Deployability,"/// Perform semantic analysis for the given function template; /// specialization.; ///; /// This routine performs all of the semantic analysis required for an; /// explicit function template specialization. On successful completion,; /// the function declaration \p FD will become a function template; /// specialization.; ///; /// \param FD the function declaration, which will be updated to become a; /// function template specialization.; ///; /// \param ExplicitTemplateArgs the explicitly-provided template arguments,; /// if any. Note that this may be valid info even when 0 arguments are; /// explicitly provided as in, e.g., \c void sort<>(char*, char*);; /// as it anyway contains info on the angle brackets locations.; ///; /// \param Previous the set of declarations that may be specialized by; /// this function specialization.; ///; /// \param QualifiedFriend whether this is a lookup for a qualified friend; /// declaration with no explicit template argument list that might be; /// befriending a function template specialization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:383,update,updated,383,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['update'],['updated']
Deployability,"/// Perform semantic analysis for the given non-template member; /// specialization.; ///; /// This routine performs all of the semantic analysis required for an; /// explicit member function specialization. On successful completion,; /// the function declaration \p FD will become a member function; /// specialization.; ///; /// \param Member the member declaration, which will be updated to become a; /// specialization.; ///; /// \param Previous the set of declarations, one of which may be specialized; /// by this function specialization; the set will be modified to contain the; /// redeclared member.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:383,update,updated,383,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['update'],['updated']
Deployability,"/// Perform template argument deduction from a function call; /// (C++ [temp.deduct.call]).; ///; /// \param FunctionTemplate the function template for which we are performing; /// template argument deduction.; ///; /// \param ExplicitTemplateArgs the explicit template arguments provided; /// for this call.; ///; /// \param Args the function call arguments; ///; /// \param Specialization if template argument deduction was successful,; /// this will be set to the function template specialization produced by; /// template argument deduction.; ///; /// \param Info the argument will be updated to provide additional information; /// about template argument deduction.; ///; /// \param CheckNonDependent A callback to invoke to check conversions for; /// non-dependent parameters, between deduction and substitution, per DR1391.; /// If this returns true, substitution will be skipped and we return; /// TDK_NonDependentConversionFailure. The callback is passed the parameter; /// types (after substituting explicit template arguments).; ///; /// \returns the result of template argument deduction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:589,update,updated,589,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['update'],['updated']
Deployability,/// Perform the shrink-wrapping analysis and update; /// the MachineFrameInfo attached to \p MF with the results.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp:45,update,update,45,interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp,1,['update'],['update']
Deployability,"/// Perform unqualified name lookup starting from a given; /// scope.; ///; /// Unqualified name lookup (C++ [basic.lookup.unqual], C99 6.2.1) is; /// used to find names within the current scope. For example, 'x' in; /// @code; /// int x;; /// int f() {; /// return x; // unqualified name look finds 'x' in the global scope; /// }; /// @endcode; ///; /// Different lookup criteria can find different names. For example, a; /// particular scope can have both a struct and a function of the same; /// name, and each can be found by certain lookup criteria. For more; /// information about lookup criteria, see the documentation for the; /// class LookupCriteria.; ///; /// @param S The scope from which unqualified name lookup will; /// begin. If the lookup criteria permits, name lookup may also search; /// in the parent scopes.; ///; /// @param [in,out] R Specifies the lookup to perform (e.g., the name to; /// look up and the lookup kind), and is updated with the results of lookup; /// including zero or more declarations and possibly additional information; /// used to diagnose ambiguities.; ///; /// @returns \c true if lookup succeeded and false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp:950,update,updated,950,interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,1,['update'],['updated']
Deployability,"/// Performs an intermediate calculation for deriving the next four SHA-256; /// message elements using previous message elements from the 128-bit; /// vectors of [4 x i32] in \a __X and \a __Y, and returns the result.; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the \c SHA256MSG1 instruction.; ///; /// \param __X; /// A 128-bit vector of [4 x i32] containing previous message elements.; /// \param __Y; /// A 128-bit vector of [4 x i32] containing previous message elements.; /// \returns A 128-bit vector of [4 x i32] containing the updated SHA-256; /// values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/shaintrin.h:568,update,updated,568,interpreter/llvm-project/clang/lib/Headers/shaintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/shaintrin.h,1,['update'],['updated']
Deployability,"/// Performs four iterations of the inner loop of the SHA-1 message digest; /// algorithm using the starting SHA-1 state (A, B, C, D) from the 128-bit; /// vector of [4 x i32] in \a V1 and the next four 32-bit elements of the; /// message from the 128-bit vector of [4 x i32] in \a V2. Note that the; /// SHA-1 state variable E must have already been added to \a V2; /// (\c _mm_sha1nexte_epu32() can perform this step). Returns the updated; /// SHA-1 state (A, B, C, D) as a 128-bit vector of [4 x i32].; ///; /// The SHA-1 algorithm has an inner loop of 80 iterations, twenty each; /// with a different combining function and rounding constant. This; /// intrinsic performs four iterations using a combining function and; /// rounding constant selected by \a M[1:0].; ///; /// \headerfile <immintrin.h>; ///; /// \code; /// __m128i _mm_sha1rnds4_epu32(__m128i V1, __m128i V2, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the \c SHA1RNDS4 instruction.; ///; /// \param V1; /// A 128-bit vector of [4 x i32] containing the initial SHA-1 state.; /// \param V2; /// A 128-bit vector of [4 x i32] containing the next four elements of; /// the message, plus SHA-1 state variable E.; /// \param M; /// An immediate value where bits [1:0] select among four possible; /// combining functions and rounding constants (not specified here).; /// \returns A 128-bit vector of [4 x i32] containing the updated SHA-1 state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/shaintrin.h:433,update,updated,433,interpreter/llvm-project/clang/lib/Headers/shaintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/shaintrin.h,2,['update'],['updated']
Deployability,"/// Performs the CFG manipulation part of versioning the loop including; /// the DominatorTree and LoopInfo updates.; ///; /// The loop that was used to construct the class will be the ""versioned"" loop; /// i.e. the loop that will receive control if all the memchecks pass.; ///; /// This allows the loop transform pass to operate on the same loop regardless; /// of whether versioning was necessary or not:; ///; /// for each loop L:; /// analyze L; /// if versioning is necessary version L; /// transform L",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopVersioning.h:108,update,updates,108,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopVersioning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopVersioning.h,1,['update'],['updates']
Deployability,"/// Performs the final calculation for deriving the next four SHA-1 message; /// elements using previous message elements from the 128-bit vectors of; /// [4 x i32] in \a __X and \a __Y, and returns the result.; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the \c SHA1MSG2 instruction.; ///; /// \param __X; /// A 128-bit vector of [4 x i32] containing an intermediate result.; /// \param __Y; /// A 128-bit vector of [4 x i32] containing previous message values.; /// \returns A 128-bit vector of [4 x i32] containing the updated SHA-1; /// values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/shaintrin.h:553,update,updated,553,interpreter/llvm-project/clang/lib/Headers/shaintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/shaintrin.h,1,['update'],['updated']
Deployability,"/// Performs the final calculation for deriving the next four SHA-256 message; /// elements using previous message elements from the 128-bit vectors of; /// [4 x i32] in \a __X and \a __Y, and returns the result.; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the \c SHA256MSG2 instruction.; ///; /// \param __X; /// A 128-bit vector of [4 x i32] containing an intermediate result.; /// \param __Y; /// A 128-bit vector of [4 x i32] containing previous message values.; /// \returns A 128-bit vector of [4 x i32] containing the updated SHA-256; /// values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/shaintrin.h:557,update,updated,557,interpreter/llvm-project/clang/lib/Headers/shaintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/shaintrin.h,1,['update'],['updated']
Deployability,"/// Performs two rounds of SHA-256 operation using the following inputs: a; /// starting SHA-256 state (C, D, G, H) from the 128-bit vector of; /// [4 x i32] in \a __X; a starting SHA-256 state (A, B, E, F) from the; /// 128-bit vector of [4 x i32] in \a __Y; and a pre-computed sum of the; /// next two message elements (unsigned 32-bit integers) and corresponding; /// rounding constants from the 128-bit vector of [4 x i32] in \a __Z.; /// Returns the updated SHA-256 state (A, B, E, F) as a 128-bit vector of; /// [4 x i32].; ///; /// The SHA-256 algorithm has a core loop of 64 iterations. This intrinsic; /// performs two of those iterations.; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the \c SHA256RNDS2 instruction.; ///; /// \param __X; /// A 128-bit vector of [4 x i32] containing part of the initial SHA-256; /// state.; /// \param __Y; /// A 128-bit vector of [4 x i32] containing part of the initial SHA-256; /// state.; /// \param __Z; /// A 128-bit vector of [4 x i32] containing additional input to the; /// SHA-256 operation.; /// \returns A 128-bit vector of [4 x i32] containing the updated SHA-1 state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/shaintrin.h:455,update,updated,455,interpreter/llvm-project/clang/lib/Headers/shaintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/shaintrin.h,2,['update'],['updated']
Deployability,/// Physical registers that may be modified within a function but are; /// guaranteed to be restored before any uses. This is useful for targets that; /// have call sequences where a GOT register may be updated by the caller; /// prior to a call and is guaranteed to be restored (also by the caller); /// after the call.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h:203,update,updated,203,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,1,['update'],['updated']
Deployability,/// Pipeliner customization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.h:4,Pipeline,Pipeliner,4,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.h,1,['Pipeline'],['Pipeliner']
Deployability,"/// Plotting engine function for internal use; ///; /// Plot ourselves on given frame. If frame contains a histogram, all dimensions of the plotted; /// function that occur in the previously plotted dataset are projected via partial integration,; /// otherwise no projections are performed. Optionally, certain projections can be performed; /// by summing over the values present in a provided dataset ('projData'), to correctly; /// project out data dependents that are not properly described by the PDF (e.g. per-event errors).; ///; /// The functions value can be multiplied with an optional scale factor. The interpretation; /// of the scale factor is unique for generic real functions, for PDFs there are various interpretations; /// possible, which can be selection with 'stype' (see RooAbsPdf::plotOn() for details).; ///; /// The default projection behaviour can be overridden by supplying an optional set of dependents; /// to project via RooFit command arguments.; //_____________________________________________________________________________; // coverity[PASS_BY_VALUE]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:233,integrat,integration,233,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integration']
Deployability,"/// Point debug users of \p From to \p To or salvage them. Use this function; /// only when replacing all uses of \p From with \p To, with a guarantee that; /// \p From is going to be deleted.; ///; /// Follow these rules to prevent use-before-def of \p To:; /// . If \p To is a linked Instruction, set \p DomPoint to \p To.; /// . If \p To is an unlinked Instruction, set \p DomPoint to the Instruction; /// \p To will be inserted after.; /// . If \p To is not an Instruction (e.g a Constant), the choice of; /// \p DomPoint is arbitrary. Pick \p From for simplicity.; ///; /// If a debug user cannot be preserved without reordering variable updates or; /// introducing a use-before-def, it is either salvaged (\ref salvageDebugInfo); /// or deleted. Returns true if any debug users were updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h:643,update,updates,643,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,2,['update'],"['updated', 'updates']"
Deployability,"/// Pointer to the next DomainValue in a chain. When two DomainValues are; /// merged, Victim.Next is set to point to Victor, so old DomainValue; /// references can be updated by following the chain.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h:168,update,updated,168,interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,1,['update'],['updated']
Deployability,"/// Points to the fields in fModel that were added as part of an updater transaction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleModel.hxx:65,update,updater,65,tree/ntuple/v7/inc/ROOT/RNTupleModel.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleModel.hxx,1,['update'],['updater']
Deployability,"/// Points to the projected fields in fModel that were added as part of an updater transaction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleModel.hxx:75,update,updater,75,tree/ntuple/v7/inc/ROOT/RNTupleModel.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleModel.hxx,1,['update'],['updater']
Deployability,"/// Populate the edges of this node if necessary.; ///; /// The first time this is called it will populate the edges for this node; /// in the graph. It does this by scanning the underlying function, so once; /// this is done, any changes to that function must be explicitly reflected; /// in updates to the graph.; ///; /// \returns the populated \c EdgeSequence to simplify walking it.; ///; /// This will not update or re-scan anything if called repeatedly. Instead,; /// the edge sequence is cached and returned immediately on subsequent; /// calls.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:293,update,updates,293,interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,2,['update'],"['update', 'updates']"
Deployability,"/// Post-fixup passes.; ///; /// These passes are called on the graph after block contents has been copied; /// to working memory, and fixups applied. Blocks have been updated to point; /// to their fixed up content.; ///; /// Notable use cases: Testing and validation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h:168,update,updated,168,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h,1,['update'],['updated']
Deployability,/// Post-update expression for the clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:9,update,update,9,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['update'],['update']
Deployability,"/// Postpone the splitting of the given critical; /// edge (\p From, \p To).; ///; /// We do not split the edges on the fly. Indeed, this invalidates; /// the dominance information and thus triggers a lot of updates; /// of that information underneath.; /// Instead, we postpone all the splits after each iteration of; /// the main loop. That way, the information is at least valid; /// for the lifetime of an iteration.; ///; /// \return True if the edge is marked as toSplit, false otherwise.; /// False can be returned if, for instance, this is not profitable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:208,update,updates,208,interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,1,['update'],['updates']
Deployability,/// Prepare all candidates in \p Buckets for update form.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:45,update,update,45,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,1,['update'],['update']
Deployability,"/// Prepare for one chain \p BucketChain, find the best base element and; /// update all other elements in \p BucketChain accordingly.; /// If success, best base element must be stored as the first element of; /// \p BucketChain.; /// Return false if no base element found, otherwise return true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:78,update,update,78,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,1,['update'],['update']
Deployability,"/// Prepare for one chain \p BucketChain, find the best base element and; /// update all other elements in \p BucketChain accordingly.; /// \p Form is used to find the best base element.; /// If success, best base element must be stored as the first element of; /// \p BucketChain.; /// Return false if no base element found, otherwise return true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:78,update,update,78,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,1,['update'],['update']
Deployability,/// Preprocessor callback class that updates a hash value with the names; /// of all macros that have been defined by the translation unit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp:37,update,updates,37,interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,1,['update'],['updates']
Deployability,/// Print information about the detected CUDA installation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h:46,install,installation,46,interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.h,1,['install'],['installation']
Deployability,/// Print information about the detected GCC installation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h:45,install,installation,45,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,1,['install'],['installation']
Deployability,/// Print information about the detected ROCm installation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h:46,install,installation,46,interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,1,['install'],['installation']
Deployability,"/// Print live ranges to the right of an existing line. This assumes the; /// line is not an instruction, so doesn't start or end any live ranges, so; /// we only need to print active ranges or empty columns. If AfterInst is; /// true, this is being printed after the last instruction fed to update(),; /// otherwise this is being printed before it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.cpp:292,update,update,292,interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.cpp,2,['update'],['update']
Deployability,/// Print out timing information and release timers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/PassTimingInfo.cpp:37,release,release,37,interpreter/llvm-project/llvm/lib/IR/PassTimingInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/PassTimingInfo.cpp,1,['release'],['release']
Deployability,"/// Prior to adding the live-out mask to a stackmap or patchpoint; /// instruction, provide the target the opportunity to adjust it (mainly to; /// remove pseudo-registers that should be ignored).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h:55,patch,patchpoint,55,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,1,['patch'],['patchpoint']
Deployability,/// Process PHI node in TailBB by turning it into a copy in PredBB. Remember the; /// source register that's contributed by PredBB and update SSA update map.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp:135,update,update,135,interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,2,['update'],['update']
Deployability,/// Process each machine instruction; /// @param MBB machine basic block; /// @param MBBI current instruction iterator; /// @param NextMBBI next instruction iterator which can be updated; /// @return True when IR is changed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LowerHomogeneousPrologEpilog.cpp:179,update,updated,179,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LowerHomogeneousPrologEpilog.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LowerHomogeneousPrologEpilog.cpp,1,['update'],['updated']
Deployability,"/// Process the given Ops list, which is a list of operands to be added under; /// the given scale, update the given map. This is a helper function for; /// getAddRecExpr. As an example of what it does, given a sequence of operands; /// that would form an add expression like this:; ///; /// m + n + 13 + (A * (o + p + (B * (q + m + 29)))) + r + (-1 * r); ///; /// where A and B are constants, update the map with these values:; ///; /// (m, 1+A*B), (n, 1), (o, A), (p, A), (q, A*B), (r, 0); ///; /// and add 13 + A*B*29 to AccumulatedConstant.; /// This will allow getAddRecExpr to produce this:; ///; /// 13+A*B*29 + n + (m * (1+A*B)) + ((o + p) * A) + (q * A*B); ///; /// This form often exposes folding opportunities that are hidden in; /// the original operand list.; ///; /// Return true iff it appears that any interesting folding opportunities; /// may be exposed. This helps getAddRecExpr short-circuit extra work in; /// the common case where no interesting opportunities are present, and; /// is also used as a check to avoid infinite recursion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:100,update,update,100,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,2,['update'],['update']
Deployability,"/// Process the nodes in the computed order and create the pipelined schedule; /// of the instructions, if possible. Return true if a schedule is found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:59,pipeline,pipelined,59,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['pipeline'],['pipelined']
Deployability,/// ProcessPropertyDecl - Make sure that any user-defined setter/getter methods; /// have the property type and issue diagnostics if they don't.; /// Also synthesize a getter/setter method if none exist (and update the; /// appropriate lookup tables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp:208,update,update,208,interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,1,['update'],['update']
Deployability,"/// Produce a map of the last lexical scope that uses a block, using the; /// scopes DFSOut number. Mapping is block-number to DFSOut.; /// \p EjectionMap Pre-allocated vector in which to install the built ma.; /// \p ScopeToDILocation Mapping of LexicalScopes to their DILocations.; /// \p AssignBlocks Map of blocks where assignments happen for a scope.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h:188,install,install,188,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,1,['install'],['install']
Deployability,/// Produce the code for a CK_ARCConsumeObject. Does a primitive; /// release at the end of the full-expression.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:70,release,release,70,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['release'],['release']
Deployability,/// Produce the code to do a primitive release.; /// [tmp drain];,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:39,release,release,39,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['release'],['release']
Deployability,/// Produce the code to do a primitive release.; /// call void \@objc_autoreleasePoolPop(i8* %ptr),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:39,release,release,39,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['release'],['release']
Deployability,/// Promote linkage of requested record. It is no-op if linkage type is lower; /// than the current assignment.; ///; /// \param R The record to update.; /// \param L Linkage type to update to.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/RecordsSlice.h:145,update,update,145,interpreter/llvm-project/llvm/include/llvm/TextAPI/RecordsSlice.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/RecordsSlice.h,2,['update'],['update']
Deployability,"/// Propagate weights through incoming/outgoing edges.; ///; /// If the weight of a basic block is known, and there is only one edge; /// with an unknown weight, we can calculate the weight of that edge.; ///; /// Similarly, if all the edges have a known count, we can calculate the; /// count of the basic block, if needed.; ///; /// \param F Function to process.; /// \param UpdateBlockCount Whether we should update basic block counts that; /// has already been annotated.; ///; /// \returns True if new weights were assigned to edges or blocks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h:377,Update,UpdateBlockCount,377,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h,2,"['Update', 'update']","['UpdateBlockCount', 'update']"
Deployability,"/// Propagates assumption information from parent functions to all of their; /// successors. An assumption can be propagated if the containing function; /// dominates the called function.; ///; /// We start with a ""known"" set of assumptions already valid for the associated; /// function and an ""assumed"" set that initially contains all possible; /// assumptions. The assumed set is inter-procedurally updated by narrowing its; /// contents as concrete values are known. The concrete values are seeded by the; /// first nodes that are either entries into the call graph, or contains no; /// assumptions. Each node is updated as the intersection of the assumed state; /// with all of its predecessors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:402,update,updated,402,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,2,['update'],['updated']
Deployability,"/// Propgate synthetic entry counts on a callgraph \p CG.; ///; /// This performs a reverse post-order traversal of the callgraph SCC. For each; /// SCC, it first propagates the entry counts to the nodes within the SCC; /// through call edges and updates them in one shot. Then the entry counts are; /// propagated to nodes outside the SCC. This requires \p GraphTraits; /// to have a specialization for \p CallGraphType.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/SyntheticCountsUtils.cpp:247,update,updates,247,interpreter/llvm-project/llvm/lib/Analysis/SyntheticCountsUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/SyntheticCountsUtils.cpp,1,['update'],['updates']
Deployability,/// Provide a type for IRBuilder that drops names in release builds.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:53,release,release,53,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,1,['release'],['release']
Deployability,"/// Provides context on when an inline advisor is constructed in the pipeline; /// (e.g., link phase, inline driver).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h:69,pipeline,pipeline,69,interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h,1,['pipeline'],['pipeline']
Deployability,"/// Query the target what the preferred style of tail folding is.; /// \param IVUpdateMayOverflow Tells whether it is known if the IV update; /// may (or will never) overflow for the suggested VF/UF in the given loop.; /// Targets can use this information to select a more optimal tail folding; /// style. The value conservatively defaults to true, such that no assumptions; /// are made on overflow.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h:134,update,update,134,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,1,['update'],['update']
Deployability,/// Queues an update to the topological ordering to accommodate an edge to; /// be added from SUnit \p X to SUnit \p Y.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:14,update,update,14,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['update'],['update']
Deployability,/// RAII object to mark the start of processing updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:48,update,updates,48,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['update'],['updates']
Deployability,/// RHS binary operation does not have reference to the updated LHS; /// part.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:56,update,updated,56,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['updated']
Deployability,"/// ROOT-9777, cloning a RooWorkspace. The ModelConfig did not get updated; /// when a workspace was cloned, and was hence pointing to a non-existing workspace.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testWorkspace.cxx:67,update,updated,67,roofit/roofitcore/test/testWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testWorkspace.cxx,1,['update'],['updated']
Deployability,/// Reached timeout while waiting for the owner to release the lock.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/LockFileManager.h:51,release,release,51,interpreter/llvm-project/llvm/include/llvm/Support/LockFileManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/LockFileManager.h,1,['release'],['release']
Deployability,"/// Read \p Length bytes from the underlying stream into \p Ref. This is; /// equivalent to calling getUnderlyingStream().slice(Offset, Length).; /// Updates the stream's offset to point after the newly read object. Never; /// causes a copy.; ///; /// \returns a success error code if the data was successfully read, otherwise; /// returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h:150,Update,Updates,150,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,2,['Update'],['Updates']
Deployability,"/// Read \p Size bytes from the underlying stream at the current offset and; /// and set \p Buffer to the resulting data slice. Whether a copy occurs; /// depends on the implementation of the underlying stream. Updates the; /// stream's offset to point after the newly read data.; ///; /// \returns a success error code if the data was successfully read, otherwise; /// returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h:211,Update,Updates,211,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,1,['Update'],['Updates']
Deployability,"/// Read a FixedStreamArray of \p NumItems elements and store the result into; /// \p Array. Updates the stream's offset to point after the newly read; /// array. Never causes a copy (although iterating the elements of the; /// FixedStreamArray may, depending upon the implementation of the underlying; /// stream).; ///; /// \returns a success error code if the data was successfully read, otherwise; /// returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h:93,Update,Updates,93,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,1,['Update'],['Updates']
Deployability,"/// Read a VarStreamArray of size \p Size bytes and store the result into; /// \p Array. Updates the stream's offset to point after the newly read; /// array. Never causes a copy (although iterating the elements of the; /// VarStreamArray may, depending upon the implementation of the underlying; /// stream).; ///; /// \returns a success error code if the data was successfully read, otherwise; /// returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h:89,Update,Updates,89,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,1,['Update'],['Updates']
Deployability,"/// Read a \p Length byte string into \p Dest. Whether a copy occurs depends; /// on the implementation of the underlying stream. Updates the stream's; /// offset to point after the newly read data.; ///; /// \returns a success error code if the data was successfully read, otherwise; /// returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h:130,Update,Updates,130,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,1,['Update'],['Updates']
Deployability,/// Read a global index file for the given directory.; ///; /// \param Path The path to the specific module cache where the module files; /// for the intended configuration reside.; ///; /// \returns A pair containing the global module index (if it exists) and; /// the error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/GlobalModuleIndex.h:159,configurat,configuration,159,interpreter/llvm-project/clang/include/clang/Serialization/GlobalModuleIndex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/GlobalModuleIndex.h,1,['configurat'],['configuration']
Deployability,"/// Read a null terminated string from \p Dest. Whether a copy occurs depends; /// on the implementation of the underlying stream. Updates the stream's; /// offset to point after the newly read data.; ///; /// \returns a success error code if the data was successfully read, otherwise; /// returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h:131,Update,Updates,131,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,1,['Update'],['Updates']
Deployability,"/// Read a universal character name.; ///; /// \param StartPtr The position in the source buffer after the initial '\'.; /// If the UCN is syntactically well-formed (but not; /// necessarily valid), this parameter will be updated to; /// point to the character after the UCN.; /// \param SlashLoc The position in the source buffer of the '\'.; /// \param Result The token being formed. Pass \c nullptr to suppress; /// diagnostics and handle token formation in the caller.; ///; /// \return The Unicode codepoint specified by the UCN, or 0 if the UCN is; /// invalid.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h:222,update,updated,222,interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,1,['update'],['updated']
Deployability,"/// Read an integer of the specified endianness into \p Dest and update the; /// stream's offset. The data is always copied from the stream's underlying; /// buffer into \p Dest. Updates the stream's offset to point after the newly; /// read data.; ///; /// \returns a success error code if the data was successfully read, otherwise; /// returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h:65,update,update,65,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,2,"['Update', 'update']","['Updates', 'update']"
Deployability,"/// Read as much as possible from the underlying string at the current offset; /// without invoking a copy, and set \p Buffer to the resulting data slice.; /// Updates the stream's offset to point after the newly read data.; ///; /// \returns a success error code if the data was successfully read, otherwise; /// returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h:160,Update,Updates,160,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,1,['Update'],['Updates']
Deployability,"/// Read one object from the input buffer, advancing past it.; ///; /// The \p Obj is updated with the kind of the object read, and the; /// corresponding union member is updated.; ///; /// For the collection objects (Array and Map), only the length is read, and; /// the caller must make and additional \c N calls (in the case of Array) or; /// \c N*2 calls (in the case of Map) to \c Read to retrieve the collection; /// elements.; ///; /// \param [out] Obj filled with next object on success.; ///; /// \returns true when object successfully read, false when at end of; /// input (and so \p Obj was not updated), otherwise an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPackReader.h:86,update,updated,86,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPackReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPackReader.h,3,['update'],['updated']
Deployability,"/// Read the entire remainder of the underlying stream into \p Ref. This is; /// equivalent to calling getUnderlyingStream().slice(Offset). Updates the; /// stream's offset to point to the end of the stream. Never causes a copy.; ///; /// \returns a success error code if the data was successfully read, otherwise; /// returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h:140,Update,Updates,140,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamReader.h,1,['Update'],['Updates']
Deployability,"/// Read the frame info stored in the object, and emit the; /// patched frame descriptions for the resulting file.; ///; /// This is actually pretty easy as the data of the CIEs and FDEs can; /// be considered as black boxes and moved as is. The only thing to do; /// is to patch the addresses in the headers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:64,patch,patched,64,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,2,['patch'],"['patch', 'patched']"
Deployability,"/// Reads command line options from the given configuration file.; ///; /// \param [in] CfgFile Path to configuration file.; /// \param [out] Argv Array to which the read options are added.; /// \return true if the file was successfully read.; ///; /// It reads content of the specified file, tokenizes it and expands ""@file""; /// commands resolving file names in them relative to the directory where; /// CfgFilename resides. It also expands ""<CFGDIR>"" to the base path of the; /// current config file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:46,configurat,configuration,46,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,2,['configurat'],['configuration']
Deployability,"/// Rebuild a loop after unswitching removes some subset of blocks and edges.; ///; /// The removal may have removed some child loops entirely but cannot have; /// disturbed any remaining child loops. However, they may need to be hoisted; /// to the parent loop (or to be top-level loops). The original loop may be; /// completely removed.; ///; /// The sibling loops resulting from this update are returned. If the original; /// loop remains a valid loop, it will be the first entry in this list with all; /// of the newly sibling loops following it.; ///; /// Returns true if the loop remains a loop after unswitching, and false if it; /// is no longer a loop after unswitching (and should not continue to be; /// referenced).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:388,update,update,388,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['update']
Deployability,"/// Recognize a memcpy/memmove from a trivially otherwise unused alloca.; /// TODO: This should probably be integrated with visitAllocSites, but that; /// requires a deeper change to allow either unread or unwritten objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp:108,integrat,integrated,108,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,1,['integrat'],['integrated']
Deployability,"/// Recompute the Regs field, and update RegUses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:34,update,update,34,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['update'],['update']
Deployability,/// Record a use of the symbolic value. This use will be updated with a; /// rewritten value when RewriteAllUses is called.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h:57,update,updated,57,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h,2,['update'],['updated']
Deployability,/// Record code for an update to the TU's lexically contained; /// declarations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h:23,update,update,23,interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,1,['update'],['update']
Deployability,/// Record for offsets of DECL_UPDATES records for declarations; /// that were modified after being deserialized and need updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h:122,update,updates,122,interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,1,['update'],['updates']
Deployability,"/// Record of a variable value-assignment, aka a non instruction representation; /// of the dbg.value intrinsic. Features various methods copied across from the; /// Instruction class to aid ease-of-use. DPValue objects should always be; /// linked into a DPMarker's StoredDPValues list. The marker connects a DPValue; /// back to it's position in the BasicBlock.; ///; /// This class inherits from DebugValueUser to allow LLVM's metadata facilities; /// to update our references to metadata beneath our feet.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugProgramInstruction.h:458,update,update,458,interpreter/llvm-project/llvm/include/llvm/IR/DebugProgramInstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugProgramInstruction.h,1,['update'],['update']
Deployability,/// Record of updates for a declaration that was modified after; /// being deserialized. This can occur within DECLTYPES_BLOCK_ID.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h:14,update,updates,14,interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,1,['update'],['updates']
Deployability,"/// Record that \p Reg is in use at scavenging index \p FI. This is for; /// targets which need to directly manage the spilling process, and need to; /// update the scavenger's internal state. It's expected this be called a; /// second time with \p Restore set to a non-null value, so that the; /// externally inserted restore instruction resets the scavenged slot; /// liveness when encountered.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterScavenging.h:154,update,update,154,interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterScavenging.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterScavenging.h,1,['update'],['update']
Deployability,"/// Record that the critical edge (FromBB, ToBB) has been; /// split with NewBB.; /// This is best to use this method instead of directly update the; /// underlying information, because this helps mitigating the; /// number of time the DT information is invalidated.; ///; /// \note Do not use this method with regular edges.; ///; /// \note To benefit from the compile time improvement incurred by this; /// method, the users of this method have to limit the queries to the DT; /// interface between two edges splitting. In other words, they have to; /// pack the splitting of critical edges as much as possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineDominators.h:138,update,update,138,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineDominators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineDominators.h,1,['update'],['update']
Deployability,/// Record the connection between raw pointers referring to a container; /// object's inner buffer and the object's memory region in the program state.; /// Mark potentially invalidated pointers released.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InnerPointerChecker.cpp:195,release,released,195,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InnerPointerChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InnerPointerChecker.cpp,1,['release'],['released']
Deployability,"/// Record the locations of the operands of the provided instruction in a; /// record keyed by the provided label. For instructions w/AnyReg calling; /// convention the return register is also recorded if requested. For; /// STACKMAP, and PATCHPOINT the label is expected to immediately *preceed*; /// lowering of the MI to MCInsts. For STATEPOINT, it expected to; /// immediately *follow*. It's not clear this difference was intentional,; /// but it exists today. ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h:239,PATCH,PATCHPOINT,239,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,1,['PATCH'],['PATCHPOINT']
Deployability,/// Record this SUnit in the HazardRecognizer.; /// Does not update CurCycle.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:61,update,update,61,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['update'],['update']
Deployability,/// Recursively replace the entry basic block of the region.; ///; /// This function replaces the entry basic block with a new basic block. It; /// also updates all child regions that have the same entry basic block as; /// this region.; ///; /// @param NewEntry The new entry basic block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h:153,update,updates,153,interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,1,['update'],['updates']
Deployability,/// Recursively replace the exit basic block of the region.; ///; /// This function replaces the exit basic block with a new basic block. It; /// also updates all child regions that have the same exit basic block as; /// this region.; ///; /// @param NewExit The new exit basic block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h:151,update,updates,151,interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,1,['update'],['updates']
Deployability,/// Recursively update address to Die map.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFUnit.h:16,update,update,16,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFUnit.h,1,['update'],['update']
Deployability,/// Recursively update address to variable Die map.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFUnit.h:16,update,update,16,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFUnit.h,1,['update'],['update']
Deployability,"/// Recursively walk the \p DIE tree and look for DIEs to keep. Store that; /// information in \p CU's DIEInfo.; ///; /// This function is the entry point of the DIE selection algorithm. It is; /// expected to walk the DIE tree in file order and (though the mediation of; /// its helper) call hasValidRelocation() on each DIE that might be a 'root; /// DIE' (See DwarfLinker class comment).; ///; /// While walking the dependencies of root DIEs, this function is also called,; /// but during these dependency walks the file order is not respected. The; /// TF_DependencyWalk flag tells us which kind of traversal we are currently; /// doing.; ///; /// The recursive algorithm is implemented iteratively as a work list because; /// very deep recursion could exhaust the stack for large projects. The work; /// list acts as a scheduler for different types of work that need to be; /// performed.; ///; /// The recursive nature of the algorithm is simulated by running the ""main""; /// algorithm (LookForDIEsToKeep) followed by either looking at more DIEs; /// (LookForChildDIEsToKeep, LookForRefDIEsToKeep, LookForParentDIEsToKeep) or; /// fixing up a computed property (UpdateChildIncompleteness,; /// UpdateRefIncompleteness).; ///; /// The return value indicates whether the DIE is incomplete.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:1168,Update,UpdateChildIncompleteness,1168,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,2,['Update'],"['UpdateChildIncompleteness', 'UpdateRefIncompleteness']"
Deployability,"/// Register a 'signal' value with the emitter to inform it where to; /// resolve a placeholder. The signal value must be unique in the; /// initializer; it might, for example, be the address of a global that; /// refers to the current-address value in its own initializer.; ///; /// Uses of the placeholder must be properly anchored before finalizing; /// the emitter, e.g. by being installed as the initializer of a global; /// variable. That is, it must be possible to replaceAllUsesWith; /// the placeholder with the proper address of the signal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ConstantEmitter.h:384,install,installed,384,interpreter/llvm-project/clang/lib/CodeGen/ConstantEmitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ConstantEmitter.h,1,['install'],['installed']
Deployability,/// Register a callback for a default optimizer pipeline extension point.; ///; /// This extension point allows adding optimization once at the start of the; /// pipeline. This does not apply to 'backend' compiles (LTO and ThinLTO; /// link-time pipelines).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,3,['pipeline'],"['pipeline', 'pipelines']"
Deployability,/// Register a callback for a default optimizer pipeline extension point.; ///; /// This extension point allows adding optimization right after passes that do; /// basic simplification of the input IR.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipeline']
Deployability,/// Register a callback for a default optimizer pipeline extension point; ///; /// This extension point allows adding optimizations at the end of the full; /// LTO pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],['pipeline']
Deployability,/// Register a callback for a default optimizer pipeline extension point; ///; /// This extension point allows adding optimizations at the start of the full; /// LTO pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],['pipeline']
Deployability,/// Register a callback for a default optimizer pipeline extension point; ///; /// This extension point allows adding optimizations at the very end of the; /// function optimization pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],['pipeline']
Deployability,/// Register a callback for a default optimizer pipeline extension point; ///; /// This extension point allows adding optimizations before the function; /// optimization pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],['pipeline']
Deployability,/// Register a callback for a default optimizer pipeline extension; /// point; ///; /// This extension point allows adding CallGraphSCC passes at the end of the; /// main CallGraphSCC passes and before any function simplification passes run; /// by CGPassManager.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipeline']
Deployability,"/// Register a callback for a default optimizer pipeline extension; /// point; ///; /// This extension point allows adding late loop canonicalization and; /// simplification passes. This is the last point in the loop optimization; /// pipeline before loop deletion. Each pass added; /// here must be an instance of LoopPass.; /// This is the place to add passes that can remove loops, such as target-; /// specific loop idiom recognition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],['pipeline']
Deployability,/// Register a callback for a default optimizer pipeline extension; /// point; ///; /// This extension point allows adding loop passes to the end of the loop; /// optimizer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipeline']
Deployability,"/// Register a callback for a default optimizer pipeline extension; /// point; ///; /// This extension point allows adding optimization passes after most of the; /// main optimizations, but before the last cleanup-ish optimizations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipeline']
Deployability,/// Register a callback for a default optimizer pipeline extension; /// point; ///; /// This extension point allows adding optimization passes before the; /// vectorizer and other highly target specific optimization passes are; /// executed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipeline']
Deployability,/// Register a callback for a default optimizer pipeline extension; /// point; ///; /// This extension point allows adding passes that perform peephole; /// optimizations similar to the instruction combiner. These passes will be; /// inserted after each instance of the instruction combiner pass.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipeline']
Deployability,"/// Registers a function to be called in a ""one-shot"" manner when a pipe; /// signal is delivered to the process (i.e., on a failed write to a pipe).; /// After the pipe signal is handled once, the handler is unregistered.; ///; /// The LLVM signal handling code will not install any handler for the pipe; /// signal unless one is provided with this API (see \ref; /// DefaultOneShotPipeSignalHandler). This handler must be provided before; /// any other LLVM signal handlers are installed: the \ref InitLLVM; /// constructor has a flag that can simplify this setup.; ///; /// Note that the handler is not allowed to call any non-reentrant; /// functions. A null handler pointer disables the current installed; /// function. Note also that the handler may be executed on a; /// different thread on some platforms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Signals.h:272,install,install,272,interpreter/llvm-project/llvm/include/llvm/Support/Signals.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Signals.h,3,['install'],"['install', 'installed']"
Deployability,"/// Registers a function to be called when an ""info"" signal is delivered to; /// the process.; ///; /// On POSIX systems, this will be SIGUSR1; on systems that have it, SIGINFO; /// will also be used (typically ctrl-t).; ///; /// Note that signal handlers are not allowed to call any non-reentrant; /// functions. An null function pointer disables the current installed; /// function. Note also that the handler may be executed on a different; /// thread on some platforms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Signals.h:360,install,installed,360,interpreter/llvm-project/llvm/include/llvm/Support/Signals.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Signals.h,1,['install'],['installed']
Deployability,/// Release ExitSU predecessors and setup scheduler queues.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['Release'],['Release']
Deployability,/// Release ExitSU predecessors and setup scheduler queues. Re-position; /// the Top RP tracker in case the region beginning has changed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,2,['Release'],['Release']
Deployability,"/// Release SU to make it ready. If it's not in hazard, remove it from; /// pending queue (if already in) and push into available queue.; /// Otherwise, push the SU into pending queue.; ///; /// @param SU The unit to be released.; /// @param ReadyCycle Until which cycle the unit is ready.; /// @param InPQueue Whether SU is already in pending queue.; /// @param Idx Position offset in pending queue (if in it).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,2,"['Release', 'release']","['Release', 'released']"
Deployability,/// Release Successors of the SU that are in the block or not.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:4,Release,Release,4,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,1,['Release'],['Release']
Deployability,/// Release a __block variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp:4,Release,Release,4,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,1,['Release'],['Release']
Deployability,"/// Release a reference to DV. When the last reference is released,; /// collapse if needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,2,"['Release', 'release']","['Release', 'released']"
Deployability,/// Release address space acquired through reserve(),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MemoryMapper.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MemoryMapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MemoryMapper.h,1,['Release'],['Release']
Deployability,/// Release all memory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:4,Release,Release,4,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,1,['Release'],['Release']
Deployability,/// Release all the tracked allocations to the allocator. The recycler must; /// be free of any tracked allocations before being deleted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ArrayRecycler.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/Support/ArrayRecycler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ArrayRecycler.h,1,['Release'],['Release']
Deployability,/// Release allocated arguments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Option/ArgList.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/Option/ArgList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Option/ArgList.h,1,['Release'],['Release']
Deployability,/// Release from solver instance.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQP/Graph.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQP/Graph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQP/Graph.h,1,['Release'],['Release']
Deployability,/// Release memory for resources held by this instance. This *must* be called; /// prior to destruction of the class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/EPCIndirectionUtils.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/EPCIndirectionUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/EPCIndirectionUtils.h,1,['Release'],['Release']
Deployability,/// Release memory in caches.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h,1,['Release'],['Release']
Deployability,/// Release memory used by HNodes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h,1,['Release'],['Release']
Deployability,"/// Release ownership of object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/HistRef.h:4,Release,Release,4,roofit/histfactory/inc/RooStats/HistFactory/HistRef.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/HistRef.h,1,['Release'],['Release']
Deployability,/// Release ownership of the contained CWrapperFunctionResult.; /// Warning: Do not use -- this method will be removed in the future. It only; /// exists to temporarily support some code that will eventually be moved to; /// the ORC runtime.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/WrapperFunctionUtils.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/WrapperFunctionUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/WrapperFunctionUtils.h,1,['Release'],['Release']
Deployability,/// Release ownership of the module to the caller.; ///; /// It is illegal to call methods other than GetModule on the; /// CodeGenerator after releasing its module.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h:4,Release,Release,4,interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h,1,['Release'],['Release']
Deployability,/// Release pending ready nodes in to the available queue. This makes them; /// visible to heuristics.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:4,Release,Release,4,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,['Release'],['Release']
Deployability,/// Release resources held by this SARIF document.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Sarif.h:4,Release,Release,4,interpreter/llvm-project/clang/include/clang/Basic/Sarif.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Sarif.h,1,['Release'],['Release']
Deployability,"/// Release the GeneratorImpl object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx:4,Release,Release,4,gui/canvaspainter/src/RCanvasPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx,1,['Release'],['Release']
Deployability,/// Release the given object.; /// call void \@objc_release(i8* %value),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:4,Release,Release,4,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,2,['Release'],['Release']
Deployability,/// Release the group and remove all the relationships.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h,1,['Release'],['Release']
Deployability,/// Release the operands and set this node to have zero operands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGNodes.h:4,Release,Release,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGNodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGNodes.h,1,['Release'],['Release']
Deployability,/// Release the standard segments slab.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLinkMemoryManager.cpp:4,Release,Release,4,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLinkMemoryManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLinkMemoryManager.cpp,1,['Release'],['Release']
Deployability,"/// Release the tile configuration to return to the init state, which; /// releases all storage it currently holds.; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the <c> TILERELEASE </c> instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h:4,Release,Release,4,interpreter/llvm-project/clang/lib/Headers/amxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h,3,"['Release', 'configurat', 'release']","['Release', 'configuration', 'releases']"
Deployability,/// ReleaseModeModelRunner - production mode implementation of the; /// MLModelRunner. It uses an AOT-compiled SavedModel for efficient execution.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ReleaseModeModelRunner.h:4,Release,ReleaseModeModelRunner,4,interpreter/llvm-project/llvm/include/llvm/Analysis/ReleaseModeModelRunner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ReleaseModeModelRunner.h,1,['Release'],['ReleaseModeModelRunner']
Deployability,"/// ReleasePred - Decrement the NumSuccsLeft count of a predecessor. When; /// NumSuccsLeft reaches zero, release the predecessor node.; ///; /// FIXME: Adjust PredSU height based on MinLatency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:4,Release,ReleasePred,4,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,"['Release', 'release']","['ReleasePred', 'release']"
Deployability,"/// ReleaseSucc - Decrement the NumPredsLeft count of a successor. When; /// NumPredsLeft reaches zero, release the successor node.; ///; /// FIXME: Adjust SuccSU height based on MinLatency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:4,Release,ReleaseSucc,4,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,"['Release', 'release']","['ReleaseSucc', 'release']"
Deployability,/// ReleaseSuccessors - Call ReleaseSucc on each of SU's successors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:4,Release,ReleaseSuccessors,4,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,2,['Release'],"['ReleaseSucc', 'ReleaseSuccessors']"
Deployability,/// Releases a slot in the buffer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h:4,Release,Releases,4,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h,1,['Release'],['Releases']
Deployability,"/// Releases ownership of list of cloned branch nodes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCustomizer.h:4,Release,Releases,4,roofit/roofitcore/inc/RooCustomizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCustomizer.h,1,['Release'],['Releases']
Deployability,/// Releases the memory held by the dominator tree.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h:4,Release,Releases,4,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,1,['Release'],['Releases']
Deployability,"/// Releases the memory pointed to by page and resets the page's information. Note that the memory of the; /// zero page must not be deleted. Called by the RPage destructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPageAllocator.hxx:4,Release,Releases,4,tree/ntuple/v7/inc/ROOT/RPageAllocator.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPageAllocator.hxx,1,['Release'],['Releases']
Deployability,/// Remap a node's operands using the given functor.; ///; /// Iterate through the operands of \c N and update them in place using \c; /// mapOperand.; ///; /// \pre N.isDistinct() or N.isTemporary().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ValueMapper.cpp:104,update,update,104,interpreter/llvm-project/llvm/lib/Transforms/Utils/ValueMapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ValueMapper.cpp,1,['update'],['update']
Deployability,/// Remember the dependences on the top of the dependence stack such that they; /// may trigger further updates. (\see DependenceStack),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:104,update,updates,104,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['updates']
Deployability,"/// Remove Pred as a predecessor of this MachineBasicBlock. Don't do this; /// unless you know what you're doing, because it doesn't update Pred's; /// successors list. Use Pred->removeSuccessor instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:133,update,update,133,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,1,['update'],['update']
Deployability,"/// Remove all MemoryAcceses in a set of BasicBlocks about to be deleted.; /// Assumption we make here: all uses of deleted defs and phi must either; /// occur in blocks about to be deleted (thus will be deleted as well), or; /// they occur in phis that will simply lose an incoming value.; /// Deleted blocks still have successor info, but their predecessor edges and; /// Phi nodes may already be updated. Instructions in DeadBlocks should be; /// deleted after this call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:399,update,updated,399,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,1,['update'],['updated']
Deployability,/// Remove knowledge stored in assume when it is already know by an attribute; /// or an other assume. This can when valid update an existing knowledge in an; /// attribute or an other assume.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/AssumeBundleBuilder.cpp:123,update,update,123,interpreter/llvm-project/llvm/lib/Transforms/Utils/AssumeBundleBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/AssumeBundleBuilder.cpp,1,['update'],['update']
Deployability,"/// Remove specified successor from the successors list of this; /// MachineBasicBlock. The Predecessors list of Succ is automatically updated.; /// If NormalizeSuccProbs is true, then normalize successors' probabilities; /// after the successor is removed.; /// Return the iterator to the element after the one removed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:135,update,updated,135,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,1,['update'],['updated']
Deployability,"/// Remove successor from the successors list of this MachineBasicBlock. The; /// Predecessors list of Succ is automatically updated.; /// If NormalizeSuccProbs is true, then normalize successors' probabilities; /// after the successor is removed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:125,update,updated,125,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,1,['update'],['updated']
Deployability,/// Remove the Value requiring a release from the tracked set for; /// Instance and return the resultant state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:33,release,release,33,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['release']
Deployability,"/// Remove the specified node from the system. If any of its; /// operands then becomes dead, remove them as well. Inform UpdateListener; /// for each node deleted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h:122,Update,UpdateListener,122,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,1,['Update'],['UpdateListener']
Deployability,"/// RemoveDIs project: all other moves implemented with this method,; /// centralising debug-info updates into one place.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h:98,update,updates,98,interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h,1,['update'],['updates']
Deployability,/// RemovePred - removes a predecessor edge from SUnit SU.; /// This returns true if an edge was removed.; /// Updates the topological ordering if required.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:111,Update,Updates,111,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['Update'],['Updates']
Deployability,"/// Replace 'BB's terminator with one that does not have an unwind successor; /// block. Rewrites `invoke` to `call`, etc. Updates any PHIs in unwind; /// successor. Returns the instruction that replaced the original terminator,; /// which might be a call in case the original terminator was an invoke.; ///; /// \param BB Block whose terminator will be replaced. Its terminator must; /// have an unwind successor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h:123,Update,Updates,123,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,1,['Update'],['Updates']
Deployability,"/// Replace all defs and uses of SrcReg to DstReg and update the subregister; /// number if it is not zero. If DstReg is a physical register and the; /// existing subregister number of the def / use being updated is not zero,; /// make sure to set it to the correct physical subregister.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:54,update,update,54,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,2,['update'],"['update', 'updated']"
Deployability,"/// Replace all old uses with new ones, and push the updated BBs into FreshBBs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:53,update,updated,53,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['update'],['updated']
Deployability,"/// Replace all uses of 'I' with 'SimpleV' and simplify the uses recursively.; ///; /// This first performs a normal RAUW of I with SimpleV. It then recursively; /// attempts to simplify those users updated by the operation. The 'I'; /// instruction must not be equal to the simplified value 'SimpleV'.; /// If UnsimplifiedUsers is provided, instructions that could not be simplified; /// are added to it.; ///; /// The function returns true if any simplifications were performed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionSimplify.h:199,update,updated,199,interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionSimplify.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionSimplify.h,1,['update'],['updated']
Deployability,"/// Replace all uses of the canonical induction variable in the loop body with; /// a new one.; ///; /// The intended use case is to update the induction variable for an updated; /// iteration space such that it can stay normalized in the 0...tripcount-1; /// range.; ///; /// The \p Updater is called with the (presumable updated) current normalized; /// induction variable and is expected to return the value that uses of the; /// pre-updated induction values should use instead, typically dependent on; /// the new induction variable. This is a lambda (instead of e.g. just passing; /// the new value) to be able to distinguish the uses of the pre-updated; /// induction variable and uses of the induction varible to compute the; /// updated induction variable value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:133,update,update,133,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,7,"['Update', 'update']","['Updater', 'update', 'updated']"
Deployability,"/// Replace contents of every block in \p BBs with single unreachable; /// instruction. If \p Updates is specified, collect all necessary DT updates; /// into this vector. If \p KeepOneInputPHIs is true, one-input Phis in; /// successors of blocks being deleted will be preserved.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:94,Update,Updates,94,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,2,"['Update', 'update']","['Updates', 'updates']"
Deployability,/// Replace extension considering frameworks.; ///; /// \param Path Location of file.; /// \param Extension File extension to update with.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Utils.h:126,update,update,126,interpreter/llvm-project/llvm/include/llvm/TextAPI/Utils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Utils.h,1,['update'],['update']
Deployability,/// Replace instrprof.mcdc.temp.update with a shift and or instruction using; /// the corresponding condition ID.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:32,update,update,32,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['update'],['update']
Deployability,/// Replace instrprof.mcdc.tvbitmask.update with a shift and or instruction; /// using the index represented by the a temp value into a bitmap.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:37,update,update,37,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['update'],['update']
Deployability,/// Replace successor OLD with NEW and update probability info.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:39,update,update,39,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,1,['update'],['update']
Deployability,"/// Replace the instruction specified by BI with the instruction specified by I.; /// Copies DebugLoc from BI to I, if I doesn't already have a DebugLoc. The; /// original instruction is deleted and BI is updated to point to the new; /// instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:205,update,updated,205,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,1,['update'],['updated']
Deployability,"/// Replace the instructions opcode with the equivalent VALU; /// opcode. This function will also move the users of MachineInstruntions; /// in the \p WorkList to the VALU if necessary. If present, \p MDT is; /// updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.h:213,update,updated,213,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.h,1,['update'],['updated']
Deployability,/// Replace token in `CachedLexPos - 1` in CachedTokens by the tokens; /// in \p NewToks.; ///; /// Useful when a token needs to be split in smaller ones and CachedTokens; /// most recent token must to be updated to reflect that.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h:205,update,updated,205,interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,1,['update'],['updated']
Deployability,"/// ReplaceMBBInJumpTable - If Old is a target of the jump tables, update; /// the jump table to branch to New instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineJumpTableInfo.h:67,update,update,67,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineJumpTableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineJumpTableInfo.h,1,['update'],['update']
Deployability,"/// ReplaceMBBInJumpTables - If Old is the target of any jump tables, update; /// the jump tables to branch to New instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineJumpTableInfo.h:70,update,update,70,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineJumpTableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineJumpTableInfo.h,1,['update'],['update']
Deployability,"/// Report a message to the currently installed diagnostic handler.; ///; /// This function returns, in particular in the case of error reporting; /// (DI.Severity == \a DS_Error), so the caller should leave the compilation; /// process in a self-consistent state, even though the generated code; /// need not be correct.; ///; /// The diagnostic message will be implicitly prefixed with a severity keyword; /// according to \p DI.getSeverity(), i.e., ""error: "" for \a DS_Error,; /// ""warning: "" for \a DS_Warning, and ""note: "" for \a DS_Note.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LLVMContext.h:38,install,installed,38,interpreter/llvm-project/llvm/include/llvm/IR/LLVMContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LLVMContext.h,1,['install'],['installed']
Deployability,"/// Report a serious error, calling any installed error handler. See; /// ErrorHandling.h.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:40,install,installed,40,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,1,['install'],['installed']
Deployability,"/// Reports a bad alloc error, calling any user defined bad alloc; /// error handler. In contrast to the generic 'report_fatal_error'; /// functions, this function might not terminate, e.g. the user; /// defined error handler throws an exception, but it won't return.; ///; /// Note: When throwing an exception in the bad alloc handler, make sure that; /// the following unwind succeeds, e.g. do not trigger additional allocations; /// in the unwind chain.; ///; /// If no error handler is installed (default), throws a bad_alloc exception; /// if LLVM is compiled with exception support. Otherwise prints the error; /// to standard error and calls abort().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h:490,install,installed,490,interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h,1,['install'],['installed']
Deployability,"/// Reports a serious error, calling any installed error handler. These; /// functions are intended to be used for error conditions which are outside; /// the control of the compiler (I/O errors, invalid user input, etc.); ///; /// If no error handler is installed the default is to print the message to; /// standard error, followed by a newline.; /// After the error handler is called this function will call abort(), it; /// does not return.; /// NOTE: The std::string variant was removed to avoid a <string> dependency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h:41,install,installed,41,interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h,2,['install'],['installed']
Deployability,"/// Represents a place-holder for an object not to be initialized by; /// anything.; ///; /// This only makes sense when it appears as part of an updater of a; /// DesignatedInitUpdateExpr (see below). The base expression of a DIUE; /// initializes a big object, and the NoInitExpr's mark the spots within the; /// big object not to be overwritten by the updater.; ///; /// \see DesignatedInitUpdateExpr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h:146,update,updater,146,interpreter/llvm-project/clang/include/clang/AST/Expr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h,2,['update'],['updater']
Deployability,"/// Represents an SSA PHI node for the SSA updater class. Contains the block; /// this PHI is in, the value number it would have, and the expected incoming; /// values from parent blocks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:43,update,updater,43,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['update'],['updater']
Deployability,"/// RescanInstructions - Run ScanInstructions on a pair of blocks.; /// @param TIB - True Iterator Begin, points to first non-shared instruction; /// @param FIB - False Iterator Begin, points to first non-shared instruction; /// @param TIE - True Iterator End, points past last non-shared instruction; /// @param FIE - False Iterator End, points past last non-shared instruction; /// @param TrueBBI - BBInfo to update for the true block.; /// @param FalseBBI - BBInfo to update for the false block.; /// @returns - false if either block cannot be predicated or if both blocks end; /// with a predicate-clobbering instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/IfConversion.cpp:411,update,update,411,interpreter/llvm-project/llvm/lib/CodeGen/IfConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/IfConversion.cpp,2,['update'],['update']
Deployability,"/// Reserve enough space to add one element, and return the updated element; /// pointer in case it was a reference to the storage.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h:60,update,updated,60,interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,5,['update'],['updated']
Deployability,"/// Reserves buffer and LSUnit queue resources that are necessary to issue; /// this instruction.; ///; /// Returns true if instruction IR is ready to be issued to the underlying; /// pipelines. Note that this operation cannot fail; it assumes that a; /// previous call to method `isAvailable(IR)` returned `SC_AVAILABLE`.; ///; /// If IR is a memory operation, then the Scheduler queries the LS unit to; /// obtain a LS token. An LS token is used internally to track memory; /// dependencies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h:184,pipeline,pipelines,184,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,1,['pipeline'],['pipelines']
Deployability,"/// Reset the state of the diagnostic object to its initial configuration.; /// \param[in] soft - if true, doesn't reset the diagnostic mappings and state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h:60,configurat,configuration,60,interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,1,['configurat'],['configuration']
Deployability,"/// Reset the statistics. This can be used to zero and de-register the; /// statistics in order to measure a compilation.; ///; /// When this function begins to call destructors prior to returning, all; /// statistics will be zero and unregistered. However, that might not remain the; /// case by the time this function finishes returning. Whether update from other; /// threads are lost or merely deferred until during the function return is; /// timing sensitive.; ///; /// Callers who intend to use this to measure statistics for a single; /// compilation should ensure that no compilations are in progress at the point; /// this function is called and that only one compilation executes until calling; /// GetStatistics().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h:348,update,update,348,interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h,1,['update'],['update']
Deployability,/// Reset this object to get ready for a new set of SSA updates with; /// type 'Ty'.; ///; /// PHI nodes get a name based on 'Name'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdater.h:56,update,updates,56,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdater.h,1,['update'],['updates']
Deployability,"/// Resources(Input DWARF, Output DWARF tree) are released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerCompileUnit.h:50,release,released,50,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerCompileUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerCompileUnit.h,1,['release'],['released']
Deployability,/// Restart the current loop.; ///; /// Loop passes should call this method to indicate the current loop has been; /// sufficiently changed that it should be re-visited from the begining of; /// the loop pass pipeline rather than continuing.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h:209,pipeline,pipeline,209,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,1,['pipeline'],['pipeline']
Deployability,"/// Restore SSA form after cloning blocks.; ///; /// Each cloned block creates new defs for a variable, and the uses need to be; /// updated to reflect this. The uses may be replaced with a cloned value, or; /// some derived phi instruction. Note that all uses of a value defined in the; /// same block were already remapped when cloning the block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp:133,update,updated,133,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,1,['update'],['updated']
Deployability,/// RetEffect summarizes a call's retain/release behavior with respect; /// to its return value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:41,release,release,41,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,1,['release'],['release']
Deployability,/// Retain/Release for Simulator.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h:11,Release,Release,11,interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,1,['Release'],['Release']
Deployability,"/// Retain/Release only useful when we allocate a AttrListInfo from the; /// BumpPtrAllocator, and not from the stack; so that we keep a pointer; // in the EntityInfo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXIndexDataConsumer.h:11,Release,Release,11,interpreter/llvm-project/clang/tools/libclang/CXIndexDataConsumer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXIndexDataConsumer.h,1,['Release'],['Release']
Deployability,/// Retain/Release or Garbage Collection.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h:11,Release,Release,11,interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,1,['Release'],['Release']
Deployability,/// Retain/Release.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h:11,Release,Release,11,interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,1,['Release'],['Release']
Deployability,"/// Retrieve binning configuration with given name or default binning.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsRealLValue.h:21,configurat,configuration,21,roofit/roofitcore/inc/RooAbsRealLValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsRealLValue.h,1,['configurat'],['configuration']
Deployability,"/// Retrieve the first unplaced basic block.; ///; /// This routine is called when we are unable to use the CFG to walk through; /// all of the basic blocks and form a chain due to unnatural loops in the CFG.; /// We walk through the function's blocks in order, starting from the; /// LastUnplacedBlockIt. We update this iterator on each call to avoid; /// re-scanning the entire sequence on repeated calls to this routine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp:309,update,update,309,interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,1,['update'],['update']
Deployability,"/// Return KnownBits based on this, but updated given that the underlying; /// value is known to be greater than or equal to Val.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/KnownBits.h:40,update,updated,40,interpreter/llvm-project/llvm/include/llvm/Support/KnownBits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/KnownBits.h,1,['update'],['updated']
Deployability,"/// Return a copy of the specified basic block, but without; /// embedding the block into a particular function. The block returned is an; /// exact copy of the specified basic block, without any remapping having been; /// performed. Because of this, this is only suitable for applications where; /// the basic block will be inserted into the same function that it was cloned; /// from (loop unrolling would use this, for example).; ///; /// Also, note that this function makes a direct copy of the basic block, and; /// can thus produce illegal LLVM code. In particular, it will copy any PHI; /// nodes from the original block, even though there are no predecessors for the; /// newly cloned block (thus, phi nodes will have to be updated). Also, this; /// block will branch to the old successors of the original block: these; /// successors will have to have any PHI nodes updated to account for the new; /// incoming edges.; ///; /// The correlation between instructions in the source and result basic blocks; /// is recorded in the VMap map.; ///; /// If you have a particular suffix you'd like to use to add to any cloned; /// names, specify it as the optional third parameter.; ///; /// If you would like the basic block to be auto-inserted into the end of a; /// function, you can specify it as the optional fourth parameter.; ///; /// If you would like to collect additional information about the cloned; /// function, you can specify a ClonedCodeInfo object with the optional fifth; /// parameter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:732,update,updated,732,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,2,['update'],['updated']
Deployability,"/// Return a copy of the specified function and add it to that function's; /// module. Also, any references specified in the VMap are changed to refer to; /// their mapped value instead of the original one. If any of the arguments to; /// the function are in the VMap, the arguments are deleted from the resultant; /// function. The VMap is updated to include mappings from all of the; /// instructions and basicblocks in the function from their old to new values.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp:341,update,updated,341,interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp,1,['update'],['updated']
Deployability,"/// Return a copy of the specified function and add it to that; /// function's module. Also, any references specified in the VMap are changed; /// to refer to their mapped value instead of the original one. If any of the; /// arguments to the function are in the VMap, the arguments are deleted from; /// the resultant function. The VMap is updated to include mappings from all of; /// the instructions and basicblocks in the function from their old to new; /// values. The final argument captures information about the cloned code if; /// non-null.; ///; /// \pre VMap contains no non-identity GlobalValue mappings.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:341,update,updated,341,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,1,['update'],['updated']
Deployability,"/// Return an IR pass that inserts EH registration stack objects and explicit; /// EH state updates. This pass must run after EH preparation, which does; /// Windows-specific but architecture-neutral preparation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86.h:92,update,updates,92,interpreter/llvm-project/llvm/lib/Target/X86/X86.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86.h,1,['update'],['updates']
Deployability,/// Return any dependencies that synthetic symbols (e.g. init symbols); /// have on symbols in the LinkGraph.; /// This is used by the ObjectLinkingLayer to update the dependencies for; /// the synthetic symbols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/ObjectLinkingLayer.h:157,update,update,157,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/ObjectLinkingLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/ObjectLinkingLayer.h,1,['update'],['update']
Deployability,/// Return false if an AA should not be updated for \p IRP.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:40,update,updated,40,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['updated']
Deployability,"/// Return if this abstract state is fixed, thus does not need to be updated; /// if information changes as it cannot change itself.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:69,update,updated,69,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['updated']
Deployability,/// Return target's alignment for stack-based pointers; /// FIXME: The defaults need to be removed once all of; /// the backends/clients are updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h:141,update,updated,141,interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DataLayout.h,1,['update'],['updated']
Deployability,/// Return the ID for the given patchpoint.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h:32,patch,patchpoint,32,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,1,['patch'],['patchpoint']
Deployability,"/// Return the current output for the digested data since the last call to; /// init().; ///; /// Other hash functions distinguish between \p result() and \p final(), with; /// \p result() allowing more calls into \p update(), but there's no; // difference for the BLAKE3 hash function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BLAKE3.h:217,update,update,217,interpreter/llvm-project/llvm/include/llvm/Support/BLAKE3.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BLAKE3.h,2,['update'],['update']
Deployability,/// Return the current raw 160-bits SHA1 for the digested data; /// since the last call to init(). This is suitable for getting the SHA1 at; /// any time without invalidating the internal state so that more calls can be; /// made into update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SHA1.h:235,update,update,235,interpreter/llvm-project/llvm/include/llvm/Support/SHA1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SHA1.h,1,['update'],['update']
Deployability,/// Return the current raw 256-bits SHA256 for the digested; /// data since the last call to init(). This is suitable for getting the; /// SHA256 at any time without invalidating the internal state so that more; /// calls can be made into update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SHA256.h:239,update,update,239,interpreter/llvm-project/llvm/include/llvm/Support/SHA256.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SHA256.h,1,['update'],['update']
Deployability,/// Return the debug type for a C++ method.; /// \arg CXXMethodDecl is of FunctionType. This function type is; /// not updated to include implicit \c this pointer. Use this routine; /// to get a method type which includes \c this pointer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.h:119,update,updated,119,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.h,1,['update'],['updated']
Deployability,"/// Return the in-memory pointer type for the given address space, defaults to; /// the pointer type from the data layout.; /// FIXME: The default needs to be removed once all the code is updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:188,update,updated,188,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['update'],['updated']
Deployability,"/// Return the intersection of elements of two RVecs.; ///; /// Each element of v1 is looked up in v2 and added to the returned vector if; /// found. Following, the order of v1 is preserved. If v2 is already sorted, the; /// optional argument v2_is_sorted can be used to toggle of the internal sorting; /// step, therewith optimising runtime.; ///; /// Example code, at the ROOT prompt:; /// ~~~{.cpp}; /// using namespace ROOT::VecOps;; /// RVecD v1 {1., 2., 3.};; /// RVecD v2 {-4., -5., 2., 1.};; /// auto v1_intersect_v2 = Intersect(v1, v2);; /// v1_intersect_v2; /// // (ROOT::VecOps::RVec<double> &) { 1.0000000, 2.0000000 }; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:271,toggle,toggle,271,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['toggle'],['toggle']
Deployability,"/// Return the module that this code generator is building into.; ///; /// This may return null after HandleTranslationUnit is called;; /// this signifies that there was an error generating code. A; /// diagnostic will have been generated in this case, and the module; /// will be deleted.; ///; /// It will also return null if the module is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h:342,release,released,342,interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h,1,['release'],['released']
Deployability,"/// Return the nearest parent loop among this block's successors. If a successor; /// is a subloop header, consider its parent to be the nearest parent of the; /// subloop's exits.; ///; /// For subloop blocks, simply update SubloopParents and return NULL.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopInfo.cpp:218,update,update,218,interpreter/llvm-project/llvm/lib/Analysis/LoopInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopInfo.cpp,1,['update'],['update']
Deployability,"/// Return the number of expected events over the full range of all variables.; /// `norm`, the variable set as normalisation constant in the constructor,; /// will yield the number of events in the range set in the constructor. That is, the function returns; /// \f[; /// N = \mathrm{norm} \; \cdot \; \frac{\int_{(x_F,y_F)} \mathrm{pdf}(x,y) }{\int_{(x_C,y_F)} \mathrm{pdf}(x,y)}; /// \f]; /// Where \f$ x \f$ is the set of dependents with a restricted range (defined by `rangeName` in the constructor),; /// and \f$ y \f$ are the other dependents. \f$ x_C \f$ is the integration; /// of \f$ x \f$ over the restricted range, and \f$ x_F \f$ is the integration of; /// \f$ x \f$ over the full range. `norm` is the number of events given as parameter to the constructor.; ///; /// If the nested PDF can be extended, \f$ N \f$ is further scaled by its expected number of events.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:570,integrat,integration,570,roofit/roofitcore/src/RooExtendPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx,2,['integrat'],['integration']
Deployability,/// Return the number of patchable bytes associated with this statepoint.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h:25,patch,patchable,25,interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,1,['patch'],['patchable']
Deployability,/// Return the number of patchable bytes the given patchpoint should emit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h:25,patch,patchable,25,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,2,['patch'],"['patchable', 'patchpoint']"
Deployability,/// Return the number of patchable bytes the given stackmap should emit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h:25,patch,patchable,25,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,1,['patch'],['patchable']
Deployability,/// Return the number of patchable bytes the given statepoint should emit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h:25,patch,patchable,25,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackMaps.h,1,['patch'],['patchable']
Deployability,"/// Return the partially-updated value connected to the first variation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:25,update,updated,25,tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx,1,['update'],['updated']
Deployability,"/// Return the pointer type for the given address space, defaults to; /// the pointer type from the data layout.; /// FIXME: The default needs to be removed once all the code is updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:178,update,updated,178,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['update'],['updated']
Deployability,"/// Return the stronger of the two ordering. If the two orderings are acquire; /// and release, then return AcquireRelease.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/GlobalStatus.cpp:87,release,release,87,interpreter/llvm-project/llvm/lib/Transforms/Utils/GlobalStatus.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/GlobalStatus.cpp,1,['release'],['release']
Deployability,/// Return the update expression used in calculation of the updated; /// value. Always has form 'OpaqueValueExpr(x) binop OpaqueValueExpr(expr)' or; /// 'OpaqueValueExpr(expr) binop OpaqueValueExpr(x)'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:15,update,update,15,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,2,['update'],"['update', 'updated']"
Deployability,/// Return the value of the stack canary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SafeStack.cpp:34,canary,canary,34,interpreter/llvm-project/llvm/lib/CodeGen/SafeStack.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SafeStack.cpp,1,['canary'],['canary']
Deployability,"/// Return true for a multivariate continuous distribution.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h:35,continuous,continuous,35,math/unuran/inc/TUnuran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h,1,['continuous'],['continuous']
Deployability,"/// Return true for a univariate continuous distribution.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h:33,continuous,continuous,33,math/unuran/inc/TUnuran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h,1,['continuous'],['continuous']
Deployability,"/// Return true for all instructions that only update; /// the first 32 or 64-bits of the destination register and leave the rest; /// unmodified. This can be used to avoid folding loads if the instructions; /// only update part of the destination register, and the non-updated part is; /// not needed. e.g. cvtss2sd, sqrtss. Unfolding the load from these; /// instructions breaks the partial register dependency and it can improve; /// performance. e.g.:; ///; /// movss (%rdi), %xmm0; /// cvtss2sd %xmm0, %xmm0; ///; /// Instead of; /// cvtss2sd (%rdi), %xmm0; ///; /// FIXME: This should be turned into a TSFlags.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:47,update,update,47,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,3,['update'],"['update', 'updated']"
Deployability,"/// Return true if 'v' expression must be updated to original value of; /// 'x', false if 'v' must be updated to the new value of 'x'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:42,update,updated,42,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,2,['update'],['updated']
Deployability,/// Return true if 'v' is updated only when the condition is evaluated false; /// (compare capture only).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:26,update,updated,26,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['update'],['updated']
Deployability,"/// Return true if 'x' is LHS in RHS part of full update expression,; /// false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:50,update,update,50,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update']
Deployability,/// Return true if c++17 aligned allocation/deallocation functions are not; /// implemented in the c++ standard library of the deployment target we are; /// targeting.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.h:127,deploy,deployment,127,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.h,1,['deploy'],['deployment']
Deployability,/// Return true if helper update expression has form; /// 'OpaqueValueExpr(x) binop OpaqueValueExpr(expr)' and false if it has form; /// 'OpaqueValueExpr(expr) binop OpaqueValueExpr(x)'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:26,update,update,26,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['update'],['update']
Deployability,"/// Return true if the Context runtime configuration is set to discard all; /// value names. When true, only GlobalValue names will be available in the; /// IR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LLVMContext.h:39,configurat,configuration,39,interpreter/llvm-project/llvm/include/llvm/IR/LLVMContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LLVMContext.h,1,['configurat'],['configuration']
Deployability,"/// Return true if the argument contains a non-empty sequence of ones with the; /// remainder zero (32 bit version.) Ex. isShiftedMask_32(0x0000FF00U) == true.; /// If true, \p MaskIdx will specify the index of the lowest set bit and \p; /// MaskLen is updated to specify the length of the mask, else neither are; /// updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h:253,update,updated,253,interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h,2,['update'],['updated']
Deployability,"/// Return true if the argument contains a non-empty sequence of ones with the; /// remainder zero (64 bit version.) If true, \p MaskIdx will specify the index; /// of the lowest set bit and \p MaskLen is updated to specify the length of the; /// mask, else neither are updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h:205,update,updated,205,interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h,2,['update'],['updated']
Deployability,"/// Return true if the given instruction should not be pipelined and should; /// be ignored. An example could be a loop comparison, or induction variable; /// update with no users being pipelined.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:55,pipeline,pipelined,55,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,3,"['pipeline', 'update']","['pipelined', 'update']"
Deployability,/// Return true if the loop can be software pipelined. The algorithm is; /// restricted to loops with a single basic block. Make sure that the; /// branch in the loop can be analyzed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:44,pipeline,pipelined,44,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['pipeline'],['pipelined']
Deployability,/// Return true if the optimized regalloc pipeline is enabled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h:42,pipeline,pipeline,42,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,1,['pipeline'],['pipeline']
Deployability,/// Return true if the proposed schedule should used. Otherwise return; /// false to not pipeline the loop. This function should be used to ensure; /// that pipelined loops meet target-specific quality heuristics.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:89,pipeline,pipeline,89,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,2,['pipeline'],"['pipeline', 'pipelined']"
Deployability,"/// Return true if there is a pipeline forwarding between instructions; /// of itinerary classes DefClass and UseClasses so that value produced by an; /// instruction of itinerary class DefClass, operand index DefIdx can be; /// bypassed when it's read by an instruction of itinerary class UseClass,; /// operand index UseIdx.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h:30,pipeline,pipeline,30,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,1,['pipeline'],['pipeline']
Deployability,"/// Return true if this APInt value contains a non-empty sequence of ones with; /// the remainder zero. If true, \p MaskIdx will specify the index of the; /// lowest set bit and \p MaskLen is updated to specify the length of the; /// mask, else neither are updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h:192,update,updated,192,interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,2,['update'],['updated']
Deployability,/// Return true if this machine model includes cycle-to-cycle itinerary; /// data.; ///; /// This models scheduling at each stage in the processor pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h:147,pipeline,pipeline,147,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,1,['pipeline'],['pipeline']
Deployability,/// Return true if this set of releases can be paired with a release. Modifies; /// state appropriately to reflect that the matching occurred if it is; /// successful.; ///; /// It is assumed that one has already checked that the RCIdentity of the; /// retain and the RCIdentity of this ptr state are the same.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h:31,release,releases,31,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h,2,['release'],"['release', 'releases']"
Deployability,/// Return true if this set of retains can be paired with the given; /// release. Modifies state appropriately to reflect that the matching; /// occurred.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h:73,release,release,73,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h,1,['release'],['release']
Deployability,/// Return true if we can update the offset in MI so that MI and MJ; /// can be packetized together.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp:26,update,update,26,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,1,['update'],['update']
Deployability,"/// Returns a JITLink pass (as a function class) that uses the given symbol; /// identification function to identify external section start and end symbols; /// (and their associated Section*s) and transform the identified externals; /// into defined symbols pointing to the start of the first block in the; /// section and the end of the last (start and end symbols for empty sections; /// will be transformed into absolute symbols at address 0).; ///; /// The identification function should be callable as; ///; /// SectionRangeSymbolDesc (LinkGraph &G, Symbol &Sym); ///; /// If Sym is not a section range start or end symbol then a default; /// constructed SectionRangeSymbolDesc should be returned. If Sym is a start; /// symbol then SectionRangeSymbolDesc(Sec, true), where Sec is a reference to; /// the target Section. If Sym is an end symbol then; /// SectionRangeSymbolDesc(Sec, false) should be returned.; ///; /// This pass should be run in the PostAllocationPass pipeline, at which point; /// all blocks should have been assigned their final addresses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/DefineExternalSectionStartAndEndSymbols.h:976,pipeline,pipeline,976,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/DefineExternalSectionStartAndEndSymbols.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/DefineExternalSectionStartAndEndSymbols.h,1,['pipeline'],['pipeline']
Deployability,"/// Returns a mask of busy resources, and populates vector Insts with; /// instructions that could not be issued to the underlying pipelines because; /// not all pipeline resources were available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h:131,pipeline,pipelines,131,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,2,['pipeline'],"['pipeline', 'pipelines']"
Deployability,/// Returns a new DILocation with updated \p Discriminator.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h:34,update,updated,34,interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h,1,['update'],['updated']
Deployability,"/// Returns a new DILocation with updated base discriminator \p BD. Only the; /// base discriminator is set in the new DILocation, the other encoded values; /// are elided.; /// If the discriminator cannot be encoded, the function returns std::nullopt.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h:34,update,updated,34,interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h,1,['update'],['updated']
Deployability,/// Returns a new temporary DISubprogram with updated Flags,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h:46,update,updated,46,interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h,1,['update'],['updated']
Deployability,/// Returns a new temporary DIType with updated Flags,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h:40,update,updated,40,interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h,1,['update'],['updated']
Deployability,/// Returns a pass that clears pipeline hazards.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsBranchExpansion.cpp:31,pipeline,pipeline,31,interpreter/llvm-project/llvm/lib/Target/Mips/MipsBranchExpansion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsBranchExpansion.cpp,1,['pipeline'],['pipeline']
Deployability,"/// Returns a reference to the type cast instructions in the induction; /// update chain, that are redundant when guarded with a runtime; /// SCEV overflow check.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h:76,update,update,76,interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h,1,['update'],['update']
Deployability,"/// Returns an opaque, unique ID for this analysis type.; ///; /// This ID is a pointer type that is guaranteed to be 8-byte aligned and thus; /// suitable for use in sets, maps, and other data structures that use the low; /// bits of pointers.; ///; /// Note that this requires the derived type provide a static \c AnalysisKey; /// member called \c Key.; ///; /// FIXME: The only reason the mixin type itself can't declare the Key value; /// is that some compilers cannot correctly unique a templated static variable; /// so it has the same addresses in each instantiation. The only currently; /// known platform with this limitation is Windows DLL builds, specifically; /// building each part of LLVM as a DLL. If we ever remove that build; /// configuration, this mixin can provide the static key as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h:747,configurat,configuration,747,interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,1,['configurat'],['configuration']
Deployability,/// Returns block colors map that is used to update funclet operand bundles.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h:45,update,update,45,interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,1,['update'],['update']
Deployability,"/// Returns detailed output. The value returned by this function is updated after each call to Evaluate().; /// The returned RooArgSet contains the following for the alternative and null hypotheses:; /// - the minimum nll, fitstatus and convergence quality for each fit; /// - for each fit and for each non-constant parameter, the value, error and pull of the parameter are stored",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/RatioOfProfiledLikelihoodsTestStat.h:68,update,updated,68,roofit/roostats/inc/RooStats/RatioOfProfiledLikelihoodsTestStat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/RatioOfProfiledLikelihoodsTestStat.h,1,['update'],['updated']
Deployability,"/// Returns detailed output. The value returned by this function is updated after each call to Evaluate().; /// The returned RooArgSet contains the following:; ///; /// - the minimum nll, fitstatus and convergence quality for each fit; /// - for each fit and for each non-constant parameter, the value, error and pull of the parameter are stored; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProfileLikelihoodTestStat.h:68,update,updated,68,roofit/roostats/inc/RooStats/ProfileLikelihoodTestStat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProfileLikelihoodTestStat.h,1,['update'],['updated']
Deployability,/// Returns integer value of \p Size located by specified \p PatchOffset.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:61,Patch,PatchOffset,61,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['Patch'],['PatchOffset']
Deployability,/// Returns list of callee saved registers.; /// The function returns the updated CSR list (after taking into account; /// registers that are disabled from the CSR list).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h:74,update,updated,74,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,1,['update'],['updated']
Deployability,"/// Returns loop size estimation for unrolled loop, given the unrolling; /// configuration specified by UP.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/UnrollLoop.h:77,configurat,configuration,77,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/UnrollLoop.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/UnrollLoop.h,1,['configurat'],['configuration']
Deployability,"/// Returns the darwin target variant triple, the variant of the deployment; /// target for which the code is being compiled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h:65,deploy,deployment,65,interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,1,['deploy'],['deployment']
Deployability,/// Returns the deployment target that's specified using the -m<os>-version-min; /// argument.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:16,deploy,deployment,16,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['deploy'],['deployment']
Deployability,/// Returns the deployment target that's specified using the -mtargetos option.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:16,deploy,deployment,16,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['deploy'],['deployment']
Deployability,/// Returns the deployment target that's specified using the -target option.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:16,deploy,deployment,16,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['deploy'],['deployment']
Deployability,/// Returns the deployment target that's specified using the; /// OS_DEPLOYMENT_TARGET environment variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:16,deploy,deployment,16,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['deploy'],['deployment']
Deployability,/// Returns the field node at the offset \p Offset in \p BaseNode. Update \p; /// Offset in place to be the offset within the field node returned.; ///; /// We assume we've okayed \p BaseNode via \c verifyTBAABaseNode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp:67,Update,Update,67,interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,1,['Update'],['Update']
Deployability,"/// Returns the name of the launch configuration function. This is the name; /// of the function that will be called to configure kernel call, with the; /// parameters specified via <<<>>>.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:35,configurat,configuration,35,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['configurat'],['configuration']
Deployability,"/// Returns the preferred minimum clearance; /// before an instruction with an unwanted partial register update.; ///; /// Some instructions only write part of a register, and implicitly need to; /// read the other parts of the register. This may cause unwanted stalls; /// preventing otherwise unrelated instructions from executing in parallel in; /// an out-of-order CPU.; ///; /// For example, the x86 instruction cvtsi2ss writes its result to bits; /// [31:0] of the destination xmm register. Bits [127:32] are unaffected, so; /// the instruction needs to wait for the old value of the register to become; /// available:; ///; /// addps %xmm1, %xmm0; /// movaps %xmm0, (%rax); /// cvtsi2ss %rbx, %xmm0; ///; /// In the code above, the cvtsi2ss instruction needs to wait for the addps; /// instruction before it can issue, even though the high bits of %xmm0; /// probably aren't needed.; ///; /// This hook returns the preferred clearance before MI, measured in; /// instructions. Other defs of MI's operand OpNum are avoided in the last N; /// instructions before MI. It should only return a positive value for; /// unwanted dependencies. If the old bits of the defined register have; /// useful values, or if MI is determined to otherwise read the dependency,; /// the hook should return 0.; ///; /// The unwanted dependency may be handled by:; ///; /// 1. Allocating the same register for an MI def and use. That makes the; /// unwanted dependency identical to a required dependency.; ///; /// 2. Allocating a register for the def that has no defs in the previous N; /// instructions.; ///; /// 3. Calling breakPartialRegDependency() with the same arguments. This; /// allows the target to insert a dependency breaking instruction.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:105,update,update,105,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['update'],['update']
Deployability,/// Returns the previous CU that was being updated,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.h:43,update,updated,43,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.h,1,['update'],['updated']
Deployability,/// Returns the released value if M is a call a setter that releases; /// and nils out its underlying instance variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:16,release,released,16,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,2,['release'],"['released', 'releases']"
Deployability,"/// Returns the strongest permitted ordering on failure, given the; /// desired ordering on success.; ///; /// If the comparison in a cmpxchg operation fails, there is no atomic store; /// so release semantics cannot be provided. So this function drops explicit; /// Release requests from the AtomicOrdering. A SequentiallyConsistent; /// operation would remain SequentiallyConsistent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:192,release,release,192,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,2,"['Release', 'release']","['Release', 'release']"
Deployability,/// Returns true if DelBB is awaiting deletion.; /// Returns false under Eager UpdateStrategy.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:79,Update,UpdateStrategy,79,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,1,['Update'],['UpdateStrategy']
Deployability,"/// Returns true if IR can execute during this cycle.; /// In case of stall, it updates SI with information about the stalled; /// instruction and the stall reason.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/InOrderIssueStage.h:80,update,updates,80,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/InOrderIssueStage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/InOrderIssueStage.h,1,['update'],['updates']
Deployability,"/// Returns true if Lhs should take priority over Rhs.; ///; /// This method is used by class Scheduler to select the ""best"" ready; /// instruction to issue to the underlying pipelines.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h:175,pipeline,pipelines,175,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,1,['pipeline'],['pipelines']
Deployability,"/// Returns true if a LengthModifier was parsed and installed in the; /// FormatSpecifier& argument, and false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/FormatStringParsing.h:52,install,installed,52,interpreter/llvm-project/clang/lib/AST/FormatStringParsing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/FormatStringParsing.h,1,['install'],['installed']
Deployability,"/// Returns true if at least one of the register writes performed by; /// \param Inst implicitly clears the upper portion of all super-registers.; ///; /// Example: on X86-64, a write to EAX implicitly clears the upper half of; /// RAX. Also (still on x86) an XMM write perfomed by an AVX 128-bit; /// instruction implicitly clears the upper portion of the correspondent; /// YMM register.; ///; /// This method also updates an APInt which is used as mask of register; /// writes. There is one bit for every explicit/implicit write performed by; /// the instruction. If a write implicitly clears its super-registers, then; /// the corresponding bit is set (vic. the corresponding bit is cleared).; ///; /// The first bits in the APint are related to explicit writes. The remaining; /// bits are related to implicit writes. The sequence of writes follows the; /// machine operand sequence. For implicit writes, the sequence is defined by; /// the MCInstrDesc.; ///; /// The assumption is that the bit-width of the APInt is correctly set by; /// the caller. The default implementation conservatively assumes that none of; /// the writes clears the upper portion of a super-register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrAnalysis.h:417,update,updates,417,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrAnalysis.h,1,['update'],['updates']
Deployability,/// Returns true if either of DT or PDT is valid and the tree has at; /// least one update pending. If DT or PDT is nullptr it is treated; /// as having no pending updates. This function does not check; /// whether there is BasicBlock awaiting deletion.; /// Returns false under Eager UpdateStrategy.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:84,update,update,84,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,3,"['Update', 'update']","['UpdateStrategy', 'update', 'updates']"
Deployability,/// Returns true if machine pipeliner should be enabled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMSubtarget.h:28,pipeline,pipeliner,28,interpreter/llvm-project/llvm/lib/Target/ARM/ARMSubtarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMSubtarget.h,1,['pipeline'],['pipeliner']
Deployability,/// Returns true if profile counter update register promotion is enabled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:36,update,update,36,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['update'],['update']
Deployability,"/// Returns true if the ID is a class in which is known to have; /// a separate teardown lifecycle. In this case, -dealloc warnings; /// about missing releases should be suppressed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:151,release,releases,151,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['releases']
Deployability,/// Returns true if the call is diagnosable in the current analyzer; /// configuration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NullabilityChecker.cpp:73,configurat,configuration,73,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NullabilityChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NullabilityChecker.cpp,1,['configurat'],['configuration']
Deployability,/// Returns true if the exploded icmp can be expressed as a signed comparison; /// to zero and updates the predicate accordingly.; /// The signedness of the comparison is preserved.; /// TODO: Refactor with decomposeBitTestICmp()?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:95,update,updates,95,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['update'],['updates']
Deployability,"/// Returns true if the given call targets the callee of the given edge, or if; /// we were able to identify the call chain through intermediate tail calls.; /// In the latter case new context nodes are added to the graph for the; /// identified tail calls, and their synthesized nodes are added to; /// TailCallToContextNodeMap. The EdgeIter is updated in either case to the; /// next element after the input position (either incremented or updated after; /// removing the old edge).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:346,update,updated,346,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,2,['update'],['updated']
Deployability,/// Returns true if the machine instruction offset can handle the stack fixup; /// and updates it if requested.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h:87,update,updates,87,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h,1,['update'],['updates']
Deployability,"/// Returns true if the minimum supported macOS version for the slice that's; /// being built is less than the specified version. If there's no minimum; /// supported macOS version, the deployment target version is compared to the; /// specifed version instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.h:186,deploy,deployment,186,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.h,1,['deploy'],['deployment']
Deployability,/// Returns true if the statement is expanded from a configuration macro.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp:53,configurat,configuration,53,interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,1,['configurat'],['configuration']
Deployability,"/// Returns true if the statement represents a configuration value.; ///; /// A configuration value is something usually determined at compile-time; /// to conditionally always execute some branch. Such guards are for; /// ""sometimes unreachable"" code. Such code is usually not interesting; /// to report as unreachable, and may mask truly unreachable code within; /// those blocks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp:47,configurat,configuration,47,interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,2,['configurat'],['configuration']
Deployability,/// Returns true if the update appears in the LLVM IR.; /// It is used to check whether an update is valid in; /// insertEdge/deleteEdge or is unnecessary in the batch update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:24,update,update,24,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,3,['update'],['update']
Deployability,/// Returns true if the update is self dominance.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:24,update,update,24,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,1,['update'],['update']
Deployability,/// Returns true if there are DominatorTree updates queued.; /// Returns false under Eager UpdateStrategy or DT is nullptr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:44,update,updates,44,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,2,"['Update', 'update']","['UpdateStrategy', 'updates']"
Deployability,/// Returns true if there are PostDominatorTree updates queued.; /// Returns false under Eager UpdateStrategy or PDT is nullptr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:48,update,updates,48,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,2,"['Update', 'update']","['UpdateStrategy', 'updates']"
Deployability,/// Returns true if there is BasicBlock awaiting deletion.; /// The deletion will only happen until a flush event and; /// all available trees are up-to-date.; /// Returns false under Eager UpdateStrategy.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:190,Update,UpdateStrategy,190,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,1,['Update'],['UpdateStrategy']
Deployability,"/// Returns true if this node been visited by the DFS traversal.; ///; /// During visitPostorderNode the Node's SubtreeID is assigned to the Node; /// ID. Later, SubtreeID is updated but remains valid.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:175,update,updated,175,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['update'],['updated']
Deployability,/// Returns whether the pipeline is currently paused.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Pipeline.h:24,pipeline,pipeline,24,interpreter/llvm-project/llvm/include/llvm/MCA/Pipeline.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Pipeline.h,1,['pipeline'],['pipeline']
Deployability,"/// Rounds each element of the 128-bit vector of [2 x double] to an; /// integer value according to the rounding control specified by the second; /// argument and returns the rounded values in a 128-bit vector of; /// [2 x double].; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m128d _mm_round_pd(__m128d X, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VROUNDPD / ROUNDPD </c> instruction.; ///; /// \param X; /// A 128-bit vector of [2 x double].; /// \param M; /// An integer value that specifies the rounding operation. \n; /// Bits [7:4] are reserved. \n; /// Bit [3] is a precision exception value: \n; /// 0: A normal PE exception is used \n; /// 1: The PE field is not updated \n; /// Bit [2] is the rounding control source: \n; /// 0: Use bits [1:0] of \a M \n; /// 1: Use the current MXCSR setting \n; /// Bits [1:0] contain the rounding control definition: \n; /// 00: Nearest \n; /// 01: Downward (toward negative infinity) \n; /// 10: Upward (toward positive infinity) \n; /// 11: Truncated; /// \returns A 128-bit vector of [2 x double] containing the rounded values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:720,update,updated,720,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,1,['update'],['updated']
Deployability,"/// Rounds each element of the 128-bit vector of [4 x float] to an; /// integer value according to the rounding control specified by the second; /// argument and returns the rounded values in a 128-bit vector of; /// [4 x float].; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m128 _mm_round_ps(__m128 X, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VROUNDPS / ROUNDPS </c> instruction.; ///; /// \param X; /// A 128-bit vector of [4 x float].; /// \param M; /// An integer value that specifies the rounding operation. \n; /// Bits [7:4] are reserved. \n; /// Bit [3] is a precision exception value: \n; /// 0: A normal PE exception is used \n; /// 1: The PE field is not updated \n; /// Bit [2] is the rounding control source: \n; /// 0: Use bits [1:0] of \a M \n; /// 1: Use the current MXCSR setting \n; /// Bits [1:0] contain the rounding control definition: \n; /// 00: Nearest \n; /// 01: Downward (toward negative infinity) \n; /// 10: Upward (toward positive infinity) \n; /// 11: Truncated; /// \returns A 128-bit vector of [4 x float] containing the rounded values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:715,update,updated,715,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,1,['update'],['updated']
Deployability,"/// Rounds the values in a 256-bit vector of [4 x double] as specified; /// by the byte operand. The source values are rounded to integer values and; /// returned as 64-bit double-precision floating-point values.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m256d _mm256_round_pd(__m256d V, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VROUNDPD </c> instruction.; ///; /// \param V; /// A 256-bit vector of [4 x double].; /// \param M; /// An integer value that specifies the rounding operation. \n; /// Bits [7:4] are reserved. \n; /// Bit [3] is a precision exception value: \n; /// 0: A normal PE exception is used. \n; /// 1: The PE field is not updated. \n; /// Bit [2] is the rounding control source: \n; /// 0: Use bits [1:0] of \a M. \n; /// 1: Use the current MXCSR setting. \n; /// Bits [1:0] contain the rounding control definition: \n; /// 00: Nearest. \n; /// 01: Downward (toward negative infinity). \n; /// 10: Upward (toward positive infinity). \n; /// 11: Truncated.; /// \returns A 256-bit vector of [4 x double] containing the rounded values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:695,update,updated,695,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/// Rounds the values stored in a 256-bit vector of [8 x float] as; /// specified by the byte operand. The source values are rounded to integer; /// values and returned as floating-point values.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m256 _mm256_round_ps(__m256 V, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VROUNDPS </c> instruction.; ///; /// \param V; /// A 256-bit vector of [8 x float].; /// \param M; /// An integer value that specifies the rounding operation. \n; /// Bits [7:4] are reserved. \n; /// Bit [3] is a precision exception value: \n; /// 0: A normal PE exception is used. \n; /// 1: The PE field is not updated. \n; /// Bit [2] is the rounding control source: \n; /// 0: Use bits [1:0] of \a M. \n; /// 1: Use the current MXCSR setting. \n; /// Bits [1:0] contain the rounding control definition: \n; /// 00: Nearest. \n; /// 01: Downward (toward negative infinity). \n; /// 10: Upward (toward positive infinity). \n; /// 11: Truncated.; /// \returns A 256-bit vector of [8 x float] containing the rounded values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:674,update,updated,674,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,/// Run `::update` on \p AA and track the dependences queried while doing so.; /// Also adjust the state if we know further updates are not necessary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:11,update,update,11,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,2,['update'],"['update', 'updates']"
Deployability,"/// Run machine passes for a Module.; ///; /// The intended use is to start the codegen pipeline for a Module. The base; /// class's `run` method is deliberately hidden by this due to the observation; /// that we don't yet have the use cases of compositing two instances of; /// machine pass managers, or compositing machine pass managers with other; /// types of pass managers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h:88,pipeline,pipeline,88,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h,1,['pipeline'],['pipeline']
Deployability,"/// Run numeric integrations using RooRombergIntegrator and ROOT's adaptive integrator. Ensure that; /// they reach the requested precision.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx:16,integrat,integrations,16,roofit/roofitcore/test/testRooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx,2,['integrat'],"['integrations', 'integrator']"
Deployability,/// Run-time helper that records a store (or any event) of an; /// uninitialized value and returns an updated origin id encoding this info.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:102,update,updated,102,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['update'],['updated']
Deployability,"/// Runs the LTO pipeline. This function calls the supplied AddStream; /// function to add native object files to the link.; ///; /// The Cache parameter is optional. If supplied, it will be used to cache; /// native object files and add them to the link.; ///; /// The client will receive at most one callback (via either AddStream or; /// Cache) for each task identifier.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h:17,pipeline,pipeline,17,interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h,1,['pipeline'],['pipeline']
Deployability,"/// RuntimeDyld invariant checker for verifying that RuntimeDyld has; /// correctly applied relocations.; ///; /// The RuntimeDyldChecker class evaluates expressions against an attached; /// RuntimeDyld instance to verify that relocations have been applied; /// correctly.; ///; /// The expression language supports basic pointer arithmetic and bit-masking,; /// and has limited disassembler integration for accessing instruction; /// operands and the next PC (program counter) address for each instruction.; ///; /// The language syntax is:; ///; /// check = expr '=' expr; ///; /// expr = binary_expr; /// | sliceable_expr; ///; /// sliceable_expr = '*{' number '}' load_addr_expr [slice]; /// | '(' expr ')' [slice]; /// | ident_expr [slice]; /// | number [slice]; ///; /// slice = '[' high-bit-index ':' low-bit-index ']'; ///; /// load_addr_expr = symbol; /// | '(' symbol '+' number ')'; /// | '(' symbol '-' number ')'; ///; /// ident_expr = 'decode_operand' '(' symbol ',' operand-index ')'; /// | 'next_pc' '(' symbol ')'; /// | 'stub_addr' '(' stub-container-name ',' symbol ')'; /// | 'got_addr' '(' stub-container-name ',' symbol ')'; /// | 'section_addr' '(' stub-container-name ',' symbol ')'; /// | symbol; ///; /// binary_expr = expr '+' expr; /// | expr '-' expr; /// | expr '&' expr; /// | expr '|' expr; /// | expr '<<' expr; /// | expr '>>' expr; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RuntimeDyldChecker.h:392,integrat,integration,392,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RuntimeDyldChecker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RuntimeDyldChecker.h,1,['integrat'],['integration']
Deployability,"/// Scan forward recursively for only uses, update maps if the use is a copy or; /// a two-address instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp:44,update,update,44,interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,1,['update'],['update']
Deployability,/// Scan ns-uri-char[39]s starting at Cur.; ///; /// This updates Cur and Column while scanning.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp:58,update,updates,58,interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp,1,['update'],['updates']
Deployability,"/// Scan the functions in the specified CFG and resync the; /// callgraph with the call sites found in it. This is used after; /// FunctionPasses have potentially munged the callgraph, and can be used after; /// CallGraphSCC passes to verify that they correctly updated the callgraph.; ///; /// This function returns true if it devirtualized an existing function call,; /// meaning it turned an indirect call into a direct call. This happens when; /// a function pass like GVN optimizes away stuff feeding the indirect call.; /// This never happens in checking mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CallGraphSCCPass.cpp:262,update,updated,262,interpreter/llvm-project/llvm/lib/Analysis/CallGraphSCCPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CallGraphSCCPass.cpp,1,['update'],['updated']
Deployability,/// Scan through instruction dependencies and update InsertAfter array.; /// Return false if any dependency is incompatible with if conversion.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp:46,update,update,46,interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,1,['update'],['update']
Deployability,/// Schedule pass P for execution. Make sure that passes required by; /// P are run before P is run. Update analysis info maintained by; /// the manager. Remove dead passes. This is a recursive function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h:101,Update,Update,101,interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,2,['Update'],['Update']
Deployability,/// Scheduler callback to update SubtreeConnectLevels when a tree is; /// initially scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDFS.h:26,update,update,26,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDFS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDFS.h,1,['update'],['update']
Deployability,/// ScopedHashTableScope ctor - Install this as the current scope for the hash; /// table.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ScopedHashTable.h:32,Install,Install,32,interpreter/llvm-project/llvm/include/llvm/ADT/ScopedHashTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ScopedHashTable.h,1,['Install'],['Install']
Deployability,"/// Searches the expression that computes V for a non-zero constant C s.t.; /// V can be reassociated into the form V' + C. If the searching is; /// successful, returns C and update UserChain as a def-use chain from C to V;; /// otherwise, UserChain is empty.; ///; /// \p V The given expression; /// \p SignExtended Whether V will be sign-extended in the computation of the; /// GEP index; /// \p ZeroExtended Whether V will be zero-extended in the computation of the; /// GEP index; /// \p NonNegative Whether V is guaranteed to be non-negative. For example,; /// an index of an inbounds GEP is guaranteed to be; /// non-negative. Levaraging this, we can better split; /// inbounds GEPs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp:175,update,update,175,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,1,['update'],['update']
Deployability,/// Section patches.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:12,patch,patches,12,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['patch'],['patches']
Deployability,/// See Abstract Attribute::updateImpl(...).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:28,update,updateImpl,28,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['update'],['updateImpl']
Deployability,/// See AbstractAttribute::updateImpl(...).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:27,update,updateImpl,27,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,46,['update'],['updateImpl']
Deployability,/// See AbstractAttribute::updateImpl(...).; // through a pointer (i.e. also branches etc.),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:27,update,updateImpl,27,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['update'],['updateImpl']
Deployability,/// See AbstractAttribute::updateImpl(Attributor &A).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:27,update,updateImpl,27,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,4,['update'],['updateImpl']
Deployability,/// See AbstractAttribute::updateImpl.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:27,update,updateImpl,27,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['update'],['updateImpl']
Deployability,"/// Send interprocessor user interrupt. Can be executed only if; /// CR4.UINT = IA32_UINT_TT[0] = 1, the logical processor is in 64-bit mode,; /// and software is not executing inside an enclave; otherwise, it causes an; /// invalid-opcode exception. May be executed at any privilege level, all of; /// its memory accesses are performed with supervisor privilege.; ///; /// \headerfile <x86gprintrin.h>; ///; /// This intrinsic corresponds to the <c> SENDUIPI </c> instruction; ///; /// \param __a; /// Index of user-interrupt target table entry in user-interrupt target; /// table.; ///; /// \code{.operation}; /// IF __a > UITTSZ; /// GP (0); /// FI; /// tempUITTE := MEM[UITTADDR + (a<<4)]; /// // tempUITTE must be valid, and can't have any reserved bit set; /// IF (tempUITTE.V == 0 OR tempUITTE[7:1] != 0); /// GP (0); /// FI; /// tempUPID := MEM[tempUITTE.UPIDADDR] // under lock; /// // tempUPID can't have any reserved bit set; /// IF (tempUPID[15:2] != 0 OR tempUPID[31:24] != 0); /// GP (0) // release lock; /// FI; /// tempUPID.PIR[tempUITTE.UV] := 1;; /// IF (tempUPID.SN == 0 AND tempUPID.ON == 0); /// tempUPID.ON := 1; /// sendNotify := 1; /// ELSE; /// sendNotify := 0; /// FI; /// MEM[tempUITTE.UPIDADDR] := tempUPID // release lock; /// IF sendNotify == 1; /// IF IA32_APIC_BASE[10] == 1 // local APIC is in x2APIC mode; /// // send ordinary IPI with vector tempUPID.NV to 32-bit physical APIC; /// // ID tempUPID.NDST; /// SendOrdinaryIPI(tempUPID.NV, tempUPID.NDST); /// ELSE; /// // send ordinary IPI with vector tempUPID.NV to 8-bit physical APIC; /// // ID tempUPID.NDST[15:8]; /// SendOrdinaryIPI(tempUPID.NV, tempUPID.NDST[15:8]); /// FI; /// FI; /// \endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/uintrintrin.h:1005,release,release,1005,interpreter/llvm-project/clang/lib/Headers/uintrintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/uintrintrin.h,2,['release'],['release']
Deployability,"/// Serialize a \c VersionTuple \p V with the Symbol Graph semantic version; /// format.; ///; /// A semantic version object contains three numeric fields, representing the; /// \c major, \c minor, and \c patch parts of the version tuple.; /// For example version tuple 1.0.3 is serialized as:; /// \code; /// {; /// ""major"" : 1,; /// ""minor"" : 0,; /// ""patch"" : 3; /// }; /// \endcode; ///; /// \returns \c std::nullopt if the version \p V is empty, or an \c Object; /// containing the semantic version representation of \p V.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/Serialization/SymbolGraphSerializer.cpp:205,patch,patch,205,interpreter/llvm-project/clang/lib/ExtractAPI/Serialization/SymbolGraphSerializer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/Serialization/SymbolGraphSerializer.cpp,2,['patch'],['patch']
Deployability,"/// Serializes error output, destructed by the gROOT destructor via ReleaseDefaultErrorHandler()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TErrorDefaultHandler.cxx:68,Release,ReleaseDefaultErrorHandler,68,core/base/src/TErrorDefaultHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TErrorDefaultHandler.cxx,1,['Release'],['ReleaseDefaultErrorHandler']
Deployability,"/// Set a loop's branch weight metadata to reflect that loop has \p; /// EstimatedTripCount iterations and \p EstimatedLoopInvocationWeight exits; /// through latch. Returns true if metadata is successfully updated, false; /// otherwise. Note that loop must have a latch block which controls loop exit; /// in order to succeed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h:207,update,updated,207,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,1,['update'],['updated']
Deployability,/// Set a node's cost vector.; /// @param NId Node to update.; /// @param Costs New costs to set.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQP/Graph.h:54,update,update,54,interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQP/Graph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQP/Graph.h,1,['update'],['update']
Deployability,/// Set a setup function to be run just before the PlatformSetupFunction is; /// run.; ///; /// This can be used to customize the LLJIT instance before the platform is; /// set up. E.g. By installing a debugger support plugin before the platform; /// is set up (when the ORC runtime is loaded) we enable debugging of the; /// runtime itself.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/LLJIT.h:189,install,installing,189,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/LLJIT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/LLJIT.h,1,['install'],['installing']
Deployability,/// Set forced language options.; ///; /// Apply changes to the target information with respect to certain; /// language options which change the target configuration and adjust; /// the language based on the target options where applicable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h:153,configurat,configuration,153,interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,1,['configurat'],['configuration']
Deployability,/// Set input string into loop metadata by keeping other values intact.; /// If the string is already in loop metadata update value if it is; /// different.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp:119,update,update,119,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,1,['update'],['update']
Deployability,/// Set of dependency graph nodes which should be updated if this one; /// is updated. The bit encodes if it is optional.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:50,update,updated,50,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,2,['update'],['updated']
Deployability,"/// Set the Context runtime configuration to discard all value name (but; /// GlobalValue). Clients can use this flag to save memory and runtime,; /// especially in release mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LLVMContext.h:28,configurat,configuration,28,interpreter/llvm-project/llvm/include/llvm/IR/LLVMContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LLVMContext.h,2,"['configurat', 'release']","['configuration', 'release']"
Deployability,/// Set the GCC installation path suffix.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/MultilibBuilder.h:16,install,installation,16,interpreter/llvm-project/clang/include/clang/Driver/MultilibBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/MultilibBuilder.h,1,['install'],['installation']
Deployability,"/// Set the array size to \p N, which the current array must have enough; /// capacity for.; ///; /// This does not construct or destroy any elements in the vector.; ///; /// Clients can use this in conjunction with capacity() to write past the end; /// of the buffer when they know that more elements are available, and only; /// update the size later. This avoids the cost of value initializing elements; /// which will only be overwritten.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:331,update,update,331,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['update'],['update']
Deployability,"/// Set the current section where code is being emitted to \p Section. This; /// is required to update CurSection.; ///; /// This corresponds to assembler directives like .section, .text, etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h:96,update,update,96,interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h,1,['update'],['update']
Deployability,/// Set the current section where code is being emitted to \p Section.; /// This is required to update CurSection. This version does not call; /// changeSection.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h:96,update,update,96,interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h,1,['update'],['update']
Deployability,"/// Set the desired level of confidence-level accuracy for Keys interval; /// determination.; //; /// When determining the cutoff PDF height that gives the; /// desired confidence level (C_d), the algorithm will consider acceptable; /// any found confidence level c such that Abs(c - C_d) < epsilon.; ///; /// Any value of this ""epsilon"" > 0 is considered acceptable, though it is; /// advisable to not use a value too small, because the integration of the; /// Keys PDF sometimes does not have extremely high accuracy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h:438,integrat,integration,438,roofit/roostats/inc/RooStats/MCMCCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h,1,['integrat'],['integration']
Deployability,/// Set the install name of the library.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h:12,install,install,12,interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,1,['install'],['install']
Deployability,"/// Set the metadata of the specified kind to the specified node. This updates; /// or replaces metadata if already present, or removes it if Node is null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h:71,update,updates,71,interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h,1,['update'],['updates']
Deployability,/// Set the pipeline disabled state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.h:12,pipeline,pipeline,12,interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.h,1,['pipeline'],['pipeline']
Deployability,/// Set the pipeline initiation interval.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.h:12,pipeline,pipeline,12,interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.h,1,['pipeline'],['pipeline']
Deployability,/// Set the raw probabilities for all edges from the given block.; ///; /// This allows a pass to explicitly set edge probabilities for a block. It; /// can be used when updating the CFG to update the branch probability; /// information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BranchProbabilityInfo.h:190,update,update,190,interpreter/llvm-project/llvm/include/llvm/Analysis/BranchProbabilityInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BranchProbabilityInfo.h,1,['update'],['update']
Deployability,/// Set to true if a valid pipelined schedule is found for the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:27,pipeline,pipelined,27,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['pipeline'],['pipelined']
Deployability,"/// Set using of logarithm of PDF (only for 1D continuous case)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranSampler.h:47,continuous,continuous,47,math/unuran/inc/TUnuranSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranSampler.h,1,['continuous'],['continuous']
Deployability,"/// Set weights for \p UnrolledLoop and \p RemainderLoop based on weights for; /// \p OrigLoop and the following distribution of \p OrigLoop iteration among \p; /// UnrolledLoop and \p RemainderLoop. \p UnrolledLoop receives weights that; /// reflect TC/UF iterations, and \p RemainderLoop receives weights that reflect; /// the remaining TC%UF iterations.; ///; /// Note that \p OrigLoop may be equal to either \p UnrolledLoop or \p; /// RemainderLoop in which case weights for \p OrigLoop are updated accordingly.; /// Note also behavior is undefined if \p UnrolledLoop and \p RemainderLoop are; /// equal. \p UF must be greater than zero.; /// If \p OrigLoop has no profile info associated nothing happens.; ///; /// This utility may be useful for such optimizations as unroller and; /// vectorizer as it's typical transformation for them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h:495,update,updated,495,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,1,['update'],['updated']
Deployability,"/// Sets the function declaration that owns this; /// ParmVarDecl. Since ParmVarDecls are often created before the; /// FunctionDecls that own them, this routine is required to update; /// the DeclContext appropriately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:177,update,update,177,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['update'],['update']
Deployability,/// Sets the list of final update expressions for linear variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:27,update,update,27,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['update'],['update']
Deployability,/// Sets the list of final update expressions for linear variables.; /// \param FL List of expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:27,update,update,27,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['update'],['update']
Deployability,/// Sets the list of update expressions for linear variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:21,update,update,21,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['update'],['update']
Deployability,/// Sets the list of update expressions for linear variables.; /// \param UL List of expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:21,update,update,21,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['update'],['update']
Deployability,"/// Sets the ordering constraint of this fence instruction. May only be; /// Acquire, Release, AcquireRelease, or SequentiallyConsistent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:86,Release,Release,86,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,1,['Release'],['Release']
Deployability,/// Sets the ordering constraint of this load instruction. May not be Release; /// or AcquireRelease.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:70,Release,Release,70,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,1,['Release'],['Release']
Deployability,/// Sets the updated Callee Saved Registers list.; /// Notice that it will override ant previously disabled/saved CSRs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h:13,update,updated,13,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,1,['update'],['updated']
Deployability,"/// Setter function without integration set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCacheManager.h:28,integrat,integration,28,roofit/roofitcore/inc/RooCacheManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCacheManager.h,1,['integrat'],['integration']
Deployability,"/// Shader programs run in specific pipeline stages.; /// The order of these values matters, and must be kept in sync with the; /// Triple Environment enum in llvm::Triple. The ordering is enforced in; /// static_asserts in Triple.cpp and in clang/Basic/HLSLRuntime.h.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h:36,pipeline,pipeline,36,interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h,1,['pipeline'],['pipeline']
Deployability,/// Should we use the integrated assembler?; /// The integrated assembler should be enabled by default (by the; /// constructors) when failing to parse a valid piece of assembly (inline; /// or otherwise) is considered a bug. It may then be overridden after; /// construction (see LLVMTargetMachine::initAsmInfo()).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h:22,integrat,integrated,22,interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,2,['integrat'],['integrated']
Deployability,/// ShrinkWrap pass. Look for the best place to insert save and restore; // instruction and update the MachineFunctionInfo with that information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h:92,update,update,92,interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,1,['update'],['update']
Deployability,/// Signal that the runtime library should use args as an array of; /// descriptor_dim pointers and use args_size as dims. Used when we have; /// non-contiguous list items in target update directive,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPConstants.h:182,update,update,182,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPConstants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPConstants.h,1,['update'],['update']
Deployability,/// Similar but use value from \p OptDiag and update hotness there.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h:46,update,update,46,interpreter/llvm-project/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h,2,['update'],['update']
Deployability,"/// Simple utility function that appends a \p New string to the given; /// \p Old string, using the \p Buffer for storage.; ///; /// \param Old The string to which we are appending. This parameter will be; /// updated to reflect the complete string.; ///; ///; /// \param New The string to append to \p Old.; ///; /// \param Buffer A buffer that stores the actual, concatenated string. It will; /// be used if the old string is already-non-empty.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndexCodeCompletion.cpp:210,update,updated,210,interpreter/llvm-project/clang/tools/libclang/CIndexCodeCompletion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndexCodeCompletion.cpp,1,['update'],['updated']
Deployability,/// Simple wrapper that does the following.; /// 1) Lazily evaluate the MachineFunction to compute CSEable instructions.; /// 2) Allows configuration of which instructions are CSEd through CSEConfig; /// object. Provides a method called get which takes a CSEConfig object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h:136,configurat,configuration,136,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h,1,['configurat'],['configuration']
Deployability,/// Simplify \p I if its operands are constants and update SimplifiedValues.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:52,update,update,52,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['update'],['update']
Deployability,"/// Simplify each loop in a loop nest recursively.; ///; /// This takes a potentially un-simplified loop L (and its children) and turns; /// it into a simplified loop nest with preheaders and single backedges. It will; /// update \c DominatorTree, \c LoopInfo, \c ScalarEvolution and \c MemorySSA; /// analyses if they're non-null, and LCSSA if \c PreserveLCSSA is true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopSimplify.h:223,update,update,223,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopSimplify.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopSimplify.h,1,['update'],['update']
Deployability,/// Skip \a Distance UTF-8 code units. Updates \a Cur and \a Column.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp:39,Update,Updates,39,interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/YAMLParser.cpp,1,['Update'],['Updates']
Deployability,"/// Skip a form's value in \p DebugInfoData at the offset specified by; /// \p OffsetPtr.; ///; /// Skips the bytes for the current form and updates the offset.; ///; /// \param DebugInfoData The data where we want to skip the value.; /// \param OffsetPtr A reference to the offset that will be updated.; /// \param Params DWARF parameters to help interpret forms.; /// \returns true on success, false if the form was not skipped.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFFormValue.h:141,update,updates,141,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFFormValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFFormValue.h,2,['update'],"['updated', 'updates']"
Deployability,"/// Skip a form's value in \p DebugInfoData at the offset specified by; /// \p OffsetPtr.; ///; /// Skips the bytes for the specified form and updates the offset.; ///; /// \param Form The DW_FORM enumeration that indicates the form to skip.; /// \param DebugInfoData The data where we want to skip the value.; /// \param OffsetPtr A reference to the offset that will be updated.; /// \param FormParams DWARF parameters to help interpret forms.; /// \returns true on success, false if the form was not skipped.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFFormValue.h:143,update,updates,143,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFFormValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFFormValue.h,2,['update'],"['updated', 'updates']"
Deployability,/// Skip a line comment and return the updated cursor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MIRParser/MILexer.cpp:39,update,updated,39,interpreter/llvm-project/llvm/lib/CodeGen/MIRParser/MILexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MIRParser/MILexer.cpp,1,['update'],['updated']
Deployability,/// Skip the leading whitespace characters and return the updated cursor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MIRParser/MILexer.cpp:58,update,updated,58,interpreter/llvm-project/llvm/lib/CodeGen/MIRParser/MILexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MIRParser/MILexer.cpp,1,['update'],['updated']
Deployability,/// SkipWhitespace - Efficiently skip over a series of whitespace characters.; /// Update BufferPtr to point to the next non-whitespace character and return.; ///; /// This method forms a token and returns true if KeepWhitespaceMode is enabled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp:83,Update,Update,83,interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,1,['Update'],['Update']
Deployability,/// Some insertion points may need to update the liveness and such.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h:38,update,update,38,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h,1,['update'],['update']
Deployability,/// Some opcodes modify a constant value and we need to be able to update; /// the constant value (DW_CFA_GNU_window_save which is also known as; // DW_CFA_AARCH64_negate_ra_state).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugFrame.h:67,update,update,67,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugFrame.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugFrame.h,1,['update'],['update']
Deployability,"/// Sort numeric integration variables in summation and integration lists.; /// To be used during construction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:17,integrat,integration,17,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,2,['integrat'],['integration']
Deployability,/// Sparc Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/SparcTargetMachine.cpp:30,Configurat,Configuration,30,interpreter/llvm-project/llvm/lib/Target/Sparc/SparcTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/SparcTargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,/// Special character that the diagnostic printer will use to toggle the bold; /// attribute. The character itself will be not be printed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h:62,toggle,toggle,62,interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,1,['toggle'],['toggle']
Deployability,/// Specifies a configuration macro for this module.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h:16,configurat,configuration,16,interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,1,['configurat'],['configuration']
Deployability,/// Specify the Mach-O minimum deployment target version.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h:31,deploy,deployment,31,interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h,1,['deploy'],['deployment']
Deployability,"/// Specify the cost of a register definition in terms of number of physical; /// register allocated at register renaming stage. For example, AMD Jaguar.; /// natively supports 128-bit data types, and operations on 256-bit registers; /// (i.e. YMM registers) are internally split into two COPs (complex operations); /// and each COP updates a physical register. Basically, on Jaguar, a YMM; /// register write effectively consumes two physical registers. That means,; /// the cost of a YMM write in the BtVer2 model is 2.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:333,update,updates,333,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['update'],['updates']
Deployability,"/// Split a basic block into 2 pieces at \p SplitPoint. A new block will be; /// inserted after this block, and all instructions after \p SplitInst moved; /// to it (\p SplitInst will be in the original block). If \p LIS is provided,; /// LiveIntervals will be appropriately updated. \return the newly inserted; /// block.; ///; /// If \p UpdateLiveIns is true, this will ensure the live ins list is; /// accurate, including for physreg uses/defs in the original block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:275,update,updated,275,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,2,"['Update', 'update']","['UpdateLiveIns', 'updated']"
Deployability,"/// Split the basic block containing MI into two blocks, which are joined by; /// an unconditional branch. Update data structures and renumber blocks to; /// account for this change and returns the newly created block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchRelaxation.cpp:107,Update,Update,107,interpreter/llvm-project/llvm/lib/CodeGen/BranchRelaxation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchRelaxation.cpp,4,['Update'],['Update']
Deployability,"/// Split the containing block at the specified instruction - everything before; /// SplitBefore stays in the old basic block, and the rest of the instructions; /// in the BB are moved to a new block. The two blocks are connected by a; /// conditional branch (with value of Cmp being the condition).; /// Before:; /// Head; /// SplitBefore; /// Tail; /// After:; /// Head; /// if (Cond); /// ThenBlock; /// SplitBefore; /// Tail; ///; /// If \p ThenBlock is not specified, a new block will be created for it.; /// If \p Unreachable is true, the newly created block will end with; /// UnreachableInst, otherwise it branches to Tail.; /// Returns the NewBasicBlock's terminator.; ///; /// Updates DTU and LI if given.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:687,Update,Updates,687,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,1,['Update'],['Updates']
Deployability,"/// Split the containing block at the specified instruction - everything before; /// SplitBefore stays in the old basic block, and the rest of the instructions; /// in the BB are moved to a new block. The two blocks are connected by a; /// conditional branch (with value of Cmp being the condition).; /// Before:; /// Head; /// SplitBefore; /// Tail; /// After:; /// Head; /// if (Cond); /// TrueBlock; /// else; //// FalseBlock; /// SplitBefore; /// Tail; ///; /// If \p ThenBlock is null, the resulting CFG won't contain the TrueBlock. If; /// \p ThenBlock is non-null and points to non-null BasicBlock pointer, that; /// block will be inserted as the TrueBlock. Otherwise a new block will be; /// created. Likewise for the \p ElseBlock parameter.; /// If \p UnreachableThen or \p UnreachableElse is true, the corresponding newly; /// created blocks will end with UnreachableInst, otherwise with branches to; /// Tail. The function will not modify existing basic blocks passed to it. The; /// caller must ensure that Tail is reachable from Head.; /// Returns the newly created blocks in \p ThenBlock and \p ElseBlock.; /// Updates DTU and LI if given.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:1125,Update,Updates,1125,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,1,['Update'],['Updates']
Deployability,"/// Split the critical edge from this block to the given successor block, and; /// return the newly created block, or null if splitting is not possible.; ///; /// This function updates LiveVariables, MachineDominatorTree, and; /// MachineLoopInfo, as applicable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:177,update,updates,177,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,1,['update'],['updates']
Deployability,/// Split the old successor into old plus new and updates the probability; /// info.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:50,update,updates,50,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,1,['update'],['updates']
Deployability,"/// SplitBlockAndInsertIfThenElse is similar to SplitBlockAndInsertIfThen,; /// but also creates the ElseBlock.; /// Before:; /// Head; /// SplitBefore; /// Tail; /// After:; /// Head; /// if (Cond); /// ThenBlock; /// else; /// ElseBlock; /// SplitBefore; /// Tail; ///; /// Updates DT if given.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:276,Update,Updates,276,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,1,['Update'],['Updates']
Deployability,"/// Splits block B at the given index which must be greater than zero.; /// If SplitIndex == B.getSize() then this function is a no-op and returns B.; /// If SplitIndex < B.getSize() then this function returns a new block; /// covering the range [ 0, SplitIndex ), and B is modified to cover the range; /// [ SplitIndex, B.size() ).; ///; /// The optional Cache parameter can be used to speed up repeated calls to; /// splitBlock for a single block. If the value is None the cache will be; /// treated as uninitialized and splitBlock will populate it. Otherwise it; /// is assumed to contain the list of Symbols pointing at B, sorted in; /// descending order of offset.; ///; /// Notes:; ///; /// 1. splitBlock must be used with care. Splitting a block may cause; /// incoming edges to become invalid if the edge target subexpression; /// points outside the bounds of the newly split target block (E.g. an; /// edge 'S + 10 : Pointer64' where S points to a newly split block; /// whose size is less than 10). No attempt is made to detect invalidation; /// of incoming edges, as in general this requires context that the; /// LinkGraph does not have. Clients are responsible for ensuring that; /// splitBlock is not used in a way that invalidates edges.; ///; /// 2. The newly introduced block will have a new ordinal which will be; /// higher than any other ordinals in the section. Clients are responsible; /// for re-assigning block ordinals to restore a compatible order if; /// needed.; ///; /// 3. The cache is not automatically updated if new symbols are introduced; /// between calls to splitBlock. Any newly introduced symbols may be; /// added to the cache manually (descending offset order must be; /// preserved), or the cache can be set to None and rebuilt by; /// splitBlock on the next call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h:1534,update,updated,1534,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLink.h,1,['update'],['updated']
Deployability,/// StackMapLiveness - This pass analyses the register live-out set of; /// stackmap/patchpoint intrinsics and attaches the calculated information to; /// the intrinsic for later emission to the StackMap.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h:85,patch,patchpoint,85,interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,1,['patch'],['patchpoint']
Deployability,/// Standard library functions that take a non-const `basic_string` argument by; /// reference may invalidate its inner pointers. Check for these cases and; /// mark the pointers released.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InnerPointerChecker.cpp:179,release,released,179,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InnerPointerChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InnerPointerChecker.cpp,1,['release'],['released']
Deployability,"/// Sticky flag set to \c true when an ""uncompilable error"" occurs.; /// I.e. an error that was not upgraded from a warning by -Werror.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h:100,upgrade,upgraded,100,interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,1,['upgrade'],['upgraded']
Deployability,"/// Storage for the stream, if we're owning our own stream. This is; /// intentionally declared after Installer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ToolOutputFile.h:102,Install,Installer,102,interpreter/llvm-project/llvm/include/llvm/Support/ToolOutputFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ToolOutputFile.h,1,['Install'],['Installer']
Deployability,"/// Store the tile specified by ""src"" to memory specifieid by ""base"" address and; /// ""stride"" using the tile configuration previously configured via; /// ""_tile_loadconfig"".; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the <c> TILESTORED </c> instruction.; ///; /// \param dst; /// A destination tile. Max size is 1024 Bytes.; /// \param base; /// A pointer to base address.; /// \param stride; /// The stride between the rows' data to be stored in memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h:110,configurat,configuration,110,interpreter/llvm-project/clang/lib/Headers/amxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h,1,['configurat'],['configuration']
Deployability,"/// Stores options for the analyzer from the command line.; ///; /// Some options are frontend flags (e.g.: -analyzer-output), but some are; /// analyzer configuration options, which are preceded by -analyzer-config; /// (e.g.: -analyzer-config notes-as-events=true).; ///; /// If you'd like to add a new frontend flag, add it to; /// include/clang/Driver/CC1Options.td, add a new field to store the value of; /// that flag in this class, and initialize it in; /// lib/Frontend/CompilerInvocation.cpp.; ///; /// If you'd like to add a new non-checker configuration, register it in; /// include/clang/StaticAnalyzer/Core/AnalyzerOptions.def, and refer to the; /// top of the file for documentation.; ///; /// If you'd like to add a new checker option, call getChecker*Option(); /// whenever.; ///; /// Some of the options are controlled by raw frontend flags for no good reason,; /// and should be eventually converted into -analyzer-config flags. New analyzer; /// options should not be implemented as frontend flags. Frontend flags still; /// make sense for things that do not affect the actual analysis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h:154,configurat,configuration,154,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h,2,['configurat'],['configuration']
Deployability,/// Stores the bits used by BlockDecl.; /// If modified NumBlockDeclBits and the accessor; /// methods in BlockDecl should be updated appropriately.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:126,update,updated,126,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['update'],['updated']
Deployability,/// Stores the bits used by CXXConstructorDecl. If modified; /// NumCXXConstructorDeclBits and the accessor; /// methods in CXXConstructorDecl should be updated appropriately.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:153,update,updated,153,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['update'],['updated']
Deployability,/// Stores the bits used by EnumDecl.; /// If modified NumEnumDeclBit and the accessor; /// methods in EnumDecl should be updated appropriately.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:122,update,updated,122,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['update'],['updated']
Deployability,/// Stores the bits used by FunctionDecl.; /// If modified NumFunctionDeclBits and the accessor; /// methods in FunctionDecl and CXXDeductionGuideDecl; /// (for DeductionCandidateKind) should be updated appropriately.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:195,update,updated,195,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['update'],['updated']
Deployability,/// Stores the bits used by LinkageSpecDecl.; /// If modified NumLinkageSpecDeclBits and the accessor; /// methods in LinkageSpecDecl should be updated appropriately.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:144,update,updated,144,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['update'],['updated']
Deployability,/// Stores the bits used by OMPDeclareReductionDecl.; /// If modified NumOMPDeclareReductionDeclBits and the accessor; /// methods in OMPDeclareReductionDecl should be updated appropriately.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:168,update,updated,168,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['update'],['updated']
Deployability,/// Stores the bits used by ObjCContainerDecl.; /// If modified NumObjCContainerDeclBits and the accessor; /// methods in ObjCContainerDecl should be updated appropriately.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:150,update,updated,150,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['update'],['updated']
Deployability,/// Stores the bits used by ObjCMethodDecl.; /// If modified NumObjCMethodDeclBits and the accessor; /// methods in ObjCMethodDecl should be updated appropriately.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:141,update,updated,141,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['update'],['updated']
Deployability,/// Stores the bits used by RecordDecl.; /// If modified NumRecordDeclBits and the accessor; /// methods in RecordDecl should be updated appropriately.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:129,update,updated,129,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['update'],['updated']
Deployability,/// Stores the bits used by TagDecl.; /// If modified NumTagDeclBits and the accessor; /// methods in TagDecl should be updated appropriately.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:120,update,updated,120,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['update'],['updated']
Deployability,"/// Stores the configuration parameters for RooAbsTestStatistic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.h:15,configurat,configuration,15,roofit/roofitcore/src/RooAbsTestStatistic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.h,1,['configurat'],['configuration']
Deployability,"/// Stores the current tile configuration to a 64-byte memory location; /// specified by ""mem_addr"". The tile configuration includes the tile type; /// palette, the number of bytes per row, and the number of rows. If tiles; /// are not configured, all zeroes will be stored to memory.; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the <c> STTILECFG </c> instruction.; ///; /// \param __config; /// A pointer to 512-bits configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h:28,configurat,configuration,28,interpreter/llvm-project/clang/lib/Headers/amxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h,3,['configurat'],['configuration']
Deployability,/// Stores the given Name/GUID and associated summary into the Index.; /// Also updates any forward references to the associated entry ID.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:80,update,updates,80,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['update'],['updates']
Deployability,"/// Struct to store and manipulate GCC versions.; ///; /// We rely on assumptions about the form and structure of GCC version; /// numbers: they consist of at most three '.'-separated components, and each; /// component is a non-negative integer except for the last component. For; /// the last component we are very flexible in order to tolerate release; /// candidates or 'x' wildcards.; ///; /// Note that the ordering established among GCCVersions is based on the; /// preferred version string to use. For example we prefer versions without; /// a hard-coded patch number to those with a hard coded patch number.; ///; /// Currently this doesn't provide any logic for textual suffixes to patches; /// in the way that (for example) Debian's version format does. If that ever; /// becomes necessary, it can be added.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h:347,release,release,347,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,4,"['patch', 'release']","['patch', 'patches', 'release']"
Deployability,/// Subclasses \c clang::FixItAction so that we can install the custom; /// \c FixItRewriter.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-check/ClangCheck.cpp:52,install,install,52,interpreter/llvm-project/clang/tools/clang-check/ClangCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-check/ClangCheck.cpp,1,['install'],['install']
Deployability,"/// Submit updates to all available trees. It will also; /// 1. discard duplicated updates,; /// 2. remove invalid updates. (Invalid updates means deletion of an edge that; /// still exists or insertion of an edge that does not exist.); /// The Eager Strategy flushes updates immediately while the Lazy Strategy; /// queues the updates.; ///; /// Note: The ""existence"" of an edge in a CFG refers to the CFG which DTU is; /// in sync with + all updates before that single update.; ///; /// CAUTION!; /// 1. It is required for the state of the LLVM IR to be updated; /// *before* submitting the updates because the internal update routine will; /// analyze the current state of the CFG to determine whether an update; /// is valid.; /// 2. It is illegal to submit any update that has already been submitted,; /// i.e., you are supposed not to insert an existent edge or delete a; /// nonexistent edge.; /// 3. It is only legal to submit updates to an edge in the order CFG changes; /// are made. The order you submit updates on different edges is not; /// restricted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:11,update,updates,11,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,15,['update'],"['update', 'updated', 'updates']"
Deployability,"/// Subroutine of CommitSealedPageVImpl, used to perform a vector write of the (multi-)range of pages; /// contained in `batch`. The locators for the written pages are appended to `locators`.; /// This procedure also updates some internal metrics of the page sink, hence it's not const.; /// `batch` gets reset to size 0 after the writing is done (but its begin and end are not updated).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPageStorageFile.hxx:217,update,updates,217,tree/ntuple/v7/inc/ROOT/RPageStorageFile.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPageStorageFile.hxx,2,['update'],"['updated', 'updates']"
Deployability,"/// Substitute the explicitly-provided template arguments into the; /// given function template according to C++ [temp.arg.explicit].; ///; /// \param FunctionTemplate the function template into which the explicit; /// template arguments will be substituted.; ///; /// \param ExplicitTemplateArgs the explicitly-specified template; /// arguments.; ///; /// \param Deduced the deduced template arguments, which will be populated; /// with the converted and checked explicit template arguments.; ///; /// \param ParamTypes will be populated with the instantiated function; /// parameters.; ///; /// \param FunctionType if non-NULL, the result type of the function template; /// will also be instantiated and the pointed-to value will be updated with; /// the instantiated function type.; ///; /// \param Info if substitution fails for any reason, this object will be; /// populated with more information about the failure.; ///; /// \returns TDK_Success if substitution was successful, or some failure; /// condition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:735,update,updated,735,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['update'],['updated']
Deployability,"/// Successful preparation number for Update/DS/DQ form in all inner most; /// loops. One successful preparation will put one common base out of loop,; /// this may leads to register presure like LICM does.; /// Make sure total preparation number can be controlled by option.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:38,Update,Update,38,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,1,['Update'],['Update']
Deployability,"/// Support structure for SCC passes to communicate updates the call graph back; /// to the CGSCC pass manager infrastructure.; ///; /// The CGSCC pass manager runs SCC passes which are allowed to update the call; /// graph and SCC structures. This means the structure the pass manager works; /// on is mutating underneath it. In order to support that, there needs to be; /// careful communication about the precise nature and ramifications of these; /// updates to the pass management infrastructure.; ///; /// All SCC passes will have to accept a reference to the management layer's; /// update result struct and use it to reflect the results of any CG updates; /// performed.; ///; /// Passes which do not change the call graph structure in any way can just; /// ignore this argument to their run method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h:52,update,updates,52,interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,5,['update'],"['update', 'updates']"
Deployability,"/// Supported languages.; ///; /// When stored in a configuration file, specifies the language, that the; /// configuration targets. When passed to the ``reformat()`` function, enables; /// syntax features specific to the language.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:52,configurat,configuration,52,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,2,['configurat'],['configuration']
Deployability,"/// Synthesize a body for a declaration; ///; /// This method first looks up the appropriate model file based on the; /// model-path configuration option and the name of the declaration that is; /// looked up. If no model were synthesized yet for a function with that name; /// it will create a new compiler instance to parse the model file using the; /// ASTContext, Preprocessor, SourceManager of the original compiler instance.; /// The former resources are shared between the two compiler instance, so the; /// newly created instance have to ""leak"" these objects, since they are owned; /// by the original instance.; ///; /// The model-path should be either an absolute path or relative to the; /// working directory of the compiler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/ModelInjector.h:133,configurat,configuration,133,interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/ModelInjector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/ModelInjector.h,1,['configurat'],['configuration']
Deployability,/// SystemZ Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetMachine.cpp:32,Configurat,Configuration,32,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,"/// TFormLeafInfo overload: Update (and propagate) cached information",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:28,Update,Update,28,tree/treeplayer/inc/TFormLeafInfoReference.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h,1,['Update'],['Update']
Deployability,"/// TODO(jblomer): Not only the columns, but actually all the different objects of the descriptor would need; /// their own maps to avoid descriptor ID clashes. The need for the distinct column map was triggered by adding; /// support for multi-column representations. A follow-up patch should either fix the friend page source properly; /// or remove it in favor of the RNTupleProcessor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPageSourceFriends.hxx:281,patch,patch,281,tree/ntuple/v7/inc/ROOT/RPageSourceFriends.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPageSourceFriends.hxx,1,['patch'],['patch']
Deployability,"/// TVirtualRefProxy overload: Release the reference proxy (virtual destructor)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h:31,Release,Release,31,tree/treeplayer/inc/TRefProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h,1,['Release'],['Release']
Deployability,"/// TVirtualRefProxy overload: Update (and propagate) cached information",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h:31,Update,Update,31,tree/treeplayer/inc/TRefProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h,1,['Update'],['Update']
Deployability,"/// Tail duplicate \p BB into (some) predecessors if profitable, repeating if; /// it was duplicated into its chain predecessor and removed.; /// \p BB - Basic block that may be duplicated.; ///; /// \p LPred - Chosen layout predecessor of \p BB.; /// Updated to be the chain end if LPred is removed.; /// \p Chain - Chain to which \p LPred belongs, and \p BB will belong.; /// \p BlockFilter - Set of blocks that belong to the loop being laid out.; /// Used to identify which blocks to update predecessor; /// counts.; /// \p PrevUnplacedBlockIt - Iterator pointing to the last block that was; /// chosen in the given order due to unnatural CFG; /// only needed if \p BB is removed and; /// \p PrevUnplacedBlockIt pointed to \p BB.; /// @return true if \p BB was removed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp:252,Update,Updated,252,interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,2,"['Update', 'update']","['Updated', 'update']"
Deployability,"/// Tail duplicate \p BB into (some) predecessors if profitable.; /// \p BB - Basic block that may be duplicated; /// \p LPred - Chosen layout predecessor of \p BB; /// \p Chain - Chain to which \p LPred belongs, and \p BB will belong.; /// \p BlockFilter - Set of blocks that belong to the loop being laid out.; /// Used to identify which blocks to update predecessor; /// counts.; /// \p PrevUnplacedBlockIt - Iterator pointing to the last block that was; /// chosen in the given order due to unnatural CFG; /// only needed if \p BB is removed and; /// \p PrevUnplacedBlockIt pointed to \p BB.; /// \p DuplicatedToLPred - True if the block was duplicated into LPred.; /// \return - True if the block was duplicated into all preds and removed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp:350,update,update,350,interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,1,['update'],['update']
Deployability,"/// Tail duplicate a single basic block into its predecessors, and then clean; /// up.; /// If \p DuplicatePreds is not null, it will be updated to contain the list; /// of predecessors that received a copy of \p MBB.; /// If \p RemovalCallback is non-null. It will be called before MBB is; /// deleted.; /// If \p CandidatePtr is not null, duplicate into these blocks only.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TailDuplicator.h:137,update,updated,137,interpreter/llvm-project/llvm/include/llvm/CodeGen/TailDuplicator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TailDuplicator.h,1,['update'],['updated']
Deployability,"/// Take collections of DBG_VALUE instructions stored in TTracker, and; /// install them into their output blocks. Preserves a stable order of; /// DBG_VALUEs produced (which would otherwise cause nondeterminism) through; /// the AllVarsNumbering order.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h:76,install,install,76,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,1,['install'],['install']
Deployability,/// Target-Independent Code Generator Pass Configuration Options.; ///; /// This is an ImmutablePass solely for the purpose of exposing CodeGen options; /// to the internals of other CodeGen passes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h:43,Configurat,Configuration,43,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,1,['Configurat'],['Configuration']
Deployability,/// Target-specific DAG combine function for NEON load/store intrinsics; /// to merge base address updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:99,update,updates,99,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['update'],['updates']
Deployability,"/// TargetLowering::LowerCallTo - This is the default LowerCallTo; /// implementation, which just calls LowerCall.; /// FIXME: When all targets are; /// migrated to using LowerCall, this hook should be integrated into SDISel.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:202,integrat,integrated,202,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['integrat'],['integrated']
Deployability,"/// Tests whether registered callbacks will accept a given pass name.; ///; /// When parsing a pipeline text, the type of the outermost pipeline may be; /// omitted, in which case the type is automatically determined from the first; /// pass name in the text. This may be a name that is handled through one of the; /// callbacks. We check this through the oridinary parsing callbacks by setting; /// up a dummy PassManager in order to not force the client to also handle this; /// type of query.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp:95,pipeline,pipeline,95,interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,2,['pipeline'],['pipeline']
Deployability,"/// The -dealloc method in CIFilter highly unusual in that is will release; /// instance variables belonging to its *subclasses* if the variable name; /// starts with ""input"" or backs a property whose name starts with ""input"".; /// Subclasses should not release these ivars in their own -dealloc method --; /// doing so could result in an over release.; ///; /// This method returns true if the property will be released by; /// -[CIFilter dealloc].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:67,release,release,67,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,4,['release'],"['release', 'released']"
Deployability,/// The AST file was written with a different language/target; /// configuration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:67,configurat,configuration,67,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['configurat'],['configuration']
Deployability,/// The CGSCC analysis manager.; ///; /// See the documentation for the AnalysisManager template for detail; /// documentation. This type serves as a convenient way to refer to this; /// construct in the adaptors and proxies used to integrate this into the larger; /// pass manager infrastructure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h:233,integrat,integrate,233,interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,1,['integrat'],['integrate']
Deployability,"/// The CSE Analysis object.; /// This installs itself as a delegate to the MachineFunction to track; /// new instructions as well as deletions. It however will not be able to; /// track instruction mutations. In such cases, recordNewInstruction should be; /// called (for eg inside MachineIRBuilder::recordInsertion).; /// Also because of how just the instruction can be inserted without adding any; /// operands to the instruction, instructions are uniqued and inserted lazily.; /// CSEInfo should assert when trying to enter an incomplete instruction into; /// the CSEMap. There is Opcode level granularity on which instructions can be; /// CSE'd and for now, only Generic instructions are CSEable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h:39,install,installs,39,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h,1,['install'],['installs']
Deployability,"/// The LLVM OpenMP runtime. When completed and integrated, this will become; /// the default for Clang.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:48,integrat,integrated,48,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['integrat'],['integrated']
Deployability,/// The ML evictor (commonalities between release and development mode),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp:42,release,release,42,interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp,1,['release'],['release']
Deployability,/// The Microsoft bitfield layout rule allocates discrete storage; /// units of the field's formal type and only combines adjacent; /// fields of the same formal type. We want to emit a layout with; /// these discrete storage units instead of combining them into a; /// continuous run.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp:270,continuous,continuous,270,interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp,1,['continuous'],['continuous']
Deployability,/// The OpenMPIRBuilder Configuration,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:24,Configurat,Configuration,24,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['Configurat'],['Configuration']
Deployability,/// The SCEVParameterRewriter takes a scalar evolution expression and updates; /// the SCEVUnknown components following the Map (Value -> SCEV).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:70,update,updates,70,interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h,1,['update'],['updates']
Deployability,"/// The TLS base register when StackProtectorGuard is ""tls"", or register used; /// to store the stack canary for ""sysreg"".; /// On x86 this can be ""fs"" or ""gs"".; /// On AArch64 this can only be ""sp_el0"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h:102,canary,canary,102,interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h,1,['canary'],['canary']
Deployability,"/// The ValueType callback is called for every function definition or; /// declaration and allows accessing the type information, also behind; /// pointers. This can be useful, when the opaque pointer upgrade cleans all; /// type information behind pointers.; /// The second argument to ValueTypeCallback is the type ID of the; /// function, the two passed functions can be used to extract type; /// information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeReader.h:201,upgrade,upgrade,201,interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeReader.h,1,['upgrade'],['upgrade']
Deployability,"/// The actual update/transfer function which has to be implemented by the; /// derived classes.; ///; /// If it is called, the environment has changed and we have to determine if; /// the current information is still valid or adjust it otherwise.; ///; /// \Return CHANGED if the internal state changed, otherwise UNCHANGED.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:15,update,update,15,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['update']
Deployability,"/// The adaptor from a function pass to a loop pass computes these analyses and; /// makes them available to the loop passes ""for free"". Each loop pass is; /// expected to update these analyses if necessary to ensure they're; /// valid after it runs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h:172,update,update,172,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,1,['update'],['update']
Deployability,"/// The allocator used to create AST objects.; ///; /// AST objects are never destructed; rather, all memory associated with the; /// AST objects will be released when the ASTContext itself is destroyed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:154,release,released,154,interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,1,['release'],['released']
Deployability,/// The basic data container for the call graph of a \c Module of IR.; ///; /// This class exposes both the interface to the call graph for a module of IR.; ///; /// The core call graph itself can also be updated to reflect changes to the IR.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraph.h:205,update,updated,205,interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraph.h,1,['update'],['updated']
Deployability,"/// The block of configuration options, used to check that; /// a module is being used in a configuration compatible with the; /// configuration in which it was built.; ///; /// This block is part of the control block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h:17,configurat,configuration,17,interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,3,['configurat'],['configuration']
Deployability,"/// The buffer is handled in such a way that the buffer is; /// uninitialized, unbuffered, or out of space when OutBufCur >=; /// OutBufEnd. Thus a single comparison suffices to determine if we; /// need to take the slow path to write a single character.; ///; /// The buffer is in one of three states:; /// 1. Unbuffered (BufferMode == Unbuffered); /// 1. Uninitialized (BufferMode != Unbuffered && OutBufStart == 0).; /// 2. Buffered (BufferMode != Unbuffered && OutBufStart != 0 &&; /// OutBufEnd - OutBufStart >= 1).; ///; /// If buffered, then the raw_ostream owns the buffer if (BufferMode ==; /// InternalBuffer); otherwise the buffer has been set via SetBuffer and is; /// managed by the subclass.; ///; /// If a subclass installs an external buffer using SetBuffer then it can wait; /// for a \see write_impl() call to handle the data which has been put into; /// this buffer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:730,install,installs,730,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,1,['install'],['installs']
Deployability,/// The client can handle an AST file that cannot load because it's; /// compiled configuration doesn't match that of the context it was; /// loaded into.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:82,configurat,configuration,82,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['configurat'],['configuration']
Deployability,/// The collection of live intervals which should have been updated; /// immediately after rematerialiation but delayed until; /// lateLiveIntervalUpdate is called.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:60,update,updated,60,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['update'],['updated']
Deployability,"/// The current implementation for computing relative block frequencies does; /// not handle correctly control-flow graphs containing irreducible loops. To; /// resolve the problem, we apply a post-processing step, which iteratively; /// updates block frequencies based on the frequencies of their predesessors.; /// This corresponds to finding the stationary point of the Markov chain by; /// an iterative method aka ""PageRank computation"".; /// The algorithm takes at most O(|E| * IterativeBFIMaxIterations) steps but; /// typically converges faster.; ///; /// Decide whether we want to apply iterative inference for a given function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h:238,update,updates,238,interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h,1,['update'],['updates']
Deployability,/// The current implementation of ELFDebugObject replicates the approach used in; /// RuntimeDyld: It patches executable and data section headers in the given; /// object buffer with load-addresses of their corresponding sections in target; /// memory.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp:102,patch,patches,102,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,1,['patch'],['patches']
Deployability,"/// The data structure for the dependency graph; ///; /// Note that in this graph if there is an edge from A to B (A -> B),; /// then it means that B depends on A, and when the state of A is; /// updated, node B should also be updated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:196,update,updated,196,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,2,['update'],['updated']
Deployability,"/// The dependence stack is used to track dependences during an; /// `AbstractAttribute::update` call. As `AbstractAttribute::update` can be; /// recursive we might have multiple vectors of dependences in here. The stack; /// size, should be adjusted according to the expected recursion depth and the; /// inner dependence vector size to the expected number of dependences per; /// abstract attribute. Since the inner vectors are actually allocated on the; /// stack we can be generous with their size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:89,update,update,89,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,2,['update'],['update']
Deployability,/// The dependency scanning service contains shared configuration and state that; /// is used by the individual dependency scanning workers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningService.h:52,configurat,configuration,52,interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningService.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningService.h,1,['configurat'],['configuration']
Deployability,"/// The end index of this node's substring in the main string.; ///; /// Every leaf node must have its \p EndIdx incremented at the end of every; /// step in the construction algorithm. To avoid having to update O(N); /// nodes individually at the end of every step, the end index is stored; /// as a pointer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SuffixTreeNode.h:205,update,update,205,interpreter/llvm-project/llvm/include/llvm/Support/SuffixTreeNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SuffixTreeNode.h,2,['update'],['update']
Deployability,"/// The epoch that defines the auto-upgrade compatibility for the bitcode.; ///; /// LLVM guarantees in a major release that a minor release can read bitcode; /// generated by previous minor releases. We translate this by making the reader; /// accepting only bitcode with the same epoch, except for the X.0 release which; /// also accepts N-1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/LLVMBitCodes.h:36,upgrade,upgrade,36,interpreter/llvm-project/llvm/include/llvm/Bitcode/LLVMBitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/LLVMBitCodes.h,5,"['release', 'upgrade']","['release', 'releases', 'upgrade']"
Deployability,/// The flag is true upon \p UpdatedCSRs initialization; /// and false otherwise.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h:29,Update,UpdatedCSRs,29,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,1,['Update'],['UpdatedCSRs']
Deployability,"/// The following callbacks deal with tasks, which normally represent the; /// entire optimization and code generation pipeline for what will become a; /// single native object file. Each task has a unique identifier between 0 and; /// getMaxTasks()-1, which is supplied to the callback via the Task parameter.; /// A task represents the entire pipeline for ThinLTO and regular; /// (non-parallel) LTO, but a parallel code generation task will be split into; /// N tasks before code generation, where N is the parallelism level.; ///; /// LTO may decide to stop processing a task at any time, for example if the; /// module is empty or if a module hook (see below) returns false. For this; /// reason, the client should not expect to receive exactly getMaxTasks(); /// native object files.; /// A module hook may be used by a linker to perform actions during the LTO; /// pipeline. For example, a linker may use this function to implement; /// -save-temps. If this function returns false, any further processing for; /// that task is aborted.; ///; /// Module hooks must be thread safe with respect to the linker's internal; /// data structures. A module hook will never be called concurrently from; /// multiple threads with the same task ID, or the same module.; ///; /// Note that in out-of-process backend scenarios, none of the hooks will be; /// called for ThinLTO tasks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h:119,pipeline,pipeline,119,interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,3,['pipeline'],['pipeline']
Deployability,/// The generation number at which we last updated ActiveModuleMacros.; /// \see Preprocessor::VisibleModules.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h:43,update,updated,43,interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,1,['update'],['updated']
Deployability,/// The head of a linked list of all SCEVUnknown values that have been; /// allocated. This is used by releaseMemory to locate them all and call; /// their destructors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h:103,release,releaseMemory,103,interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h,1,['release'],['releaseMemory']
Deployability,/// The index updated on every iteration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/MatrixUtils.h:14,update,updated,14,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/MatrixUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/MatrixUtils.h,1,['update'],['updated']
Deployability,/// The installed log stream.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTMerger.h:8,install,installed,8,interpreter/llvm-project/clang/include/clang/AST/ExternalASTMerger.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTMerger.h,1,['install'],['installed']
Deployability,"/// The instance variable must be released, either by calling; /// -release on it directly or by nilling it out with a property setter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:34,release,released,34,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,2,['release'],"['release', 'released']"
Deployability,/// The instance variable must not be directly released with -release.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:47,release,released,47,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,2,['release'],"['release', 'released']"
Deployability,/// The instruction which will be updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:34,update,updated,34,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['update'],['updated']
Deployability,/// The is the piece of the class that is implemented by subclasses. This; /// writes the \p Size bytes starting at; /// \p Ptr to the underlying stream.; ///; /// This function is guaranteed to only be called at a point at which it is; /// safe for the subclass to install a new buffer via SetBuffer.; ///; /// \param Ptr The start of the data to be written. For buffered streams this; /// is guaranteed to be the start of the buffer.; ///; /// \param Size The number of bytes to be written.; ///; /// \invariant { Size > 0 },MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:266,install,install,266,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,1,['install'],['install']
Deployability,"/// The linkage type of the associated global value.; ///; /// One use is to flag values that have local linkage types and need to; /// have module identifier appended before placing into the combined; /// index, to disambiguate from other values with the same name.; /// In the future this will be used to update and optimize linkage; /// types based on global summary-based analysis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ModuleSummaryIndex.h:307,update,update,307,interpreter/llvm-project/llvm/include/llvm/IR/ModuleSummaryIndex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ModuleSummaryIndex.h,1,['update'],['update']
Deployability,/// The liverange splitting logic sometimes produces bundles of copies when; /// subregisters are involved. Expand these into a sequence of copy instructions; /// after processing the last in the bundle. Does not update LiveIntervals; /// which we shouldn't need for this instruction anymore.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp:213,update,update,213,interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp,1,['update'],['update']
Deployability,/// The lock was released successfully.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/LockFileManager.h:17,release,released,17,interpreter/llvm-project/llvm/include/llvm/Support/LockFileManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/LockFileManager.h,1,['release'],['released']
Deployability,/// The loop analysis manager.; ///; /// See the documentation for the AnalysisManager template for detail; /// documentation. This typedef serves as a convenient way to refer to this; /// construct in the adaptors and proxies used to integrate this into the larger; /// pass manager infrastructure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h:235,integrat,integrate,235,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,1,['integrat'],['integrate']
Deployability,/// The main class in the implementation of the target independent; /// software pipeliner pass.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:81,pipeline,pipeliner,81,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['pipeline'],['pipeliner']
Deployability,/// The memory buffer containing the remapping configuration. Remappings; /// holds pointers into this buffer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProfReader.cpp:47,configurat,configuration,47,interpreter/llvm-project/llvm/lib/ProfileData/InstrProfReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProfReader.cpp,1,['configurat'],['configuration']
Deployability,"/// The merger will update the output model to include all columns from all sources. Entries corresponding to columns; /// that are not present in a source will be set to the default value of the type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleMerger.hxx:20,update,update,20,tree/ntuple/v7/inc/ROOT/RNTupleMerger.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleMerger.hxx,1,['update'],['update']
Deployability,"/// The module offset map data for this file. If non-empty, the various; /// ContinuousRangeMaps described below have not yet been populated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ModuleFile.h:77,Continuous,ContinuousRangeMaps,77,interpreter/llvm-project/clang/include/clang/Serialization/ModuleFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ModuleFile.h,1,['Continuous'],['ContinuousRangeMaps']
Deployability,/// The node N that was updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h:24,update,updated,24,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,1,['update'],['updated']
Deployability,/// The number of instructions that would be saved by outlining every; /// candidate of this type.; ///; /// This is a fixed value which is not updated during the candidate pruning; /// process. It is only used for deciding which candidate to keep if two; /// candidates overlap. The true benefit is stored in the OutlinedFunction; /// for some given candidate.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOutliner.h:144,update,updated,144,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOutliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOutliner.h,1,['update'],['updated']
Deployability,/// The number of patchable bytes the call needs to get lowered into.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h:18,patch,patchable,18,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,1,['patch'],['patchable']
Deployability,/// The parent ScalarEvolution value. This is used to update the; /// parent's maps when the value associated with a SCEVUnknown is; /// deleted or RAUW'd.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:54,update,update,54,interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h,1,['update'],['update']
Deployability,"/// The parsed major, minor, and patch numbers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h:33,patch,patch,33,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,1,['patch'],['patch']
Deployability,"/// The parser has parsed a '__super' nested-name-specifier.; ///; /// \param SuperLoc The location of the '__super' keyword.; ///; /// \param ColonColonLoc The location of the '::'.; ///; /// \param SS The nested-name-specifier, which will be updated in-place; /// to reflect the parsed nested-name-specifier.; ///; /// \returns true if an error occurred, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:244,update,updated,244,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['update'],['updated']
Deployability,"/// The parser has parsed a global nested-name-specifier '::'.; ///; /// \param CCLoc The location of the '::'.; ///; /// \param SS The nested-name-specifier, which will be updated in-place; /// to reflect the parsed nested-name-specifier.; ///; /// \returns true if an error occurred, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:173,update,updated,173,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['update'],['updated']
Deployability,"/// The path to the installed clang directory, if any.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:20,install,installed,20,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['install'],['installed']
Deployability,"/// The plugin creates a debug object from when JITLink starts processing the; /// corresponding LinkGraph. It provides access to the pass configuration of; /// the LinkGraph and calls the finalization function, once the resulting link; /// artifact was emitted.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp:139,configurat,configuration,139,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,1,['configurat'],['configuration']
Deployability,"/// The pointer to update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RArrowDS.cxx:19,update,update,19,tree/dataframe/src/RArrowDS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RArrowDS.cxx,1,['update'],['update']
Deployability,/// The polymorphic API which runs the pass over a given IR entity.; ///; /// Note that actual pass object can omit the analysis manager argument if; /// desired. Also that the analysis manager may be null if there is no; /// analysis manager in the pass pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:255,pipeline,pipeline,255,interpreter/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h,1,['pipeline'],['pipeline']
Deployability,"/// The prolog/epilog code inserter calculates the final stack; /// offsets for all of the fixed size objects, updating the Objects list; /// above. It then updates StackSize to contain the number of bytes that need; /// to be allocated on entry to the function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h:157,update,updates,157,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,1,['update'],['updates']
Deployability,"/// The set of ""configuration macros"", which are macros that; /// (intentionally) change how this module is built.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Module.h:16,configurat,configuration,16,interpreter/llvm-project/clang/include/clang/Basic/Module.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Module.h,1,['configurat'],['configuration']
Deployability,/// The set of multilibs that the detected installation supports.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h:43,install,installation,43,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,2,['install'],['installation']
Deployability,/// The set of nodes which have already been legalized. We hold a; /// reference to it in order to update as necessary on node deletion.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp:99,update,update,99,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,1,['update'],['update']
Deployability,/// The version of getAAFor that allows to omit a querying abstract; /// attribute. Using this after Attributor started running is restricted to; /// only the Attributor itself. Initial seeding of AAs can be done via this; /// function.; /// NOTE: ForceUpdate is ignored in any stage other than the update stage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:299,update,update,299,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['update']
Deployability,"/// There are 4 scenarios we can use the InlineAdvisor:; /// - Default - use manual heuristics.; ///; /// - Release mode, the expected mode for production, day to day deployments.; /// In this mode, when building the compiler, we also compile a pre-trained ML; /// model to native code, and link it as a static library. This mode has low; /// overhead and no additional dependencies for the compiler runtime.; ///; /// - Development mode, for training new models.; /// In this mode, we trade off runtime performance for flexibility. This mode; /// requires the TFLite library, and evaluates models dynamically. This mode; /// also permits generating training logs, for offline training.; ///; /// - Dynamically load an advisor via a plugin (PluginInlineAdvisorAnalysis)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h:108,Release,Release,108,interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h,2,"['Release', 'deploy']","['Release', 'deployments']"
Deployability,"/// There are fields(sizes, offsets) which should be updated after; /// sections are generated. To remember offsets and related data; /// the descendants of SectionPatch structure should be used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:53,update,updated,53,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['update'],['updated']
Deployability,/// These are the various PPC970 execution unit pipelines. Each instruction; /// is one of these.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h:48,pipeline,pipelines,48,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h,1,['pipeline'],['pipelines']
Deployability,"/// These function return the interval used by a resource in bottom and top; /// scheduling.; ///; /// Consider an instruction that uses resources X0, X1 and X2 as follows:; ///; /// X0 X1 X1 X2 +--------+-------------+--------------+; /// |Resource|AcquireAtCycle|ReleaseAtCycle|; /// +--------+-------------+--------------+; /// | X0 | 0 | 1 |; /// +--------+-------------+--------------+; /// | X1 | 1 | 3 |; /// +--------+-------------+--------------+; /// | X2 | 3 | 4 |; /// +--------+-------------+--------------+; ///; /// If we can schedule the instruction at cycle C, we need to; /// compute the interval of the resource as follows:; ///; /// # TOP DOWN SCHEDULING; ///; /// Cycles scheduling flows to the _right_, in the same direction; /// of time.; ///; /// C 1 2 3 4 5 ...; /// ------|------|------|------|------|------|----->; /// X0 X1 X1 X2 ---> direction of time; /// X0 [C, C+1); /// X1 [C+1, C+3); /// X2 [C+3, C+4); ///; /// Therefore, the formula to compute the interval for a resource; /// of an instruction that can be scheduled at cycle C in top-down; /// scheduling is:; ///; /// [C+AcquireAtCycle, C+ReleaseAtCycle); ///; ///; /// # BOTTOM UP SCHEDULING; ///; /// Cycles scheduling flows to the _left_, in opposite direction; /// of time.; ///; /// In bottom up scheduling, the scheduling happens in opposite; /// direction to the execution of the cycles of the; /// instruction. When the instruction is scheduled at cycle `C`,; /// the resources are allocated in the past relative to `C`:; ///; /// 2 1 C -1 -2 -3 -4 -5 ...; /// <-----|------|------|------|------|------|------|------|---; /// X0 X1 X1 X2 ---> direction of time; /// X0 (C+1, C]; /// X1 (C, C-2]; /// X2 (C-2, C-3]; ///; /// Therefore, the formula to compute the interval for a resource; /// of an instruction that can be scheduled at cycle C in bottom-up; /// scheduling is:; ///; /// [C-ReleaseAtCycle+1, C-AcquireAtCycle+1); ///; ///; /// NOTE: In both cases, the number of cycles booked by a; /// resou",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:265,Release,ReleaseAtCycle,265,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['Release'],['ReleaseAtCycle']
Deployability,/// Thin wrapper around a block for SSA Updater interface. Necessary because; /// we need to track the PHI value(s) that we may have observed as necessary; /// in this block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:40,Update,Updater,40,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['Update'],['Updater']
Deployability,/// This boolean keeps track of whether there is a call; /// to builtin \@llvm.experimental.patchpoint.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h:92,patch,patchpoint,92,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,1,['patch'],['patchpoint']
Deployability,"/// This can be queried by loop passes which run other loop passes (like pass; /// managers) to know whether the loop needs to be skipped due to updates to; /// the loop nest.; ///; /// If this returns true, the loop object may have been deleted, so passes; /// should take care not to touch the object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h:145,update,updates,145,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,1,['update'],['updates']
Deployability,"/// This checks for global variables which should be upgraded. If it requires; /// upgrading, returns a pointer to the upgraded variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h:53,upgrade,upgraded,53,interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,2,['upgrade'],['upgraded']
Deployability,/// This checks for module flags which should be upgraded. It returns true if; /// module is modified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h:49,upgrade,upgraded,49,interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,1,['upgrade'],['upgraded']
Deployability,/// This checks for objc retain release marker which should be upgraded. It; /// returns true if module is modified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:32,release,release,32,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,2,"['release', 'upgrade']","['release', 'upgraded']"
Deployability,"/// This class defines what a type II code clone is: If it collects for two; /// statements the same data, then those two statements are considered to be; /// clones of each other.; ///; /// All collected data is forwarded to the given data consumer of the type T.; /// The data consumer class needs to provide a member method with the signature:; /// update(StringRef Str)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CloneDetection.cpp:352,update,update,352,interpreter/llvm-project/clang/lib/Analysis/CloneDetection.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CloneDetection.cpp,1,['update'],['update']
Deployability,/// This class is a DAGUpdateListener that listens for updates to nodes and; /// recomputes their ready state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.cpp:55,update,updates,55,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.cpp,1,['update'],['updates']
Deployability,/// This class is declared before the raw_fd_ostream so that it is constructed; /// before the raw_fd_ostream is constructed and destructed after the; /// raw_fd_ostream is destructed. It installs cleanups in its constructor and; /// uninstalls them in its destructor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ToolOutputFile.h:188,install,installs,188,interpreter/llvm-project/llvm/include/llvm/Support/ToolOutputFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ToolOutputFile.h,1,['install'],['installs']
Deployability,/// This class is used to form a handle around another node that; /// is persistent and is updated across invocations of replaceAllUsesWith on its; /// operand. This node should be directly created by end-users and not added to; /// the AllNodes list.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGNodes.h:91,update,updated,91,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGNodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGNodes.h,1,['update'],['updated']
Deployability,"/// This class listens to instruction state transition events; /// in order to construct a timeline information.; ///; /// For every instruction executed by the Pipeline, this class constructs; /// a TimelineViewEntry object. TimelineViewEntry objects are then used; /// to print the timeline information, as well as the ""average wait times""; /// for every instruction in the input assembly sequence.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h:161,Pipeline,Pipeline,161,interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,1,['Pipeline'],['Pipeline']
Deployability,"/// This class provides an interface for updating the loop pass manager based; /// on mutations to the loop nest.; ///; /// A reference to an instance of this class is passed as an argument to each; /// Loop pass, and Loop passes should use it to update LPM infrastructure if; /// they modify the loop nest structure.; ///; /// \c LPMUpdater comes with two modes: the loop mode and the loop-nest mode. In; /// loop mode, all the loops in the function will be pushed into the worklist; /// and when new loops are added to the pipeline, their subloops are also; /// inserted recursively. On the other hand, in loop-nest mode, only top-level; /// loops are contained in the worklist and the addition of new (top-level); /// loops will not trigger the addition of their subloops.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h:247,update,update,247,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,2,"['pipeline', 'update']","['pipeline', 'update']"
Deployability,"/// This class provides the basic blocks traversal order used by passes like; /// ReachingDefAnalysis and ExecutionDomainFix.; /// It identifies basic blocks that are part of loops and should to be visited; /// twice and returns efficient traversal order for all the blocks.; ///; /// We want to visit every instruction in every basic block in order to update; /// it's execution domain or collect clearance information. However, for the; /// clearance calculation, we need to know clearances from all predecessors; /// (including any backedges), therfore we need to visit some blocks twice.; /// As an example, consider the following loop.; ///; ///; /// PH -> A -> B (xmm<Undef> -> xmm<Def>) -> C -> D -> EXIT; /// ^ |; /// +----------------------------------+; ///; /// The iteration order this pass will return is as follows:; /// Optimized: PH A B C A' B' C' D; ///; /// The basic block order is constructed as follows:; /// Once we finish processing some block, we update the counters in MBBInfos; /// and re-process any successors that are now 'done'.; /// We call a block that is ready for its final round of processing `done`; /// (isBlockDone), e.g. when all predecessor information is known.; ///; /// Note that a naive traversal order would be to do two complete passes over; /// all basic blocks/instructions, the first for recording clearances, the; /// second for updating clearance based on backedges.; /// However, for functions without backedges, or functions with a lot of; /// straight-line code, and a small loop, that would be a lot of unnecessary; /// work (since only the BBs that are part of the loop require two passes).; ///; /// E.g., the naive iteration order for the above exmple is as follows:; /// Naive: PH A B C D A' B' C' D'; ///; /// In the optimized approach we avoid processing D twice, because we; /// can entirely process the predecessors before getting to D.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LoopTraversal.h:353,update,update,353,interpreter/llvm-project/llvm/include/llvm/CodeGen/LoopTraversal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LoopTraversal.h,2,['update'],['update']
Deployability,"/// This class provides transaction based operation on the IR.; /// Every change made through this class is recorded in the internal state and; /// can be undone (rollback) until commit is called.; /// CGP does not check if instructions could be speculatively executed when; /// moved. Preserving the original location would pessimize the debugging; /// experience, as well as negatively impact the quality of sample PGO.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:163,rollback,rollback,163,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['rollback'],['rollback']
Deployability,"/// This class tracks which instructions are in-flight (i.e., dispatched but not; /// retired) in the OoO backend.; //; /// This class checks on every cycle if/which instructions can be retired.; /// Instructions are retired in program order.; /// In the event of an instruction being retired, the pipeline that owns; /// this RetireControlUnit (RCU) gets notified.; ///; /// On instruction retired, register updates are all architecturally; /// committed, and any physicall registers previously allocated for the; /// retired instruction are freed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RetireControlUnit.h:298,pipeline,pipeline,298,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RetireControlUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RetireControlUnit.h,2,"['pipeline', 'update']","['pipeline', 'updates']"
Deployability,"/// This class uses information about analyze scalars to rewrite expressions; /// in canonical form.; ///; /// Clients should create an instance of this class when rewriting is needed,; /// and destroy it when finished to allow the release of the associated; /// memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h:232,release,release,232,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h,1,['release'],['release']
Deployability,"/// This creates new descriptor for a module with the specified; /// parent scope.; /// \param Scope Parent scope; /// \param Name Name of this module; /// \param ConfigurationMacros; /// A space-separated shell-quoted list of -D macro; /// definitions as they would appear on a command line.; /// \param IncludePath The path to the module map file.; /// \param APINotesFile The path to an API notes file for this module.; /// \param File Source file of the module.; /// Used for Fortran modules.; /// \param LineNo Source line number of the module.; /// Used for Fortran modules.; /// \param IsDecl This is a module declaration; default to false;; /// when set to true, only Scope and Name are required; /// as this entry is just a hint for the debugger to find; /// the corresponding definition in the global scope.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DIBuilder.h:163,Configurat,ConfigurationMacros,163,interpreter/llvm-project/llvm/include/llvm/IR/DIBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DIBuilder.h,1,['Configurat'],['ConfigurationMacros']
Deployability,"/// This field is set if this resource is currently reserved.; ///; /// Resources can be reserved for a number of cycles.; /// Instructions can still be dispatched to reserved resources. However,; /// istructions dispatched to a reserved resource cannot be issued to the; /// underlying units (i.e. pipelines) until the resource is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h:299,pipeline,pipelines,299,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h,2,"['pipeline', 'release']","['pipelines', 'released']"
Deployability,/// This function checks if it is valid to move Candidate to the delay slot; /// and returns true if it isn't. It also updates memory and register; /// dependence information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsDelaySlotFiller.cpp:119,update,updates,119,interpreter/llvm-project/llvm/lib/Target/Mips/MipsDelaySlotFiller.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsDelaySlotFiller.cpp,1,['update'],['updates']
Deployability,"/// This function deletes dead loops. The caller of this function needs to; /// guarantee that the loop is infact dead.; /// The function requires a bunch or prerequisites to be present:; /// - The loop needs to be in LCSSA form; /// - The loop needs to have a Preheader; /// - A unique dedicated exit block must exist; ///; /// This also updates the relevant analysis information in \p DT, \p SE, \p LI; /// and \p MSSA if pointers to those are provided.; /// It also updates the loop PM if an updater struct is provided.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h:339,update,updates,339,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,3,['update'],"['updater', 'updates']"
Deployability,"/// This function executes the program using the arguments provided. The; /// invoked program will inherit the stdin, stdout, and stderr file; /// descriptors, the environment and other configuration settings of the; /// invoking program.; /// This function waits for the program to finish, so should be avoided in; /// library functions that aren't expected to block. Consider using; /// ExecuteNoWait() instead.; /// \returns an integer result code indicating the status of the program.; /// A zero or positive value indicates the result code of the program.; /// -1 indicates failure to execute; /// -2 indicates a crash during execution or timeout",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Program.h:186,configurat,configuration,186,interpreter/llvm-project/llvm/include/llvm/Support/Program.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Program.h,1,['configurat'],['configuration']
Deployability,"/// This function is called when we suspect that the update-chain of a phi node; /// (whose symbolic SCEV expression sin \p PhiScev) contains redundant casts,; /// that can be ignored. (This can happen when the PSCEV rewriter adds a runtime; /// predicate P under which the SCEV expression for the phi can be the; /// AddRecurrence \p AR; See createAddRecFromPHIWithCast). We want to find the; /// cast instructions that are involved in the update-chain of this induction.; /// A caller that adds the required runtime predicate can be free to drop these; /// cast instructions, and compute the phi using \p AR (instead of some scev; /// expression with casts).; ///; /// For example, without a predicate the scev expression can take the following; /// form:; /// (Ext ix (Trunc iy ( Start + i*Step ) to ix) to iy); ///; /// It corresponds to the following IR sequence:; /// %for.body:; /// %x = phi i64 [ 0, %ph ], [ %add, %for.body ]; /// %casted_phi = ""ExtTrunc i64 %x""; /// %add = add i64 %casted_phi, %step; ///; /// where %x is given in \p PN,; /// PSE.getSCEV(%x) is equal to PSE.getSCEV(%casted_phi) under a predicate,; /// and the IR sequence that ""ExtTrunc i64 %x"" represents can take one of; /// several forms, for example, such as:; /// ExtTrunc1: %casted_phi = and %x, 2^n-1; /// or:; /// ExtTrunc2: %t = shl %x, m; /// %casted_phi = ashr %t, m; ///; /// If we are able to find such sequence, we return the instructions; /// we found, namely %casted_phi and the instructions on its use-def chain up; /// to the phi (not including the phi).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp:53,update,update-chain,53,interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,2,['update'],['update-chain']
Deployability,"/// This function must be overridden in the derived class to pass on constant term optimization configuration; /// to the function to be minimized. For a RooAbsArg, this would be RooAbsArg::constOptimizeTestStatistic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsMinimizerFcn.h:96,configurat,configuration,96,roofit/roofitcore/src/RooAbsMinimizerFcn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsMinimizerFcn.h,1,['configurat'],['configuration']
Deployability,"/// This function ought to emit, in the general case, a call to; // the openmp runtime kmpc_push_num_teams. In NVPTX backend it is not needed; // as these numbers are obtained through the PTX grid and block configuration.; /// \param NumTeams An integer expression of teams.; /// \param ThreadLimit An integer expression of threads.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.h:207,configurat,configuration,207,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.h,1,['configurat'],['configuration']
Deployability,"/// This function registers a function to be called when the user ""interrupts""; /// the program (typically by pressing ctrl-c). When the user interrupts the; /// program, the specified interrupt function is called instead of the program; /// being killed, and the interrupt function automatically disabled.; ///; /// Note that interrupt functions are not allowed to call any non-reentrant; /// functions. An null interrupt function pointer disables the current; /// installed function. Note also that the handler may be executed on a; /// different thread on some platforms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Signals.h:466,install,installed,466,interpreter/llvm-project/llvm/include/llvm/Support/Signals.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Signals.h,1,['install'],['installed']
Deployability,"/// This function updates sample overlap statistics of an overlap function in; /// base and test profile. It also calculates a function-internal similarity; /// FIS as follows:; /// For offsets i that have samples in at least one profile in this; /// function A, given BS(i) returned by computeBlockSimilarity(), compute; /// FIS(A) = (2.0 - sum_i(1.0 - BS(i))) / 2, ranging in [0.0f to 1.0f] with; /// 0.0 meaning no overlap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp:18,update,updates,18,interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp,1,['update'],['updates']
Deployability,"/// This function updates statistics in FuncOverlap, HotBlockOverlap, and; /// Difference for two sample units in a matched function according to the; /// given match status.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp:18,update,updates,18,interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp,1,['update'],['updates']
Deployability,"/// This function updates statistics in FuncOverlap, HotBlockOverlap, and; /// Difference for unmatched callees that only present in one profile in a; /// matched caller function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp:18,update,updates,18,interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp,1,['update'],['updates']
Deployability,/// This function updates the branches post restore point split.; ///; /// Restore point has been split.; /// Old restore point: MBB; /// New restore point: NMBB; /// Any basic block(say BBToUpdate) which had a fallthrough to MBB; /// previously should; /// 1. Fallthrough to NMBB iff NMBB is inserted immediately above MBB in the; /// block layout OR; /// 2. Branch unconditionally to NMBB iff NMBB is inserted at any other place.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp:18,update,updates,18,interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp,1,['update'],['updates']
Deployability,/// This helper owns any CoreFoundation pointer and will call CFRelease() on; /// any valid pointer it owns unless that pointer is explicitly released using; /// the release() member function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/CFBundle.cpp:142,release,released,142,interpreter/llvm-project/llvm/tools/dsymutil/CFBundle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/CFBundle.cpp,2,['release'],"['release', 'released']"
Deployability,"/// This initializes an ELF file header with information specific to a binary; /// dynamic shared object.; /// Offsets, indexes, links, etc. for section and program headers are just; /// zero-initialized as they will be updated elsewhere.; ///; /// @param ElfHeader Target ELFT::Ehdr to populate.; /// @param Machine Target architecture (e_machine from ELF specifications).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/InterfaceStub/ELFObjHandler.cpp:220,update,updated,220,interpreter/llvm-project/llvm/lib/InterfaceStub/ELFObjHandler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/InterfaceStub/ELFObjHandler.cpp,1,['update'],['updated']
Deployability,"/// This intrinisc performs two rounds of SHA512 operation using initial SHA512; /// state (C,D,G,H) from \a __A, an initial SHA512 state (A,B,E,F) from; /// \a __A, and a pre-computed sum of the next two round message qwords and; /// the corresponding round constants from \a __C (only the two lower qwords; /// of the third operand). The updated SHA512 state (A,B,E,F) is written to; /// \a __A, and \a __A can be used as the updated state (C,D,G,H) in later; /// rounds.; ///; /// \headerfile <immintrin.h>; ///; /// \code; /// __m256i _mm256_sha512rnds2_epi64(__m256i __A, __m256i __B, __m128i __C); /// \endcode; ///; /// This intrinsic corresponds to the \c VSHA512RNDS2 instruction.; ///; /// \param __A; /// A 256-bit vector of [4 x long long].; /// \param __B; /// A 256-bit vector of [4 x long long].; /// \param __C; /// A 128-bit vector of [2 x long long].; /// \returns; /// A 256-bit vector of [4 x long long].; ///; /// \code{.operation}; /// DEFINE ROR64(qword, n) {; /// 	count := n % 64; /// 	dest := (qword >> count) | (qword << (64 - count)); /// 	RETURN dest; /// }; /// DEFINE SHR64(qword, n) {; /// 	RETURN qword >> n; /// }; /// DEFINE cap_sigma0(qword) {; /// 	RETURN ROR64(qword,28) ^ ROR64(qword, 34) ^ ROR64(qword, 39); /// }; /// DEFINE cap_sigma1(qword) {; /// 	RETURN ROR64(qword,14) ^ ROR64(qword, 18) ^ ROR64(qword, 41); /// }; /// DEFINE MAJ(a,b,c) {; /// 	RETURN (a & b) ^ (a & c) ^ (b & c); /// }; /// DEFINE CH(e,f,g) {; /// 	RETURN (e & f) ^ (g & ~e); /// }; /// A[0] := __B.qword[3]; /// B[0] := __B.qword[2]; /// C[0] := __C.qword[3]; /// D[0] := __C.qword[2]; /// E[0] := __B.qword[1]; /// F[0] := __B.qword[0]; /// G[0] := __C.qword[1]; /// H[0] := __C.qword[0]; /// WK[0]:= __A.qword[0]; /// WK[1]:= __A.qword[1]; /// FOR i := 0 to 1:; /// 	A[i+1] := CH(E[i], F[i], G[i]) +; /// 	cap_sigma1(E[i]) + WK[i] + H[i] +; /// 	MAJ(A[i], B[i], C[i]) +; /// 	cap_sigma0(A[i]); /// 	B[i+1] := A[i]; /// 	C[i+1] := B[i]; /// 	D[i+1] := C[i]; /// 	E[i+1] := CH(E[i], F[i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sha512intrin.h:340,update,updated,340,interpreter/llvm-project/clang/lib/Headers/sha512intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sha512intrin.h,2,['update'],['updated']
Deployability,"/// This intrinsic performs two rounds of SM3 operation using initial SM3 state; /// (C, D, G, H) from \a __A, an initial SM3 states (A, B, E, F); /// from \a __B and a pre-computed words from the \a __C. \a __A with; /// initial SM3 state of (C, D, G, H) assumes input of non-rotated left; /// variables from previous state. The updated SM3 state (A, B, E, F) is; /// written to \a __A. The \a imm8 should contain the even round number; /// for the first of the two rounds computed by this instruction. The; /// computation masks the \a imm8 value by AND’ing it with 0x3E so that only; /// even round numbers from 0 through 62 are used for this operation. The; /// calculated results are stored in \a dst.; ///; /// \headerfile <immintrin.h>; ///; /// \code; /// __m128i _mm_sm3rnds2_epi32(__m128i __A, __m128i __B, __m128i __C, const int; /// imm8) \endcode; ///; /// This intrinsic corresponds to the \c VSM3RNDS2 instruction.; ///; /// \param __A; /// A 128-bit vector of [4 x int].; /// \param __B; /// A 128-bit vector of [4 x int].; /// \param __C; /// A 128-bit vector of [4 x int].; /// \param imm8; /// A 8-bit constant integer.; /// \returns; /// A 128-bit vector of [4 x int].; ///; /// \code{.operation}; /// DEFINE ROL32(dword, n) {; /// 	count := n % 32; /// 	dest := (dword << count) | (dword >> (32-count)); /// 	RETURN dest; /// }; /// DEFINE P0(dword) {; /// 	RETURN dword ^ ROL32(dword, 9) ^ ROL32(dword, 17); /// }; /// DEFINE FF(x,y,z, round){; /// 	IF round < 16; /// 		RETURN (x ^ y ^ z); /// 	ELSE; /// 		RETURN (x & y) | (x & z) | (y & z); /// 	FI; /// }; /// DEFINE GG(x, y, z, round){; /// IF round < 16; /// 	RETURN (x ^ y ^ z); /// ELSE; /// 	RETURN (x & y) | (~x & z); /// FI; /// }; /// A[0] := __B.dword[3]; /// B[0] := __B.dword[2]; /// C[0] := __A.dword[3]; /// D[0] := __A.dword[2]; /// E[0] := __B.dword[1]; /// F[0] := __B.dword[0]; /// G[0] := __A.dword[1]; /// H[0] := __A.dword[0]; /// W[0] := __C.dword[0]; /// W[1] := __C.dword[1]; /// W[4] := __C.dword[2]; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sm3intrin.h:330,update,updated,330,interpreter/llvm-project/clang/lib/Headers/sm3intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sm3intrin.h,1,['update'],['updated']
Deployability,"/// This is a class to find a viable GCC installation for Clang to; /// use.; ///; /// This class tries to find a GCC installation on the system, and report; /// information about it. It starts from the host information provided to the; /// Driver, and has logic for fuzzing that where appropriate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h:41,install,installation,41,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,2,['install'],['installation']
Deployability,"/// This is a convenience struct to hold the parameters necessary for creating; /// the pre-built ""default"" out-of-order pipeline.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Context.h:121,pipeline,pipeline,121,interpreter/llvm-project/llvm/include/llvm/MCA/Context.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Context.h,1,['pipeline'],['pipeline']
Deployability,/// This is an auto-upgrade for bitcast between pointers with different; /// address spaces: the instruction is replaced by a pair ptrtoint+inttoptr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h:20,upgrade,upgrade,20,interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,1,['upgrade'],['upgrade']
Deployability,/// This is an auto-upgrade for bitcast constant expression between pointers; /// with different address spaces: the instruction is replaced by a pair; /// ptrtoint+inttoptr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h:20,upgrade,upgrade,20,interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,1,['upgrade'],['upgrade']
Deployability,/// This is an auto-upgrade hook for any old intrinsic function syntaxes; /// which need to have both the function updated as well as all calls updated; /// to the new function. This should only be run in a post-processing fashion; /// so that it can update all calls to the old function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h:20,upgrade,upgrade,20,interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,4,"['update', 'upgrade']","['update', 'updated', 'upgrade']"
Deployability,/// This is part of the update interface to inform the cache; /// that a block has been deleted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp:24,update,update,24,interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,2,['update'],['update']
Deployability,/// This is part of the update interface to remove information related to this; /// value from the cache.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp:24,update,update,24,interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,1,['update'],['update']
Deployability,/// This is step for the #CounterVar used to generate its update:; /// #CounterVar = #CounterInit + #CounterStep * CurrentIteration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:58,update,update,58,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update']
Deployability,"/// This is the pointer to an array of tokens that the macro is; /// defined to, with arguments expanded for function-like macros. If this is; /// a token stream, these are the tokens we are returning. This points into; /// the macro definition we are lexing from, a cache buffer that is owned by; /// the preprocessor, or some other buffer that we may or may not own; /// (depending on OwnsTokens).; /// Note that if it points into Preprocessor's cache buffer, the Preprocessor; /// may update the pointer as needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/TokenLexer.h:488,update,update,488,interpreter/llvm-project/clang/include/clang/Lex/TokenLexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/TokenLexer.h,1,['update'],['update']
Deployability,/// This is the update interface to inform the cache that an edge from; /// PredBB to OldSucc has been threaded to be from PredBB to NewSucc.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp:16,update,update,16,interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,1,['update'],['update']
Deployability,"/// This is used when splitting loops up. It replaces the OldChild entry in; /// our children list with NewChild, and updates the parent pointer of; /// OldChild to be null and the NewChild to be this loop.; /// This updates the loop depth of the new child.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h:118,update,updates,118,interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h,2,['update'],['updates']
Deployability,/// This method gets called from checkCustomHazard when mca is attempting to; /// dispatch an s_waitcnt instruction (or one of its variants). The method; /// looks at each of the instructions that are still executing in the pipeline; /// to determine if the waitcnt should force a wait.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCA/AMDGPUCustomBehaviour.h:224,pipeline,pipeline,224,interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCA/AMDGPUCustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCA/AMDGPUCustomBehaviour.h,1,['pipeline'],['pipeline']
Deployability,"/// This method gets called from the constructor and is; /// where we setup the InstrWaitCntInfo vector.; /// The core logic for determining which CNTs an instruction; /// interacts with is taken from SIInsertWaitcnts::updateEventWaitcntAfter().; /// Unfortunately, some of the logic from that function is not available to us; /// in this scope so we conservatively end up assuming that some; /// instructions interact with more CNTs than they do in reality.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCA/AMDGPUCustomBehaviour.h:219,update,updateEventWaitcntAfter,219,interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCA/AMDGPUCustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCA/AMDGPUCustomBehaviour.h,1,['update'],['updateEventWaitcntAfter']
Deployability,"/// This method introduces at least one new basic block into the function and; /// moves some of the predecessors of BB to be predecessors of the new block.; /// The new predecessors are indicated by the Preds array. The new block is; /// given a suffix of 'Suffix'. Returns new basic block to which predecessors; /// from Preds are now pointing.; ///; /// If BB is a landingpad block then additional basicblock might be introduced.; /// It will have Suffix+"".split_lp"". See SplitLandingPadPredecessors for more; /// details on this case.; ///; /// This currently updates the LLVM IR, DominatorTree, LoopInfo, and LCCSA but; /// no other analyses. In particular, it does not preserve LoopSimplify; /// (because it's complicated to handle the case where one of the edges being; /// split is an exit of a loop with other exits).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:564,update,updates,564,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,1,['update'],['updates']
Deployability,"/// This method introduces at least one new basic block into the function and; /// moves some of the predecessors of BB to be predecessors of the new block.; /// The new predecessors are indicated by the Preds array. The new block is; /// given a suffix of 'Suffix'. Returns new basic block to which predecessors; /// from Preds are now pointing.; ///; /// If BB is a landingpad block then additional basicblock might be introduced.; /// It will have Suffix+"".split_lp"". See SplitLandingPadPredecessors for more; /// details on this case.; ///; /// This currently updates the LLVM IR, DominatorTree, LoopInfo, and LCCSA but; /// no other analyses. In particular, it does not preserve LoopSimplify; /// (because it's complicated to handle the case where one of the edges being; /// split is an exit of a loop with other exits).; ///; /// FIXME: deprecated, switch to the DomTreeUpdater-based one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:564,update,updates,564,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,1,['update'],['updates']
Deployability,"/// This method is invoked to update a partial result during the event loop, right before passing the result to a; /// user-defined callback registered via RResultPtr::RegisterCallback",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RAction.hxx:30,update,update,30,tree/dataframe/inc/ROOT/RDF/RAction.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RAction.hxx,2,['update'],['update']
Deployability,/// This method may be called any time after instruction; /// selection is complete to determine if there is a call to builtin; /// \@llvm.experimental.patchpoint.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h:152,patch,patchpoint,152,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,1,['patch'],['patchpoint']
Deployability,/// This method may be implemented by targets that want to run passes after; /// register allocation pass pipeline but before prolog-epilog insertion.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:106,pipeline,pipeline,106,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,2,['pipeline'],['pipeline']
Deployability,"/// This method must be implemented by targets that; /// set the M_CONVERTIBLE_TO_3_ADDR flag. When this flag is set, the target; /// may be able to convert a two-address instruction into one or more true; /// three-address instructions on demand. This allows the X86 target (for; /// example) to convert ADD and SHL instructions into LEA instructions if they; /// would require register copies due to two-addressness.; ///; /// This method returns a null pointer if the transformation cannot be; /// performed, otherwise it returns the last new instruction.; ///; /// If \p LIS is not nullptr, the LiveIntervals info should be updated for; /// replacing \p MI with new instructions, even though this function does not; /// remove MI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:628,update,updated,628,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['update'],['updated']
Deployability,"/// This method releases a block of memory that was allocated with the; /// allocateMappedMemory method. It should not be used to release any memory; /// block allocated any other way.; /// \p Block describes the memory to be released.; ///; /// \r error_success if the function was successful, or an error_code; /// describing the failure if an error occurred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h:16,release,releases,16,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,3,['release'],"['release', 'released', 'releases']"
Deployability,"/// This method releases a block of memory that was allocated with the; /// allocateMappedMemory method. It should not be used to release any; /// memory block allocated any other way.; /// \p Block describes the memory to be released.; ///; /// \r error_success if the function was successful, or an error_code; /// describing the failure if an error occurred.; ///; /// Release mapped memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Memory.h:16,release,releases,16,interpreter/llvm-project/llvm/include/llvm/Support/Memory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Memory.h,4,"['Release', 'release']","['Release', 'release', 'released', 'releases']"
Deployability,"/// This method should install a (global) instruction selector pass, which; /// converts possibly generic instructions to fully target-specific; /// instructions, thereby constraining all generic virtual registers to; /// register classes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:23,install,install,23,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,2,['install'],['install']
Deployability,"/// This method should install a legalize pass, which converts the instruction; /// sequence into one that can be selected by the target.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:23,install,install,23,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,2,['install'],['install']
Deployability,"/// This method should install a register bank selector pass, which; /// assigns register banks to virtual registers without a register; /// class or register banks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:23,install,install,23,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,2,['install'],['install']
Deployability,"/// This method should install an IR translator pass, which converts from; /// LLVM code to machine instructions with possibly generic opcodes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:23,install,install,23,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,2,['install'],['install']
Deployability,"/// This method transforms the landing pad, OrigBB, by introducing two new basic; /// blocks into the function. One of those new basic blocks gets the; /// predecessors listed in Preds. The other basic block gets the remaining; /// predecessors of OrigBB. The landingpad instruction OrigBB is clone into both; /// of the new basic blocks. The new blocks are given the suffixes 'Suffix1' and; /// 'Suffix2', and are returned in the NewBBs vector.; ///; /// This currently updates the LLVM IR, DominatorTree, LoopInfo, and LCCSA but; /// no other analyses. In particular, it does not preserve LoopSimplify; /// (because it's complicated to handle the case where one of the edges being; /// split is an exit of a loop with other exits).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:471,update,updates,471,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,1,['update'],['updates']
Deployability,/// This method updates local state so that we know that PhysReg is the; /// proper container for VirtReg now. The physical register must not be used; /// for anything else when this is called.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp:16,update,updates,16,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp,1,['update'],['updates']
Deployability,/// This method will be called outside the session lock each time a JITDylib; /// is created (unless it is created with EmptyJITDylib set) to allow the; /// Platform to install any JITDylib specific standard symbols (e.g; /// __dso_handle).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Core.h:169,install,install,169,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Core.h,1,['install'],['install']
Deployability,"/// This method will do fixpoint iteration until fixpoint or the; /// maximum iteration count is reached.; ///; /// If the maximum iteration count is reached, This method will; /// indicate pessimistic fixpoint on attributes that transitively depend; /// on attributes that were scheduled for an update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:296,update,update,296,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['update']
Deployability,"/// This must be called when the Inliner pass is entered, to allow the; /// InlineAdvisor update internal state, as result of function passes run; /// between Inliner pass runs (for the same module).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h:90,update,update,90,interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h,1,['update'],['update']
Deployability,"/// This must be called when the Inliner pass is exited, as function passes; /// may be run subsequently. This allows an implementation of InlineAdvisor; /// to prepare for a partial update, based on the optional SCC.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h:183,update,update,183,interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h,1,['update'],['update']
Deployability,/// This object can be modified without requiring retains or; /// releases.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h:66,release,releases,66,interpreter/llvm-project/clang/include/clang/AST/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h,1,['release'],['releases']
Deployability,"/// This option is **deprecated**. See ``DeriveLF`` and ``DeriveCRLF`` of; /// ``LineEnding``.; /// \version 10; // bool DeriveLineEnding;; /// If ``true``, analyze the formatted file for the most common; /// alignment of ``&`` and ``*``.; /// Pointer and reference alignment styles are going to be updated according; /// to the preferences found in the file.; /// ``PointerAlignment`` is then used only as fallback.; /// \version 3.7",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:299,update,updated,299,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['update'],['updated']
Deployability,/// This pass calculates the liveness information for each basic block in; /// a function and attaches the register live-out information to a patchpoint; /// intrinsic if present.; ///; /// This pass can be disabled via the -enable-patchpoint-liveness=false flag.; /// The pass skips functions that don't have any patchpoint intrinsics. The; /// information provided by this pass is optional and not required by the; /// aformentioned intrinsic to function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackMapLivenessAnalysis.cpp:142,patch,patchpoint,142,interpreter/llvm-project/llvm/lib/CodeGen/StackMapLivenessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackMapLivenessAnalysis.cpp,3,['patch'],"['patchpoint', 'patchpoint-liveness']"
Deployability,"/// This pass implements the ""patchable-function"" attribute.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h:30,patch,patchable-function,30,interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,1,['patch'],['patchable-function']
Deployability,"/// This pass implements the reg bank selector pass used in the GlobalISel; /// pipeline. At the end of this pass, all register operands have been assigned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h:80,pipeline,pipeline,80,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h,1,['pipeline'],['pipeline']
Deployability,"/// This performs customized parsing of pass name with parameters.; ///; /// We do not need parametrization of passes in textual pipeline very often,; /// yet on a rare occasion ability to specify parameters right there can be; /// useful.; ///; /// \p Name - parameterized specification of a pass from a textual pipeline; /// is a string in a form of :; /// PassName '<' parameter-list '>'; ///; /// Parameter list is being parsed by the parser callable argument, \p Parser,; /// It takes a string-ref of parameters and returns either StringError or a; /// parameter list in a form of a custom parameters type, all wrapped into; /// Expected<> template class.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp:129,pipeline,pipeline,129,interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,2,['pipeline'],['pipeline']
Deployability,"/// This processes one or more 64-byte data blocks, but does NOT update; ///the bit counters. There are no alignment requirements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MD5.cpp:65,update,update,65,interpreter/llvm-project/llvm/lib/Support/MD5.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MD5.cpp,1,['update'],['update']
Deployability,"/// This removes the specified basic block from the current loop, updating the; /// Blocks as appropriate. This does not update the mapping in the LoopInfo; /// class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h:121,update,update,121,interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h,1,['update'],['update']
Deployability,"/// This represents '#pragma omp target update' directive.; ///; /// \code; /// #pragma omp target update to(a) from(b) device(1); /// \endcode; /// In this example directive '#pragma omp target update' has clause 'to' with; /// argument 'a', clause 'from' with argument 'b' and clause 'device' with; /// argument '1'.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:40,update,update,40,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,3,['update'],['update']
Deployability,/// This represents 'release' clause in the '#pragma omp atomic|flush'; /// directives.; ///; /// \code; /// #pragma omp flush release; /// \endcode; /// In this example directive '#pragma omp flush' has 'release' clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:21,release,release,21,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,3,['release'],['release']
Deployability,"/// This represents 'update' clause in the '#pragma omp atomic'; /// directive.; ///; /// \code; /// #pragma omp atomic update; /// \endcode; /// In this example directive '#pragma omp atomic' has 'update' clause.; /// Also, this class represents 'update' clause in '#pragma omp depobj'; /// directive.; ///; /// \code; /// #pragma omp depobj(a) update(in); /// \endcode; /// In this example directive '#pragma omp depobj' has 'update' clause with 'in'; /// dependence kind.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:21,update,update,21,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,6,['update'],['update']
Deployability,"/// This represents a constant expression or constant aggregate using a custom; /// structure internal to the bitcode reader. Later, this structure will be; /// expanded by materializeValue() either into a constant expression/aggregate,; /// or into an instruction sequence at the point of use. This allows us to; /// upgrade bitcode using constant expressions even if this kind of constant; /// expression is no longer supported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:318,upgrade,upgrade,318,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,1,['upgrade'],['upgrade']
Deployability,"/// This represents a simple continuous liveness interval for a value.; /// The start point is inclusive, the end point exclusive. These intervals; /// are rendered as [start,end).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h:29,continuous,continuous,29,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h,1,['continuous'],['continuous']
Deployability,"/// This represents clause 'from' in the '#pragma omp ...'; /// directives.; ///; /// \code; /// #pragma omp target update from(a,b); /// \endcode; /// In this example directive '#pragma omp target update' has clause 'from'; /// with the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:116,update,update,116,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,2,['update'],['update']
Deployability,"/// This represents clause 'to' in the '#pragma omp ...'; /// directives.; ///; /// \code; /// #pragma omp target update to(a,b); /// \endcode; /// In this example directive '#pragma omp target update' has clause 'to'; /// with the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:114,update,update,114,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,2,['update'],['update']
Deployability,"/// This represents clauses with a list of expressions that are mappable.; /// Examples of these clauses are 'map' in; /// '#pragma omp target [enter|exit] [data]...' directives, and 'to' and 'from; /// in '#pragma omp target update...' directives.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:226,update,update,226,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['update'],['update']
Deployability,/// This represents the llvm.instrprof.mcdc.condbitmap.update intrinsic.; /// It does not pertain to global bitmap updates or parameters and so doesn't; /// inherit from InstrProfMCDCBitmapInstBase.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h:55,update,update,55,interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h,2,['update'],"['update', 'updates']"
Deployability,/// This represents the llvm.instrprof.mcdc.tvbitmap.update intrinsic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h:53,update,update,53,interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h,1,['update'],['update']
Deployability,"/// This routine scans the loop to find a branch or switch which occurs before; /// any side effects occur. These can potentially be unswitched without; /// duplicating the loop. If a branch or switch is successfully unswitched the; /// scanning continues to see if subsequent branches or switches have become; /// trivial. Once all trivial candidates have been unswitched, this routine; /// returns.; ///; /// The return value indicates whether anything was unswitched (and therefore; /// changed).; ///; /// If `SE` is not null, it will be updated based on the potential loop SCEVs; /// invalidated by this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:542,update,updated,542,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['updated']
Deployability,"/// This structure is used to keep data of the concrete section.; /// Like data bits, list of patches, format.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:94,patch,patches,94,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['patch'],['patches']
Deployability,/// This structure is used to update location list offset into; /// .debug_loc/.debug_loclists.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:30,update,update,30,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['update'],['update']
Deployability,/// This structure is used to update offset with start of another section.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:30,update,update,30,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['update'],['update']
Deployability,/// This structure is used to update range list offset into; /// .debug_ranges/.debug_rnglists.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:30,update,update,30,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['update'],['update']
Deployability,/// This structure is used to update reference to the DIE of ULEB128 form.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:30,update,update,30,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['update'],['update']
Deployability,/// This structure is used to update reference to the DIE.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:30,update,update,30,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['update'],['update']
Deployability,/// This structure is used to update reference to the type DIE.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:30,update,update,30,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,2,['update'],['update']
Deployability,/// This structure is used to update strings offsets into .debug_line_str.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:30,update,update,30,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['update'],['update']
Deployability,/// This structure is used to update strings offsets into .debug_str.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:30,update,update,30,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['update'],['update']
Deployability,"/// This utility template takes care of adding require<> and invalidate<>; /// passes for an analysis to a given \c PassManager. It is intended to be used; /// during parsing of a pass pipeline when parsing a single PipelineName.; /// When registering a new function analysis FancyAnalysis with the pass; /// pipeline name ""fancy-analysis"", a matching ParsePipelineCallback could look; /// like this:; ///; /// static bool parseFunctionPipeline(StringRef Name, FunctionPassManager &FPM,; /// ArrayRef<PipelineElement> P) {; /// if (parseAnalysisUtilityPasses<FancyAnalysis>(""fancy-analysis"", Name,; /// FPM)); /// return true;; /// return false;; /// }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:185,pipeline,pipeline,185,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,4,"['Pipeline', 'pipeline']","['PipelineElement', 'PipelineName', 'pipeline']"
Deployability,/// Toggle a feature and return the re-computed feature bits.; /// This version does not change the implied bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h:4,Toggle,Toggle,4,interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h,2,['Toggle'],['Toggle']
Deployability,"/// Toggle a given bit to its opposite value whose position is given; /// as ""bitPosition"".; /// Toggles a given bit to its opposite value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp:4,Toggle,Toggle,4,interpreter/llvm-project/llvm/lib/Support/APInt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp,2,['Toggle'],"['Toggle', 'Toggles']"
Deployability,/// Toggle a set of features and return the re-computed feature bits.; /// This version will also change all implied bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h:4,Toggle,Toggle,4,interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h,1,['Toggle'],['Toggle']
Deployability,/// Toggle every bit to its opposite value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h:4,Toggle,Toggle,4,interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,2,['Toggle'],['Toggle']
Deployability,"/// Toggles a given bit to its opposite value.; ///; /// Toggle a given bit to its opposite value whose position is given; /// as ""bitPosition"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h:4,Toggle,Toggles,4,interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,2,['Toggle'],"['Toggle', 'Toggles']"
Deployability,/// Tokenizes content of configuration file.; ///; /// \param [in] Source The string representing content of config file.; /// \param [in] Saver Delegates back to the caller for saving parsed strings.; /// \param [out] NewArgv All parsed strings are appended to NewArgv.; /// \param [in] MarkEOLs Added for compatibility with TokenizerCallback.; ///; /// It works like TokenizeGNUCommandLine with ability to skip comment lines.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:25,configurat,configuration,25,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,1,['configurat'],['configuration']
Deployability,"/// Top-level MachineScheduler pass driver.; ///; /// Visit blocks in function order. Divide each block into scheduling regions; /// and visit them bottom-up. Visiting regions bottom-up is not required, but is; /// consistent with the DAG builder, which traverses the interior of the; /// scheduling regions bottom-up.; ///; /// This design avoids exposing scheduling boundaries to the DAG builder,; /// simplifying the DAG builder's support for ""special"" target instructions.; /// At the same time the design allows target schedulers to operate across; /// scheduling boundaries, for example to bundle the boundary instructions; /// without reordering them. This creates complexity, because the target; /// scheduler must update the RegionBegin and RegionEnd positions cached by; /// ScheduleDAGInstrs whenever adding or removing instructions. A much simpler; /// design would be to split blocks at scheduling boundaries, but LLVM has a; /// general bias against block splitting purely for implementation simplicity.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:723,update,update,723,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['update'],['update']
Deployability,"/// Trace the predicate state through each of the blocks in the function,; /// hardening everything necessary along the way.; ///; /// We call this routine once the initial predicate state has been established; /// for each basic block in the function in the SSA updater. This routine traces; /// it through the instructions within each basic block, and for non-returning; /// blocks informs the SSA updater about the final state that lives out of the; /// block. Along the way, it hardens any vulnerable instruction using the; /// currently valid predicate state. We have to do these two things together; /// because the SSA updater only works across blocks. Within a block, we track; /// the current predicate state directly and update it as it changes.; ///; /// This operates in two passes over each block. First, we analyze the loads in; /// the block to determine which strategy will be used to harden them: hardening; /// the address or hardening the loaded value when loaded into a register; /// amenable to hardening. We have to process these first because the two; /// strategies may interact -- later hardening may change what strategy we wish; /// to use. We also will analyze data dependencies between loads and avoid; /// hardening those loads that are data dependent on a load with a hardened; /// address. We also skip hardening loads already behind an LFENCE as that is; /// sufficient to harden them against misspeculation.; ///; /// Second, we actively trace the predicate state through the block, applying; /// the hardening steps we determined necessary in the first pass as we go.; ///; /// These two passes are applied to each basic block. We operate one block at a; /// time to simplify reasoning about reachability and sequencing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp:263,update,updater,263,interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,4,['update'],"['update', 'updater']"
Deployability,"/// Track the RetainTypes, since they can be updated later on.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DIBuilder.h:45,update,updated,45,interpreter/llvm-project/llvm/include/llvm/IR/DIBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DIBuilder.h,1,['update'],['updated']
Deployability,"/// Track the reference to metadata.; ///; /// Register \c MD with \c *MD, if the subclass supports tracking. If \c *MD; /// gets RAUW'ed, \c MD will be updated to the new address. If \c *MD gets; /// deleted, \c MD will be set to \c nullptr.; ///; /// If tracking isn't supported, \c *MD will not change.; ///; /// \return true iff tracking is supported by \c MD.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h:153,update,updated,153,interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,1,['update'],['updated']
Deployability,/// Track type IDs of contained types. Order is the same as the contained; /// types of a Type*. This is used during upgrades of typed pointer IR in; /// opaque pointer mode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:117,upgrade,upgrades,117,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,1,['upgrade'],['upgrades']
Deployability,"/// Track variable location debug instructions while using the instruction; /// referencing implementation. Such debug instructions do not need to be; /// updated during regalloc because they identify instructions rather than; /// register locations. However, they needs to be removed from the; /// MachineFunction during regalloc, then re-inserted later, to avoid; /// disrupting the allocator.; ///; /// \param MI Any DBG_VALUE / DBG_INSTR_REF / DBG_PHI instruction; /// \param Idx Last valid SlotIndex before instruction; ///; /// \returns Iterator to continue processing from after unlinking.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:155,update,updated,155,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,1,['update'],['updated']
Deployability,"/// Tracks expected type during expression parsing, for use in code completion.; /// The type is tied to a particular token, all functions that update or consume; /// the type take a start location of the token they are looking at as a; /// parameter. This avoids updating the type on hot paths in the parser.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:144,update,update,144,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['update'],['update']
Deployability,/// Tracks register operand latency in cycles.; ///; /// A read may be dependent on more than one write. This occurs when some; /// writes only partially update the register associated to this read.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h:154,update,update,154,interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,1,['update'],['update']
Deployability,/// Transfer information from the LiveIn vector to the live ranges and update; /// the given @p LiveOuts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h:71,update,update,71,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,1,['update'],['update']
Deployability,"/// Transfers all the successors, as in transferSuccessors, and update PHI; /// operands in the successor blocks which refer to FromMBB to refer to this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:64,update,update,64,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,1,['update'],['update']
Deployability,"/// Transforms a SelectionDAG node and any operands to it into a node; /// that is compatible with the target instruction selector, as indicated by; /// the TargetLowering object.; ///; /// \returns true if \c N is a valid, legal node after calling this.; ///; /// This essentially runs a single recursive walk of the \c Legalize process; /// over the given node (and its operands). This can be used to incrementally; /// legalize the DAG. All of the nodes which are directly replaced,; /// potentially including N, are added to the output parameter \c; /// UpdatedNodes so that the delta to the DAG can be understood by the; /// caller.; ///; /// When this returns false, N has been legalized in a way that make the; /// pointer passed in no longer valid. It may have even been deleted from the; /// DAG, and so it shouldn't be used further. When this returns true, the; /// N passed in is a legal node, and can be immediately processed as such.; /// This may still have done some work on the DAG, and will still populate; /// UpdatedNodes with any new nodes replacing those originally in the DAG.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h:558,Update,UpdatedNodes,558,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,2,['Update'],['UpdatedNodes']
Deployability,"/// Transforms a compile command so that it applies the same configuration to; /// a different file. Most args are left intact, but tweaks may be needed; /// to certain flags (-x, -std etc).; ///; /// The output command will always end in {""--"", Filename}.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/CompilationDatabase.h:61,configurat,configuration,61,interpreter/llvm-project/clang/include/clang/Tooling/CompilationDatabase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/CompilationDatabase.h,1,['configurat'],['configuration']
Deployability,/// Traverse the back trace from header to the current block and update their; /// register pressures to reflect the effect of hoisting MI from the current; /// block to the preheader.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp:65,update,update,65,interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,1,['update'],['update']
Deployability,/// Traverses the affecting modules and updates \c MD with references to the; /// parent \c ModuleDepCollector info.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/ModuleDepCollector.h:40,update,updates,40,interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/ModuleDepCollector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/ModuleDepCollector.h,1,['update'],['updates']
Deployability,/// Tries to infer the deployment target from the SDK specified by -isysroot; /// (or SDKROOT). Uses the version specified in the SDKSettings.json file if; /// it's available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:23,deploy,deployment,23,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['deploy'],['deployment']
Deployability,/// Tries to load options from configuration files.; ///; /// \returns true if error occurred.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:31,configurat,configuration,31,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['configurat'],['configuration']
Deployability,/// Tries to load options from default configuration files (deduced from; /// executable filename).; ///; /// \returns true if error occurred.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:39,configurat,configuration,39,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['configurat'],['configuration']
Deployability,"/// Tries to lock the underlying file within the specified period.; ///; /// @returns RAII object that releases the lock upon leaving the scope, if the; /// locking was successful. Otherwise returns corresponding; /// error code.; ///; /// It is used as @ref lock.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:103,release,releases,103,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,1,['release'],['releases']
Deployability,"/// Triple - Helper class for working with autoconf configuration names. For; /// historical reasons, we also call these 'triples' (they used to contain; /// exactly three fields).; ///; /// Configuration names are strings in the canonical form:; /// ARCHITECTURE-VENDOR-OPERATING_SYSTEM; /// or; /// ARCHITECTURE-VENDOR-OPERATING_SYSTEM-ENVIRONMENT; ///; /// This class is used for clients which want to support arbitrary; /// configuration names, but also want to implement certain special; /// behavior for particular configurations. This class isolates the mapping; /// from the components of the configuration name to well known IDs.; ///; /// At its core the Triple class is designed to be a wrapper for a triple; /// string; the constructor does not change or normalize the triple string.; /// Clients that need to handle the non-canonical triples that users often; /// specify should use the normalize method.; ///; /// See autoconf/config.guess for a glimpse into what configuration names; /// look like in practice.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h:52,configurat,configuration,52,interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,6,"['Configurat', 'configurat']","['Configuration', 'configuration', 'configurations']"
Deployability,/// True if 'v' is updated only when the condition is false (compare capture; /// only).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:19,update,updated,19,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['update'],['updated']
Deployability,/// True if files should be updated in place. RewriteFilename is only called; /// if this is false.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/FixItRewriter.h:28,update,updated,28,interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/FixItRewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/FixItRewriter.h,1,['update'],['updated']
Deployability,"/// True if original value of 'x' must be stored in 'v', not an updated one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:64,update,updated,64,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['update'],['updated']
Deployability,/// True if the integrated assembler should interpret 'a >> b' constant; /// expressions as logical rather than arithmetic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h:16,integrat,integrated,16,interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,1,['integrat'],['integrated']
Deployability,/// True if the pending Q should be checked/updated before scheduling another; /// instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:44,update,updated,44,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['update'],['updated']
Deployability,"/// True if this value is determined to be identical to OtherVNI; /// (in valuesIdentical). This is used with CR_Erase where the erased; /// copy is redundant, i.e. the source value is already the same as; /// the destination. In such cases the subranges need to be updated; /// properly. See comment at pruneSubRegValues for more info.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:266,update,updated,266,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['update'],['updated']
Deployability,"/// Try to constrain Reg so that it is usable by argument OpIdx of the provided; /// MCInstrDesc \p II. If this fails, create a new virtual register in the; /// correct class and insert a COPY before \p InsertPt if it is a use or after; /// if it is a definition. In both cases, the function also updates the register; /// of RegMo.; /// This is equivalent to constrainOperandRegClass(..., RegClass, ...); /// with RegClass obtained from the MCInstrDesc. The debug location of \p; /// InsertPt is used for the new copy.; ///; /// \return The virtual register constrained to the right register class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h:297,update,updates,297,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h,1,['update'],['updates']
Deployability,"/// Try to consume a UCN as part of an identifier at the current; /// location.; /// \param CurPtr Initially points to the range of characters in the source; /// buffer containing the '\'. Updated to point past the end of; /// the UCN on success.; /// \param Size The number of characters occupied by the '\' (including; /// trigraphs and escaped newlines).; /// \param Result The token being produced. Marked as containing a UCN on; /// success.; /// \return \c true if a UCN was lexed and it produced an acceptable; /// identifier character, \c false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h:189,Update,Updated,189,interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,1,['Update'],['Updated']
Deployability,"/// Try to consume an identifier character encoded in UTF-8.; /// \param CurPtr Points to the start of the (potential) UTF-8 code unit; /// sequence. On success, updated to point past the end of it.; /// \param Result The token being formed.; /// \return \c true if a UTF-8 sequence mapping to an acceptable identifier; /// character was lexed, \c false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h:162,update,updated,162,interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,1,['update'],['updated']
Deployability,"/// Try to create a COFFVCRuntimeBootstrapper instance. An optional; /// RuntimePath can be given to specify the location of directory that; /// contains all vc runtime library files such as ucrt.lib and msvcrt.lib. If; /// no path was given, it will try to search the MSVC toolchain and Windows; /// SDK installation and use the found library files automatically.; ///; /// Note that depending on the build setting, a different library; /// file must be used. In general, if vc runtime was statically linked to the; /// object file that is to be jit-linked, LoadStaticVCRuntime and; /// InitializeStaticVCRuntime must be used with libcmt.lib, libucrt.lib,; /// libvcruntimelib. If vc runtime was dynamically linked LoadDynamicVCRuntime; /// must be used along with msvcrt.lib, ucrt.lib, vcruntime.lib.; ///; /// More information is on:; /// https://docs.microsoft.com/en-us/cpp/c-runtime-library/crt-library-features",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/COFFVCRuntimeSupport.h:305,install,installation,305,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/COFFVCRuntimeSupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/COFFVCRuntimeSupport.h,1,['install'],['installation']
Deployability,"/// Try to eliminate select instructions that test the returned flag of cmpxchg; /// instructions.; ///; /// If a select instruction tests the returned flag of a cmpxchg instruction and; /// selects between the returned value of the cmpxchg instruction its compare; /// operand, the result of the select will always be equal to its false value.; /// For example:; ///; /// %0 = cmpxchg i64* %ptr, i64 %compare, i64 %new_value seq_cst seq_cst; /// %1 = extractvalue { i64, i1 } %0, 1; /// %2 = extractvalue { i64, i1 } %0, 0; /// %3 = select i1 %1, i64 %compare, i64 %2; /// ret i64 %3; ///; /// The returned value of the cmpxchg instruction (%2) is the original value; /// located at %ptr prior to any update. If the cmpxchg operation succeeds, %2; /// must have been equal to %compare. Thus, the result of the select is always; /// equal to %2, and the code can be simplified to:; ///; /// %0 = cmpxchg i64* %ptr, i64 %compare, i64 %new_value seq_cst seq_cst; /// %1 = extractvalue { i64, i1 } %0, 0; /// ret i64 %1; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:702,update,update,702,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,1,['update'],['update']
Deployability,"/// Try to resolve an undeclared template name as a type template.; ///; /// Sets II to the identifier corresponding to the template name, and updates; /// Name to a corresponding (typo-corrected) type template name and TNK to; /// the corresponding kind, if possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:143,update,updates,143,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['update'],['updates']
Deployability,/// Try to simplify a given symbolic expression based on the constraints in; /// State. This is needed because the Environment bindings are not getting; /// updated when a new constraint is added to the State. If the symbol is; /// simplified to a non-symbol (e.g. to a constant) then the original symbol; /// is returned. We use this function in the family of assumeSymNE/EQ/LT/../GE; /// functions where we can work only with symbols. Use the other function; /// (simplifyToSVal) if you are interested in a simplification that may yield; /// a concrete constant value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/RangedConstraintManager.h:157,update,updated,157,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/RangedConstraintManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/RangedConstraintManager.h,1,['update'],['updated']
Deployability,/// Tunable parameters for passes in the default pipelines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h:49,pipeline,pipelines,49,interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,1,['pipeline'],['pipelines']
Deployability,"/// Turns a llvm.experimental.guard intrinsic into implicit control flow branch,; /// making the following replacement:; ///; /// --code before guard--; /// call void (i1, ...) @llvm.experimental.guard(i1 %cond) [ ""deopt""() ]; /// --code after guard--; ///; /// into; ///; /// --code before guard--; /// br i1 %cond, label %guarded, label %deopt; ///; /// guarded:; /// --code after guard--; ///; /// deopt:; /// call void (i1, ...) @llvm.experimental.guard(i1 false) [ ""deopt""() ]; /// unreachable; ///; /// It also makes all relevant DT and LI updates, so that all structures are in; /// valid state after this transform.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:546,update,updates,546,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['updates']
Deployability,"/// Turns a select instruction into implicit control flow branch,; /// making the following replacement:; ///; /// head:; /// --code before select--; /// select %cond, %trueval, %falseval; /// --code after select--; ///; /// into; ///; /// head:; /// --code before select--; /// br i1 %cond, label %then, label %tail; ///; /// then:; /// br %tail; ///; /// tail:; /// phi [ %trueval, %then ], [ %falseval, %head]; /// unreachable; ///; /// It also makes all relevant DT and LI updates, so that all structures are in; /// valid state after this transform.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:477,update,updates,477,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['updates']
Deployability,"/// Two offsets pointing to a continuous substring. End is not included, i.e.; /// represents a half-open range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Testing/Annotations/Annotations.h:30,continuous,continuous,30,interpreter/llvm-project/llvm/include/llvm/Testing/Annotations/Annotations.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Testing/Annotations/Annotations.h,1,['continuous'],['continuous']
Deployability,/// Type for list of pointers to patches offsets.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:33,patch,patches,33,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['patch'],['patches']
Deployability,"/// Unassign VirtReg from its PhysReg.; /// Assuming that VirtReg was previously assigned to a PhysReg, this undoes; /// the assignment and updates VirtRegMap accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegMatrix.h:140,update,updates,140,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegMatrix.h,1,['update'],['updates']
Deployability,"/// Undef use operands are not tracked in the equivalence class,; /// but need to be updated if they are tied; take care to only; /// update the tied operand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RenameIndependentSubregs.cpp:85,update,updated,85,interpreter/llvm-project/llvm/lib/CodeGen/RenameIndependentSubregs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RenameIndependentSubregs.cpp,2,['update'],"['update', 'updated']"
Deployability,/// Unidirectional information about either a; /// retain-decrement-use-release sequence or release-use-decrement-retain; /// reverse sequence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h:72,release,release,72,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.h,2,['release'],"['release', 'release-use-decrement-retain']"
Deployability,/// Unlock the file.; ///; /// @param FD The descriptor representing the file to unlock.; /// @returns errc::success if lock is successfully released or platform-specific; /// error_code otherwise.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h:141,release,released,141,interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h,1,['release'],['released']
Deployability,/// Unregisters each object that was previously registered and releases all; /// internal resources.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/GDBRegistrationListener.cpp:63,release,releases,63,interpreter/llvm-project/llvm/lib/ExecutionEngine/GDBRegistrationListener.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/GDBRegistrationListener.cpp,1,['release'],['releases']
Deployability,"/// UnscheduleNodeBottomUp - Remove the node from the schedule, update its and; /// its predecessor states to reflect the change.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:64,update,update,64,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['update'],['update']
Deployability,"/// Unswitch a trivial branch if the condition is loop invariant.; ///; /// This routine should only be called when loop code leading to the branch has; /// been validated as trivial (no side effects). This routine checks if the; /// condition is invariant and one of the successors is a loop exit. This; /// allows us to unswitch without duplicating the loop, making it trivial.; ///; /// If this routine fails to unswitch the branch it returns false.; ///; /// If the branch can be unswitched, this routine splits the preheader and; /// hoists the branch above that split. Preserves loop simplified form; /// (splitting the exit block as necessary). It simplifies the branch within; /// the loop to an unconditional branch but doesn't remove it entirely. Further; /// cleanup can be done with some simplifycfg like pass.; ///; /// If `SE` is not null, it will be updated based on the potential loop SCEVs; /// invalidated by this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:865,update,updated,865,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['updated']
Deployability,"/// Unswitch a trivial switch if the condition is loop invariant.; ///; /// This routine should only be called when loop code leading to the switch has; /// been validated as trivial (no side effects). This routine checks if the; /// condition is invariant and that at least one of the successors is a loop; /// exit. This allows us to unswitch without duplicating the loop, making it; /// trivial.; ///; /// If this routine fails to unswitch the switch it returns false.; ///; /// If the switch can be unswitched, this routine splits the preheader and; /// copies the switch above that split. If the default case is one of the; /// exiting cases, it copies the non-exiting cases and points them at the new; /// preheader. If the default case is not exiting, it copies the exiting cases; /// and points the default at the preheader. It preserves loop simplified form; /// (splitting the exit blocks as necessary). It simplifies the switch within; /// the loop by removing now-dead cases. If the default case is one of those; /// unswitched, it replaces its destination with a new basic block containing; /// only unreachable. Such basic blocks, while technically loop exits, are not; /// considered for unswitching so this is a stable transform and the same; /// switch will not be revisited. If after unswitching there is only a single; /// in-loop successor, the switch is further simplified to an unconditional; /// branch. Still more cleanup can be done with some simplifycfg like pass.; ///; /// If `SE` is not null, it will be updated based on the potential loop SCEVs; /// invalidated by this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:1533,update,updated,1533,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['updated']
Deployability,"/// Unswitch control flow predicated on loop invariant conditions.; ///; /// This first hoists all branches or switches which are trivial (IE, do not; /// require duplicating any part of the loop) out of the loop body. It then; /// looks at other loop invariant control flows and tries to unswitch those as; /// well by cloning the loop if the result is small enough.; ///; /// The `DT`, `LI`, `AC`, `AA`, `TTI` parameters are required analyses that are; /// also updated based on the unswitch. The `MSSA` analysis is also updated if; /// valid (i.e. its use is enabled).; ///; /// If either `NonTrivial` is true or the flag `EnableNonTrivialUnswitch` is; /// true, we will attempt to do non-trivial unswitching as well as trivial; /// unswitching.; ///; /// The `postUnswitch` function will be run after unswitching is complete; /// with information on whether or not the provided loop remains a loop and; /// a list of new sibling loops created.; ///; /// If `SE` is non-null, we will update that analysis based on the unswitching; /// done.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:464,update,updated,464,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,3,['update'],"['update', 'updated']"
Deployability,/// Update,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,2,['Update'],['Update']
Deployability,"/// Update 'State' according to the next token being one of ""(<{["".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h:4,Update,Update,4,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,1,['Update'],['Update']
Deployability,"/// Update 'State' according to the next token being one of "")>}]"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h:4,Update,Update,4,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,1,['Update'],['Update']
Deployability,/// Update 'State' according to the next token's fake left parentheses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h:4,Update,Update,4,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,1,['Update'],['Update']
Deployability,/// Update 'State' according to the next token's fake r_parens.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h:4,Update,Update,4,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,1,['Update'],['Update']
Deployability,/// Update 'State' with the next token opening a nested block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h:4,Update,Update,4,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,1,['Update'],['Update']
Deployability,/// Update DBG_VALUE or DBG_PHI if dependency breaker is updating; /// other machine instruction to use NewReg.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,1,['Update'],['Update']
Deployability,/// Update Defs and Uses. Return true if there exist dependences that; /// disqualify the delay slot candidate between V and values in Uses and; /// Defs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsDelaySlotFiller.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/Mips/MipsDelaySlotFiller.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsDelaySlotFiller.cpp,1,['Update'],['Update']
Deployability,"/// Update DominatorTree, LoopInfo, and LCCSA analysis information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,1,['Update'],['Update']
Deployability,/// Update LR to reflect an instruction has been moved downwards from OldIdx; /// to NewIdx (OldIdx < NewIdx).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,1,['Update'],['Update']
Deployability,/// Update LR to reflect an instruction has been moved upwards from OldIdx; /// to NewIdx (NewIdx < OldIdx).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,1,['Update'],['Update']
Deployability,"/// Update LVal to refer to the given field, which must be a member of the type; /// currently described by LVal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['Update'],['Update']
Deployability,/// Update LVal to refer to the given indirect field.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['Update'],['Update']
Deployability,/// Update LoopInfo after if-conversion.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,2,['Update'],['Update']
Deployability,"/// Update LoopInfo, after interchanging. NewInner and NewOuter refer to the; /// new inner and outer loop after interchanging: NewInner is the original; /// outer loop and NewOuter is the original inner loop.; ///; /// Before interchanging, we have the following structure; /// Outer preheader; // Outer header; // Inner preheader; // Inner header; // Inner body; // Inner latch; // outer bbs; // Outer latch; //; // After interchanging:; // Inner preheader; // Inner header; // Outer preheader; // Outer header; // Inner body; // outer bbs; // Outer latch; // Inner latch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp,1,['Update'],['Update']
Deployability,"/// Update MemorySSA after a loop was cloned, given the blocks in RPO order,; /// the exit blocks and a 1:1 mapping of all blocks and instructions; /// cloned. This involves duplicating all defs and uses in the cloned blocks; /// Updating phi nodes in exit block successors is done separately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,1,['Update'],['Update']
Deployability,/// Update MemorySSA when inserting a unique backedge block for a loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,1,['Update'],['Update']
Deployability,"/// Update PHI nodes in Succ to indicate that there will now be entries in it; /// from the 'NewPred' block. The values that will be flowing into the PHI nodes; /// will be the same as those coming in from ExistPred, an existing predecessor; /// of Succ.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['Update'],['Update']
Deployability,"/// Update PHI nodes in this BasicBlock before removal of predecessor \p Pred.; /// Note that this function does not actually remove the predecessor.; ///; /// If \p KeepOneInputPHIs is true then don't remove PHIs that are left with; /// zero or one incoming values, and don't simplify PHIs with all incoming; /// values the same.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,1,['Update'],['Update']
Deployability,/// Update ScopedHT.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsOptimizePICCall.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/Mips/MipsOptimizePICCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsOptimizePICCall.cpp,1,['Update'],['Update']
Deployability,/// Update Threshold based on callsite properties such as callee; /// attributes and callee hotness for PGO builds. The Callee is explicitly; /// passed to support analyzing indirect calls whose target is inferred by; /// analysis.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['Update'],['Update']
Deployability,"/// Update \p LiveSet after encountering an instruciton without a DIAssignID; /// attachment, \p I.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['Update'],['Update']
Deployability,"/// Update \p LiveSet after encountering an instruction with a DIAssignID; /// attachment, \p I.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['Update'],['Update']
Deployability,/// Update \p MI memory instruction of kind \p Op associated with address; /// spaces \p AddrSpace to indicate it is volatile and/or nontemporal. Return; /// true iff the instruction was modified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMemoryLegalizer.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMemoryLegalizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMemoryLegalizer.cpp,1,['Update'],['Update']
Deployability,/// Update \p MI memory load instruction to bypass any caches up to; /// the \p Scope memory scope for address spaces \p; /// AddrSpace. Return true iff the instruction was modified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMemoryLegalizer.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMemoryLegalizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMemoryLegalizer.cpp,1,['Update'],['Update']
Deployability,/// Update \p MI memory read-modify-write instruction to bypass any caches up; /// to the \p Scope memory scope for address spaces \p AddrSpace. Return true; /// iff the instruction was modified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMemoryLegalizer.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMemoryLegalizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMemoryLegalizer.cpp,1,['Update'],['Update']
Deployability,/// Update \p MI memory store instruction to bypass any caches up to; /// the \p Scope memory scope for address spaces \p; /// AddrSpace. Return true iff the instruction was modified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMemoryLegalizer.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMemoryLegalizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMemoryLegalizer.cpp,1,['Update'],['Update']
Deployability,"/// Update \p RelBlockFreq from \p BlockFreq and \p EntryFreq; ///; /// BlockFreq is divided by EntryFreq and added to RelBlockFreq. To represent; /// fractional values, the result is represented as a fixed point number with; /// scale of -ScaleShift.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ModuleSummaryIndex.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/IR/ModuleSummaryIndex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ModuleSummaryIndex.h,1,['Update'],['Update']
Deployability,"/// Update \p State according to \p CapturedInMem, \p CapturedInInt, and; /// \p CapturedInRet, then return true if we should continue updating the; /// state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['Update'],['Update']
Deployability,/// Update \p State according to the capture capabilities of \p F for position; /// \p IRP.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['Update'],['Update']
Deployability,/// Update a DBG_VALUE whose value has been spilled to FrameIndex. Useful when; /// modifying an instruction in place while iterating over a basic block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstrBuilder.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstrBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstrBuilder.h,1,['Update'],['Update']
Deployability,"/// Update a loop after packaging irreducible SCCs inside of it.; ///; /// Update \c OuterLoop. Before finding irreducible control flow, it was; /// partway through \a computeMassInLoop(), so \a LoopData::Exits and \a; /// LoopData::BackedgeMass need to be reset. Also, nodes that were packaged; /// up need to be removed from \a OuterLoop::Nodes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h,2,['Update'],['Update']
Deployability,"/// Update a pointer value to model pointer arithmetic.; /// \param Info - Information about the ongoing evaluation.; /// \param E - The expression being evaluated, for diagnostic purposes.; /// \param LVal - The pointer value to be updated.; /// \param EltTy - The pointee type represented by LVal.; /// \param Adjustment - The adjustment, in objects of type EltTy, to add.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,2,"['Update', 'update']","['Update', 'updated']"
Deployability,/// Update a potentially out-of-date declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:4,Update,Update,4,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['Update'],['Update']
Deployability,"/// Update a single live range, assuming an instruction has been moved from; /// OldIdx to NewIdx.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,1,['Update'],['Update']
Deployability,/// Update all DBG_VALUE instructions that may be affected by the dependency; /// breaker's update of ParentMI to use NewReg.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,2,"['Update', 'update']","['Update', 'update']"
Deployability,"/// Update all live ranges touched by MI, assuming a move from OldIdx to; /// NewIdx.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,1,['Update'],['Update']
Deployability,/// Update all phi nodes in this basic block to refer to basic block \p New; /// instead of basic block \p Old.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,2,['Update'],['Update']
Deployability,/// Update all phi nodes in this basic block's successors to refer to basic; /// block \p New instead of basic block \p Old.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,1,['Update'],['Update']
Deployability,/// Update all phi nodes in this basic block's successors to refer to basic; /// block \p New instead of to it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,1,['Update'],['Update']
Deployability,/// Update an edge's cost matrix.; /// @param EId Edge id.; /// @param Costs New cost matrix.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQP/Graph.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQP/Graph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQP/Graph.h,1,['Update'],['Update']
Deployability,"/// Update an lvalue to refer to a component of a complex number.; /// \param Info - Information about the ongoing evaluation.; /// \param LVal - The lvalue to be updated.; /// \param EltTy - The complex number's component type.; /// \param Imag - False for the real component, true for the imaginary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,2,"['Update', 'update']","['Update', 'updated']"
Deployability,/// Update an out-of-date identifier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTSource.h:4,Update,Update,4,interpreter/llvm-project/clang/include/clang/AST/ExternalASTSource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTSource.h,3,['Update'],['Update']
Deployability,/// Update and save relocation values to be serialized,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/AddressesMap.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/AddressesMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/AddressesMap.h,1,['Update'],['Update']
Deployability,/// Update assignment tracking debug info given for the newly inserted PHI \p; /// NewPhi.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,1,['Update'],['Update']
Deployability,/// Update assignment tracking debug info given for the to-be-deleted store; /// \p ToDelete that stores to this alloca.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,1,['Update'],['Update']
Deployability,/// Update assumed dereferenceable bytes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['Update'],['Update']
Deployability,/// Update attributes while linking.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,1,['Update'],['Update']
Deployability,"/// Update call edges for indirect calls to local functions added from; /// SamplePGO when needed. Normally this is done during; /// computeDeadSymbolsAndUpdateIndirectCalls, but can be called standalone; /// when that is not called (e.g. during testing).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionImport.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionImport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionImport.h,1,['Update'],['Update']
Deployability,/// Update current file scope status to next file scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MacroPPCallbacks.h:4,Update,Update,4,interpreter/llvm-project/clang/lib/CodeGen/MacroPPCallbacks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MacroPPCallbacks.h,1,['Update'],['Update']
Deployability,/// Update def-ages for registers defined by MI.; /// Also break dependencies on partial defs and undef uses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ReachingDefAnalysis.h,2,['Update'],['Update']
Deployability,"/// Update def-ages for registers defined by MI.; /// If Kill is set, also kill off DomainValues clobbered by the defs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,1,['Update'],['Update']
Deployability,/// Update estimate of register pressure after the specified instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,1,['Update'],['Update']
Deployability,"/// Update expression for the originally specified iteration variable,; /// calculated as VD = Begin + CounterVD * Step;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprOpenMP.h:4,Update,Update,4,interpreter/llvm-project/clang/include/clang/AST/ExprOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprOpenMP.h,1,['Update'],['Update']
Deployability,"/// Update function to be called once per sample, used if the derived type is a RDefinePerSample",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RDefineBase.hxx:4,Update,Update,4,tree/dataframe/inc/ROOT/RDF/RDefineBase.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RDefineBase.hxx,1,['Update'],['Update']
Deployability,/// Update future uses of the base register with the offset introduced; /// due to writeback. This function only works on Thumb1.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,1,['Update'],['Update']
Deployability,/// Update graph to conservatively handle any callsite stack nodes that target; /// multiple different callee target functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['Update'],['Update']
Deployability,/// Update in/out cfa offset and register values for successors of the basic; /// block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CFIInstrInserter.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/CFIInstrInserter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CFIInstrInserter.cpp,1,['Update'],['Update']
Deployability,/// Update index tables only (do not modify rest of DWARF).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/DWARFLinkerBase.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/DWARFLinkerBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/DWARFLinkerBase.h,1,['Update'],['Update']
Deployability,/// Update index tables only(do not modify rest of DWARF).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,2,['Update'],['Update']
Deployability,/// Update index tables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerGlobalData.h:4,Update,Update,4,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerGlobalData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerGlobalData.h,1,['Update'],['Update']
Deployability,"/// Update indirect call target profile metadata for \p Inst.; /// Usually \p Sum is the sum of counts of all the targets for \p Inst.; /// If it is 0, it means updateIDTMetaData is used to mark a; /// certain target to be promoted already. If it is not zero,; /// we expect to use it to update the total count in the value profile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,3,"['Update', 'update']","['Update', 'update', 'updateIDTMetaData']"
Deployability,/// Update info regarding parallel levels.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['Update'],['Update']
Deployability,/// Update info regarding reaching kernels.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['Update'],['Update']
Deployability,/// Update inlined instructions' DIAssignID metadata. We need to do this; /// otherwise a function inlined more than once into the same function; /// will cause DIAssignID to be shared by many instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,1,['Update'],['Update']
Deployability,/// Update inlined instructions' line numbers to; /// to encode location where these instructions are inlined.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,1,['Update'],['Update']
Deployability,"/// Update instantiation attributes after template was late parsed.; ///; /// Some attributes are evaluated based on the body of template. If it is; /// late parsed, such attributes cannot be evaluated when declaration is; /// instantiated. This function is used to update instantiation attributes when; /// template definition is ready.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,2,"['Update', 'update']","['Update', 'update']"
Deployability,"/// Update internal caches that depend on the function name (such as the; /// intrinsic ID and libcall cache).; /// Note, this method does not need to be called directly, as it is called; /// from Value::setName() whenever the name of this function changes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Function.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/IR/Function.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Function.h,1,['Update'],['Update']
Deployability,/// Update internal register state and move MBB iterator backwards. This; /// method gives precise results even in the absence of kill flags.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterScavenging.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterScavenging.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterScavenging.h,1,['Update'],['Update']
Deployability,"/// Update internal state with \p Inst at \p Addr.; ///; /// For some types of analyses, inspecting a single instruction is not; /// sufficient. Some examples are auipc/jalr pairs on RISC-V or adrp/ldr pairs; /// on AArch64. To support inspecting multiple instructions, targets may keep; /// track of an internal state while analysing instructions. Clients should; /// call updateState for every instruction which allows later calls to one of; /// the analysis functions to take previous instructions into account.; /// Whenever state becomes irrelevant (e.g., when starting to disassemble a; /// new function), clients should call resetState to clear it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrAnalysis.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrAnalysis.h,2,"['Update', 'update']","['Update', 'updateState']"
Deployability,/// Update intervals of operands of all instructions in the newly; /// created bundle specified by \p BundleStart.; ///; /// \param UpdateFlags Update live intervals for nonallocatable physregs.; ///; /// Assumes existing liveness is accurate.; /// \pre BundleStart should be the first instruction in the Bundle.; /// \pre BundleStart should not have a have SlotIndex as one will be assigned.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveIntervals.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveIntervals.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveIntervals.h,3,['Update'],"['Update', 'UpdateFlags']"
Deployability,/// Update known bits based on ANDing with RHS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/KnownBits.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Support/KnownBits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/KnownBits.h,1,['Update'],['Update']
Deployability,/// Update known bits based on ORing with RHS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/KnownBits.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Support/KnownBits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/KnownBits.h,1,['Update'],['Update']
Deployability,/// Update known bits based on XORing with RHS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/KnownBits.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Support/KnownBits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/KnownBits.h,1,['Update'],['Update']
Deployability,/// Update known dereferenceable bytes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['Update'],['Update']
Deployability,/// Update lists of parsed and unparsed files.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/VerifyDiagnosticConsumer.h:4,Update,Update,4,interpreter/llvm-project/clang/include/clang/Frontend/VerifyDiagnosticConsumer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/VerifyDiagnosticConsumer.h,1,['Update'],['Update']
Deployability,/// Update live intervals after rewriting OldReg to NewReg with SubRegs map; /// describing OldSubReg -> NewSubReg mapping.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNRewritePartialRegUses.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNRewritePartialRegUses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNRewritePartialRegUses.cpp,1,['Update'],['Update']
Deployability,"/// Update live intervals for instructions in a range of iterators. It is; /// intended for use after target hooks that may insert or remove; /// instructions, and is only efficient for a small number of instructions.; ///; /// OrigRegs is a vector of registers that were originally used by the; /// instructions in the range between the two iterators.; ///; /// Currently, the only changes that are supported are simple removal; /// and addition of uses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveIntervals.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveIntervals.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveIntervals.h,1,['Update'],['Update']
Deployability,/// Update live-out values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,2,['Update'],['Update']
Deployability,"/// Update liveness information to account for the current; /// instruction, which will not be scheduled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,3,['Update'],['Update']
Deployability,/// Update loop with aggressive aliasing assumptions.; /// It marks no-alias to any pairs of memory operations by assuming; /// loop should not have any must-alias memory accesses pairs.; /// During LoopVersioningLICM legality we ignore loops having must; /// aliasing memory accesses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp,1,['Update'],['Update']
Deployability,/// Update memory intrinsic uses that require more complex processing than; /// simple memory instructions. These require re-mangling and may have multiple; /// pointer operands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,1,['Update'],['Update']
Deployability,/// Update min-legal-vector-width if it is in Attribute and less than Width.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Attributes.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/IR/Attributes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Attributes.h,1,['Update'],['Update']
Deployability,/// Update no-wrap flags of an AddRec. This may drop the cached info about; /// this AddRec (such as range info) in case if new flags may potentially; /// sharpen it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h,1,['Update'],['Update']
Deployability,/// Update non-allocation call to invoke (possibly cloned) function; /// CalleeFunc.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['Update'],['Update']
Deployability,/// Update of LB after a whole chunk has been executed,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:4,Update,Update,4,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['Update'],['Update']
Deployability,/// Update of LowerBound for statically scheduled 'omp for' loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:4,Update,Update,4,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['Update'],['Update']
Deployability,/// Update of LowerBound for statically scheduled omp loops for; /// outer loop in combined constructs (e.g. 'distribute parallel for'),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:4,Update,Update,4,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['Update'],['Update']
Deployability,/// Update of UB after a whole chunk has been executed,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:4,Update,Update,4,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['Update'],['Update']
Deployability,/// Update of UpperBound for statically scheduled 'omp for' loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:4,Update,Update,4,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['Update'],['Update']
Deployability,/// Update of UpperBound for statically scheduled omp loops for; /// outer loop in combined constructs (e.g. 'distribute parallel for'),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:4,Update,Update,4,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['Update'],['Update']
Deployability,/// Update or overwrite the bits starting at \p OffsetInBits with \p Bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprConstant.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/CodeGen/CGExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprConstant.cpp,1,['Update'],['Update']
Deployability,"/// Update or overwrite the value starting at \p Offset with \c C.; ///; /// \param AllowOverwrite If \c true, this constant might overwrite (part of); /// a constant that has already been added. This flag is only used to; /// detect bugs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprConstant.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/CodeGen/CGExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprConstant.cpp,1,['Update'],['Update']
Deployability,/// Update phi nodes in exit block successors following cloning. Exit blocks; /// that were not cloned don't have additional predecessors added.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,1,['Update'],['Update']
Deployability,"/// Update profile for callee as well as cloned version. We need to do this; /// for regular inlining, but not for inlining from sample profile loader.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,1,['Update'],['Update']
Deployability,"/// Update r = r - (t1 + t2) + (t3 + t2) * b ** 10; ///; /// This function also yields cbar = floor(r / m) as its return value (int64_t; /// because the value can be -1). With an initial value of r = t0, this can; /// be used for computing the remainder after division by m (see the function; /// mod_m in mulmod.h). The function to_ranlux passes r = 0 and uses only the; /// return value to obtain the decimal expansion after division by m.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/ranluxpp/helpers.h:4,Update,Update,4,math/mathcore/src/ranluxpp/helpers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/ranluxpp/helpers.h,1,['Update'],['Update']
Deployability,/// Update refences to a RegionInfoT held by the RegionT managed here; ///; /// This is a post-move helper. Regions hold references to the owning; /// RegionInfo object. After a move these need to be fixed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,1,['Update'],['Update']
Deployability,/// Update root to include all chains from the Pending list.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,1,['Update'],['Update']
Deployability,/// Update scheduler DAG and queues after scheduling an instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['Update'],['Update']
Deployability,/// Update scheduler queues after scheduling an instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['Update'],['Update']
Deployability,"/// Update section-specific memory permissions and other attributes.; ///; /// This method is called when object loading is complete and section page; /// permissions can be applied. It is up to the memory manager implementation; /// to decide whether or not to act on this method. The memory manager will; /// typically allocate all sections as read-write and then apply specific; /// permissions when this method is called. Code sections cannot be executed; /// until this function has been called. In addition, any cache coherency; /// operations needed to reliably use the memory are also performed.; ///; /// \returns true if an error occurred, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,1,['Update'],['Update']
Deployability,/// Update set flags of requested record.; ///; /// \param R The global record to update.; /// \param F Flags to update to.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/RecordsSlice.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/TextAPI/RecordsSlice.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/RecordsSlice.h,3,"['Update', 'update']","['Update', 'update']"
Deployability,/// Update state \p Info given \p MI uses the tracked register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,1,['Update'],['Update']
Deployability,/// Update state \p Info given that \p MI is possibly the middle instruction; /// of an LOH involving 3 instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,1,['Update'],['Update']
Deployability,/// Update state \p Info given the tracked register is clobbered.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,1,['Update'],['Update']
Deployability,/// Update state when seeing and ADRP instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,1,['Update'],['Update']
Deployability,/// Update status of instructions from IssuedInst.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/InOrderIssueStage.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/InOrderIssueStage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/InOrderIssueStage.h,1,['Update'],['Update']
Deployability,"/// Update streamer for a new active section.; ///; /// This is called by popSection and switchSection, if the current; /// section changes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCStreamer.h,2,['Update'],['Update']
Deployability,/// Update the DAG and DAG builder with the relevant information after; /// a new root node has been created which could be a tail call.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,1,['Update'],['Update']
Deployability,"/// Update the IsRestored flag on LR if it is spilled, based on the return; /// instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.h:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.h,1,['Update'],['Update']
Deployability,/// Update the LLVMContext ID-to-Instruction(s) mapping. If \p ID is nullptr; /// then clear the mapping for this instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h,1,['Update'],['Update']
Deployability,/// Update the LRU cache order when a binary is accessed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/Symbolize/Symbolize.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/DebugInfo/Symbolize/Symbolize.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/Symbolize/Symbolize.h,1,['Update'],['Update']
Deployability,/// Update the MCDC temp value with the condition's evaluated result.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:4,Update,Update,4,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['Update'],['Update']
Deployability,"/// Update the MemoryPhi in `To` following an edge deletion between `From` and; /// `To`. If `To` becomes unreachable, a call to removeBlocks should be made.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,1,['Update'],['Update']
Deployability,"/// Update the MemoryPhi in `To` to have a single incoming edge from `From`,; /// following a CFG change that replaced multiple edges (switch) with a direct; /// branch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,1,['Update'],['Update']
Deployability,"/// Update the PHI nodes in OrigBB to include the values coming from NewBB.; /// This also updates AliasAnalysis, if available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,2,"['Update', 'update']","['Update', 'updates']"
Deployability,/// Update the PressureDiff array for liveness after scheduling this; /// instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['Update'],['Update']
Deployability,"/// Update the RValue for a field in the entry. To be used when its underlying RFieldBase changes, which typically; /// happens when page source the field values are read from changes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/REntry.hxx:4,Update,Update,4,tree/ntuple/v7/inc/ROOT/REntry.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/REntry.hxx,1,['Update'],['Update']
Deployability,"/// Update the RefState to reflect the new memory allocation.; /// The optional \p RetVal parameter specifies the newly allocated pointer; /// value; if unspecified, the value of expression \p E is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['Update'],['Update']
Deployability,/// Update the SSA form. NewBB contains instructions that are copied from BB.; /// ValueMapping maps old values in BB to new ones in NewBB.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['Update'],['Update']
Deployability,/// Update the Save and Restore points such that \p MBB is in; /// the region that is dominated by Save and post-dominated by Restore; /// and Save and Restore still match the safe point definition.; /// Such point may not exist and Save and/or Restore may be null after; /// this call.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp,1,['Update'],['Update']
Deployability,/// Update the \p DefinedLanes and the \p UsedLanes for all virtual registers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/DetectDeadLanes.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/DetectDeadLanes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/DetectDeadLanes.h,1,['Update'],['Update']
Deployability,/// Update the allocation call to record type of allocated memory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['Update'],['Update']
Deployability,"/// Update the attribute index and attempt to read the attribute value. If the; /// attribute is able to be read, update AttrValue and the Index member; /// variable. If the attribute value is not able to be read, an appropriate; /// error will be set if the Err member variable is non-NULL and the iterator; /// will be set to the end value so iteration stops.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDie.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDie.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDie.h,2,"['Update', 'update']","['Update', 'update']"
Deployability,/// Update the attributes associated with this function or call site scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['Update'],['Update']
Deployability,/// Update the attributes of the current profile from the attributes; /// specified. An error is returned if IR and FE profiles are mixed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/InstrProfWriter.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/ProfileData/InstrProfWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/InstrProfWriter.h,1,['Update'],['Update']
Deployability,/// Update the block frequencies of the caller after a callee has been inlined.; ///; /// Each block cloned into the caller has its block frequency scaled by the; /// ratio of CallSiteFreq/CalleeEntryFreq. This ensures that the cloned copy of; /// callee's entry block gets the same frequency as the callsite block and the; /// relative frequencies of all cloned blocks remain the same after cloning.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,1,['Update'],['Update']
Deployability,/// Update the block frequency of BB and branch weight and the metadata on the; /// edge BB->SuccBB. This is done by scaling the weight of BB->SuccBB by 1 -; /// Freq(PredBB->BB) / Freq(BB->SuccBB).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['Update'],['Update']
Deployability,/// Update the branch metadata for cloned call instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,1,['Update'],['Update']
Deployability,"/// Update the branch weights of an exiting block of a peeled-off loop; /// iteration.; /// Let F is a weight of the edge to continue (fallthrough) into the loop.; /// Let E is a weight of the edge to an exit.; /// F/(F+E) is a probability to go to loop and E/(F+E) is a probability to; /// go to exit.; /// Then, Estimated ExitCount = F / E.; /// For I-th (counting from 0) peeled off iteration we set the weights for; /// the peeled exit as (EC - I, 1). It gives us reasonable distribution,; /// The probability to go to exit 1/(EC-I) increases. At the same time; /// the estimated exit count in the remainder loop reduces by I.; /// To avoid dealing with division rounding we can just multiple both part; /// of weights to E and use weight as (F - I * E, E).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,1,['Update'],['Update']
Deployability,/// Update the cache of values being affected by this assumption (i.e.; /// the values about which this assumption provides information).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AssumptionCache.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Analysis/AssumptionCache.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AssumptionCache.h,1,['Update'],['Update']
Deployability,/// Update the call graph after deleting an edge.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,2,['Update'],['Update']
Deployability,/// Update the call graph after inserting a new edge.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,1,['Update'],['Update']
Deployability,/// Update the count of entries at a particular source location.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['Update'],['Update']
Deployability,/// Update the current flow along the augmenting path.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SampleProfileInference.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/SampleProfileInference.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SampleProfileInference.cpp,1,['Update'],['Update']
Deployability,"/// Update the current flow along the given (acyclic) subgraph specified by; /// the vertex order, AugmentingOrder. The objective is to send as much flow; /// as possible while evenly distributing flow among successors of each node.; /// After the update at least one edge is saturated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SampleProfileInference.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/SampleProfileInference.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SampleProfileInference.cpp,2,"['Update', 'update']","['Update', 'update']"
Deployability,/// Update the current inline scope. All subsequent calls to \p EmitLocation; /// will create a location with this inlinedAt field.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.h:4,Update,Update,4,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.h,1,['Update'],['Update']
Deployability,"/// Update the current token to represent the provided; /// identifier, in order to cache an action performed by typo correction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h:4,Update,Update,4,interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,1,['Update'],['Update']
Deployability,"/// Update the debug location of a phi. \p ApplyMergedLoc indicates whether to; /// create a merged location incorporating \p DL, or to set \p DL directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,1,['Update'],['Update']
Deployability,"/// Update the debug locations contained within the MD_loop metadata attached; /// to the instruction \p I, if one exists. \p Updater is applied to Metadata; /// operand in the MD_loop metadata: the returned value is included in the; /// updated loop metadata node if it is non-null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfo.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/IR/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfo.h,3,"['Update', 'update']","['Update', 'Updater', 'updated']"
Deployability,/// Update the designated sub-object of an rvalue to the given value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['Update'],['Update']
Deployability,/// Update the dominator tree after if-conversion erased some blocks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,2,['Update'],['Update']
Deployability,/// Update the dominator tree information when a node's immediate dominator; /// changes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h:4,Update,Update,4,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,1,['Update'],['Update']
Deployability,/// Update the file handler with information from the header of the bundled; /// file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/OffloadBundler.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/Driver/OffloadBundler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/OffloadBundler.cpp,1,['Update'],['Update']
Deployability,"/// Update the first occurrence of the ""switch statement"" BB in the PHI; /// node with the ""new"" BB. The other occurrences will:; ///; /// 1) Be updated by subsequent calls to this function. Switch statements may; /// have more than one outcoming edge into the same BB if they all have the same; /// value. When the switch statement is converted these incoming edges are now; /// coming from multiple BBs.; /// 2) Removed if subsequent incoming values now share the same case, i.e.,; /// multiple outcome edges are condensed into one. This is necessary to keep the; /// number of phi values equal to the number of branches to SuccBB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerSwitch.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerSwitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerSwitch.cpp,2,"['Update', 'update']","['Update', 'updated']"
Deployability,/// Update the indent state given that \p Line is going to be formatted; /// next.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,1,['Update'],['Update']
Deployability,/// Update the initializer at index @p StructuredIndex within the; /// structured initializer list to the value @p expr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['Update'],['Update']
Deployability,/// Update the initializers in the Dest module now that all globals that may be; /// referenced are in Dest.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,1,['Update'],['Update']
Deployability,/// Update the internal count map based on the remark integer arguments that; /// correspond the the user specified argument keys to collect for.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-remarkutil/RemarkCounter.h:4,Update,Update,4,interpreter/llvm-project/llvm/tools/llvm-remarkutil/RemarkCounter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-remarkutil/RemarkCounter.h,1,['Update'],['Update']
Deployability,/// Update the internal location to \p Loc.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['Update'],['Update']
Deployability,"/// Update the last branch of a particular cloned path to point to the correct; /// case successor.; ///; /// Note that this is an optional step and would have been done in later; /// optimizations, but it makes the CFG significantly easier to work with.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,1,['Update'],['Update']
Deployability,"/// Update the level indent to adapt to the given \p Line.; ///; /// When a line is not formatted, we move the subsequent lines on the same; /// level to the same indent.; /// Note that \c nextLine must have been called before this method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,1,['Update'],['Update']
Deployability,/// Update the linkages in the given \p Index to mark exported values; /// as external and non-exported values as internal. The ThinLTO backends; /// must apply the changes to the Module via thinLTOInternalizeModule.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h,1,['Update'],['Update']
Deployability,/// Update the machine instruction with new virtual registers. This; /// function may change the definitions and/or uses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['Update'],['Update']
Deployability,/// Update the memory operand with a new offset when the pipeliner; /// generates a new copy of the instruction that refers to a; /// different memory location.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,2,"['Update', 'pipeline']","['Update', 'pipeliner']"
Deployability,"/// Update the output mapping based on the load instruction, and the outputs; /// of the extracted function.; ///; /// \param Region - The region extracted; /// \param Outputs - The outputs from the extracted function.; /// \param LI - The load instruction used to update the mapping.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h,2,"['Update', 'update']","['Update', 'update']"
Deployability,/// Update the parameter in position P.ParamPos to P.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/VFABIDemangler.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/IR/VFABIDemangler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/VFABIDemangler.h,1,['Update'],['Update']
Deployability,/// Update the parent loop for all subloops directly nested within unloop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopInfo.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Analysis/LoopInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopInfo.cpp,1,['Update'],['Update']
Deployability,"/// Update the phi dependences to the DAG because ScheduleDAGInstrs no longer; /// processes dependences for PHIs. This function adds true dependences; /// from a PHI to a use, and a loop carried dependence from the use to the; /// PHI. The loop carried dependence is represented as an anti dependence; /// edge. This function also removes chain dependences between unrelated; /// PHIs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['Update'],['Update']
Deployability,/// Update the phi nodes in BB's successors.; ///; /// This means creating a new incoming value from NewBB with the new; /// instruction wherever there is an incoming value from BB.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,1,['Update'],['Update']
Deployability,/// Update the position of the last instruction emitted for; /// materializing constants for use in the current block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FastISel.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/FastISel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FastISel.h,1,['Update'],['Update']
Deployability,"/// Update the program state with all the path-sensitive information; /// that's necessary to perform construction of an object with a given; /// syntactic construction context. V and CallOpts have to be obtained from; /// computeObjectUnderConstruction() invoked with the same set of; /// the remaining arguments (E, State, LCtx, CC).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h:4,Update,Update,4,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h,1,['Update'],['Update']
Deployability,"/// Update the scheduler state by emitting (non-scheduled) instructions; /// up to, but not including, NextBegin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,1,['Update'],['Update']
Deployability,"/// Update the scheduler's state after scheduling a node. This is the same node; /// that was just returned by pickNode(). However, ScheduleDAGMILive needs to; /// update it's state based on the current cycle before MachineSchedStrategy; /// does.; ///; /// FIXME: Eventually, we may bundle physreg copies rather than rescheduling; /// them here. See comments in biasPhysReg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,"['Update', 'update']","['Update', 'update']"
Deployability,"/// Update the scheduler's state after scheduling a node. This is the same node; /// that was just returned by pickNode(). However, VLIWMachineScheduler needs; /// to update it's state based on the current cycle before MachineSchedStrategy; /// does.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,2,"['Update', 'update']","['Update', 'update']"
Deployability,/// Update the set of active module macros and ambiguity flag for a module; /// macro name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h:4,Update,Update,4,interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,1,['Update'],['Update']
Deployability,/// Update the size of an existing stream. This will allocate or deallocate; /// blocks as needed to match the requested size. This can fail if `CanGrow`; /// was set to false when initializing the `MSFBuilder`.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/MSF/MSFBuilder.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/DebugInfo/MSF/MSFBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/MSF/MSFBuilder.h,1,['Update'],['Update']
Deployability,/// Update the specified successor to point at the provided block. This; /// instruction must be a terminator.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h,1,['Update'],['Update']
Deployability,/// Update the start value of the recipe.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,1,['Update'],['Update']
Deployability,/// Update the state \p State and the AccessKind2Accesses given that \p I is; /// an access of kind \p AK to a \p MLK memory location with the access; /// pointer \p Ptr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['Update'],['Update']
Deployability,/// Update the state according to the effect of use \p U in \p UserI.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['Update'],['Update']
Deployability,/// Update the state of Sema after loading some additional modules.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:4,Update,Update,4,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['Update'],['Update']
Deployability,/// Update the state to include the provided host action \a HostAction as a; /// dependency of the current device action. By default it is inactive.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['Update'],['Update']
Deployability,/// Update the symtab by adding \p FuncName to the table. This interface; /// is used by the raw and text profile readers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/InstrProf.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/ProfileData/InstrProf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/InstrProf.h,1,['Update'],['Update']
Deployability,"/// Update the terminator instructions in block to account for changes to; /// block layout which may have been made. PreviousLayoutSuccessor should be; /// set to the block which may have been used as fallthrough before the block; /// layout was modified. If the block previously fell through to that block,; /// it may now need a branch. If it previously branched to another block, it; /// may now be able to fallthrough to the current layout successor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,1,['Update'],['Update']
Deployability,"/// Update the type of a string literal, including any surrounding parentheses,; /// to match the type of the object which it is initializing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['Update'],['Update']
Deployability,"/// Update the valid relocations that used OriginalUnitOffset as the compile; /// unit offset, and update their values to reflect OutputUnitOffset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/AddressesMap.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/AddressesMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/AddressesMap.h,2,"['Update', 'update']","['Update', 'update']"
Deployability,"/// Update the value at the address returned by GetValuePtr with the content corresponding to the given entry",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RDefaultValueFor.hxx:4,Update,Update,4,tree/dataframe/inc/ROOT/RDF/RDefaultValueFor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RDefaultValueFor.hxx,6,['Update'],['Update']
Deployability,"/// Update the value map to include the new mapping for this; /// instruction, or insert an extra copy to get the result in a previous; /// determined register.; ///; /// NOTE: This is only necessary because we might select a block that uses a; /// value before we select the block that defines the value. It might be; /// possible to fix this by selecting blocks in reverse postorder.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FastISel.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/FastISel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FastISel.h,1,['Update'],['Update']
Deployability,"/// Update this MachineMemOperand to reflect the alignment of MMO, if it has a; /// greater alignment. This must only be used when the new alignment applies; /// to all users of this MachineMemOperand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineMemOperand.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineMemOperand.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineMemOperand.h,1,['Update'],['Update']
Deployability,"/// Update this MemSDNode's MachineMemOperand information; /// to reflect the alignment of NewMMO, if it has a greater alignment.; /// This must only be used when the new alignment applies to all users of; /// this MachineMemOperand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGNodes.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGNodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGNodes.h,1,['Update'],['Update']
Deployability,/// Update this designator to refer to the first element within the array of; /// elements of type T. This is an array of unknown size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['Update'],['Update']
Deployability,/// Update this designator to refer to the first element within this array.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['Update'],['Update']
Deployability,/// Update this designator to refer to the given base or member of this; /// object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['Update'],['Update']
Deployability,/// Update this designator to refer to the given complex component.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:4,Update,Update,4,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['Update'],['Update']
Deployability,"/// Update to match the state of the instruction between ThisAddr and; /// NextAddr. In the common case, any live range active at ThisAddr is; /// live-in to the instruction, and any live range active at NextAddr is; /// live-out of the instruction. If IncludeDefinedVars is false, then live; /// ranges starting at NextAddr will be ignored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.cpp:4,Update,Update,4,interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.cpp,2,['Update'],['Update']
Deployability,/// Update tracked content types with \p ContentType.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugLine.h:4,Update,Update,4,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDebugLine.h,1,['Update'],['Update']
Deployability,"/// UpdateCompletedType - When we find the full definition for a TagDecl,; /// replace the 'opaque' type we previously made for it if applicable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenTypes.cpp:4,Update,UpdateCompletedType,4,interpreter/llvm-project/clang/lib/CodeGen/CodeGenTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenTypes.cpp,2,['Update'],['UpdateCompletedType']
Deployability,"/// UpdateNodeOperands - *Mutate* the specified node in-place to have the; /// specified operands. If the resultant node already exists in the DAG,; /// this does not modify the specified node, instead it returns the node that; /// already exists. If the resultant node does not exist in the DAG, the; /// input node is returned. As a degenerate case, if you specify the same; /// input operands as the node already has, the input node is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:4,Update,UpdateNodeOperands,4,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['Update'],['UpdateNodeOperands']
Deployability,"/// UpdateNodeType - Set the node type of N to VT if VT contains; /// information. If N already contains a conflicting type, then flag an; /// error. This returns true if any information was updated.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h:4,Update,UpdateNodeType,4,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h,2,"['Update', 'update']","['UpdateNodeType', 'updated']"
Deployability,"/// UpdatePosition - Examine the given char sequence and figure out which; /// column we end up in after output, and how many line breaks are contained.; /// This assumes that the input string is well-formed UTF-8, and takes into; /// account Unicode characters which render as multiple columns wide.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FormattedStream.cpp:4,Update,UpdatePosition,4,interpreter/llvm-project/llvm/lib/Support/FormattedStream.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FormattedStream.cpp,1,['Update'],['UpdatePosition']
Deployability,"/// UpdatePosition - scan the characters in [Ptr, Ptr+Size), and update the; /// line and column numbers. Unlike ComputePosition, this must be called; /// exactly once on each region of the buffer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormattedStream.h:4,Update,UpdatePosition,4,interpreter/llvm-project/llvm/include/llvm/Support/FormattedStream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormattedStream.h,2,"['Update', 'update']","['UpdatePosition', 'update']"
Deployability,"/// UpdateSDLocOnMergeSDNode - If the opt level is -O0 then it throws away; /// the line number information on the merged node since it is not possible to; /// preserve the information that operation is associated with multiple lines.; /// This will make the debugger working better at -O0, were there is a higher; /// probability having other instructions associated with that line.; ///; /// For IROrder, we keep the smaller of the two",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:4,Update,UpdateSDLocOnMergeSDNode,4,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['Update'],['UpdateSDLocOnMergeSDNode']
Deployability,"/// UpdateState - When the state of some LatticeKey is potentially updated to; /// the given LatticeVal, this function notices and adds the LLVM value; /// corresponding the key to the work list, if needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/SparsePropagation.h:4,Update,UpdateState,4,interpreter/llvm-project/llvm/include/llvm/Analysis/SparsePropagation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/SparsePropagation.h,2,"['Update', 'update']","['UpdateState', 'updated']"
Deployability,/// UpdatedSearchState - Callback used when the search state changes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/DAGDeltaAlgorithm.h:4,Update,UpdatedSearchState,4,interpreter/llvm-project/llvm/include/llvm/ADT/DAGDeltaAlgorithm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/DAGDeltaAlgorithm.h,3,['Update'],['UpdatedSearchState']
Deployability,/// Updater for the internal counter: ++CounterVD;,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprOpenMP.h:4,Update,Updater,4,interpreter/llvm-project/clang/include/clang/AST/ExprOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprOpenMP.h,1,['Update'],['Updater']
Deployability,/// Updates MemProf attributes (and metadata) based on whether the index; /// has recorded that we are linking with allocation libraries containing; /// the necessary APIs for downstream transformations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h,1,['Update'],['Updates']
Deployability,/// Updates ParsedRegionsStorage with newly parsed regions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/Indexing.cpp:4,Update,Updates,4,interpreter/llvm-project/clang/tools/libclang/Indexing.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/Indexing.cpp,1,['Update'],['Updates']
Deployability,"/// Updates given NamedReturnInfo's move-eligible and; /// copy-elidable statuses, considering the function; /// return type criteria as applicable to return statements.; ///; /// \param Info The NamedReturnInfo object to update.; ///; /// \param ReturnType This is the return type of the function.; /// \returns The copy elision candidate, in case the initial return expression; /// was copy elidable, or nullptr otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:4,Update,Updates,4,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,2,"['Update', 'update']","['Updates', 'update']"
Deployability,/// Updates liveness when stepping backwards over the instruction \p MI.; /// This removes all register units defined or clobbered in \p MI and then; /// adds the units used (as in use operands) in \p MI.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegUnits.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegUnits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegUnits.h,1,['Update'],['Updates']
Deployability,/// Updates ordering (of WLS BB and their loopExits) in inner loops first; /// Returns true if any change was made in any of the loops,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBlockPlacement.cpp:4,Update,Updates,4,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBlockPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBlockPlacement.cpp,1,['Update'],['Updates']
Deployability,/// Updates profile information by adjusting the entry count by adding; /// EntryDelta then scaling callsite information by the new count divided by the; /// old count. VMap is used during inlinng to also update the new clone,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h,2,"['Update', 'update']","['Updates', 'update']"
Deployability,/// Updates profile metadata by scaling it by \p S / \p T.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,1,['Update'],['Updates']
Deployability,"/// Updates the CurrentIndex so that it will point to a valid element.; ///; /// If the element of NodeList at CurrentIndex is valid, it does not; /// change it. If there are no more valid elements, it updates CurrentIndex; /// to point to the end of the NodeList.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:4,Update,Updates,4,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,2,"['Update', 'update']","['Updates', 'updates']"
Deployability,/// Updates the cache to remove any influence an overdefined value in; /// OldSucc might have (unless also overdefined in NewSucc). This just; /// flushes elements from the cache and does not add any.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp:4,Update,Updates,4,interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,1,['Update'],['Updates']
Deployability,/// Updates the current safety status with \p S. We can go from Safe to; /// either PossiblySafeWithRtChecks or Unsafe and from; /// PossiblySafeWithRtChecks to Unsafe.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,1,['Update'],['Updates']
Deployability,/// Updates the debug location given that the instruction has been hoisted; /// from a block to a predecessor of that block.; /// Note: it is undefined behavior to call this on an instruction not; /// currently inserted into a function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h,1,['Update'],['Updates']
Deployability,/// Updates the dependency information of a bundle and of all instructions/; /// bundles which depend on the original bundle.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:4,Update,Updates,4,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['Update'],['Updates']
Deployability,/// Updates the dependency kind in the specified depobj object.; /// \param DepobjLVal LValue for the main depobj object.; /// \param NewDepKind New dependency kind.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h:4,Update,Updates,4,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,1,['Update'],['Updates']
Deployability,"/// Updates the depth of an machine instruction, given RegUnits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,1,['Update'],['Updates']
Deployability,/// Updates the depth of the instructions from Start to End.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,1,['Update'],['Updates']
Deployability,"/// Updates the descriptor and calls InitImpl() that handles the backend-specific details (file, DAOS, etc.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx:4,Update,Updates,4,tree/ntuple/v7/inc/ROOT/RPageStorage.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx,1,['Update'],['Updates']
Deployability,/// Updates the given ProgramState. In current implementation it removes the top; /// element of the stack of loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/LoopUnrolling.h:4,Update,Updates,4,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/LoopUnrolling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/LoopUnrolling.h,1,['Update'],['Updates']
Deployability,/// Updates the hash for the StringRef provided.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MD5.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/Support/MD5.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MD5.h,1,['Update'],['Updates']
Deployability,/// Updates the hash for the byte stream provided.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MD5.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/Support/MD5.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MD5.h,1,['Update'],['Updates']
Deployability,"/// Updates the initializer at index @p Init with the new; /// expression @p expr, and returns the old expression at that; /// location.; ///; /// When @p Init is out of range for this initializer list, the; /// initializer list will be extended with NULL expressions to; /// accommodate the new entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h:4,Update,Updates,4,interpreter/llvm-project/clang/include/clang/AST/Expr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h,1,['Update'],['Updates']
Deployability,"/// Updates the inputs if the obtained tool supports combining with; /// preprocessor action, and the current input is indeed a preprocessor; /// action. If combining results in the collapse of offloading actions, those; /// are appended to \a CollapsedOffloadAction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:4,Update,Updates,4,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['Update'],['Updates']
Deployability,/// Updates the next token of \p State to the next token after this; /// one. This can be used when this token manages a set of underlying tokens; /// as a unit and is responsible for the formatting of the them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/BreakableToken.h:4,Update,Updates,4,interpreter/llvm-project/clang/lib/Format/BreakableToken.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/BreakableToken.h,1,['Update'],['Updates']
Deployability,"/// Updates the number of available free registers, returns; /// true if any registers were allocated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:4,Update,Updates,4,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['Update'],['Updates']
Deployability,"/// Updates the operand at Idx in instruction Inst with the result of; /// instruction Mat. If the instruction is a PHI node then special; /// handling for duplicate values from the same incoming basic block is; /// required.; /// \return The update will always succeed, but the return value indicated if; /// Mat was used for the update or not.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp:4,Update,Updates,4,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp,3,"['Update', 'update']","['Updates', 'update']"
Deployability,/// Updates the stack of loops contained by the ProgramState.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/LoopUnrolling.h:4,Update,Updates,4,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/LoopUnrolling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/LoopUnrolling.h,1,['Update'],['Updates']
Deployability,"/// Updates the stack slot of this variable, assuming `inStackSlot()` is; /// true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,1,['Update'],['Updates']
Deployability,/// Updates the topological ordering to accommodate an edge to be; /// added from SUnit \p X to SUnit \p Y.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['Update'],['Updates']
Deployability,/// Updates the topological ordering to accommodate an edge to be; /// removed from the specified node \p N from the predecessors of the; /// current node \p M.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['Update'],['Updates']
Deployability,/// Updates the vectorization state by adding \p Phi to the inductions list.; /// This can set \p Phi as the main induction of the loop if \p Phi is a; /// better choice for the main induction than the existing one.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,1,['Update'],['Updates']
Deployability,/// Updates this object to approximate both this object and RHS. Returns; /// true if this object has been changed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ValueLattice.h:4,Update,Updates,4,interpreter/llvm-project/llvm/include/llvm/Analysis/ValueLattice.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ValueLattice.h,1,['Update'],['Updates']
Deployability,/// Updates to the visible declarations of declaration contexts that; /// haven't been loaded yet.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:4,Update,Updates,4,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['Update'],['Updates']
Deployability,/// Updates watched literals that are affected by a variable assignment.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp:4,Update,Updates,4,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,1,['Update'],['Updates']
Deployability,/// Upgrade DXIL-style metadata into their LLVM representations,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/DXILUpgrade.h:4,Upgrade,Upgrade,4,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/DXILUpgrade.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/DXILUpgrade.h,1,['Upgrade'],['Upgrade']
Deployability,/// Upgrade a call to an old intrinsic. All argument and return casting must be; /// provided to seamlessly integrate with existing context.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:4,Upgrade,Upgrade,4,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,2,"['Upgrade', 'integrat']","['Upgrade', 'integrate']"
Deployability,/// Upgrade a type ref array that may have MDString references.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp:4,Upgrade,Upgrade,4,interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,1,['Upgrade'],['Upgrade']
Deployability,/// Upgrade a type that had an MDString reference.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp:4,Upgrade,Upgrade,4,interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,2,['Upgrade'],['Upgrade']
Deployability,/// Upgrade attributes that changed format or kind.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h:4,Upgrade,Upgrade,4,interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,1,['Upgrade'],['Upgrade']
Deployability,/// Upgrade comment in call to inline asm that represents an objc retain release; /// marker.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:4,Upgrade,Upgrade,4,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,2,"['Upgrade', 'release']","['Upgrade', 'release']"
Deployability,/// Upgrade old-style CU <-> SP pointers to point from SP to CU.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp:4,Upgrade,Upgrade,4,interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,1,['Upgrade'],['Upgrade']
Deployability,/// Upgrade old-style bare DIGlobalVariables to DIGlobalVariableExpressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp:4,Upgrade,Upgrade,4,interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,1,['Upgrade'],['Upgrade']
Deployability,/// Upgrade operand bundles (without knowing about their user instruction).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h:4,Upgrade,Upgrade,4,interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,1,['Upgrade'],['Upgrade']
Deployability,/// Upgrade the datalayout string by adding a section for address space; /// pointers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h:4,Upgrade,Upgrade,4,interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,1,['Upgrade'],['Upgrade']
Deployability,/// Upgrade the expression from previous versions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp:4,Upgrade,Upgrade,4,interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,1,['Upgrade'],['Upgrade']
Deployability,/// Upgrade the loop attachment metadata node.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h:4,Upgrade,Upgrade,4,interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AutoUpgrade.h,1,['Upgrade'],['Upgrade']
Deployability,/// Upgrades old-style typeless byval/sret/inalloca attributes by adding the; /// corresponding argument's pointee type. Also upgrades intrinsics that now; /// require an elementtype attribute.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:4,Upgrade,Upgrades,4,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,2,"['Upgrade', 'upgrade']","['Upgrades', 'upgrades']"
Deployability,/// Use the standard optimization pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h:34,pipeline,pipeline,34,interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,1,['pipeline'],['pipeline']
Deployability,/// Used for 'atomic update' or 'atomic capture' constructs. They may; /// have atomic expressions of forms:; /// \code; /// v = x; <update x>;; /// <update x>; v = x;; /// \endcode; /// This field is 1 for the first(postfix) form of the expression and 0; /// otherwise.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:21,update,update,21,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,3,['update'],['update']
Deployability,/// Used for 'atomic update' or 'atomic capture' constructs. They may; /// have atomic expressions of forms:; /// \code; /// x = x binop expr;; /// x = expr binop x;; /// \endcode; /// This field is 1 for the first form of the expression and 0 for the; /// second. Required for correct codegen of non-associative operations (like; /// << or >>).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:21,update,update,21,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['update'],['update']
Deployability,/// Used to parse the configuration file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp:22,configurat,configuration,22,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,1,['configurat'],['configuration']
Deployability,/// User provided configuration for this Attributor instance.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:18,configurat,configuration,18,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['configurat'],['configuration']
Deployability,"/// Utilities for targets to add passes to the pass manager.; ///; /// Add a CodeGen pass at this point in the pipeline after checking overrides.; /// Return the pass that was added, or zero if no pass was added.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h:111,pipeline,pipeline,111,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,1,['pipeline'],['pipeline']
Deployability,"/// Utility class for getting and setting loop vectorizer hints in the form; /// of loop metadata.; /// This class keeps a number of loop annotations locally (as member variables); /// and can, upon request, write them back as metadata on the loop. It will; /// initially scan the loop for existing metadata, and will update the local; /// values based on information in the loop.; /// We cannot write all values to metadata, as the mere presence of some info,; /// for example 'force', means a decision has been made. So, we need to be; /// careful NOT to add them if the user hasn't specifically asked so.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h:318,update,update,318,interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,1,['update'],['update']
Deployability,/// Utility functions for implementing addData() for a consumer that has a; /// method update(StringRef),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DataCollection.h:87,update,update,87,interpreter/llvm-project/clang/include/clang/AST/DataCollection.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DataCollection.h,1,['update'],['update']
Deployability,/// Utility to run a FrontendAction over a set of files.; ///; /// This class is written to be usable for command line utilities.; /// By default the class uses ClangSyntaxOnlyAdjuster to modify; /// command line arguments before the arguments are used to run; /// a frontend action. One could install an additional command line; /// arguments adjuster by calling the appendArgumentsAdjuster() method.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Tooling.h:294,install,install,294,interpreter/llvm-project/clang/include/clang/Tooling/Tooling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Tooling.h,1,['install'],['install']
Deployability,/// VE Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VETargetMachine.cpp:27,Configurat,Configuration,27,interpreter/llvm-project/llvm/lib/Target/VE/VETargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VETargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,"/// Validate part of the configuration, which contains a list of argument; /// indexes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp:25,configurat,configuration,25,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,1,['configurat'],['configuration']
Deployability,/// Value for llvm.loop.pipeline.disable metadata.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.h:24,pipeline,pipeline,24,interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.h,1,['pipeline'],['pipeline']
Deployability,/// Value for llvm.loop.pipeline.iicount metadata.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.h:24,pipeline,pipeline,24,interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.h,1,['pipeline'],['pipeline']
Deployability,/// Value handle that asserts if the Value is deleted.; ///; /// This is a Value Handle that points to a value and asserts out if the value; /// is destroyed while the handle is still live. This is very useful for; /// catching dangling pointer bugs and other things which can be non-obvious.; /// One particularly useful place to use this is as the Key of a map. Dangling; /// pointer bugs often lead to really subtle bugs that only occur if another; /// object happens to get allocated to the same address as the old one. Using; /// an AssertingVH ensures that an assert is triggered as soon as the bad; /// delete occurs.; ///; /// Note that an AssertingVH handle does *not* follow values across RAUW; /// operations. This means that RAUW's need to explicitly update the; /// AssertingVH's as it moves. This is required because in non-assert mode this; /// class turns into a trivial wrapper around a pointer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h:763,update,update,763,interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h,1,['update'],['update']
Deployability,/// Value handle that poisons itself if the Value is deleted.; ///; /// This is a Value Handle that points to a value and poisons itself if the; /// value is destroyed while the handle is still live. This is very useful for; /// catching dangling pointer bugs where an \c AssertingVH cannot be used; /// because the dangling handle needs to outlive the value without ever being; /// used.; ///; /// One particularly useful place to use this is as the Key of a map. Dangling; /// pointer bugs often lead to really subtle bugs that only occur if another; /// object happens to get allocated to the same address as the old one. Using; /// a PoisoningVH ensures that an assert is triggered if looking up a new value; /// in the map finds a handle from the old value.; ///; /// Note that a PoisoningVH handle does *not* follow values across RAUW; /// operations. This means that RAUW's need to explicitly update the; /// PoisoningVH's as it moves. This is required because in non-assert mode this; /// class turns into a trivial wrapper around a pointer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h:900,update,update,900,interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h,1,['update'],['update']
Deployability,"/// Verifies the header of a unit in a .debug_info or .debug_types section.; ///; /// This function currently checks for:; /// - Unit is in 32-bit DWARF format. The function can be modified to; /// support 64-bit format.; /// - The DWARF version is valid; /// - The unit type is valid (if unit is in version >=5); /// - The unit doesn't extend beyond the containing section; /// - The address size is valid; /// - The offset in the .debug_abbrev section is valid; ///; /// \param DebugInfoData The section data; /// \param Offset A reference to the offset start of the unit. The offset will; /// be updated to point to the next unit in the section; /// \param UnitIndex The index of the unit to be verified; /// \param UnitType A reference to the type of the unit; /// \param isUnitDWARF64 A reference to a flag that shows whether the unit is; /// in 64-bit format.; ///; /// \returns true if the header is verified successfully, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFVerifier.h:599,update,updated,599,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFVerifier.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFVerifier.h,1,['update'],['updated']
Deployability,"/// Verify invariants about the RefSCC and all its SCCs.; ///; /// This will attempt to validate all of the invariants *within* the; /// RefSCC, but not that it is a strongly connected component of the larger; /// graph. This makes it useful even when partially through an update.; ///; /// Invariants checked:; /// - SCCs and their indices match.; /// - The SCCs list is in fact in post-order.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:273,update,update,273,interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,1,['update'],['update']
Deployability,"/// Verify that the coefficient projection works for different configurations; /// of the RooAddPdf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:63,configurat,configurations,63,roofit/roofitcore/test/testRooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx,1,['configurat'],['configurations']
Deployability,/// Walk to the next Phi or Clobber in the def chain starting at Desc.Last.; /// This will update Desc.Last as it walks. It will (optionally) also stop at; /// StopAt.; ///; /// This does not test for whether StopAt is a clobber,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp:91,update,update,91,interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,1,['update'],['update']
Deployability,"/// We have just read the // characters from input. Skip until we find the; /// newline character that terminates the comment. Then update BufferPtr and; /// return.; ///; /// If we're in KeepCommentMode or any CommentHandler has inserted; /// some tokens, this will store the first token and return true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp:132,update,update,132,interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,1,['update'],['update']
Deployability,"/// We only use `shared library` mode in cases where the static library form; /// of the components provided are not available; note however that this is; /// skipped if we're run from within the build dir. However, once installed,; /// we still need to provide correct output when the static archives are; /// removed or, as in the case of CMake's `BUILD_SHARED_LIBS`, never present; /// in the first place. This can't be done at configure/build time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp:221,install,installed,221,interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,1,['install'],['installed']
Deployability,"/// We should lifetime-extend, but we don't because (due to technical; /// limitations) we can't. This happens for default member initializers,; /// which we don't clone for every use, so we don't have a unique; /// MaterializeTemporaryExpr to update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:244,update,update,244,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['update'],['update']
Deployability,/// WebAssembly Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp:36,Configurat,Configuration,36,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,"/// When an MBB is added to an MF, we need to update the parent pointer of the; /// MBB, the MBB numbering, and any instructions in the MBB to be on the right; /// operand list for registers.; ///; /// MBBs start out as #-1. When a MBB is added to a MachineFunction, it; /// gets the next available unique MBB number. If it is removed from a; /// MachineFunction, it goes back to being #-1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp:46,update,update,46,interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,1,['update'],['update']
Deployability,"/// When an MBB was split during scheduling, update the; /// references that need to refer to the last resulting block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h:45,update,update,45,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,1,['update'],['update']
Deployability,"/// When an instruction is found to only be used outside of the loop, this; /// function moves it to the exit blocks and patches up SSA form as needed.; /// This method is guaranteed to remove the original instruction from its; /// position, and may either delete it or move it to outside of the loop.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp:121,patch,patches,121,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp,1,['patch'],['patches']
Deployability,"/// When moving a range of instructions from one MBB list to another, we need to; /// update the parent pointers and the use/def lists.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp:86,update,update,86,interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,1,['update'],['update']
Deployability,"/// When the shortest interval using Keys PDF could not be found to have; /// the desired confidence level +/- the accuracy (see; /// SetKeysConfidenceAccuracy()), the interval determination algorithm; /// will have to terminate with an unsatisfactory confidence level when; /// the bottom and top of the cutoff search range are very close to being; /// equal. This scenario comes into play when there seems to be an error; /// in the accuracy of the Keys PDF integration, so the search range; /// continues to shrink without converging to a cutoff value that will; /// give an acceptable confidence level. To choose how small to allow the; /// search range to be before terminating, set the fraction delta such; /// that the search will terminate when topCutoff (a) and bottomCutoff (b); /// satisfy this condition:; ///; /// std::abs(a - b) < std::abs(delta * (a + b)/2)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h:460,integrat,integration,460,roofit/roostats/inc/RooStats/MCMCCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h,1,['integrat'],['integration']
Deployability,"/// When using the Integrate() command argument in chi2FitTo, the result should; /// be identical to a fit without bin integration if the fit function is; /// linear. This is a good cross check to see if the integration works.; /// Inspired by the rf609_xychi2fit tutorial.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx:19,Integrat,Integrate,19,roofit/roofitcore/test/testTestStatistics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx,3,"['Integrat', 'integrat']","['Integrate', 'integration']"
Deployability,"/// When we add an instruction to a basic block list, we update its parent; /// pointer and add its operands from reg use/def lists if appropriate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp:57,update,update,57,interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,1,['update'],['update']
Deployability,"/// When we remove an instruction from a basic block list, we update its parent; /// pointer and remove its operands from reg use/def lists if appropriate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp:62,update,update,62,interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,1,['update'],['update']
Deployability,"/// Whether alias analysis is allowed to use the dominator tree, for use by; /// passes that lazily update the DT while performing AA queries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:100,update,update,100,interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h,1,['update'],['update']
Deployability,/// Whether or not we should populate a PassInstrumentationCallbacks's class to; /// pass name map.; ///; /// This is for optimization purposes so we don't populate it if we never use; /// it. This should be updated if new pass instrumentation wants to use the map.; /// We currently only use this for --print-before/after.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp:208,update,updated,208,interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,1,['update'],['updated']
Deployability,"/// Whether the set of configuration macros is exhaustive.; ///; /// When the set of configuration macros is exhaustive, meaning; /// that no identifier not in this list should affect how the module is; /// built.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Module.h:23,configurat,configuration,23,interpreter/llvm-project/clang/include/clang/Basic/Module.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Module.h,2,['configurat'],['configuration']
Deployability,/// Whether this is an exhaustive set of configuration macros.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ModuleMap.h:41,configurat,configuration,41,interpreter/llvm-project/clang/include/clang/Lex/ModuleMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ModuleMap.h,1,['configurat'],['configuration']
Deployability,/// Whether to accept an AST file that has a different configuration; /// from the current compiler instance.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:55,configurat,configuration,55,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['configurat'],['configuration']
Deployability,"/// Whether to probe for PCH files on disk, in order to upgrade; /// -include foo.h to -include-pch foo.h.pch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:56,upgrade,upgrade,56,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['upgrade'],['upgrade']
Deployability,"/// While creating patches, offsets to attributes may be partially; /// unknown(because size of abbreviation number is unknown). In such case we; /// remember patch itself and pointer to patch application offset to add size; /// of abbreviation number later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:19,patch,patches,19,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,3,['patch'],"['patch', 'patches']"
Deployability,"/// Wraps the components of this RooSimultaneous in RooBinSamplingPdfs, with a; /// different precision parameter for each component.; /// \param[in] data The dataset to be used in the eventual fit, used to figure; /// out the observables and whether the dataset is binned.; /// \param[in] precisions The map that gives the precision argument for each; /// component in the RooSimultaneous. The keys are the pdf names. If; /// there is no value for a given component, it will not use the bin; /// integration. Otherwise, the value has the same meaning than in; /// the IntegrateBins() command argument for RooAbsPdf::fitTo().; /// \param[in] useCategoryNames If this flag is set, the category names will be; /// used to look up the precision in the precisions map instead of; /// the pdf names.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:497,integrat,integration,497,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,2,"['Integrat', 'integrat']","['IntegrateBins', 'integration']"
Deployability,/// Write all the sample profiles in the given map of samples.; ///; /// \returns status code of the file update operation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfWriter.h:106,update,update,106,interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfWriter.h,1,['update'],['update']
Deployability,/// Write immediate value for unconditional PC-relative branch with link.; /// We patch the instruction opcode to account for an instruction-set state; /// switch: we use the bl instruction to stay in ARM and the blx instruction; /// to switch to Thumb.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/aarch32.h:82,patch,patch,82,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/aarch32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/aarch32.h,1,['patch'],['patch']
Deployability,/// Write immediate value for unconditional PC-relative branch with link.; /// We patch the instruction opcode to account for an instruction-set state; /// switch: we use the bl instruction to stay in Thumb and the blx instruction; /// to switch to ARM.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/aarch32.h:82,patch,patch,82,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/aarch32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/aarch32.h,1,['patch'],['patch']
Deployability,/// Write sample profiles in \p S.; ///; /// \returns status code of the file update operation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfWriter.h:78,update,update,78,interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfWriter.h,1,['update'],['update']
Deployability,"/// Write sample profiles up to given size limit, using the pruning strategy; /// to drop some functions if necessary.; ///; /// \returns status code of the file update operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfWriter.h:162,update,update,162,interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfWriter.h,1,['update'],['update']
Deployability,/// Write specified \p Value of \p AttrForm to the \p PatchOffset.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:54,Patch,PatchOffset,54,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['Patch'],['PatchOffset']
Deployability,"/// Write the bytes specified in \p Buffer to the underlying stream.; /// On success, updates the offset so that subsequent writes will occur; /// at the next unwritten position.; ///; /// \returns a success error code if the data was successfully written,; /// otherwise returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamWriter.h:86,update,updates,86,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamWriter.h,1,['update'],['updates']
Deployability,"/// Write the integer \p Value to the underlying stream in the; /// specified endianness. On success, updates the offset so that; /// subsequent writes occur at the next unwritten position.; ///; /// \returns a success error code if the data was successfully written,; /// otherwise returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamWriter.h:102,update,updates,102,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamWriter.h,1,['update'],['updates']
Deployability,"/// Write the string \p Str to the underlying stream followed by a null; /// terminator. On success, updates the offset so that subsequent writes; /// occur at the next unwritten position. \p Str need not be null terminated; /// on input.; ///; /// \returns a success error code if the data was successfully written,; /// otherwise returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamWriter.h:101,update,updates,101,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamWriter.h,1,['update'],['updates']
Deployability,"/// Write the string \p Str to the underlying stream without a null; /// terminator. On success, updates the offset so that subsequent writes; /// occur at the next unwritten position.; ///; /// \returns a success error code if the data was successfully written,; /// otherwise returns an appropriate error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamWriter.h:97,update,updates,97,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamWriter.h,1,['update'],['updates']
Deployability,/// Writes integer value \p Val of SLEB128 format by specified \p PatchOffset.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.cpp:66,Patch,PatchOffset,66,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.cpp,2,['Patch'],['PatchOffset']
Deployability,/// Writes integer value \p Val of ULEB128 format by specified \p PatchOffset.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:66,Patch,PatchOffset,66,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['Patch'],['PatchOffset']
Deployability,/// Writes integer value \p Val of \p Size by specified \p PatchOffset.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h:59,Patch,PatchOffset,59,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/OutputSections.h,1,['Patch'],['PatchOffset']
Deployability,/// Writes to VCC_LO/VCC_HI update the VCCZ flag.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSubtarget.h:28,update,update,28,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSubtarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSubtarget.h,1,['update'],['update']
Deployability,/// X86 Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetMachine.cpp:28,Configurat,Configuration,28,interpreter/llvm-project/llvm/lib/Target/X86/X86TargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,/// XCore Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCoreTargetMachine.cpp:30,Configurat,Configuration,30,interpreter/llvm-project/llvm/lib/Target/XCore/XCoreTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCoreTargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,/// \A DAG update listener to keep the matching state; /// (i.e. RecordedNodes and MatchScope) uptodate if the target is allowed to; /// change the DAG while matching. X86 addressing mode matcher is an example; /// for this.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:11,update,update,11,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['update'],['update']
Deployability,"/// \brief A pair of <object ID, distribution key> that can be used to issue a fetch/update request for multiple; /// attribute keys.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx:85,update,update,85,tree/ntuple/v7/inc/ROOT/RDaos.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx,1,['update'],['update']
Deployability,"/// \brief A vector of macros that should be interpreted as type declarations; /// instead of as function calls.; ///; /// These are expected to be macros of the form:; /// \code; /// STACK_OF(...); /// \endcode; ///; /// In the .clang-format configuration file, this can be configured like:; /// \code{.yaml}; /// TypenameMacros: ['STACK_OF', 'LIST']; /// \endcode; ///; /// For example: OpenSSL STACK_OF, BSD LIST_ENTRY.; /// \version 9",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:243,configurat,configuration,243,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['configurat'],['configuration']
Deployability,"/// \brief Check whether the given non-dependent constraint expression is; /// satisfied. Returns false and updates Satisfaction with the satisfaction; /// verdict if successful, emits a diagnostic and returns true if an error; /// occurred and satisfaction could not be determined.; ///; /// \returns true if an error occurred, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:108,update,updates,108,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['update'],['updates']
Deployability,"/// \brief Configuration bits for the parent interpreter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h:11,Configurat,Configuration,11,interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h,1,['Configurat'],['Configuration']
Deployability,"/// \brief Contains required information for a single fetch/update operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx:60,update,update,60,tree/ntuple/v7/inc/ROOT/RDaos.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx,1,['update'],['update']
Deployability,"/// \brief Hide a global declaration from SemaLookup; internally used in; /// `invalidatePreviousDefinitions()'. This directly manipulates lookup; /// tables to avoid a patch to Clang.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.h:169,patch,patch,169,interpreter/cling/lib/Interpreter/DefinitionShadower.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.h,1,['patch'],['patch']
Deployability,"/// \brief Interpreter configuration bits that can be changed at run-time; /// by the user, e.g. to enable/disable extensions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:23,configurat,configuration,23,interpreter/cling/include/cling/Interpreter/RuntimeOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h,1,['configurat'],['configuration']
Deployability,"/// \brief Overrides the current DiagnosticConsumer to supress many warnings; /// issued as a result of incremental compilation (see `HandleDiagnostic()`).; ///; /// Diagnostics passing the filter are, by default, forwarded to the previous; /// DiagnosticConsumer instance. A different consumer may be specified via; /// `setTargetConsumer()`.; /// In that case, given that internal state might be updated as part of; /// `{Begin,End}SourceFile` (e.g. in TextDiagnosticPrinter), calls to such; /// functions will be forwarded to both, the user-specified and the original; /// consumer; however `HandleDiagnostic()` calls shall only be seen by the; /// former.; ///; /// On destruction, the original (i.e. overridden consumer) is restored.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:398,update,updated,398,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp,1,['update'],['updated']
Deployability,"/// \brief Release event data from queue.; /// \return 0 on success; a DAOS error code otherwise (< 0).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx:11,Release,Release,11,tree/ntuple/v7/inc/ROOT/RDaos.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx,1,['Release'],['Release']
Deployability,"/// \brief Sets the offset mode for evaluation.; ///; /// This function sets the offset mode for evaluation to the specified mode.; /// It updates the offset mode for both CPU and CUDA evaluation contexts.; ///; /// \param mode The offset mode to be set.; ///; /// \note This function marks reducer nodes as dirty if the offset mode is; /// changed, because only reducer nodes can use offsetting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:139,update,updates,139,roofit/roofitcore/src/RooFit/Evaluator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx,1,['update'],['updates']
Deployability,"/// \brief The distribution key, as used by the `daos_obj_{fetch,update}` functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx:65,update,update,65,tree/ntuple/v7/inc/ROOT/RDaos.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx,1,['update'],['update']
Deployability,"/// \brief Virtual function to update any necessary state on workers; ///; /// This function is called from the worker loop when something is received; /// over the ZeroMQ ""SUB"" socket. The master process sends messages to workers; /// on its ""PUB"" socket. Thus, we can update, for instance, parameter values; /// on the worker that were updated since the last call on the master side.; /// \note Implementers: make sure to also update the state_id_ member.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:31,update,update,31,roofit/multiprocess/src/Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx,4,['update'],"['update', 'updated']"
Deployability,"/// \brief `fRequests` is a sequential container assumed to remain valid throughout the fetch/update operation,; /// holding a list of `RAkeyRequest`-typed elements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx:94,update,update,94,tree/ntuple/v7/inc/ROOT/RDaos.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx,1,['update'],['update']
Deployability,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGrid.cxx; \class RooGrid; \ingroup Roofitcore. Utility class for RooMCIntegrator which; implements an adaptive multi-dimensional Monte Carlo numerical; integration, following the VEGAS algorithm.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:888,integrat,integration,888,roofit/roofitcore/src/RooGrid.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx,1,['integrat'],['integration']
Deployability,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooSentinel.cxx; \class RooSentinel; \ingroup Roofitcore. RooSentinel is a special purpose singleton class that terminates; all other RooFit singleton services when the process exits. All function RooFit singleton services are created on the heap with; a static wrapper function to avoid the 'static initialization order fiasco'; but are not automatically destroyed at the end of the session. This class; installs an atexit() function that takes care of this; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSentinel.cxx:1138,install,installs,1138,roofit/roofitcore/src/RooSentinel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSentinel.cxx,1,['install'],['installs']
Deployability,"/// \cond ROOFIT_INTERNAL; // register integrator class; // create a derived class in order to call the protected method of the; // RoodaptiveGaussKronrodIntegrator1D",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx:39,integrat,integrator,39,roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,1,['integrat'],['integrator']
Deployability,"/// \file; /// - Project : TMVA - a Root-integrated toolkit for multivariate data analysis; /// - Package : TMVA; /// - Exectuable: TMVACrossValidation; ///; ///; /// Performs a verification that the cross evaluation splitting was performed as; /// intended. If the input data has ids (EventNumbers); ///; /// 0,1,2,3,4,5,6,7,8,9,10; ///; /// these will be split into e.g. 3 parts; ///; /// Part 0: 0,3,6,9; /// Part 1: 1,4,7,10; /// Part 2: 2,5,8; ///; /// This file verifies that each fold is calculated so that the test data for; /// each fold is equal to the equivalent part. That is the test set for fold 0; /// is part 0 and the train set is part 1 + part 2.; ///; /// Fold 0:; /// Train: 1,2,4,5,7,8,10,; /// Test : 0,3,6,9; ///; /// Et.c.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/crossvalidation/TestCrossValidationSplitting.cxx:41,integrat,integrated,41,tmva/tmva/test/crossvalidation/TestCrossValidationSplitting.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/crossvalidation/TestCrossValidationSplitting.cxx,1,['integrat'],['integrated']
Deployability,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro demonstrate usage of ROOT7 graphics from many threads; /// Three different canvases in three different threads are started and regularly updated.; /// Extra thread created in background and used to run http protocol, in/out websocket communications and process http; /// requests; /// Main application thread (CLING interactive session) remains fully functional; ///; /// \macro_code; ///; /// \date 2018-08-16; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_mt.cxx:199,update,updated,199,tutorials/rcanvas/rcanvas_mt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_mt.cxx,1,['update'],['updated']
Deployability,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro shows how ROOT RCanvas::Update method is working.; /// One can do sync and/or async depending how important is that graphics is updated before next action will be performed; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2021-07-05; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx:86,Update,Update,86,tutorials/rcanvas/rcanvas_update.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx,2,"['Update', 'update']","['Update', 'updated']"
Deployability,/// \name API for IR modification with state keeping to support rollback.; /// @{; /// Same as Instruction::setOperand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:64,rollback,rollback,64,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['rollback'],['rollback']
Deployability,"/// \name Methods for translating form LLVM IR to MachineInstr.; /// \see ::translate for general information on the translate methods.; /// @{; /// Translate \p Inst into its corresponding MachineInstr instruction(s).; /// Insert the newly translated instruction(s) right where the CurBuilder; /// is set.; ///; /// The general algorithm is:; /// 1. Look for a virtual register for each operand or; /// create one.; /// 2 Update the VMap accordingly.; /// 2.alt. For constant arguments, if they are compile time constants,; /// produce an immediate in the right operand and do not touch; /// ValToReg. Actually we will go with a virtual register for each; /// constants because it may be expensive to actually materialize the; /// constant. Moreover, if the constant spans on several instructions,; /// CSE may not catch them.; /// => Update ValToVReg and remember that we saw a constant in Constants.; /// We will materialize all the constants in finalize.; /// Note: we would need to do something so that we can recognize such operand; /// as constants.; /// 3. Create the generic instruction.; ///; /// \return true if the translation succeeded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/IRTranslator.h:423,Update,Update,423,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/IRTranslator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/IRTranslator.h,2,['Update'],['Update']
Deployability,"/// \note This needs to be kept in sync with kmp.h enum sched_type.; /// Todo: Update kmp.h to include this file, and remove the enums in kmp.h",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPConstants.h:79,Update,Update,79,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPConstants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPConstants.h,1,['Update'],['Update']
Deployability,/// \param Updates An ordered sequence of updates to perform. The current CFG; /// and the reverse of these updates provides the pre-view of the CFG.; /// \param PostViewUpdates An ordered sequence of update to perform in order; /// to obtain a post-view of the CFG. The DT will be updated assuming the; /// obtained PostViewCFG is the desired end state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:11,Update,Updates,11,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,5,"['Update', 'update']","['Updates', 'update', 'updated', 'updates']"
Deployability,/// \return The ID of the condition to update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h:39,update,update,39,interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h,1,['update'],['update']
Deployability,/// \return The address of the corresponding condition bitmap containing; /// the index of the TestVector to update within the TestVector Bitmap.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h:109,update,update,109,interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h,1,['update'],['update']
Deployability,"/// \returns a list of candidate directories for ROCm installation, which is; /// cached and populated only once.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp:54,install,installation,54,interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,1,['install'],['installation']
Deployability,"/// `From` block was spliced into `From` and `To`. There is a CFG edge from; /// `From` to `To`. Move all accesses from `From` to `To` starting at; /// instruction `Start`. `To` is newly created BB, so empty of; /// MemorySSA::MemoryAccesses. Edges are already updated, so successors of; /// `To` with MPhi nodes need to update incoming block.; /// |------| |------|; /// | From | | From |; /// | | |------|; /// | | ||; /// | | => \/; /// | | |------| <- Start; /// | | | To |; /// |------| |------|",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:261,update,updated,261,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,2,['update'],"['update', 'updated']"
Deployability,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4763,install,installation,4763,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,9,['install'],"['install', 'installation']"
Deployability,"/// add - Creates a new immutable set that contains all of the values; /// of the original set with the addition of the specified value. If; /// the original set already included the value, then the original set is; /// returned and no memory is allocated. The time and space complexity; /// of this operation is logarithmic in the size of the original set.; /// The memory allocated to represent the set is released when the; /// factory object that created the set is destroyed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h:408,release,released,408,interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,1,['release'],['released']
Deployability,"/// addInstSelector - This method should install an instruction selector pass,; /// which converts from LLVM code to machine instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:41,install,install,41,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,2,['install'],['install']
Deployability,/// addNewBlock - Add a new basic block BB as an empty succcessor to DomBB. All; /// variables that are live out of DomBB will be marked as passing live through; /// BB. LiveInSets[BB] is *not* updated (because it is not needed during; /// PHIElimination).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp:194,update,updated,194,interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,1,['update'],['updated']
Deployability,/// addPostFastRegAllocRewrite - Add passes to the optimized register; /// allocation pipeline after fast register allocation is complete.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h:86,pipeline,pipeline,86,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,1,['pipeline'],['pipeline']
Deployability,"/// addPreRewrite - Add passes to the optimized register allocation pipeline; /// after register allocation is complete, but before virtual registers are; /// rewritten to physical registers.; ///; /// These passes must preserve VirtRegMap and LiveIntervals, and when running; /// after RABasic or RAGreedy, they should take advantage of LiveRegMatrix.; /// When these passes run, VirtRegMap contains legal physreg assignments for; /// all virtual registers.; ///; /// Note if the target overloads addRegAssignAndRewriteOptimized, this may not; /// be honored. This is also not generally used for the fast variant,; /// where the allocation and rewriting are done in one pass.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:68,pipeline,pipeline,68,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,2,['pipeline'],['pipeline']
Deployability,/// adjust - Set forced language options.; /// Apply changes to the target information with respect to certain; /// language options which change the target configuration and adjust; /// the language based on the target options where applicable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/TargetInfo.cpp:157,configurat,configuration,157,interpreter/llvm-project/clang/lib/Basic/TargetInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/TargetInfo.cpp,1,['configurat'],['configuration']
Deployability,"/// canAddPseudoFlagDep - For A9 (and other out-of-order) implementations,; /// the 's' 16-bit instruction partially update CPSR. Abort the; /// transformation to avoid adding false dependency on last CPSR setting; /// instruction which hurts the ability for out-of-order execution engine; /// to do register renaming magic.; /// This function checks if there is a read-of-write dependency between the; /// last instruction that defines the CPSR and the current instruction. If there; /// is, then there is no harm done since the instruction cannot be retired; /// before the CPSR setting instruction anyway.; /// Note, we are not doing full dependency analysis here for the sake of compile; /// time. We're not looking for cases like:; /// r0 = muls ...; /// r1 = add.w r0, ...; /// ...; /// = mul.w r1; /// In this case it would have been ok to narrow the mul.w to muls since there; /// are indirect RAW dependency between the muls and the mul.w",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp:117,update,update,117,interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp,1,['update'],['update']
Deployability,/// canEvictInterferenceBasedOnCost - Return true if all interferences between; /// VirtReg and PhysReg can be evicted.; ///; /// @param VirtReg Live range that is about to be assigned.; /// @param PhysReg Desired register for assignment.; /// @param IsHint True when PhysReg is VirtReg's preferred register.; /// @param MaxCost Only look for cheaper candidates and update with new cost; /// when returning true.; /// @returns True when interference can be evicted cheaper than MaxCost.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocEvictionAdvisor.cpp:366,update,update,366,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocEvictionAdvisor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocEvictionAdvisor.cpp,1,['update'],['update']
Deployability,"/// ch, gl = CR6[UN]SET ch, inglue - Toggle CR bit 6 for SVR4 vararg calls",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h:37,Toggle,Toggle,37,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,1,['Toggle'],['Toggle']
Deployability,/// changeImmediateDominator - This method is used to update the dominator; /// tree information when a node's immediate dominator changes.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineDominators.h:54,update,update,54,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineDominators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineDominators.h,2,['update'],['update']
Deployability,/// clear - Release all the tracked allocations to the allocator. The; /// recycler must be free of any tracked allocations before being; /// deleted; calling clear is one way to ensure this.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Recycler.h:12,Release,Release,12,interpreter/llvm-project/llvm/include/llvm/Support/Recycler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Recycler.h,1,['Release'],['Release']
Deployability,/// computeBlockSize - Compute the size and some alignment information for MBB.; /// This function updates BBInfo directly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYConstantIslandPass.cpp:99,update,updates,99,interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYConstantIslandPass.cpp,2,['update'],['updates']
Deployability,"/// constructor from data and model configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/CombinedCalculator.h:36,configurat,configuration,36,roofit/roostats/inc/RooStats/CombinedCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/CombinedCalculator.h,1,['configurat'],['configuration']
Deployability,/// createPassConfig - Create a pass configuration object to be used by; /// addPassToEmitX methods for generating a pipeline of CodeGen passes.; ///; /// Targets may override this to extend TargetPassConfig.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:37,configurat,configuration,37,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,2,"['configurat', 'pipeline']","['configuration', 'pipeline']"
Deployability,"/// dOpt;; // uncomment next line to blend continuous with discrete components .. get some unpleasant ""poke through""; // effects though; // if(auto s = samp->get<RooAbsReal>(); s) thisOpt = s->isBinnedDistribution(*dynamic_cast<RooAbsArg*>(v)) ?; // """" : ""LF2"";",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx:43,continuous,continuous,43,roofit/xroofit/src/xRooNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx,1,['continuous'],['continuous']
Deployability,/// determineFrameLayoutAndUpdate - Determine the size of the frame and maximum; /// call frame size. Update the MachineFunction object with the stack size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:102,Update,Update,102,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['Update'],['Update']
Deployability,"/// emitError - Emit an error message to the currently installed error handler; /// with optional location information. This function returns, so code should; /// be prepared to drop the erroneous construct on the floor and ""not crash"".; /// The generated code need not be correct. The error message will be; /// implicitly prefixed with ""error: "" and should not end with a ""."".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LLVMContext.h:55,install,installed,55,interpreter/llvm-project/llvm/include/llvm/IR/LLVMContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LLVMContext.h,1,['install'],['installed']
Deployability,"/// enumeration specifying the integration types.; /// @ingroup Integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:31,integrat,integration,31,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,2,"['Integrat', 'integrat']","['Integration', 'integration']"
Deployability,"/// enumeration specifying the integration types.; /// @ingroup MCIntegration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:31,integrat,integration,31,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['integrat'],['integration']
Deployability,"/// get the option used for the integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:32,integrat,integration,32,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,4,['integrat'],['integration']
Deployability,"/// get the option used for the integration; /// implement by derived class otherwise return default ones",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h:32,integrat,integration,32,math/mathcore/inc/Math/VirtualIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h,1,['integrat'],['integration']
Deployability,"/// get the option used for the integration; /// must be implemented by derived class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h:32,integrat,integration,32,math/mathcore/inc/Math/VirtualIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h,1,['integrat'],['integration']
Deployability,/// getAllocatableSetForRC - Toggle the bits that represent allocatable; /// registers for the specific register class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetRegisterInfo.cpp:29,Toggle,Toggle,29,interpreter/llvm-project/llvm/lib/CodeGen/TargetRegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetRegisterInfo.cpp,1,['Toggle'],['Toggle']
Deployability,"/// getAnalysis<AnalysisType>() - This function is used by subclasses to get; /// to the analysis information that they claim to use by overriding the; /// getAnalysisUsage function. If as part of the dependencies, an IR; /// transformation is triggered (e.g. because the analysis requires; /// BreakCriticalEdges), and Changed is non null, *Changed is updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h:353,update,updated,353,interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h,1,['update'],['updated']
Deployability,"/// getAnalysisIfAvailable<AnalysisType>() - Subclasses use this function to; /// get analysis information that might be around, for example to update it.; /// This is different than getAnalysis in that it can fail (if the analysis; /// results haven't been computed), so should only be used if you can handle; /// the case when the analysis is not available. This method is often used by; /// transformation APIs to update analysis results for a pass automatically as; /// the transform is performed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h:144,update,update,144,interpreter/llvm-project/llvm/include/llvm/Pass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h,4,['update'],['update']
Deployability,"/// getCharAndSizeSlow - Peek a single 'character' from the specified buffer,; /// get its size, and return it. This is tricky in several cases:; /// 1. If currently at the start of a trigraph, we warn about the trigraph,; /// then either return the trigraph (skipping 3 chars) or the '?',; /// depending on whether trigraphs are enabled or not.; /// 2. If this is an escaped newline (potentially with whitespace between; /// the backslash and newline), implicitly skip the newline and return; /// the char after it.; ///; /// This handles the slow/uncommon case of the getCharAndSize method. Here we; /// know that we can accumulate into Size, and that we have already incremented; /// Ptr by Size bytes.; ///; /// NOTE: When this method is updated, getCharAndSizeSlowNoWarn (below) should; /// be updated to match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp:742,update,updated,742,interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,2,['update'],['updated']
Deployability,"/// getCharAndSizeSlowNoWarn - Handle the slow/uncommon case of the; /// getCharAndSizeNoWarn method. Here we know that we can accumulate into Size,; /// and that we have already incremented Ptr by Size bytes.; ///; /// NOTE: When this method is updated, getCharAndSizeSlow (above) should; /// be updated to match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp:246,update,updated,246,interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,2,['update'],['updated']
Deployability,/// getDFSNumIn/getDFSNumOut - These return the DFS visitation order for nodes; /// in the dominator tree. They are only guaranteed valid if; /// updateDFSNumbers() has been called.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:146,update,updateDFSNumbers,146,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,1,['update'],['updateDFSNumbers']
Deployability,/// getDefaultObjCRuntime - Return the default Objective-C runtime; /// for this platform.; ///; /// FIXME: this really belongs on some sort of DeploymentTarget abstraction,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h:144,Deploy,DeploymentTarget,144,interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,1,['Deploy'],['DeploymentTarget']
Deployability,/// getHazardType - We return hazard for any non-branch instruction that would; /// terminate the dispatch group. We turn NoopHazard for any; /// instructions that wouldn't terminate the dispatch group that would cause a; /// pipeline flush.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp:226,pipeline,pipeline,226,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp,1,['pipeline'],['pipeline']
Deployability,"/// getLocationOfByte - Return a source location that points to the specified; /// byte of this string literal.; ///; /// Strings are amazingly complex. They can be formed from multiple tokens and; /// can have escape sequences in them in addition to the usual trigraph and; /// escaped newline business. This routine handles this complexity.; ///; /// The *StartToken sets the first token to be searched in this function and; /// the *StartTokenByteOffset is the byte offset of the first token. Before; /// returning, it updates the *StartToken to the TokNo of the token being found; /// and sets *StartTokenByteOffset to the byte offset of the token in the; /// string.; /// Using these two parameters can reduce the time complexity from O(n^2) to; /// O(n) if one wants to get the location of byte for all the tokens in a; /// string.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp:522,update,updates,522,interpreter/llvm-project/clang/lib/AST/Expr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp,1,['update'],['updates']
Deployability,/// getUserOffset - Compute the offset of U.MI as seen by the hardware; /// displacement computation. Update U.KnownAlignment to match its current; /// basic block location.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:102,Update,Update,102,interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,1,['Update'],['Update']
Deployability,"/// hasBlocksRuntime - Given that the user is compiling with; /// -fblocks, does this tool chain guarantee the existence of a; /// blocks runtime?; ///; /// FIXME: this really belongs on some sort of DeploymentTarget abstraction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h:200,Deploy,DeploymentTarget,200,interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/ToolChain.h,1,['Deploy'],['DeploymentTarget']
Deployability,"/// install_fatal_error_handler - Installs a new error handler to be used; /// whenever a serious (non-recoverable) error is encountered by LLVM.; ///; /// If no error handler is installed the default is to print the error message; /// to stderr, and call exit(1). If an error handler is installed then it is; /// the handler's responsibility to log the message, it will no longer be; /// printed to stderr. If the error handler returns, then exit(1) will be; /// called.; ///; /// It is dangerous to naively use an error handler which throws an exception.; /// Even though some applications desire to gracefully recover from arbitrary; /// faults, blindly throwing exceptions through unfamiliar code isn't a way to; /// achieve this.; ///; /// \param user_data - An argument which will be passed to the install error; /// handler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h:34,Install,Installs,34,interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h,4,"['Install', 'install']","['Installs', 'install', 'installed']"
Deployability,/// intersectConstraints - Updates X with the intersection; /// of the Constraints X and Y. Returns true if X has changed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:27,Update,Updates,27,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,1,['Update'],['Updates']
Deployability,"/// isRedundantFlagInstr - check whether the first instruction, whose only; /// purpose is to update flags, can be made redundant.; /// CMPrr can be made redundant by SUBrr if the operands are the same.; /// CMPri can be made redundant by SUBri if the operands are the same.; /// CMPrr(r0, r1) can be made redundant by ADDr[ri](r0, r1, X).; /// This function can be extended later on.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:94,update,update,94,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['update'],['update']
Deployability,/// iterate - Repeatedly update the Hopfield nodes until stability or the; /// maximum number of iterations is reached.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp:25,update,update,25,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,1,['update'],['update']
Deployability,"/// iterate - Update the network iteratively until convergence, or new bundles; /// are found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h:14,Update,Update,14,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,1,['Update'],['Update']
Deployability,"/// lookupTarget - Lookup a target based on an architecture name; /// and a target triple. If the architecture name is non-empty,; /// then the lookup is done by architecture. Otherwise, the target; /// triple is used.; ///; /// \param ArchName - The architecture to use for finding a target.; /// \param TheTriple - The triple to use for finding a target. The; /// triple is updated with canonical architecture name if a lookup; /// by architecture is done.; /// \param Error - On failure, an error string describing why no target was; /// found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/TargetRegistry.h:376,update,updated,376,interpreter/llvm-project/llvm/include/llvm/MC/TargetRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/TargetRegistry.h,1,['update'],['updated']
Deployability,"/// map of values in pdf to update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/PdfProposal.h:28,update,update,28,roofit/roostats/inc/RooStats/PdfProposal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/PdfProposal.h,1,['update'],['update']
Deployability,"/// mergeAliasSetsForMemoryLocation - Given a memory location, merge all alias; /// sets that may alias it. Return the unified set, or nullptr if no aliasing; /// set was found. A known existing alias set for the pointer value of the; /// memory location can be passed in (or nullptr if not available). MustAliasAll; /// is updated to true/false if the memory location is found to MustAlias all; /// the sets it merged.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasSetTracker.cpp:324,update,updated,324,interpreter/llvm-project/llvm/lib/Analysis/AliasSetTracker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasSetTracker.cpp,1,['update'],['updated']
Deployability,"/// name of 1D integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:15,integrat,integrator,15,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,2,['integrat'],['integrator']
Deployability,"/// name of multi-dim integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:22,integrat,integrator,22,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,1,['integrat'],['integrator']
Deployability,/// notifyFreeingObject - Called just before the memory associated with; /// a previously emitted object is released.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITEventListener.h:108,release,released,108,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITEventListener.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITEventListener.h,1,['release'],['released']
Deployability,/// notifyObjectLoaded - Called after an object has had its sections allocated; /// and addresses assigned to all symbols. Note: Section memory will not have; /// been relocated yet. notifyFunctionLoaded will not be called for; /// individual functions in the object.; ///; /// ELF-specific information; /// The ObjectImage contains the generated object image; /// with section headers updated to reflect the address at which sections; /// were loaded and with relocations performed in-place on debug sections.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITEventListener.h:386,update,updated,386,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITEventListener.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITEventListener.h,1,['update'],['updated']
Deployability,"/// optimizeCompareInstr - Convert the instruction to set the zero flag so; /// that we can remove a ""comparison with zero""; Remove a redundant CMP; /// instruction if the flags can be updated in the same way by an earlier; /// instruction such as SUB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h:185,update,updated,185,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h,1,['update'],['updated']
Deployability,"/// pointers to master variables needed for updates",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/PdfProposal.h:44,update,updates,44,roofit/roostats/inc/RooStats/PdfProposal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/PdfProposal.h,1,['update'],['updates']
Deployability,/// processRegionChanges - Called by ProgramStateManager whenever a change is made; /// to the store. Used to update checkers that track region values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h:110,update,update,110,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ExprEngine.h,1,['update'],['update']
Deployability,"/// recomputeRegClass - Try to find a legal super-class of Reg's register; /// class that still satisfies the constraints from the instructions using; /// Reg. Returns true if Reg was upgraded.; ///; /// This method can be used after constraints have been removed from a; /// virtual register, for example after removing instructions or splitting; /// the live range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h:184,upgrade,upgraded,184,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,1,['upgrade'],['upgraded']
Deployability,"/// release a chunk",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.cxx:4,release,release,4,roofit/roofitcore/src/BidirMMapPipe.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.cxx,2,['release'],['release']
Deployability,"/// release an existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:4,release,release,4,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,4,['release'],['release']
Deployability,"/// release the parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/ParameterSettings.h:4,release,release,4,math/mathcore/inc/Fit/ParameterSettings.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/ParameterSettings.h,1,['release'],['release']
Deployability,"/// release the pool, return true if the pool is unused",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:4,release,release,4,roofit/roofitcore/src/RooLinkedList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx,1,['release'],['release']
Deployability,/// releaseFile - Take ownership of the file away from the FileRemover so it; /// will not be removed when the object is destroyed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FileUtilities.h:4,release,releaseFile,4,interpreter/llvm-project/llvm/include/llvm/Support/FileUtilities.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FileUtilities.h,1,['release'],['releaseFile']
Deployability,/// releaseMemory - release memory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LexicalScopes.h:4,release,releaseMemory,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/LexicalScopes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LexicalScopes.h,2,['release'],"['release', 'releaseMemory']"
Deployability,"/// releaseMemory() - This member can be implemented by a pass if it wants to; /// be able to release its memory when it is no longer needed. The default; /// behavior of passes is to hold onto memory for the entire duration of their; /// lifetime (which is the entire compile time). For pipelined passes, this; /// is not a big deal because that memory gets recycled every time the pass is; /// invoked on another program unit. For IP passes, it is more important to; /// free memory when it is unused.; ///; /// Optionally implement this function to release pass memory when it is no; /// longer used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h:4,release,releaseMemory,4,interpreter/llvm-project/llvm/include/llvm/Pass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h,4,"['pipeline', 'release']","['pipelined', 'release', 'releaseMemory']"
Deployability,/// releasePredecessors - Call releasePred on each of SU's predecessors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:4,release,releasePredecessors,4,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,['release'],"['releasePred', 'releasePredecessors']"
Deployability,"/// releaseStream - Delete the held stream if needed. Otherwise,; /// transfer the buffer settings from this circular_raw_ostream; /// back to the underlying stream.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/circular_raw_ostream.h:4,release,releaseStream,4,interpreter/llvm-project/llvm/include/llvm/Support/circular_raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/circular_raw_ostream.h,1,['release'],['releaseStream']
Deployability,/// releaseSuccessors - Call releaseSucc on each of SU's successors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:4,release,releaseSuccessors,4,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,['release'],"['releaseSucc', 'releaseSuccessors']"
Deployability,"/// rematerializeAt - Rematerialize RM.ParentVNI into DestReg by inserting an; /// instruction into MBB before MI. The new instruction is mapped, but; /// liveness is not updated. If ReplaceIndexMI is not null it will be replaced; /// by new MI in the index map.; /// Return the SlotIndex of the new instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeEdit.h:171,update,updated,171,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeEdit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeEdit.h,1,['update'],['updated']
Deployability,"/// remove - Creates a new immutable set that contains all of the values; /// of the original set with the exception of the specified value. If; /// the original set did not contain the value, the original set is; /// returned and no memory is allocated. The time and space complexity; /// of this operation is logarithmic in the size of the original set.; /// The memory allocated to represent the set is released when the; /// factory object that created the set is destroyed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h:406,release,released,406,interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,1,['release'],['released']
Deployability,/// removeDeadCPEMI - Remove a dead constant pool entry instruction. Update; /// sizes and offsets of impacted basic blocks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:69,Update,Update,69,interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,3,['Update'],['Update']
Deployability,"/// replaceChildLoopWith - This is used when splitting loops up. It replaces; /// the OldChild entry in our children list with NewChild, and updates the; /// parent pointer of OldChild to be null and the NewChild to be this loop.; /// This updates the loop depth of the new child.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfoImpl.h:141,update,updates,141,interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfoImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfoImpl.h,2,['update'],['updates']
Deployability,/// replaceKillInstruction - Update register kill info by replacing a kill; /// instruction with a new one.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h:29,Update,Update,29,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,2,['Update'],['Update']
Deployability,/// reset - Reset cached information about node(Level) from subtree(Level -1).; /// @param Level 1..height. The node to update after parent node changed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:120,update,update,120,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['update'],['update']
Deployability,"/// return a pointer to integrator object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:24,integrat,integrator,24,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,1,['integrat'],['integrator']
Deployability,"/// return integration error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:11,integrat,integration,11,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,2,['integrat'],['integration']
Deployability,"/// return name of integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:19,integrat,integrator,19,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,2,['integrat'],['integrator']
Deployability,"/// return result of integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:21,integrat,integration,21,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['integrat'],['integration']
Deployability,"/// return result of last integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:26,integrat,integration,26,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,1,['integrat'],['integration']
Deployability,"/// return status of integration; /// - status = 0 successful integration; /// - status = 1; /// MAXPTS is too small for the specified accuracy EPS.; /// The result contain the values; /// obtainable for the specified value of MAXPTS.; /// - status = 2; /// size is too small for the specified number MAXPTS of function evaluations.; /// - status = 3; /// wrong dimension , N<2 or N > 15. Returned result and error are zero",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:21,integrat,integration,21,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,2,['integrat'],['integration']
Deployability,"/// return type of integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h:19,integrat,integrator,19,math/mathcore/inc/Math/VirtualIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h,2,['integrat'],['integrator']
Deployability,"/// returns a printable representation of first item from input range; ///; /// This function returns a printable representation of the next item in a line; /// of source. If the next byte begins a valid and printable character, that; /// character is returned along with 'true'.; ///; /// Otherwise, if the next byte begins a valid, but unprintable character, a; /// printable, escaped representation of the character is returned, along with; /// 'false'. Otherwise a printable, escaped representation of the next byte; /// is returned along with 'false'.; ///; /// \note The index is updated to be used with a subsequent call to; /// printableTextForNextCharacter.; ///; /// \param SourceLine The line of source; /// \param I Pointer to byte index,; /// \param TabStop used to expand tabs; /// \return pair(printable text, 'true' iff original text was printable); ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/TextDiagnostic.cpp:586,update,updated,586,interpreter/llvm-project/clang/lib/Frontend/TextDiagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/TextDiagnostic.cpp,1,['update'],['updated']
Deployability,"/// returns true if Update() method was called",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RCanvas.hxx:20,Update,Update,20,graf2d/gpadv7/inc/ROOT/RCanvas.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RCanvas.hxx,1,['Update'],['Update']
Deployability,"/// revalidate - LIU contents have changed, update tags.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterferenceCache.cpp:44,update,update,44,interpreter/llvm-project/llvm/lib/CodeGen/InterferenceCache.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterferenceCache.cpp,1,['update'],['update']
Deployability,"/// runOnSCC - This method should be implemented by the subclass to perform; /// whatever action is necessary for the specified SCC. Note that; /// non-recursive (or only self-recursive) functions will have an SCC size of; /// 1, where recursive portions of the call graph will have SCC size > 1.; ///; /// SCC passes that add or delete functions to the SCC are required to update; /// the SCC list, otherwise stale pointers may be dereferenced.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:374,update,update,374,interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h,1,['update'],['update']
Deployability,"/// schedule - Called back from MachineScheduler::runOnMachineFunction; /// after setting up the current scheduling region. [RegionBegin, RegionEnd); /// only includes instructions that have DAG nodes, not scheduling boundaries.; ///; /// This is a skeletal driver, with all the functionality pushed into helpers,; /// so that it can be easily extended by experimental schedulers. Generally,; /// implementing MachineSchedStrategy should be sufficient to implement a new; /// scheduling algorithm. However, if a scheduler further subclasses; /// ScheduleDAGMILive then it will want to override this virtual method in order; /// to update any specialized state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:631,update,update,631,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['update'],['update']
Deployability,"/// set 1D integrator name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:11,integrat,integrator,11,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,1,['integrat'],['integrator']
Deployability,"/// set integration function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h:8,integrat,integration,8,math/mathcore/inc/Math/VirtualIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h,1,['integrat'],['integration']
Deployability,"/// set multi-dim integrator name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:18,integrat,integrator,18,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,1,['integrat'],['integrator']
Deployability,"/// set the Derivative of the PDF used for random sampling (one dim continuous case)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranSampler.h:68,continuous,continuous,68,math/unuran/inc/TUnuranSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranSampler.h,1,['continuous'],['continuous']
Deployability,"/// set the integration function (must implement multi-dim function interface: IBaseFunctionMultiDim)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:12,integrat,integration,12,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['integrat'],['integration']
Deployability,"/// set the integration type (possible type are) :",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/BayesianCalculator.h:12,integrat,integration,12,roofit/roostats/inc/RooStats/BayesianCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/BayesianCalculator.h,1,['integrat'],['integration']
Deployability,"/// set the number of iterations when running a MC integration algorithm; /// If not set use default algorithmic values; /// In case of ToyMC sampling of the nuisance the value is 100; /// In case of using the GSL MCintegrations types the default value is; /// defined in ROOT::Math::IntegratorMultiDimOptions::DefaultNCalls()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/BayesianCalculator.h:51,integrat,integration,51,roofit/roostats/inc/RooStats/BayesianCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/BayesianCalculator.h,2,"['Integrat', 'integrat']","['IntegratorMultiDimOptions', 'integration']"
Deployability,"/// setInstName - After an instruction is parsed and inserted into its; /// basic block, this installs its name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/AsmParser/LLParser.h:94,install,installs,94,interpreter/llvm-project/llvm/include/llvm/AsmParser/LLParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/AsmParser/LLParser.h,2,['install'],['installs']
Deployability,/// setNodeStop - Update the stop key of the current node at level and above.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:18,Update,Update,18,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['Update'],['Update']
Deployability,/// setSize - Update the node size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:14,Update,Update,14,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['Update'],['Update']
Deployability,"/// specify a mapping between a parameter of the proposal function and; /// a parameter of interest. this mapping is used to set the value of; /// proposalParam equal to the value of update to determine the; /// proposal function.; /// proposalParam is a parameter of the proposal function that must; /// be set to the value of update (from the current point) in order to; /// propose a new point.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/PdfProposal.h:183,update,update,183,roofit/roostats/inc/RooStats/PdfProposal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/PdfProposal.h,2,['update'],['update']
Deployability,/// splitBlock - BB is split and now it has one successor. Update dominator; /// tree to reflect this change.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineDominators.h:59,Update,Update,59,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineDominators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineDominators.h,2,['Update'],['Update']
Deployability,/// tryCompound - Given a bundle check for compound insns when one; /// is found update the contents fo the bundle with the compound insn.; /// If a compound instruction is found then the bundle will have one; /// additional slot.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCompound.cpp:81,update,update,81,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCompound.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCompound.cpp,1,['update'],['update']
Deployability,"/// type of the integrator (return the enumeration type)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:16,integrat,integrator,16,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,2,['integrat'],['integrator']
Deployability,/// update - Recompute Blocks[MBBNum],MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterferenceCache.h:4,update,update,4,interpreter/llvm-project/llvm/lib/CodeGen/InterferenceCache.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterferenceCache.h,1,['update'],['update']
Deployability,/// update - Recompute Value from Bias and Links. Return true when node; /// preference changes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp:4,update,update,4,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,1,['update'],['update']
Deployability,"/// update drawing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RCanvas.hxx:4,update,update,4,graf2d/gpadv7/inc/ROOT/RCanvas.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RCanvas.hxx,1,['update'],['update']
Deployability,/// update the operand status.; /// The first return value shows whether MF been changed.; /// The second return value indicates we need to call; /// DeadLaneDetector::computeSubRegisterLaneBitInfo and this function again; /// to propagate changes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DetectDeadLanes.cpp:4,update,update,4,interpreter/llvm-project/llvm/lib/CodeGen/DetectDeadLanes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DetectDeadLanes.cpp,1,['update'],['update']
Deployability,/// updateDFSNumbers - Assign In and Out numbers to the nodes while walking; /// dominator tree in dfs order.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:4,update,updateDFSNumbers,4,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,1,['update'],['updateDFSNumbers']
Deployability,/// updateDbgUsersToReg - Update a collection of debug instructions; /// to refer to the designated register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h:4,update,updateDbgUsersToReg,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,2,"['Update', 'update']","['Update', 'updateDbgUsersToReg']"
Deployability,/// updateDirection - Update direction vector entry; /// based on the current constraint.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:4,update,updateDirection,4,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,2,"['Update', 'update']","['Update', 'updateDirection']"
Deployability,"/// updateForInsertedWaterBlock - When a block is newly inserted into the; /// machine function, it upsets all of the block numbers. Renumber the blocks; /// and update the arrays that parallel this numbering.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:4,update,updateForInsertedWaterBlock,4,interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,6,['update'],"['update', 'updateForInsertedWaterBlock']"
Deployability,"/// updateGlobalMapping - Replace an existing mapping for GV with a new; /// address. This updates both maps as required. If ""Addr"" is null, the; /// entry for the global is removed from the mappings. This returns the old; /// value of the pointer, or null if it was not in the map.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h:4,update,updateGlobalMapping,4,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,2,['update'],"['updateGlobalMapping', 'updates']"
Deployability,/// updateSSA - Compute the values that will be live in to all requested; /// blocks in LiveIn. Create PHI-def values as required to preserve SSA form.; ///; /// Every live-in block must be jointly dominated by the added live-out; /// blocks. No values are read from the live ranges.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h:4,update,updateSSA,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,1,['update'],['updateSSA']
Deployability,"/// use directly the approximate posterior function obtained by binning it in nbins; /// by default the cdf is used by integrating the posterior; /// if a value of nbin <= 0 the cdf function will be used",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/BayesianCalculator.h:119,integrat,integrating,119,roofit/roostats/inc/RooStats/BayesianCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/BayesianCalculator.h,1,['integrat'],['integrating']
Deployability,/// viewAST - Visualize an AST rooted at this Stmt* using GraphViz. Only; /// works on systems with GraphViz (Mac OS X) or dot+gv installed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:130,install,installed,130,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['install'],['installed']
Deployability,"/// {{@ Parse a textual pass pipeline description into a specific PassManager; ///; /// Automatic deduction of an appropriate pass manager stack is not supported.; /// For example, to insert a loop pass 'lpass' into a FunctionPassManager,; /// this is the valid pipeline text:; ///; /// function(lpass)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:29,pipeline,pipeline,29,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],['pipeline']
Deployability,/// {{@ These options accept textual pipeline descriptions which will be; /// inserted into default pipelines at the respective extension points,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/NewPMDriver.cpp:37,pipeline,pipeline,37,interpreter/llvm-project/llvm/tools/opt/NewPMDriver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/NewPMDriver.cpp,2,['pipeline'],"['pipeline', 'pipelines']"
Deployability,"//////////////////////////////////////////////////////////////////////////////////////////////////; /// Send initial message with buttons configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebControlBar.cxx:138,configurat,configuration,138,gui/webgui6/src/TWebControlBar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebControlBar.cxx,1,['configurat'],['configuration']
Deployability,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Check if any widget was modified and update if necessary",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowser.cxx:137,update,update,137,gui/browserv7/src/RBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowser.cxx,1,['update'],['update']
Deployability,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Configures draw option for geometry; /// Normally has effect before first drawing of the geometry; /// When geometry displayed, only ""axis"" and ""rotate"" options are updated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx:265,update,updated,265,geom/webviewer/src/RGeomViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx,1,['update'],['updated']
Deployability,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Mark pad modified and do update; /// For web canvas set async mode first to avoid blocking here",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx:125,update,update,125,gui/fitpanelv7/src/RFitPanel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx,1,['update'],['update']
Deployability,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Save viewer configuration as macro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx:112,configurat,configuration,112,geom/webviewer/src/RGeomViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx,1,['configurat'],['configuration']
Deployability,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Update RConfig data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:100,Update,Update,100,tree/webviewer/src/RTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx,1,['Update'],['Update']
Deployability,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Update geometry drawings in all web displays",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx:100,Update,Update,100,geom/webviewer/src/RGeomViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx,1,['Update'],['Update']
Deployability,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Update tree viewer in all web displays",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:100,Update,Update,100,tree/webviewer/src/RTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx,1,['Update'],['Update']
Deployability,"//////////////////////////////////////////////////////////////////////////////////////////; /// Clear all server locations; /// Does not change configuration of already running HTTP server",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:144,configurat,configuration,144,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,1,['configurat'],['configuration']
Deployability,"//////////////////////////////////////////////////////////////////////////////////////////; /// Function used to send command to browser to toggle menu, toolbar, editors, ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebCanvas.cxx:140,toggle,toggle,140,gui/webgui6/src/TWebCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebCanvas.cxx,1,['toggle'],['toggle']
Deployability,"//////////////////////////////////////////////////////////////////////////////////////////; /// Release all references to specified window; /// Called from RWebWindow destructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:96,Release,Release,96,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,1,['Release'],['Release']
Deployability,"///////////////////////////////////////////////////////////////////////////////////////; /// Release list of held canvases pointers; /// If no other shared pointers exists on the canvas, object will be destroyed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RCanvas.cxx:93,Release,Release,93,graf2d/gpadv7/src/RCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RCanvas.cxx,1,['Release'],['Release']
Deployability,"///////////////////////////////////////////////////////////////////////////////////////; /// Update canvas",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RCanvas.cxx:93,Update,Update,93,graf2d/gpadv7/src/RCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RCanvas.cxx,1,['Update'],['Update']
Deployability,"//////////////////////////////////////////////////////////////////////////////////; /// Evaluate object. Returns either cached value or triggers a recalculation.; /// The recalculation happens by calling getValV(), which in the end calls the; /// virtual evaluate() functions of the respective PDFs.; /// \param[in] normalisationSet getValV() reacts differently depending on the value of the normalisation set.; /// If the set is `nullptr`, an unnormalised value is returned.; /// \note The normalisation is arbitrary, because it is up to the implementation; /// of the PDF to e.g. leave out normalisation constants for speed reasons. The range; /// of the variables is also ignored.; ///; /// To normalise the result properly, a RooArgSet has to be passed, which contains; /// the variables to normalise over.; /// These are integrated over their current ranges to compute the normalisation constant,; /// and the unnormalised result is divided by this value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h:826,integrat,integrated,826,roofit/roofitcore/inc/RooAbsReal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h,1,['integrat'],['integrated']
Deployability,"/////////////////////////////////////////////////////////////////////////////////; /// Change configuration by client; /// Returns true if any parameter was really changed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx:94,configurat,configuration,94,geom/webviewer/src/RGeomData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx,1,['configurat'],['configuration']
Deployability,"/////////////////////////////////////////////////////////////////////////////////; /// Save geometry configuration as C++ macro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx:101,configurat,configuration,101,geom/webviewer/src/RGeomData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx,1,['configurat'],['configuration']
Deployability,"/////////////////////////////////////////////////////////////////////////////////; /// Show or update RBrowser in web window; /// If web window already started - just refresh it like ""reload"" button does; /// If no web window exists or \param always_start_new_browser configured, starts new window; /// \param args display arguments",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowser.cxx:95,update,update,95,gui/browserv7/src/RBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowser.cxx,1,['update'],['update']
Deployability,"/////////////////////////////////////////////////////////////////////////////////; /// Show or update RFileDialog in web window; /// If web window already started - just refresh it like ""reload"" button does; /// Reset result of file selection (if any)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RFileDialog.cxx:95,update,update,95,gui/browserv7/src/RFileDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RFileDialog.cxx,1,['update'],['update']
Deployability,"/////////////////////////////////////////////////////////////////////////////////; /// Show or update geometry in web window; /// If web browser already started - just refresh drawing like ""reload"" button does; /// If no web window exists or \param always_start_new_browser configured, starts new window; /// \param args arguments to display",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx:95,update,update,95,geom/webviewer/src/RGeomViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx,1,['update'],['update']
Deployability,"/////////////////////////////////////////////////////////////////////////////////; /// Show or update viewer in web window; /// If web browser already started - just refresh drawing like ""reload"" button does; /// If no web window exists or \param always_start_new_browser configured, starts new window; /// \param args arguments to display",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:95,update,update,95,tree/webviewer/src/RTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx,1,['update'],['update']
Deployability,"/////////////////////////////////////////////////////////////////////////////////; /// Update client - reload hierarchy",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomHierarchy.cxx:87,Update,Update,87,geom/webviewer/src/RGeomHierarchy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomHierarchy.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /*! \class TPaletteAxis; \ingroup Histpainter; \brief The palette painting class. A `TPaletteAxis` object is used to display the color palette when; drawing 2-d histograms. The `TPaletteAxis` is automatically created drawn when drawing a 2-D; histogram when the option ""Z"" is specified. A `TPaletteAxis` object is added to the histogram list of functions and; can be retrieved doing:. TPaletteAxis *palette = (TPaletteAxis*)h->GetListOfFunctions()->FindObject(""palette"");. then the pointer `palette` can be used to change the palette attributes. Because the palette is created at painting time only, one must issue a:. gPad->Update();. before retrieving the palette pointer in order to create the palette. The following; macro gives an example. Begin_Macro(source); {; auto h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; auto palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; }; End_Macro. `TPaletteAxis` inherits from `TBox` and `TPave`. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; In this case no optimization can be done. It is responsibility of the; user to adjust minimum, maximum of the histogram and/or the contour levels; to get a reasonable look of the plot.; Only overlap of the labels is avoided if too many c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:707,Update,Update,707,hist/histpainter/src/TPaletteAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; // Add a collection of arguments to this collection by calling addOwned(); /// for each element in the source collection. The input list can't be an; /// owning collection itself, otherwise the arguments would be owned by two; /// collections.; ///; /// If you want to transfer arguments from one owning collection to another,; /// you have two options:; /// 1. `std::move` the input collection and use; /// RooAbsCollection::addOwned(RooAbsCollection&&, bool) (preferred); /// 2. release the ownership of the input collection first, using; /// RooAbsCollection::releaseOwnership()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:563,release,release,563,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,2,['release'],"['release', 'releaseOwnership']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; // Update all the TClass registered in fClassesToUpdate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:85,Update,Update,85,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// (Re)Initialize numerical integration engine if necessary. Return true if; /// successful, or otherwise false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:111,integrat,integration,111,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Action to be performed when this toggle menu item is selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:119,toggle,toggle,119,core/gui/src/TContextMenu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx,1,['toggle'],['toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Activated when user double click on objects on 3D scene. Sets clicked node to top node; /// and updates scene with camers reset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx:182,update,updates,182,graf3d/gviz3d/src/TStructViewerGUI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:92,configurat,configuration,92,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,10,"['Integrat', 'configurat', 'integrat']","['Integrator', 'configuration', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point and update the covariance matrix. The input; /// array must be <TT>fNumberOfVariables</TT> long.; ///; ///; /// The Covariance matrix and mean values of the input data is calculated; /// on the fly by the following equations:; ///; /// \f[; /// \left<x_i\right>^{(0)} = x_{i0}; /// \f]; ///; ///; /// \f[; /// \left<x_i\right>^{(n)} = \left<x_i\right>^{(n-1)}; /// + \frac1n \left(x_{in} - \left<x_i\right>^{(n-1)}\right); /// \f]; ///; /// \f[; /// C_{ij}^{(0)} = 0; /// \f]; ///; ///; ///; /// \f[; /// C_{ij}^{(n)} = C_{ij}^{(n-1)}; /// + \frac1{n-1}\left[\left(x_{in} - \left<x_i\right>^{(n)}\right); /// \left(x_{jn} - \left<x_j\right>^{(n)}\right)\right]; /// - \frac1n C_{ij}^{(n-1)}; /// \f]; ///; /// since this is a really fast method, with no rounding errors (please; /// refer to CERN 72-21 pp. 54-106).; ///; ///; /// The data is stored internally in a <TT>TVectorD</TT>, in the following; /// way:; ///; /// \f[; /// \mathbf{x} = \left[\left(x_{0_0},\ldots,x_{{P-1}_0}\right),\ldots,; /// \left(x_{0_i},\ldots,x_{{P-1}_i}\right), \ldots\right]; /// \f]; ///; /// With \f$P\f$ as defined in the class description.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:107,update,update,107,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add a line of text to the view widget.; /// Fast version. Use it if you are going to add; /// several lines, than call Update().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextView.cxx:205,Update,Update,205,gui/gui/src/TGTextView.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextView.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add a link around str, with title comment.; /// Update str so it surrounds the link.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:134,Update,Update,134,html/src/TDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add a new toggle at a specific position.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:96,toggle,toggle,96,core/gui/src/TToggleGroup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx,1,['toggle'],['toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add a new toggle.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:96,toggle,toggle,96,core/gui/src/TToggleGroup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx,1,['toggle'],['toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add a point with the specified coordinates. Update our y-axis limits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx:130,Update,Update,130,roofit/roofitcore/src/RooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add a schema evolution customization rule.; /// The syntax of the rule can be either the short form:; /// ~~~ {.cpp}; /// [type=Read] classname membername [attributes=... ] [version=[...] ] [checksum=[...] ] [oldtype=...] [code={...}]; /// ~~~; /// or the long form; /// ~~~ {.cpp}; /// [type=Read] sourceClass=classname [targetclass=newClassname] [ source=""type membername; [type2 membername2]"" ]; /// [target=""membername3;membername4""] [attributes=... ] [version=...] [checksum=...] [code={...}|functionname]; /// ~~~; ///; /// For example to set HepMC::GenVertex::m_event to _not_ owned the object it is pointing to:; /// HepMC::GenVertex m_event attributes=NotOwner; ///; /// Semantic of the tags:; /// - type : the type of the rule, valid values: Read, ReadRaw, Write, WriteRaw, the default is 'Read'.; /// - sourceClass : the name of the class as it is on the rule file; /// - targetClass : the name of the class as it is in the current code ; defaults to the value of sourceClass; /// - source : the types and names of the data members from the class on file that are needed, the list is separated by semi-colons ';'; /// - oldtype: in the short form only, indicates the type on disk of the data member.; /// - target : the names of the data members updated by this rule, the list is separated by semi-colons ';'; /// - attributes : list of possible qualifiers among: Owner, NotOwner; /// - version : list of the version of the class layout that this rule applies to. The syntax can be [1,4,5] or [2-] or [1-3] or [-3]; /// - checksum : comma delimited list of the checksums of the class layout that this rule applies to.; /// - code={...} : code to be executed for the rule or name of the function implementing it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1343,update,updated,1343,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add a trial event to our cache and update our estimates; /// of the function maximum value and integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAcceptReject.cxx:121,update,update,121,roofit/roofitcore/src/RooAcceptReject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAcceptReject.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add an object to the list of objects to be stored in shared memory.; /// To place the object actually into shared memory call Update().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx:212,Update,Update,212,io/io/src/TMapFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add column according ot expression at position,; /// TGTable->Update() is needed afterwards to apply the change to; /// the TGTable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:148,Update,Update,148,tree/treeplayer/src/TTreeTableInterface.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add column with formula at position, TGTable->Update() is needed; /// afterwards to apply the change to the TGTable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:132,Update,Update,132,tree/treeplayer/src/TTreeTableInterface.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add given binning under name 'name' with this variable. If name is null,; /// the binning is installed as the default binning.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:179,install,installed,179,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['install'],['installed']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add new slice to calo tower. Updates cached variables fMaxValE; /// and fMaxValEt; /// Return last index in the vector of slice infos.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx:115,Update,Updates,115,graf3d/eve/src/TEveCaloData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx,2,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add newly created session configuration in the list of sessions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:112,configurat,configuration,112,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:123,configurat,configuration,123,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add some colors etc to a source entity, contained in str.; /// The type of what's contained in str is given by type.; /// It's called e.g. by TDocParser::BeautifyLine().; /// This function should assume that only str.""End()""; /// (i.e. str.Begin()+str.Length()) is valid.; /// When inserting into str.String(), str.Length() must be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:418,update,updated,418,html/src/TDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add some colors etc to a source entity, contained in str.; /// The type of what's contained in str is given by type.; /// It's called e.g. by TDocParser::BeautifyLine().; /// This function should assume that only str.Begin() is valid.; /// When inserting into str.String(), str.Begin() must be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:380,update,updated,380,html/src/TDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Add's a meta data object to the file collection object. The object will be; /// adopted by the TFileCollection and should not be deleted by the user.; /// Typically objects of class TFileInfoMeta or derivatives should be added,; /// but any class is accepted.; ///; /// NB : a call to TFileCollection::Update will remove these objects unless the; /// bit TFileInfoMeta::kExternal is set.; /// Returns kTRUE if successful, kFALSE otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileCollection.cxx:388,Update,Update,388,core/base/src/TFileCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileCollection.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Adds the dataset in the folder of group, user to the list in target.; /// If dsName is defined, only the information about the specified dataset; /// is processed.; ///; /// The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet.; /// Available options (to be .or.ed):; /// kPrint print the dataset content; /// kQuotaUpdate update quotas; /// kExport use export naming; /// kList get a list of dataset names; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuotaUpdate"" return is null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:427,update,update,427,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Advertise capability to perform (analytical) integrals; /// internally. For a given integration request over allVars while; /// normalized over normSet2 and in range 'rangeName', returns; /// largest subset that can be performed internally in analVars; /// Return code is unique integer code identifying integration scenario; /// to be passed to analyticalIntegralWN() to calculate requeste integral; ///; /// Class RooAbsAnaConv defers analytical integration request to; /// resolution model and/or coefficient implementations and; /// aggregates results into composite configuration with a unique; /// code assigned by RooAICRegistry",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:170,integrat,integration,170,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,4,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Advertise that we can internally integrate over x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyVar.cxx:119,integrat,integrate,119,roofit/roofitcore/src/RooPolyVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyVar.cxx,1,['integrat'],['integrate']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Advertise to RooFit that this function can be analytically integrated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPolynomial.cxx:145,integrat,integrated,145,roofit/roofit/src/RooPolynomial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPolynomial.cxx,2,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Advertises internal (analytical) integration capabilities. Call; /// is forwarded to RooHistPdf cache p.d.f of cache that is used for; /// given choice of observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx:119,integrat,integration,119,roofit/roofitcore/src/RooAbsCachedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// After button release get current position and update associated pad.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TViewerX3D.cxx:99,release,release,99,graf3d/x3d/src/TViewerX3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TViewerX3D.cxx,2,"['release', 'update']","['release', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Algorithm 600, collected algorithms from acm.; ///; /// algorithm appeared in acm-trans. math. software, vol.9, no. 2,; /// jun., 1983, p. 258-259.; ///; /// TSpline5 computes the coefficients of a quintic natural quintic spli; /// s(x) with knots x(i) interpolating there to given function values:; /// ~~~ {.cpp}; /// s(x(i)) = y(i) for i = 1,2, ..., n.; /// ~~~; /// in each interval (x(i),x(i+1)) the spline function s(xx) is a; /// polynomial of fifth degree:; /// ~~~ {.cpp}; /// s(xx) = ((((f(i)*p+e(i))*p+d(i))*p+c(i))*p+b(i))*p+y(i) (*); /// = ((((-f(i)*q+e(i+1))*q-d(i+1))*q+c(i+1))*q-b(i+1))*q+y(i+1); /// ~~~; /// where p = xx - x(i) and q = x(i+1) - xx.; /// (note the first subscript in the second expression.); /// the different polynomials are pieced together so that s(x) and; /// its derivatives up to s"""" are continuous.; ///; /// ### input:; ///; /// n number of data points, (at least three, i.e. n > 2); /// x(1:n) the strictly increasing or decreasing sequence of; /// knots. the spacing must be such that the fifth power; /// of x(i+1) - x(i) can be formed without overflow or; /// underflow of exponents.; /// y(1:n) the prescribed function values at the knots.; ///; /// ### output:; ///; /// b,c,d,e,f the computed spline coefficients as in (*).; /// (1:n) specifically; /// b(i) = s'(x(i)), c(i) = s""(x(i))/2, d(i) = s""'(x(i))/6,; /// e(i) = s""""(x(i))/24, f(i) = s""""'(x(i))/120.; /// f(n) is neither used nor altered. the five arrays; /// b,c,d,e,f must always be distinct.; ///; /// ### option:; ///; /// it is possible to specify values for the first and second; /// derivatives of the spline function at arbitrarily many knots.; /// this is done by relaxing the requirement that the sequence of; /// knots be strictly increasing or decreasing. specifically:; ///; /// ~~~ {.cpp}; /// if x(j) = x(j+1) then s(x(j)) = y(j) and s'(x(j)) = y(j+1),; /// if x(j) = x(j+1) = x(j+2) then in a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:914,continuous,continuous,914,hist/hist/src/TSpline.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx,1,['continuous'],['continuous']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// All widgets of the screen are updated with the current palette.; /// Protected method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx:116,update,updated,116,graf2d/asimage/src/TASPaletteEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Appends (or insert at the specified position) the given HTML text to the; /// end of any HTML text that may have been inserted by prior calls to this; /// command. Then it runs the tokenizer, parser and layout engine as far as; /// possible with the text that is available. The display is updated; /// appropriately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:375,update,updated,375,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Apply the camera to the current GL context, setting the viewport, projection; /// and modelview matrices. After this vertices etc can be directly entered; /// in the world frame. This also updates the cached frustum values, enabling; /// all the projection, overlap tests etc defined in TGLCamera to be used.; ///; /// Arguments are:; /// - 'box' - view volume box - ignored for ortho camera. Assumed to be same; /// as one passed to Setup().; /// - 'pickRect' - optional picking rect. If non-null, restrict drawing to this; /// viewport rect.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLOrthoCamera.cxx:275,update,updates,275,graf3d/gl/src/TGLOrthoCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLOrthoCamera.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Apply the camera to the current GL context, setting the viewport, projection; /// and modelview matrices. After this vertices etc can be directly entered; /// in the world frame. This also updates the cached frustum values, enabling; /// all the projection, overlap tests etc defined in TGLCamera to be used.; ///; /// Arguments are:; /// - 'box' - view volume box - used to adjust near/far clipping; /// - 'pickRect' - optional picking rect. If non-null, restrict drawing to this; /// viewport rect.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPerspectiveCamera.cxx:275,update,updates,275,graf3d/gl/src/TGLPerspectiveCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPerspectiveCamera.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Assert cell id cache is ok.; /// Returns true if the cache has been updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCalo.cxx:154,update,updated,154,graf3d/eve/src/TEveCalo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCalo.cxx,2,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Asynchronous pad update.; /// In case of web-based canvas triggers update of the canvas on the client side,; /// but does not wait that real update is completed. Avoids blocking of caller thread.; /// Have to be used if called from other web-based widget to avoid logical dead-locks.; /// In case of normal canvas just canvas->Update() is performed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:103,update,update,103,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,8,"['Update', 'update']","['Update', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Attach to terminal, set the proper configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:121,configurat,configuration,121,core/textinput/src/textinput/StreamReaderUnix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Attempt to recover file if not correctly closed; ///; /// The function returns the number of keys that have been recovered.; /// If no keys can be recovered, the file will be declared Zombie by; /// the calling function. This function is automatically called when; /// opening a file.; /// If the file is open in read only mode, the file is not modified.; /// If open in update mode and the function finds something to recover,; /// a new directory header is written to the file. When opening the file gain; /// no message from Recover will be reported.; /// If keys have been recovered, the file is usable and you can safely; /// read the corresponding objects.; /// If the file is not usable (a zombie), you can test for this case; /// with code like:; ///; /// ~~~{.cpp}; /// TFile f(""myfile.root"");; /// if (f.IsZombie()) {<actions to take if file is unusable>}; /// ~~~; ///; /// If the file has been recovered, the bit kRecovered is set in the TFile object in memory.; /// You can test if the file has been recovered with; ///; /// if (f.TestBit(TFile::kRecovered)) {... the file has been recovered}; ///; /// When writing TTrees to a file, it is important to save the Tree header; /// at regular intervals (see TTree::AutoSave). If a file containing a Tree; /// is recovered, the last Tree header written to the file will be used.; /// In this case all the entries in all the branches written before writing; /// the header are valid entries.; /// One can disable the automatic recovery procedure by setting; ///; /// TFile.Recover 0; ///; /// in the <em>system.rootrc</em> file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:457,update,update,457,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Back-end for plotOn() implementation on RooSimultaneous which; /// needs special handling because a RooSimultaneous PDF cannot; /// project out its index category via integration. plotOn() will; /// abort if this is requested without providing a projection dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:253,integrat,integration,253,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Binding used by the integrator to evaluate the PDF.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:106,integrat,integrator,106,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['integrat'],['integrator']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Books MVA method. The option configuration string is custom for each MVA; /// the TString field ""theNameAppendix"" serves to define (and distinguish); /// several instances of a given MVA, eg, when one wants to compare the; /// performance of various configurations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx:115,configurat,configuration,115,tmva/tmva/src/Factory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx,2,['configurat'],"['configuration', 'configurations']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Browse configuration files.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:93,configurat,configuration,93,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Build and return the posterior function (not normalized) as a RooAbsReal; /// the posterior is obtained from the product of the likelihood function and the; /// prior pdf which is then integrated in the nuisance parameters (if existing).; /// A prior function for the nuisance can be specified either in the prior pdf object; /// or in the model itself. If no prior nuisance is specified, but prior parameters are then; /// the integration is performed assuming a flat prior for the nuisance parameters.; ///; /// NOTE: the return object is managed by the BayesianCalculator class, users do not need to delete it,; /// but the object will be deleted when the BayesiabCalculator object is deleted",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:271,integrat,integrated,271,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,2,['integrat'],"['integrated', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Build and return the posterior pdf (i.e posterior function normalized to all range of poi); /// Note that an extra integration in the POI is required for the normalization; /// NOTE: user must delete the returned object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:201,integrat,integration,201,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Build server configuration frame.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:99,configurat,configuration,99,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Builds a hidden layer, updates the number of layers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:109,update,updates,109,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// By default, fraction coefficients are assumed to refer to the default; /// fit range. This makes the shape of a RooAddPdf; /// explicitly dependent on the range of the observables. Calling this function; /// allows for a range-independent definition of the fractions, because it; /// ties all coefficients to the given; /// named range. If the normalisation range is different; /// from this reference range, the appropriate fraction coefficients; /// are automatically calculated from the reference fractions by; /// integrating over the ranges, and comparing these integrals.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:604,integrat,integrating,604,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,1,['integrat'],['integrating']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate if the an object defined by world frame bounding box; /// is 'of interest' to the camera. This is defined as box:; ///; /// 1. intersecting completely or partially (kInside/kPartial) with; /// cameras interest box (fInterestBox); /// 2. having significant length OR volume ratio compared to this; /// interest box; ///; /// If a box is 'of interest' returns kTRUE, kFALSE otherwise. See; /// TGLCamera::UpdateInterest() for more details of camera interest; /// box.; ///; /// Note: Length/volume ratios NOT dependent on the projected size; /// of box at current camera configuration as we do not want; /// continual changes. This is used when (re) populating the scene; /// with objects from external client.; ///; /// TODO: Might be more logical to move this test out to client -; /// and have accessor for fInterestBox instead?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx:499,Update,UpdateInterest,499,graf3d/gl/src/TGLCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx,2,"['Update', 'configurat']","['UpdateInterest', 'configuration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Calculates the ROC integral (AUC); ///; /// @param num_points Granularity of the resulting curve used for integration.; /// The curve will be subdivided into num_points - 1 regions; /// where the performance of the classifier is sampled.; /// Larger number means more accurate, but more costly,; /// evaluation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ROCCurve.cxx:192,integrat,integration,192,tmva/tmva/src/ROCCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ROCCurve.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Callback that actually performs the projection.; /// Called when projection parameters have been updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveStraightLineSet.cxx:183,update,updated,183,graf3d/eve/src/TEveStraightLineSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveStraightLineSet.cxx,3,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Called when fTimer timeouts (every 0.025 second); /// Updates GUI of recorder",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx:140,Update,Updates,140,gui/recorder/src/TRecorder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Cancel all pending Canvas::Update()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx:113,Update,Update,113,gui/canvaspainter/src/RCanvasPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Change our integration limits. Return true if the new limits are; /// ok, or otherwise false. Always returns false and does nothing; /// if this object was constructed to always use our integrand's limits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx:97,integrat,integration,97,roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,6,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Check configuration options and running daemons to build a default list; /// of secure methods.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:92,configurat,configuration,92,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Check if the limits are valid. For this integrator all limit configurations; /// are valid, but if the limits change between two calculate() calls it; /// may be necessary to reconfigure (e.g. if an open ended range becomes; /// a closed range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:126,integrat,integrator,126,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,2,"['configurat', 'integrat']","['configurations', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Check if the local cache information for group, user, dsName is up-to-date; /// If not, make the relevant updates; /// Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:192,update,updates,192,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Check if this configuration was created before",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:100,configurat,configuration,100,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Check if we can integrate over the current domain. If return value; /// is true we cannot handle the current limits (e.g. where the domain; /// of one or more observables is open ended.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:102,integrat,integrate,102,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,1,['integrat'],['integrate']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Check that our integration range is finite and otherwise return false.; /// Update the limits from the integrand if requested.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx:101,integrat,integration,101,roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,10,"['Update', 'integrat']","['Update', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Checkis, if lock is free in configuration tables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:114,configurat,configuration,114,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Checks whether ROOT notebook files are installed and they are; /// the current version.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/src/nbmain.cxx:125,install,installed,125,main/src/nbmain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/src/nbmain.cxx,1,['install'],['installed']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Clip type radio button changed - update viewer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLClipSetEditor.cxx:119,update,update,119,graf3d/gl/src/TGLClipSetEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLClipSetEditor.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Collect all parents of class TEveScene. This is needed to; /// automatically detect which scenes need to be updated.; ///; /// Overriden in TEveScene to include itself and return.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:194,update,updated,194,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Collect scene-parents from all children. This is needed to; /// automatically detect which scenes need to be updated during/after; /// a full sub-tree update.; /// Argument parent specifies parent in traversed hierarchy for which we can; /// skip the upwards search.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:195,update,updated,195,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,2,['update'],"['update', 'updated']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Common update code for helix and RK propagation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:93,update,update,93,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Compares keydata with provided and return kTRUE if key was modified; /// Used in TFile::StreamKeysForDirectory() method to verify data for that keys; /// should be updated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TKeySQL.cxx:250,update,updated,250,io/sql/src/TKeySQL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TKeySQL.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Complete current transaction (commit = kTRUE) or rollback; /// Switches on autocommit mode of ODBC driver",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:135,rollback,rollback,135,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['rollback'],['rollback']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Compute the asimov data set for an observable of a pdf.; /// It generates binned data following the binning of the observables.; // TODO: (possibility to change number of bins); // TODO: implement integration over bin content",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/AsymptoticCalculator.cxx:283,integrat,integration,283,roofit/roostats/src/AsymptoticCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/AsymptoticCalculator.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Computes the density of Cauchy distribution at point x; /// by default, standard Cauchy distribution is used (t=0, s=1); /// - t is the location parameter; /// - s is the scale parameter; ///; /// The Cauchy distribution, also called Lorentzian distribution,; /// is a continuous distribution describing resonance behavior; /// The mean and standard deviation of the Cauchy distribution are undefined.; /// The practical meaning of this is that collecting 1,000 data points gives; /// no more accurate an estimate of the mean and standard deviation than; /// does a single point.; /// The formula was taken from ""Engineering Statistics Handbook"" on site; /// http://www.itl.nist.gov/div898/handbook/eda/section3/eda3663.htm; ///; /// Example:; ///; /// ~~~ {cpp}; /// TF1* fc = new TF1(""fc"", ""TMath::CauchyDist(x, [0], [1])"", -5, 5);; /// fc->SetParameters(0, 1);; /// fc->Draw();; /// ~~~; ///; /// \author Anna Kreshuk",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:355,continuous,continuous,355,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['continuous'],['continuous']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Computes the hessian matrix using the BFGS update algorithm.; /// from gamma (g_{(t+1)}-g_{(t)}) and delta (w_{(t+1)}-w_{(t)}).; /// It returns true if such a direction could not be found; /// (if gamma and delta are orthogonal).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:129,update,update,129,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/src/TPythia8.cxx:86,Configurat,Configuration,86,montecarlo/pythia8/src/TPythia8.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/src/TPythia8.cxx,2,['Configurat'],['Configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Configuration of guides GUI called from SetModel().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx:86,Configurat,Configuration,86,graf3d/gl/src/TGLViewerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx,1,['Configurat'],['Configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Connect framework defined extension to the material. The material ""grabs"" a copy,; /// so the original object can be released by the producer. Release the previously; /// connected extension if any.; ///; /// NOTE: This interface is intended for the use by TGeo and the users should; /// NOT connect extensions using this method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:203,release,released,203,geom/geom/src/TGeoMaterial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx,2,"['Release', 'release']","['Release', 'released']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Connect framework defined extension to the node. The node ""grabs"" a copy,; /// so the original object can be released by the producer. Release the previously; /// connected extension if any.; ///; /// NOTE: This interface is intended for the use by TGeo and the users should; /// NOT connect extensions using this method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNode.cxx:195,release,released,195,geom/geom/src/TGeoNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNode.cxx,2,"['Release', 'release']","['Release', 'released']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Connect framework defined extension to the volume. The volume ""grabs"" a copy,; /// so the original object can be released by the producer. Release the previously; /// connected extension if any.; ///; /// NOTE: This interface is intended for the use by TGeo and the users should; /// NOT connect extensions using this method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx:199,release,released,199,geom/geom/src/TGeoVolume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx,2,"['Release', 'release']","['Release', 'released']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Connect user-defined extension to the material. The material ""grabs"" a copy, so; /// the original object can be released by the producer. Release the previously; /// connected extension if any.; ///; /// NOTE: This interface is intended for user extensions and is guaranteed not; /// to be used by TGeo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:198,release,released,198,geom/geom/src/TGeoMaterial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx,2,"['Release', 'release']","['Release', 'released']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Connect user-defined extension to the node. The node ""grabs"" a copy, so; /// the original object can be released by the producer. Release the previously; /// connected extension if any.; ///; /// NOTE: This interface is intended for user extensions and is guaranteed not; /// to be used by TGeo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNode.cxx:190,release,released,190,geom/geom/src/TGeoNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNode.cxx,2,"['Release', 'release']","['Release', 'released']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Connect user-defined extension to the volume. The volume ""grabs"" a copy, so; /// the original object can be released by the producer. Release the previously; /// connected extension if any.; ///; /// NOTE: This interface is intended for user extensions and is guaranteed not; /// to be used by TGeo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx:194,release,released,194,geom/geom/src/TGeoVolume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx,2,"['Release', 'release']","['Release', 'released']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Connects to SQL server with provided arguments.; ///; /// If the constructor fails in any way IsZombie() will; /// return true. Use IsOpen() to check if the file is (still) open.; /// | Option | Description |; /// |--------|-------------|; /// | NEW or CREATE | Create a ROOT tables in database if the tables already exists connection is not opened.|; /// | RECREATE | Create completely new tables. Any existing table will be deleted.|; /// | UPDATE | Open an existing database for writing. If data base open by other TSQLFile instance for writing,; /// write access will be rejected.|; /// | BREAKLOCK | Special case when lock was not correctly released by TSQLFile instance. This may happen if; /// program crashed when TSQLFile was open with write access mode.|; /// | READ / OPEN | Open an existing data base for reading.|; ///; /// For more details see comments for TFile::TFile() constructor.; /// For a moment TSQLFile does not support TTree objects and subdirectories.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:529,UPDATE,UPDATE,529,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,2,"['UPDATE', 'release']","['UPDATE', 'released']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct MINUIT interface to given function. Function can be anything,; /// but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; /// (implemented by RooChi2Var). Other frequent use cases are a RooAddition; /// of a RooNLLVar plus a penalty or constraint term. This class propagates; /// all RooFit information (floating parameters, their values and errors); /// to MINUIT before each MINUIT call and propagates all MINUIT information; /// back to the RooFit object at the end of each call (updated parameter; /// values, their (asymmetric errors) etc. The default MINUIT error level; /// for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); /// value of the input function.; /// Constructor that accepts all configuration in struct with RooAbsReal likelihood",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:597,update,updated,597,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct MultiBuildConfig for build configuration with multiple prototype p.d.f.s; /// masterIndexCat is the name of the master index category that decides which; /// prototype is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:123,configurat,configuration,123,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct a new RooBinSamplingPdf.; /// \param[in] name A name to identify this object.; /// \param[in] title Title (for e.g. plotting); /// \param[in] observable Observable to integrate over (the one that is binned).; /// \param[in] inputPdf A PDF whose bins should be sampled with higher precision.; /// \param[in] epsilon Relative precision for the integrator, which is used to sample the bins.; /// Note that ROOT's default is to use an adaptive integrator, which in its first iteration usually reaches; /// relative precision of 1.E-4 or better. Therefore, asking for lower precision rarely has an effect.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:263,integrat,integrate,263,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,3,['integrat'],"['integrate', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:106,integrat,integrator,106,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,8,['integrat'],"['integration', 'integrator', 'integrators']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct an integrator over 'function' where the configuration details; /// are taken from 'config'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:99,integrat,integrator,99,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,2,"['configurat', 'integrat']","['configuration', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct an integrator over 'function' with given sampling mode; /// and generator type. The sampling mode can be 'Importance'; /// (default), 'ImportanceOnly' and 'Stratified'. The generator type; /// can be 'QuasiRandom' (default) and 'PseudoRandom'. Consult the original; /// VEGAS documentation on details of the mode and type parameters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:99,integrat,integrator,99,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,1,['integrat'],['integrator']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct build configuration from single prototype 'pdfName' and list of arguments; /// that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); /// SplitParamConstrained() and Restrict() arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:102,configurat,configuration,102,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral of 'function' over observables in 'depList'; /// in range 'rangeName' with normalization observables 'funcNormSet'; /// (for p.d.f.s). In the integral is performed to the maximum extent; /// possible the internal (analytical) integrals advertised by function.; /// The other integrations are performed numerically. The optional; /// config object prescribes how these numeric integrations are configured.; ///; /// \Note If pdf component selection was globally overridden to always include; /// all components (either with RooAbsReal::globalSelectComp(bool) or a; /// RooAbsReal::GlobalSelectComponentRAII), then any created integral will; /// ignore component selections during its lifetime. This is especially useful; /// when creating normalization or projection integrals.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:380,integrat,integrations,380,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,2,['integrat'],['integrations']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral on 'function' using given configuration object in the given range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx:131,configurat,configuration,131,roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral on 'function' using given configuration object. The integration; /// range is taken from the definition in the function binding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx:131,configurat,configuration,131,roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,2,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding binding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.cxx:96,integrat,integrator,96,roofit/roofitcore/src/RooBinIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.cxx,2,['integrat'],['integrator']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding for given range,; /// using specified summation rule, maximum number of steps and; /// conversion tolerance. The integration limits are taken from the; /// function binding.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:96,integrat,integrator,96,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,2,['integrat'],"['integration', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified summation; /// rule, maximum number of steps and conversion tolerance. The integration; /// limits are taken from the function binding.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:96,integrat,integrator,96,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,2,['integrat'],"['integration', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object and integration range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:96,integrat,integrator,96,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,3,"['configurat', 'integrat']","['configuration', 'integration', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object. The integration limits are taken from the; /// function binding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:96,integrat,integrator,96,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,3,"['configurat', 'integrat']","['configuration', 'integration', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct string with unique suffix for cache objects based on; /// observable names that define cache configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx:189,configurat,configuration,189,roofit/roofitcore/src/RooAbsCachedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Construct string with unique suffix name to give to integral object that encodes; /// integrated observables, normalization observables and the integration range name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:172,integrat,integrated,172,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['integrat'],"['integrated', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for a normalization projection of the product of p.d.f.s _prodSet; /// integrated over _intSet in range isetRangeName while normalized over _normSet",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:169,integrat,integrated,169,roofit/roofitcore/src/RooGenProdProj.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for automatic configuration with basic settings. Uses a; /// UniformProposal, 10,000 iterations, 40 burn in steps, 50 bins for each; /// RooRealVar, determines interval by histogram. Finds a 95% confidence; /// interval.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx:112,configurat,configuration,112,roofit/roostats/src/MCMCCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from data set, model pdf, parameter of interests and prior pdf; /// If nuisance parameters are given they will be integrated according either to the prior or; /// their constraint term included in the model",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:212,integrat,integrated,212,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of integral on given function binding and with given configuration. The; /// integration limits are taken from the definition in the function binding; ///_func = function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx:151,configurat,configuration,151,roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,2,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor taking a function binding and a configuration object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:130,configurat,configuration,130,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor taking a function binding, an integration range and a configuration object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:128,integrat,integration,128,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor taking name, title and function to be cached. To control; /// granularity of the binning of the cache histogram set the desired properties; /// in the binning named ""cache"" in the observables of the function. The dimensions; /// of the cache are automatically matched to the number of observables used; /// in each use context. Multiple cache in different observable may exists; /// simultaneously if the cached p.d.f is used with multiple observable; /// configurations simultaneously",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCachedPdf.cxx:554,configurat,configurations,554,roofit/roofitcore/src/RooCachedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCachedPdf.cxx,1,['configurat'],['configurations']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; /// Empty for now",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:147,configurat,configuration,147,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor used after having fit using directly ROOT::Fit::Fitter; /// will create a dummy fitter copying configuration and parameter settings",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:193,configurat,configuration,193,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding and configuration object. The integration range is taken; /// from the definition in the function binding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:124,configurat,configuration,124,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,2,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding, definition of integration range and configuration object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:135,integrat,integration,135,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,2,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding. The integration range is taken from the; /// definition in the function binding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:125,integrat,integration,125,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. Defines names of message levels; /// and mapping of topic codes to topic names; /// Install default message streams.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:183,Install,Install,183,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. In place cloning.; //// This object would transfer the data from; /// 'from' the original location to 'newdirectory' the new directory; /// using the sorting method indicated in method.; /// It updates the 'from' TTree with the new information.; /// See TTreeCloner::TTreeCloner(TTree *from, TTree *to, Option_t *method, UInt_t options); /// for details on the sorting methods.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:293,update,updates,293,tree/tree/src/TTreeCloner.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. Register all known integrators by calling; /// their static registration functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:118,integrat,integrators,118,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,1,['integrat'],['integrators']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Control routine to paint any kind of histograms.; ///; /// This function is automatically called by TCanvas::Update.; /// (see TH1::Draw for the list of options)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:195,Update,Update,195,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Convert one point from local system to master reference system.; ///; /// Note that before invoking this function, the global rotation matrix; /// and translation vector for this node must have been computed.; /// This is automatically done by the Paint functions.; /// Otherwise TNode::UpdateMatrix should be called before.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TGeometry.cxx:373,Update,UpdateMatrix,373,graf3d/g3d/src/TGeometry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TGeometry.cxx,4,['Update'],['UpdateMatrix']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Convert one point from master system to local reference system.; ///; /// Note that before invoking this function, the global rotation matrix; /// and translation vector for this node must have been computed.; /// This is automatically done by the Paint functions.; /// Otherwise TNode::UpdateMatrix should be called before.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TGeometry.cxx:373,Update,UpdateMatrix,373,graf3d/g3d/src/TGeometry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TGeometry.cxx,4,['Update'],['UpdateMatrix']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Copy and release.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:95,release,release,95,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,4,['release'],['release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Copy the content to a new new file, update this TTree with the new; /// location information and attach this TTree to the new directory.; ///; /// options: Indicates a basket sorting method, see TTreeCloner::TTreeCloner for; /// details; ///; /// If new and old directory are in the same file, the data is untouched,; /// this ""just"" does a call to SetDirectory.; /// Equivalent to an ""in place"" cloning of the TTree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:122,update,update,122,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Copy the specified macro in the cache directory. The macro file is; /// uploaded if new or updated. If existing, the corresponding header; /// basename(macro).h or .hh, is also uploaded. For the other arguments; /// see TProof::Load().; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:177,update,updated,177,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Copy visual parameters from this element to viz-db model.; /// If update is set, all clients of the model will be updated to; /// the new value.; /// A warning is printed if the model-element fVizModel is not set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:152,update,update,152,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,4,['update'],"['update', 'updated']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:489,configurat,configurations,489,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['configurat'],['configurations']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooAddPdf cache element for a given normalization set and; /// projection configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddHelpers.cxx:169,configurat,configuration,169,roofit/roofitcore/src/RooAddHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddHelpers.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a \f$ \chi^2 \f$ from a series of x and y values stored in a dataset.; /// The y values can either be the event weights (default), or can be another column designated; /// by the YVar() argument. The y value must have errors defined for the \f$ \chi^2 \f$ to; /// be well defined.; ///; /// The following named arguments are supported; ///; /// | | Options to control construction of the \f$ \chi^2 \f$; /// |-|-----------------------------------------; /// | `YVar(RooRealVar& yvar)` | Designate given column in dataset as Y value; /// | `Integrate(bool flag)` | Integrate function over range specified by X errors rather than take value at bin center.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:633,Integrat,Integrate,633,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['Integrat'],['Integrate']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a cumulative distribution function of this p.d.f in terms; /// of the observables listed in iset. If no nset argument is given; /// the c.d.f normalization is constructed over the integrated; /// observables, so that its maximum value is precisely 1. It is also; /// possible to choose a different normalization for; /// multi-dimensional p.d.f.s: eg. for a pdf f(x,y,z) one can; /// construct a partial cdf c(x,y) that only when integrated itself; /// over z results in a maximum value of 1. To construct such a cdf pass; /// z as argument to the optional nset argument",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:273,integrat,integrated,273,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a generator context for this p.d.f. If both the p.d.f and the resolution model; /// support internal generation of the convolution observable on an infinite domain,; /// deploy a specialized convolution generator context, which generates the physics distribution; /// and the smearing separately, adding them a posteriori. If this is not possible return; /// a (slower) generic generation context that uses accept/reject sampling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:263,deploy,deploy,263,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,1,['deploy'],['deploy']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a memory mapped file.; ///; /// This opens a file (to which the; /// memory will be mapped) and attaches a memory region to it.; /// Option can be either: ""NEW"", ""CREATE"", ""RECREATE"", ""UPDATE"" or; /// ""READ"" (see TFile). The default open mode is ""READ"". The size; /// argument specifies the maximum size of shared memory file in bytes.; /// This protected ctor is called via the static Create() method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx:278,UPDATE,UPDATE,278,io/io/src/TMapFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx,1,['UPDATE'],['UPDATE']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a memory mapped file.; ///; /// This opens a file (to which the; /// memory will be mapped) and attaches a memory region to it.; /// Option can be either: ""NEW"", ""CREATE"", ""RECREATE"", ""UPDATE""; /// or ""READ"" (see TFile). The default open mode is ""READ"". The size; /// argument specifies the maximum size of shared memory file in bytes.; /// TMapFile's can only be created via this method. Create() enforces that; /// a TMapFile is always on the memory mapped heap (when ""NEW"", ""CREATE""; /// or ""RECREATE"" are used).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx:278,UPDATE,UPDATE,278,io/io/src/TMapFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx,1,['UPDATE'],['UPDATE']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a new arc/ellipse in this gPad.; ///; /// - Click left button to indicate arrow starting position.; /// - Release left button to terminate the arrow.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCreatePrimitives.cxx:199,Release,Release,199,graf2d/gpad/src/TCreatePrimitives.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCreatePrimitives.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a new line/arrow in this gPad.; ///; /// - Click left button to indicate arrow starting position.; /// - Release left button to terminate the arrow.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCreatePrimitives.cxx:198,Release,Release,198,graf2d/gpad/src/TCreatePrimitives.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCreatePrimitives.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a new pavetext in gPad.; ///; /// - Click left button to indicate one corner of the pavelabel.; /// - Release left button at the opposite corner.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCreatePrimitives.cxx:195,Release,Release,195,graf2d/gpad/src/TCreatePrimitives.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCreatePrimitives.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a profile of the difference of the MLP output minus the; /// true value for a given output node outnode, vs the true value for; /// outnode, for all test data events. This method is mainly useful; /// when doing regression analysis with the MLP (i.e. not classification,; /// but continuous truth values).; /// The resulting TProfile histogram is returned.; /// It is not drawn if option ""goff"" is specified.; /// Options are passed to TProfile::Draw",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMLPAnalyzer.cxx:373,continuous,continuous,373,math/mlp/src/TMLPAnalyzer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMLPAnalyzer.cxx,1,['continuous'],['continuous']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a replica of element and insert it into VizDB with given tag.; /// If replace is true an existing element with the same tag will be replaced.; /// If update is true, existing client of tag will be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:243,update,update,243,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,4,['update'],"['update', 'updated']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."".; ///; /// Returns 0 in case of error or if a sub-directory (hierarchy) with the requested; /// name already exists.; /// returnExistingDirectory returns a pointer to an already existing sub-directory instead of 0.; /// Returns a pointer to the created sub-directory or to the top sub-directory of; /// the hierarchy (in the above example, the returned TDirectory * always points; /// to ""a"").",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:148,a/b,a/b,148,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,1,['a/b'],['a/b']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."".; ///; /// Returns 0 in case of error or if a sub-directory (hierarchy) with the requested; /// name already exists.; /// returnExistingDirectory returns a pointer to an already existing sub-directory with the same name.; /// Returns a pointer to the created sub-directory or to the top sub-directory of; /// the hierarchy (in the above example, the returned TDirectory * always points; /// to ""a"").; /// In particular, the steps to create first a/b/c and then a/b/d without receiving; /// errors are:; /// ~~~ {.cpp}; /// TFile * file = new TFile(""afile"",""RECREATE"");; /// file->mkdir(""a"");; /// file->cd(""a"");; /// gDirectory->mkdir(""b/c"");; /// gDirectory->cd(""b"");; /// gDirectory->mkdir(""d"");; /// ~~~; /// or; /// ~~~ {.cpp}; /// TFile * file = new TFile(""afile"",""RECREATE"");; /// file->mkdir(""a"");; /// file->cd(""a"");; /// gDirectory->mkdir(""b/c"");; /// gDirectory->mkdir(""b/d"", """", true);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx:148,a/b,a/b,148,core/base/src/TDirectory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx,3,['a/b'],['a/b']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a test statistic from the given function and the data.; /// \param[in] name Name of the test statistic; /// \param[in] title Title (for plotting); /// \param[in] real Function to be used for tests; /// \param[in] data Data to fit function to; /// \param[in] projDeps A set of projected observables; /// \param[in] cfg statistic configuration object; ///; /// cfg contains:; /// - rangeName Fit data only in range with given name; /// - addCoefRangeName If not null, all RooAddPdf components of `real` will be instructed to fix their fraction definitions to the given named range.; /// - nCPU If larger than one, the test statistic calculation will be parallelized over multiple processes.; /// By default the data is split with 'bulk' partitioning (each process calculates a contiguous block of fraction 1/nCPU; /// of the data). For binned data this approach may be suboptimal as the number of bins with >0 entries; /// in each processing block many vary greatly thereby distributing the workload rather unevenly.; /// - interleave is set to true, the interleave partitioning strategy is used where each partition; /// i takes all bins for which (ibin % ncpu == i) which is more likely to result in an even workload.; /// - verbose Be more verbose.; /// - splitCutRange If true, a different rangeName constructed as rangeName_{catName} will be used; /// as range definition for each index state of a RooSimultaneous. This means that a different range can be defined; /// for each category such as; /// ```; /// myVariable.setRange(""range_pi0"", 135, 210);; /// myVariable.setRange(""range_gamma"", 50, 210);; /// ```; /// if the categories are called ""pi0"" and ""gamma"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.cxx:421,configurat,configuration,421,roofit/roofitcore/src/RooAbsTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a test statistic, and optimise its calculation.; /// \param[in] name Name of the instance.; /// \param[in] title Title (for e.g. plotting).; /// \param[in] real Function to evaluate.; /// \param[in] indata Dataset for which to compute test statistic.; /// \param[in] projDeps A set of projected observables.; /// \param[in] cfg the statistic configuration; ///; /// cfg contains:; /// - rangeName If not null, only events in the dataset inside the range will be used in the test; /// statistic calculation.; /// - addCoefRangeName If not null, all RooAddPdf components of `real` will be; /// instructed to fix their fraction definitions to the given named range.; /// - nCPU If > 1, the test statistic calculation will be parallelised over multiple processes. By default, the data; /// is split with 'bulk' partitioning (each process calculates a contiguous block of fraction 1/nCPU; /// of the data). For binned data, this approach may be suboptimal as the number of bins with >0 entries; /// in each processing block may vary greatly; thereby distributing the workload rather unevenly.; /// - interleave Strategy how to distribute events among workers. If an interleave partitioning strategy is used where each partition; /// i takes all bins for which (ibin % ncpu == i), an even distribution of work is more likely.; /// - splitCutRange If true, a different rangeName constructed as `rangeName_{catName}` will be used; /// as range definition for each index state of a RooSimultaneous.; /// - cloneInputData Not used. Data is always cloned.; /// - integrateOverBinsPrecision If > 0, PDF in binned fits are integrated over the bins. This sets the precision. If = 0,; /// only unbinned PDFs fit to RooDataHist are integrated. If < 0, PDFs are never integrated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx:435,configurat,configuration,435,roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,5,"['configurat', 'integrat']","['configuration', 'integrateOverBinsPrecision', 'integrated']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create a uniform binning under name 'name' for this variable.; /// \param[in] nBins Number of bins. The limits are taken from the currently set limits.; /// \param[in] name Optional name. If name is null, install as default binning.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:291,install,install,291,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['install'],['install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create an object that represents the integral of the function over one or more observables listed in `iset`.; /// The actual integration calculation is only performed when the return object is evaluated. The name; /// of the integral object is automatically constructed from the name of the input function, the variables; /// it integrates and the range integrates over; ///; /// The following named arguments are accepted; /// | Type of CmdArg | Effect on CDF; /// | ---------------------|-------------------; /// | SupNormSet(const RooArgSet&) | Observables over which should be normalized _in addition_ to the integration observables; /// | ScanNumCdf() | Apply scanning technique if cdf integral involves numeric integration [ default ]; /// | ScanAllCdf() | Always apply scanning technique; /// | ScanNoCdf() | Never apply scanning technique; /// | ScanParameters(Int_t nbins, Int_t intOrder) | Parameters for scanning technique of making CDF: number of sampled bins and order of interpolation applied on numeric cdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:211,integrat,integration,211,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,5,['integrat'],"['integrates', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create an object that represents the integral of the function over one or more observables listed in `iset`.; /// The actual integration calculation is only performed when the returned object is evaluated. The name; /// of the integral object is automatically constructed from the name of the input function, the variables; /// it integrates and the range integrates over.; ///; /// \note The integral over a PDF is usually not normalised (*i.e.*, it is usually not; /// 1 when integrating the PDF over the full range). In fact, this integral is used *to compute*; /// the normalisation of each PDF. See the [rf110 tutorial](group__tutorial__roofit.html); /// for details on PDF normalisation.; ///; /// The following named arguments are accepted; /// | | Effect on integral creation; /// |--|-------------------------------; /// | `NormSet(const RooArgSet&)` | Specify normalization set, mostly useful when working with PDFs; /// | `NumIntConfig(const RooNumIntConfig&)` | Use given configuration for any numeric integration, if necessary; /// | `Range(const char* name)` | Integrate only over given range. Multiple ranges may be specified by passing multiple Range() arguments",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:211,integrat,integration,211,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,7,"['Integrat', 'configurat', 'integrat']","['Integrate', 'configuration', 'integrates', 'integrating', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create an object that represents the integral of the function over one or more observables listed in iset.; /// The actual integration calculation is only performed when the return object is evaluated. The name; /// of the integral object is automatically constructed from the name of the input function, the variables; /// it integrates and the range integrates over. If nset is specified the integrand is request; /// to be normalized over nset (only meaningful when the integrand is a pdf). If rangename is specified; /// the integral is performed over the named range, otherwise it is performed over the domain of each; /// integrated observable. If cfg is specified it will be used to configure any numeric integration; /// aspect of the integral. It will not force the integral to be performed numerically, which is; /// decided automatically by RooRealIntegral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:209,integrat,integration,209,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,5,['integrat'],"['integrated', 'integrates', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create an object that represents the running integral of the function over one or more observables listed in iset, i.e.; /// \f[; /// \int_{x_\mathrm{lo}}^x f(x') \, \mathrm{d}x'; /// \f]; ///; /// The actual integration calculation is only performed when the return object is evaluated. The name; /// of the integral object is automatically constructed from the name of the input function, the variables; /// it integrates and the range integrates over. The default strategy to calculate the running integrals is; ///; /// - If the integrand (this object) supports analytical integration, construct an integral object; /// that calculate the running integrals value by calculating the analytical integral each; /// time the running integral object is evaluated; ///; /// - If the integrand (this object) requires numeric integration to construct the running integral; /// create an object of class RooNumRunningInt which first samples the entire function and integrates; /// the sampled function numerically. This method has superior performance as there is no need to; /// perform a full (numeric) integration for each evaluation of the running integral object, but; /// only when one of its parameters has changed.; ///; /// The choice of strategy can be changed with the ScanAll() argument, which forces the use of the; /// scanning technique implemented in RooNumRunningInt for all use cases, and with the ScanNone(); /// argument which forces the 'integrate each evaluation' technique for all use cases. The sampling; /// granularity for the scanning technique can be controlled with the ScanParameters technique; /// which allows to specify the number of samples to be taken, and to which order the resulting; /// running integral should be interpolated. The default values are 1000 samples and 2nd order; /// interpolation.; ///; /// The following named arguments are accepted; /// | | Effect on integral cr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:295,integrat,integration,295,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,6,['integrat'],"['integrates', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Create tracking medium; ///; /// - numed tracking medium number assigned; /// - name tracking medium name; /// - nmat material number; /// - isvol sensitive volume flag; /// - ifield magnetic field; /// - fieldm max. field value (kilogauss); /// - tmaxfd max. angle due to field (deg/step); /// - stemax max. step allowed; /// - deemax max. fraction of energy lost in a step; /// - epsil tracking precision (cm); /// - stmin min. step due to continuous processes (cm); ///; /// - ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; /// - ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking; /// performed with g3helix; ifield = 3 if tracking performed with g3helx3.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx:528,continuous,continuous,528,geom/geom/src/TGeoBuilder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx,2,['continuous'],['continuous']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Creates TProfiles of the difference of the MLP output minus the; /// true value vs the true value, one for each output, filled with the; /// test data events. This method is mainly useful when doing regression; /// analysis with the MLP (i.e. not classification, but continuous truth; /// values).; /// The returned THStack contains all the TProfiles. It is drawn unless; /// the option ""goff"" is specified.; /// Options are passed to TProfile::Draw.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMLPAnalyzer.cxx:353,continuous,continuous,353,math/mlp/src/TMLPAnalyzer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMLPAnalyzer.cxx,1,['continuous'],['continuous']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Creates embedded civetweb server; ///; /// @param args string with civetweb server configuration; ///; /// As main argument, http port should be specified like ""8090"".; /// Or one can provide combination of ipaddress and portnumber like ""127.0.0.1:8090""; /// Or one can specify unix socket name like ""x/tmp/root.socket""; /// Extra parameters like in URL string could be specified after '?' mark:; ///; /// thrds=N - there N is number of threads used by the civetweb (default is 10); /// top=name - configure top name, visible in the web browser; /// ssl_certificate=filename - SSL certificate, see docs/OpenSSL.md from civetweb; /// auth_file=filename - authentication file name, created with htdigets utility; /// auth_domain=domain - authentication domain; /// websocket_timeout=tm - set web sockets timeout in seconds (default 300); /// websocket_disable - disable web sockets handling (default enabled); /// bind - ip address to bind server socket; /// loopback - bind specified port to loopback 127.0.0.1 address; /// debug - enable debug mode, server always returns html page with request info; /// log=filename - configure civetweb log file; /// max_age=value - configures ""Cache-Control: max_age=value"" http header for all file-related requests, default 3600; /// socket_mode=value - configures unix socket mode, default is 0700; /// nocache - try to fully disable cache control for file requests; /// winsymlinks=no - do not resolve symbolic links on file system (Windows only), default true; /// dirlisting=no - enable/disable directory listing for browsing filesystem (default no); ///; /// Examples of valid args values:; ///; /// serv->CreateEngine(""http:8080?websocket_disable"");; /// serv->CreateEngine(""http:7546?thrds=30&websocket_timeout=20"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.cxx:169,configurat,configuration,169,net/http/src/TCivetweb.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Creates initial tables in database; /// This is table with configurations and table with keys; /// Function called once when first object is stored to the file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:145,configurat,configurations,145,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['configurat'],['configurations']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Creates the Jupyter notebook configuration file that sets the; /// necessary environment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/src/nbmain.cxx:115,configurat,configuration,115,main/src/nbmain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/src/nbmain.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a RooRealIntegral to more intuitively reflect the contents of the; /// integration operation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:193,integrat,integration,193,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,2,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Declare that we handle all integrations internally",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:113,integrat,integrations,113,roofit/roofitcore/src/RooProduct.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx,1,['integrat'],['integrations']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Decode analytical integration/generation code into index map of integrated/generated (map2); /// and non-integrated/generated observables (map1)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:104,integrat,integration,104,roofit/roofitcore/src/RooMultiVarGaussian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx,3,['integrat'],"['integrated', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Default TDataType ctor. TDataTypes are constructed in TROOT via; /// a call to TCling::UpdateListOfTypes().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx:173,Update,UpdateListOfTypes,173,core/meta/src/TDataType.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx,1,['Update'],['UpdateListOfTypes']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Default TFunction ctor. TFunctions are constructed in TROOT via; /// a call to TCling::UpdateListOfGlobalFunctions().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:173,Update,UpdateListOfGlobalFunctions,173,core/meta/src/TFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx,1,['Update'],['UpdateListOfGlobalFunctions']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Default implementation of function advertising integration capabilities. The interface is; /// similar to that of getAnalyticalIntegral except that an integer code is added that; /// designates the coefficient number for which the integration capabilities are requested; ///; /// This default implementation advertises that no internal integrals are supported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:133,integrat,integration,133,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,2,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Default implementation of function implementing advertised integrals. Only; /// the pass-through scenario (no integration) is implemented.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:196,integrat,integration,196,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Defines usage of transactions statements for writing objects data to database.; /// | Index | Description |; /// |-------|-------------|; /// | kTransactionsOff=0 - no transaction operation are allowed |; /// | kTransactionsAuto=1 - automatic mode. Each write operation, produced by TSQLFile, will be supplied by START; /// TRANSACTION and COMMIT calls. If any error happen, ROLLBACK will returns database to previous state |; /// | kTransactionsUser=2 - transactions are delegated to user. Methods StartTransaction(), Commit() and Rollback(); /// should be called by user. |; ///; /// Default UseTransactions option is kTransactionsAuto",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:461,ROLLBACK,ROLLBACK,461,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,2,"['ROLLBACK', 'Rollback']","['ROLLBACK', 'Rollback']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Delete selected session configuration (remove it from the list).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:110,configurat,configuration,110,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Deletes togglegroup but does not disposes toggled objects!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:94,toggle,togglegroup,94,core/gui/src/TToggleGroup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx,2,['toggle'],"['toggled', 'togglegroup']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Deprecated (will be removed in next release).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:122,release,release,122,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['release'],['release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Destructor. Releases the lock.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TLockFile.cxx:98,Release,Releases,98,io/io/src/TLockFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TLockFile.cxx,1,['Release'],['Releases']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Detach from terminal, set the old configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:120,configurat,configuration,120,core/textinput/src/textinput/StreamReaderUnix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Determine integration scenario. If no interpolation is used,; /// RooHistFunc can perform all integrals over its dependents; /// analytically via partial or complete summation of the input; /// histogram. If interpolation is used, only the integral; /// over all RooHistPdf observables is implemented.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:96,integrat,integration,96,roofit/roofitcore/src/RooHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Determine integration scenario. If no interpolation is used,; /// RooHistPdf can perform all integrals over its dependents; /// analytically via partial or complete summation of the input; /// histogram. If interpolation is used on the integral over; /// all histogram observables is supported",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:96,integrat,integration,96,roofit/roofitcore/src/RooHistPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:188,integrat,integration,188,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,9,['integrat'],"['integrate', 'integrated', 'integrating', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code; ///; /// RooAddPdf queries each component PDF for its analytical integration capability of the requested; /// set ('allVars'). It finds the largest common set of variables that can be integrated; /// by all components. If such a set exists, it reconfirms that each component is capable of; /// analytically integrating the common set, and combines the components individual integration; /// codes into a single integration code valid for RooAddPdf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:188,integrat,integration,188,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,7,['integrat'],"['integrated', 'integrating', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Direct access to the unique_ptr holding the integrator that's used to sample the bins.; /// This can be used to change options such as sampling accuracy or to entirely exchange the integrator.; ///; /// #### Example: Use the 61-point Gauss-Kronrod integration rule; /// ```{.cpp}; /// ROOT::Math::IntegratorOneDimOptions intOptions = pdf.integrator()->Options();; /// intOptions.SetNPoints(6); // 61-point integration rule; /// intOptions.SetRelTolerance(1.E-9); // Smaller tolerance -> more subdivisions; /// pdf.integrator()->SetOptions(intOptions);; /// ```; /// \see ROOT::Math::IntegratorOneDim::SetOptions for more details on integration options.; /// \note When RooBinSamplingPdf is loaded from files, integrator options will fall back to the default values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:130,integrat,integrator,130,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,10,"['Integrat', 'integrat']","['IntegratorOneDim', 'IntegratorOneDimOptions', 'integration', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Disconnect every widget entry of the editor from its slot. Must be; /// called before UpdateEditor() to avoid recursive calls.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:172,Update,UpdateEditor,172,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['Update'],['UpdateEditor']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Draw this histogram with options.; ///; /// Histograms are drawn via the THistPainter class. Each histogram has; /// a pointer to its own painter (to be usable in a multithreaded program).; /// The same histogram can be drawn with different options in different pads.; /// When a histogram drawn in a pad is deleted, the histogram is; /// automatically removed from the pad or pads where it was drawn.; /// If a histogram is drawn in a pad, then filled again, the new status; /// of the histogram will be automatically shown in the pad next time; /// the pad is updated. One does not need to redraw the histogram.; /// To draw the current version of a histogram in a pad, one can use; /// `h->DrawCopy();`; /// This makes a clone of the histogram. Once the clone is drawn, the original; /// histogram may be modified or deleted without affecting the aspect of the; /// clone.; /// By default, TH1::Draw clears the current pad.; ///; /// One can use TH1::SetMaximum and TH1::SetMinimum to force a particular; /// value for the maximum or the minimum scale on the plot.; ///; /// TH1::UseCurrentStyle can be used to change all histogram graphics; /// attributes to correspond to the current selected style.; /// This function must be called for each histogram.; /// In case one reads and draws many histograms from a file, one can force; /// the histograms to inherit automatically the current graphics style; /// by calling before gROOT->ForceStyle();; ///; /// See the THistPainter class for a description of all the drawing options.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:648,update,updated,648,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Element was changed. Update editors showing it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGedEditor.cxx:107,Update,Update,107,graf3d/eve/src/TEveGedEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGedEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Entry point for hierarchical transformation update.; /// Calls the recursive variant on all children.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveScene.cxx:130,update,update,130,graf3d/eve/src/TEveScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveScene.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Entry point for requesting update of scene's contents from; /// gl-viewer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScenePad.cxx:113,update,update,113,graf3d/gl/src/TGLScenePad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScenePad.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate the integral using a fixed number of calls to evaluate the integrand; /// equal to about 10k per dimension. Use the first 5k calls to refine the grid; /// over 5 iterations of 1k calls each, and the remaining 5k calls for a single; /// high statistics integration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:347,integrat,integration,347,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Execute a macro in the interpreter. Equivalent to the command line; /// command "".x filename"". If the filename has ""+"" or ""++"" appended; /// the macro will be compiled by ACLiC. The filename must have the format:; /// [path/]macro.C[+|++[g|O]][(args)].; /// The possible error codes are defined by TInterpreter::EErrorCode.; /// If padUpdate is true (default) update the current pad.; /// Returns the macro return value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:446,update,update,446,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event for a TAxis object; /// (called by TAxis::ExecuteEvent.); /// This member function is called when an axis is clicked with the locator; ///; /// The axis range is set between the position where the mouse is pressed; /// and the position where it is released.; ///; /// If the mouse position is outside the current axis range when it is released; /// the axis is unzoomed with the corresponding proportions.; ///; /// Note that the mouse does not need to be in the pad or even canvas; /// when it is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:376,release,released,376,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,3,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event.; /// This member function is called when a line is clicked with the locator; ///; /// If Left button clicked on one of the line end points, this point; /// follows the cursor until button is released.; ///; /// if Middle button clicked, the line is moved parallel to itself; /// until the button is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLine.cxx:320,release,released,320,graf2d/graf/src/TLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLine.cxx,2,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event.; ///; /// This member function is called when a TCurlyArc is clicked with the locator; ///; /// If Left button clicked on one of the line end points, this point; /// follows the cursor until button is released.; ///; /// if Middle button clicked, the line is moved parallel to itself; /// until the button is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCurlyArc.cxx:330,release,released,330,graf2d/graf/src/TCurlyArc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCurlyArc.cxx,2,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event.; ///; /// This member function is called when a TCurlyLine is clicked with the locator; ///; /// If Left button clicked on one of the line end points, this point; /// follows the cursor until button is released.; ///; /// if Middle button clicked, the line is moved parallel to itself; /// until the button is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCurlyLine.cxx:331,release,released,331,graf2d/graf/src/TCurlyLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCurlyLine.cxx,2,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event.; ///; /// This member function is called when a graph is clicked with the locator.; ///; /// If the left mouse button is clicked on one of the line end points, this point; /// follows the cursor until button is released.; ///; /// If the middle mouse button clicked, the line is moved parallel to itself; /// until the button is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:340,release,released,340,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,2,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event.; ///; /// This member function is called when a graph is clicked with the locator; ///; /// If Left button clicked on one of the line end points, this point; /// follows the cursor until button is released.; ///; /// if Middle button clicked, the line is moved parallel to itself; /// until the button is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:326,release,released,326,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,4,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event.; ///; /// This member function is called when a histogram is clicked with the locator; ///; /// If Left button clicked on the bin top value, then the content of this bin; /// is modified according to the new position of the mouse when it is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:370,release,released,370,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event.; ///; /// This member function is called when a line is clicked with the locator; ///; /// If Left button clicked on one of the line end points, this point; /// follows the cursor until button is released.; ///; /// if Middle button clicked, the line is moved parallel to itself; /// until the button is released.; ///; /// NOTE that support for log scale is not implemented",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TEllipse.cxx:325,release,released,325,graf2d/graf/src/TEllipse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TEllipse.cxx,2,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event.; ///; /// This member function is called when a marker is clicked with the locator; ///; /// If Left button is clicked on a marker, the marker is moved to; /// a new position when the mouse button is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TMarker.cxx:329,release,released,329,graf2d/graf/src/TMarker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TMarker.cxx,1,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event.; ///; /// This member function is called when a polyline is clicked with the locator; ///; /// If Left button clicked on one of the line end points, this point; /// follows the cursor until button is released.; ///; /// if Middle button clicked, the line is moved parallel to itself; /// until the button is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPolyLine.cxx:329,release,released,329,graf2d/graf/src/TPolyLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPolyLine.cxx,2,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event.; ///; /// This member function is called when the drawn class is clicked with the locator; /// If Left button clicked on one of the line end points, this point; /// follows the cursor until button is released.; ///; /// if Middle button clicked, the line is moved parallel to itself; /// until the button is released.; /// Forward the call to the underlying graph",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:329,release,released,329,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,2,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event; ///; /// This member function is called when an axis is clicked with the locator.; /// The axis range is set between the position where the mouse is pressed; /// and the position where it is released.; /// If the mouse position is outside the current axis range when it is released; /// the axis is unzoomed with the corresponding proportions.; /// Note that the mouse does not need to be in the pad or even canvas; /// when it is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx:320,release,released,320,hist/hist/src/TAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx,3,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Exit scene update mode.; ///; /// If sceneChanged is true (default), the scene timestamp is; /// increased and basic draw-lists etc will be rebuild on next draw; /// request. If you only changed colors or some other visual; /// parameters that do not affect object bounding-box or; /// transformation matrix, you can set it to false.; ///; /// If updateViewers is true (default), the viewers using this scene; /// will be tagged as changed. If sceneChanged is true the; /// updateViewers should be true as well, unless you take care of; /// the viewers elsewhere or in some other way.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx:97,update,update,97,graf3d/gl/src/TGLScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx,3,['update'],"['update', 'updateViewers']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Extract the name of the tree from the first input file when the tree name; /// isn't in the configuration file. Returns the name of the tree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:178,configurat,configuration,178,tree/treeplayer/src/TSimpleAnalysis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Extract the proper autoload key for nested classes; /// The routine does not erase the name, just updates it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:184,update,updates,184,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Factorize product in irreducible terms for given choice of integration/normalization",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:145,integrat,integration,145,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Feedback function connected to Feedback signal.; /// Used to update feedback histograms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:147,update,update,147,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Fill histogram following distribution in function fname.; ///; /// @param fname : Function name used for filling the histogram; /// @param ntimes : number of times the histogram is filled; /// @param rng : (optional) Random number generator used to sample; ///; /// The distribution contained in the function fname (TF2) is integrated; /// over the channel contents.; /// It is normalized to 1.; /// Getting one random number implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which bin in the normalized integral r1 corresponds to; /// - Fill histogram channel; /// ntimes random numbers are generated; ///; /// One can also call TF2::GetRandom2 to get a random variate from a function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:410,integrat,integrated,410,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Fill histogram following distribution in function fname.; ///; /// @param fname : Function name used for filling the histogram; /// @param ntimes : number of times the histogram is filled; /// @param rng : (optional) Random number generator used to sample; ///; ///; /// The distribution contained in the function fname (TF1) is integrated; /// over the channel contents for the bin range of this histogram.; /// It is normalized to 1.; ///; /// Getting one random number implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which bin in the normalized integral r1 corresponds to; /// - Fill histogram channel; /// ntimes random numbers are generated; ///; /// One can also call TF1::GetRandom to get a random variate from a function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:415,integrat,integrated,415,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Fill histogram following distribution in function fname.; ///; /// @param fname : Function name used for filling the historam; /// @param ntimes : number of times the histogram is filled; /// @param rng : (optional) Random number generator used to sample; ///; /// The distribution contained in the function fname (TF1) is integrated; /// over the channel contents.; /// It is normalized to 1.; /// Getting one random number implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which bin in the normalized integral r1 corresponds to; /// - Fill histogram channel; /// ntimes random numbers are generated; ///; /// N.B. By dfault this methods approximates the integral of the function in each bin with the; /// function value at the center of the bin, mutiplied by the bin width; ///; /// One can also call TF1::GetRandom to get a random variate from a function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:409,integrat,integrated,409,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Fill histogram following distribution in histogram h.; ///; /// @param h : Histogram pointer used for sampling random number; /// @param ntimes : number of times the histogram is filled; /// @param rng : (optional) Random number generator used for sampling; ///; /// The distribution contained in the histogram h (TH1) is integrated; /// over the channel contents for the bin range of this histogram.; /// It is normalized to 1.; ///; /// Getting one random number implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which bin in the normalized integral r1 corresponds to; /// - Fill histogram channel ntimes random numbers are generated; ///; /// SPECIAL CASE when the target histogram has the same binning as the source.; /// in this case we simply use a poisson distribution where; /// the mean value per bin = bincontent/integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:408,integrat,integrated,408,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Fill histogram following distribution in histogram h.; ///; /// @param h : Histogram pointer used for sampling random number; /// @param ntimes : number of times the histogram is filled; /// @param rng : (optional) Random number generator used for sampling; ///; /// The distribution contained in the histogram h (TH2) is integrated; /// over the channel contents.; /// It is normalized to 1.; /// Getting one random number implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which bin in the normalized integral r1 corresponds to; /// - Fill histogram channel; /// ntimes random numbers are generated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:408,integrat,integrated,408,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Fill histogram following distribution in histogram h.; ///; /// @param h : Histogram pointer used for smpling random number; /// @param ntimes : number of times the histogram is filled; /// @param rng : (optional) Random number generator used for sampling; ///; /// The distribution contained in the histogram h (TH3) is integrated; /// over the channel contents.; /// It is normalized to 1.; /// Getting one random number implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which bin in the normalized integral r1 corresponds to; /// - Fill histogram channel; /// ntimes random numbers are generated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:407,integrat,integrated,407,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Fill scene-info with information needed for rendering, take into; /// account the render-context (viewer state, camera, clipping).; /// Usually called from TGLViewer before rendering a scene if some; /// moderately significant part of render-context has changed.; ///; /// Here we update the basic state (clear last-LOD, mark the time,; /// set global <-> scene transformation matrices) and potentially; /// study and refine the clipping planes based on scene bounding box.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneBase.cxx:367,update,update,367,graf3d/gl/src/TGLSceneBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneBase.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Fill the ROOT histogram 'hist' with values sampled from this; /// function at the bin centers. Our value is calculated by first; /// integrating out any variables in projectedVars and then scaling; /// the result by scaleFactor. Returns a pointer to the input; /// histogram, or zero in case of an error. The input histogram can; /// be any TH1 subclass, and therefore of arbitrary; /// dimension. Variables are matched with the (x,y,...) dimensions of; /// the input histogram according to the order in which they appear; /// in the input plotVars list. If scaleForDensity is true the; /// histogram is filled with a the functions density rather than; /// the functions value (i.e. the value at the bin center is multiplied; /// with bin volume)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:219,integrat,integrating,219,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrating']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Final update of the progress dialog",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:92,update,update,92,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Find a dynamic library using the system search paths. lib will be updated; /// to contain the absolute filename if found. Returns lib if found, or NULL; /// if a library called lib was not found.; /// This function does not open the library.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:152,update,updated,152,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Find zero of a continuous function.; /// This function finds a real zero of the continuous real; /// function Y(X) in a given interval (A,B). See accompanying; /// notes for details of the argument list and calling sequence",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:101,continuous,continuous,101,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,2,['continuous'],['continuous']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Force RooRealIntegral to offer all observables for internal integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:146,integrat,integration,146,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Force RooRealIntegral to offer all our actual observable for internal; /// integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx:161,integrat,integration,161,roofit/roofitcore/src/RooAbsCachedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Force RooRealIntegral to relegate integration of all observables to internal logic",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:120,integrat,integration,120,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Force analytical integration for the given observable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:103,integrat,integration,103,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Force canvas update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:99,update,update,99,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Force internal handling of integration of given observable if any; /// of the product terms depend on it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:113,integrat,integration,113,roofit/roofitcore/src/RooProduct.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Force the current pad to be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx:114,update,updated,114,graf3d/g3d/src/TView3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Forward determination of analytical integration capabilities to component p.d.f.s; /// A unique code is assigned to the combined integration capabilities of all associated; /// p.d.f.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:122,integrat,integration,122,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,2,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Function that allows to create the TSimpleAnalysis object and execute its; /// Configure and Analyze functions.; ///; /// param[in] configurationFile - name of the input file used to create the TSimpleAnalysis object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:218,configurat,configurationFile,218,tree/treeplayer/src/TSimpleAnalysis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx,1,['configurat'],['configurationFile']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// General purpose call to go through the existing datasets.; /// If `<user>` is 0 or ""*"", act on all datasets for the given `<group>`.; /// If `<group>` is 0 or ""*"", act on all datasets.; /// If `<dsName>` is defined, only the information about the specified dataset; /// is processed.; /// Action depends on option; available options:; ///; /// kExport Return a TMap object containing all the information about; /// datasets in the form:; /// { `<group>`, `<map of users>` }; /// |; /// { `<map of datasets>`, `<dataset>`}; /// (`<dataset>` are TFileCollection objects); /// kShowDefault as kExport with in addition a default selection including; /// the datasets from the current user, the ones from the group; /// and the common ones; ///; /// kPrint print the dataset content; no output is returned; /// kList get a list of available dataset names; /// kForceScan Re-open files while processing kPrint (do not use the; /// pre-processed information); /// kNoHeaderPrint Labelling header is not printed; /// kQuotaUpdate update {group, user} quotas; no output is returned; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:1108,update,update,1108,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Generate a single event with configuration specified by 'code'; /// Defer internal generation to components as encoded in the _genCode; /// registry for given generator code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:115,configurat,configuration,115,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get a copy of the framework extension pointer. The user must call Release() on; /// the copy pointer once this pointer is not needed anymore (equivalent to; /// delete() after calling new())",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:152,Release,Release,152,geom/geom/src/TGeoMaterial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx,3,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get a copy of the user extension pointer. The user must call Release() on; /// the copy pointer once this pointer is not needed anymore (equivalent to; /// delete() after calling new())",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:147,Release,Release,147,geom/geom/src/TGeoMaterial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx,3,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the binary directory in the installation. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:118,install,installation,118,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the data directory in the installation. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:116,install,installation,116,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the documentation directory in the installation. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:125,install,installation,125,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the fonts directory in the installation. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:117,install,installation,117,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the icon path in the installation. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:111,install,installation,111,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the include directory in the installation. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:119,install,installation,119,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the library directory in the installation. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:119,install,installation,119,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the macro directory in the installation. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:117,install,installation,117,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the rootsys directory in the installation. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:119,install,installation,119,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the shared libraries directory in the installation. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:128,install,installation,128,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the source directory in the installation. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:118,install,installation,118,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the sysconfig directory in the installation. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:121,install,installation,121,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the tutorials directory in the installation. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:121,install,installation,121,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Get the tutorials directory in the installation. Static utility function.; /// Backward compatibility function - do not use for new code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:121,install,installation,121,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Given the selection end-points in fSelBegin and fSelEnd, recompute; /// pSelBeginBlock and fPSelEndBlock, then call UpdateSelectionDisplay(); /// to update the display.; ///; /// This routine should be called whenever the selection changes or; /// whenever the set of TGHtmlBlock structures change.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:202,Update,UpdateSelectionDisplay,202,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,2,"['Update', 'update']","['UpdateSelectionDisplay', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Global function to update the version number.; /// This is called via the RootClassVersion macro.; ///; /// if cl!=0 and cname==-1, set the new class version if and only is; /// greater than the existing one and greater or equal to 2;; /// and also ignore the request if fVersionUsed is true.; ///; /// Note on class version number:; /// - If no class has been specified, TClass::GetVersion will return -1; /// - The Class Version 0 request the whole object to be transient; /// - The Class Version 1, unless specify via ClassDef indicates that the; /// I/O should use the TClass checksum to distinguish the layout of the class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:105,update,update,105,core/cont/src/TClassTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Global switch to cache all integral values that integrate at least ndim dimensions numerically",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:134,integrat,integrate,134,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integrate']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Go one level up in geometry. Updates cache accordingly.; /// Determine the overlapping state of current node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:115,Update,Updates,115,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,2,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Go through the files in the specified dataset, selecting files according to; /// 'fopt' and doing on these files the actions described by 'sopt'.; /// If required, the information in 'dataset' is updated.; ///; /// The int fopt controls which files have to be processed (or added to the list; /// if ropt is 1 - see below); 'fopt' is defined in term of csopt and fsopt:; /// fopt = sign(fsopt) * csopt * 100 + fsopt; /// where 'fsopt' controls the actual selection; /// -1 all files in the dataset; /// 0 process only files marked as 'non-staged'; /// >=1 as 0 but files that are marked 'staged' are open; /// >=2 as 1 but files that are marked 'staged' are touched; /// 10 process only files marked as 'staged'; files marked as 'non-staged'; /// are ignored; /// and 'csopt' controls if an actual check on the staged status (via TFileStager) is done; /// 0 check that the file is staged using TFileStager; /// 1 do not hard check the staged status; /// (example: use fopt = -101 to check the staged status of all the files, or fopt = 110; /// to re-check the stage status of all the files marked as staged); ///; /// If 'dbg' is true, some information about the ongoing operations is reguraly; /// printed; this can be useful when processing very large datasets, an operation; /// which can take a very long time.; ///; /// The int 'sopt' controls what is done on the selected files (this is effective only; /// if ropt is 0 or 2 - see below):; /// -1 no action (fopt = 2 and sopt = -1 touches all staged files); /// 0 do the full process: open the files and fill the meta-information; /// in the TFileInfo object, including the end-point URL; /// 1 only locate the files, by updating the end-point URL (uses TFileStager::Locate; /// which is must faster of an TFile::Open); /// 2 issue a stage request on the files; ///; /// The int 'ropt' controls which actions are performed:; /// 0 do the full process: get lis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:282,update,updated,282,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Group observables into subsets in which the product factorizes; /// and that can thus be integrated separately",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:175,integrat,integrated,175,roofit/roofitcore/src/RooProduct.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Handle button release event",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx:100,release,release,100,gui/guibuilder/src/TGuiBldDragManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx,1,['release'],['release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Handle feedback histograms configuration menu.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:113,configurat,configuration,113,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Handle keep toggle button.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx:98,toggle,toggle,98,gui/sessionviewer/src/TProofProgressDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx,1,['toggle'],['toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Handle log-current-query-only toggle button.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx:116,toggle,toggle,116,gui/sessionviewer/src/TProofProgressDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx,1,['toggle'],['toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Handle old file formats.; ///; /// Files written with versions older than 3.00/06 had a non-portable; /// implementation of Long_t/ULong_t. These types should not have been; /// used at all. However, because some users had already written many; /// files with these types we provide this dirty patch for ""backward; /// compatibility""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:380,patch,patch,380,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['patch'],['patch']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Handle the expression lines of the input file in order to pass the; /// elements to the members of the object.; ///; /// param[in] line - TTreeFormula expression, either read form the configuration; /// file or passed as expression to the constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:270,configurat,configuration,270,tree/treeplayer/src/TSimpleAnalysis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Helper for GetNativeFont() and GetFontFromAttributes(). Creates and; /// initializes a new TGFont object.; ///; /// font -- If non-NULL, store the information in this existing TGFont; /// object, rather than creating a new one; the existing; /// contents of the font will be released. If NULL, a new; /// TGFont object is created.; /// fontStruct -- information about font.; /// fontName -- The string passed to TVirtualX::LoadQueryFont() to construct the; /// fontStruct.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx:361,release,released,361,gui/gui/src/TGFont.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx,1,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// If RooArgSets set1 and set2 or sets with similar contents have; /// been seen by this cache manager before return `false` If not,; /// return `true`. If sets have not been seen and doRefill is true,; /// update cache reference to current input sets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:290,update,update,290,roofit/roofitcore/src/RooNormSetCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// If true, the pad is updated while the motion of a dragged range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:106,update,updated,106,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,2,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by deferring integration of component; /// functions to integrators of components.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:107,integrat,integrations,107,roofit/roofitcore/src/RooRealSumPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx,3,['integrat'],"['integration', 'integrations', 'integrators']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by doing appropriate weighting from component integrals; /// functions to integrators of components",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:107,integrat,integrations,107,roofit/histfactory/src/ParamHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx,6,['integrat'],"['integrations', 'integrators']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Implements internal (analytical) integration capabilities. Call; /// is forwarded to RooHistPdf cache p.d.f of cache that is used for; /// given choice of observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx:119,integrat,integration,119,roofit/roofitcore/src/RooAbsCachedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Implements one parameter definition; ///; /// Called from MNPARS and user-callable; /// Implements one parameter definition, that is:; /// - K (external) parameter number; /// - CNAMK parameter name; /// - UK starting value; /// - WK starting step size or uncertainty; /// - A, B lower and upper physical parameter limits; /// and sets up (updates) the parameter lists.; /// Output:; /// - IERFLG=0 if no problems; /// - >0 if MNPARM unable to implement definition",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:426,update,updates,426,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Import code of class 'tc' into the repository. If code is already in repository it is only imported; /// again if doReplace is false. The names and location of the source files is determined from the information; /// in TClass. If no location is found in the TClass information, the files are searched in the workspace; /// search path, defined by addClassDeclImportDir() and addClassImplImportDir() for declaration and implementation; /// files respectively. If files cannot be found, abort with error status, otherwise update the internal; /// class-to-file map and import the contents of the files, if they are not imported yet.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:607,update,update,607,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize RooProdPdf configuration from given list of RooCmdArg configuration arguments; /// and set of 'regular' p.d.f.s in product",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:108,configurat,configuration,108,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,2,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize bin content integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:109,integrat,integrator,109,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,1,['integrat'],['integrator']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize integrator allocate buffers and setup GSL workspace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:97,integrat,integrator,97,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['integrat'],['integrator']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:101,integrat,integrator,101,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,1,['integrat'],['integrator']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the integrator, construct and initialize subintegrators",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:101,integrat,integrator,101,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,1,['integrat'],['integrator']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Initializes it to toggle an object's datamember using this object's; /// method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:104,toggle,toggle,104,core/gui/src/TToggle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx,1,['toggle'],['toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Initializes object for use with a variable - you pass it via reference; /// so it will be modified by Toggle.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:188,Toggle,Toggle,188,core/gui/src/TToggle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Insert a new visualization-parameter database entry with the default; /// parameters for replace and update, as specified by members; /// fVizDBReplace(default=kTRUE) and fVizDBUpdate(default=kTRUE).; /// See docs of the above function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveManager.cxx:187,update,update,187,graf3d/eve/src/TEveManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveManager.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Insert a new visualization-parameter database entry. Returns; /// true if the element is inserted successfully.; /// If entry with the same key already exists the behaviour depends on the; /// 'replace' flag:; /// - true - The old model is deleted and new one is inserted (default).; /// Clients of the old model are transferred to the new one and; /// if 'update' flag is true (default), the new model's parameters; /// are assigned to all clients.; /// - false - The old model is kept, false is returned.; ///; /// If insert is successful, the ownership of the model-element is; /// transferred to the manager.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveManager.cxx:443,update,update,443,graf3d/eve/src/TEveManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveManager.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new member streamer (p will be copied).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Install,Install,86,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'Merge'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Install,Install,86,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'ResetAfterMerge'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Install,Install,86,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'delete []'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Install,Install,86,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'delete'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Install,Install,86,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'new []'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Install,Install,86,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'new'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Install,Install,86,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around the destructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Install,Install,86,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around the directory auto add function.; /// The function autoAddFunc has the signature void (*)(void *obj, TDirectory dir); /// and should register 'obj' to the directory if dir is not null; /// and unregister 'obj' from its current directory if dir is null",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:86,Install,Install,86,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install atexit handler that calls CleanupRooFitAtExit(); /// on program termination",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSentinel.cxx:86,Install,Install,86,roofit/roofitcore/src/RooSentinel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSentinel.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install package from par (unpack the file in the directory); par can be an; /// URL for remote retrieval. If rmold is kTRUE an existing version of the package; /// is removed if existing.; /// Returns 0 on success, <0 otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:86,Install,Install,86,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install the given set of observables are reference normalization; /// variables for this frame. These observables are e.g. later used; /// to automatically project out observables when plotting functions; /// on this frame. This function is only effective when called the; /// first time on a frame",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:86,Install,Install,86,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install the input RooArgSet as container in which all cloned branches; /// will be stored",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx:86,Install,Install,86,roofit/roofitcore/src/RooCustomizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx,1,['Install'],['Install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Install the shared property into the member _sharedProp.; /// If a property with same name already exists, discard the incoming one,; /// and share the existing.; /// `nullptr` and properties equal to the RooRealVar::_nullProp will not be installed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:86,Install,Install,86,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,2,"['Install', 'install']","['Install', 'installed']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Installs ROOT notebook files in the user's home directory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/src/nbmain.cxx:86,Install,Installs,86,main/src/nbmain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/src/nbmain.cxx,1,['Install'],['Installs']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Integrate the PDF over all its bins, and return a batch with those values.; /// \param[in,out] evalData Struct with evaluation data.; /// \param[in] normSet Normalisation set that's used to evaluate the PDF.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:86,Integrat,Integrate,86,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['Integrat'],['Integrate']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Integrate the PDF over the current bin of the observable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:86,Integrat,Integrate,86,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['Integrat'],['Integrate']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Integrate the TGraph data within a given (index) range.; /// Note that this function computes the area of the polygon enclosed by the points of the TGraph.; /// The polygon segments, which are defined by the points of the TGraph, do not need to form a closed polygon,; /// since the last polygon segment, which closes the polygon, is taken as the line connecting the last TGraph point; /// with the first one. It is clear that the order of the point is essential in defining the polygon.; /// Also note that the segments should not intersect.; ///; /// NB:; /// - if last=-1 (default) last is set to the last point.; /// - if (first <0) the first point (0) is taken.; ///; /// ### Method:; ///; /// There are many ways to calculate the surface of a polygon. It all depends on what kind of data; /// you have to deal with. The most evident solution would be to divide the polygon in triangles and; /// calculate the surface of them. But this can quickly become complicated as you will have to test; /// every segments of every triangles and check if they are intersecting with a current polygon's; /// segment or if it goes outside the polygon. Many calculations that would lead to many problems...; ///; /// ### The solution (implemented by R.Brun); /// Fortunately for us, there is a simple way to solve this problem, as long as the polygon's; /// segments don't intersect.; /// It takes the x coordinate of the current vertex and multiply it by the y coordinate of the next; /// vertex. Then it subtracts from it the result of the y coordinate of the current vertex multiplied; /// by the x coordinate of the next vertex. Then divide the result by 2 to get the surface/area.; ///; /// ### Sources; /// - http://forums.wolfram.com/mathgroup/archive/1998/Mar/msg00462.html; /// - http://stackoverflow.com/questions/451426/how-do-i-calculate-the-surface-area-of-a-2d-polygon",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:86,Integrat,Integrate,86,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['Integrat'],['Integrate']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Integrate the wrapped PDF using our current integrator, with given norm set and limits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:86,Integrat,Integrate,86,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,2,"['Integrat', 'integrat']","['Integrate', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Intercept a server redirection all and update list of dependents if necessary; /// Specifically update the set proxy 'deps' which introduces the dependency; /// on server value dirty flags of ourselves",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:125,update,update,125,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Intercept calls to perform automatic optimization of cache mode operation.; /// Forward calls to existing cache elements and save configuration of; /// cache mode optimization so that it can be applied on new cache elements; /// upon insertion",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:216,configurat,configuration,216,roofit/roofitcore/src/RooObjCacheManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function getAnalyticalIntergral advertises the; /// analytical integrals that are supported. 'integSet'; /// is the set of dependents for which integration is requested. The; /// function should copy the subset of dependents it can analytically; /// integrate to anaIntSet and return a unique identification code for; /// this integration configuration. If no integration can be; /// performed, zero should be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:240,integrat,integration,240,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,5,"['configurat', 'integrat']","['configuration', 'integrate', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to create an internal cache object that represent; /// each cached function configuration. This interface allows to create and; /// return a class derived from RooAbsCachedReal::FuncCacheElem so that; /// a derived class fillCacheObject implementation can utilize extra functionality; /// defined in such a derived cache class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedReal.cxx:181,configurat,configuration,181,roofit/roofitcore/src/RooAbsCachedReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedReal.cxx,2,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to set limits on integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsIntegrator.cxx:113,integrat,integration,113,roofit/roofitcore/src/RooAbsIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsIntegrator.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Internal function. Actually do the update of the ClassInfo when seeing; // new TagDecl or NamespaceDecl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:121,update,update,121,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Internal method used by Initialize.; ///; /// It explores newly defined cell with help of special short MC sampling.; /// As a result, estimates of true and drive volume is defined/determined; /// Average and dispersion of the weight distribution will is found along; /// each edge and the best edge (minimum dispersion, best maximum weight); /// is memorized for future use.; ///; /// The optimal division point for eventual future cell division is; /// determined/recorded. Recorded are also minimum and maximum weight etc.; /// The volume estimate in all (inactive) parent cells is updated.; /// Note that links to parents and initial volume = 1/2 parent has to be; /// already defined prior to calling this routine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:671,update,updated,671,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; /// and split rules 'sr' to configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:218,configurat,configuration,218,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Internal subprogram used by Create.; /// It divides cell iCell into two daughter cells.; /// The iCell is retained and tagged as inactive, daughter cells are appended; /// at the end of the buffer.; /// New vertex is added to list of vertices.; /// List of active cells is updated, iCell removed, two daughters added; /// and their properties set with help of MC sampling (PDEFoam_Explore); /// Returns Code RC=-1 of buffer limit is reached, fLastCe=fnBuf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:359,update,updated,359,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Internal subprogram used by Create.; /// It explores newly defined cell with help of special short MC sampling.; /// As a result, estimates of kTRUE and drive volume is defined/determined; /// Average and dispersion of the weight distribution will is found along; /// each edge and the best edge (minimum dispersion, best maximum weight); /// is memorized for future use.; /// The optimal division point for eventual future cell division is; /// determined/recorded. Recorded are also minimum and maximum weight etc.; /// The volume estimate in all (inactive) parent cells is updated.; /// Note that links to parents and initial volume = 1/2 parent has to be; /// already defined prior to calling this routine.; ///; /// If fNmin > 0 then the total number of (training) events found in; /// the cell during the exploration is stored in the cell. This; /// information is used within PeekMax() to avoid splitting cells; /// which contain less than fNmin events.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:662,update,updated,662,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Item's check-box state has been toggled ... forward to element's; /// render-state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveBrowser.cxx:118,toggle,toggled,118,graf3d/eve/src/TEveBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveBrowser.cxx,1,['toggle'],['toggled']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Load the specified macro on master, workers and, if notOnClient is; /// kFALSE, on the client. The macro file is uploaded if new or updated.; /// Additional files to be uploaded (or updated, if needed) can be specified; /// after a comma, e.g. ""mymacro.C+,thisheader.h,thatheader.h"".; /// If existing in the same directory, a header basename(macro).h or .hh, is also; /// uploaded.; /// The default is to load the macro also on the client; notOnClient can be used; /// to avoid loading on the client.; /// On masters, if uniqueWorkers is kTRUE, the macro is loaded on unique workers; /// only, and collection is not done; if uniqueWorkers is kFALSE, collection; /// from the previous request is done, and broadcasting + collection from the; /// other workers is done.; /// The wrks arg can be used on the master to limit the set of workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:218,update,updated,218,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Load visualization-parameter database from file filename. The; /// replace, update arguments replace the values of fVizDBReplace; /// and fVizDBUpdate members for the duration of the macro; /// execution.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveManager.cxx:162,update,update,162,graf3d/eve/src/TEveManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveManager.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Loop over all scenes and update them accordingly:; /// 1. if scene is marked as changed, it is repainted;; /// 2. otherwise iteration is done over the set of stamped elements and; /// their physical/logical shapes are updated accordingly.; ///; /// This allows much finer update granularity without resetting of; /// complex GL-viewer and GL-scene state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveScene.cxx:111,update,update,111,graf3d/eve/src/TEveScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveScene.cxx,3,['update'],"['update', 'updated']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Make a daughter of current node current. Can be called only with a valid; /// daughter index (no check). Updates cache accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:191,Update,Updates,191,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,2,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Make a daughter of current node current. Can be called only with a valid; /// daughter node (no check). Updates cache accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:190,Update,Updates,190,geom/geom/src/TGeoNavigator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Make a step from current point along the helix and compute new point, direction and angle; /// To reach a plane/ shape boundary, one has to:; /// 1. Compute the safety to the plane/boundary; /// 2. Define / update a helix according local field and particle state (position, direction, charge); /// 3. Compute the magnetic safety (maximum distance for which the field can be considered constant); /// 4. Call TGeoHelix::Step() having as argument the minimum between 1. and 3.; /// 5. Repeat from 1. until the step to be made is small enough.; /// 6. Add to the total step the distance along a straight line from the last point; /// to the plane/shape boundary",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:293,update,update,293,geom/geom/src/TGeoHelix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Make an instance of the class which allocates the node array. To be; /// released using ReleaseInstance. If addr is non-zero, the user promised that; /// addr contains at least that many bytes: size_t needed = SizeOf(maxlevel);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:159,release,released,159,geom/geom/src/TGeoBranchArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx,4,"['Release', 'release']","['ReleaseInstance', 'released']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Make top level node the current node. Updates the cache accordingly.; /// Determine the overlapping state of current node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:124,Update,Updates,124,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,2,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Mark all requested variables as internally integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:129,integrat,integrated,129,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Mark pad modified; /// Will be repainted when TCanvas::Update() will be called next time",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:141,Update,Update,141,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Merge all TFileCollection objects in li into this TFileCollection object.; /// Updates counters at the end.; /// Returns the number of merged collections or -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileCollection.cxx:165,Update,Updates,165,core/base/src/TFileCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileCollection.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:139,integrat,integrator,139,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,10,"['configurat', 'integrat']","['configuration', 'integrator', 'integrators']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Method invoked when canvas should be updated on the client side; /// Depending from delivered status, each client will received new data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx:123,update,updated,123,gui/canvaspainter/src/RCanvasPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Minimizes a given NLL variable by finding the optimal parameters with the; /// RooMinimzer. The NLL variable can be created with RooAbsPdf::createNLL.; /// If you are looking for a function that combines likelihood creation with; /// fitting, see RooAbsPdf::fitTo.; /// \param[in] nll The negative log-likelihood variable to minimize.; /// \param[in] data The dataset that was also used for the NLL. It's a necessary; /// parameter because it is used in the asymptotic error correction.; /// \param[in] cfg Configuration struct with all the configuration options for; /// the RooMinimizer. These are a subset of the options that you can; /// also pass to RooAbsPdf::fitTo via the RooFit command arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx:593,Configurat,Configuration,593,roofit/roofitcore/src/FitHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx,2,"['Configurat', 'configurat']","['Configuration', 'configuration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// MouseOver slot. Activated when user out mouse over object on scene.; /// Sets ToolTip and updates labels",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx:176,update,updates,176,graf3d/gviz3d/src/TStructViewerGUI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Move particle ""id"" by step dist, update the distance covered; /// then check if out of detector's bounds.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/MyEvent.cxx:119,update,update,119,test/RootShower/MyEvent.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/MyEvent.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// No op: see TClingCallbacks (used to update the list of global functions)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,update,update,122,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// No op: see TClingCallbacks (used to update the list of globals)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,update,update,122,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// No op: see TClingCallbacks (used to update the list of types)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,update,update,122,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Notify the low level GUI layer ROOT requires ""tgwindow"" to be; /// updated; ///; /// Returns kTRUE if the notification was desirable and it was sent; ///; /// At the moment only Qt4 layer needs that; ///; /// One needs explicitly cast the first parameter to TGWindow to make; /// it working in the implementation.; ///; /// One needs to process the notification to confine; /// all paint operations within ""expose"" / ""paint"" like low level event; /// or equivalent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:153,update,updated,153,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Old name of SearcHighRes introduced for back compatibility.; /// This function will be removed after the June 2006 release",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:201,release,release,201,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['release'],['release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// One step for the batch (stochastic) method.; /// DEDw should have been updated before calling this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:157,update,updated,157,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// One step for the stochastic method; /// buffer should contain the previous dw vector and will be updated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:183,update,updated,183,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Open merger output file. 'mode' is passed to the TFile constructor as the option, it should; /// be one of 'NEW','CREATE','RECREATE','UPDATE'; /// 'UPDATE' is usually used in conjunction with IncrementalMerge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx:220,UPDATE,UPDATE,220,io/io/src/TFileMerger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx,2,['UPDATE'],['UPDATE']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Open merger output file.; ///; /// The 'mode' parameter is passed to the TFile constructor as the option, it; /// should be one of 'NEW','CREATE','RECREATE','UPDATE'; /// 'UPDATE' is usually used in conjunction with IncrementalMerge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx:244,UPDATE,UPDATE,244,io/io/src/TFileMerger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx,2,['UPDATE'],['UPDATE']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Open or creates local XML file with name filename.; /// It is recommended to specify filename as ""<file>.xml"". The suffix "".xml""; /// will be used by object browsers to automatically identify the file as; /// a XML file. If the constructor fails in any way IsZombie() will; /// return true. Use IsOpen() to check if the file is (still) open.; ///; /// If option = NEW or CREATE create a new file and open it for writing,; /// if the file already exists the file is; /// not opened.; /// = RECREATE create a new file, if the file already; /// exists it will be overwritten.; /// = 2xoo create a new file with specified xml settings; /// for more details see TXMLSetup class; /// = UPDATE open an existing file for writing.; /// if no file exists, it is created.; /// = READ open an existing file for reading.; ///; /// For more details see comments for TFile::TFile() constructor; ///; /// TXMLFile does not support TTree objects",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx:766,UPDATE,UPDATE,766,io/xml/src/TXMLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx,1,['UPDATE'],['UPDATE']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Override Update from TGedFrame as fGedEditor can be null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoGedFrame.cxx:95,Update,Update,95,geom/geombuilder/src/TGeoGedFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoGedFrame.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Paints this TEfficiency object; ///; /// For details on the possible option see Draw(Option_t*); ///; /// Note for 1D classes; /// In 1D the TEfficiency uses a TGraphAsymmErrors for drawing; /// The TGraph is created only the first time Paint is used. The user can manipulate the; /// TGraph via the method TEfficiency::GetPaintedGraph(); /// The TGraph creates behing an histogram for the axis. The histogram is created also only the first time.; /// If the axis needs to be updated because in the meantime the class changed use this trick; /// which will trigger a re-calculation of the axis of the graph; /// TEfficiency::GetPaintedGraph()->Set(0); ///; /// Note that in order to access the painted graph via GetPaintedGraph() you need either to call Paint or better; /// gPad->Update();; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:562,update,updated,562,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Parses the configuration file. The objects can be specified following; /// the rules of the RooFactoryWSTool, plus some more flexibility.; ///; /// The official format for the datacards is "".rs"".; ///; /// All the instructions end with a "";"" (like in C++).; ///; /// Carriage returns and white lines are irrelevant but advised since they; /// improve readability (like in C++).; ///; /// The `(Roo)ClassName::objname(description)` can be replaced with the more; /// ""pythonic"" `objname = (Roo)ClassName(description)`.; ///; /// The comments can be specified with a ""//"" if on a single line or with; /// ""multiple lines"" in C/C++ like comments.; ///; /// The `""#include path/to/file.rs""` statement triggers the inclusion of a; /// configuration fragment.; ///; /// The `""import myobject:myworkspace:myrootfile""` will add to the Workspace; /// the object myobject located in myworkspace recorded in myrootfile.; /// Alternatively, one could choose the `""import myobject:myrootfile""` in case; /// no Workspace is present.; ///; /// The `""echo""` statement prompts a message on screen.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx:97,configurat,configuration,97,roofit/roostats/src/HLFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx,2,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Perform a 2-D \f$ \chi^2 \f$ fit using a series of x and y values stored in the dataset `xydata`.; /// The y values can either be the event weights, or can be another column designated; /// by the YVar() argument. The y value must have errors defined for the \f$ \chi^2 \f$ to; /// be well defined.; ///; /// <table>; /// <tr><th><th> Options to control construction of the chi-square; /// <tr><td> `YVar(RooRealVar& yvar)` <td> Designate given column in dataset as Y value; /// <tr><td> `Integrate(bool flag)` <td> Integrate function over range specified by X errors; /// rather than take value at bin center.; ///; /// <tr><th><th> Options to control flow of fit procedure; /// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; /// <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; /// <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, on by default; /// <tr><td> `Minos(const RooArgSet& set)` <td> Only run MINOS on given subset of arguments; /// <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returned, off by default; /// <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 through 2, default is 1); ///; /// <tr><th><th> Options to control informational output; /// <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit; /// <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default; /// <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 through 3, default is 1). At -1 all RooFit informational; /// messages are suppressed as well; /// <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:575,Integrat,Integrate,575,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['Integrat'],['Integrate']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Perform hybrid numerical/analytical integration over all real-valued dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:122,integrat,integration,122,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Perform one step of Monte Carlo integration using the specified number of iterations; /// with (approximately) the specified number of integrand evaluation calls per iteration.; /// Use the VEGAS algorithm, starting from the specified stage. Returns the best estimate; /// of the integral. Also sets *absError to the estimated absolute error of the integral; /// estimate if absError is non-zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:118,integrat,integration,118,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Perform one-time initialization of integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx:121,integrat,integrator,121,roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,1,['integrat'],['integrator']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Perform summation of list of category dependents to be integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:141,integrat,integrated,141,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Perform the action needed to commence the new session:; /// Version called by TServerSocket.; /// - set debug flag; /// - check authentication table; /// - Inquire protocol; /// - authenticate the client; /// Returns logged-in user, the remote client procotol cproto,; /// the authentication protocol (ROOT internal) number is returned; /// in meth, type indicates the kind of authentication:; /// 0 = new authentication; /// 1 = existing authentication; /// 2 = existing authentication with updated offset; /// and the crypted-token in ctoken (used later for cleaning).; /// Called just after opening the connection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:578,update,updated,578,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Perform the integration and return the result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:98,integrat,integration,98,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Plot (project) PDF on specified frame. If a PDF is plotted in an empty frame, it; /// will show a unit normalized curve in the frame variable, taken at the present value; /// of other observables defined for this PDF.; ///; /// \param[in] frame pointer to RooPlot; /// \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10 Ordered arguments; ///; /// If a PDF is plotted in a frame in which a dataset has already been plotted, it will; /// show a projected curve integrated over all variables that were present in the shown; /// dataset except for the one on the x-axis. The normalization of the curve will also; /// be adjusted to the event count of the plotted dataset. An informational message; /// will be printed for each projection step that is performed.; ///; /// This function takes the following named arguments; /// <table>; /// <tr><th><th> Projection control; /// <tr><td> `Slice(const RooArgSet& set)` <td> Override default projection behaviour by omitting observables listed; /// in set from the projection, i.e. by not integrating over these.; /// Slicing is usually only sensible in discrete observables, by e.g. creating a slice; /// of the PDF at the current value of the category observable.; ///; /// <tr><td> `Slice(RooCategory& cat, const char* label)` <td> Override default projection behaviour by omitting the specified category; /// observable from the projection, i.e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. To pass multiple Slice() commands, please use the; /// Slice(std::map<RooCategory*, std::string> const&) argument explained below.; ///; /// <tr><td> `Slice(std::map<RooCategory*, std::string> const&)` <td> Omits multiple categories from the projection, as explianed above.; /// Can be used with initializer lists for convenience, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice({{&tagCategory, ""2tag""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:557,integrat,integrated,557,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Plot (project) PDF on specified frame.; /// - If a PDF is plotted in an empty frame, it; /// will show a unit-normalized curve in the frame variable. When projecting a multi-; /// dimensional PDF onto the frame axis, hidden parameters are taken are taken at; /// their current value.; /// - If a PDF is plotted in a frame in which a dataset has already been plotted, it will; /// show a projection integrated over all variables that were present in the shown; /// dataset (except for the one on the x-axis). The normalization of the curve will; /// be adjusted to the event count of the plotted dataset. An informational message; /// will be printed for each projection step that is performed.; /// - If a PDF is plotted in a frame showing a dataset *after* a fit, the above happens,; /// but the PDF will be drawn and normalised only in the fit range. If this is not desired,; /// plotting and normalisation range can be overridden using Range() and NormRange() as; /// documented in the table below.; ///; /// This function takes the following named arguments (for more arguments, see also; /// RooAbsReal::plotOn(RooPlot*,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,; /// const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,; /// const RooCmdArg&) const ); ///; ///; /// <table>; /// <tr><th> Type of argument <th> Controlling normalisation; /// <tr><td> `NormRange(const char* name)` <td> Calculate curve normalization w.r.t. specified range[s].; /// See the tutorial rf212_plottingInRanges_blinding.C; /// \note Setting a Range() by default also sets a NormRange() on the same range, meaning that the; /// PDF is plotted and normalised in the same range. Overriding this can be useful if the PDF was fit; /// in limited range[s] such as side bands, `NormRange(""sidebandLeft,sidebandRight"")`, but the PDF; /// should be drawn in the full range, `Range(""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:484,integrat,integrated,484,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Pop as many margins as necessary until the margin that was; /// created with ""tag"" is popped off. Update the layout context; /// to move past obstacles, if necessary.; ///; /// If there are some margins on the stack that contain non-negative; /// bottom fields, that means there are some obstacles that we have; /// not yet cleared. If these margins get popped off the stack,; /// then we have to be careful to advance the 'bottom' value so; /// that the next line of text will clear the obstacle.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlLayout.cxx:184,Update,Update,184,gui/guihtml/src/TGHtmlLayout.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlLayout.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the processed dataset(s). The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the uninque; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofquerydsets'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:198,integrat,integrated,198,proof/proofplayer/src/TProofMonSenderSQL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the requested files. The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the unique; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofqueryfiles'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:193,integrat,integrated,193,proof/proofplayer/src/TProofMonSenderSQL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Print configuration of message service. If ""v"" option is given also; /// inactive streams are listed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:92,configurat,configuration,92,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Print configuration of parser",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx:92,configurat,configuration,92,roofit/roofitcore/src/RooCmdConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Print customizer configuration details",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx:103,configurat,configuration,103,roofit/roofitcore/src/RooCustomizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Print details of a validated build configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:121,configurat,configuration,121,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Print the path (A/B/C/...) to this node on stdout",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNode.cxx:102,A/B,A/B,102,geom/geom/src/TGeoNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNode.cxx,1,['A/B'],['A/B']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Prints formatted information about the dataset 'uri'.; /// The type and format of output is driven by 'opt':; ///; /// 1. opt = ""server:srv1[,srv2[,srv3[,...]]]""; /// Print info about the subsets of 'uri' on servers srv1, srv2, ...; /// 2. opt = ""servers[:exclude:srv1[,srv2[,srv3[,...]]]]""; /// Print info about the subsets of 'uri' on all servers, except; /// the ones in the exclude list srv1, srv2, ...; /// 3. opt = `<any>`; /// Print info about all datasets matching 'uri'; ///; /// If 'opt' contains 'full:' the list of files in the datasets are also printed.; /// In case 3. this is enabled only if 'uri' matches a single dataset.; ///; /// In case 3, if 'opt' contains; /// 'full:' the list of files in the datasets are also printed.; /// 'forcescan:' the dataset are open to get the information; otherwise the; /// pre-processed information is used.; /// 'noheader:' the labelling header is not printed; usefull when to chain; /// several printouts; /// 'noupdate:' do not update the cache (which may be slow on very remote; /// servers); /// 'refresh:' refresh the information (requires appropriate credentials;; /// typically it can be done only for owned datasets)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:1069,update,update,1069,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Process 'Apply' - update the viewer object from GUI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPShapeObjEditor.cxx:104,update,update,104,graf3d/gl/src/TGLPShapeObjEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPShapeObjEditor.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Process an additional configuration file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx:108,configurat,configuration,108,roofit/roostats/src/HLFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Project all children recursively, update bounding-box and notify; /// EveManger about the scenes that have been changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveProjectionManager.cxx:120,update,update,120,graf3d/eve7/src/REveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveProjectionManager.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Project all children recursively, update bounding-box and notify; /// TEveManger about the scenes that have been changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx:120,update,update,120,graf3d/eve/src/TEveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Project el (via REveProjected::UpdateProjection()) and recurse; /// through el's children.; /// Bounding-box is updated along the recursion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveProjectionManager.cxx:117,Update,UpdateProjection,117,graf3d/eve7/src/REveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveProjectionManager.cxx,2,"['Update', 'update']","['UpdateProjection', 'updated']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Project el (via TEveProjected::UpdateProjection()) and recurse; /// through el's children.; /// Bounding-box is updated along the recursion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx:117,Update,UpdateProjection,117,graf3d/eve/src/TEveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx,2,"['Update', 'update']","['UpdateProjection', 'updated']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Propagate charged particle with momentum p to bounds.; /// It is expected that Update() with full-update was called before.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:165,Update,Update,165,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,4,"['Update', 'update']","['Update', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Propagate charged particle with momentum p to line segment with point s and; /// vector r to the second point. It is expected that Update() with full-update; /// was called before. Returns kFALSE if hits bounds.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:217,Update,Update,217,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,4,"['Update', 'update']","['Update', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Propagate charged particle with momentum p to vertex v.; /// It is expected that Update() with full-update was called before.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:167,Update,Update,167,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,4,"['Update', 'update']","['Update', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Protected method. Release and delete the referenced objects, the; /// ownership is *NOT* checked.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveDigitSet.cxx:104,Release,Release,104,graf3d/eve/src/TEveDigitSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveDigitSet.cxx,2,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Query internal generation capabilities of component p.d.f.s and aggregate capabilities; /// into master configuration passed to the generator context",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:190,configurat,configuration,190,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Raw update of bin content on internal data structure; /// see convention for numbering bins in TH1::GetBin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:90,update,update,90,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Read configuration file and populate list of sessions; /// list of queries and list of packages.; /// Read and set also global options as feedback histos.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:91,configurat,configuration,91,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Read specified byte range from remote file via HTTP 1.0 daemon (without; /// mod-root installed). This routine connects to the remote host, sends the; /// request and returns the buffer. Returns kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:172,install,installed,172,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['install'],['installed']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Read specified byte ranges from remote file via HTTP 1.0 daemon (without; /// mod-root installed). Read the nbuf blocks described in arrays pos and len,; /// where pos[i] is the seek position of block i of length len[i].; /// Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer; /// This function is overloaded by TNetFile, TWebFile, etc.; /// Returns kTRUE in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:173,install,installed,173,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['install'],['installed']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Read the linked list of keys.; ///; /// Every directory has a linked list (fKeys). This linked list has been; /// written on the file via WriteKeys as a single data record.; ///; /// It is interesting to call this function in the following situation.; /// Assume another process1 is connecting this directory in Update mode; /// - Process1 is adding/updating objects in this directory; /// - You want to see the latest status from process1.; /// Example Process1:; /// ~~~{.cpp}; /// obj1.Write();; /// obj2.Write();; /// gDirectory->SaveSelf();; /// ~~~; ///; /// Example Process2:; /// ~~~{.cpp}; /// gDirectory->ReadKeys();; /// obj1->Draw();; /// ~~~; /// This is an efficient way (without opening/closing files) to view; /// the latest updates of a file being modified by another process; /// as it is typically the case in a data acquisition system.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:398,Update,Update,398,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,2,"['Update', 'update']","['Update', 'updates']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Read the list of StreamerInfo from this file.; ///; /// The key with name holding the list of TStreamerInfo objects is read.; /// The corresponding TClass objects are updated.; /// Note that this function is not called if the static member fgReadInfo is false.; /// (see TFile::SetReadStreamerInfo)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:253,update,updated,253,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Recursively import elements and apply projection to the newly; /// imported objects.; ///; /// If ext_list is not 0 the new element is also added to the list.; /// This simplifies construction of complex views where projected; /// elements are distributed into several scenes for optimization of; /// updates and rendering.; ///; /// Returns the projected replica of el. Can be 0, if el and none of; /// its children are projectable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx:387,update,updates,387,graf3d/eve/src/TEveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx,2,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Refresh all browsers. Call this method when some command line; /// command or script has changed the browser contents. Not needed; /// for objects that have the kMustCleanup bit set. Most useful to; /// update browsers that show the file system or other objects external; /// to the running ROOT session.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:289,update,update,289,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Refresh contents of this tree and its branches from the current status on disk.; ///; /// One can call this function in case the tree file is being; /// updated by another process.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:239,update,updated,239,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Refresh the value of fDirectory (i.e. where this branch writes/reads its buffers); /// with the current value of fTree->GetCurrentFile unless this branch has been; /// redirected to a different file. Also update the sub-branches.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:291,update,update,291,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,3,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Register all known integrators by calling; /// their static registration functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:105,integrat,integrators,105,roofit/roofitcore/src/RooNumIntFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx,1,['integrat'],['integrators']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Register an RooArgProxy in the proxy list. This function is called by owned; /// proxies upon creation. After registration, this arg will forward pointer; /// changes from serverRedirects and updates in cached normalization sets; /// to the proxies immediately after they occur. The proxied argument is; /// also added as value and/or shape server",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:278,update,updates,278,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Register an RooListProxy in the proxy list. This function is called by owned; /// proxies upon creation. After registration, this arg will forward pointer; /// changes from serverRedirects and updates in cached normalization sets; /// to the proxies immediately after they occur.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:279,update,updates,279,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Register an RooSetProxy in the proxy list. This function is called by owned; /// proxies upon creation. After registration, this arg will forward pointer; /// changes from serverRedirects and updates in cached normalization sets; /// to the proxies immediately after they occur.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:278,update,updates,278,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Register classes that already existed prior to their dictionary loading; /// and that already had a ClassInfo (and thus would not be refresh via; /// UpdateClassInfo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:236,Update,UpdateClassInfo,236,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['Update'],['UpdateClassInfo']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release a fit parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:86,Release,Release,86,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release all buffers, used by statement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLStatement.cxx:86,Release,Release,86,sql/mysql/src/TMySQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLStatement.cxx,4,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release all memory chunks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveChunkManager.cxx:86,Release,Release,86,graf3d/eve/src/TEveChunkManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveChunkManager.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release any existing document.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TDOMParser.cxx:86,Release,Release,86,io/xmlparser/src/TDOMParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TDOMParser.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release current (external) viewer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:86,Release,Release,86,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release current lock, make sure it the same as the 'lock' argument.; /// Returns TRUE on success, FALSE on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLockable.cxx:86,Release,Release,86,graf3d/gl/src/TGLLockable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLockable.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release font with given attributes. Returns false if font has; /// not been found in the managers font set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFontManager.cxx:86,Release,Release,86,graf3d/gl/src/TGLFontManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFontManager.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release internal resources.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:86,Release,Release,86,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release last used state info pointer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCache.cxx:86,Release,Release,86,geom/geom/src/TGeoCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCache.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release memory cache associated with the H1 files at 'h1src', if it; /// makes any sense, i.e. are local ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:86,Release,Release,86,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release memory cache associated with the event files at 'eventsrc', if it; /// makes any sense, i.e. are local ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:86,Release,Release,86,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release memory cache for dataset 'dset'; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:86,Release,Release,86,proof/proofbench/src/TProofBench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx,2,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release mouse grab.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLEventHandler.cxx:86,Release,Release,86,graf3d/gl/src/TGLEventHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLEventHandler.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release ownership of any allocated objects.; ///; /// Note: This interface was added so that clone trees could; /// be told they do not own the allocated objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:86,Release,Release,86,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release parameter ipar.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx:86,Release,Release,86,math/minuit/src/TFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release parameter number ipar during a fit operation.; /// After releasing it, the parameter; /// can vary freely in the fit. The parameter limits are reset to 0,0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:86,Release,Release,86,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release restrictions on the X range of the histogram to be used in the fit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:86,Release,Release,86,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release restrictions on the Y range of the histogram to be used in the fit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:86,Release,Release,86,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release restrictions on the Z range of the histogram to be used in the fit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:86,Release,Release,86,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release semaphore. Returns 0 if OK, -1 on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx:86,Release,Release,86,io/io/src/TMapFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release the allocated GL resources.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFBO.cxx:86,Release,Release,86,graf3d/gl/src/TGLFBO.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFBO.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release the memory cache associated with file 'fn'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:86,Release,Release,86,proof/proofbench/src/TSelHandleDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx,2,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release the read lock of the mutex",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWMutexImp.cxx:86,Release,Release,86,core/thread/src/TRWMutexImp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWMutexImp.cxx,2,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release the used monitor to be used, making sure to delete newly created; /// monitors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Release,Release,86,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Release worker",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx:86,Release,Release,86,proof/proof/src/TCondor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx,1,['Release'],['Release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Releases PROOF. Disconnect the ""progress"" signal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx:86,Release,Releases,86,proof/proof/src/TProofChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx,1,['Release'],['Releases']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Releases parameter number ipar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:86,Release,Releases,86,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['Release'],['Releases']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Releases the space allocated for the object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:86,Release,Releases,86,geom/geom/src/TGeoBranchArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx,1,['Release'],['Releases']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Releases the tree index got using GetSubTreeIndex. If the index was; /// created by this object it is removed from the current tree, so that it isn't; /// deleted in its destructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:86,Release,Releases,86,tree/treeplayer/src/TChainIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx,1,['Release'],['Releases']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Remove and delete the StreamerInfo in the given slot.; /// Update the slot accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:145,Update,Update,145,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Remove column at position, TGTable->Update() is needed; /// afterwards to apply the change to the TGTable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:122,Update,Update,122,tree/treeplayer/src/TTreeTableInterface.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Remove entries from from_ID to to_ID (including).; /// To update the listbox call Layout().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx:144,update,update,144,gui/gui/src/TGListBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Remove the entry with specified id from the listbox container.; /// To update the listbox call Layout().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx:157,update,update,157,gui/gui/src/TGListBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Remove the specialized numeric MC generator configuration associated; /// with this object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:130,configurat,configuration,130,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Remove the specialized numeric integration configuration associated; /// with this object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:117,integrat,integration,117,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Reopen a file with a different access mode, like from READ to; /// UPDATE or from NEW, CREATE, RECREATE, UPDATE to READ. Thus the; /// mode argument can be either ""READ"" or ""UPDATE"". The method returns; /// 0 in case the mode was successfully modified, 1 in case the mode; /// did not change (was already as requested or wrong input arguments); /// and -1 in case of failure, in which case the file cannot be used; /// anymore.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx:153,UPDATE,UPDATE,153,net/net/src/TNetFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx,3,['UPDATE'],['UPDATE']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Reopen a file with a different access mode, like from READ to; /// UPDATE or from NEW, CREATE, RECREATE, UPDATE to READ. Thus the; /// mode argument can be either ""READ"" or ""UPDATE"". The method returns; /// 0 in case the mode was successfully modified, 1 in case the mode; /// did not change (was already as requested or wrong input arguments); /// and -1 in case of failure, in which case the file cannot be used; /// anymore. A TWebFile cannot be reopened in update mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:153,UPDATE,UPDATE,153,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,4,"['UPDATE', 'update']","['UPDATE', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Reopen a file with a different access mode.; ///; /// For example, it is possible to change from READ to; /// UPDATE or from NEW, CREATE, RECREATE, UPDATE to READ. Thus the; /// mode argument can be either ""READ"" or ""UPDATE"". The method returns; /// 0 in case the mode was successfully modified, 1 in case the mode; /// did not change (was already as requested or wrong input arguments); /// and -1 in case of failure, in which case the file cannot be used; /// anymore. The current directory (gFile) is changed to this file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:196,UPDATE,UPDATE,196,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,3,['UPDATE'],['UPDATE']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Replace 'oldServer' with 'newServer', specifying whether the new server has; /// value or shape server properties.; ///; /// \warning This function should not be used! This method is quite unsafe for; /// many reasons. For once, the new server will be put at the end of the server; /// list, no matter the position of the original server. This might mess up; /// code that expects the servers to be in a certain order. Furthermore, the; /// proxy objects corresponding to the server are not updated, leaving the; /// object in an invalid state where the servers are out of sync with the; /// proxies. This can have very bad consequences. Finally, by having to; /// manually specify the value and shape server properties, it is very easy to; /// get them wrong.; ///; /// If you want to safely replace a server, you should use; /// RooAbsArg::redirectServers(), which replaces the server in-place at the; /// same position of the server list, keeps the same value and shape server; /// properties, and also updates the corresponding proxies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:577,update,updated,577,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,2,['update'],"['updated', 'updates']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Replaces all references like ""jsrootsys/..."" or other pre-configured pathes; ///; /// Either using pre-configured JSROOT installation from web or; /// redirect to jsrootsys from the main server path to benefit from browser caching; /// Creates appropriate importmap instead of <!--jsroot_importmap--> placeholder",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx:207,install,installation,207,net/http/src/THttpServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx,1,['install'],['installation']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Request Locator position.; /// x,y : cursor position at moment of button press (output); /// ctyp : cursor type (input); /// ctyp=1 tracking cross; /// ctyp=2 cross-hair; /// ctyp=3 rubber circle; /// ctyp=4 rubber band; /// ctyp=5 rubber rectangle; ///; /// mode : input mode; /// mode=0 request; /// mode=1 sample; ///; /// Request locator:; /// return button number 1 = left is pressed; /// 2 = middle is pressed; /// 3 = right is pressed; /// in sample mode:; /// 11 = left is released; /// 12 = middle is released; /// 13 = right is released; /// -1 = nothing is pressed or released; /// -2 = leave the window; /// else = keycode (keyboard is pressed)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:567,release,released,567,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,4,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Request Locator position.; ///; /// \param [in] x,y : cursor position at moment of button press (output); /// \param [in] ctyp : cursor type (input); /// - ctyp=1 tracking cross; /// - ctyp=2 cross-hair; /// - ctyp=3 rubber circle; /// - ctyp=4 rubber band; /// - ctyp=5 rubber rectangle; ///; /// \param [in] mode : input mode; /// - mode=0 request; /// - mode=1 sample; ///; /// Request locator:; /// return button number:; /// - 1 = left is pressed; /// - 2 = middle is pressed; /// - 3 = right is pressed; /// in sample mode:; /// - 11 = left is released; /// - 12 = middle is released; /// - 13 = right is released; /// - -1 = nothing is pressed or released; /// - -2 = leave the window; /// - else = keycode (keyboard is pressed)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx:636,release,released,636,graf2d/x11/src/TGX11.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx,4,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Requests Locator position.; ///; /// \param [in] x,y cursor position at moment of button press (output); /// \param [in] ctyp cursor type (input); /// - ctyp = 1 tracking cross; /// - ctyp = 2 cross-hair; /// - ctyp = 3 rubber circle; /// - ctyp = 4 rubber band; /// - ctyp = 5 rubber rectangle; ///; /// \param [in] mode input mode; /// - mode = 0 request; /// - mode = 1 sample; ///; /// \return; /// - in request mode:; /// - 1 = left is pressed; /// - 2 = middle is pressed; /// - 3 = right is pressed; /// - in sample mode:; /// - 11 = left is released; /// - 12 = middle is released; /// - 13 = right is released; /// - -1 = nothing is pressed or released; /// - -2 = leave the window; /// - else = keycode (keyboard is pressed)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:635,release,released,635,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,4,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Reset server configuration fields.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:99,configurat,configuration,99,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// ResetCamerasOnUpdate was toggled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx:111,toggle,toggled,111,graf3d/gl/src/TGLViewerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx,2,['toggle'],['toggled']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve cache element for the computation of the PDF normalisation.; /// \param[in] nset Current normalisation set (integration over these variables yields 1).; /// \param[in] iset Integration set. Variables to be integrated over (if integrations are performed).; ///; /// If a cache element does not exist, create and fill it on the fly. The cache also contains; /// - Supplemental normalization terms (in case not all added p.d.f.s have the same observables); /// - Projection integrals to calculate transformed fraction coefficients when a frozen reference frame is provided; /// - Projection integrals for similar transformations when a frozen reference range is provided.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:203,integrat,integration,203,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,4,"['Integrat', 'integrat']","['Integration', 'integrated', 'integration', 'integrations']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve cache element with for calculation of p.d.f value with normalization set nset and integrated over iset; /// in range 'rangeName'. If cache element does not exist, create and fill it on the fly. The cache contains; /// suplemental normalization terms (in case not all added p.d.f.s have the same observables), projection; /// integrals to calculated transformed fraction coefficients when a frozen reference frame is provided; /// and projection integrals for similar transformations when a frozen reference range is provided.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:177,integrat,integrated,177,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve configuration information specific to integrator with given name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:95,configurat,configuration,95,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,4,"['configurat', 'integrat']","['configuration', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve object representing projection integral of input p.d.f; /// over observables iset, while normalizing over observables; /// nset. The code argument returned by reference is the unique code; /// defining this particular projection configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:324,configurat,configuration,324,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve the new physics objects and update the weights in the morphing; /// function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:123,update,update,123,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return 2 random numbers following this function shape; ///; /// The distribution contained in this TF2 function is integrated; /// over the cell contents.; /// It is normalized to 1.; /// Getting the two random numbers implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which cell in the normalized integral r1 corresponds to; /// - make a linear interpolation in the returned cell; ///; ///; /// IMPORTANT NOTE; ///; /// The integral of the function is computed at fNpx * fNpy points.; /// If the function has sharp peaks, you should increase the number of; /// points (SetNpx, SetNpy) such that the peak is correctly tabulated; /// at several points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF2.cxx:201,integrat,integrated,201,hist/hist/src/TF2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF2.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return 3 random numbers following this function shape; ///; /// The distribution contained in this TF3 function is integrated; /// over the cell contents.; /// It is normalized to 1.; /// Getting the three random numbers implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which cell in the normalized integral r1 corresponds to; /// - make a linear interpolation in the returned cell; ///; /// IMPORTANT NOTE; ///; /// The integral of the function is computed at fNpx * fNpy * fNpz points.; /// If the function has sharp peaks, you should increase the number of; /// points (SetNpx, SetNpy, SetNpz) such that the peak is correctly tabulated; /// at several points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF3.cxx:201,integrat,integrated,201,hist/hist/src/TF3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF3.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return Integral of function between a and b using the given parameter values and; /// relative and absolute tolerance.; ///; /// The default integrator defined in ROOT::Math::IntegratorOneDimOptions::DefaultIntegrator() is used; /// If ROOT contains the MathMore library the default integrator is set to be; /// the adaptive ROOT::Math::GSLIntegrator (based on QUADPACK) or otherwise the; /// ROOT::Math::GaussIntegrator is used; /// See the reference documentation of these classes for more information about the; /// integration algorithms; /// To change integration algorithm just do :; /// ROOT::Math::IntegratorOneDimOptions::SetDefaultIntegrator(IntegratorName);; /// Valid integrator names are:; /// - Gauss : for ROOT::Math::GaussIntegrator; /// - GaussLegendre : for ROOT::Math::GaussLegendreIntegrator; /// - Adaptive : for ROOT::Math::GSLIntegrator adaptive method (QAG); /// - AdaptiveSingular : for ROOT::Math::GSLIntegrator adaptive singular method (QAGS); /// - NonAdaptive : for ROOT::Math::GSLIntegrator non adaptive (QNG); ///; /// In order to use the GSL integrators one needs to have the MathMore library installed; ///; /// Note 1:; ///; /// Values of the function f(x) at the interval end-points A and B are not; /// required. The subprogram may therefore be used when these values are; /// undefined.; ///; /// Note 2:; ///; /// Instead of TF1::Integral, you may want to use the combination of; /// TF1::CalcGaussLegendreSamplingPoints and TF1::IntegralFast.; /// See an example with the following script:; ///; /// ~~~ {.cpp}; /// void gint() {; /// TF1 *g = new TF1(""g"",""gaus"",-5,5);; /// g->SetParameters(1,0,1);; /// //default gaus integration method uses 6 points; /// //not suitable to integrate on a large domain; /// double r1 = g->Integral(0,5);; /// double r2 = g->Integral(0,1000);; ///; /// //try with user directives computing more points; /// Int_t np = 1000;; /// double *x=new",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:227,integrat,integrator,227,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,10,"['Integrat', 'install', 'integrat']","['IntegratorName', 'IntegratorOneDimOptions', 'installed', 'integration', 'integrator', 'integrators']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return a p.d.f that represent a projection of this p.d.f integrated over given observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:143,integrat,integrated,143,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return a random number following this function shape in [xmin,xmax]; ///; /// The distribution contained in the function fname (TF1) is integrated; /// over the channel contents.; /// It is normalized to 1.; /// For each bin the integral is approximated by a parabola.; /// The parabola coefficients are stored as non persistent data members; /// Getting one random number implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which bin in the normalized integral r1 corresponds to; /// - Evaluate the parabolic curve in the selected bin to find; /// the corresponding X value.; ///; /// The parabolic approximation is very good as soon as the number; /// of bins is greater than 50.; ///; /// @param xmin minimum value for generated random numbers; /// @param xmax maximum value for generated random numbers; /// @param rng (optional) random number generator pointer; /// @param option (optional) : `LOG` or `LIN` to force the usage of a log or linear scale for computing the cumulative integral table; ///; /// IMPORTANT NOTE; ///; /// The integral of the function is computed at fNpx points. If the function; /// has sharp peaks, you should increase the number of points (SetNpx); /// such that the peak is correctly tabulated at several points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:222,integrat,integrated,222,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return a random number following this function shape.; ///; /// @param rng Random number generator. By default (or when passing a nullptr) the global gRandom is used; /// @param option Option string which controls the binning used to compute the integral. Default mode is automatic depending of; /// xmax, xmin and Npx (function points).; /// Possible values are:; /// - ""LOG"" to force usage of log scale for tabulating the integral; /// - ""LIN"" to force usage of linear scale when tabulating the integral; ///; /// The distribution contained in the function fname (TF1) is integrated; /// over the channel contents.; /// It is normalized to 1.; /// For each bin the integral is approximated by a parabola.; /// The parabola coefficients are stored as non persistent data members; /// Getting one random number implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which bin in the normalized integral r1 corresponds to; /// - Evaluate the parabolic curve in the selected bin to find the corresponding X value.; ///; /// The user can provide as optional parameter a Random number generator.; /// By default gRandom is used; ///; /// If the ratio fXmax/fXmin > fNpx the integral is tabulated in log scale in x; /// A log scale for the intergral is also always used if a user specifies the ""LOG"" option; /// Instead if a user requestes a ""LIN"" option the integral binning is never done in log scale; /// whatever the fXmax/fXmin ratio is; ///; /// Note that the parabolic approximation is very good as soon as the number of bins is greater than 50.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:660,integrat,integrated,660,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return analytical integral defined by given code, which is returned; /// by getAnalyticalIntegralWN(); ///; /// For unnormalized integrals the returned value is; /// \f[; /// \mathrm{PDF} = \sum_k \int \mathrm{coef}_k \; \mathrm{d}\bar{x}; /// \cdot \int \mathrm{basis}_k (x) \mathrm{ResModel} \; \mathrm{d}\bar{y},; /// \f]; /// where \f$ \bar{x} \f$ is the set of coefficient dependents to be integrated,; /// and \f$ \bar{y} \f$ the set of basis function dependents to be integrated.; ///; /// For normalized integrals this becomes; /// \f[; /// \mathrm{PDF} = \frac{\sum_k \int \mathrm{coef}_k \; \mathrm{d}x; /// \cdot \int \mathrm{basis}_k (x) \mathrm{ResModel} \; \mathrm{d}y}; /// {\sum_k \int \mathrm{coef}_k \; \mathrm{d}v; /// \cdot \int \mathrm{basis}_k (x) \mathrm{ResModel} \; \mathrm{d}w},; /// \f]; /// where; /// * \f$ x \f$ is the set of coefficient dependents to be integrated,; /// * \f$ y \f$ the set of basis function dependents to be integrated,; /// * \f$ v \f$ is the set of coefficient dependents over which is normalized and; /// * \f$ w \f$ is the set of basis function dependents over which is normalized.; ///; /// Set \f$ x \f$ must be contained in \f$ v \f$ and set \f$ y \f$ must be contained in \f$ w \f$.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:481,integrat,integrated,481,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,4,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return analytical integration capabilities of chosen coefficient",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvCoefVar.cxx:104,integrat,integration,104,roofit/roofitcore/src/RooConvCoefVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvCoefVar.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return analytical integration capabilities of the RooHistFunc that corresponds to the set of observables in allVars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedReal.cxx:104,integrat,integration,104,roofit/roofitcore/src/RooAbsCachedReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedReal.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return analytical integration defined by given code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:104,integrat,integration,104,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return average curve value in [xFirst,xLast] by integrating curve between points; /// and dividing by xLast-xFirst",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx:134,integrat,integrating,134,roofit/roofitcore/src/RooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx,1,['integrat'],['integrating']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return call environment for the getter method in case this is a; /// *TOGGLE method (for the context menu).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:156,TOGGLE,TOGGLE,156,core/meta/src/TMethod.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx,1,['TOGGLE'],['TOGGLE']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return call environment for this method in case this is a; /// *TOGGLE method which takes a single boolean or integer argument.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:150,TOGGLE,TOGGLE,150,core/meta/src/TMethod.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx,1,['TOGGLE'],['TOGGLE']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return current value, normalized by integrating over; /// the observables in `nset`. If `nset` is 0, the unnormalized value; /// is returned. All elements of `nset` must be lvalues.; ///; /// Unnormalized values are not cached.; /// Doing so would be complicated as `_norm->getVal()` could; /// spoil the cache and interfere with returning the cached; /// return value. Since unnormalized calls are typically; /// done in integration calls, there is no performance hit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:122,integrat,integrating,122,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['integrat'],"['integrating', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return field value as binary array.; /// Memory at 'mem' will be reallocated and size updated; /// to fit the data if not large enough.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/sqlite/src/TSQLiteStatement.cxx:172,update,updated,172,sql/sqlite/src/TSQLiteStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/sqlite/src/TSQLiteStatement.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return function representing moment of p.d.f (normalized w.r.t given observables) of given order.; /// \param[in] obs Observable to calculate the moments for; /// \param[in] normObs Normalise w.r.t. these observables; /// \param[in] order Order of the moment; /// \param[in] central If true, the central moment is given by \f$ \langle (x- \langle x \rangle )^2 \rangle \f$; /// \param[in] takeRoot Calculate the square root; /// \param[in] intNormObs If true, the moment of the function integrated over all normalization observables is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:573,integrat,integrated,573,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return function value requested bu present configuration; ///; /// If integration is required, the function value integrated; /// over the bin volume divided by the bin volume is returned,; /// otherwise the value at the bin center is returned.; /// The bin volume is defined by the error on the 'X' coordinates; ///; /// If an extended p.d.f. is used as function, its value is; /// also multiplied by the expected number of events here",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:129,configurat,configuration,129,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,3,"['configurat', 'integrat']","['configuration', 'integrated', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return integral identified by 'code'. The actual integration; /// is deferred to RooDataHist::sum() which implements partial; /// or complete summation over the histograms contents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:135,integrat,integration,135,roofit/roofitcore/src/RooHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return integral identified by 'code'. The actual integration; /// is deferred to RooDataHist::sum() which implements partial; /// or complete summation over the histograms contents.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:135,integrat,integration,135,roofit/roofitcore/src/RooHistPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return l-value pointer to contents. If the contents derive from RooAbsLValue or RooAbsCategoryLValue,; /// the conversion is safe, and the function directly returns the pointer using a static_cast.; /// If the template parameter of this proxy is not an LValue type, then; /// - in a debug build, a dynamic_cast with an assertion is used.; /// - in a release build, a static_cast is forced, irrespective of what the type of the object actually is. This; /// is dangerous, but equivalent to the behaviour before refactoring the RooFit proxies.; /// \deprecated This function is unnecessary if the template parameter is RooAbsRealLValue (+ derived types) or; /// RooAbsCategoryLValue (+derived types), as arg() will always return the correct type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h:436,release,release,436,roofit/roofitcore/inc/RooTemplateProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h,1,['release'],['release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return list containing the TFunctions currently defined.; /// Since functions are created and deleted during execution of the; /// program, we need to update the list of functions every time we; /// execute this method. However, when calling this function in; /// a (tight) loop where no interpreter symbols will be created; /// you can set load=kFALSE (default).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:237,update,update,237,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return list containing the TGlobals currently defined.; /// Since globals are created and deleted during execution of the; /// program, we need to update the list of globals every time we; /// execute this method. However, when calling this function in; /// a (tight) loop where no interpreter symbols will be created; /// you can set load=kFALSE (default).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:233,update,update,233,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return list of (partial) integrals of product terms for integration; /// of p.d.f over observables iset while normalization over observables nset.; /// Also return list of normalization sets to be used to evaluate; /// each component in the list correctly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:142,integrat,integration,142,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return minimum dimensions of numeric integration for which values are cached.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:123,integrat,integration,123,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return observable in nset to be cached by RooAbsCachedPdf; /// this is always the x observable that is integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:189,integrat,integrated,189,roofit/roofitcore/src/RooNumRunningInt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return product of jacobian terms originating from analytical integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:147,integrat,integration,147,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return prototype integrator with given (class) name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:103,integrat,integrator,103,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,1,['integrat'],['integrator']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to instance of default numeric integrator configuration object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:134,integrat,integrator,134,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,4,"['configurat', 'integrat']","['configuration', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return section with configuration parameters for integrator with given (class) name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:106,configurat,configuration,106,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,4,"['configurat', 'integrat']","['configuration', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return the numeric MC generator configuration used for this object. If; /// a specialized configuration was associated with this object, that configuration; /// is returned, otherwise the default configuration for all RooAbsReals is returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:118,configurat,configuration,118,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,4,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return the numeric integration configuration used for this object. If; /// a specialized configuration was associated with this object, that configuration; /// is returned, otherwise the default configuration for all RooAbsReals is returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:105,integrat,integration,105,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,10,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Return the parameters of the cache created by RooAbsCachedPdf.; /// These are always the input functions parameter, but never the; /// integrated variable x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:221,integrat,integrated,221,roofit/roofitcore/src/RooNumRunningInt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Returns a TVirtualIndex for a tree which holds the entry with the specified; /// major and minor values and the number of that tree.; /// If the index for that tree was created by this object it's set to the tree.; /// The tree index should be later released using ReleaseSubTreeIndex();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:336,release,released,336,tree/treeplayer/src/TChainIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx,2,"['Release', 'release']","['ReleaseSubTreeIndex', 'released']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Returns a cloned version of fPassedHistogram; ///; /// Notes:; /// - The histogram is filled with unit weights. You might want to scale; /// it with the global weight GetWeight().; /// - The returned object is owned by the user who has to care about the; /// deletion of the new TH1 object.; /// - This histogram is by default NOT attached to the current directory; /// to avoid duplication of data. If you want to store it automatically; /// during the next TFile::Write() command, you have to attach it to; /// the corresponding directory.; ///; /// ~~~~~~~{.cpp}; /// TFile* pFile = new TFile(""passed.root"",""update"");; /// TEfficiency* pEff = (TEfficiency*)gDirectory->Get(""my_eff"");; /// TH1* copy = pEff->GetCopyPassedHisto();; /// copy->SetDirectory(gDirectory);; /// pFile->Write();; /// ~~~~~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:697,update,update,697,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Returns a cloned version of fTotalHistogram; ///; /// Notes:; /// - The histogram is filled with unit weights. You might want to scale; /// it with the global weight GetWeight().; /// - The returned object is owned by the user who has to care about the; /// deletion of the new TH1 object.; /// - This histogram is by default NOT attached to the current directory; /// to avoid duplication of data. If you want to store it automatically; /// during the next TFile::Write() command, you have to attach it to; /// the corresponding directory.; ///; /// ~~~~~~~{.cpp}; /// TFile* pFile = new TFile(""total.root"",""update"");; /// TEfficiency* pEff = (TEfficiency*)gDirectory->Get(""my_eff"");; /// TH1* copy = pEff->GetCopyTotalHisto();; /// copy->SetDirectory(gDirectory);; /// pFile->Write();; /// ~~~~~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:695,update,update,695,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Returns a pointer to the histogram used to draw the axis.; /// Takes into account following cases.; ///; /// 1. if `fHistogram` exists it is returned; /// 2. if `fHistogram` doesn't exists and `gPad` exists `gPad` is updated. That; /// may trigger the creation of `fHistogram`. If `fHistogram` still does not; /// exit but `hframe` does (if user called `TPad::DrawFrame`) the pointer to; /// `hframe` histogram is returned; /// 3. after the two previous steps, if `fHistogram` still doesn't exist, then; /// it is created.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx:303,update,updated,303,hist/hist/src/TMultiGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Returns methodarg list and additionally updates fDataMember in TMethod by; /// calling FindDataMember();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:126,update,updates,126,core/meta/src/TMethod.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the color index of the bin (i,j).; ///; /// This function should be used after an histogram has been plotted with the; /// option COL or COLZ like in the following example:; ///; /// h2->Draw(""COLZ"");; /// gPad->Update();; /// TPaletteAxis *palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; /// Int_t ci = palette->GetBinColor(20,15);; ///; /// Then it is possible to retrieve the RGB components in the following way:; ///; /// TColor *c = gROOT->GetColor(ci);; /// float x,y,z;; /// c->GetRGB(x,y,z);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:306,Update,Update,306,hist/histpainter/src/TPaletteAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the color index of the given z value; ///; /// This function should be used after an histogram has been plotted with the; /// option COL or COLZ like in the following example:; ///; /// h2->Draw(""COLZ"");; /// gPad->Update();; /// TPaletteAxis *palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; /// Int_t ci = palette->GetValueColor(30.);; ///; /// Then it is possible to retrieve the RGB components in the following way:; ///; /// TColor *c = gROOT->GetColor(ci);; /// float x,y,z;; /// c->GetRGB(x,y,z);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:309,Update,Update,309,hist/histpainter/src/TPaletteAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the default numeric MC generator configuration for all RooAbsReals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:127,configurat,configuration,127,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the default numeric integration configuration for all RooAbsReals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:114,integrat,integration,114,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the specialized integrator configuration for _this_ RooAbsReal.; /// If this object has no specialized configuration, a null pointer is returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:110,integrat,integrator,110,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,3,"['configurat', 'integrat']","['configuration', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the specialized integrator configuration for _this_ RooAbsReal.; /// If this object has no specialized configuration, a null pointer is returned,; /// unless createOnTheFly is true in which case a clone of the default integrator; /// configuration is created, installed as specialized configuration, and returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:110,integrat,integrator,110,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,14,"['configurat', 'install', 'integrat']","['configuration', 'installed', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the specialized integrator configuration for _this_ RooAbsReal.; /// If this object has no specialized configuration, a null pointer is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:110,integrat,integrator,110,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,3,"['configurat', 'integrat']","['configuration', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the state of Toggle according to its current value and; /// fOnValue, returns true if they match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:107,Toggle,Toggle,107,core/gui/src/TToggle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Rollback all SQL operations, done after start transaction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:86,Rollback,Rollback,86,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['Rollback'],['Rollback']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Rollback all operations, done after StartTransaction() call.; /// Database should return to initial state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:86,Rollback,Rollback,86,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['Rollback'],['Rollback']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Rollback changes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx:86,Rollback,Rollback,86,sql/mysql/src/TMySQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx,1,['Rollback'],['Rollback']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Rollback transaction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:86,Rollback,Rollback,86,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['Rollback'],['Rollback']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Routines called by the constructor and Update to reset the member's; /// information.; /// afterReading is set when initializing after reading through Streamer().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:125,Update,Update,125,core/meta/src/TDataMember.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Run a fixed scan or the automatic scan depending on the configuration.; /// Return if needed a copy of the result object which will be managed by the user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:142,configurat,configuration,142,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Run the $ROOTSYS/test/Event program in several configurations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx:133,configurat,configurations,133,test/stress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx,1,['configurat'],['configurations']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Save Directory keys and header; ///; /// If the directory has been modified (fModified set), write the keys; /// and the directory header. This function assumes the cd is correctly set.; ///; /// It is recommended to use this function in the following situation:; /// Assume a process1 using a directory in Update mode; /// - New objects or modified objects have been written to the directory.; /// - You do not want to close the file.; /// - You want your changes be visible from another process2 already connected; /// to this directory in read mode.; /// - Call this function.; /// - In process2, use TDirectoryFile::ReadKeys to refresh the directory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:393,Update,Update,393,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Save actual configuration in config file ""filename"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:98,configurat,configuration,98,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Save into the `<datasetdir>/dataset.list` file the name of the last updated; /// or created or modified dataset; /// Returns 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:154,update,updated,154,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Save into the `<datasetdir>/kDataSet_DataSetList` file the name of the updated; /// or created or modified dataset. For still existing datasets, fill the; /// modification date in seconds anf the checksum.; /// Returns 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:157,update,updated,157,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Save the graph as .csv, .tsv or .txt. In case of any other extension, fall; /// back to TObject::SaveAs; ///; /// The result can be immediately imported into Excel, gnuplot, Python or whatever,; /// without the needing to install pyroot, etc.; ///; /// \param filename the name of the file where to store the graph; /// \param option some tuning options; ///; /// The file extension defines the delimiter used:; /// - `.csv` : comma; /// - `.tsv` : tab; /// - `.txt` : space; ///; /// If option = ""title"" a title line is generated with the axis titles.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:308,install,install,308,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['install'],['install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Save the histogram as .csv, .tsv or .txt. In case of any other extension, fall; /// back to TObject::SaveAs, which saves as a .C macro (but with the file name; /// extension specified by the user); ///; /// The Under/Overflow bins are also exported (as first and last lines); /// The fist 2 columns are the lower and upper edges of the bins; /// Column 3 contains the bin contents; /// The last column contains the error in y. If errors are not present, the column; /// is left empty; ///; /// The result can be immediately imported into Excel, gnuplot, Python or whatever,; /// without the needing to install pyroot, etc.; ///; /// \param filename the name of the file where to store the histogram; /// \param option some tuning options; ///; /// The file extension defines the delimiter used:; /// - `.csv` : comma; /// - `.tsv` : tab; /// - `.txt` : space; ///; /// If option = ""title"" a title line is generated. If the y-axis has a title,; /// this title is displayed as column 3 name, otherwise, it shows ""BinContent""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:688,install,install,688,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['install'],['install']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Saves xml structures to the file; /// xml elements are kept in list of TKeyXML objects; /// When saving, all this elements are linked to root xml node; /// At the end StreamerInfo structures are added; /// After xml document is saved, all nodes will be unlinked from root node; /// and kept in memory.; /// Only Close() or destructor release memory, used by xml structures",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx:420,release,release,420,io/xml/src/TXMLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx,1,['release'],['release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Search along the line defined by direction.; /// buffer is not used but is updated with the new dw; /// so that it can be used by a later stochastic step.; /// It returns true if the line search fails.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:161,update,updated,161,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// See TBasket::Update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasketSQL.cxx:99,Update,Update,99,tree/tree/src/TBasketSQL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasketSQL.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Select a toggle.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:95,toggle,toggle,95,core/gui/src/TToggleGroup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx,1,['toggle'],['toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Select an element.; /// Now it only calls EditElement() - should also update selection state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveManager.cxx:156,update,update,156,graf3d/eve/src/TEveManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveManager.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Selector a toggle.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx:97,toggle,toggle,97,core/gui/src/TToggleGroup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggleGroup.cxx,1,['toggle'],['toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set (or update) query in archived state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TQueryResult.cxx:94,update,update,94,tree/tree/src/TQueryResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TQueryResult.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set (or update) the which tree to read from, passing the name of a tree in a; /// directory.; ///; /// \param keyname - name of the tree in `dir`; /// \param dir - the `TDirectory` to load `keyname` from (or gDirectory if `nullptr`); /// \param entryList - the `TEntryList` to attach to the `TTreeReader`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:94,update,update,94,tree/treeplayer/src/TTreeReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set (or update) the which tree to read from. `tree` can be; /// a TTree or a TChain.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:94,update,update,94,tree/treeplayer/src/TTreeReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set a fit or plotting range.; /// Ranges can be selected for e.g. fitting, plotting or integration. Note that multiple; /// variables can have ranges with the same name, so multi-dimensional PDFs can be sliced.; /// See also the tutorial rf203_ranges.C; /// \param[in] name Name this range (so it can be selected later for fitting or; /// plotting). If the name is `nullptr`, the function sets the limits of the default range.; /// \param[in] min Miniminum of the range.; /// \param[in] max Maximum of the range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:173,integrat,integration,173,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set a new combo box value (normally update of text string in; /// fSelEntry is done via fSelEntry::Update()).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGComboBox.cxx:122,update,update,122,gui/gui/src/TGComboBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGComboBox.cxx,2,"['Update', 'update']","['Update', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set a perspective camera to supplied configuration - note this; /// does not need to be the current camera - though you will not see; /// the effect if it is not.; ///; /// - 'camera' defines the persp camera - one of kCameraPerspXOZ, kCameraPerspYOZ, kCameraPerspXOY; /// - 'fov' - field of view (lens angle) in degrees (clamped to 0.1 - 170.0); /// - 'dolly' - distance from 'center'; /// - 'center' - world position from which dolly/hRotate/vRotate are measured; /// camera rotates round this, always facing in (in center of viewport); /// - 'hRotate' - horizontal rotation from initial configuration in radians; /// - 'vRotate' - vertical rotation from initial configuration in radians",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx:123,configurat,configuration,123,graf3d/gl/src/TGLViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx,3,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set an orthographic camera to supplied configuration - note this; /// does not need to be the current camera - though you will not see; /// the effect if it is not.; ///; /// 'camera' defines the ortho camera - one of kCameraOrthoXOY / XOZ / ZOY; /// 'left' / 'right' / 'top' / 'bottom' define the WORLD coordinates which; /// correspond with the left/right/top/bottom positions on the GL viewer viewport; /// E.g. for kCameraOrthoXOY camera left/right are X world coords,; /// top/bottom are Y world coords; /// As this is an orthographic camera the other axis (in eye direction) is; /// no relevant. The near/far clip planes are set automatically based in scene; /// contents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx:125,configurat,configuration,125,graf3d/gl/src/TGLViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set data, posted with the request; ///; /// If make_copy==kFALSE, data will be released with free(data) call; /// @deprecated Use signature with std::string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpCallArg.cxx:165,release,released,165,net/http/src/THttpCallArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpCallArg.cxx,1,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set depth coordinate for the element.; /// Bounding-box should also be updated.; /// If projection type is 3D, this only sets fDepth member.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionBases.cxx:157,update,updated,157,graf3d/eve/src/TEveProjectionBases.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionBases.cxx,2,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set file where this branch writes/reads its buffers.; /// By default the branch buffers reside in the file where the; /// Tree was created.; /// If the file name where the tree was created is an absolute; /// path name or an URL (e.g. or root://host/...); /// and if the fname is not an absolute path name or an URL then; /// the path of the tree file is prepended to fname to make the; /// branch file relative to the tree file. In this case one can; /// move the tree + all branch files to a different location in; /// the file system and still access the branch files.; /// The ROOT file will be connected only when necessary.; /// If called by TBranch::Fill (via TBasket::WriteFile), the file; /// will be created with the option ""recreate"".; /// If called by TBranch::GetEntry (via TBranch::GetBasket), the file; /// will be opened in read mode.; /// To open a file in ""update"" mode or with a certain compression; /// level, use TBranch::SetFile(TFile *file).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:961,update,update,961,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set file where this branch writes/reads its buffers.; /// By default the branch buffers reside in the file where the; /// Tree was created.; /// If the file name where the tree was created is an absolute; /// path name or an URL (e.g. root://host/...); /// and if the fname is not an absolute path name or an URL then; /// the path of the tree file is prepended to fname to make the; /// branch file relative to the tree file. In this case one can; /// move the tree + all branch files to a different location in; /// the file system and still access the branch files.; /// The ROOT file will be connected only when necessary.; /// If called by TBranch::Fill (via TBasket::WriteFile), the file; /// will be created with the option ""recreate"".; /// If called by TBranch::GetEntry (via TBranch::GetBasket), the file; /// will be opened in read mode.; /// To open a file in ""update"" mode or with a certain compression; /// level, use TBranch::SetFile(TFile *file).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:958,update,update,958,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set iconbox's sort mode and update menu radio buttons accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowserLite.cxx:114,update,update,114,gui/gui/src/TRootBrowserLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowserLite.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set iconbox's view mode and update menu and toolbar buttons accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowserLite.cxx:114,update,update,114,gui/gui/src/TRootBrowserLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowserLite.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set main color of the element.; ///; ///; /// List-tree-items are updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:152,update,updated,152,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set render state of this element's children, i.e. if they will; /// be published on next scene update pass.; /// Returns true if the state has changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:181,update,update,181,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set render state of this element, i.e. if it will be published; /// on next scene update pass.; /// Returns true if the state has changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:168,update,update,168,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set state of title-bar. This toggles between the display of the full; /// title-bar and 4-pixel-high mini-bar.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveWindow.cxx:115,toggle,toggles,115,graf3d/eve/src/TEveWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveWindow.cxx,1,['toggle'],['toggles']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set the X range of the histogram to be used in the fit.; /// Use ReleaseRangeX() to go back to fitting the full histogram.; /// The consistency check ensures that no empty fit range occurs (and also; /// recomputes the bin content integrals).; /// \param[in] low lower X bin number; /// \param[in] high upper X bin number",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:151,Release,ReleaseRangeX,151,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['Release'],['ReleaseRangeX']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set the Y range of the histogram to be used in the fit (2D or 3D histograms only).; /// Use ReleaseRangeY() to go back to fitting the full histogram.; /// The consistency check ensures that no empty fit range occurs (and also; /// recomputes the bin content integrals).; /// \param[in] low lower X bin number; /// \param[in] high upper X bin number",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:178,Release,ReleaseRangeY,178,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['Release'],['ReleaseRangeY']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set the Z range of the histogram to be used in the fit (3D histograms only).; /// Use ReleaseRangeY() to go back to fitting the full histogram.; /// The consistency check ensures that no empty fit range occurs (and also; /// recomputes the bin content integrals).; /// \param[in] low lower X bin number; /// \param[in] high upper X bin number",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:172,Release,ReleaseRangeY,172,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['Release'],['ReleaseRangeY']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set the given configuration as default numeric MC generator; /// configuration for this object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:100,configurat,configuration,100,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set the given integrator configuration as default numeric integration; /// configuration for this object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:100,integrat,integrator,100,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,4,"['configurat', 'integrat']","['configuration', 'integration', 'integrator']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set the random generator sequence; /// if seed is 0 (default value) a TUUID is generated and used to fill; /// the first 8 integers of the seed array.; /// In this case the seed is guaranteed to be unique in space and time.; /// Use upgraded seeding procedure to fix a known problem when seeding with values; /// with many zero in the bit pattern (like 2**28).; /// see http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom3.cxx:319,upgrade,upgraded,319,math/mathcore/src/TRandom3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom3.cxx,1,['upgrade'],['upgraded']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set the required integration precision, see TF1::Integral()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx:103,integrat,integration,103,hist/hist/src/TBinomialEfficiencyFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set the value of the constant for the TF2; ///; /// constant in X when projecting along Y; /// constant in Y when projecting along X; /// The function title is set to include the value of the constant; /// The current pad is updated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF12.cxx:311,update,updated,311,hist/hist/src/TF12.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF12.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set track's propagator.; /// Reference counts of old and new propagator are updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveTrack.cxx:162,update,updated,162,graf3d/eve7/src/REveTrack.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveTrack.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set track's render style.; /// Reference counts of old and new propagator are updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrack.cxx:164,update,updated,164,graf3d/eve/src/TEveTrack.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrack.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Set up the static configuration variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSSLSocket.cxx:104,configurat,configuration,104,net/net/src/TSSLSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSSLSocket.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Sets for parameter number ipar initial parameter value,; /// name parname, initial error verr and limits vlow and vhigh; /// - If vlow = vhigh but not equal to zero, parameter will be fixed.; /// - If vlow = vhigh = 0, parameter is released and its limits are discarded",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:318,release,released,318,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the button group to be exclusive if enable is kTRUE,; /// or to be non-exclusive if enable is kFALSE.; /// An exclusive button group switches off all other toggle buttons when; /// one is switched on. This is ideal for groups of radio-buttons; /// A non-exclusive group allow many buttons to be switched on at the same; /// time. The default setting is kFALSE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx:247,toggle,toggle,247,gui/gui/src/TGButtonGroup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx,1,['toggle'],['toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the number of passed events in the given global bin; ///; /// returns ""true"" if the number of passed events has been updated; /// otherwise ""false"" ist returned; ///; /// Note: - requires: 0 <= events <= fTotalHistogram->GetBinContent(bin)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:208,update,updated,208,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the number of total events in the given global bin; ///; /// returns ""true"" if the number of total events has been updated; /// otherwise ""false"" ist returned; ///; /// Note: - requires: fPassedHistogram->GetBinContent(bin) <= events",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:206,update,updated,206,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the value of toggle and modifies its state according to whether; /// the value is equal to fOnValue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:104,toggle,toggle,104,core/gui/src/TToggle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx,1,['toggle'],['toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the value of toggle to fOnValue or fOffValue according to passed; /// argument.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:104,toggle,toggle,104,core/gui/src/TToggle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx,1,['toggle'],['toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Sets top node pointer and updates view",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx:112,update,updates,112,graf3d/gviz3d/src/TStructViewerGUI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Settings have changed, update GUI accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx:109,update,update,109,gui/sessionviewer/src/TSessionDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx,3,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Setup Include and Macro paths.; /// Since inclusion into ROOT this does nothing but could; /// potentially be reactivated if some common macros are established; /// and shipped with binary ROOT (in macros/eve). For example, these; /// might be used to spawn specific GUI / GL configurations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx:362,configurat,configurations,362,graf3d/eve/src/TEveUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx,1,['configurat'],['configurations']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Setup the clip box with min/max points directly.; ///; /// This only makes sense if you disable auto-update of the; /// clip-object:; ///; /// gl_viewer->SetClipAutoUpdate(kFALSE).; ///; /// After calling this also call gl_viewer->RefreshPadEditor(gl_viewer); /// and gl_viewer->RequestDraw().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLClip.cxx:187,update,update,187,graf3d/gl/src/TGLClip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLClip.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Setup the clipping plane by point and normal.; /// Length of the normal determines the size of the plane drawn in; /// GL viewer. The normal points into the direction of visible half-plane.; ///; /// This only makes sense if you disable auto-update of the; /// clip-object:; ///; /// gl_viewer->SetClipAutoUpdate(kFALSE).; ///; /// After calling this also call gl_viewer->RefreshPadEditor(gl_viewer); /// and gl_viewer->RequestDraw().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLClip.cxx:328,update,update,328,graf3d/gl/src/TGLClip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLClip.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Shape has been modified.; /// Update editor if we're still shown. Otherwise unref.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPShapeObjEditor.cxx:116,Update,Update,116,graf3d/gl/src/TGLPShapeObjEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPShapeObjEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Short cut to call Modified() and Update() in a single call.; /// On Mac with Cocoa, it performs an additional ProcessEvents().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:119,Update,Update,119,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Show/hide options frame and update button text accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx:114,update,update,114,gui/sessionviewer/src/TSessionDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot called when the user click on the run time update check button.; /// If b=kTRUE, the user asks for a real time preview.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:134,update,update,134,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot called when the user clicks on a TCanvas or on any object inside; /// a TCanvas. Update the pointers to the current pad and the current object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:172,Update,Update,172,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot called when the user clicks on an object inside a canvas.; /// Updates pointers to the parent pad and the selected object; /// for fitting (if suitable).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:154,Update,Updates,154,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot called when the user clicks on the 'Update preview' button.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:127,Update,Update,127,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot called when the user close a TCanvas. Update the labels and the; /// pointers to the current pad and the current object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:129,Update,Update,129,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot called when the user select an item in the available styles' list.; /// Update the preview, the editor, the status bar. The current selected; /// style is changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:163,Update,Update,163,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot connected to the rebin slider in case of a not ntuple histogram; /// Updates some other widgets which are related to the rebin slider.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:160,Update,Updates,160,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot connected to the rebin slider in case of an ntuple histogram.; /// It updates the BinNumberEntryField during the BinSlider movement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:161,update,updates,161,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot connected to the rebin slider in case of an ntuple histogram.; /// Updates the BinNumberEntryField during the BinSlider movement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx:158,Update,Updates,158,gui/ged/src/TH2Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot connected to the rebin slider in case of no ntuple histogram.; /// It updates some other widgets related to the rebin slider.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx:161,update,updates,161,gui/ged/src/TH2Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for bool parameter update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveParamList.cxx:110,update,update,110,graf3d/eve/src/TEveParamList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveParamList.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for float parameter update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveParamList.cxx:111,update,update,111,graf3d/eve/src/TEveParamList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveParamList.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for global TGLViewer::Clicked().; ///; /// The obj is dyn-casted to the REveElement and global selection is; /// updated accordingly.; ///; /// If REveElement::IsPickable() returns false, the element is not; /// selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveViewer.cxx:204,update,updated,204,graf3d/eve7/src/REveViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveViewer.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for global TGLViewer::Clicked().; ///; /// The obj is dyn-casted to the TEveElement and global selection is; /// updated accordingly.; ///; /// If TEveElement::IsPickable() returns false, the element is not; /// selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveViewer.cxx:204,update,updated,204,graf3d/eve/src/TEveViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveViewer.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for global TGLViewer::MouseOver() signal.; ///; /// The attempt is made to determine the REveElement being; /// represented by the physical shape and global highlight is updated; /// accordingly.; ///; /// If REveElement::IsPickable() returns false, the element is not; /// highlighted.; ///; /// Highlight is always in single-selection mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveViewer.cxx:261,update,updated,261,graf3d/eve7/src/REveViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveViewer.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for global TGLViewer::MouseOver() signal.; ///; /// The attempt is made to determine the TEveElement being; /// represented by the physical shape and global highlight is updated; /// accordingly.; ///; /// If TEveElement::IsPickable() returns false, the element is not; /// highlighted.; ///; /// Highlight is always in single-selection mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveViewer.cxx:261,update,updated,261,graf3d/eve/src/TEveViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveViewer.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for global TGLViewer::ReClicked().; ///; /// The obj is dyn-casted to the REveElement and global selection is; /// updated accordingly.; ///; /// If REveElement::IsPickable() returns false, the element is not; /// selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveViewer.cxx:206,update,updated,206,graf3d/eve7/src/REveViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveViewer.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for global TGLViewer::ReClicked().; ///; /// The obj is dyn-casted to the TEveElement and global selection is; /// updated accordingly.; ///; /// If TEveElement::IsPickable() returns false, the element is not; /// selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveViewer.cxx:206,update,updated,206,graf3d/eve/src/TEveViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveViewer.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for global TGLViewer::ReMouseOver().; ///; /// The obj is dyn-casted to the REveElement and global selection is; /// updated accordingly.; ///; /// If REveElement::IsPickable() returns false, the element is not; /// selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveViewer.cxx:208,update,updated,208,graf3d/eve7/src/REveViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveViewer.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for global TGLViewer::ReMouseOver().; ///; /// The obj is dyn-casted to the TEveElement and global selection is; /// updated accordingly.; ///; /// If TEveElement::IsPickable() returns false, the element is not; /// selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveViewer.cxx:208,update,updated,208,graf3d/eve/src/TEveViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveViewer.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for global TGLViewer::UnClicked().; ///; /// The obj is dyn-casted to the REveElement and global selection is; /// updated accordingly.; ///; /// If REveElement::IsPickable() returns false, the element is not; /// selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveViewer.cxx:206,update,updated,206,graf3d/eve7/src/REveViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveViewer.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for global TGLViewer::UnClicked().; ///; /// The obj is dyn-casted to the TEveElement and global selection is; /// updated accordingly.; ///; /// If TEveElement::IsPickable() returns false, the element is not; /// selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveViewer.cxx:206,update,updated,206,graf3d/eve/src/TEveViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveViewer.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for global TGLViewer::UnMouseOver().; ///; /// The obj is dyn-casted to the REveElement and global selection is; /// updated accordingly.; ///; /// If REveElement::IsPickable() returns false, the element is not; /// selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveViewer.cxx:208,update,updated,208,graf3d/eve7/src/REveViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveViewer.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for global TGLViewer::UnMouseOver().; ///; /// The obj is dyn-casted to the TEveElement and global selection is; /// updated accordingly.; ///; /// If TEveElement::IsPickable() returns false, the element is not; /// selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveViewer.cxx:208,update,updated,208,graf3d/eve/src/TEveViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveViewer.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for integer parameter update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveParamList.cxx:113,update,update,113,graf3d/eve/src/TEveParamList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveParamList.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot to update alpha value on click on Slider",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TAttFillEditor.cxx:94,update,update,94,gui/ged/src/TAttFillEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TAttFillEditor.cxx,4,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot to update the entries fields from the slider position.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:94,update,update,94,tree/treeviewer/src/TParallelCoordEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot to update the weight cut entry field from the slider position.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:94,update,update,94,tree/treeviewer/src/TParallelCoordEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Slot to update the weight cut.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:94,update,update,94,tree/treeviewer/src/TParallelCoordEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Smooth a curve given by N points.; ///; /// The original code is from an underlaying routine for Draw based on the; /// CERN GD3 routine TVIPTE:; ///; /// Author - Marlow etc. Modified by - P. Ward Date - 3.10.1973; ///; /// This method draws a smooth tangentially continuous curve through; /// the sequence of data points P(I) I=1,N where P(I)=(X(I),Y(I)).; /// The curve is approximated by a polygonal arc of short vectors.; /// The data points can represent open curves, P(1) != P(N) or closed; /// curves P(2) == P(N). If a tangential discontinuity at P(I) is; /// required, then set P(I)=P(I+1). Loops are also allowed.; ///; /// Reference Marlow and Powell, Harwell report No.R.7092.1972; /// MCCONALOGUE, Computer Journal VOL.13, NO4, NOV1970P p392 6; ///; /// - npoints : Number of data points.; /// - x : Abscissa; /// - y : Ordinate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:351,continuous,continuous,351,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['continuous'],['continuous']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Special version of RooAbsReal::createProjection that deals with; /// projections of projections. Instead of integrating twice, a new; /// RooProjectedPdf is returned that is configured to perform the; /// complete integration in one step",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:194,integrat,integrating,194,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,2,['integrat'],"['integrating', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Start background update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:103,update,update,103,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Start user transaction.; ///; /// This can be usesful, when big number of objects should be stored in; /// data base and commitment required only if all operations were successful.; /// In that case in the end of all operations method Commit() should be; /// called. If operation on user-level is looks like not successful,; /// method Rollback() will return database data and TSQLFile instance to; /// previous state.; /// In MySQL not all tables types support transaction mode of operation.; /// See SetTablesType() method for details .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:422,Rollback,Rollback,422,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['Rollback'],['Rollback']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Store given arrays of integer codes, and up to four RooArgSets in; /// the registry (each setX pointer may be null). The registry; /// clones all RooArgSets internally so the RooArgSets passed as; /// arguments do not need to live beyond the store() call. The return; /// value is a unique master code for the given configuration of; /// integers and RooArgSets. If an identical combination is; /// previously stored in the registry no objects are stored and the; /// unique code of the existing entry is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAICRegistry.cxx:402,configurat,configuration,402,roofit/roofitcore/src/RooAICRegistry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAICRegistry.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// TDOMParser destructor, it calls ReleaseUnderlying().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TDOMParser.cxx:118,Release,ReleaseUnderlying,118,io/xmlparser/src/TDOMParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TDOMParser.cxx,1,['Release'],['ReleaseUnderlying']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// TFormLeafInfo overload: Update (and propagate) cached information",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx:110,Update,Update,110,tree/treeplayer/src/TFormLeafInfoReference.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// TODO --> adapt to variable,target,spectator selection; /// update min and max of a given variable (target) and a given transformation method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:145,update,update,145,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Tell users (REveCaloViz instances using this data) that data; /// has changed and they should update the limits/scales etc.; /// This is done by calling REveCaloViz::DataChanged().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveCaloData.cxx:180,update,update,180,graf3d/eve7/src/REveCaloData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveCaloData.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Tell users (TEveCaloViz instances using this data) that cell selection; /// has changed and they should update selection cache if necessary.; /// This is done by calling TEveCaloViz::CellSelectionChanged().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx:190,update,update,190,graf3d/eve/src/TEveCaloData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Tell users (TEveCaloViz instances using this data) that data; /// has changed and they should update the limits/scales etc.; /// This is done by calling TEveCaloViz::DataChanged().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx:180,update,update,180,graf3d/eve/src/TEveCaloData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Terminate Session : save configuration, clean temporary files and close; /// Proof connections.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:111,configurat,configuration,111,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Test if lock is a valid type to take/release.; /// kUnlocked is never valid in these cases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLockable.cxx:123,release,release,123,graf3d/gl/src/TGLLockable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLockable.cxx,1,['release'],['release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Test the different configurations/states of a split button.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressGUI.cxx:105,configurat,configurations,105,test/stressGUI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressGUI.cxx,1,['configurat'],['configurations']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// The TTreeReader has switched to a new TTree. Update the leaf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:131,Update,Update,131,tree/treeplayer/src/TTreeReaderValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// The core of the MD5 algorithm, this alters an existing MD5 hash to; /// reflect the addition of 16 longwords of new data. Update() blocks; /// the data and converts bytes into longwords for this routine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx:208,Update,Update,208,core/base/src/TMD5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// The operation is three steps:; /// - Step I. Make room for the incoming keys in RIGHTSIB.; /// - Step II. Move the items from THIS into RIGHTSIB.; /// - Step III. Update the length of THIS.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:249,Update,Update,249,core/cont/src/TBtree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// This function computes, to an attempted specified accuracy, the value of; /// the integral; ///; /// \param[in] n Number of dimensions [2,15]; /// \param[in] a,b One-dimensional arrays of length >= N . On entry A[i], and B[i],; /// contain the lower and upper limits of integration, respectively.; /// \param[in] maxpts Maximum number of function evaluations to be allowed.; /// maxpts >= 2^n +2*n*(n+1) +1; /// if maxpts<minpts, maxpts is set to 10*minpts; /// \param[in] epsrel Specified relative accuracy.; /// \param[in] epsabs Specified absolute accuracy.; /// The integration algorithm will attempt to reach either the relative or the absolute accuracy.; /// In case the maximum function called is reached the algorithm will stop earlier without having reached; /// the desired accuracy; ///; /// \param[out] relerr Contains, on exit, an estimation of the relative accuracy of the result.; /// \param[out] nfnevl number of function evaluations performed.; /// \param[out] ifail; /// \parblock; /// 0 Normal exit. At least minpts and at most maxpts calls to the function were performed.; ///; /// 1 maxpts is too small for the specified accuracy eps. The result and relerr contain the values obtainable for the; /// specified value of maxpts.; ///; /// 3 n<2 or n>15; /// \endparblock; ///; /// Method:; ///; /// The default method used is the Genz-Mallik adaptive multidimensional algorithm; /// using the class ROOT::Math::AdaptiveIntegratorMultiDim (see the reference documentation of the class); ///; /// Other methods can be used by setting ROOT::Math::IntegratorMultiDimOptions::SetDefaultIntegrator(); /// to different integrators.; /// Other possible integrators are MC integrators based on the ROOT::Math::GSLMCIntegrator class; /// Possible methods are : Vegas, Miser or Plain; /// IN case of MC integration the accuracy is determined by the number of function calls, one should be; /// careful not t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:356,integrat,integration,356,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// This function could be called TTreePlayer::UpdateFormulaLeaves, itself; /// called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:129,Update,UpdateFormulaLeaves,129,tree/treeplayer/src/TTreeFormulaManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx,2,"['Update', 'update']","['UpdateFormulaLeaves', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// This function forces RooRealIntegral to offer all integration dependents; /// to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; /// internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; /// to hidden Jacobian terms).; ///; /// RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; /// but feed them to the resolution models integration interface, which will; /// make the final determination on how to integrate these dependents.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:136,integrat,integration,136,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,5,['integrat'],"['integrate', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// This function installs a global IsA function for this class.; /// The global IsA function will be used if there is no local IsA function (fIsA); ///; /// A global IsA function has the signature:; ///; /// ~~~ {.cpp}; /// TClass *func( TClass *cl, const void *obj);; /// ~~~; ///; /// 'cl' is a pointer to the TClass object that corresponds to the; /// 'pointer type' used to retrieve the value 'obj'; ///; /// For example with:; /// ~~~ {.cpp}; /// TNamed * m = new TNamed(""example"",""test"");; /// TObject* o = m; /// ~~~; /// and; /// the global IsA function would be called with TObject::Class() as; /// the first parameter and the exact numerical value in the pointer; /// 'o'.; ///; /// In other word, inside the global IsA function. it is safe to C-style; /// cast the value of 'obj' into a pointer to the class described by 'cl'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,install,installs,100,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['install'],['installs']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// This function is called TTreePlayer::UpdateFormulaLeaves, itself; /// called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.; ///; /// A safer alternative would be to recompile the whole thing .... However; /// currently compile HAS TO be called from the constructor!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:123,Update,UpdateFormulaLeaves,123,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,2,"['Update', 'update']","['UpdateFormulaLeaves', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// This function may be called from a script to animate an X3D picture; /// px, py mouse position; ///command = 0 --- move to px,py; /// = w --- wireframe mode; /// = e --- hidden line mode; /// = r --- hidden surface mode; /// = u --- move object down; /// = i --- move object up; /// = o --- toggle controls style; /// = s --- toggle stereo display; /// = d --- toggle blue stereo view; /// = f --- toggle double buffer; /// = h --- move object right; /// = j --- move object forward; /// = k --- move object backward; /// = l --- move object left; /// = x a --- rotate about x; /// = y b --- rotate about y; /// = z c --- rotate about z; /// = 1 2 3 --- autorotate about x; /// = 4 5 6 --- autorotate about y; /// = 7 8 9 --- autorotate about z; /// = [ ] { } --- adjust focus; /// Example:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TViewerX3D.cxx:377,toggle,toggle,377,graf3d/x3d/src/TViewerX3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TViewerX3D.cxx,4,['toggle'],['toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// This inflates a basket in the cache.. passing the data to a new; /// buffer that will only wait there to be read...; /// This function is responsible to update corresponding elements in; /// fUnzipStatus, fUnzipChunks and fUnzipLen. Since we use atomic variables; /// in fUnzipStatus to exclusively unzip the basket, we must update; /// fUnzipStatus after fUnzipChunks and fUnzipLen and make sure fUnzipChunks; /// and fUnzipLen are ready before main thread fetch the data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:239,update,update,239,tree/tree/src/TTreeCacheUnzip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// This slot is activated when one of the buttons in the group emits the; /// Released() signal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx:161,Release,Released,161,gui/gui/src/TGButtonGroup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx,2,['Release'],['Released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// To release any existing document.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx:89,release,release,89,io/xmlparser/src/TXMLParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx,1,['release'],['release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle active state of listbox entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx:86,Toggle,Toggle,86,gui/gui/src/TGListBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx,2,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle batch mode. However, if the canvas is created without a window; /// then batch mode always stays set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:86,Toggle,Toggle,86,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle check button state of the node 'item'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx:86,Toggle,Toggle,86,gui/gui/src/TGListTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle editor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:86,Toggle,Toggle,86,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle event statusbar.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:86,Toggle,Toggle,86,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle information displayed in Analog Meter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx:86,Toggle,Toggle,86,gui/sessionviewer/src/TProofProgressDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle light on/off.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLightSet.cxx:86,Toggle,Toggle,86,graf3d/gl/src/TGLLightSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLightSet.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle pad auto execution of list of TExecs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:86,Toggle,Toggle,86,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle state of the 'Edit Object' menu entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAViewer.cxx:86,Toggle,Toggle,86,graf3d/gl/src/TGLSAViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAViewer.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle state of the 'Ortho allow dolly' menu entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAViewer.cxx:86,Toggle,Toggle,86,graf3d/gl/src/TGLSAViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAViewer.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle state of the 'Ortho allow rotate' menu entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAViewer.cxx:86,Toggle,Toggle,86,graf3d/gl/src/TGLSAViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAViewer.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle the sort mode and set the ""sort button"" state accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFileBrowser.cxx:86,Toggle,Toggle,86,gui/gui/src/TGFileBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFileBrowser.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle toolbar.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:86,Toggle,Toggle,86,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggle tooltip display.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:86,Toggle,Toggle,86,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['Toggle'],['Toggle']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggles the Values and State of this object and connected data!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:86,Toggle,Toggles,86,core/gui/src/TToggle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx,1,['Toggle'],['Toggles']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Toggles the weight square correction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:86,Toggle,Toggles,86,roofit/roofitcore/src/RooNLLVarNew.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx,1,['Toggle'],['Toggles']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Tool for updating fgAuthInfo or fgProofAuthInfo; /// 'nin' contains list of last input information through (re)reading; /// of a rootauthrc-alike file. 'nin' info has priority.; /// 'std' is cleaned from inactive members.; /// 'nin' members used to update existing members in 'std' are; /// removed from 'nin', do that they do not leak; /// opt = ""P"" for proofauthinfo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:335,update,update,335,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Train the network.; /// nEpoch is the number of iterations.; /// option can contain:; /// - ""text"" (simple text output); /// - ""graph"" (evoluting graphical training curves); /// - ""update=X"" (step for the text/graph output update); /// - ""+"" will skip the randomisation and start from the previous values.; /// - ""current"" (draw in the current canvas); /// - ""minErrorTrain"" (stop when NN error on the training sample gets below minE; /// - ""minErrorTest"" (stop when NN error on the test sample gets below minE; /// All combinations are available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:267,update,update,267,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update GED editor if it is set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx:86,Update,Update,86,graf3d/gl/src/TGLViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update GUI components for embedded viewer selection change.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx:86,Update,Update,86,graf3d/gl/src/TGLViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update GUI components for embedded viewer selection change.; /// Override from TGLViewer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAViewer.cxx:86,Update,Update,86,graf3d/gl/src/TGLSAViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAViewer.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update GUI sliders from internal data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPShapeObjEditor.cxx:86,Update,Update,86,graf3d/gl/src/TGLPShapeObjEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPShapeObjEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update HLS text entries with HLS values of color c.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx:86,Update,Update,86,gui/gui/src/TGColorDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update MDI menu entries with current list of MDI child windows.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiMainFrame.cxx:86,Update,Update,86,gui/gui/src/TGMdiMainFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiMainFrame.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update Memory list view.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx:86,Update,Update,86,gui/sessionviewer/src/TSessionDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update Opacity text entry with alpha value of color c.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx:86,Update,Update,86,gui/gui/src/TGColorDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update RGB text entries with RGB values of color c.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx:86,Update,Update,86,gui/gui/src/TGColorDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update TClingClassInfo for a class (e.g. upon seeing a definition).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Update,Update,86,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update TGaxis attributes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:86,Update,Update,86,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update TMD5 object to reflect the concatenation of another buffer full; /// of bytes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx:86,Update,Update,86,core/base/src/TMD5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update X3D viewer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TViewerX3D.cxx:86,Update,Update,86,graf3d/x3d/src/TViewerX3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TViewerX3D.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update accumulated information about the elements of the collection; /// (e.g. fTotalSize). If 'avgsize' > 0, use an average file size of 'avgsize'; /// bytes when the size info is not available.; /// Also updates the meta data information by summarizing; /// the meta data of the contained objects.; /// Return -1 in case of any failure, 0 if the total size is exact, 1 if; /// incomplete, 2 if complete but (at least partially) estimated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileCollection.cxx:86,Update,Update,86,core/base/src/TFileCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileCollection.cxx,2,"['Update', 'update']","['Update', 'updates']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update after a change of file in a chain",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:86,Update,Update,86,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update all canvases at end the terminal input command.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Update,Update,86,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update an object (or all objects, if obj == 0) in shared memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx:86,Update,Update,86,io/io/src/TMapFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update automatic binning parameters for given object ""name"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:86,Update,Update,86,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update average.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx:86,Update,Update,86,hist/hist/src/TProfile2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update background.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldEditor.cxx:86,Update,Update,86,gui/guibuilder/src/TGuiBldEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update base-name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx:86,Update,Update,86,graf3d/gl/src/TGLViewerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update basket header and EntryOffset table.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx:86,Update,Update,86,tree/tree/src/TBasket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update border of selected frame.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldEditor.cxx:86,Update,Update,86,gui/guibuilder/src/TGuiBldEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update bounding box from external source.; /// We call abstract SetBBox() and propagate the change to all; /// attached physicals.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLObject.cxx:86,Update,Update,86,graf3d/gl/src/TGLObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLObject.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update branch addresses if a new object was created.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchObject.cxx:86,Update,Update,86,tree/tree/src/TBranchObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchObject.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update button slot. Updates scene",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx:86,Update,Update,86,graf3d/gviz3d/src/TStructViewerGUI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx,2,['Update'],"['Update', 'Updates']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update buttons state for the current query status.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:86,Update,Update,86,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update canvas pad buffers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:86,Update,Update,86,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update clip plane object to follow passed 'plane' equation. Center pivot; /// is shifted to nearest point on new plane.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLClip.cxx:86,Update,Update,86,graf3d/gl/src/TGLClip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLClip.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update content of the list tree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFileBrowser.cxx:86,Update,Update,86,gui/gui/src/TGFileBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFileBrowser.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update contents of cache histogram by resampling the input function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCachedReal.cxx:86,Update,Update,86,roofit/roofitcore/src/RooCachedReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCachedReal.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update contents of cache histogram by resampling the input p.d.f. Note that; /// the cache is filled with normalized p.d.f values so that the RooHistPdf; /// that represents the cache contents can be explicitly declared as self normalized; /// eliminating the need for superfluous numeric calculations of unit normalization.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCachedPdf.cxx:86,Update,Update,86,roofit/roofitcore/src/RooCachedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCachedPdf.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update current camera with GUI state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx:86,Update,Update,86,graf3d/gl/src/TGLViewerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update current division index and global matrix to point to a given slice.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoPatternFinder.cxx:86,Update,Update,86,geom/geom/src/TGeoPatternFinder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoPatternFinder.cxx,13,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update dependent elements' bounding box and mark scenes; /// containing element root or its children as requiring a repaint.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx:86,Update,Update,86,graf3d/eve/src/TEveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update dependent elements' bounding boxes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveProjectionManager.cxx:86,Update,Update,86,graf3d/eve7/src/REveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveProjectionManager.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update dialog to reflect current clicked object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoTabManager.cxx:86,Update,Update,86,geom/geombuilder/src/TGeoTabManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoTabManager.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update dir header in the file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:86,Update,Update,86,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update display.; /// mode : (1) update; /// (0) sync; ///; /// Synchronise client and server once (not permanent).; /// Copy the pixmap gCws->drawing on the window gCws->window; /// if the double buffer is on.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:86,Update,Update,86,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,"['Update', 'update']","['Update', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update display.; ///; /// \param [in] mode : (1) update (0) sync; ///; /// Synchronise client and server once (not permanent).; /// Copy the pixmap gCws->fDrawing on the window gCws->fWindow; /// if the double buffer is on.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx:86,Update,Update,86,graf2d/x11/src/TGX11.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx,2,"['Update', 'update']","['Update', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update draw stats, for newly drawn 'shape'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx:86,Update,Update,86,graf3d/gl/src/TGLScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update editor for a new selected box.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoBBoxEditor.cxx:86,Update,Update,86,geom/geombuilder/src/TGeoBBoxEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoBBoxEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update element flags when geometry is loaded from a file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:86,Update,Update,86,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update entry fields with query description values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx:86,Update,Update,86,gui/sessionviewer/src/TSessionDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx,2,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx:86,Update,Update,86,hist/hist/src/TProfile2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update fInfo (to 0 for unloading and non-zero for reloading).; /// This takes ownership of 'info'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodArg.cxx:86,Update,Update,86,core/meta/src/TMethodArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodArg.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update fProgressStatus",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:86,Update,Update,86,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update feedback histograms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:86,Update,Update,86,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update fields with values from session description desc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:86,Update,Update,86,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update file information when receiving the signal; /// DataDropped from TGTextEdit widget.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx:86,Update,Update,86,gui/gui/src/TGTextEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update file system combo box.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFSComboBox.cxx:86,Update,Update,86,gui/gui/src/TGFSComboBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFSComboBox.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update fill attributes via the pad editor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx:86,Update,Update,86,core/base/src/TVirtualPadEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update fit model; /// returns -1 if JSON fails; /// return 0 if nothing large changed; /// return 1 if important selection are changed and client need to be updated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx:86,Update,Update,86,gui/fitpanelv7/src/RFitPanel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update foreground.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldEditor.cxx:86,Update,Update,86,gui/guibuilder/src/TGuiBldEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update global rotation matrix/translation vector for this node; /// this function must be called before invoking Local2Master",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TGeometry.cxx:86,Update,Update,86,graf3d/g3d/src/TGeometry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TGeometry.cxx,2,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update graphics context with the values spcified in values->fMask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGGC.cxx:86,Update,Update,86,gui/gui/src/TGGC.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGGC.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update gui builder.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TRootGuiBuilder.cxx:86,Update,Update,86,gui/guibuilder/src/TRootGuiBuilder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TRootGuiBuilder.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update helix / B-field projection state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:86,Update,Update,86,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update helix for stepper RungeKutta.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:86,Update,Update,86,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update helix parameters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:86,Update,Update,86,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update icon & text listbox entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx:86,Update,Update,86,gui/gui/src/TGListBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update index category pointer, if it is contained in input argument vars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCompositeDataStore.cxx:86,Update,Update,86,roofit/roofitcore/src/RooCompositeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCompositeDataStore.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update info with the one in ha; /// Remaining methods, if any, get lower priority",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/THostAuth.cxx:86,Update,Update,86,net/auth/src/THostAuth.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/THostAuth.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update information shown on the status bar.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TRootGuiBuilder.cxx:86,Update,Update,86,gui/guibuilder/src/TRootGuiBuilder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TRootGuiBuilder.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update internally cached frustum values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx:86,Update,Update,86,graf3d/gl/src/TGLCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update key attributes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx:86,Update,Update,86,io/xml/src/TXMLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update layout hints of frame elements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGLayout.cxx:86,Update,Update,86,gui/gui/src/TGLayout.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGLayout.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update limits and notify data users.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx:86,Update,Update,86,graf3d/eve/src/TEveCaloData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx,4,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update line attributes via the pad editor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx:86,Update,Update,86,core/base/src/TVirtualPadEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update line style",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:86,Update,Update,86,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update line style listbox entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx:86,Update,Update,86,gui/gui/src/TGListBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update list of available data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx:86,Update,Update,86,gui/fitpanelv7/src/RFitPanel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update list of available functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx:86,Update,Update,86,gui/fitpanelv7/src/RFitPanel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update list of dataset present on the cluster.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:86,Update,Update,86,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update list of existing Proof sessions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:86,Update,Update,86,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,2,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update list of packages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:86,Update,Update,86,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update marker attributes via the pad editor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx:86,Update,Update,86,core/base/src/TVirtualPadEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update matrix so resulting transform has been rotated about 'pivot'; /// (in parent frame), round vector 'axis', through 'angle' (radians); /// Equivalent to glRotate function, but with addition of translation; /// and compounded on top of existing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:86,Update,Update,86,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update number entries when new frame selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldGeometryFrame.cxx:86,Update,Update,86,gui/guibuilder/src/TGuiBldGeometryFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldGeometryFrame.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update our internal bounding box (in global frame).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPhysicalShape.cxx:86,Update,Update,86,graf3d/gl/src/TGLPhysicalShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPhysicalShape.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update our plot normalization over our plot variable's fit range,; /// which will be determined by the first suitable object added to our plot.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:86,Update,Update,86,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,2,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update our y-axis limits to accommodate an object whose spread; /// in y is (ymin,ymax). Use the specified y-axis label if we don't; /// have one assigned already.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:86,Update,Update,86,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update output mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx:86,Update,Update,86,graf3d/gl/src/TGLViewerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update packetizer rates",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:86,Update,Update,86,proof/proofplayer/src/TPacketizerAdaptive.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update pad.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:86,Update,Update,86,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update pointer to current Tree and recompute pointers to the branches in the cache.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:86,Update,Update,86,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update positions of grid lines",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:86,Update,Update,86,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update progress bar and status labels.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:86,Update,Update,86,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,2,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update progress bar and status labels.; /// Use ""processed == total"" or ""processed < 0"" to indicate end of processing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx:86,Update,Update,86,gui/sessionviewer/src/TProofProgressDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx,2,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update query information (header) text view.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:86,Update,Update,86,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update rotator related variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx:86,Update,Update,86,graf3d/gl/src/TGLViewerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update scan counters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:86,Update,Update,86,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update sections according fShape.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoPconEditor.cxx:86,Update,Update,86,geom/geombuilder/src/TGeoPconEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoPconEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update selected frame.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldEditor.cxx:86,Update,Update,86,gui/guibuilder/src/TGuiBldEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update setting and cache on data changed.; /// Called from REvecaloData::BroadcastDataChange()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveCalo.cxx:86,Update,Update,86,graf3d/eve7/src/REveCalo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveCalo.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update setting and cache on data changed.; /// Called from TEvecaloData::BroadcastDataChange()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCalo.cxx:86,Update,Update,86,graf3d/eve/src/TEveCalo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCalo.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldHintsEditor.cxx:86,Update,Update,86,gui/guibuilder/src/TGuiBldHintsEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldHintsEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update stereo related variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx:86,Update,Update,86,graf3d/gl/src/TGLViewerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update tab file.; /// If ilck <= 0 open and lock the file; if ilck > 0, use file; /// descriptor ilck, which should correspond to an open and locked file.; /// If opt = -1 : delete file (backup saved in `<file>.bak`);; /// If opt = 0 : eliminate all inactive entries; /// (if line=""size"" act only if size > gMAXTABSIZE); /// if opt = 1 : append 'line'.; /// Returns -1 in case of error.; /// Returns offset for 'line' and token for opt = 1.; /// Returns new file size for opt = 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:86,Update,Update,86,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update temp matrix.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TGeometry.cxx:86,Update,Update,86,graf3d/g3d/src/TGeometry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TGeometry.cxx,2,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update text and picture of a listbox entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFSComboBox.cxx:86,Update,Update,86,gui/gui/src/TGFSComboBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFSComboBox.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update text attributes via the pad editor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx:86,Update,Update,86,core/base/src/TVirtualPadEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the RooAddPdf coefficients for a given normalization set and; /// projection configuration. The `coefCache` argument should have the same; /// size as `pdfList`. It needs to be initialized with the raw values of the; /// coefficients, as obtained from the `_coefList` proxy in the RooAddPdf. If; /// the last coefficient is not given, the initial value of the last element of; /// `_coefCache` does not matter. After this function, the `_coefCache` will be; /// filled with the correctly scaled coefficients for each pdf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddHelpers.cxx:86,Update,Update,86,roofit/roofitcore/src/RooAddHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddHelpers.cxx,2,"['Update', 'configurat']","['Update', 'configuration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the TFunction to reflect the new info.; ///; /// This can be used to implement unloading (info == 0) and then reloading; /// (info being the 'new' decl address).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:86,Update,Update,86,core/meta/src/TDataMember.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx,3,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the TFunctionTemplate to reflect the new info.; ///; /// This can be used to implement unloading (info == 0) and then reloading; /// (info being the 'new' decl address).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunctionTemplate.cxx:86,Update,Update,86,core/meta/src/TFunctionTemplate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunctionTemplate.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the TMethod to reflect the new info.; ///; /// This can be used to implement unloading (info == 0) and then reloading; /// (info being the 'new' decl address).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx:86,Update,Update,86,core/meta/src/TMethod.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethod.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the circular ntple",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx:86,Update,Update,86,proof/proofplayer/src/TPacketizerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx,2,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the coefficient values in the given cache element: calculate new remainder; /// fraction, normalize fractions obtained from extended ML terms to unity, and; /// multiply the various range and dimensional corrections needed in the; /// current use context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:86,Update,Update,86,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the coefficient values in the given cache element: calculate new remainder; /// fraction, normalize fractions obtained from extended ML terms to unity, and; /// multiply the various range and dimensional corrections needed in the; /// current use context.; ///; /// param[in] cache The cache element for the given normalization set that; /// stores the supplementary normalization values and; /// projection-related objects.; /// param[in] nset The set of variables to normalize over.; /// param[in] syncCoefValues If the initial values of the coefficients still; /// need to be copied from the `_coefList` elements to; /// the `_coefCache`. True by default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:86,Update,Update,86,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the component functions of the normalized sum",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1NormSum.cxx:86,Update,Update,86,hist/hist/src/TF1NormSum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1NormSum.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the content of the status bar: show the name of the current; /// selected style, its title and the macro from which it has been imported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:86,Update,Update,86,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the cumulative threshold table from the current coefficient; /// values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddGenContext.cxx:86,Update,Update,86,roofit/roofitcore/src/RooAddGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddGenContext.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the current pad when an attribute is changed via GUI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedFrame.cxx:86,Update,Update,86,gui/ged/src/TGedFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedFrame.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the default value for the branch's fEntryOffsetLen if and only if; /// it was already non zero (and the new value is not zero); /// If updateExisting is true, also update all the existing branches.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:86,Update,Update,86,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,3,"['Update', 'update']","['Update', 'update', 'updateExisting']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the default value for the branch's fEntryOffsetLen.; /// If updateExisting is true, also update all the existing branches.; /// If newdefault is less than 10, the new default value will be 10.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:86,Update,Update,86,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,3,"['Update', 'update']","['Update', 'update', 'updateExisting']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the editors in the main tab to reflect the selected object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoTabManager.cxx:86,Update,Update,86,geom/geombuilder/src/TGeoTabManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoTabManager.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the fBranchIndexCache collection to match the current TTree given; /// the ordered list of branch names.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePerfStats.cxx:86,Update,Update,86,tree/treeplayer/src/TTreePerfStats.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePerfStats.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the fX and fY arrays with the sorted values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:86,Update,Update,86,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the fX, fY, fEX, and fEY arrays with the sorted values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx:86,Update,Update,86,hist/hist/src/TGraphErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the fX, fY, fEXlow, fEXhigh, fEXlowd, fEXhighd, fEYlow, fEYhigh, fEYlowd, ; /// and fEYhighd arrays with the sorted values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx:86,Update,Update,86,hist/hist/src/TGraphBentErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the fX, fY, fEXlow, fEXhigh, fEYlow and fEYhigh arrays with the sorted values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:86,Update,Update,86,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the fX, fY, fExL, fExH, fEyL and fEyH arrays with the sorted values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:86,Update,Update,86,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the internal bin counter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinning.cxx:86,Update,Update,86,roofit/roofitcore/src/RooBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinning.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the internal interest box (fInterestBox) of the camera.; /// The interest box is an orientated bounding box, calculated as; /// an expanded container round the frustum. It is used to test if; /// if object bounding boxes are of interest (should be accepted; /// into viewer scene) for a camera - see TGLCamera::OfInterest(); ///; /// The interest box is updated if the frustum is no longer contained; /// in the existing one, or a new one calculated on the current frustum; /// differs significantly in volume (camera has been zoomed/dollyed; /// sizable amount).; ///; /// If the interest box is updated we return kTRUE - kFALSE otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx:86,Update,Update,86,graf3d/gl/src/TGLCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx,3,"['Update', 'update']","['Update', 'updated']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the internally cached volume and axes vectors - these are retained; /// for efficiency - many more reads than modifications",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLBoundingBox.cxx:86,Update,Update,86,graf3d/gl/src/TGLBoundingBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLBoundingBox.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the labels of the headers of the given type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx:86,Update,Update,86,gui/gui/src/TGTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the list of elements in the TGCanvas.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoMaterialEditor.cxx:86,Update,Update,86,geom/geombuilder/src/TGeoMaterialEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoMaterialEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the list of packages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:86,Update,Update,86,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the list of pointers to data members for TClass cl; /// This is now a nop. The creation and updating is handled in; /// TListOfDataMembers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Update,Update,86,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the list of pointers to method for TClass cl; /// This is now a nop. The creation and updating is handled in; /// TListOfFunctions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Update,Update,86,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the local helix matrix.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:86,Update,Update,86,geom/geom/src/TGeoHelix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the navigator to reflect the branch.; /// nav->CdTop();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:86,Update,Update,86,geom/geom/src/TGeoBranchArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the polylines or the arcs for the current entries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:86,Update,Update,86,tree/treeviewer/src/TSpider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the position of the axes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:86,Update,Update,86,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the positon of the TGTableHeader.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTableHeader.cxx:86,Update,Update,86,gui/gui/src/TGTableHeader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTableHeader.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the preview with possibly another style and; /// another object than previously.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStylePreview.cxx:86,Update,Update,86,gui/ged/src/TStylePreview.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStylePreview.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the range of the available data and refresh the current view.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx:86,Update,Update,86,gui/gui/src/TGTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the range shown in the range frame.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx:86,Update,Update,86,gui/gui/src/TGTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the session status in the relevant file. The status is taken from; /// GetSessionStatus() unless xst >= 0, in which case xst is used.; /// Return 0 on success, -errno if the file could not be opened.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:86,Update,Update,86,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the sizes of the arrays.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:86,Update,Update,86,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the slope and offset parameters and the pointer to the input binning",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinTransBinning.cxx:86,Update,Update,86,roofit/roofitcore/src/RooLinTransBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinTransBinning.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the specified array of box indices to refer to the next box; /// in the standard traversal order and return true, or else return; /// false if we the indices already refer to the last box.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:86,Update,Update,86,roofit/roofitcore/src/RooGrid.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the state of the node 'item' according to the children states.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx:86,Update,Update,86,gui/gui/src/TGListTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx,2,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the status info to the 'st'.; /// return the difference (*st - *fStatus)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx:86,Update,Update,86,proof/proofplayer/src/TPacketizerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerFile.cxx,2,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the status of MDI buttons in the decor frame of all children.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiMainFrame.cxx:86,Update,Update,86,gui/gui/src/TGMdiMainFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiMainFrame.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the two component functions of the convolution.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Convolution.cxx:86,Update,Update,86,hist/hist/src/TF1Convolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Convolution.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the values of every widget entry in the editor. The new values; /// are loaded from the current selected style.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:86,Update,Update,86,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update the visual axes and grid lines when painting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:86,Update,Update,86,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update time stamp either with the passed value (if > 0) or with; /// the current time",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofProgressStatus.cxx:86,Update,Update,86,proof/proof/src/TProofProgressStatus.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofProgressStatus.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update value of modify counter in config table; /// Modify counter used to indicate that something was changed in database.; /// It will be used when multiple instances of TSQLFile for the same data base; /// will be connected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:86,Update,Update,86,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update values + mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGGC.cxx:86,Update,Update,86,gui/gui/src/TGGC.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGGC.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update viewer with GUI state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx:86,Update,Update,86,graf3d/gl/src/TGLViewerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx,3,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update widgets using window's name or title.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveWindow.cxx:86,Update,Update,86,graf3d/eve/src/TEveWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveWindow.cxx,3,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx:86,Update,Update,86,hist/hist/src/TProfile2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// UpdateScene was clicked.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx:86,Update,UpdateScene,86,graf3d/gl/src/TGLViewerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx,1,['Update'],['UpdateScene']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates (overwrites) key data in KeysTable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:86,Update,Updates,86,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates all reve-browsers having the node in their contents.; /// All 3D-pads updated if any change found.; ///; /// Should (could?) be optimized with some assumptions about; /// volume/node structure (search for parent, know the same node can not; /// reoccur on lower level once found).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoNode.cxx:86,Update,Updates,86,graf3d/eve/src/TEveGeoNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoNode.cxx,2,"['Update', 'update']","['Updates', 'updated']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates all reve-browsers having the volume in their contents.; /// All 3D-pads updated if any change found.; ///; /// Should (could?) be optimized with some assumptions about; /// volume/node structure (search for parent, know the same node can not; /// reoccur on lower level once found).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoNode.cxx:86,Update,Updates,86,graf3d/eve/src/TEveGeoNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoNode.cxx,2,"['Update', 'update']","['Updates', 'updated']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates combo box to current session entries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:86,Update,Updates,86,tree/treeviewer/src/TTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates current record according to new X, Y, Z settings",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVSession.cxx:86,Update,Updates,86,tree/treeviewer/src/TTVSession.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVSession.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates current record to new X, Y, Z items.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:86,Update,Updates,86,tree/treeviewer/src/TTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates name to have consistent information with projection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx:86,Update,Updates,86,graf3d/eve/src/TEveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx,2,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates or synchronises client and server once (not permanent).; /// according to ""mode"".; ///; /// \param [in] mode update mode.; /// - mode = 1 update; /// - mode = 0 sync",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:86,Update,Updates,86,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,3,"['Update', 'update']","['Updates', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates start text offset according GetAlignment() mode,; /// if cursor is out of frame => scroll the text.; /// See also SetAlignment() and ScrollByChar().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEntry.cxx:86,Update,Updates,86,gui/gui/src/TGTextEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEntry.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates the destination region from a union of the specified rectangle; /// and the specified source region.; ///; /// \param [in] rect specifies the rectangle; /// \param [in] src specifies the source region to be used; /// \param [in] dest returns the destination region",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:86,Update,Updates,86,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates the internal addresses for n contiguous objects which have the same; /// fMaxLevel; /// Updates the internal addresses for n contiguous objects which have the same fMaxLevel",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:86,Update,Updates,86,geom/geom/src/TGeoBranchArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx,2,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates the parent formulae.; /// Called by TChain::LoadTree when the parent chain changes it's tree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:86,Update,Updates,86,tree/treeplayer/src/TChainIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates the range of the palette.; /// This is called after the blue limit lines were moved to define; /// a new range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx:86,Update,Updates,86,graf2d/asimage/src/TASPaletteEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPaletteEditor.cxx,1,['Update'],['Updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Updates view. Clear all the nodes, call draw function and update scene. Doesn't reset camera.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx:86,Update,Updates,86,graf3d/gviz3d/src/TStructViewerGUI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx,2,"['Update', 'update']","['Updates', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Used for automatic sizing of the cache.; ///; /// Estimates a suitable size for the tree cache based on AutoFlush.; /// A cache sizing factor is taken from the configuration. If this yields zero; /// and withDefault is true the historical algorithm for default size is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:246,configurat,configuration,246,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for createIntObj() that aids in the construct of recursive integrals; /// over functions with multiple observables with parameterized ranges. This function; /// finds in a given set allObs over which integration is requested the largeset subset; /// of observables that can be integrated simultaneously. This subset consists of; /// observables with fixed ranges and observables with parameterized ranges whose; /// parameterization does not depend on any observable that is also integrated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:303,integrat,integration,303,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,3,['integrat'],"['integrated', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for createRunningIntegral. It creates an; /// object implementing the standard (analytical) integration; /// technique for calculating the running integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:195,integrat,integration,195,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for plotOn() that creates a projection of a function or p.d.f; /// to be plotted on a RooPlot.; /// \anchor createPlotProjAnchor; ///; /// Create a new object \f$ G \f$ that represents the normalized projection:; /// \f[; /// G[x,p] = \frac{\int F[x,y,p] \; \mathrm{d}\{y\}}; /// {\int F[x,y,p] \; \mathrm{d}\{x\} \, \mathrm{d}\{y\}}; /// \f]; /// where \f$ F[x,y,p] \f$ is the function we represent, and; /// \f$ \{ p \} \f$ are the remaining variables (""parameters"").; ///; /// \param[in] dependentVars Dependent variables over which to normalise, \f$ \{x\} \f$.; /// \param[in] projectedVars Variables to project out, \f$ \{ y \} \f$.; /// \param[out] cloneSet Will be set to a RooArgSet*, which will contain a clone of *this plus its projection integral object.; /// The latter will also be returned. The caller takes ownership of this set.; /// \param[in] rangeName Optional range for projection integrals; /// \param[in] condObs Conditional observables, which are not integrated for normalisation, even if they; /// are in `dependentVars` or `projectedVars`.; /// \return A pointer to the newly created object, or zero in case of an; /// error. The caller is responsible for deleting the `cloneSet` (which includes the returned projection object).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1077,integrat,integrated,1077,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function to create integral for product over certain observables.; /// \param[in] name Name of integral to be created.; /// \param[in] compSet All components of the product.; /// \param[in] intSet Observables to be integrated.; /// \param[out] saveSet All component objects needed to represent the product integral are added as owned members to saveSet.; /// \note The set owns new components that are created for the integral.; /// \param[in] isetRangeName Integral range.; /// \param[in] doFactorize; ///; /// \return A RooAbsReal object representing the requested integral. The object is owned by `saveSet`.; ///; /// The integration is factorized into components as much as possible and done analytically as far as possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:309,integrat,integrated,309,roofit/roofitcore/src/RooGenProdProj.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx,2,['integrat'],"['integrated', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function to update the z-values of the bounding-box.; /// As this is an abstract interface, the element and bbox pointers; /// must be passed from outside.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionBases.cxx:106,update,update,106,graf3d/eve/src/TEveProjectionBases.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionBases.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Validate build configuration. If not syntax errors or missing objects are found,; /// return an ObjBuildConfig in which all names are replaced with object pointers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:101,configurat,configuration,101,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Virtual from TAttBBox; fill bounding-box information.; ///; /// The bounding-box information is kept coherent during addition of; /// projected elements and projection parameter updates. This is; /// called only in case the manager has not been populated at all.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx:264,update,updates,264,graf3d/eve/src/TEveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx,2,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Virtual method that is called on any change in the dependent frames.; /// This implementation simply calls fPad Modified()/Update().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedEditor.cxx:209,Update,Update,209,gui/ged/src/TGedEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedEditor.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Wait for the condition variable to be signalled. The mutex is; /// implicitely released before waiting and locked again after waking up.; /// If Wait() is called by multiple threads, a signal may wake up more; /// than one thread. See POSIX threads documentation for details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx:165,release,released,165,core/thread/src/TPosixCondition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx,2,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Waits for either the mouse move from the given initial ButtonPress location; /// or for the mouse button to be released. If mouse moves away from the initial; /// ButtonPress location before the mouse button is released ""IsMoveWaiting""; /// returns kTRUE. If the mouse button released before the mose moved from the; /// initial ButtonPress location, ""IsMoveWaiting"" returns kFALSE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx:197,release,released,197,gui/guibuilder/src/TGuiBldDragManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx,3,['release'],['released']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// When selected frame was changed by guibuilder editor -> update its appearance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx:142,update,update,142,gui/guibuilder/src/TGuiBldDragManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Write HTML footer; ///; ///; /// Input: out - output file stream; /// dir - usually equal to """" or ""../"", depends of; /// current file directory position, i.e. if; /// file is in the fHtml->GetOutputDir(), then dir will be """"; /// lastUpdate - last update string; /// author - author's name; /// copyright - copyright note; ///; /// Allows optional user provided footer to be written. Root.Html.Footer holds; /// the file name for this footer. For details see THtml::WriteHtmlHeader (here,; /// the ""+"" means the user's footer is written in front of Root's!) Occurrences; /// of %AUTHOR%, %CHANGED%, %GENERATED%, and %COPYRIGHT% in the user's file are replaced by; /// their corresponding values (author, lastUpdate, today, and copyright) before; /// written to out.; /// If no author is set (author == """", e.g. for ClassIndex.html"") skip the whole; /// line of the footer template containing %AUTHOR%. Accordingly for %COPYRIGHT%.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:335,update,update,335,html/src/TDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Write code for a RooAbsReal implementation with class name 'name',; /// taking RooAbsReal arguments with names listed in argNames and; /// RooAbsCategory arguments with names listed in catArgNames as; /// constructor arguments (use a comma separated list for multiple; /// arguments). The initial value expression is taken to be; /// 'expression' which can be any one-line C++ expression in terms of; /// variables that occur in 'vars'. Skeleton code for handling of; /// analytical integrals is added if hasAnaInt is true. You can add; /// optional expressions for analytical integrals to be advertised by; /// your class in the syntax; /// ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; /// where ""<intObsName>"" a name of the observable integrated over and; /// ""<CPPAnaIntExpression>"" is the C++ expression that calculates that; /// integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:862,integrat,integrated,862,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Write file info like configurations, title, UUID and other",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:107,configurat,configurations,107,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['configurat'],['configurations']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Write method name with return type ret and parameters param to out.; /// Build a link using file and anchor. Cooment it with comment, and; /// show the code codeOneLiner (set if the func consists of only one line; /// of code, immediately surrounded by ""{"",""}""). Also updates fMethodNames's; /// count of method names.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:354,update,updates,354,html/src/TClassDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Write, compile and load code and instantiate object for a; /// RooAbsPdf implementation with class name 'name', taking all; /// elements of 'vars' as constructor arguments. The initial value; /// expression is taken to be 'expression' which can be any one-line; /// C++ expression in terms of variables that occur in 'vars'.; ///; /// The returned object is an instance of the object you just defined; /// connected to the variables listed in 'vars'. The name of the; /// object is 'name', its class name Roo<name>Class.; ///; /// This function is an effective compiled replacement of RooGenericPdf; ///; /// You can add optional expressions for analytical integrals to be; /// advertised by your class in the syntax; /// ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; /// where ""<intObsName>"" a name of the observable integrated over and; /// ""<CPPAnaIntExpression>"" is the C++ expression that calculates that; /// integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:942,integrat,integrated,942,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Write, compile and load code and instantiate object for a; /// RooAbsReal implementation with class name 'name', taking all; /// elements of 'vars' as constructor arguments. The initial value; /// expression is taken to be 'expression' which can be any one-line; /// C++ expression in terms of variables that occur in 'vars'.; ///; /// The returned object is an instance of the object you just defined; /// connected to the variables listed in 'vars'. The name of the; /// object is 'name', its class name Roo<name>Class.; ///; /// This function is an effective compiled replacement of RooFormulaVar; ///; /// You can add optional expressions for analytical integrals to be; /// advertised by your class in the syntax; /// ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; /// where ""<intObsName>"" a name of the observable integrated over and; /// ""<CPPAnaIntExpression>"" is the C++ expression that calculates that; /// integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:943,integrat,integrated,943,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,2,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// Write, compile and load code for a RooAbsReal implementation with; /// class name 'name', taking all elements of 'vars' as constructor; /// arguments. The initial value expression is taken to be; /// 'expression' which can be any one-line C++ expression in terms of; /// variables that occur in 'vars'. You can add optional expressions; /// for analytical integrals to be advertised by your class in the; /// syntax; /// ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; /// where ""<intObsName>"" a name of the observable integrated over and; /// ""<CPPAnaIntExpression>"" is the C++ expression that calculates that; /// integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:641,integrat,integrated,641,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,1,['integrat'],['integrated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// [Place holder for Mutex Unlock] Provide the interpreter with a way to; /// release a lock used to protect critical section; /// of its code (non-thread safe parts).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:161,release,release,161,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['release'],['release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Add a sub entry list to the current list.; /// \param[in] elist an entry list that should be added as a sub list of this list.; ///; /// This function is specifically targeted at situations where there is a global; /// TEntryList that should hold one or more sub TEntryList objects. For example,; /// if one wants to create a one to one mapping between the sub entry lists and; /// the trees in the files that make a TChain. Note that in such cases this; /// configuration of the entry list should be used in pair with the option \p ""sync""; /// of the function TChain::SetEntryList; ///; /// ~~~{.cpp}; /// // Create a TChain with two files. Each contains a tree with 20 entries; /// TChain chain{""entries""};; /// chain.Add(""file_20entries_1.root"");; /// chain.Add(""file_20entries_2.root"");; ///; /// // Create a global, empty TEntryList.; /// TEntryList elists;; /// // Create two entry lists. Each one will be referring to a different tree in the chain; /// TEntryList elist1{"""","""",""entries"",""file_20entries_1.root""};; /// TEntryList elist2{"""","""",""entries"",""file_20entries_2.root""};; ///; /// // Select the first ten entries from the first tree and all entries from the second; /// for(auto entry = 0; entry < 10; entry++){; /// elist1.Enter(entry);; /// }; /// for(auto entry = 0; entry < 20; entry++){; /// elist2.Enter(entry);; /// }; ///; /// // Add sub entry lists to the global list; /// elists.AddSubList(&elist1);; /// elists.AddSubList(&elist2);; ///; /// // Set the entry list in the chain. Note the usage of option ""sync""; /// chain.SetEntryList(&elists, ""sync"");; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryList.cxx:552,configurat,configuration,552,tree/tree/src/TEntryList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryList.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Calculate residuals for all events and update targets for next iter.; ///; /// \param[in] eventSample The collection of events currently under training.; /// \param[in] first Should be true when called before the first boosting; /// iteration has been run; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:132,update,update,132,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Increment the entries in the object by one value-weight pair.; /// \param[in] val Value to fill the Tstatistic with; /// \param[in] w The weight of the value; ///; /// Also updates statistics in the object. For number of entries, sum of weights,; /// sum of squared weights and sum of (value*weight), one extra value is added to the; /// statistic. For the sum of squared (value*weight) pairs, the function uses formula 1.4; /// in Chan-Golub, LeVeque : Algorithms for computing the Sample Variance (1983),; /// generalized by LM for the case of weights:; /// \f[; /// \frac{w_j}{\sum_{i=0}^{j} w_i \cdot \sum_{i=0}^{j-1} w_i} \cdot; /// \left(; /// \sum_{i=0}^{j} w_i \cdot val_i -; /// \sum_{i=0}^{j} \left(w_i \cdot val_i\right); /// \right); /// \f]; ///; /// The minimum(maximum) is computed by checking that the fill value; /// is either less(greater) than the current minimum(maximum)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TStatistic.cxx:266,update,updates,266,math/mathcore/src/TStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TStatistic.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Merge implementation of TStatistic; /// \param[in] in Other TStatistic objects to be added to the current one; ///; /// The function merges the statistics of all objects together to form a new one.; /// Merging quantities is done via simple addition for the following class data members:; /// - number of entries fN; /// - the sum of weights fW; /// - the sum of squared weights fW2; /// - the sum of (value*weight) fM; ///; /// The sum of squared (value*weight) pairs fM2 is updated using the same formula as in; /// TStatistic::Fill() function.; ///; /// The minimum(maximum) is updated by checking that the minimum(maximum) of; /// the next TStatistic object in the queue is either less(greater) than the current minimum(maximum).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TStatistic.cxx:569,update,updated,569,math/mathcore/src/TStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TStatistic.cxx,2,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// approximate posterior in nbins using a TF1; /// scan the poi values and evaluate the posterior at each point; /// and save the result in a cloned TF1; /// For each point the posterior is evaluated by integrating the nuisance; /// parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:286,integrat,integrating,286,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['integrat'],['integrating']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// check for ""silence"" option in configuration option string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx:116,configurat,configuration,116,tmva/tmva/src/Tools.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// declaration of configuration options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx:101,configurat,configuration,101,tmva/tmva/src/Reader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string; /// know options.; ///; /// #### general; ///; /// - RuleFitModule `<string>`; /// available values are:; /// - RFTMVA - use TMVA implementation; /// - RFFriedman - use Friedmans original implementation; ///; /// #### Path search (fitting); ///; /// - GDTau `<float>` gradient-directed path: fit threshold, default; /// - GDTauPrec `<float>` gradient-directed path: precision of estimated tau; /// - GDStep `<float>` gradient-directed path: step size; /// - GDNSteps `<float>` gradient-directed path: number of steps; /// - GDErrScale `<float>` stop scan when error>scale*errmin; ///; /// #### Tree generation; ///; /// - fEventsMin `<float>` minimum fraction of events in a splittable node; /// - fEventsMax `<float>` maximum fraction of events in a splittable node; /// - nTrees `<float>` number of trees in forest.; /// - ForestType `<string>`; /// available values are:; /// - Random - create forest using random subsample and only random variables subset at each node; /// - AdaBoost - create forest with boosted events; ///; /// #### Model creation; ///; /// - RuleMinDist `<float>` min distance allowed between rules; /// - MinImp `<float>` minimum rule importance accepted; /// - Model `<string>` model to be used; /// available values are:; /// - ModRuleLinear `<default>`; /// - ModRule; /// - ModLinear; ///; /// #### Friedmans module; ///; /// - RFWorkDir `<string>` directory where Friedmans module (rf_go.exe) is installed; /// - RFNrules `<int>` maximum number of rules allowed; /// - RFNendnodes `<int>` average number of end nodes in the forest of trees",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx:1588,install,installed,1588,tmva/tmva/src/MethodRuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx,1,['install'],['installed']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// determine mirror dataset.; /// mirror points are added around the physical boundaries of the dataset; /// Two steps:; /// 1. For each entry, determine if it should be mirrored (the mirror configuration).; /// 2. For each mirror configuration, make the mirror points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:274,configurat,configuration,274,roofit/roofit/src/RooNDKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx,2,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// internal function compute the interval using Cdf integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:135,integrat,integration,135,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// prints the ROOT release number and date",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx:102,release,release,102,tmva/tmva/src/Tools.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx,1,['release'],['release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// prints the TMVA release number and date",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx:102,release,release,102,tmva/tmva/src/Tools.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx,1,['release'],['release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// read keys for specified directory (when update == kFALSE); /// or update value for modified keys when update == kTRUE; /// Returns number of successfully read keys or -1 if error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:126,update,update,126,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,3,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// read table configurations as special table",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:97,configurat,configurations,97,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['configurat'],['configurations']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// release a parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:86,release,release,86,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['release'],['release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// release all memory, allocated from this node and; /// destroys node itself",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx:86,release,release,86,io/xml/src/TXMLEngine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx,1,['release'],['release']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// save current configuration in a Root file; /// if filename is blank, the name of the file will be the current objectname.root; /// all the current settings are preserved; /// the Root file produced can be looked at by a another Root session; /// with no access to the original classes.; /// By default a message is printed. Specify option ""Q"" to remove the message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:99,configurat,configuration,99,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// set GA configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticFitter.cxx:93,configurat,configuration,93,tmva/tmva/src/GeneticFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticFitter.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// set MC fitter configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MCFitter.cxx:100,configurat,configuration,100,tmva/tmva/src/MCFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MCFitter.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// set SA configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealingFitter.cxx:93,configurat,configuration,93,tmva/tmva/src/SimulatedAnnealingFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealingFitter.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// set the configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:94,configurat,configuration,94,roofit/roofit/src/RooNDKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// set the integration type (possible type are) :; ///; /// - 1D integration ( used when only one nuisance and when the posterior is scanned):; /// adaptive , gauss, nonadaptive; /// - multidim:; /// - ADAPTIVE, adaptive numerical integration; /// The parameter numIters (settable with SetNumIters) is the max number of function calls.; /// It can be reduced to make the integration faster but it will be difficult to reach the required tolerance; /// - VEGAS MC integration method based on importance sampling - numIters is number of function calls; /// Extra Vegas parameter can be set using IntegratorMultiDimOptions class; /// - MISER MC integration method based on stratified sampling; /// See also http://en.wikipedia.org/wiki/Monte_Carlo_integration for VEGAS and MISER description; /// - PLAIN simple MC integration method, where the max number of calls can be specified using SetNumIters(numIters); ///; /// Extra integration types are:; ///; /// - TOYMC:; /// evaluate posterior by generating toy MC for the nuisance parameters. It is a MC; /// integration, where the function is sampled according to the nuisance. It is convenient to use when all; /// the nuisance are uncorrelated and it is efficient to generate them; /// The toy are generated by default for each poi values; /// (this method has been proposed and provided by J.P Chou); /// - 1-TOYMC : same method as before but in this case the toys are generated only one time and then used for; /// each poi value. It can be convenient when the generation time is much larger than the evaluation time,; /// otherwise it is recommended to re-generate the toy for each poi scanned point of the posterior function; /// - ROOFIT:; /// use roofit default integration methods which will produce a nested integral (not recommended for more; /// than 1 nuisance parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:94,integrat,integration,94,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,11,"['Integrat', 'integrat']","['IntegratorMultiDimOptions', 'integration']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// shoot npoints randomly in a box of 1E-5 around current point.; /// return minimum distance to points outside; /// make sure that path to current node is updated; /// get the response of tgeo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoChecker.cxx:239,update,updated,239,geom/geompainter/src/TGeoChecker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoChecker.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// specify a mapping between a parameter of the proposal function and; /// a parameter of interest. this mapping is used to set the value of; /// proposalParam equal to the value of update to determine the; /// proposal function.; /// proposalParam is a parameter of the proposal function that must; /// be set to the value of update (from the current point) in order to; /// propose a new point.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PdfProposal.cxx:265,update,update,265,roofit/roostats/src/PdfProposal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PdfProposal.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// submit ""ROLLBACK TRANSACTION"" query to database; /// return kTRUE, if successful",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/sqlite/src/TSQLiteServer.cxx:94,ROLLBACK,ROLLBACK,94,sql/sqlite/src/TSQLiteServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/sqlite/src/TSQLiteServer.cxx,1,['ROLLBACK'],['ROLLBACK']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// submit ""ROLLBACK"" query to database; /// return kTRUE, if successful",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:94,ROLLBACK,ROLLBACK,94,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,1,['ROLLBACK'],['ROLLBACK']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// this function is called by TChain::LoadTree and TTreePlayer::UpdateFormulaLeaves; /// when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreeIndex.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:147,Update,UpdateFormulaLeaves,147,tree/treeplayer/src/TTreeIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx,2,"['Update', 'update']","['UpdateFormulaLeaves', 'update']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// this function is called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:239,update,update,239,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// update a part of view",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGView.cxx:86,update,update,86,gui/gui/src/TGView.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGView.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// update and adjust the pre-synapses for each neuron (input neuron has no pre-synapse); /// this method should only be called in batch mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx:86,update,update,86,tmva/tmva/src/TNeuron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// update key attributes in key node",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TKeyXML.cxx:86,update,update,86,io/xml/src/TKeyXML.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TKeyXML.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// update static this pointer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:86,update,update,86,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// update synapse error fields and adjust the weights (if in sequential mode)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx:86,update,update,86,tmva/tmva/src/MethodMLP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// update the network based on how closely; /// the output matched the desired output",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx:86,update,update,86,tmva/tmva/src/MethodMLP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// update the pre-synapses for each neuron (input neuron has no pre-synapse); /// this method should only be called in sequential mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx:86,update,update,86,tmva/tmva/src/TNeuron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// update the whole window of text view",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextView.cxx:86,update,update,86,gui/gui/src/TGTextView.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextView.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// updates object, stored in the node; /// Used for TDirectory data update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TKeyXML.cxx:86,update,updates,86,io/xml/src/TKeyXML.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TKeyXML.cxx,2,['update'],"['update', 'updates']"
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// updates the pvalue if sufficient data is available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx:86,update,updates,86,roofit/roostats/src/HypoTestResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx,1,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// updates the used space maps",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:86,update,updates,86,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,2,['update'],['updates']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// write configuration to xml file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodSVM.cxx:92,configurat,configuration,92,tmva/tmva/src/MethodSVM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodSVM.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; /// write options and weights to file; /// note that each one text file for the main configuration information; /// and one ROOT file for ROOT objects are created",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:167,configurat,configuration,167,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['configurat'],['configuration']
Deployability,"////////////////////////////////////////////////////////////////////////////////; ///; /// Returns all datasets for the `<group>` and `<user>` specified by `<uri>`.; /// If `<user>` is 0, it returns all datasets for the given `<group>`.; /// If `<group>` is 0, it returns all datasets.; /// The returned TMap contains:; /// `<group>` --> `<map of users>` --> `<map of datasets>` --> `<dataset>` (TFileCollection); ///; /// The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet.; /// Available options (to be .or.ed):; /// kShowDefault a default selection is shown that include the ones from; /// the current user, the ones from the group and the common ones; /// kPrint print the dataset content; /// kQuotaUpdate update quotas; /// kExport use export naming; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:731,update,update,731,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; ///Computes sample quantiles, corresponding to the given probabilities; ///; /// \param[in] x the data sample; /// \param[in] n its size; /// \param[out] quantiles computed quantiles are returned in there; /// \param[in] prob probabilities where to compute quantiles; /// \param[in] nprob size of prob array; /// \param[in] isSorted is the input array x sorted ?; /// \param[in] index parameter index; /// \param[in] type method to compute (from 1 to 9).; ///; /// #### NOTE:; /// When the input is not sorted, an array of integers of size n needs; /// to be allocated. It can be passed by the user in parameter index,; /// or, if not passed, it will be allocated inside the function; ///; /// ### Following types are provided:; /// - Discontinuous:; /// - type=1 - inverse of the empirical distribution function; /// - type=2 - like type 1, but with averaging at discontinuities; /// - type=3 - SAS definition: nearest even order statistic; /// - Piecewise linear continuous:; /// - In this case, sample quantiles can be obtained by linear interpolation; /// between the k-th order statistic and p(k).; /// -type=4 - linear interpolation of empirical cdf, p(k)=k/n;; /// - type=5 - a very popular definition, p(k) = (k-0.5)/n;; /// - type=6 - used by Minitab and SPSS, p(k) = k/(n+1);; /// - type=7 - used by S-Plus and R, p(k) = (k-1)/(n-1);; /// - type=8 - resulting sample quantiles are approximately median unbiased; /// regardless of the distribution of x. p(k) = (k-1/3)/(n+1/3);; /// - type=9 - resulting sample quantiles are approximately unbiased, when; /// the sample comes from Normal distribution. p(k)=(k-3/8)/(n+1/4);; ///; /// default type = 7; ///; /// ### References:; /// 1. Hyndman, R.J and Fan, Y, (1996) ""Sample quantiles in statistical packages""; /// American Statistician, 50, 361-365; /// 2. R Project documentation for the function quantile of package {stats}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:1047,continuous,continuous,1047,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['continuous'],['continuous']
Deployability,"////////////////////////////////////////////////////////////////////////////////; ///Releases parameter `#ipar`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:85,Release,Releases,85,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['Release'],['Releases']
Deployability,"////////////////////////////////////////////////////////////////////////////////; ///Selection must be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPlotPainter.cxx:103,update,updated,103,graf3d/gl/src/TGLPlotPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPlotPainter.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////////////; ///Update cap's z-coordinates for all caps.; ///Here no pointers are checked, this was already done; ///by InitGeometry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLH2PolyPainter.cxx:85,Update,Update,85,graf3d/gl/src/TGLH2PolyPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLH2PolyPainter.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; ///Update the design matrix after the formula has been changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:85,Update,Update,85,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; ///Update the nearest neighbors values by examining the node inode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx:85,Update,Update,85,math/mathcore/src/TKDTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; ///update pointer to current Tree and recompute pointers to the branches in the cache",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:85,update,update,85,tree/tree/src/TTreeCacheUnzip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////////; ///update the sscp matrix with vector vec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:85,update,update,85,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,1,['update'],['update']
Deployability,"///////////////////////////////////////////////////////////////////////////////; /// Convert strings like the following into byte counts; /// 5MB, 5 MB, 5M, 3.7GB, 123b, 456kB, 3.7GiB, 5MiB; /// with some amount of forgiveness baked into the parsing.; /// For this routine we use the official SI unit where the [i] is reserved; /// for the 'legacy' power of two units. 1KB = 1000 bytes, 1KiB = 1024 bytes.; /// \param str the string to be parsed; /// \param value will be updated with the result if and only if the parse is successful and does not overflow for the type of value.; /// \return return a EFromHumanReadableSize enum value indicating the success or failure of the parse.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/StringConv.hxx:472,update,updated,472,core/base/inc/ROOT/StringConv.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/StringConv.hxx,1,['update'],['updated']
Deployability,"///////////////////////////////////////////////////////////////////////////////; /// Load a TFolder from a file while ensuring it owns its content.; /// This avoids memory leaks. Note that when fetching objects; /// from this folder, you need to clone them to prevent deletion.; /// Also recursively updates nested subfolders accordingly; /// @param inFile: Input file to read - assumed to be a valid pointer; /// @param folderName: Name of the folder to read from the file; /// @return a unique_ptr to the folder. Nullptr if not found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:300,update,updates,300,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['update'],['updates']
Deployability,"///////////////////////////////////////////////////////////////////////////////; /// Set up folder ownership over its children, and treat likewise any subfolders.; /// @param theFolder: folder to update. Assumed to be a valid pointer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:196,update,update,196,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['update'],['update']
Deployability,"///////////////////////////////////////////////////////////////////////////////; ////////////////////////////// Utility methods ////////////////////////////////; ///////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Updates maximum and minimum value of a variable or target",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VarTransformHandler.cxx:329,Update,Updates,329,tmva/tmva/src/VarTransformHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VarTransformHandler.cxx,1,['Update'],['Updates']
Deployability,"///////////////////////////////////////////////////////////////////////////////; //; // ASYMPTOTIC CALCULATOR VS PROFILE LIKELIHOOD CALCULATOR HYPOTHESIS TEST; //; // This test evaluates the functionality of the AsymptoticCalculator by; // comparing the significance given from a hypothesis test on the on/off model; // with the significance given by the ProfileLikelihoodCalculator. The validity; // of the PLC hypothesis test is evaluated in TestProfileLikelihoodCalculator4.; // If working properly, the two methods should yield identical results.; //; // ModelConfig (explicit) : Poisson On / Off Model; // built in stressRooStats_models.cxx; //; // Input Parameters:; // obsValueOn -> observed value ""n_on"" of sig + bkg; // obsValueOff -> observed value ""n_off"" of tau * bkg; // tau -> parameter of the model (constant with regard to integration); //; // 05/2012 - Ioan Gabriel Bucur; //; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats_tests.h:839,integrat,integration,839,roofit/roostats/test/stressRooStats_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats_tests.h,1,['integrat'],['integration']
Deployability,"//////////////////////////////////////////////////////////////////////////////; // //; // Interval //; // //; // Interval definition, continuous and discrete //; // //; // Interval(min,max) : a continuous interval [min,max] //; // Interval(min,max,n): a ""discrete interval"" [min,max], i.e the n numbers: //; // min, min+step, min+2*step,...., min+(n-1)*step, min+n*step=max //; // e.g.: Interval(1,5,5)=1,2,3,4,5 //; // Interval(.5,1.,6)= .5, .6., .7, .8, .9, 1.0 //; // //; // Note: **bin** counting starts from ZERO unlike in ROOT histograms //; // //; // Example: Interval(.5,1.,6) //; // //; // [ min max ] //; // ------------------------------------------------------------ //; // | | | | | | //; // .5 .6 .7 .8 .9 1.0 //; // //; // bin 0 1 2 3 4 5 //; // //; // //; //////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Interval.h:134,continuous,continuous,134,tmva/tmva/inc/TMVA/Interval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Interval.h,2,['continuous'],['continuous']
Deployability,"//////////////////////////////////////////////////////////////////////////////; // //; // Interval with non-equi distant bins //; // that are equi-distant in a logarithmic scale) //; // //; // Interval definition, continuous and discrete //; // //; // Note: **bin** counting starts from ZERO unlike in ROOT histograms //; // //; // ---------------- //; // LogInterval(1,10000,5) //; // i=0 --> 1 note: StepSize(ibin=0) = not defined !! //; // i=1 --> 10 StepSize(ibin=1) = 9 //; // i=2 --> 100 StepSize(ibin=2) = 99 //; // i=3 --> 1000 StepSize(ibin=3) = 999 //; // i=4 --> 10000 StepSize(ibin=4) = 9999 //; // //; // LogInterval(1,1000,11) //; // i=0 --> 1 //; // i=1 --> 1.99526 //; // i=2 --> 3.98107 //; // i=3 --> 7.94328 //; // i=4 --> 15.8489 //; // i=5 --> 31.6228 //; // i=6 --> 63.0957 //; // i=7 --> 125.893 //; // i=8 --> 251.189 //; // i=9 --> 501.187 //; // i=10 --> 1000 //; // //; // LogInterval(1,1024,11) //; // i=0 --> 1 //; // i=1 --> 2 //; // i=2 --> 4 //; // i=3 --> 8 //; // i=4 --> 16 //; // i=5 --> 32 //; // i=6 --> 64 //; // i=7 --> 128 //; // i=8 --> 256 //; // i=9 --> 512 //; // i=10 --> 1024 //; // //; //////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LogInterval.h:214,continuous,continuous,214,tmva/tmva/inc/TMVA/LogInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LogInterval.h,1,['continuous'],['continuous']
Deployability,"//////////////////////////////////////////////////////////////////////////////; // //; // PyException //; // //; // Purpose: A C++ exception class for throwing python exceptions //; // through C++ code. //; // Created: Apr, 2004, Scott Snyder, from the version in D0's python_util. //; // //; // The situation is: //; // - We're calling C++ code from python. //; // - The C++ code can call back to python. //; // - What to do then if the python callback throws an exception? //; // //; // We need to get the control flow back to where CPyCppyy calls C++. //; // To do that we throw a TPyException. //; // We can then catch this exception when we do the C++ call. //; // //; // Note that we don't need to save any state in the exception -- it's //; // already in the python error info variables. //; // (??? Actually, if the program is multithreaded, this is dangerous //; // if the code has released and reacquired the lock along the call chain. //; // Punt on this for now, though.) //; // //; //////////////////////////////////////////////////////////////////////////////; // Standard",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h:891,release,released,891,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h,1,['release'],['released']
Deployability,"//////////////////////////////////////////////////////////////////////////////; /// Update the address of the underlying tree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxy.cxx:84,Update,Update,84,tree/treeplayer/src/TFriendProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxy.cxx,1,['Update'],['Update']
Deployability,"//////////////////////////////////////////////////////////////////////////////; //; // TRolke; //; // This class computes confidence intervals for the rate of a Poisson; // in the presence of background and efficiency with a fully frequentist; // treatment of the uncertainties in the efficiency and background estimate; // using the profile likelihood method.; //; // Author: Jan Conrad (CERN) 2004; // Updated: Johan Lundberg (CERN) 2009; //; // Copyright CERN 2004,2009 Jan.Conrad@cern.ch,; // Johan.Lundberg@cern.ch; //; // For information about the statistical meaning of the parameters; // and the syntax, consult TRolke.cxx; // ------------------; //; // Examples are found in the file Rolke.C; // --------------------------------------; //; //////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRolke.h:404,Update,Updated,404,math/physics/inc/TRolke.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRolke.h,1,['Update'],['Updated']
Deployability,"/////////////////////////////////////////////////////////////////////////////; /// \brief Aggregate the information contained in another RMergeableValue; /// into this.; /// \param[in] other Another RMergeableValue object.; /// \throws std::invalid_argument If the cast of the other object to the same; /// type as this one fails.; ///; /// The other RMergeableValue object is cast to the same type as this object.; /// This is needed to make sure that only results of the same type of action; /// are merged together. Then the two results are added together to update; /// the value held by the current object.; ///; /// \note All the `Merge` methods in the RMergeableValue family are private.; /// To merge multiple RMergeableValue objects please use [MergeValues]; /// (namespaceROOT_1_1Detail_1_1RDF.html#af16fefbe2d120983123ddf8a1e137277).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RMergeableValue.hxx:562,update,update,562,tree/dataframe/inc/ROOT/RDF/RMergeableValue.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RMergeableValue.hxx,1,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////////////; // Update the Loop Guard; ////////////////////////////////////////////////////////////////////////////; // The guard for FC0 is updated to guard both FC0 and FC1. This is done by; // changing the NonLoopGuardBlock for FC0 to the NonLoopGuardBlock for FC1.; // Thus, one path from the guard goes to the preheader for FC0 (and thus; // executes the new fused loop) and the other path goes to the NonLoopBlock; // for FC1 (where FC1 guard would have gone if FC1 was not executed).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:81,Update,Update,81,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"////////////////////////////////////////////////////////////////////////////; /// \brief Install the ROOT message handler which will turn ROOT error; /// messages into Python exceptions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:89,Install,Install,89,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,1,['Install'],['Install']
Deployability,"///////////////////////////////////////////////////////////////////////////; /// Call UpdateLayeredWindow to set a bitmap (with alpha) as the content of; /// the splash window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:86,Update,UpdateLayeredWindow,86,core/winnt/src/Win32Splash.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx,1,['Update'],['UpdateLayeredWindow']
Deployability,"//////////////////////////////////////////////////////////////////////////; // //; // Config //; // //; // Singleton class for global configuration settings used by TMVA //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h:134,configurat,configuration,134,tmva/tmva/inc/TMVA/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h,1,['configurat'],['configuration']
Deployability,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:480,install,installed,480,core/foundation/inc/TError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h,2,['install'],['installed']
Deployability,"//////////////////////////////////////////////////////////////////////////; // //; // MethodFDA //; // //; // Function discriminant analysis (FDA). This simple classifier //; // fits any user-defined TFormula (via option configuration string) to //; // the training data by requiring a formula response of 1 (0) to signal //; // (background) events. The parameter fitting is done via the abstract //; // class FitterBase, featuring Monte Carlo sampling, Genetic //; // Algorithm, Simulated Annealing, MINUIT and combinations of these. //; // //; // Can compute one-dimensional regression //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h:221,configurat,configuration,221,tmva/tmva/inc/TMVA/MethodFDA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h,1,['configurat'],['configuration']
Deployability,"//////////////////////////////////////////////////////////////////////////; // //; // MethodTMlpANN //; // //; // Implementation of interface for Root-integrated artificial neural //; // network: TMultiLayerPerceptron //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodTMlpANN.h:151,integrat,integrated,151,tmva/tmva/inc/TMVA/MethodTMlpANN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodTMlpANN.h,1,['integrat'],['integrated']
Deployability,"//////////////////////////////////////////////////////////////////////////; // //; // TMD5 //; // //; // This code implements the MD5 message-digest algorithm. //; // The algorithm is due to Ron Rivest. This code was //; // written by Colin Plumb in 1993, no copyright is claimed. //; // This code is in the public domain; do with it what you wish. //; // //; // Equivalent code is available from RSA Data Security, Inc. //; // This code has been tested against that, and is equivalent, //; // except that you don't need to include two pages of legalese //; // with every copy. //; // //; // To compute the message digest of a chunk of bytes, create an //; // TMD5 object, call Update() as needed on buffers full of bytes, and //; // then call Final(), which will, optionally, fill a supplied 16-byte //; // array with the digest. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMD5.h:678,Update,Update,678,core/base/inc/TMD5.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMD5.h,1,['Update'],['Update']
Deployability,"//////////////////////////////////////////////////////////////////////////; // //; // TMatrixTSym //; // //; // Implementation of a symmetric matrix in the linear algebra package //; // //; // Note that in this implementation both matrix element m[i][j] and //; // m[j][i] are updated and stored in memory. However, when making the //; // object persistent only the upper right triangle is stored. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTSym.h:277,update,updated,277,math/matrix/inc/TMatrixTSym.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTSym.h,1,['update'],['updated']
Deployability,"//////////////////////////////////////////////////////////////////////////; // //; // TMessageHandler //; // //; // Handle messages that might be generated by the system. //; // By default a handler only keeps track of the different messages //; // generated for a specific class. By deriving from this class and //; // overriding Notify() one can implement custom message handling. //; // In Notify() one has access to the message id and the object //; // generating the message. One can install more than one message //; // handler per class. A message handler can be removed or again //; // added when needed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMessageHandler.h:489,install,install,489,core/base/inc/TMessageHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMessageHandler.h,1,['install'],['install']
Deployability,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectTable //; // //; // This class registers all instances of TObject and its derived //; // classes in a hash table. The Add() and Remove() members are called //; // from the TObject ctor and dtor, repectively. Using the Print() //; // member one can see all currently active objects in the system. //; // Using the runtime flag: Root.ObjectStat one can toggle this feature //; // on or off. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TObjectTable.h:444,toggle,toggle,444,core/cont/inc/TObjectTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TObjectTable.h,1,['toggle'],['toggle']
Deployability,"//////////////////////////////////////////////////////////////////////////; // //; // TSelHandleDataSet //; // //; // PROOF selector for file cache release. //; // List of files to be cleaned for each node is provided by client. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHandleDataSet.h:148,release,release,148,proof/proofbench/inc/TSelHandleDataSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/inc/TSelHandleDataSet.h,1,['release'],['release']
Deployability,"//////////////////////////////////////////////////////////////////////////; // //; // TToggle //; // //; // This class defines toggling facility for both - object's method or //; // variables. //; // Assume that user provides an object with a two-state field, and //; // methods to Get/Set value of this field. This object enables to switch//; // values via this method when the only thing you know about the field //; // is the name of the method (or method itself) which sets the field. //; // This facility is required in context popup menu, when the only //; // information about how to toggle a field is a name of method which //; // sets it. //; // This Object may be also used for toggling an integer variable, //; // which may be important while building universal objects... //; // When user provides a ""set-method"" of name SetXXX this object tries //; // automaticaly to find a matching ""get-method"" by looking for a method //; // with name GetXXX or IsXXX for given object. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:591,toggle,toggle,591,core/gui/inc/TToggle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h,1,['toggle'],['toggle']
Deployability,"//////////////////////////////////////////////////////////////////////////; // //; // rpderr //; // //; // This header file defines error codes generated by rootd/proofd. //; // NB: In case of change update also strings in net/inc/ErrStr.h //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/res/rpderr.h:200,update,update,200,net/rpdutils/res/rpderr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/res/rpderr.h,1,['update'],['update']
Deployability,"//////////////////////////////////////////////////////////////////////////; /// Release the lock in read mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:80,Release,Release,80,core/thread/src/TReentrantRWLock.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx,2,['Release'],['Release']
Deployability,"//////////////////////////////////////////////////////////////////////////; /// Release the lock in write mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:80,Release,Release,80,core/thread/src/TReentrantRWLock.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx,2,['Release'],['Release']
Deployability,"//////////////////////////////////////////////////////////////////////////; /// Run canvas functionality for the given time (in seconds); /// Used to process canvas-related actions in the appropriate thread context.; /// Must be regularly called when canvas created and used in extra thread.; /// Time parameter specifies minimal execution time in seconds - if default value 0 is used,; /// just all pending actions will be performed.; /// When canvas is not yet displayed - just performs sleep for given time interval.; ///; /// Example of usage:; ///; /// ~~~ {.cpp}; /// void draw_canvas(bool &run_loop, std::make_shared<RH1D> hist); /// {; /// auto canvas = RCanvas::Create(""Canvas title"");; /// canvas->Draw(hist)->SetLineColor(RColor::kBlue);; /// canvas->Show();; /// while (run_loop) {; /// pHist->Fill(1);; /// canvas->Modified();; /// canvas->Update();; /// canvas->Run(0.1); // process canvas events; /// }; ///; /// canvas->Remove();; /// }; ///; /// int main(); /// {; /// RAxisConfig xaxis(100, -10., 10.);; /// auto pHist = std::make_shared<RH1D>(xaxis);; /// bool run_loop = true;; ///; /// std::thread thrd(draw_canvas, run_loop, pHist);; /// std::this_thread::sleep_for(std::chrono::seconds(100));; /// run_loop = false;; /// thrd.join();; /// return 0;; /// }; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RCanvas.cxx:853,Update,Update,853,graf2d/gpadv7/src/RCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RCanvas.cxx,1,['Update'],['Update']
Deployability,"//////////////////////////////////////////////////////////////////////////; //; // TVirtualFFT; //; // TVirtualFFT is an interface class for Fast Fourier Transforms.; //; //; //; // The default FFT library is FFTW. To use it, FFTW3 library should already; // be installed, and ROOT should be have fftw3 module enabled, with the directories; // of fftw3 include file and library specified (see installation instructions).; // Function SetDefaultFFT() allows to change the default library.; //; // Available transform types:; // FFT:; // - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); // in one or more dimensions, -1 in the exponent; // - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); // in one or more dimensions, +1 in the exponent; // - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); // in one or more dimensions,; // - ""C2R"" - inverse transforms to ""R2C"", taking complex input; // (storing the non-redundant half of a logically Hermitian array); // to real output; // - ""R2HC"" - a real-input DFT with output in ""halfcomplex"" format,; // i.e. real and imaginary parts for a transform of size n stored as; // r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; // - ""HC2R"" - computes the reverse of FFTW_R2HC, above; // - ""DHT"" - computes a discrete Hartley transform; //; // Sine/cosine transforms:; // Different types of transforms are specified by parameter kind of the SineCosine() static; // function. 4 different kinds of sine and cosine transforms are available; // DCT-I (REDFT00 in FFTW3 notation)- kind=0; // DCT-II (REDFT10 in FFTW3 notation)- kind=1; // DCT-III(REDFT01 in FFTW3 notation)- kind=2; // DCT-IV (REDFT11 in FFTW3 notation)- kind=3; // DST-I (RODFT00 in FFTW3 notation)- kind=4; // DST-II (RODFT10 in FFTW3 notation)- kind=5; // DST-III(RODFT01 in FFTW3 notation)- kind=6; // DST-IV (RODFT11 in FFTW3 notation)- kind=7; // Formulas and detailed descriptions can be found in the chapter; // ""What FFTW rea",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualFFT.h:262,install,installed,262,core/base/inc/TVirtualFFT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualFFT.h,2,['install'],"['installation', 'installed']"
Deployability,"////////////////////////////////////////////////////////////////////////; /*! \class TPaletteAxis; \ingroup Histpainter; \brief The palette painting class. A `TPaletteAxis` object is used to display the color palette when; drawing 2-d histograms. The `TPaletteAxis` is automatically created drawn when drawing a 2-D; histogram when the option ""Z"" is specified. A `TPaletteAxis` object is added to the histogram list of functions and; can be retrieved doing:. TPaletteAxis *palette = (TPaletteAxis*)h->GetListOfFunctions()->FindObject(""palette"");. then the pointer `palette` can be used to change the palette attributes. Because the palette is created at painting time only, one must issue a:. gPad->Update();. before retrieving the palette pointer in order to create the palette. The following; macro gives an example. Begin_Macro(source); {; auto h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; auto palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; }; End_Macro. `TPaletteAxis` inherits from `TBox` and `TPave`. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; In this case no optimization can be done. It is responsibility of the; user to adjust minimum, maximum of the histogram and/or the contour levels; to get a reasonable look of the plot.; Only overlap of the labels is avoided if too many contour ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:1079,Update,Update,1079,hist/histpainter/src/TPaletteAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////////////////; // Integration Tests",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:77,Integrat,Integration,77,core/imt/test/testRTaskArena.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx,1,['Integrat'],['Integration']
Deployability,"////////////////////////////////////////////////////////////////////////; /// get output distribution, possibly cumulated over several bins; ///; /// \param[out] output existing output histogram. content and errors; /// will be updated.; /// \param[in] binMap (default=nullptr) array for mapping truth bins to histogram bins; ///; /// If nonzero, the array <b>binMap</b> must have dimension n+2, where n; /// corresponds to the number of bins on the truth axis of the response; /// matrix (the histogram specified with the TUnfold; /// constructor). The indexes of <b>binMap</b> correspond to the truth; /// bins (including underflow and overflow) of the response matrix.; /// The element binMap[i] specifies the histogram number in; /// <b>output</b> where the corresponding truth bin will be stored. It is; /// possible to specify the same <b>output</b> bin number for multiple; /// indexes, in which case these bins are added. Set binMap[i]=-1 to; /// ignore an unfolded truth bin. The uncertainties are; /// calculated from the corresponding parts of the covariance matrix,; /// properly taking care of added truth bins.; /// <br/>; /// If the pointer <b>binMap</b> is zero, the bins are mapped; /// one-to-one. Truth bin zero (underflow) is stored in the; /// <b>output</b> underflow, truth bin 1 is stored in bin number 1, etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:228,update,updated,228,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////; /// propagate an error matrix on the input vector to the unfolding result; ///; /// \param[in] vyy input error matrix; /// \param[inout] ematrix histogram to be updated; /// \param[in] binMap mapping of histogram bins; /// \param[in] clearEmat if set, clear histogram before adding this; /// covariance contribution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:235,update,updated,235,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['update'],['updated']
Deployability,"////////////////////////////////////////////////////////////////////////; /// return the number of histogram bins required when storing; /// this binning in a one-dimensional histogram; ///; /// \param[in] originalAxisBinning if true, try to have the histogram; /// axis reflect precisely the relevant axis of the binnnig scheme; /// \param[in] axisSteering steering to integrate over axis and/or; /// skip underflow and overflow bins; ///; /// returns the number of bins of the TH1, where the underflow/overflow; /// are not used, unless the distribution has only one axis and; /// originalAxisBinning=true); /// <br/>; /// axisSteering is a string as follows:; /// ""axis[options];axis[options];...""; /// where: axis = name or * is an identifier of an axis (* matches all); /// and: options is any combination of the letters C,U,O (other; /// letters are ignored).; /// <br>; /// The letter C means that the corresponding axis is collapsed into; /// one bin, i.e. one dimension is removed from the counting.; /// The letters U,O remove for the matching axis the underflow.overflow; /// bins from the counting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:370,integrat,integrate,370,hist/unfold/src/TUnfoldBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx,1,['integrat'],['integrate']
Deployability,"////////////////////////////////////////////////////////////////////////; /// update fFirstBin and fLastBin members of this node and its children; ///; /// \param[in] startWithRootNode if true, start the update with the root node",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:78,update,update,78,hist/unfold/src/TUnfoldBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx,2,['update'],['update']
Deployability,"////////////////////////////////////////////////////////////////////; /// Creates special kind for for palette or list of colors; /// One can create persistent, which does not updated to actual values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/TObjectDrawable.cxx:176,update,updated,176,graf2d/gpadv7/src/TObjectDrawable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/TObjectDrawable.cxx,1,['update'],['updated']
Deployability,"///////////////////////////////////////////////////////////////////; // UpdateLevelTimer used to periodically update game level; ///////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Tetris.h:72,Update,UpdateLevelTimer,72,test/Tetris.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Tetris.h,2,"['Update', 'update']","['UpdateLevelTimer', 'update']"
Deployability,"///////////////////////////////////////////////////////////////////; // UpdateLevelTimer; ///////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Tetris.cxx:72,Update,UpdateLevelTimer,72,test/Tetris.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Tetris.cxx,1,['Update'],['UpdateLevelTimer']
Deployability,"////////////////////////////////////////////////////////////; /// Update advanced parameters associated with fit function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanelModel.cxx:66,Update,Update,66,gui/fitpanelv7/src/RFitPanelModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanelModel.cxx,1,['Update'],['Update']
Deployability,"////////////////////////////////////////////////////////////; /// Update setting dependent from object type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanelModel.cxx:66,Update,Update,66,gui/fitpanelv7/src/RFitPanelModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanelModel.cxx,1,['Update'],['Update']
Deployability,"///////////////////////////////////////////////////////////; // //; // Strong reference for a Core Foundation object. //; // This class can have specializations for CF object //; // with it's own version of retain or release. //; // //; ///////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:217,release,release,217,core/macosx/inc/CocoaUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h,1,['release'],['release']
Deployability,"/////////////////////////////////////////////////////////; /// Update range values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanelModel.cxx:63,Update,Update,63,gui/fitpanelv7/src/RFitPanelModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanelModel.cxx,1,['Update'],['Update']
Deployability,"//////////////////////////////////////////////////////; //Multi-dim integration options implementation; /////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/IntegratorOptions.cxx:68,integrat,integration,68,math/mathcore/src/IntegratorOptions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/IntegratorOptions.cxx,1,['integrat'],['integration']
Deployability,"////////////////////////////////////////; /// This function computes, to an attempted specified accuracy, the value of; /// the integral; ///; /// \param[in] n Number of dimensions [2,15]; /// \param[in] a,b One-dimensional arrays of length >= N . On entry A[i], and B[i],; /// contain the lower and upper limits of integration, respectively.; /// \param[in] maxpts Maximum number of function evaluations to be allowed.; /// maxpts >= 2^n +2*n*(n+1) +1; /// if maxpts<minpts, maxpts is set to 10*minpts; /// \param[in] epsrel Specified relative accuracy.; /// \param[in] epsabs Specified absolute accuracy.; /// The integration algorithm will attempt to reach either the relative or the absolute accuracy.; /// In case the maximum function called is reached the algorithm will stop earlier without having reached; /// the desired accuracy; ///; /// \param[out] relerr Contains, on exit, an estimation of the relative accuracy of the result.; /// \param[out] nfnevl number of function evaluations performed.; /// \param[out] ifail; /// \parblock; /// 0 Normal exit. At least minpts and at most maxpts calls to the function were performed.; ///; /// 1 maxpts is too small for the specified accuracy eps. The result and relerr contain the values obtainable for the; /// specified value of maxpts.; ///; /// 3 n<2 or n>15; /// \endparblock; ///; /// Method:; ///; /// The default method used is the Genz-Mallik adaptive multidimensional algorithm; /// using the class ROOT::Math::AdaptiveIntegratorMultiDim (see the reference documentation of the class); ///; /// Other methods can be used by setting ROOT::Math::IntegratorMultiDimOptions::SetDefaultIntegrator(); /// to different integrators.; /// Other possible integrators are MC integrators based on the ROOT::Math::GSLMCIntegrator class; /// Possible methods are : Vegas, Miser or Plain; /// IN case of MC integration the accuracy is determined by the number of function calls, one should be; /// careful not to use a too large value of maxpts; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1649,Integrat,IntegratorMultiDimOptions,1649,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,5,"['Integrat', 'integrat']","['IntegratorMultiDimOptions', 'integration', 'integrators']"
Deployability,///; /// A helper class to promote one counter RMW operation in the loop; /// into register update.; ///; /// RWM update for the counter will be sinked out of the loop after; /// the transformation.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:92,update,update,92,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,2,['update'],['update']
Deployability,"///; /// API to use MnHesse after minimization when function minimum is avalilable, otherwise information on the last; /// state will be lost. (It would be needed to re-call the gradient and spend extra useless function calls) The; /// Function Minimum is updated (modified) by adding the Hesse results as last state of minimization; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnHesse.h:256,update,updated,256,math/minuit2/inc/Minuit2/MnHesse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnHesse.h,1,['update'],['updated']
Deployability,///; /// Moves ALL PHI instructions in SourceMBB to beginning of TargetMBB; /// and update them to refer to the new block. PHI node ordering; /// cannot be assumed so it does not matter where the PHI instructions; /// are moved to in TargetMBB.; ///; /// \param[in] SourceMBB block to move PHI instructions from; /// \param[in] TargetMBB block to move PHI instructions to; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp:84,update,update,84,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,1,['update'],['update']
Deployability,"///< A class that holds configuration information for a model using a workspace as a store",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFit/ModelConfig.h:24,configurat,configuration,24,roofit/roofitcore/inc/RooFit/ModelConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFit/ModelConfig.h,1,['configurat'],['configuration']
Deployability,///< Array of pipeline forwarding paths,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h:14,pipeline,pipeline,14,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,1,['pipeline'],['pipeline']
Deployability,"///< Button to update current view",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGTable.h:15,update,update,15,gui/gui/inc/TGTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGTable.h,1,['update'],['update']
Deployability,"///< Command recording toggle",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TTreeViewer.h:23,toggle,toggle,23,tree/treeviewer/inc/TTreeViewer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TTreeViewer.h,1,['toggle'],['toggle']
Deployability,"///< Configuration object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:5,Configurat,Configuration,5,roofit/roofitcore/src/RooImproperIntegrator1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h,1,['Configurat'],['Configuration']
Deployability,"///< Configuration of limits",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:5,Configurat,Configuration,5,roofit/roofitcore/src/RooImproperIntegrator1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h,1,['Configurat'],['Configuration']
Deployability,"///< Configuration of numeric convolution integral ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h:5,Configurat,Configuration,5,roofit/roofitcore/inc/RooNumConvolution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h,1,['Configurat'],['Configuration']
Deployability,"///< Default integrator precision.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h:13,integrat,integrator,13,roofit/roofitcore/inc/RooBinSamplingPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h,1,['integrat'],['integrator']
Deployability,"///< Dimension of the integration/simulation space",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/inc/TFoam.h:22,integrat,integration,22,math/foam/inc/TFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/inc/TFoam.h,2,['integrat'],['integration']
Deployability,"///< Don't deadlock in update mode, when from Get() Add() is called",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TMapFile.h:23,update,update,23,io/io/inc/TMapFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TMapFile.h,1,['update'],['update']
Deployability,///< Exclusive capability that was released.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp:35,release,released,35,interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,1,['release'],['released']
Deployability,"///< First fDerivatives of the activations update gate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:43,update,update,43,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,1,['update'],['update']
Deployability,"///< Force numerical integration if flag set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h:21,integrat,integration,21,roofit/roofitcore/inc/RooAbsReal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h,1,['integrat'],['integration']
Deployability,"///< Function being integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h:20,integrat,integrated,20,roofit/roofitcore/inc/RooRealIntegral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h,1,['integrat'],['integrated']
Deployability,"///< Gauss-Legendre integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:20,integrat,integration,20,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['integrat'],['integration']
Deployability,"///< Gradients w.r.t the update gate - bias weights",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:25,update,update,25,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,1,['update'],['update']
Deployability,"///< Gradients w.r.t the update gate - hidden state weights",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:25,update,update,25,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,1,['update'],['update']
Deployability,"///< Gradients w.r.t the update gate - input weights",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:25,update,update,25,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,1,['update'],['update']
Deployability,"///< Holder for optional convolution integration window scaling parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h:37,integrat,integration,37,roofit/roofitcore/inc/RooNumConvolution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h,1,['integrat'],['integration']
Deployability,"///< If fMode is ""UPDATE"", overwrite object in output file if it already exists",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RSnapshotOptions.hxx:18,UPDATE,UPDATE,18,tree/dataframe/inc/ROOT/RSnapshotOptions.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RSnapshotOptions.hxx,1,['UPDATE'],['UPDATE']
Deployability,"///< If true limits of function binding are used; // Integrator configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:53,Integrat,Integrator,53,roofit/roofitcore/src/RooRombergIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h,2,"['Integrat', 'configurat']","['Integrator', 'configuration']"
Deployability,"///< If true print number of function evaluation required for integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsIntegrator.h:62,integrat,integration,62,roofit/roofitcore/inc/RooAbsIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsIntegrator.h,1,['integrat'],['integration']
Deployability,"///< Immediate update check button",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TFunctionParametersDialog.h:15,update,update,15,gui/ged/inc/TFunctionParametersDialog.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TFunctionParametersDialog.h,1,['update'],['update']
Deployability,"///< Integrated observable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumRunningInt.h:5,Integrat,Integrated,5,roofit/roofitcore/inc/RooNumRunningInt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumRunningInt.h,1,['Integrat'],['Integrated']
Deployability,"///< Integrated sum of contents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hparam.h:5,Integrat,Integrated,5,hist/histpainter/inc/Hparam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hparam.h,1,['Integrat'],['Integrated']
Deployability,"///< Integrator type (value converted from enum)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:5,Integrat,Integrator,5,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,1,['Integrat'],['Integrator']
Deployability,"///< Is configuration valid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.h:8,configurat,configuration,8,roofit/roofitcore/src/RooGrid.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.h,1,['configurat'],['configuration']
Deployability,"///< Is integration over the bin volume requested",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:8,integrat,integration,8,roofit/roofitcore/src/RooXYChi2Var.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h,1,['integrat'],['integration']
Deployability,"///< Is integrator in valid state?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsIntegrator.h:8,integrat,integrator,8,roofit/roofitcore/inc/RooAbsIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsIntegrator.h,1,['integrat'],['integrator']
Deployability,"///< Keeps track in which order state numbers have been inserted. Make sure this is updated in recomputeShape().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h:84,update,updated,84,roofit/roofitcore/inc/RooAbsCategory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h,1,['update'],['updated']
Deployability,"///< List of configuration sets for individual integration methods",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,configurat,configuration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,4,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"///< MC integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:8,integrat,integration,8,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,3,['integrat'],['integration']
Deployability,"///< Map state names to index numbers. Make sure state names are updated in recomputeShape().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h:65,update,updated,65,roofit/roofitcore/inc/RooAbsCategory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h,1,['update'],['updated']
Deployability,"///< Name of the configuration file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h:17,configurat,configuration,17,tree/treeplayer/inc/TSimpleAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h,1,['configurat'],['configuration']
Deployability,"///< Number of integration samplings (per dim)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h:15,integrat,integration,15,roofit/roofitcore/src/RooMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h,1,['integrat'],['integration']
Deployability,"///< Numeric integrator configuration for integration of function over bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:13,integrat,integrator,13,roofit/roofitcore/src/RooXYChi2Var.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h,3,"['configurat', 'integrat']","['configuration', 'integration', 'integrator']"
Deployability,"///< Piece integrator 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:11,integrat,integrator,11,roofit/roofitcore/src/RooImproperIntegrator1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h,1,['integrat'],['integrator']
Deployability,"///< Piece integrator 2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:11,integrat,integrator,11,roofit/roofitcore/src/RooImproperIntegrator1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h,1,['integrat'],['integrator']
Deployability,"///< Piece integrator 3",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:11,integrat,integrator,11,roofit/roofitcore/src/RooImproperIntegrator1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h,1,['integrat'],['integrator']
Deployability,"///< Precision required for function integration (option ""I"")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TBinomialEfficiencyFitter.h:37,integrat,integration,37,hist/hist/inc/TBinomialEfficiencyFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TBinomialEfficiencyFitter.h,1,['integrat'],['integration']
Deployability,"///< Proposal function for MCMC integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h:32,integrat,integration,32,roofit/roostats/inc/RooStats/MCMCCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h,2,['integrat'],['integration']
Deployability,"///< Release date of FOAM",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/inc/TFoam.h:5,Release,Release,5,math/foam/inc/TFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/inc/TFoam.h,1,['Release'],['Release']
Deployability,"///< Selects integration method for 1D conditional p.d.f.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for 1D conditional p.d.f.s with categories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for 1D integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumIntConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for 1D p.d.f.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for 1D p.d.f.s with categories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for 2D conditional p.d.f.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for 2D conditional p.d.f.s with categories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for 2D integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumIntConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for 2D p.d.f.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for 2D p.d.f.s with categories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for ND conditional p.d.f.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for ND conditional p.d.f.s with categories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for ND integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumIntConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for ND p.d.f.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for ND p.d.f.s with categories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for open ended 1D integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumIntConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for open ended 2D integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumIntConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h,1,['integrat'],['integration']
Deployability,"///< Selects integration method for open ended ND integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumIntConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h,1,['integrat'],['integration']
Deployability,"///< Set of continuous observables over which is integrated numerically",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h:12,continuous,continuous,12,roofit/roofitcore/inc/RooRealIntegral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h,2,"['continuous', 'integrat']","['continuous', 'integrated']"
Deployability,"///< Set of lvalue observables over which is analytically integration that have a non-unit Jacobian",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h:58,integrat,integration,58,roofit/roofitcore/inc/RooRealIntegral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h,1,['integrat'],['integration']
Deployability,"///< Set of observables on which function does not depends, which are integrated nevertheless",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h:70,integrat,integrated,70,roofit/roofitcore/inc/RooRealIntegral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h,1,['integrat'],['integrated']
Deployability,"///< Set of observables over which is integrated/summed analytically",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h:38,integrat,integrated,38,roofit/roofitcore/inc/RooRealIntegral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h,1,['integrat'],['integrated']
Deployability,///< Shared capability that was released.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp:32,release,released,32,interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,1,['release'],['released']
Deployability,"///< The accumulation of the past Biases for performing updates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RMSProp.h:56,update,updates,56,tmva/tmva/inc/TMVA/DNN/RMSProp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RMSProp.h,1,['update'],['updates']
Deployability,"///< The accumulation of the past Weights for performing updates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RMSProp.h:57,update,updates,57,tmva/tmva/inc/TMVA/DNN/RMSProp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RMSProp.h,1,['update'],['updates']
Deployability,"///< The accumulation of the square of the past bias; /// updates associated with the deep net.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adadelta.h:58,update,updates,58,tmva/tmva/inc/TMVA/DNN/Adadelta.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adadelta.h,1,['update'],['updates']
Deployability,"///< The accumulation of the square of the past weight; /// updates associated with the deep net.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adadelta.h:60,update,updates,60,tmva/tmva/inc/TMVA/DNN/Adadelta.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adadelta.h,1,['update'],['updates']
Deployability,"///< The decaying average of the second moment of the past; /// bias gradients associated with the deep net.; /*! Update the weights, given the current weight gradients. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adam.h:114,Update,Update,114,tmva/tmva/inc/TMVA/DNN/Adam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adam.h,1,['Update'],['Update']
Deployability,"///< The kind of axis represented by this configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx:42,configurat,configuration,42,hist/histv7/inc/ROOT/RAxisConfig.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx,1,['configurat'],['configuration']
Deployability,"///< The reference to the deep net.; /*! Update the weights, given the current weight gradients. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Optimizer.h:41,Update,Update,41,tmva/tmva/inc/TMVA/DNN/Optimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Optimizer.h,1,['Update'],['Update']
Deployability,"///< The sum of the past bias gradients associated with the deep net.; /*! Update the weights, given the current weight gradients. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/SGD.h:75,Update,Update,75,tmva/tmva/inc/TMVA/DNN/SGD.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/SGD.h,1,['Update'],['Update']
Deployability,"///< This worker's socket. The unique_ptr makes sure resources are released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorker.h:67,release,released,67,core/multiproc/inc/TMPWorker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorker.h,1,['release'],['released']
Deployability,"///< Update Gate bias",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:5,Update,Update,5,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,1,['Update'],['Update']
Deployability,"///< Update Gate weights for input, fWeights[2]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:5,Update,Update,5,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,1,['Update'],['Update']
Deployability,"///< Update Gate weights for prev state, fWeights[3]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:5,Update,Update,5,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,1,['Update'],['Update']
Deployability,"///< Update frequency for EntryLoop",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTree.h:5,Update,Update,5,tree/tree/inc/TTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTree.h,1,['Update'],['Update']
Deployability,"///< Update gate value for every time step",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:5,Update,Update,5,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,1,['Update'],['Update']
Deployability,"///< Updated by the descriptor builder when columns are added",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleDescriptor.hxx:5,Update,Updated,5,tree/ntuple/v7/inc/ROOT/RNTupleDescriptor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleDescriptor.hxx,1,['Update'],['Updated']
Deployability,"///< Updated by the descriptor builder when the cluster groups are added",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleDescriptor.hxx:5,Update,Updated,5,tree/ntuple/v7/inc/ROOT/RNTupleDescriptor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleDescriptor.hxx,2,['Update'],['Updated']
Deployability,///< What to patch the instruction,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/BTF/BTF.h:13,patch,patch,13,interpreter/llvm-project/llvm/include/llvm/DebugInfo/BTF/BTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/BTF/BTF.h,2,['patch'],['patch']
Deployability,"///< adaptive multi-dimensional integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:32,integrat,integration,32,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['integrat'],['integration']
Deployability,"///< boolean, is color map currently installed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:37,install,installed,37,core/gui/inc/GuiTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h,1,['install'],['installed']
Deployability,"///< current configurations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx:13,configurat,configurations,13,geom/webviewer/inc/ROOT/RGeomData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx,1,['configurat'],['configurations']
Deployability,"///< cutoff variable to use for integrating keys pdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCInterval.h:32,integrat,integrating,32,roofit/roostats/inc/RooStats/MCMCInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCInterval.h,1,['integrat'],['integrating']
Deployability,"///< default adaptive integration type which can be used in the case of the presence of singularities.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:22,integrat,integration,22,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['integrat'],['integration']
Deployability,"///< fitter configuration (options and parameter settings)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:12,configurat,configuration,12,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,2,['configurat'],['configuration']
Deployability,"///< for local/remote update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGCommandPlugin.h:22,update,update,22,gui/gui/inc/TGCommandPlugin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGCommandPlugin.h,1,['update'],['update']
Deployability,"///< for statusbar and toolbar update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGTextEditor.h:31,update,update,31,gui/gui/inc/TGTextEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGTextEditor.h,1,['update'],['update']
Deployability,"///< immediate update switch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitParametersDialog.h:15,update,update,15,gui/fitpanel/inc/TFitParametersDialog.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitParametersDialog.h,1,['update'],['update']
Deployability,"///< integrated likelihood function, i.e - unnormalized posterior function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/BayesianCalculator.h:5,integrat,integrated,5,roofit/roostats/inc/RooStats/BayesianCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/BayesianCalculator.h,1,['integrat'],['integrated']
Deployability,"///< integration error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:5,integrat,integration,5,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['integrat'],['integration']
Deployability,"///< integration interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h:5,integrat,integration,5,tmva/tmva/inc/TMVA/PDF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h,1,['integrat'],['integration']
Deployability,"///< integration operation mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h:5,integrat,integration,5,roofit/roofitcore/inc/RooRealIntegral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h,1,['integrat'],['integration']
Deployability,"///< kTRUE if function is updated on run-time",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitParametersDialog.h:26,update,updated,26,gui/fitpanel/inc/TFitParametersDialog.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitParametersDialog.h,2,['update'],['updated']
Deployability,"///< last integration result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:10,integrat,integration,10,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['integrat'],['integration']
Deployability,"///< manual integration (sum over bins) or DGAUSS",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h:12,integrat,integration,12,tmva/tmva/inc/TMVA/PDF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h,1,['integrat'],['integration']
Deployability,"///< number of updates contributing to error field",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSynapse.h:15,update,updates,15,tmva/tmva/inc/TMVA/TSynapse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSynapse.h,1,['update'],['updates']
Deployability,"///< observables that p.d.f is integrated over",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProjectedPdf.h:31,integrat,integrated,31,roofit/roofitcore/inc/RooProjectedPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProjectedPdf.h,1,['integrat'],['integrated']
Deployability,///< output size of the DNN; /*! \brief set the drop out configuration; *; *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:57,configurat,configuration,57,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['configurat'],['configuration']
Deployability,"///< p.d.f that is integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProjectedPdf.h:19,integrat,integrated,19,roofit/roofitcore/inc/RooProjectedPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProjectedPdf.h,1,['integrat'],['integrated']
Deployability,"///< pointer on widget, need to release when handle is destroyed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/qt5webdisplay/rootqt5.cpp:32,release,release,32,gui/qt5webdisplay/rootqt5.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/qt5webdisplay/rootqt5.cpp,2,['release'],['release']
Deployability,"///< pointer to integrator interface class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:16,integrat,integrator,16,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,1,['integrat'],['integrator']
Deployability,"///< pointer to multi-dimensional integrator base class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:34,integrat,integrator,34,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,1,['integrat'],['integrator']
Deployability,"///< simple Gauss integration method with fixed rule",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:18,integrat,integration,18,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['integrat'],['integration']
Deployability,///< stack smasher canary present on stack.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h:19,canary,canary,19,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,1,['canary'],['canary']
Deployability,"///< toggle wavy / curly",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TCurlyLineEditor.h:5,toggle,toggle,5,gui/ged/inc/TCurlyLineEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TCurlyLineEditor.h,1,['toggle'],['toggle']
Deployability,"///< true if rule/linear respons are updated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h:37,update,updated,37,tmva/tmva/inc/TMVA/RuleEnsemble.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h,1,['update'],['updated']
Deployability,"///< update canvas at the end",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RCanvas.hxx:5,update,update,5,graf2d/gpadv7/inc/ROOT/RCanvas.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RCanvas.hxx,1,['update'],['update']
Deployability,"///< update preview button",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h:5,update,update,5,gui/ged/inc/TStyleManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h,1,['update'],['update']
Deployability,"///< update the configuration after a fit using the result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:5,update,update,5,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"///< updates data from gROOT and gDirectory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitEditor.h:5,update,updates,5,gui/fitpanel/inc/TFitEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitEditor.h,1,['update'],['updates']
Deployability,"///< when >0 : number of bins (discrete interval); when ==0 continuous interval",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Interval.h:60,continuous,continuous,60,tmva/tmva/inc/TMVA/Interval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Interval.h,1,['continuous'],['continuous']
Deployability,"///< whether to set updates for proposal params in PdfProposal",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProposalHelper.h:20,update,updates,20,roofit/roostats/inc/RooStats/ProposalHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProposalHelper.h,1,['update'],['updates']
Deployability,"///< working tensor used to keep a temporary copy of bias or bias gradients; /*! Update the weights, given the current weight gradients. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adadelta.h:81,Update,Update,81,tmva/tmva/inc/TMVA/DNN/Adadelta.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adadelta.h,3,['Update'],['Update']
Deployability,"///<! Address of user branch pointer (to updated upon loading a file)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TChainElement.h:41,update,updated,41,tree/tree/inc/TChainElement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TChainElement.h,1,['update'],['updated']
Deployability,"///<! Auxiliary class keeping tracking of analytical integration code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooHistFunc.h:53,integrat,integration,53,roofit/roofitcore/inc/RooHistFunc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooHistFunc.h,2,['integrat'],['integration']
Deployability,"///<! Flags if variable needs update on server-side",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h:30,update,update,30,roofit/roofitcore/src/RooRealMPFE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h,2,['update'],['update']
Deployability,"///<! Integrator used to sample bins.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h:6,Integrat,Integrator,6,roofit/roofitcore/inc/RooBinSamplingPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h,1,['Integrat'],['Integrator']
Deployability,"///<! Integrator workspace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:6,Integrat,Integrator,6,roofit/roofitcore/src/RooRombergIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h,1,['Integrat'],['Integrator']
Deployability,"///<! Lower integration bound",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.h:12,integrat,integration,12,roofit/roofitcore/src/RooBinIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.h,1,['integrat'],['integration']
Deployability,"///<! Lower integration bounds",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:12,integrat,integration,12,roofit/roofitcore/src/RooRombergIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h,1,['integrat'],['integration']
Deployability,"///<! MC generator configuration specific for this object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h:19,configurat,configuration,19,roofit/roofitcore/inc/RooAbsPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h,1,['configurat'],['configuration']
Deployability,"///<! Map for analytical integration codes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:25,integrat,integration,25,roofit/roofitcore/inc/RooAbsCachedPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h,2,['integrat'],['integration']
Deployability,"///<! Normalization/Integration set manager",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCacheManager.h:20,Integrat,Integration,20,roofit/roofitcore/inc/RooCacheManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCacheManager.h,1,['Integrat'],['Integration']
Deployability,"///<! Number of virtual info location to update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TStreamerInfo.h:41,update,update,41,io/io/inc/TStreamerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TStreamerInfo.h,1,['update'],['update']
Deployability,"///<! Numeric integrator of convolution integrand",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h:14,integrat,integrator,14,roofit/roofitcore/inc/RooNumConvolution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h,1,['integrat'],['integrator']
Deployability,"///<! Registry for analytical integration codes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:30,integrat,integration,30,roofit/roofitcore/inc/RooAbsCachedPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h,1,['integrat'],['integration']
Deployability,"///<! Registry of analytical integration codes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:29,integrat,integration,29,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h,1,['integrat'],['integration']
Deployability,"///<! Registry of component analytical integration codes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAddModel.h:39,integrat,integration,39,roofit/roofitcore/inc/RooAddModel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAddModel.h,2,['integrat'],['integration']
Deployability,"///<! Request for forced cache update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooVectorDataStore.h:31,update,update,31,roofit/roofitcore/inc/RooVectorDataStore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooVectorDataStore.h,1,['update'],['update']
Deployability,"///<! Set to True when Update method was called; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TCanvas.h:23,Update,Update,23,graf2d/gpad/inc/TCanvas.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TCanvas.h,1,['Update'],['Update']
Deployability,"///<! Set to the selector address when it's entry list needs to be updated by the UpdateFormulaLeaves function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePlayer.h:67,update,updated,67,tree/treeplayer/inc/TTreePlayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePlayer.h,2,"['Update', 'update']","['UpdateFormulaLeaves', 'updated']"
Deployability,"///<! Size of integration range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.h:14,integrat,integration,14,roofit/roofitcore/src/RooBinIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.h,1,['integrat'],['integration']
Deployability,"///<! The integration cache manager",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h:10,integrat,integration,10,roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h,3,['integrat'],['integration']
Deployability,"///<! Update master",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h:6,Update,Update,6,roofit/roofitcore/src/RooRealMPFE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h,1,['Update'],['Update']
Deployability,"///<! Upper integration bound",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.h:12,integrat,integration,12,roofit/roofitcore/src/RooBinIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.h,1,['integrat'],['integration']
Deployability,"///<! Upper integration bounds; // Numerical integrator workspace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:12,integrat,integration,12,roofit/roofitcore/src/RooRombergIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h,2,['integrat'],"['integration', 'integrator']"
Deployability,"///<! callback function associated with the update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx:44,update,update,44,gui/canvaspainter/src/RCanvasPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx,1,['update'],['update']
Deployability,"///<! configuration parameter editable from GUI",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx:6,configurat,configuration,6,geom/webviewer/inc/ROOT/RGeomData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx,1,['configurat'],['configuration']
Deployability,"///<! configuration, exchanged between client and server",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/inc/ROOT/RTreeViewer.hxx:6,configurat,configuration,6,tree/webviewer/inc/ROOT/RTreeViewer.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/inc/ROOT/RTreeViewer.hxx,1,['configurat'],['configuration']
Deployability,"///<! is canvas update required",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RCanvas.hxx:16,update,update,16,graf2d/gpadv7/inc/ROOT/RCanvas.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RCanvas.hxx,1,['update'],['update']
Deployability,"///<! list of callbacks for canvas update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx:35,update,update,35,gui/canvaspainter/src/RCanvasPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx,1,['update'],['update']
Deployability,"///<! signal emitted when canvas updated or state is changed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h:33,update,updated,33,gui/webgui6/inc/TWebCanvas.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h,1,['update'],['updated']
Deployability,"///<! variable indicates can be basic configuration changed or not",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/inc/TSQLFile.h:38,configurat,configuration,38,io/sql/inc/TSQLFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/inc/TSQLFile.h,1,['configurat'],['configuration']
Deployability,"///<! version of SQL I/O which is stored in configurations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/inc/TSQLFile.h:44,configurat,configurations,44,io/sql/inc/TSQLFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/inc/TSQLFile.h,1,['configurat'],['configurations']
Deployability,"///<! when true, methods like TCanvas::Update will never block",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h:39,Update,Update,39,gui/webgui6/inc/TWebCanvas.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h,1,['Update'],['Update']
Deployability,"///<!; /// indicate if Update() method was called before",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RCanvas.hxx:23,Update,Update,23,graf2d/gpadv7/inc/ROOT/RCanvas.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RCanvas.hxx,1,['Update'],['Update']
Deployability,///@name processMethods; /// Methods to process instructions in order to update the LiveSet (current; /// location information).; ///@{,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:73,update,update,73,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['update'],['update']
Deployability,"///@{; /// \name Mutation APIs; ///; /// These methods provide APIs for submitting updates to the DominatorTree and; /// the PostDominatorTree.; ///; /// Note: There are two strategies to update the DominatorTree and the; /// PostDominatorTree:; /// 1. Eager UpdateStrategy: Updates are submitted and then flushed; /// immediately.; /// 2. Lazy UpdateStrategy: Updates are submitted but only flushed when you; /// explicitly call Flush APIs. It is recommended to use this update strategy; /// when you submit a bunch of updates multiple times which can then; /// add up to a large number of updates between two queries on the; /// DominatorTree. The incremental updater can reschedule the updates or; /// decide to recalculate the dominator tree in order to speedup the updating; /// process depending on the number of updates.; ///; /// Although GenericDomTree provides several update primitives,; /// it is not encouraged to use these APIs directly.; /// Submit updates to all available trees.; /// The Eager Strategy flushes updates immediately while the Lazy Strategy; /// queues the updates.; ///; /// Note: The ""existence"" of an edge in a CFG refers to the CFG which DTU is; /// in sync with + all updates before that single update.; ///; /// CAUTION!; /// 1. It is required for the state of the LLVM IR to be updated; /// *before* submitting the updates because the internal update routine will; /// analyze the current state of the CFG to determine whether an update; /// is valid.; /// 2. It is illegal to submit any update that has already been submitted,; /// i.e., you are supposed not to insert an existent edge or delete a; /// nonexistent edge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:83,update,updates,83,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,23,"['Update', 'update']","['UpdateStrategy', 'Updates', 'update', 'updated', 'updater', 'updates']"
Deployability,"///@{; /// \name Pre-SCC Mutation API; ///; /// These methods are only valid to call prior to forming any SCCs for this; /// call graph. They can be used to update the core node-graph during; /// a node-based inorder traversal that precedes any SCC-based traversal.; ///; /// Once you begin manipulating a call graph's SCCs, most mutation of the; /// graph must be performed via a RefSCC method. There are some exceptions; /// below.; /// Update the call graph after inserting a new edge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:157,update,update,157,interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,2,"['Update', 'update']","['Update', 'update']"
Deployability,"///@}; ///@{; /// \name Flush APIs; ///; /// CAUTION! By the moment these flush APIs are called, the current CFG needs; /// to be the same as the CFG which DTU is in sync with + all updates; /// submitted.; /// Flush DomTree updates and return DomTree.; /// It flushes Deleted BBs if both trees are up-to-date.; /// It must only be called when it has a DomTree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:182,update,updates,182,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,2,['update'],['updates']
Deployability,"///@}; ///@{; /// \name Static helpers for code doing updates to the call graph.; ///; /// These helpers are used to implement parts of the call graph but are also; /// useful to code doing updates or otherwise wanting to walk the IR in the; /// same patterns as when we build the call graph.; /// Recursively visits the defined functions whose address is reachable from; /// every constant in the \p Worklist.; ///; /// Doesn't recurse through any constants already in the \p Visited set, and; /// updates that set with every constant visited.; ///; /// For each defined function, calls \p Callback with that function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:54,update,updates,54,interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,3,['update'],['updates']
Deployability,"///Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h:19,configurat,configuration,19,roofit/roofitcore/inc/RooAbsPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h,1,['configurat'],['configuration']
Deployability,"///Update configuration after a fit using the FitResult",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:3,Update,Update,3,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,4,"['Update', 'configurat']","['Update', 'configuration']"
Deployability,///Whether we are currently processing update records.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:39,update,update,39,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['update'],['update']
Deployability,"///\ returns the include directory in the installation.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:42,install,installation,42,core/foundation/res/ROOT/FoundationUtils.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx,1,['install'],['installation']
Deployability,"///\brief Changes the input mode to raw input. In that mode we act more like; /// a compiler by bypassing many of cling's features.; ///; ///\param[in] mode - either on/off or toggle.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:176,toggle,toggle,176,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h,1,['toggle'],['toggle']
Deployability,"///\brief Configuration bits that can be changed at runtime. This allows the; /// user to enable/disable specific interpreter extensions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:10,Configurat,Configuration,10,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['Configurat'],['Configuration']
Deployability,"///\brief Flag determining the visitor's actions. If true, register autoload; /// entries, i.e. remember the connection between filename and the declaration; /// that needs to be updated on #include of the filename.; /// If false, react on an #include by adjusting the forward decls, e.g. by; /// removing the default template arguments (that will now be provided by; /// the definition read from the include).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoloadCallback.cpp:179,update,updated,179,interpreter/cling/lib/Interpreter/AutoloadCallback.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/AutoloadCallback.cpp,1,['update'],['updated']
Deployability,"///\brief Generates debug info for the JIT.; ///; ///\param[in] mode - either on/off or toggle.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:88,toggle,toggle,88,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h,1,['toggle'],['toggle']
Deployability,"///\brief Get a path to an installed VisualStudio directory matching:; /// 1. Version that cling was compiled; /// 2. Version that shell is initialized to; /// 3. Highest installed version; ///; /// \param [out] Path - Path to VisualStudio; /// \param [out] WindSDK - Store the path to the Windows SDK here; /// \param [in/out] UniversalSDK - Universal SDK version to match, or empty to; /// match the highest version. On ouput the path to the Universal SDK.; /// \param [in] Verbose - Log progress; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:27,install,installed,27,interpreter/cling/include/cling/Utils/Platform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h,2,['install'],['installed']
Deployability,"///\brief Lock a region of compilation that is executed by the interpreter; /// during user code execution.; ///; /// When cling is used in multi-threaded environments, all calls to cling; /// are expected to be locked by the caller. Cling will release that lock; /// using `EnteringUserCode()` and re-instate that lock using; /// `ReturnedFromUserCode()` for the duration of the execution of the user; /// code. But that user code can trigger calls to the interpreter itself.; /// These calls are due to instrumented parts of the user code, e.g.; /// `printValue()` calls and `cling::runtime::internal::LifetimeHandler`; /// calls. For those, cling needs to be locked with a mechanism compatible; /// with the mechanism used for `EnteringUserCode()` /; /// `ReturnedFromUserCode()` to avoid deadlocks. Before entering compilation; /// triggered by user code, cling will call; /// `LockCompilationDuringUserCodeExecution()`; after the execution of that; /// code has finished it will call; /// `UnlockCompilationDuringUserCodeExecution()`.; /// Note that after the compilation of that code cling will call; /// `EnteringUserCode()` (before executing) and `ReturnedFromUserCode()`; /// (after execution that code).; ///; /// \returns An optional state object needed for the call to; /// `UnlockCompilationDuringUserCodeExecution(state)`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:245,release,release,245,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,1,['release'],['release']
Deployability,"///\brief Look for a tag decl based on its name; ///; ///\param declName name of the class, enum, uniorn or namespace being; /// looked for; ///\param resultDecl pointer that will be updated with the answer; ///\param P Parse to use for the search; ///\param diagOnOff whether the error diagnostics are printed or not.; ///\return returns true if the answer is authoritative or false if a more; /// detailed search is needed (usually this is for class template; /// instances).; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:183,update,updated,183,interpreter/cling/lib/Interpreter/LookupHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp,1,['update'],['updated']
Deployability,"///\brief Look for a tag decl based on its name; ///; ///\param typeName name of the class, enum, uniorn or namespace being; /// looked for; ///\param resultType reference to QualType that will be updated with the answer; ///\param P Parse to use for the search; ///\param diagOnOff whether the error diagnostics are printed or not.; ///\return returns true if the answer is authoritative or false if a more; /// detailed search is needed (usually this is for class template; /// instances).; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:197,update,updated,197,interpreter/cling/lib/Interpreter/LookupHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp,1,['update'],['updated']
Deployability,"///\brief Prints out the the Debug information of the state changes.; ///; ///\param[in] mode - either on/off or toggle.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:113,toggle,toggle,113,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h,1,['toggle'],['toggle']
Deployability,"///\brief Return whether the contained object has been constructed,; /// or rather, whether the canary has been changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:96,canary,canary,96,interpreter/cling/lib/Interpreter/Value.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp,1,['canary'],['canary']
Deployability,"///\brief Switches on/off the experimental dynamic extensions (dynamic; /// scopes) and late binding.; ///; ///\param[in] mode - either on/off or toggle.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:146,toggle,toggle,146,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h,1,['toggle'],['toggle']
Deployability,"///\brief Wraps a given input.; ///; /// The interpreter must be able to run statements on the fly, which is not; /// C++ standard-compliant operation. In order to do that we must wrap the; /// input into a artificial function, containing the statements and run it.; ///\param [in] Input - The input to wrap.; ///\param [out] Buffer - string to store input if wrapped (can be Input).; ///\param [in/out] WrapPoint - The position in Input to add the wrapper.; /// On exit WrapPoint is updated to the position of Input in Buffer.; ///; ///\returns A reference to Buffer when wrapped, otherwise a ref to Input; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:484,update,updated,484,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['update'],['updated']
Deployability,"///\returns the fallback directory in the installation (eg. /usr/local/root/).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:42,install,installation,42,core/foundation/res/ROOT/FoundationUtils.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx,1,['install'],['installation']
Deployability,"///\returns the relative path of \c path with respect to \c base.; /// For instance, for path being ""/a/b/c/d"" and base ""/a/b"", returns ""c/d"".; ///; ///\param path - the input path; ///; ///\param base - the base path to be removed from \c path.; ///; ///\param isBuildingROOT - if true, it converts module directories such as; /// core/base/inc/ to include/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:102,a/b,a/b,102,core/foundation/res/ROOT/FoundationUtils.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx,2,['a/b'],['a/b']
Deployability,"///\returns the rootsys directory in the installation.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:41,install,installation,41,core/foundation/res/ROOT/FoundationUtils.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx,1,['install'],['installation']
Deployability,"///\returns the sysconfig directory in the installation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:43,install,installation,43,core/foundation/res/ROOT/FoundationUtils.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx,1,['install'],['installation']
Deployability,"///\}; /// Add two histograms.; ///; /// This operation may currently only be performed if the two histograms have; /// the same axis configuration, use the same precision, and if `from` records; /// at least the same statistics as `to` (recording more stats is fine).; ///; /// Adding histograms with incompatible axis binning will be reported at runtime; /// with an `std::runtime_error`. Insufficient statistics in the source; /// histogram will be detected at compile-time and result in a compiler error.; ///; /// In the future, we may either adopt a more relaxed definition of histogram; /// addition or provide a mechanism to convert from one histogram type to; /// another. We currently favor the latter path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:134,configurat,configuration,134,hist/histv7/inc/ROOT/RHist.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx,1,['configurat'],['configuration']
Deployability,"///release a parameter that is fixed when it is redefined",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h:3,release,release,3,math/minuit/inc/TMinuitMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h,1,['release'],['release']
Deployability,///}; /// Container with all the query AAs that requested an update via; /// registerForUpdate.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:61,update,update,61,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['update']
Deployability,"//; // Client ""protocol changes""; //; // This was in TNetFile and TAuthenticate before, but after the introduction; // of TSocket::CreateAuthSocket the common place for all the clients is TSocket,; // so this seems to be the right place for a version number; //; // 7: added support for ReOpen(), kROOTD_BYE and kROOTD_PROTOCOL2; // 8: added support for update being a create (open stat = 2 and not 1); // 9: added new authentication features (see README.AUTH); // 10: added support for authenticated socket via TSocket::CreateAuthSocket(...); // 11: modified SSH protocol + support for server 'no authentication' mode; // 12: add random tags to avoid reply attacks (password+token); // 13: authentication re-organization; cleanup in PROOF; // 14: support for SSH authentication via SSH tunnel; // 15: cope with fixes in TUrl::GetFile; // 16: add env setup message exchange; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:354,update,update,354,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,1,['update'],['update']
Deployability,//; // FIXME: This path will currently return false. It was copied; // from the AArch64 port and should be essentially fine for Mips too.; // The work to finish up this path will be done in a follow-on patch.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp:202,patch,patch,202,interpreter/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp,1,['patch'],['patch']
Deployability,"//; // If we are a top-level branch, update addresses.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:37,update,update,37,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['update'],['update']
Deployability,"//; // OpenGL's tesselator calls callback functions glBegin(MODE), glVertex3(v), glEnd(),; // where v can be new vertex (or existing) and MODE is a type of mesh patch.; // MeshPatch_t is a class to save such a tesselation; // (instead of using glVertex and glBegin to draw.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLPadUtils.h:161,patch,patch,161,graf3d/gl/inc/TGLPadUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLPadUtils.h,1,['patch'],['patch']
Deployability,"//; // S2 is normally saved if the stub is for a function which; // returns a float or double value and is not otherwise. This is; // because more work is required after the function the stub; // is calling completes, and so the stub cannot directly return; // and the stub has no stack space to store the return address so; // S2 is used for that purpose.; // In order to take advantage of not saving S2, we need to also; // optimize the call in the stub and this requires some further; // functionality in MipsAsmPrinter which we don't have yet.; // So for now we always save S2. The optimization will be done; // in a follow-on patch.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp:631,patch,patch,631,interpreter/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp,1,['patch'],['patch']
Deployability,//; // Synthesize missing sub-classes for getSubClassWithSubReg().; //; // Make sure that the set of registers in RC with a given SubIdx sub-register; // form a register class. Update RC->SubClassWithSubReg.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp:177,Update,Update,177,interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,1,['Update'],['Update']
Deployability,"//; // TSecContextCleanup; //; // When the context is destroyed the remote authentication table; // should be updated; for this we need to open a socket to a remote; // service; we keep track here of port and type of socket needed by; // the remote service used in connection with this security context.; // The last used is the first in the list.; // This info is used in TAuthenticate::CleanupSecContext to trasmit; // the actual cleanup request; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSecContext.h:110,update,updated,110,net/net/inc/TSecContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSecContext.h,1,['update'],['updated']
Deployability,"//; // The ""fitEllipseTGraphDLSF"" macro uses the ""Direct Least Squares Fitting""; // algorithm for fitting an ellipse to a set of data points from a TGraph; //; // To try this macro, in a ROOT prompt, do:; // .L fitEllipseTGraphDLSF.cxx // or "".L fitEllipseTGraphDLSF.cxx++""; // fitEllipseTGraphDLSF(TestGraphDLSF());; // for (int i=0; i<10; i++) { fitEllipseTGraphDLSF(); gSystem->Sleep(333); }; //; // Last update: Thu Jul 31 18:00:00 UTC 2014; //; // Changes:; // 2014.07.31 - (initial version); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx:408,update,update,408,tutorials/fit/fitEllipseTGraphDLSF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx,1,['update'],['update']
Deployability,"//; // The ""fitEllipseTGraphRMM"" macro uses the ""ROOT::Math::Minimizer""; // interface for fitting an ellipse to a set of data points from a TGraph; //; // To try this macro, in a ROOT prompt, do:; // .L fitEllipseTGraphRMM.cxx // or "".L fitEllipseTGraphRMM.cxx++""; // fitEllipseTGraphRMM(TestGraphRMM());; // for (int i=0; i<10; i++) { fitEllipseTGraphRMM(); gSystem->Sleep(333); }; //; // Last update: Thu Jul 31 18:00:00 UTC 2014; //; // Changes:; // 2014.07.31 - (initial version); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:395,update,update,395,tutorials/fit/fitEllipseTGraphRMM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx,1,['update'],['update']
Deployability,"//; // This is the multi-threaded multiclass version; //; // Note: we only need to update the predicted probabilities every; // `nClasses` tree. Let's call a set of `nClasses` trees a ""round"". Thus; // the algortihm is split in two parts `update_residuals` and; // `update_residuals_last` where the latter is inteded to be run instead; // of the former for the last tree in a ""round"".; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:83,update,update,83,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['update'],['update']
Deployability,"//; // Update rule and linear respons using the current event; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h:7,Update,Update,7,tmva/tmva/inc/TMVA/RuleEnsemble.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h,1,['Update'],['Update']
Deployability,"//; // We need to add a MipsMCExpr class to MCTargetDesc to fully implement; // stubs without raw text but this current patch is for compiler generated; // functions and they all return some value.; // The calling sequence for non pic is different in that case and we need; // to implement %lo and %hi in order to handle the case of no return value; // See the corresponding method in Mips16HardFloat for details.; //; // mov the return address to S2.; // we have no stack space to store it and we are about to make another call.; // We need to make sure that the enclosing function knows to save S2; // This should have already been handled.; //; // Mov $18, $31",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp:120,patch,patch,120,interpreter/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp,1,['patch'],['patch']
Deployability,//; // event callbacks - update the object state; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:25,update,update,25,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,//; // more cases will be handled here in following patches.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp:52,patch,patches,52,interpreter/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp,2,['patch'],['patches']
Deployability,"//=- SyntheticCountsPropagation.cpp - Propagate function counts --*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a transformation that synthesizes entry counts for; // functions and attaches !prof metadata to functions with the synthesized; // counts. The presence of !prof metadata with counter name set to; // 'synthesized_function_entry_count' indicate that the value of the counter is; // an estimation of the likely execution count of the function. This transform; // is applied only in non PGO mode as functions get 'real' profile-based; // function entry counts in the PGO mode.; //; // The transformation works by first assigning some initial values to the entry; // counts of all functions and then doing a top-down traversal of the; // callgraph-scc to propagate the counts. For each function the set of callsites; // and their relative block frequency is gathered. The relative block frequency; // multiplied by the entry count of the caller and added to the callee's entry; // count. For non-trivial SCCs, the new counts are computed from the previous; // counts and updated in one shot.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SyntheticCountsPropagation.cpp:1369,update,updated,1369,interpreter/llvm-project/llvm/lib/Transforms/IPO/SyntheticCountsPropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SyntheticCountsPropagation.cpp,1,['update'],['updated']
Deployability,"//=-- SystemZHazardRecognizer.h - SystemZ Hazard Recognizer -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares a hazard recognizer for the SystemZ scheduler.; //; // This class is used by the SystemZ scheduling strategy to maintain; // the state during scheduling, and provide cost functions for; // scheduling candidates. This includes:; //; // * Decoder grouping. A decoder group can maximally hold 3 uops, and; // instructions that always begin a new group should be scheduled when; // the current decoder group is empty.; // * Processor resources usage. It is beneficial to balance the use of; // resources.; //; // A goal is to consider all instructions, also those outside of any; // scheduling region. Such instructions are ""advanced"" past and include; // single instructions before a scheduling region, branches etc.; //; // A block that has only one predecessor continues scheduling with the state; // of it (which may be updated by emitting branches).; //; // ===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h:1222,update,updated,1222,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,1,['update'],['updated']
Deployability,"//=-- SystemZHazardRecognizer.h - SystemZ Hazard Recognizer -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a hazard recognizer for the SystemZ scheduler.; //; // This class is used by the SystemZ scheduling strategy to maintain; // the state during scheduling, and provide cost functions for; // scheduling candidates. This includes:; //; // * Decoder grouping. A decoder group can maximally hold 3 uops, and; // instructions that always begin a new group should be scheduled when; // the current decoder group is empty.; // * Processor resources usage. It is beneficial to balance the use of; // resources.; //; // A goal is to consider all instructions, also those outside of any; // scheduling region. Such instructions are ""advanced"" past and include; // single instructions before a scheduling region, branches etc.; //; // A block that has only one predecessor continues scheduling with the state; // of it (which may be updated by emitting branches).; //; // ===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp:1221,update,updated,1221,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp,1,['update'],['updated']
Deployability,"//=--- RegUsageInfoPropagate.cpp - Register Usage Informartion Propagation --=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// This pass is required to take advantage of the interprocedural register; /// allocation infrastructure.; ///; /// This pass iterates through MachineInstrs in a given MachineFunction and at; /// each callsite queries RegisterUsageInfo for RegMask (calculated based on; /// actual register allocation) of the callee function, if the RegMask detail; /// is available then this pass will update the RegMask of the call instruction.; /// This updated RegMask will be used by the register allocator while allocating; /// the current MachineFunction.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegUsageInfoPropagate.cpp:769,update,update,769,interpreter/llvm-project/llvm/lib/CodeGen/RegUsageInfoPropagate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegUsageInfoPropagate.cpp,2,['update'],"['update', 'updated']"
Deployability,"//== MIGChecker.cpp - MIG calling convention checker ------------*- C++ -*--==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines MIGChecker, a Mach Interface Generator calling convention; // checker. Namely, in MIG callback implementation the following rules apply:; // - When a server routine returns an error code that represents success, it; // must take ownership of resources passed to it (and eventually release; // them).; // - Additionally, when returning success, all out-parameters must be; // initialized.; // - When it returns any other error code, it must not take ownership,; // because the message and its out-of-line parameters will be destroyed; // by the client that called the function.; // For now we only check the last rule, as its violations lead to dangerous; // use-after-free exploits.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MIGChecker.cpp:682,release,release,682,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MIGChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MIGChecker.cpp,1,['release'],['release']
Deployability,"//== Yaml.h ---------------------------------------------------- -*- C++ -*--=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines convenience functions for handling YAML configuration files; // for checkers/packages.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/Yaml.h:441,configurat,configuration,441,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/Yaml.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/Yaml.h,1,['configurat'],['configuration']
Deployability,"//==- CheckObjCDealloc.cpp - Check ObjC -dealloc implementation --*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This checker analyzes Objective-C -dealloc methods and their callees; // to warn about improper releasing of instance variables that back synthesized; // properties. It warns about missing releases in the following cases:; // - When a class has a synthesized instance variable for a 'retain' or 'copy'; // property and lacks a -dealloc method in its implementation.; // - When a class has a synthesized instance variable for a 'retain'/'copy'; // property but the ivar is not released in -dealloc by either -release; // or by nilling out the property.; //; // It warns about extra releases in -dealloc (but not in callees) when a; // synthesized instance variable is released in the following cases:; // - When the property is 'assign' and is not 'readonly'.; // - When the property is 'weak'.; //; // This checker only warns for instance variables synthesized to back; // properties. Handling the more general case would require inferring whether; // an instance variable is stored retained or not. For synthesized properties,; // this is specified in the property declaration itself.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:572,release,releases,572,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,5,['release'],"['release', 'released', 'releases']"
Deployability,"//==- X86IndirectThunks.cpp - Construct indirect call/jump thunks for x86 --=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// Pass that injects an MI thunk that is used to lower indirect calls in a way; /// that prevents speculation on some x86 processors and can be used to mitigate; /// security vulnerabilities due to targeted speculative execution and side; /// channels such as CVE-2017-5715.; ///; /// Currently supported thunks include:; /// - Retpoline -- A RET-implemented trampoline that lowers indirect calls; /// - LVI Thunk -- A CALL/JMP-implemented thunk that forces load serialization; /// before making an indirect call/jump; ///; /// Note that the reason that this is implemented as a MachineFunctionPass and; /// not a ModulePass is that ModulePasses at this point in the LLVM X86 pipeline; /// serialize all transformations, which can consume lots of memory.; ///; /// TODO(chandlerc): All of this code could use better comments and; /// documentation.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86IndirectThunks.cpp:1068,pipeline,pipeline,1068,interpreter/llvm-project/llvm/lib/Target/X86/X86IndirectThunks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86IndirectThunks.cpp,1,['pipeline'],['pipeline']
Deployability,"//==-- llvm/CodeGen/ExecutionDomainFix.h - Execution Domain Fix -*- C++ -*--==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Execution Domain Fix pass.; ///; /// Some X86 SSE instructions like mov, and, or, xor are available in different; /// variants for different operand types. These variant instructions are; /// equivalent, but on Nehalem and newer cpus there is extra latency; /// transferring data between integer and floating point domains. ARM cores; /// have similar issues when they are configured with both VFP and NEON; /// pipelines.; ///; /// This pass changes the variant instructions to minimize domain crossings.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h:802,pipeline,pipelines,802,interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,1,['pipeline'],['pipelines']
Deployability,"//==-- llvm/CodeGen/GlobalISel/Utils.h ---------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file declares the API of helper functions used throughout the; /// GlobalISel pipeline.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h:473,pipeline,pipeline,473,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h,1,['pipeline'],['pipeline']
Deployability,"//==------ UpdateCompilerUsed.h - LLVM Link Time Optimizer Utility --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares a helper class to update llvm.compiler_used metadata.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/UpdateCompilerUsed.h:11,Update,UpdateCompilerUsed,11,interpreter/llvm-project/llvm/include/llvm/LTO/legacy/UpdateCompilerUsed.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/UpdateCompilerUsed.h,2,"['Update', 'update']","['UpdateCompilerUsed', 'update']"
Deployability,"//=== AArch64PostSelectOptimize.cpp ---------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass does post-instruction-selection optimizations in the GlobalISel; // pipeline, before the rest of codegen runs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostSelectOptimize.cpp:461,pipeline,pipeline,461,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostSelectOptimize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostSelectOptimize.cpp,1,['pipeline'],['pipeline']
Deployability,"//=== FuchsiaHandleChecker.cpp - Find handle leaks/double closes -*- C++ -*--=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This checker checks if the handle of Fuchsia is properly used according to; // following rules.; // - If a handle is acquired, it should be released before execution; // ends.; // - If a handle is released, it should not be released again.; // - If a handle is released, it should not be used for other purposes; // such as I/O.; //; // In this checker, each tracked handle is associated with a state. When the; // handle variable is passed to different function calls or syscalls, its state; // changes. The state changes can be generally represented by following ASCII; // Art:; //; //; // +-------------+ +------------+; // acquire_func succeeded | | Escape | |; // +-----------------> Allocated +---------> Escaped <--+; // | | | | | |; // | +-----+------++ +------------+ |; // | | | |; // acquire_func | release_func | +--+ |; // failed | | | handle +--------+ |; // +---------+ | | | dies | | |; // | | | +----v-----+ +---------> Leaked | |; // | | | | | |(REPORT)| |; // | +----------+--+ | Released | Escape +--------+ |; // | | | | +---------------------------+; // +--> Not tracked | +----+---+-+; // | | | | As argument by value; // +----------+--+ release_func | +------+ in function call; // | | | or by reference in; // | | | use_func call; // unowned | +----v-----+ | +-----------+; // acquire_func | | Double | +-----> Use after |; // succeeded | | released | | released |; // | | (REPORT) | | (REPORT) |; // +---------------+ +----------+ +-----------+; // | Allocated |; // | Unowned | release_func; // | +---------+; // +---------------+ |; // |; // +-----v----------+; // | Release of |; // | unow",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp:523,release,released,523,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp,4,['release'],['released']
Deployability,"//=== InnerPointerChecker.cpp -------------------------------------*- C++ -*--//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a check that marks a raw pointer to a C++ container's; // inner buffer released when the object is destroyed. This information can; // be used by MallocChecker to detect use-after-free problems.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InnerPointerChecker.cpp:472,release,released,472,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InnerPointerChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InnerPointerChecker.cpp,1,['release'],['released']
Deployability,"//===- AArch64GlobalISelUtils.cpp --------------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file Implementations of AArch64-specific helper functions used in the; /// GlobalISel pipeline.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64GlobalISelUtils.cpp:467,pipeline,pipeline,467,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64GlobalISelUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64GlobalISelUtils.cpp,1,['pipeline'],['pipeline']
Deployability,"//===- AArch64GlobalISelUtils.h ----------------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file APIs for AArch64-specific helper functions used in the GlobalISel; /// pipeline.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64GlobalISelUtils.h:457,pipeline,pipeline,457,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64GlobalISelUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64GlobalISelUtils.h,1,['pipeline'],['pipeline']
Deployability,"//===- AMDGPUArch.cpp - list AMDGPU installed ----------*- C++ -*---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a tool for detecting name of AMDGPU installed in system.; // This tool is used by AMDGPU OpenMP and HIP driver.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/amdgpu-arch/AMDGPUArch.cpp:36,install,installed,36,interpreter/llvm-project/clang/tools/amdgpu-arch/AMDGPUArch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/amdgpu-arch/AMDGPUArch.cpp,2,['install'],['installed']
Deployability,"//===- AMDGPUArch.cpp - list AMDGPU installed ----------*- C++ -*---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a tool for detecting name of AMDGPU installed in system; // using HIP runtime. This tool is used by AMDGPU OpenMP and HIP driver.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/amdgpu-arch/AMDGPUArchByHIP.cpp:36,install,installed,36,interpreter/llvm-project/clang/tools/amdgpu-arch/AMDGPUArchByHIP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/amdgpu-arch/AMDGPUArchByHIP.cpp,2,['install'],['installed']
Deployability,"//===- AMDGPUArchLinux.cpp - list AMDGPU installed ------*- C++ -*---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a tool for detecting name of AMDGPU installed in system; // using HSA on Linux. This tool is used by AMDGPU OpenMP and HIP driver.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/amdgpu-arch/AMDGPUArchByHSA.cpp:41,install,installed,41,interpreter/llvm-project/clang/tools/amdgpu-arch/AMDGPUArchByHSA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/amdgpu-arch/AMDGPUArchByHSA.cpp,2,['install'],['installed']
Deployability,"//===- AMDGPURewriteUndefForPHI.cpp ---------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This file implements the idea to rewrite undef incoming operand for certain; // PHIs in structurized CFG. This pass only works on IR that has gone through; // StructurizedCFG pass, and this pass has some additional limitation that make; // it can only run after SIAnnotateControlFlow.; //; // To achieve optimal code generation for AMDGPU, we assume that uniformity; // analysis reports the PHI in join block of divergent branch as uniform if; // it has one unique uniform value plus additional undefined/poisoned incoming; // value. That is to say the later compiler pipeline will ensure such PHI always; // return uniform value and ensure it work correctly. Let's take a look at two; // typical patterns in structured CFG that need to be taken care: (In both; // patterns, block %if terminate with divergent branch.); //; // Pattern A: Block with undefined incoming value dominates defined predecessor; // %if; // | \; // | %then; // | /; // %endif: %phi = phi [%undef, %if], [%uniform, %then]; //; // Pattern B: Block with defined incoming value dominates undefined predecessor; // %if; // | \; // | %then; // | /; // %endif: %phi = phi [%uniform, %if], [%undef, %then]; //; // For pattern A, by reporting %phi as uniform, the later pipeline need to make; // sure it be handled correctly. The backend usually allocates a scalar register; // and if any thread in a wave takes %then path, the scalar register will get; // the %uniform value.; //; // For pattern B, we will replace the undef operand with the other defined value; // in this pass. So the scalar register allocated for such PHI will get correct; // liveness",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteUndefForPHI.cpp:947,pipeline,pipeline,947,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteUndefForPHI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteUndefForPHI.cpp,1,['pipeline'],['pipeline']
Deployability,"//===- AliasAnalysisEvaluator.h - Alias Analysis Accuracy Evaluator -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements a simple N^2 alias analysis accuracy evaluator. The; /// analysis result is a set of statistics of how many times the AA; /// infrastructure provides each kind of alias result and mod/ref result when; /// queried with all pairs of pointers in the function.; ///; /// It can be used to evaluate a change in an alias analysis implementation,; /// algorithm, or the AA pipeline infrastructure itself. It acts like a stable; /// and easily tested consumer of all AA information exposed.; ///; /// This is inspired and adapted from code by: Naveen Neelakantam, Francesco; /// Spadini, and Wojciech Stryjewski.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysisEvaluator.h:783,pipeline,pipeline,783,interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysisEvaluator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysisEvaluator.h,1,['pipeline'],['pipeline']
Deployability,"//===- AnalyzerOptions.cpp - Analysis Engine Options ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains special accessors for analyzer configuration options; // with string representations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/AnalyzerOptions.cpp:433,configurat,configuration,433,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/AnalyzerOptions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/AnalyzerOptions.cpp,1,['configurat'],['configuration']
Deployability,"//===- BreakCriticalEdges.cpp - Critical Edge Elimination Pass ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // BreakCriticalEdges pass - Break all of the critical edges in the CFG by; // inserting a dummy basic block. This pass may be ""required"" by passes that; // cannot deal with critical edges. For this usage, the structure type is; // forward declared. This pass obviously invalidates the CFG, but can update; // dominator trees.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp:679,update,update,679,interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp,1,['update'],['update']
Deployability,"//===- BreakCriticalEdges.h - Critical Edge Elimination Pass --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // BreakCriticalEdges pass - Break all of the critical edges in the CFG by; // inserting a dummy basic block. This pass may be ""required"" by passes that; // cannot deal with critical edges. For this usage, the structure type is; // forward declared. This pass obviously invalidates the CFG, but can update; // dominator trees.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BreakCriticalEdges.h:679,update,update,679,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BreakCriticalEdges.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BreakCriticalEdges.h,1,['update'],['update']
Deployability,"//===- CFGUpdate.h - Encode a CFG Edge Update. ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a CFG Edge Update: Insert or Delete, and two Nodes as the; // Edge ends.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CFGUpdate.h:39,Update,Update,39,interpreter/llvm-project/llvm/include/llvm/Support/CFGUpdate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CFGUpdate.h,2,['Update'],['Update']
Deployability,"//===- CallGraphUpdater.cpp - A (lazy) call graph update helper -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file provides interfaces used to manipulate a call graph, regardless; /// if it is a ""old style"" CallGraph or an ""new style"" LazyCallGraph.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CallGraphUpdater.cpp:50,update,update,50,interpreter/llvm-project/llvm/lib/Transforms/Utils/CallGraphUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CallGraphUpdater.cpp,1,['update'],['update']
Deployability,"//===- CallGraphUpdater.h - A (lazy) call graph update helper ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file provides interfaces used to manipulate a call graph, regardless; /// if it is a ""old style"" CallGraph or an ""new style"" LazyCallGraph.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h:48,update,update,48,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h,1,['update'],['update']
Deployability,"//===- CompilationDatabase.cpp --------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains implementations of the CompilationDatabase base class; // and the FixedCompilationDatabase.; //; // FIXME: Various functions that take a string &ErrorMessage should be upgraded; // to Expected.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/CompilationDatabase.cpp:570,upgrade,upgraded,570,interpreter/llvm-project/clang/lib/Tooling/CompilationDatabase.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/CompilationDatabase.cpp,1,['upgrade'],['upgraded']
Deployability,"//===- Construction of codegen pass pipelines ------------------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// Interfaces for registering analysis passes, producing common pass manager; /// configurations, and parsing of pass pipelines.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:36,pipeline,pipelines,36,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,3,"['configurat', 'pipeline']","['configurations', 'pipelines']"
Deployability,"//===- Construction of pass pipelines -------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file provides the implementation of the PassBuilder based on our; /// static pass registry as well as related functionality. It also provides; /// helpers to aid in analyzing, debugging, and testing passes and pass; /// pipelines.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:28,pipeline,pipelines,28,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,2,['pipeline'],['pipelines']
Deployability,"//===- ContinuousRangeMap.h - Map with int range as key ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ContinuousRangeMap class, which is a highly; // specialized container used by serialization.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ContinuousRangeMap.h:7,Continuous,ContinuousRangeMap,7,interpreter/llvm-project/clang/include/clang/Serialization/ContinuousRangeMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ContinuousRangeMap.h,2,['Continuous'],['ContinuousRangeMap']
Deployability,"//===- CoroSplit.cpp - Converts a coroutine into a state machine ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This pass builds the coroutine frame and outlines resume and destroy parts; // of the coroutine into separate functions.; //; // We present a coroutine to an LLVM as an ordinary function with suspension; // points marked up with intrinsics. We let the optimizer party on the coroutine; // as a single function for as long as possible. Shortly before the coroutine is; // eligible to be inlined into its callers, we split up the coroutine into parts; // corresponding to an initial, resume and destroy invocations of the coroutine,; // add them to the current SCC and restart the IPO pipeline to optimize the; // coroutine subfunctions we extracted before proceeding to the caller of the; // coroutine.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:962,pipeline,pipeline,962,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,1,['pipeline'],['pipeline']
Deployability,"//===- DXILUpgrade.cpp - Upgrade DXIL metadata to LLVM constructs ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/DXILUpgrade.cpp:25,Upgrade,Upgrade,25,interpreter/llvm-project/llvm/lib/Transforms/Utils/DXILUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/DXILUpgrade.cpp,1,['Upgrade'],['Upgrade']
Deployability,"//===- DXILUpgrade.h - Upgrade DXIL metadata to LLVM constructs -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/DXILUpgrade.h:23,Upgrade,Upgrade,23,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/DXILUpgrade.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/DXILUpgrade.h,1,['Upgrade'],['Upgrade']
Deployability,"//===- DomTreeUpdater.cpp - DomTree/Post DomTree Updater --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the DomTreeUpdater class, which provides a uniform way; // to update dominator tree related data structures.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp:49,Update,Updater,49,interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,2,"['Update', 'update']","['Updater', 'update']"
Deployability,"//===- DomTreeUpdater.h - DomTree/Post DomTree Updater ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the DomTreeUpdater class, which provides a uniform way to; // update dominator tree related data structures.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:47,Update,Updater,47,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,2,"['Update', 'update']","['Updater', 'update']"
Deployability,"//===- GenericDomTreeConstruction.h - Dominator Calculation ------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// Generic dominator tree construction - this file provides routines to; /// construct immediate dominator information for a flow-graph based on the; /// Semi-NCA algorithm described in this dissertation:; ///; /// [1] Linear-Time Algorithms for Dominators and Related Problems; /// Loukas Georgiadis, Princeton University, November 2005, pp. 21-23:; /// ftp://ftp.cs.princeton.edu/reports/2005/737.pdf; ///; /// Semi-NCA algorithm runs in O(n^2) worst-case time but usually slightly; /// faster than Simple Lengauer-Tarjan in practice.; ///; /// O(n^2) worst cases happen when the computation of nearest common ancestors; /// requires O(n) average time, which is very unlikely in real world. If this; /// ever turns out to be an issue, consider implementing a hybrid algorithm; /// that uses SLT to perform full constructions and SemiNCA for incremental; /// updates.; ///; /// The file uses the Depth Based Search algorithm to perform incremental; /// updates (insertion and deletions). The implemented algorithm is based on; /// this publication:; ///; /// [2] An Experimental Study of Dynamic Dominators; /// Loukas Georgiadis, et al., April 12 2016, pp. 5-7, 9-10:; /// https://arxiv.org/pdf/1604.02711.pdf; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h:1253,update,updates,1253,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,2,['update'],['updates']
Deployability,"//===- HexagonEarlyIfConv.cpp ---------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements a Hexagon-specific if-conversion pass that runs on the; // SSA form.; // In SSA it is not straightforward to represent instructions that condi-; // tionally define registers, since a conditionally-defined register may; // only be used under the same condition on which the definition was based.; // To avoid complications of this nature, this patch will only generate; // predicated stores, and speculate other instructions from the ""if-conver-; // ted"" block.; // The code will recognize CFG patterns where a block with a conditional; // branch ""splits"" into a ""true block"" and a ""false block"". Either of these; // could be omitted (in case of a triangle, for example).; // If after conversion of the side block(s) the CFG allows it, the resul-; // ting blocks may be merged. If the ""join"" block contained PHI nodes, they; // will be replaced with MUX (or MUX-like) instructions to maintain the; // semantics of the PHI.; //; // Example:; //; // %40 = L2_loadrub_io killed %39, 1; // %41 = S2_tstbit_i killed %40, 0; // J2_jumpt killed %41, <%bb.5>, implicit dead %pc; // J2_jump <%bb.4>, implicit dead %pc; // Successors according to CFG: %bb.4(62) %bb.5(62); //; // %bb.4: derived from LLVM BB %if.then; // Predecessors according to CFG: %bb.3; // %11 = A2_addp %6, %10; // S2_storerd_io %32, 16, %11; // Successors according to CFG: %bb.5; //; // %bb.5: derived from LLVM BB %if.end; // Predecessors according to CFG: %bb.3 %bb.4; // %12 = PHI %6, <%bb.3>, %11, <%bb.4>; // %13 = A2_addp %7, %12; // %42 = C2_cmpeqi %9, 10; // J2_jumpf killed %42, <%bb.3>, implicit dead %pc; // J2_jump <%bb.6>, im",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp:742,patch,patch,742,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,1,['patch'],['patch']
Deployability,"//===- IRPrintingPasses.h - Passes to print out IR constructs ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines passes to print out IR in various granularities. The; /// PrintModulePass pass simply prints out the entire module when it is; /// executed. The PrintFunctionPass class is designed to be pipelined with; /// other FunctionPass's, and prints out the functions of the module as they; /// are processed.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IRPrinter/IRPrintingPasses.h:601,pipeline,pipelined,601,interpreter/llvm-project/llvm/include/llvm/IRPrinter/IRPrintingPasses.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IRPrinter/IRPrintingPasses.h,1,['pipeline'],['pipelined']
Deployability,"//===- LLJITWithExecutorProcessControl.cpp - LLJIT example with EPC utils -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // In this example we will use the lazy re-exports utility to lazily compile; // IR modules. We will do this in seven steps:; //; // 1. Create an LLJIT instance.; // 2. Install a transform so that we can see what is being compiled.; // 3. Create an indirect stubs manager and lazy call-through manager.; // 4. Add two modules that will be conditionally compiled, plus a main module.; // 5. Add lazy-rexports of the symbols in the conditionally compiled modules.; // 6. Dump the ExecutionSession state to see the symbol table prior to; // executing any code.; // 7. Verify that only modules containing executed code are compiled.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithExecutorProcessControl/LLJITWithExecutorProcessControl.cpp:549,Install,Install,549,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithExecutorProcessControl/LLJITWithExecutorProcessControl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithExecutorProcessControl/LLJITWithExecutorProcessControl.cpp,1,['Install'],['Install']
Deployability,"//===- LiveDebugVariables.cpp - Tracking debug info variables -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the LiveDebugVariables analysis.; //; // Remove all DBG_VALUE instructions referencing virtual registers and replace; // them with a data structure tracking where live user variables are kept - in a; // virtual register or in a stack slot.; //; // Allow the data structure to be updated during register allocation when values; // are moved between registers and stack slots. Finally emit new DBG_VALUE; // instructions after register allocation is complete.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:683,update,updated,683,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,1,['update'],['updated']
Deployability,"//===- LiveDebugVariables.h - Tracking debug info variables -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface to the LiveDebugVariables analysis.; //; // The analysis removes DBG_VALUE instructions for virtual registers and tracks; // live user variables in a data structure that can be updated during register; // allocation.; //; // After register allocation new DBG_VALUE instructions are emitted to reflect; // the new locations of user variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.h:593,update,updated,593,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.h,1,['update'],['updated']
Deployability,"//===- LoadStoreVectorizer.cpp - GPU Load & Store Vectorizer --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass merges loads/stores to/from sequential memory addresses into vector; // loads/stores. Although there's nothing GPU-specific in here, this pass is; // motivated by the microarchitectural quirks of nVidia and AMD GPUs.; //; // (For simplicity below we talk about loads only, but everything also applies; // to stores.); //; // This pass is intended to be run late in the pipeline, after other; // vectorization opportunities have been exploited. So the assumption here is; // that immediately following our new vector load we'll need to extract out the; // individual elements of the load, so we can operate on them individually.; //; // On CPUs this transformation is usually not beneficial, because extracting the; // elements of a vector register is expensive on most architectures. It's; // usually better just to load each element individually into its own scalar; // register.; //; // However, nVidia and AMD GPUs don't have proper vector registers. Instead, a; // ""vector load"" loads directly into a series of scalar registers. In effect,; // extracting the elements of the vector is free. It's therefore always; // beneficial to vectorize a sequence of loads on these architectures.; //; // Vectorizing (perhaps a better name might be ""coalescing"") loads can have; // large performance impacts on GPU kernels, and opportunities for vectorizing; // are common in GPU code. This pass tries very hard to find such; // opportunities; its runtime is quadratic in the number of loads in a BB.; //; // Some CPU architectures, such as ARM, have instructions that load into; // multiple scalar registers, simila",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp:762,pipeline,pipeline,762,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp,1,['pipeline'],['pipeline']
Deployability,"//===- LoopAnalysisManager.h - Loop analysis management ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This header provides classes for managing per-loop analyses. These are; /// typically used as part of a loop pass pipeline over the loop nests of; /// a function.; ///; /// Loop analyses are allowed to make some simplifying assumptions:; /// 1) Loops are, where possible, in simplified form.; /// 2) Loops are *always* in LCSSA form.; /// 3) A collection of analysis results are available:; /// - LoopInfo; /// - DominatorTree; /// - ScalarEvolution; /// - AAManager; ///; /// The primary mechanism to provide these invariants is the loop pass manager,; /// but they can also be manually provided in order to reason about a loop from; /// outside of a dedicated pass manager.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h:510,pipeline,pipeline,510,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,1,['pipeline'],['pipeline']
Deployability,"//===- LoopPassManager.h - Loop pass management -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This header provides classes for managing a pipeline of passes over loops; /// in LLVM IR.; ///; /// The primary loop pass pipeline is managed in a very particular way to; /// provide a set of core guarantees:; /// 1) Loops are, where possible, in simplified form.; /// 2) Loops are *always* in LCSSA form.; /// 3) A collection of Loop-specific analysis results are available:; /// - LoopInfo; /// - DominatorTree; /// - ScalarEvolution; /// - AAManager; /// 4) All loop passes preserve #1 (where possible), #2, and #3.; /// 5) Loop passes run over each loop in the loop nest from the innermost to; /// the outermost. Specifically, all inner loops are processed before; /// passes run over outer loops. When running the pipeline across an inner; /// loop creates new inner loops, those are added and processed in this; /// order as well.; ///; /// This process is designed to facilitate transformations which simplify,; /// reduce, and remove loops. For passes which are more oriented towards; /// optimizing loops, especially optimizing loop *nests* instead of single; /// loops in isolation, this framework is less interesting.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h:440,pipeline,pipeline,440,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,3,['pipeline'],['pipeline']
Deployability,"//===- LoopSimplify.cpp - Loop Canonicalization Pass ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass performs several transformations to transform natural loops into a; // simpler form, which makes subsequent analyses and transformations simpler and; // more effective.; //; // Loop pre-header insertion guarantees that there is a single, non-critical; // entry edge from outside of the loop to the loop header. This simplifies a; // number of analyses and transformations, such as LICM.; //; // Loop exit-block insertion guarantees that all exit blocks from the loop; // (blocks which are outside of the loop that have predecessors inside of the; // loop) only have predecessors from inside of the loop (and are thus dominated; // by the loop header). This simplifies transformations such as store-sinking; // that are built into LICM.; //; // This pass also guarantees that loops will have exactly one backedge.; //; // Indirectbr instructions introduce several complications. If the loop; // contains or is entered by an indirectbr instruction, it may not be possible; // to transform the loop and make these guarantees. Client code should check; // that these conditions are true before relying on them.; //; // Similar complications arise from callbr instructions, particularly in; // asm-goto where blockaddress expressions are used.; //; // Note that the simplifycfg pass will clean up blocks which are split out but; // end up being unnecessary, so usage of this pass should not pessimize; // generated code.; //; // This pass obviously modifies the CFG, but updates loop information and; // dominator information.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp:1859,update,updates,1859,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp,1,['update'],['updates']
Deployability,"//===- LoopSimplify.h - Loop Canonicalization Pass --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass performs several transformations to transform natural loops into a; // simpler form, which makes subsequent analyses and transformations simpler and; // more effective.; //; // Loop pre-header insertion guarantees that there is a single, non-critical; // entry edge from outside of the loop to the loop header. This simplifies a; // number of analyses and transformations, such as LICM.; //; // Loop exit-block insertion guarantees that all exit blocks from the loop; // (blocks which are outside of the loop that have predecessors inside of the; // loop) only have predecessors from inside of the loop (and are thus dominated; // by the loop header). This simplifies transformations such as store-sinking; // that are built into LICM.; //; // This pass also guarantees that loops will have exactly one backedge.; //; // Indirectbr instructions introduce several complications. If the loop; // contains or is entered by an indirectbr instruction, it may not be possible; // to transform the loop and make these guarantees. Client code should check; // that these conditions are true before relying on them.; //; // Note that the simplifycfg pass will clean up blocks which are split out but; // end up being unnecessary, so usage of this pass should not pessimize; // generated code.; //; // This pass obviously modifies the CFG, but updates loop information and; // dominator information.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopSimplify.h:1727,update,updates,1727,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopSimplify.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopSimplify.h,1,['update'],['updates']
Deployability,"//===- MLInlineAdvisor.cpp - machine learned InlineAdvisor ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the interface between the inliner and a learned model.; // It delegates model evaluation to either the AOT compiled model (the; // 'release' mode) or a runtime-loaded model (the 'development' case).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MLInlineAdvisor.cpp:536,release,release,536,interpreter/llvm-project/llvm/lib/Analysis/MLInlineAdvisor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MLInlineAdvisor.cpp,1,['release'],['release']
Deployability,"//===- MachinePipeliner.cpp - Machine Software Pipeliner Pass -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // An implementation of the Swing Modulo Scheduling (SMS) software pipeliner.; //; // This SMS implementation is a target-independent back-end pass. When enabled,; // the pass runs just prior to the register allocation pass, while the machine; // IR is in SSA form. If software pipelining is successful, then the original; // loop is replaced by the optimized loop. The optimized loop contains one or; // more prolog blocks, the pipelined kernel, and one or more epilog blocks. If; // the instructions cannot be scheduled in a given MII, we increase the MII by; // one and try again.; //; // The SMS implementation is an extension of the ScheduleDAGInstrs class. We; // represent loop carried dependences in the DAG as order edges to the Phi; // nodes. We also perform several passes over the DAG to eliminate unnecessary; // edges that inhibit the ability to pipeline. The implementation uses the; // DFAPacketizer class to compute the minimum initiation interval and the check; // where an instruction may be inserted in the pipelined schedule.; //; // In order for the SMS pass to work, several target specific hooks need to be; // implemented to get information about the loop structure and to rewrite; // instructions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:47,Pipeline,Pipeliner,47,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,5,"['Pipeline', 'pipeline']","['Pipeliner', 'pipeline', 'pipelined', 'pipeliner']"
Deployability,"//===- MachinePipeliner.h - Machine Software Pipeliner Pass -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // An implementation of the Swing Modulo Scheduling (SMS) software pipeliner.; //; // Software pipelining (SWP) is an instruction scheduling technique for loops; // that overlap loop iterations and exploits ILP via a compiler transformation.; //; // Swing Modulo Scheduling is an implementation of software pipelining; // that generates schedules that are near optimal in terms of initiation; // interval, register requirements, and stage count. See the papers:; //; // ""Swing Modulo Scheduling: A Lifetime-Sensitive Approach"", by J. Llosa,; // A. Gonzalez, E. Ayguade, and M. Valero. In PACT '96 Proceedings of the 1996; // Conference on Parallel Architectures and Compilation Techiniques.; //; // ""Lifetime-Sensitive Modulo Scheduling in a Production Environment"", by J.; // Llosa, E. Ayguade, A. Gonzalez, M. Valero, and J. Eckhardt. In IEEE; // Transactions on Computers, Vol. 50, No. 3, 2001.; //; // ""An Implementation of Swing Modulo Scheduling With Extensions for; // Superblocks"", by T. Lattner, Master's Thesis, University of Illinois at; // Urbana-Champaign, 2005.; //; //; // The SMS algorithm consists of three main steps after computing the minimal; // initiation interval (MII).; // 1) Analyze the dependence graph and compute information about each; // instruction in the graph.; // 2) Order the nodes (instructions) by priority based upon the heuristics; // described in the algorithm.; // 3) Attempt to schedule the nodes in the specified order using the MII.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:45,Pipeline,Pipeliner,45,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,2,"['Pipeline', 'pipeline']","['Pipeliner', 'pipeliner']"
Deployability,"//===- MachineSSAUpdater.cpp - Unstructured SSA Update Tool ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the MachineSSAUpdater class. It's based on SSAUpdater; // class in lib/Transforms/Utils.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSSAUpdater.cpp:48,Update,Update,48,interpreter/llvm-project/llvm/lib/CodeGen/MachineSSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSSAUpdater.cpp,1,['Update'],['Update']
Deployability,"//===- MachineSSAUpdater.h - Unstructured SSA Update Tool -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the MachineSSAUpdater class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineSSAUpdater.h:46,Update,Update,46,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineSSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineSSAUpdater.h,1,['Update'],['Update']
Deployability,"//===- MemorySSAUpdater.h - Memory SSA Updater-------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // \file; // An automatic updater for MemorySSA that handles arbitrary insertion,; // deletion, and moves. It performs phi insertion where necessary, and; // automatically updates the MemorySSA IR to be correct.; // While updating loads or removing instructions is often easy enough to not; // need this, updating stores should generally not be attemped outside this; // API.; //; // Basic API usage:; // Create the memory access you want for the instruction (this is mainly so; // we know where it is, without having to duplicate the entire set of create; // functions MemorySSA supports).; // Call insertDef or insertUse depending on whether it's a MemoryUse or a; // MemoryDef.; // That's it.; //; // For moving, first, move the instruction itself using the normal SSA; // instruction moving API, then just call moveBefore, moveAfter,or moveTo with; // the right arguments.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:39,Update,Updater,39,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,3,"['Update', 'update']","['Updater', 'updater', 'updates']"
Deployability,"//===- ModuloSchedule.cpp - Software pipeline schedule expansion ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:37,pipeline,pipeline,37,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['pipeline'],['pipeline']
Deployability,"//===- ModuloSchedule.h - Software pipeline schedule expansion ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Software pipelining (SWP) is an instruction scheduling technique for loops; // that overlaps loop iterations and exploits ILP via compiler transformations.; //; // There are multiple methods for analyzing a loop and creating a schedule.; // An example algorithm is Swing Modulo Scheduling (implemented by the; // MachinePipeliner). The details of how a schedule is arrived at are irrelevant; // for the task of actually rewriting a loop to adhere to the schedule, which; // is what this file does.; //; // A schedule is, for every instruction in a block, a Cycle and a Stage. Note; // that we only support single-block loops, so ""block"" and ""loop"" can be used; // interchangably.; //; // The Cycle of an instruction defines a partial order of the instructions in; // the remapped loop. Instructions within a cycle must not consume the output; // of any instruction in the same cycle. Cycle information is assumed to have; // been calculated such that the processor will execute instructions in; // lock-step (for example in a VLIW ISA).; //; // The Stage of an instruction defines the mapping between logical loop; // iterations and pipelined loop iterations. An example (unrolled) pipeline; // may look something like:; //; // I0[0] Execute instruction I0 of iteration 0; // I1[0], I0[1] Execute I0 of iteration 1 and I1 of iteration 1; // I1[1], I0[2]; // I1[2], I0[3]; //; // In the schedule for this unrolled sequence we would say that I0 was scheduled; // in stage 0 and I1 in stage 1:; //; // loop:; // [stage 0] x = I0; // [stage 1] I1 x (from stage 0); //; // And to actually generate valid code we must insert",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h:35,pipeline,pipeline,35,interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,1,['pipeline'],['pipeline']
Deployability,"//===- NVPTXArch.cpp - list installed NVPTX devies ------*- C++ -*---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a tool for detecting name of CUDA gpus installed in the; // system.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/nvptx-arch/NVPTXArch.cpp:28,install,installed,28,interpreter/llvm-project/clang/tools/nvptx-arch/NVPTXArch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/nvptx-arch/NVPTXArch.cpp,2,['install'],['installed']
Deployability,"//===- ObjCRuntime.h - Objective-C Runtime Configuration --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines types useful for describing an Objective-C runtime.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h:43,Configurat,Configuration,43,interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,1,['Configurat'],['Configuration']
Deployability,"//===- Parsing and selection of pass pipelines ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file provides the implementation of the PassBuilder based on our; /// static pass registry as well as related functionality. It also provides; /// helpers to aid in analyzing, debugging, and testing passes and pass; /// pipelines.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp:37,pipeline,pipelines,37,interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,2,['pipeline'],['pipelines']
Deployability,"//===- Parsing, selection, and construction of pass pipelines --*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// Interfaces for registering analysis passes, producing common pass manager; /// configurations, and parsing of pass pipelines.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:52,pipeline,pipelines,52,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,3,"['configurat', 'pipeline']","['configurations', 'pipelines']"
Deployability,"//===- PassManager.h --- Pass management for CodeGen ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header defines the pass manager interface for codegen. The codegen; // pipeline consists of only machine function passes. There is no container; // relationship between IR module/function and machine function in terms of pass; // manager organization. So there is no need for adaptor classes (for example; // ModuleToMachineFunctionAdaptor). Since invalidation could only happen among; // machine function passes, there is no proxy classes to handle cross-IR-unit; // invalidation. IR analysis results are provided for machine function passes by; // their respective analysis managers such as ModuleAnalysisManager and; // FunctionAnalysisManager.; //; // TODO: Add MachineFunctionProperties support.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h:459,pipeline,pipeline,459,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h,1,['pipeline'],['pipeline']
Deployability,"//===- ReleaseModeModelRunner.h - Fast, precompiled model runner ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a model runner wrapping an AOT compiled ML model.; // Only inference is supported.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ReleaseModeModelRunner.h:7,Release,ReleaseModeModelRunner,7,interpreter/llvm-project/llvm/include/llvm/Analysis/ReleaseModeModelRunner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ReleaseModeModelRunner.h,1,['Release'],['ReleaseModeModelRunner']
Deployability,"//===- SSAUpdater.cpp - Unstructured SSA Update Tool ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the SSAUpdater class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SSAUpdater.cpp:41,Update,Update,41,interpreter/llvm-project/llvm/lib/Transforms/Utils/SSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SSAUpdater.cpp,1,['Update'],['Update']
Deployability,"//===- SSAUpdater.h - Unstructured SSA Update Tool --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the SSAUpdater class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdater.h:39,Update,Update,39,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdater.h,1,['Update'],['Update']
Deployability,"//===- SSAUpdaterBulk.cpp - Unstructured SSA Update Tool ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the SSAUpdaterBulk class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SSAUpdaterBulk.cpp:45,Update,Update,45,interpreter/llvm-project/llvm/lib/Transforms/Utils/SSAUpdaterBulk.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SSAUpdaterBulk.cpp,1,['Update'],['Update']
Deployability,"//===- SSAUpdaterBulk.h - Unstructured SSA Update Tool ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the SSAUpdaterBulk class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h:43,Update,Update,43,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterBulk.h,1,['Update'],['Update']
Deployability,"//===- SSAUpdaterImpl.h - SSA Updater Implementation ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides a template that implements the core algorithm for the; // SSAUpdater and MachineSSAUpdater.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterImpl.h:30,Update,Updater,30,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdaterImpl.h,1,['Update'],['Updater']
Deployability,"//===- STLForwardCompat.h - Library features from future STLs ------C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains library features backported from future STL versions.; ///; /// These should be replaced with their STL counterparts as the C++ version LLVM; /// is compiled with is updated.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/STLForwardCompat.h:581,update,updated,581,interpreter/llvm-project/llvm/include/llvm/ADT/STLForwardCompat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/STLForwardCompat.h,1,['update'],['updated']
Deployability,"//===- ScheduleDAGVLIW.cpp - SelectionDAG list scheduler for VLIW -*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements a top-down list scheduler, using standard algorithms.; // The basic approach uses a priority queue of available nodes to schedule.; // One at a time, nodes are taken from the priority queue (thus in priority; // order), checked for legality to schedule, and emitted if legal.; //; // Nodes may not be legal to schedule either due to structural hazards (e.g.; // pipeline or resource constraints) or because an input to the instruction has; // not completed execution.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:761,pipeline,pipeline,761,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,1,['pipeline'],['pipeline']
Deployability,"//===- ShrinkWrap.cpp - Compute safe point for prolog/epilog insertion ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass looks for safe point where the prologue and epilogue can be; // inserted.; // The safe point for the prologue (resp. epilogue) is called Save; // (resp. Restore).; // A point is safe for prologue (resp. epilogue) if and only if; // it 1) dominates (resp. post-dominates) all the frame related operations and; // between 2) two executions of the Save (resp. Restore) point there is an; // execution of the Restore (resp. Save) point.; //; // For instance, the following points are safe:; // for (int i = 0; i < 10; ++i) {; // Save; // ...; // Restore; // }; // Indeed, the execution looks like Save -> Restore -> Save -> Restore ...; // And the following points are not:; // for (int i = 0; i < 10; ++i) {; // Save; // ...; // }; // for (int i = 0; i < 10; ++i) {; // ...; // Restore; // }; // Indeed, the execution looks like Save -> Save -> ... -> Restore -> Restore.; //; // This pass also ensures that the safe points are 3) cheaper than the regular; // entry and exits blocks.; //; // Property #1 is ensured via the use of MachineDominatorTree and; // MachinePostDominatorTree.; // Property #2 is ensured via property #1 and MachineLoopInfo, i.e., both; // points must be in the same loop.; // Property #3 is ensured via the MachineBlockFrequencyInfo.; //; // If this pass found points matching all these properties, then; // MachineFrameInfo is updated with this information.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp:1743,update,updated,1743,interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShrinkWrap.cpp,1,['update'],['updated']
Deployability,"//===- SimplifyCFGOptions.h - Control structure for SimplifyCFG -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // A set of parameters used to control the transforms in the SimplifyCFG pass.; // Options may change depending on the position in the optimization pipeline.; // For example, canonical form that includes switches and branches may later be; // replaced by lookup tables and selects.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyCFGOptions.h:528,pipeline,pipeline,528,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyCFGOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyCFGOptions.h,1,['pipeline'],['pipeline']
Deployability,"//===- SpillPlacement.cpp - Optimal Spill Code Placement ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the spill code placement analysis.; //; // Each edge bundle corresponds to a node in a Hopfield network. Constraints on; // basic blocks are weighted by the block frequency and added to become the node; // bias.; //; // Transparent basic blocks have the variable live through, but don't care if it; // is spilled or in a register. These blocks become connections in the Hopfield; // network, again weighted by block frequency.; //; // The Hopfield network minimizes (possibly locally) its energy function:; //; // E = -sum_n V_n * ( B_n + sum_{n, m linked by b} V_m * F_b ); //; // The energy function represents the expected spill code execution frequency,; // or the cost of spilling. This is a Lyapunov function which never increases; // when a node is updated. It is guaranteed to converge to a local minimum.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp:1160,update,updated,1160,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,1,['update'],['updated']
Deployability,"//===- SymbolRewriter.cpp - Symbol Rewriter -------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // SymbolRewriter is a LLVM pass which can rewrite symbols transparently within; // existing code. It is implemented as a compiler pass and is configured via a; // YAML configuration file.; //; // The YAML configuration file format is as follows:; //; // RewriteMapFile := RewriteDescriptors; // RewriteDescriptors := RewriteDescriptor | RewriteDescriptors; // RewriteDescriptor := RewriteDescriptorType ':' '{' RewriteDescriptorFields '}'; // RewriteDescriptorFields := RewriteDescriptorField | RewriteDescriptorFields; // RewriteDescriptorField := FieldIdentifier ':' FieldValue ','; // RewriteDescriptorType := Identifier; // FieldIdentifier := Identifier; // FieldValue := Identifier; // Identifier := [0-9a-zA-Z]+; //; // Currently, the following descriptor types are supported:; //; // - function: (function rewriting); // + Source (original name of the function); // + Target (explicit transformation); // + Transform (pattern transformation); // + Naked (boolean, whether the function is undecorated); // - global variable: (external linkage global variable rewriting); // + Source (original name of externally visible variable); // + Target (explicit transformation); // + Transform (pattern transformation); // - global alias: (global alias rewriting); // + Source (original name of the aliased name); // + Target (explicit transformation); // + Transform (pattern transformation); //; // Note that source and exactly one of [Target, Transform] must be provided; //; // New rewrite descriptors can be created. Addding a new rewrite descriptor; // involves:; //; // a) extended the rewrite descriptor kind enumer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SymbolRewriter.cpp:549,configurat,configuration,549,interpreter/llvm-project/llvm/lib/Transforms/Utils/SymbolRewriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SymbolRewriter.cpp,1,['configurat'],['configuration']
Deployability,"//===- TargetPassConfig.h - Code Generation pass options --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Target-Independent Code Generator Pass Configuration Options pass.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h:430,Configurat,Configuration,430,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,1,['Configurat'],['Configuration']
Deployability,"//===- Tree.h - structure of the syntax tree ------------------*- C++ -*-=====//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // Defines the basic structure of the syntax tree. There are two kinds of nodes:; // - leaf nodes correspond to tokens,; // - tree nodes correspond to language grammar constructs.; //; // The tree is initially built from an AST. Each node of a newly built tree; // covers a continuous subrange of expanded tokens (i.e. tokens after; // preprocessing), the specific tokens coverered are stored in the leaf nodes of; // a tree. A post-order traversal of a tree will visit leaf nodes in an order; // corresponding the original order of expanded tokens.; //; // This is still work in progress and highly experimental, we leave room for; // ourselves to completely change the design and/or implementation.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Syntax/Tree.h:650,continuous,continuous,650,interpreter/llvm-project/clang/include/clang/Tooling/Syntax/Tree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Syntax/Tree.h,1,['continuous'],['continuous']
Deployability,"//===- ValueMap.h - Safe map from Values to data ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ValueMap class. ValueMap maps Value* or any subclass; // to an arbitrary other type. It provides the DenseMap interface but updates; // itself to remain safe when keys are RAUWed or deleted. By default, when a; // key is RAUWed from V1 to V2, the old mapping V1->target is removed, and a new; // mapping V2->target is added. If V2 already existed, its old target is; // overwritten. When a key is deleted, its mapping is removed.; //; // You can override a ValueMap's Config parameter to control exactly what; // happens on RAUW and destruction and to get called back on each event. It's; // legal to call back into the ValueMap from a Config's callbacks. Config; // parameters should inherit from ValueMapConfig<KeyT> to get default; // implementations of all the methods ValueMap uses. See ValueMapConfig for; // documentation of the functions you can override.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueMap.h:529,update,updates,529,interpreter/llvm-project/llvm/include/llvm/IR/ValueMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueMap.h,1,['update'],['updates']
Deployability,"//===- X86CompressEVEX.cpp ------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass compresses instructions from EVEX space to legacy/VEX/EVEX space; // when possible in order to reduce code size or facilitate HW decoding.; //; // Possible compression:; // a. AVX512 instruction (EVEX) -> AVX instruction (VEX); // b. Promoted instruction (EVEX) -> pre-promotion instruction (legacy/VEX); // c. NDD (EVEX) -> non-NDD (legacy); // d. NF_ND (EVEX) -> NF (EVEX); //; // Compression a, b and c can always reduce code size, with some exceptions; // such as promoted 16-bit CRC32 which is as long as the legacy version.; //; // legacy:; // crc32w %si, %eax ## encoding: [0x66,0xf2,0x0f,0x38,0xf1,0xc6]; // promoted:; // crc32w %si, %eax ## encoding: [0x62,0xf4,0x7d,0x08,0xf1,0xc6]; //; // From performance perspective, these should be same (same uops and same EXE; // ports). From a FMV perspective, an older legacy encoding is preferred b/c it; // can execute in more places (broader HW install base). So we will still do; // the compression.; //; // Compression d can help hardware decode (HW may skip reading the NDD; // register) although the instruction length remains unchanged.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CompressEVEX.cpp:1292,install,install,1292,interpreter/llvm-project/llvm/lib/Target/X86/X86CompressEVEX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CompressEVEX.cpp,1,['install'],['install']
Deployability,"//===- llvm-reduce.cpp - The LLVM Delta Reduction utility -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This program tries to reduce an IR test case for a given interesting-ness; // test. It runs multiple delta debugging passes in order to minimize the input; // file. It's worth noting that this is a part of the bugpoint redesign; // proposal, and thus a *temporary* tool that will eventually be integrated; // into the bugpoint tool itself.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/llvm-reduce.cpp:677,integrat,integrated,677,interpreter/llvm-project/llvm/tools/llvm-reduce/llvm-reduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/llvm-reduce.cpp,1,['integrat'],['integrated']
Deployability,"//===- llvm/CodeGen/GlobalISel/CSEInfo.h ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Provides analysis for continuously CSEing during GISel passes.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h:407,continuous,continuously,407,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h,1,['continuous'],['continuously']
Deployability,"//===- llvm/CodeGen/GlobalISel/Utils.cpp -------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file This file implements the utility functions used by the GlobalISel; /// pipeline.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Utils.cpp:457,pipeline,pipeline,457,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Utils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Utils.cpp,1,['pipeline'],['pipeline']
Deployability,"//===- llvm/CodeGen/LivePhysRegs.h - Live Physical Register Set -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file implements the LivePhysRegs utility for tracking liveness of; /// physical registers. This can be used for ad-hoc liveness tracking after; /// register allocation. You can start with the live-ins/live-outs at the; /// beginning/end of a block and update the information while walking the; /// instructions inside the block. This implementation tracks the liveness on a; /// sub-register granularity.; ///; /// We assume that the high bits of a physical super-register are not preserved; /// unless the instruction has an implicit-use operand reading the super-; /// register.; ///; /// X86 Example:; /// %ymm0 = ...; /// %xmm0 = ... (Kills %xmm0, all %xmm0s sub-registers, and %ymm0); ///; /// %ymm0 = ...; /// %xmm0 = ..., implicit %ymm0 (%ymm0 and all its sub-registers are alive); //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LivePhysRegs.h:652,update,update,652,interpreter/llvm-project/llvm/include/llvm/CodeGen/LivePhysRegs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LivePhysRegs.h,1,['update'],['update']
Deployability,"//===- llvm/CodeGen/MachinePassRegistry.h -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the mechanics for machine function pass registries. A; // function pass registry (MachinePassRegistry) is auto filled by the static; // constructors of MachinePassRegistryNode. Further there is a command line; // parser (RegisterPassParser) which listens to each registry for additions; // and deletions, so that the appropriate command option is updated.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassRegistry.h:749,update,updated,749,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassRegistry.h,1,['update'],['updated']
Deployability,"//===- llvm/CodeGen/VirtRegMap.h - Virtual Register Map ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a virtual register map. This maps virtual registers to; // physical registers and virtual registers to stack slots. It is created and; // updated by a register allocator and then used by a machine code rewriter that; // adds spill code and rewrites virtual into physical register references.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/VirtRegMap.h:542,update,updated,542,interpreter/llvm-project/llvm/include/llvm/CodeGen/VirtRegMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/VirtRegMap.h,1,['update'],['updated']
Deployability,"//===- llvm/Remarks/RemarkStreamer.h ----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the main interface for streaming remarks.; //; // This is used to stream any llvm::remarks::Remark to an open file taking; // advantage of all the serialization capabilities developed for remarks (e.g.; // metadata in a section, bitstream format, etc.).; //; // Typically, a specialized remark emitter should hold a reference to the main; // remark streamer set up in the LLVMContext, and should convert specialized; // diagnostics to llvm::remarks::Remark objects as they get emitted.; //; // Specialized remark emitters can be components like:; // * Remarks from LLVM (M)IR passes; // * Remarks from the frontend; // * Remarks from an intermediate IR; //; // This allows for composition between specialized remark emitters throughout; // the compilation pipeline, that end up in the same file, using the same format; // and serialization techniques.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkStreamer.h:1158,pipeline,pipeline,1158,interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkStreamer.h,1,['pipeline'],['pipeline']
Deployability,"//===- llvm/Support/Valgrind.h - Communication with Valgrind ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Methods for communicating with a valgrind instance this program is running; // under. These are all no-ops unless LLVM was configured on a system with the; // valgrind headers installed and valgrind is controlling this process.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Valgrind.h:559,install,installed,559,interpreter/llvm-project/llvm/include/llvm/Support/Valgrind.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Valgrind.h,1,['install'],['installed']
Deployability,"//===- llvm/SymbolTableListTraits.h - Traits for iplist ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a generic class that is used to implement the automatic; // symbol table manipulation that occurs when you put (for example) a named; // instruction into a basic block.; //; // The way that this is implemented is by using a special traits class with the; // intrusive list that makes up the list of instructions in a basic block. When; // a new element is added to the list of instructions, the traits class is; // notified, allowing the symbol table to be updated.; //; // This generic class implements the traits class. It must be generic so that; // it can work for all uses it, which include lists of instructions, basic; // blocks, arguments, functions, global variables, etc...; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/SymbolTableListTraits.h:858,update,updated,858,interpreter/llvm-project/llvm/include/llvm/IR/SymbolTableListTraits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/SymbolTableListTraits.h,1,['update'],['updated']
Deployability,"//===-- AMDGPUPromoteAlloca.cpp - Promote Allocas -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Eliminates allocas by either converting them into vectors or by migrating; // them to local address space.; //; // Two passes are exposed by this file:; // - ""promote-alloca-to-vector"", which runs early in the pipeline and only; // promotes to vector. Promotion to vector is almost always profitable; // except when the alloca is too big and the promotion would result in; // very high register pressure.; // - ""promote-alloca"", which does both promotion to vector and LDS and runs; // much later in the pipeline. This runs after SROA because promoting to; // LDS is of course less profitable than getting rid of the alloca or; // vectorizing it, thus we only want to do it when the only alternative is; // lowering the alloca to stack.; //; // Note that both of them exist for the old and new PMs. The new PM passes are; // declared in AMDGPU.h and the legacy PM ones are declared here.s; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPromoteAlloca.cpp:593,pipeline,pipeline,593,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPromoteAlloca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPromoteAlloca.cpp,2,['pipeline'],['pipeline']
Deployability,"//===-- ARMBuildAttributes.h - ARM Build Attributes -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains enumerations and support routines for ARM build attributes; // as defined in ARM ABI addenda document (ABI release 2.08).; //; // ELF for the ARM Architecture r2.09 - November 30, 2012; //; // http://infocenter.arm.com/help/topic/com.arm.doc.ihi0044e/IHI0044E_aaelf.pdf; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMBuildAttributes.h:509,release,release,509,interpreter/llvm-project/llvm/include/llvm/Support/ARMBuildAttributes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMBuildAttributes.h,1,['release'],['release']
Deployability,"//===-- ARMFixCortexA57AES1742098Pass.cpp ---------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This pass works around a Cortex Core Fused AES erratum:; // - Cortex-A57 Erratum 1742098; // - Cortex-A72 Erratum 1655431; //; // The erratum may be triggered if an input vector register to AESE or AESD was; // last written by an instruction that only updated 32 bits of it. This can; // occur for either of the input registers.; //; // The workaround chosen is to update the input register using `r = VORRq r, r`,; // as this updates all 128 bits of the register unconditionally, but does not; // change the values observed in `r`, making the input safe.; //; // This pass has to be conservative in a few cases:; // - an input vector register to the AES instruction is defined outside the; // current function, where we have to assume the register was updated in an; // unsafe way; and; // - an input vector register to the AES instruction is updated along multiple; // different control-flow paths, where we have to ensure all the register; // updating instructions are safe.; //; // Both of these cases may apply to a input vector register. In either case, we; // need to ensure that, when the pass is finished, there exists a safe; // instruction between every unsafe register updating instruction and the AES; // instruction.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFixCortexA57AES1742098Pass.cpp:631,update,updated,631,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFixCortexA57AES1742098Pass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFixCortexA57AES1742098Pass.cpp,5,['update'],"['update', 'updated', 'updates']"
Deployability,"//===-- AutoUpgrade.cpp - Implement auto-upgrade helper functions ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the auto-upgrade helper functions.; // This is where deprecated IR intrinsics and other IR features are updated to; // current specifications.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:41,upgrade,upgrade,41,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,3,"['update', 'upgrade']","['updated', 'upgrade']"
Deployability,"//===-- EmbedBitcodePass.h - Embeds bitcode into global ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file provides a pass which clones the current module and runs the; /// provided pass pipeline on the clone. The optimized module is stored into a; /// global variable in the `.llvm.lto` section. Primarily, this pass is used; /// to support the FatLTO pipeline, but could be used to generate a bitcode; /// section for any arbitrary pass pipeline without changing the current module.; ///; //===----------------------------------------------------------------------===//; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/EmbedBitcodePass.h:486,pipeline,pipeline,486,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/EmbedBitcodePass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/EmbedBitcodePass.h,3,['pipeline'],['pipeline']
Deployability,"//===-- ExecutionEngine.cpp - Common Implementation shared by EEs ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the common interface used by the various execution engine; // subclasses.; //; // FIXME: This file needs to be updated to support scalable vectors; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngine.cpp:512,update,updated,512,interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngine.cpp,1,['update'],['updated']
Deployability,"//===-- FEntryInsertion.cpp - Patchable prologues for LLVM -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file edits function bodies to insert fentry calls.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/FEntryInserter.cpp:30,Patch,Patchable,30,interpreter/llvm-project/llvm/lib/CodeGen/FEntryInserter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/FEntryInserter.cpp,1,['Patch'],['Patchable']
Deployability,"//===-- M68kInstPrinter.cpp - Convert M68k MCInst to asm --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains definitions for an M68k MCInst printer.; ///; //===----------------------------------------------------------------------===//; // TODO Conform with all supported Motorola ASM syntax; // Motorola's assembly has several syntax variants, especially on; // addressing modes.; // For example, you can write pc indirect w/ displacement as; // `x(%pc)`, where `x` is the displacement imm, or `(x,%pc)`.; // Currently we're picking the variant that is different from; // GCC, albeit being recognizable by GNU AS.; // Not sure what is the impact now (e.g. some syntax might; // not be recognized by some old consoles' toolchains, in which; // case we can not use our integrated assembler), but either way,; // it will be great to support all of the variants in the future.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp:1074,integrat,integrated,1074,interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp,1,['integrat'],['integrated']
Deployability,"//===-- MemorySSAUpdater.cpp - Memory SSA Updater--------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------===//; //; // This file implements the MemorySSAUpdater class.; //; //===----------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp:42,Update,Updater,42,interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,1,['Update'],['Updater']
Deployability,"//===-- PPCCTRLoops.cpp - Verify CTR loops -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass verifies that all bdnz/bdz instructions are dominated by a loop; // mtctr before any other instructions that might clobber the ctr register.; //; //===----------------------------------------------------------------------===//; // CTR loops are produced by the HardwareLoops pass and this pass is simply a; // verification that no invalid CTR loops are produced. As such, it isn't; // something that needs to be run (or even defined) for Release builds so the; // entire file is guarded by NDEBUG.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCTRLoopsVerify.cpp:816,Release,Release,816,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCTRLoopsVerify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCTRLoopsVerify.cpp,1,['Release'],['Release']
Deployability,"//===-- PatchableFunction.cpp - Patchable prologues for LLVM -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements edits function bodies in place to support the; // ""patchable-function"" attribute.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PatchableFunction.cpp:8,Patch,PatchableFunction,8,interpreter/llvm-project/llvm/lib/CodeGen/PatchableFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PatchableFunction.cpp,3,"['Patch', 'patch']","['Patchable', 'PatchableFunction', 'patchable-function']"
Deployability,"//===-- PerfJITEventListener.cpp - Tell Linux's perf about JITted code ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a JITEventListener object that tells perf about JITted; // functions, including source line information.; //; // Documentation for perf jit integration is available at:; // https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/tools/perf/Documentation/jitdump-specification.txt; // https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/tools/perf/Documentation/jit-interface.txt; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/PerfJITEvents/PerfJITEventListener.cpp:541,integrat,integration,541,interpreter/llvm-project/llvm/lib/ExecutionEngine/PerfJITEvents/PerfJITEventListener.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/PerfJITEvents/PerfJITEventListener.cpp,1,['integrat'],['integration']
Deployability,"//===-- PerfectShuffle.cpp - Perfect Shuffle Generator --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file computes an optimal sequence of instructions for doing all shuffles; // of two 4-element vectors. With a release build and when configured to emit; // an altivec instruction table, this takes about 30s to run on a 2.7Ghz; // PowerPC G5.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/PerfectShuffle/PerfectShuffle.cpp:498,release,release,498,interpreter/llvm-project/llvm/utils/PerfectShuffle/PerfectShuffle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/PerfectShuffle/PerfectShuffle.cpp,1,['release'],['release']
Deployability,"//===-- SILowerControlFlow.cpp - Use predicates for control flow ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This pass lowers the pseudo control flow instructions to real; /// machine instructions.; ///; /// All control flow is handled using predicated instructions and; /// a predicate stack. Each Scalar ALU controls the operations of 64 Vector; /// ALUs. The Scalar ALU can update the predicate for any of the Vector ALUs; /// by writing to the 64-bit EXEC register (each bit corresponds to a; /// single vector ALU). Typically, for predicates, a vector ALU will write; /// to its bit of the VCC register (like EXEC VCC is 64-bits, one for each; /// Vector ALU) and then the ScalarALU will AND the VCC register with the; /// EXEC to update the predicates.; ///; /// For example:; /// %vcc = V_CMP_GT_F32 %vgpr1, %vgpr2; /// %sgpr0 = SI_IF %vcc; /// %vgpr0 = V_ADD_F32 %vgpr0, %vgpr0; /// %sgpr0 = SI_ELSE %sgpr0; /// %vgpr0 = V_SUB_F32 %vgpr0, %vgpr0; /// SI_END_CF %sgpr0; ///; /// becomes:; ///; /// %sgpr0 = S_AND_SAVEEXEC_B64 %vcc // Save and update the exec mask; /// %sgpr0 = S_XOR_B64 %sgpr0, %exec // Clear live bits from saved exec mask; /// S_CBRANCH_EXECZ label0 // This instruction is an optional; /// // optimization which allows us to; /// // branch if all the bits of; /// // EXEC are zero.; /// %vgpr0 = V_ADD_F32 %vgpr0, %vgpr0 // Do the IF block of the branch; ///; /// label0:; /// %sgpr0 = S_OR_SAVEEXEC_B64 %sgpr0 // Restore the exec mask for the Then; /// // block; /// %exec = S_XOR_B64 %sgpr0, %exec // Update the exec mask; /// S_BRANCH_EXECZ label1 // Use our branch optimization; /// // instruction again.; /// %vgpr0 = V_SUB_F32 %vgpr0, %vgpr // Do the THEN block; /// label1:; /// %e",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp:663,update,update,663,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp,2,['update'],['update']
Deployability,"//===-- SourcePrinter.cpp - source interleaving utilities ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the LiveVariablePrinter and SourcePrinter classes to; // keep track of DWARF info as the current address is updated, and print out the; // source file line and variable liveness as needed.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.cpp:511,update,updated,511,interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.cpp,1,['update'],['updated']
Deployability,"//===-- StackMapLivenessAnalysis.cpp - StackMap live Out Analysis ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the StackMap Liveness analysis pass. The pass calculates; // the liveness for each basic block in a function and attaches the register; // live-out information to a stackmap or patchpoint intrinsic if present.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackMapLivenessAnalysis.cpp:582,patch,patchpoint,582,interpreter/llvm-project/llvm/lib/CodeGen/StackMapLivenessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackMapLivenessAnalysis.cpp,1,['patch'],['patchpoint']
Deployability,"//===-- Transfer.cpp --------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines transfer functions that evaluate program statements and; // update an environment accordingly.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/Transfer.cpp:461,update,update,461,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/Transfer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/Transfer.cpp,1,['update'],['update']
Deployability,"//===-- Transfer.h ----------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a transfer function that evaluates a program statement and; // updates an environment accordingly.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Transfer.h:464,update,updates,464,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Transfer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Transfer.h,1,['update'],['updates']
Deployability,"//===-- X86CodeGenPassBuilder.cpp ---------------------------------*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file contains X86 CodeGen pipeline builder.; /// TODO: Port CodeGen passes to new pass manager.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CodeGenPassBuilder.cpp:422,pipeline,pipeline,422,interpreter/llvm-project/llvm/lib/Target/X86/X86CodeGenPassBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CodeGenPassBuilder.cpp,1,['pipeline'],['pipeline']
Deployability,"//===-- X86FixupLEAs.cpp - use or replace LEA instructions -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the pass that finds instructions that can be; // re-written as LEA instructions in order to reduce pipeline delays.; // It replaces LEAs with ADD/INC/DEC when that is better for size/speed.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupLEAs.cpp:495,pipeline,pipeline,495,interpreter/llvm-project/llvm/lib/Target/X86/X86FixupLEAs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupLEAs.cpp,1,['pipeline'],['pipeline']
Deployability,"//===-- X86WinEHState - Insert EH state updates for win32 exceptions ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // All functions using an MSVC EH personality use an explicitly updated state; // number stored in an exception registration stack object. The registration; // object is linked into a thread-local chain of registrations stored at fs:00.; // This pass adds the registration object and EH state updates.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86WinEHState.cpp:40,update,updates,40,interpreter/llvm-project/llvm/lib/Target/X86/X86WinEHState.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86WinEHState.cpp,3,['update'],"['updated', 'updates']"
Deployability,"//===-- llvm-config.cpp - LLVM project configuration utility --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This tool encapsulates information about an LLVM project configuration for; // use by other project's build environments (to determine installed path,; // available features, required libraries, etc.).; //; // Note that although this tool *may* be used by some parts of LLVM's build; // itself (i.e., the Makefiles use it to compute required libraries when linking; // tools), this tool is primarily designed to support external projects.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp:39,configurat,configuration,39,interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,3,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"//===-- llvm/BinaryFormat/Dwarf.h ---Dwarf Constants-------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file contains constants used for implementing Dwarf; /// debug support.; ///; /// For details on the Dwarf specfication see the latest DWARF Debugging; /// Information Format standard document on http://www.dwarfstd.org. This; /// file often includes support for non-released standard features.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/Dwarf.h:667,release,released,667,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/Dwarf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/Dwarf.h,1,['release'],['released']
Deployability,"//===-- llvm/MC/MCFixup.h - Instruction Relocation and Patching -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCFixup.h:55,Patch,Patching,55,interpreter/llvm-project/llvm/include/llvm/MC/MCFixup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCFixup.h,1,['Patch'],['Patching']
Deployability,"//===--- Integrated Assembler Information ----------------------------===//; // Generated object files can use all ELF features supported by GNU ld of; // this binutils version and later. INT_MAX means all features can be used,; // regardless of GNU ld support. The default value is referenced by; // clang/Driver/Options.td.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h:9,Integrat,Integrated,9,interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,1,['Integrat'],['Integrated']
Deployability,"//===--- ItaniumDemangle.h -----------*- mode:c++;eval:(read-only-mode) -*-===//; // Do not edit! See README.txt.; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Generic itanium demangler library.; // There are two copies of this file in the source tree. The one under; // libcxxabi is the original and the one under llvm is the copy. Use; // cp-to-llvm.sh to update the copy. See README.txt for more details.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:610,update,update,610,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['update'],['update']
Deployability,"//===--- LLJITWithLazyReexports.cpp - LLJIT example with custom laziness --===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // In this example we will use the lazy re-exports utility to lazily compile; // IR modules. We will do this in seven steps:; //; // 1. Create an LLJIT instance.; // 2. Install a transform so that we can see what is being compiled.; // 3. Create an indirect stubs manager and lazy call-through manager.; // 4. Add two modules that will be conditionally compiled, plus a main module.; // 5. Add lazy-rexports of the symbols in the conditionally compiled modules.; // 6. Dump the ExecutionSession state to see the symbol table prior to; // executing any code.; // 7. Verify that only modules containing executed code are compiled.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithLazyReexports/LLJITWithLazyReexports.cpp:549,Install,Install,549,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithLazyReexports/LLJITWithLazyReexports.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithLazyReexports/LLJITWithLazyReexports.cpp,1,['Install'],['Install']
Deployability,"//===--- MacroExpander.cpp - Format C++ code --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains the implementation of MacroExpander, which handles macro; /// configuration and expansion while formatting.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/MacroExpander.cpp:477,configurat,configuration,477,interpreter/llvm-project/clang/lib/Format/MacroExpander.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/MacroExpander.cpp,1,['configurat'],['configuration']
Deployability,"//===--- Macros.h - Format C++ code -----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains the main building blocks of macro support in; /// clang-format.; ///; /// In order to not violate the requirement that clang-format can format files; /// in isolation, clang-format's macro support uses expansions users provide; /// as part of clang-format's style configuration.; ///; /// Macro definitions are of the form ""MACRO(p1, p2)=p1 + p2"", but only support; /// one level of expansion (\see MacroExpander for a full description of what; /// is supported).; ///; /// As part of parsing, clang-format uses the MacroExpander to expand the; /// spelled token streams into expanded token streams when it encounters a; /// macro call. The UnwrappedLineParser continues to parse UnwrappedLines; /// from the expanded token stream.; /// After the expanded unwrapped lines are parsed, the MacroCallReconstructor; /// matches the spelled token stream into unwrapped lines that best resemble the; /// structure of the expanded unwrapped lines. These reconstructed unwrapped; /// lines are aliasing the tokens in the expanded token stream, so that token; /// annotations will be reused when formatting the spelled macro calls.; ///; /// When formatting, clang-format annotates and formats the expanded unwrapped; /// lines first, determining the token types. Next, it formats the spelled; /// unwrapped lines, keeping the token types fixed, while allowing other; /// formatting decisions to change.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Macros.h:679,configurat,configuration,679,interpreter/llvm-project/clang/lib/Format/Macros.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Macros.h,1,['configurat'],['configuration']
Deployability,"//===--- RDFDeadCode.h ----------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // RDF-based generic dead code elimination.; //; // The main interface of this class are functions ""collect"" and ""erase"".; // This allows custom processing of the function being optimized by a; // particular consumer. The simplest way to use this class would be to; // instantiate an object, and then simply call ""collect"" and ""erase"",; // passing the result of ""getDeadInstrs()"" to it.; // A more complex scenario would be to call ""collect"" first, then visit; // all post-increment instructions to see if the address update is dead; // or not, and if it is, convert the instruction to a non-updating form.; // After that ""erase"" can be called with the set of nodes including both,; // dead defs from the updating instructions and the nodes corresponding; // to the dead instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/RDFDeadCode.h:898,update,update,898,interpreter/llvm-project/llvm/lib/Target/Hexagon/RDFDeadCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/RDFDeadCode.h,1,['update'],['update']
Deployability,"//===--- ROCm.h - ROCm installation detector --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h:23,install,installation,23,interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,1,['install'],['installation']
Deployability,"//===--- StringViewExtras.h ----------*- mode:c++;eval:(read-only-mode) -*-===//; // Do not edit! See README.txt.; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // There are two copies of this file in the source tree. The one under; // libcxxabi is the original and the one under llvm is the copy. Use; // cp-to-llvm.sh to update the copy. See README.txt for more details.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/StringViewExtras.h:571,update,update,571,interpreter/llvm-project/llvm/include/llvm/Demangle/StringViewExtras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/StringViewExtras.h,1,['update'],['update']
Deployability,"//===--- TargetCXXABI.h - C++ ABI Target Configuration ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the TargetCXXABI class, which abstracts details of the; /// C++ ABI that we're targeting.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetCXXABI.h:41,Configurat,Configuration,41,interpreter/llvm-project/clang/include/clang/Basic/TargetCXXABI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetCXXABI.h,1,['Configurat'],['Configuration']
Deployability,"//===--- TerminalConfigUnix.cpp - termios storage -------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // TerminalReader and TerminalDisplay need to reset the terminal configuration; // upon destruction, to leave the terminal as before. To avoid a possible; // misunderstanding of what ""before"" means, centralize their storage of the; // previous termios and have them share it.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp:396,configurat,configuration,396,core/textinput/src/textinput/TerminalConfigUnix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp,1,['configurat'],['configuration']
Deployability,"//===--- TerminalConfigUnix.cpp - termios storage ---------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // TerminalReader and TerminalDisplay need to reset the terminal configuration; // upon destruction, to leave the terminal as before. To avoid a possible; // misunderstanding of what ""before"" means, centralize their storage of the; // previous termios and have them share it.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h:398,configurat,configuration,398,core/textinput/src/textinput/TerminalConfigUnix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h,1,['configurat'],['configuration']
Deployability,"//===--- TransAutoreleasePool.cpp - Transformations to ARC mode -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // rewriteAutoreleasePool:; //; // Calls to NSAutoreleasePools will be rewritten as an @autorelease scope.; //; // NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];; // ...; // [pool release];; // ---->; // @autorelease {; // ...; // }; //; // An NSAutoreleasePool will not be touched if:; // - There is not a corresponding -release/-drain in the same scope; // - Not all references of the NSAutoreleasePool variable can be removed; // - There is a variable that is declared inside the intended @autorelease scope; // which is also used outside it.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp:573,release,release,573,interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,2,['release'],['release']
Deployability,"//===--- TransRetainReleaseDealloc.cpp - Transformations to ARC mode ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // removeRetainReleaseDealloc:; //; // Removes retain/release/autorelease/dealloc messages.; //; // return [[foo retain] autorelease];; // ---->; // return foo;; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp:434,release,release,434,interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp,1,['release'],['release']
Deployability,//===--- Update all analyses which we must preserve now -----------------===//; // Update Loop Information - we know that this block is now in the current; // loop and all parent loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp:9,Update,Update,9,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp,2,['Update'],['Update']
Deployability,"//===--- Utility.h -------------------*- mode:c++;eval:(read-only-mode) -*-===//; // Do not edit! See README.txt.; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Provide some utility classes for use in the demangler.; // There are two copies of this file in the source tree. The one in libcxxabi; // is the original and the one in llvm is the copy. Use cp-to-llvm.sh to update; // the copy. See README.txt for more details.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/Utility.h:620,update,update,620,interpreter/llvm-project/llvm/include/llvm/Demangle/Utility.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/Utility.h,1,['update'],['update']
Deployability,"//===--- WebAssemblyOptimizeLiveIntervals.cpp - LiveInterval processing ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Optimize LiveIntervals for use in a post-RA context.; //; /// LiveIntervals normally runs before register allocation when the code is; /// only recently lowered out of SSA form, so it's uncommon for registers to; /// have multiple defs, and when they do, the defs are usually closely related.; /// Later, after coalescing, tail duplication, and other optimizations, it's; /// more common to see registers with multiple unrelated defs. This pass; /// updates LiveIntervals to distribute the value numbers across separate; /// LiveIntervals.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyOptimizeLiveIntervals.cpp:846,update,updates,846,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyOptimizeLiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyOptimizeLiveIntervals.cpp,1,['update'],['updates']
Deployability,"//===---- PPCReduceCRLogicals.cpp - Reduce CR Bit Logical operations ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This pass aims to reduce the number of logical operations on bits in the CR; // register. These instructions have a fairly high latency and only a single; // pipeline at their disposal in modern PPC cores. Furthermore, they have a; // tendency to occur in fairly small blocks where there's little opportunity; // to hide the latency between the CR logical operation and its user.; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp:540,pipeline,pipeline,540,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp,1,['pipeline'],['pipeline']
Deployability,"//===----- BPFMISimplifyPatchable.cpp - MI Simplify Patchable Insts -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass targets a subset of instructions like below; // ld_imm64 r1, @global; // ldd r2, r1, 0; // add r3, struct_base_reg, r2; //; // Here @global should represent an AMA (abstruct member access).; // Such an access is subject to bpf load time patching. After this pass, the; // code becomes; // ld_imm64 r1, @global; // add r3, struct_base_reg, r1; //; // Eventually, at BTF output stage, a relocation record will be generated; // for ld_imm64 which should be replaced later by bpf loader:; // r1 = <calculated field_info>; // add r3, struct_base_reg, r1; //; // This pass also removes the intermediate load generated in IR pass for; // __builtin_btf_type_id() intrinsic.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMISimplifyPatchable.cpp:52,Patch,Patchable,52,interpreter/llvm-project/llvm/lib/Target/BPF/BPFMISimplifyPatchable.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMISimplifyPatchable.cpp,2,"['Patch', 'patch']","['Patchable', 'patching']"
Deployability,"//===----- SchedulePostRAList.cpp - list scheduler ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements a top-down list scheduler, using standard algorithms.; // The basic approach uses a priority queue of available nodes to schedule.; // One at a time, nodes are taken from the priority queue (thus in priority; // order), checked for legality to schedule, and emitted if legal.; //; // Nodes may not be legal to schedule either due to structural hazards (e.g.; // pipeline or resource constraints) or because an input to the instruction has; // not completed execution.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:761,pipeline,pipeline,761,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,1,['pipeline'],['pipeline']
Deployability,"//===------ PPCLoopInstrFormPrep.cpp - Loop Instr Form Prep Pass ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a pass to prepare loops for ppc preferred addressing; // modes, leveraging different instruction form. (eg: DS/DQ form, D/DS form with; // update); // Additional PHIs are created for loop induction variables used by load/store; // instructions so that preferred addressing modes can be used.; //; // 1: DS/DQ form preparation, prepare the load/store instructions so that they; // can satisfy the DS/DQ form displacement requirements.; // Generically, this means transforming loops like this:; // for (int i = 0; i < n; ++i) {; // unsigned long x1 = *(unsigned long *)(p + i + 5);; // unsigned long x2 = *(unsigned long *)(p + i + 9);; // }; //; // to look like this:; //; // unsigned NewP = p + 5;; // for (int i = 0; i < n; ++i) {; // unsigned long x1 = *(unsigned long *)(i + NewP);; // unsigned long x2 = *(unsigned long *)(i + NewP + 4);; // }; //; // 2: D/DS form with update preparation, prepare the load/store instructions so; // that we can use update form to do pre-increment.; // Generically, this means transforming loops like this:; // for (int i = 0; i < n; ++i); // array[i] = c;; //; // to look like this:; //; // T *p = array[-1];; // for (int i = 0; i < n; ++i); // *++p = c;; //; // 3: common multiple chains for the load/stores with same offsets in the loop,; // so that we can reuse the offsets and reduce the register pressure in the; // loop. This transformation can also increase the loop ILP as now each chain; // uses its own loop induction add/addi. But this will increase the number of; // add/addi in the loop.; //; // Generically, this means transforming loops like th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:543,update,update,543,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,1,['update'],['update']
Deployability,"//===------- DebugObjectManagerPlugin.cpp - JITLink debug objects ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // FIXME: Update Plugin to poke the debug object into a new JITLink section,; // rather than creating a new allocation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp:390,Update,Update,390,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,1,['Update'],['Update']
Deployability,"//===------------- Support/UnicodeNameToCodepointGenerated.cpp ------------===//; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements mapping the name of a unicode code point to its value.; //; // This file was generated using ./bin/UnicodeNameMappingGenerator.; // Do not edit manually.; //; //===----------------------------------------------------------------------===//; /*; UNICODE, INC. LICENSE AGREEMENT - DATA FILES AND SOFTWARE. See Terms of Use <https://www.unicode.org/copyright.html>; for definitions of Unicode Inc.’s Data Files and Software. NOTICE TO USER: Carefully read the following legal agreement.; BY DOWNLOADING, INSTALLING, COPYING OR OTHERWISE USING UNICODE INC.'S; DATA FILES (""DATA FILES""), AND/OR SOFTWARE (""SOFTWARE""),; YOU UNEQUIVOCALLY ACCEPT, AND AGREE TO BE BOUND BY, ALL OF THE; TERMS AND CONDITIONS OF THIS AGREEMENT.; IF YOU DO NOT AGREE, DO NOT DOWNLOAD, INSTALL, COPY, DISTRIBUTE OR USE; THE DATA FILES OR SOFTWARE. COPYRIGHT AND PERMISSION NOTICE. Copyright © 1991-2022 Unicode, Inc. All rights reserved.; Distributed under the Terms of Use in https://www.unicode.org/copyright.html. Permission is hereby granted, free of charge, to any person obtaining; a copy of the Unicode data files and any associated documentation; (the ""Data Files"") or Unicode software and any associated documentation; (the ""Software"") to deal in the Data Files or Software; without restriction, including without limitation the rights to use,; copy, modify, merge, publish, distribute, and/or sell copies of; the Data Files or Software, and to permit persons to whom the Data Files; or Software are furnished to do so, provided that either; (a) this copyright and permission notice appear with all copies; of the Data Fi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp:901,INSTALL,INSTALLING,901,interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp,1,['INSTALL'],['INSTALLING']
Deployability,"//===--------------------- DispatchStage.cpp --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file models the dispatch component of an instruction pipeline.; ///; /// The DispatchStage is responsible for updating instruction dependencies; /// and communicating to the simulated instruction scheduler that an instruction; /// is ready to be scheduled for execution.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp:454,pipeline,pipeline,454,interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,1,['pipeline'],['pipeline']
Deployability,"//===--------------------- Instruction.cpp ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines abstractions used by the Pipeline to model register reads,; // register writes and instructions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Instruction.cpp:426,Pipeline,Pipeline,426,interpreter/llvm-project/llvm/lib/MCA/Instruction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Instruction.cpp,1,['Pipeline'],['Pipeline']
Deployability,"//===--------------------- Instruction.h ------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines abstractions used by the Pipeline to model register reads,; /// register writes and instructions.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h:439,Pipeline,Pipeline,439,interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,1,['Pipeline'],['Pipeline']
Deployability,"//===--------------------- InstructionTables.cpp ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements the method InstructionTables::execute().; /// Method execute() prints a theoretical resource pressure distribution based; /// on the information available in the scheduling model, and without running; /// the pipeline.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/InstructionTables.cpp:626,pipeline,pipeline,626,interpreter/llvm-project/llvm/lib/MCA/Stages/InstructionTables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/InstructionTables.cpp,1,['pipeline'],['pipeline']
Deployability,"//===--------------------- Pipeline.cpp -------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements an ordered container of stages that simulate the; /// pipeline of a hardware backend.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Pipeline.cpp:27,Pipeline,Pipeline,27,interpreter/llvm-project/llvm/lib/MCA/Pipeline.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Pipeline.cpp,2,"['Pipeline', 'pipeline']","['Pipeline', 'pipeline']"
Deployability,"//===--------------------- Pipeline.h ---------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements an ordered container of stages that simulate the; /// pipeline of a hardware backend.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Pipeline.h:27,Pipeline,Pipeline,27,interpreter/llvm-project/llvm/include/llvm/MCA/Pipeline.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Pipeline.h,2,"['Pipeline', 'pipeline']","['Pipeline', 'pipeline']"
Deployability,"//===--------------------- PipelinePrinter.cpp ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements the PipelinePrinter interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/PipelinePrinter.cpp:27,Pipeline,PipelinePrinter,27,interpreter/llvm-project/llvm/tools/llvm-mca/PipelinePrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/PipelinePrinter.cpp,2,['Pipeline'],['PipelinePrinter']
Deployability,"//===--------------------- PipelinePrinter.h --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements class PipelinePrinter.; ///; /// PipelinePrinter allows the customization of the performance report.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/PipelinePrinter.h:27,Pipeline,PipelinePrinter,27,interpreter/llvm-project/llvm/tools/llvm-mca/PipelinePrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/PipelinePrinter.h,3,['Pipeline'],['PipelinePrinter']
Deployability,"//===--------------------- ResourcePressureView.h ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file define class ResourcePressureView.; /// Class ResourcePressureView observes hardware events generated by; /// the Pipeline object and collects statistics related to resource usage at; /// instruction granularity.; /// Resource pressure information is then printed out to a stream in the; /// form of a table like the one from the example below:; ///; /// Resources:; /// [0] - JALU0; /// [1] - JALU1; /// [2] - JDiv; /// [3] - JFPM; /// [4] - JFPU0; /// [5] - JFPU1; /// [6] - JLAGU; /// [7] - JSAGU; /// [8] - JSTC; /// [9] - JVIMUL; ///; /// Resource pressure per iteration:; /// [0] [1] [2] [3] [4] [5] [6] [7] [8] [9]; /// 0.00 0.00 0.00 0.00 2.00 2.00 0.00 0.00 0.00 0.00; ///; /// Resource pressure by instruction:; /// [0] [1] [2] [3] [4] [5] [6] [7] [8] [9] Instructions:; /// - - - - - 1.00 - - - - vpermilpd $1, %xmm0,; /// %xmm1; /// - - - - 1.00 - - - - - vaddps %xmm0, %xmm1,; /// %xmm2; /// - - - - - 1.00 - - - - vmovshdup %xmm2, %xmm3; /// - - - - 1.00 - - - - - vaddss %xmm2, %xmm3,; /// %xmm4; ///; /// In this example, we have AVX code executed on AMD Jaguar (btver2).; /// Both shuffles and vector floating point add operations on XMM registers have; /// a reciprocal throughput of 1cy.; /// Each add is issued to pipeline JFPU0, while each shuffle is issued to; /// pipeline JFPU1. The overall pressure per iteration is reported by two; /// tables: the first smaller table is the resource pressure per iteration;; /// the second table reports resource pressure per instruction. Values are the; /// average resource cycles consumed by an instruction.; /// Every vector add fr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/ResourcePressureView.h:520,Pipeline,Pipeline,520,interpreter/llvm-project/llvm/tools/llvm-mca/Views/ResourcePressureView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/ResourcePressureView.h,1,['Pipeline'],['Pipeline']
Deployability,"//===--------------------- Support.cpp --------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements a few helper functions used by various pipeline; /// components.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Support.cpp:456,pipeline,pipeline,456,interpreter/llvm-project/llvm/lib/MCA/Support.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Support.cpp,1,['pipeline'],['pipeline']
Deployability,"//===--------------------- Support.h ----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// Helper functions used by various pipeline components.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Support.h:429,pipeline,pipeline,429,interpreter/llvm-project/llvm/include/llvm/MCA/Support.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Support.h,1,['pipeline'],['pipeline']
Deployability,"//===--------------------- TimelineView.h -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \brief; ///; /// This file implements a timeline view for the llvm-mca tool.; ///; /// Class TimelineView observes events generated by the pipeline. For every; /// instruction executed by the pipeline, it stores information related to; /// state transition. It then plots that information in the form of a table; /// as reported by the example below:; ///; /// Timeline view:; /// 	 0123456; /// Index	0123456789; ///; /// [0,0]	DeER . . ..	vmovshdup %xmm0, %xmm1; /// [0,1]	DeER . . ..	vpermilpd $1, %xmm0, %xmm2; /// [0,2]	.DeER. . ..	vpermilps $231, %xmm0, %xmm5; /// [0,3]	.DeeeER . ..	vaddss %xmm1, %xmm0, %xmm3; /// [0,4]	. D==eeeER. ..	vaddss %xmm3, %xmm2, %xmm4; /// [0,5]	. D=====eeeER ..	vaddss %xmm4, %xmm5, %xmm6; ///; /// [1,0]	. DeE------R ..	vmovshdup %xmm0, %xmm1; /// [1,1]	. DeE------R ..	vpermilpd $1, %xmm0, %xmm2; /// [1,2]	. DeE-----R ..	vpermilps $231, %xmm0, %xmm5; /// [1,3]	. D=eeeE--R ..	vaddss %xmm1, %xmm0, %xmm3; /// [1,4]	. D===eeeER ..	vaddss %xmm3, %xmm2, %xmm4; /// [1,5]	. D======eeeER	vaddss %xmm4, %xmm5, %xmm6; ///; /// There is an entry for every instruction in the input assembly sequence.; /// The first field is a pair of numbers obtained from the instruction index.; /// The first element of the pair is the iteration index, while the second; /// element of the pair is a sequence number (i.e. a position in the assembly; /// sequence).; /// The second field of the table is the actual timeline information; each; /// column is the information related to a specific cycle of execution.; /// The timeline of an instruction is described by a sequence of character; /// where each ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h:519,pipeline,pipeline,519,interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,2,['pipeline'],['pipeline']
Deployability,"//===---------------------- CustomBehaviour.h -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the base class CustomBehaviour which can be inherited from; /// by specific targets (ex. llvm/tools/llvm-mca/lib/X86CustomBehaviour.h).; /// CustomBehaviour is designed to enforce custom behaviour and dependencies; /// within the llvm-mca pipeline simulation that llvm-mca isn't already capable; /// of extracting from the Scheduling Models.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h:653,pipeline,pipeline,653,interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,1,['pipeline'],['pipeline']
Deployability,"//===---------------------- EntryStage.cpp ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the Fetch stage of an instruction pipeline. Its sole; /// purpose in life is to produce instructions for the rest of the pipeline.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/EntryStage.cpp:448,pipeline,pipeline,448,interpreter/llvm-project/llvm/lib/MCA/Stages/EntryStage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/EntryStage.cpp,2,['pipeline'],['pipeline']
Deployability,"//===---------------------- EntryStage.h ------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the Entry stage of an instruction pipeline. Its sole; /// purpose in life is to pick instructions in sequence and move them to the; /// next pipeline stage.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/EntryStage.h:448,pipeline,pipeline,448,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/EntryStage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/EntryStage.h,2,['pipeline'],['pipeline']
Deployability,"//===---------------------- ExecuteStage.cpp --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the execution stage of an instruction pipeline.; ///; /// The ExecuteStage is responsible for managing the hardware scheduler; /// and issuing notifications that an instruction has been executed.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/ExecuteStage.cpp:452,pipeline,pipeline,452,interpreter/llvm-project/llvm/lib/MCA/Stages/ExecuteStage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/ExecuteStage.cpp,1,['pipeline'],['pipeline']
Deployability,"//===---------------------- ExecuteStage.h ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the execution stage of a default instruction pipeline.; ///; /// The ExecuteStage is responsible for managing the hardware scheduler; /// and issuing notifications that an instruction has been executed.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/ExecuteStage.h:459,pipeline,pipeline,459,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/ExecuteStage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/ExecuteStage.h,1,['pipeline'],['pipeline']
Deployability,"//===---------------------- InOrderIssueStage.cpp ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// InOrderIssueStage implements an in-order execution pipeline.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/InOrderIssueStage.cpp:447,pipeline,pipeline,447,interpreter/llvm-project/llvm/lib/MCA/Stages/InOrderIssueStage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/InOrderIssueStage.cpp,1,['pipeline'],['pipeline']
Deployability,"//===---------------------- InOrderIssueStage.h -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// InOrderIssueStage implements an in-order execution pipeline.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/InOrderIssueStage.h:447,pipeline,pipeline,447,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/InOrderIssueStage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/InOrderIssueStage.h,1,['pipeline'],['pipeline']
Deployability,"//===---------------------- RetireStage.cpp ---------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the retire stage of an instruction pipeline.; /// The RetireStage represents the process logic that interacts with the; /// simulated RetireControlUnit hardware.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/RetireStage.cpp:449,pipeline,pipeline,449,interpreter/llvm-project/llvm/lib/MCA/Stages/RetireStage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/RetireStage.cpp,1,['pipeline'],['pipeline']
Deployability,"//===---------------------- RetireStage.h -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the retire stage of a default instruction pipeline.; /// The RetireStage represents the process logic that interacts with the; /// simulated RetireControlUnit hardware.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/RetireStage.h:456,pipeline,pipeline,456,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/RetireStage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/RetireStage.h,1,['pipeline'],['pipeline']
Deployability,"//===---------------------- Stage.cpp ---------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines a stage.; /// A chain of stages compose an instruction pipeline.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/Stage.cpp:469,pipeline,pipeline,469,interpreter/llvm-project/llvm/lib/MCA/Stages/Stage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/Stage.cpp,1,['pipeline'],['pipeline']
Deployability,"//===---------------------- Stage.h -----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines a stage.; /// A chain of stages compose an instruction pipeline.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/Stage.h:469,pipeline,pipeline,469,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/Stage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/Stage.h,1,['pipeline'],['pipeline']
Deployability,"//===----------------------- DispatchStage.h --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file models the dispatch component of an instruction pipeline.; ///; /// The DispatchStage is responsible for updating instruction dependencies; /// and communicating to the simulated instruction scheduler that an instruction; /// is ready to be scheduled for execution.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/DispatchStage.h:454,pipeline,pipeline,454,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/DispatchStage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/DispatchStage.h,1,['pipeline'],['pipeline']
Deployability,"//===---------------------------- Context.cpp -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines a class for holding ownership of various simulated; /// hardware units. A Context also provides a utility routine for constructing; /// a default out-of-order pipeline with fetch, dispatch, execute, and retire; /// stages.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Context.cpp:573,pipeline,pipeline,573,interpreter/llvm-project/llvm/lib/MCA/Context.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Context.cpp,1,['pipeline'],['pipeline']
Deployability,"//===---------------------------- Context.h ---------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines a class for holding ownership of various simulated; /// hardware units. A Context also provides a utility routine for constructing; /// a default out-of-order pipeline with fetch, dispatch, execute, and retire; /// stages.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Context.h:573,pipeline,pipeline,573,interpreter/llvm-project/llvm/include/llvm/MCA/Context.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Context.h,1,['pipeline'],['pipeline']
Deployability,"//===----------------------------------------------------------------------===//; // APIs for updating loop information after changing the CFG; //; /// addBasicBlockToLoop - This method is used by other analyses to update loop; /// information. NewBB is set to be a new member of the current loop.; /// Because of this, it is added as a member of all parent loops, and is added; /// to the specified LoopInfo object as being in the current basic block. It; /// is not valid to replace the loop header with this method.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfoImpl.h:215,update,update,215,interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfoImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfoImpl.h,1,['update'],['update']
Deployability,//===----------------------------------------------------------------------===//; // Bottom-Up Scheduling; //===----------------------------------------------------------------------===//; /// ReleasePred - Decrement the NumSuccsLeft count of a predecessor. Add it to; /// the AvailableQueue if the count reaches zero. Also update its cycle bound.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:193,Release,ReleasePred,193,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,4,"['Release', 'update']","['ReleasePred', 'update']"
Deployability,"//===----------------------------------------------------------------------===//; // Check for sending 'retain', 'release', or 'autorelease' directly to a Class.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BasicObjCFoundationChecks.cpp:114,release,release,114,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BasicObjCFoundationChecks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BasicObjCFoundationChecks.cpp,1,['release'],['release']
Deployability,"//===----------------------------------------------------------------------===//; // Execution domains.; //===----------------------------------------------------------------------===//; //; // Some instructions go down the NEON pipeline, some go down the VFP pipeline,; // and some can go down both. The vmov instructions go down the VFP pipeline,; // but they can be changed to vorr equivalents that are executed by the NEON; // pipeline.; //; // We use the following execution domain numbering:; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:229,pipeline,pipeline,229,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,4,['pipeline'],['pipeline']
Deployability,//===----------------------------------------------------------------------===//; // IV Widening - Extend the width of an IV to cover its widest uses.; //===----------------------------------------------------------------------===//; /// Update information about the induction variable that is extended by this; /// sign or zero extend operation. This is used to determine the final width of; /// the IV before actually widening it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:238,Update,Update,238,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['Update'],['Update']
Deployability,//===----------------------------------------------------------------------===//; // IntervalPartition Implementation; //===----------------------------------------------------------------------===//; // releaseMemory - Reset state back to before function was analyzed,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IntervalPartition.cpp:204,release,releaseMemory,204,interpreter/llvm-project/llvm/lib/Analysis/IntervalPartition.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IntervalPartition.cpp,1,['release'],['releaseMemory']
Deployability,"//===----------------------------------------------------------------------===//; // Lexer Event Handling.; //===----------------------------------------------------------------------===//; /// LookUpIdentifierInfo - Given a tok::raw_identifier token, look up the; /// identifier information for the token and install it into the token,; /// updating the token kind accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Preprocessor.cpp:310,install,install,310,interpreter/llvm-project/clang/lib/Lex/Preprocessor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Preprocessor.cpp,1,['install'],['install']
Deployability,"//===----------------------------------------------------------------------===//; // Local constant propagation.; //; /// ConstantFoldTerminator - If a terminator instruction is predicated on a; /// constant value, convert it into an unconditional branch to the constant; /// destination. This is a nontrivial operation because the successors of this; /// basic block must have their PHI nodes updated.; /// Also calls RecursivelyDeleteTriviallyDeadInstructions() on any branch/switch; /// conditions and indirectbr addresses this might make dead if; /// DeleteDeadConditions is true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:394,update,updated,394,interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,1,['update'],['updated']
Deployability,"//===----------------------------------------------------------------------===//; // Local constant propagation.; //; /// If a terminator instruction is predicated on a constant value, convert it; /// into an unconditional branch to the constant destination.; /// This is a nontrivial operation because the successors of this basic block; /// must have their PHI nodes updated.; /// Also calls RecursivelyDeleteTriviallyDeadInstructions() on any branch/switch; /// conditions and indirectbr addresses this might make dead if; /// DeleteDeadConditions is true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h:369,update,updated,369,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,1,['update'],['updated']
Deployability,"//===----------------------------------------------------------------------===//; // Overview:; // The Pass Manager Infrastructure manages passes. It's responsibilities are:; //; // o Manage optimization pass execution order; // o Make required Analysis information available before pass P is run; // o Release memory occupied by dead passes; // o If Analysis information is dirtied by a pass then regenerate Analysis; // information before it is consumed by another pass.; //; // Pass Manager Infrastructure uses multiple pass managers. They are; // PassManager, FunctionPassManager, MPPassManager, FPPassManager, BBPassManager.; // This class hierarchy uses multiple inheritance but pass managers do not; // derive from another pass manager.; //; // PassManager and FunctionPassManager are two top-level pass manager that; // represents the external interface of this entire pass manager infrastucture.; //; // Important classes :; //; // [o] class PMTopLevelManager;; //; // Two top level managers, PassManager and FunctionPassManager, derive from; // PMTopLevelManager. PMTopLevelManager manages information used by top level; // managers such as last user info.; //; // [o] class PMDataManager;; //; // PMDataManager manages information, e.g. list of available analysis info,; // used by a pass manager to manage execution order of passes. It also provides; // a place to implement common pass manager APIs. All pass managers derive from; // PMDataManager.; //; // [o] class FunctionPassManager;; //; // This is a external interface used to manage FunctionPasses. This; // interface relies on FunctionPassManagerImpl to do all the tasks.; //; // [o] class FunctionPassManagerImpl : public ModulePass, PMDataManager,; // public PMTopLevelManager;; //; // FunctionPassManagerImpl is a top level manager. It manages FPPassManagers; //; // [o] class FPPassManager : public ModulePass, public PMDataManager;; //; // FPPassManager manages FunctionPasses and BBPassManagers; //; // [o] class MPPassManag",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h:303,Release,Release,303,interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,1,['Release'],['Release']
Deployability,//===----------------------------------------------------------------------===//; // Parser; //===----------------------------------------------------------------------===//; /// CurTok/getNextToken - Provide a simple token buffer. CurTok is the current; /// token the parser is looking at. getNextToken reads another token from the; /// lexer and updates CurTok with its results.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter4/toy.cpp:348,update,updates,348,interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter4/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter4/toy.cpp,7,['update'],['updates']
Deployability,"//===----------------------------------------------------------------------===//; // Partial register updates; //===----------------------------------------------------------------------===//; //; // Swift renames NEON registers with 64-bit granularity. That means any; // instruction writing an S-reg implicitly reads the containing D-reg. The; // problem is mostly avoided by translating f32 operations to v2f32 operations; // on D-registers, but f32 loads are still a problem.; //; // These instructions can load an f32 into a NEON register:; //; // VLDRS - Only writes S, partial D update.; // VLD1LNd32 - Writes all D-regs, explicit partial D update, 2 uops.; // VLD1DUPd32 - Writes all D-regs, no partial reg update, 2 uops.; //; // FCONSTD can be used as a dependency-breaking instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:102,update,updates,102,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,4,['update'],"['update', 'updates']"
Deployability,//===----------------------------------------------------------------------===//; // Pass Pipeline Configuration; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRTargetMachine.cpp:90,Pipeline,Pipeline,90,interpreter/llvm-project/llvm/lib/Target/AVR/AVRTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRTargetMachine.cpp,8,"['Configurat', 'Pipeline']","['Configuration', 'Pipeline']"
Deployability,"//===----------------------------------------------------------------------===//; // Stack Frame Processing methods; //===----------------------------------------------------------------------===//; /// lowerDynamicAlloc - Generate the code for allocating an object in the; /// current frame. The sequence of code will be in the general form; ///; /// addi R0, SP, \#frameSize ; get the address of the previous frame; /// stwxu R0, SP, Rnegsize ; add and update the SP with the negated size; /// addi Rnew, SP, \#maxCalFrameSize ; get the top of the allocation; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp:455,update,update,455,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp,1,['update'],['update']
Deployability,//===----------------------------------------------------------------------===//; // Top-Down Scheduling; //===----------------------------------------------------------------------===//; /// ReleaseSucc - Decrement the NumPredsLeft count of a successor. Add it to; /// the PendingQueue if the count reaches zero.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:192,Release,ReleaseSucc,192,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,1,['Release'],['ReleaseSucc']
Deployability,//===----------------------------------------------------------------------===//; // Top-Down Scheduling; //===----------------------------------------------------------------------===//; /// releaseSucc - Decrement the NumPredsLeft count of a successor. Add it to; /// the PendingQueue if the count reaches zero. Also update its cycle bound.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:192,release,releaseSucc,192,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,2,"['release', 'update']","['releaseSucc', 'update']"
Deployability,"//===----------------------------------------------------------------------===//; // Value Class; //===----------------------------------------------------------------------===//; /// LLVM Value Representation; ///; /// This is a very important LLVM class. It is the base class of all values; /// computed by a program that may be used as operands to other values. Value is; /// the super class of other important classes such as Instruction and Function.; /// All Values have a Type. Type is not a subclass of Value. Some values can; /// have a name and they belong to some Module. Setting the name on the Value; /// automatically updates the module's symbol table.; ///; /// Every value has a ""use list"" that keeps track of which other Values are; /// using this Value. A Value can also have an arbitrary number of ValueHandle; /// objects that watch it and listen to RAUW and Destroy events. See; /// llvm/IR/ValueHandle.h for details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Value.h:632,update,updates,632,interpreter/llvm-project/llvm/include/llvm/IR/Value.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Value.h,1,['update'],['updates']
Deployability,//===----------------------------------------------------------------------===//; // VirtRegRewriter; //===----------------------------------------------------------------------===//; //; // The VirtRegRewriter is the last of the register allocator passes.; // It rewrites virtual registers to physical registers as specified in the; // VirtRegMap analysis. It also updates live-in information on basic blocks; // according to LiveIntervals.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp:366,update,updates,366,interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp,1,['update'],['updates']
Deployability,"//===----------------------------------------------------------------------===//; // handleOperandChange implementations; /// Update this constant array to change uses of; /// 'From' to be uses of 'To'. This must update the uniquing data structures; /// etc.; ///; /// Note that we intentionally replace all uses of From with To here. Consider; /// a large array that uses 'From' 1000 times. By handling this case all here,; /// ConstantArray::handleOperandChange is only invoked once, and that; /// single invocation handles all 1000 uses. Handling them one at a time would; /// work, but would be really slow because it would have to unique each updated; /// array instance.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Constants.cpp:126,Update,Update,126,interpreter/llvm-project/llvm/lib/IR/Constants.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Constants.cpp,3,"['Update', 'update']","['Update', 'update', 'updated']"
Deployability,//===----------------------------------------------------------------------===//; /// An itinerary represents the scheduling information for an instruction.; /// This includes a set of stages occupied by the instruction and the pipeline; /// cycle in which operands are read and written.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h:228,pipeline,pipeline,228,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,1,['pipeline'],['pipeline']
Deployability,"//===----------------------------------------------------------------------===//; /// These values represent a non-pipelined step in; /// the execution of an instruction. Cycles represents the number of; /// discrete time slots needed to complete the stage. Units represent; /// the choice of functional units that can be used to complete the; /// stage. Eg. IntUnit1, IntUnit2. NextCycles indicates how many; /// cycles should elapse from the start of this stage to the start of; /// the next stage in the itinerary. A value of -1 indicates that the; /// next stage should start immediately after the current one.; /// For example:; ///; /// { 1, x, -1 }; /// indicates that the stage occupies FU x for 1 cycle and that; /// the next stage starts immediately after this one.; ///; /// { 2, x|y, 1 }; /// indicates that the stage occupies either FU x or FU y for 2; /// consecutive cycles and that the next stage starts one cycle; /// after this stage starts. That is, the stage requirements; /// overlap in time.; ///; /// { 1, x, 0 }; /// indicates that the stage occupies FU x for 1 cycle and that; /// the next stage starts in this same cycle. This can be used to; /// indicate that the instruction requires multiple stages at the; /// same time.; ///; /// FU reservation can be of two different kinds:; /// - FUs which instruction actually requires; /// - FUs which instruction just reserves. Reserved unit is not available for; /// execution of other instruction. However, several instructions can reserve; /// the same unit several times.; /// Such two types of units reservation is used to model instruction domain; /// change stalls, FUs using the same resource (e.g. same register file), etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h:115,pipeline,pipelined,115,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,1,['pipeline'],['pipelined']
Deployability,"//===----------------------------------------------------------------------===//; //; // BreakCriticalEdges - Break all of the critical edges in the CFG by inserting; // a dummy basic block. This pass may be ""required"" by passes that cannot deal; // with critical edges. For this usage, a pass must call:; //; // AU.addRequiredID(BreakCriticalEdgesID);; //; // This pass obviously invalidates the CFG, but can update forward dominator; // (set, immediate dominators, tree, and frontier) information.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils.h:410,update,update,410,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils.h,1,['update'],['update']
Deployability,"//===----------------------------------------------------------------------===//; //; // LoopSimplify - Insert Pre-header blocks into the CFG for every function in; // the module. This pass updates dominator information, loop information, and; // does not add critical edges to the CFG.; //; // AU.addRequiredID(LoopSimplifyID);; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils.h:190,update,updates,190,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils.h,1,['update'],['updates']
Deployability,//===----------------------------------------------------------------------===//; //; // Pass Manager integration code; //; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp:102,integrat,integration,102,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,1,['integrat'],['integration']
Deployability,//===----------------------------------------------------------------------===//; //; // Routines to update the CFG and SSA information before removing dead code.; //; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp:101,update,update,101,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,1,['update'],['update']
Deployability,//===---------------------------------------------------------------------===//; /// GlobalISel Configuration; //===---------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:96,Configurat,Configuration,96,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,1,['Configurat'],['Configuration']
Deployability,//===---------------------------------------------------------------------===//; /// Post RegAlloc Pass Configuration; //===---------------------------------------------------------------------===//; /// Add passes that optimize machine instructions after register allocation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:104,Configurat,Configuration,104,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,2,['Configurat'],['Configuration']
Deployability,//===---------------------------------------------------------------------===//; /// Register Allocation Pass Configuration; //===---------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:110,Configurat,Configuration,110,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,1,['Configurat'],['Configuration']
Deployability,//===---------------------------------------------------------------------===//; /// Register Allocation Pass Configuration; //===---------------------------------------------------------------------===//; /// Instantiate the default register allocator pass for this target for either; /// the optimized or unoptimized allocation path. This will be added to the pass; /// manager by addFastRegAlloc in the unoptimized case or addOptimizedRegAlloc; /// in the optimized case.; ///; /// A target that uses the standard regalloc pass order for fast or optimized; /// allocation may still override this for per-target regalloc; /// selection. But -regalloc=... always takes precedence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:110,Configurat,Configuration,110,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,1,['Configurat'],['Configuration']
Deployability,"//===--------------------------------------------------------------------===//; // API to update (Post)DominatorTree information based on modifications to; // the CFG...; /// Inform the dominator tree about a sequence of CFG edge insertions and; /// deletions and perform a batch update on the tree.; ///; /// This function should be used when there were multiple CFG updates after; /// the last dominator tree update. It takes care of performing the updates; /// in sync with the CFG and optimizes away the redundant operations that; /// cancel each other.; /// The functions expects the sequence of updates to be balanced. Eg.:; /// - {{Insert, A, B}, {Delete, A, B}, {Insert, A, B}} is fine, because; /// logically it results in a single insertions.; /// - {{Insert, A, B}, {Insert, A, B}} is invalid, because it doesn't make; /// sense to insert the same edge twice.; ///; /// What's more, the functions assumes that it's safe to ask every node in the; /// CFG about its children and inverse children. This implies that deletions; /// of CFG edges must not delete the CFG nodes before calling this function.; ///; /// The applyUpdates function can reorder the updates and remove redundant; /// ones internally (as long as it is done in a deterministic fashion). The; /// batch updater is also able to detect sequences of zero and exactly one; /// update -- it's optimized to do less work in these cases.; ///; /// Note that for postdominators it automatically takes care of applying; /// updates on reverse edges internally (so there's no need to swap the; /// From and To pointers when constructing DominatorTree::UpdateType).; /// The type of updates is the same for DomTreeBase<T> and PostDomTreeBase<T>; /// with the same template parameter T.; ///; /// \param Updates An ordered sequence of updates to perform. The current CFG; /// and the reverse of these updates provides the pre-view of the CFG.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:90,update,update,90,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,15,"['Update', 'update']","['UpdateType', 'Updates', 'update', 'updater', 'updates']"
Deployability,//===--------------------------------------------------------------------===//; // API to update live variable information; /// Recompute liveness from scratch for a virtual register \p Reg that is; /// known to have a single def that dominates all uses. This can be useful; /// after removing some uses of \p Reg. It is not necessary for the whole; /// machine function to be in SSA form.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h:90,update,update,90,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,1,['update'],['update']
Deployability,"//===--------------------------------------------------------------------===//; // APIs for updating loop information after changing the CFG; //; /// This method is used by other analyses to update loop information.; /// NewBB is set to be a new member of the current loop.; /// Because of this, it is added as a member of all parent loops, and is added; /// to the specified LoopInfo object as being in the current basic block. It; /// is not valid to replace the loop header with this method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h:191,update,update,191,interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h,1,['update'],['update']
Deployability,//===--------------------------------------------------------------------===//; // Builder configuration methods; //===--------------------------------------------------------------------===//; /// Clear the insertion point: created instructions will not be; /// inserted into a block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h:91,configurat,configuration,91,interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h,1,['configurat'],['configuration']
Deployability,"//===--------------------------------------------------------------------===//; // Configuration Interface; //===--------------------------------------------------------------------===//; /// If possible, pre-allocate \p ExtraSize bytes for stream data.; /// i.e. it extends internal buffers to keep additional ExtraSize bytes.; /// So that the stream could keep at least tell() + ExtraSize bytes; /// without re-allocations. reserveExtraSpace() does not change; /// the size/data of the stream.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:83,Configurat,Configuration,83,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,1,['Configurat'],['Configuration']
Deployability,//===--------------------------------------------------------------------===//; // Constant configuration values for this lexer.; // Start of the buffer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h:92,configurat,configuration,92,interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,1,['configurat'],['configuration']
Deployability,"//===--------------------------------------------------------------------===//; // Preprocessor callback methods. These are invoked by a lexer as various; // directives and events are found.; /// Given a tok::raw_identifier token, look up the; /// identifier information for the token and install it into the token,; /// updating the token kind accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h:289,install,install,289,interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,1,['install'],['install']
Deployability,//===--------------------------------------------------------------------===//; // Register Info; //===--------------------------------------------------------------------===//; /// Returns true if the updated CSR list was initialized and false otherwise.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h:202,update,updated,202,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,1,['update'],['updated']
Deployability,//===--------------------------------------------------------------------===//; // TargetLowering Configuration Methods - These methods should be invoked by; // the derived class constructor to configure this object for the target.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:98,Configurat,Configuration,98,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['Configurat'],['Configuration']
Deployability,"//===--------------------------------------------------------------------===//; /// Definitions of all of the base types for the Type system. Based on this; /// value, you can cast to a class defined in DerivedTypes.h.; /// Note: If you add an element to this, you need to add an element to the; /// Type::getPrimitiveType function, or else things will break!; /// Also update LLVMTypeKind and LLVMGetTypeKind () in the C binding.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Type.h:370,update,update,370,interpreter/llvm-project/llvm/include/llvm/IR/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Type.h,1,['update'],['update']
Deployability,"//===-Config.h - LLVM Link Time Optimizer Configuration ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the lto::Config data structure, which allows clients to; // configure LTO.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h:42,Configurat,Configuration,42,interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,1,['Configurat'],['Configuration']
