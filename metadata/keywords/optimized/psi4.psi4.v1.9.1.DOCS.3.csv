quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Energy Efficiency,"energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:483094,energy,energy,483094,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:526283,energy,energy,526283,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ensity_tolerance|, and; |scf__cosx_basis_tolerance| keywords, respectively. |scf__cosx_ints_tolerance|; is the most consequential of the three thresholds in both cost and accuracy.; This keyword determines screening of negligible one-electron integrals.; |scf__cosx_density_tolerance| controls the threshold for significant; shell pairs in the density matrix. Lastly, |scf__cosx_basis_tolerance| is; a cutoff for the value of basis functions at grid points. This keyword is; used to determine the radial extent of the each basis shell, and it is the; COSX analogue to |scf__dft_basis_tolerance|. The |scf__incfock| keyword (defaults to ``false``) increases performance; by constructing the Fock matrix from differences in the density matrix, which; are more amenable to screening. This option is disabled by default because of; potential SCF convergence issues, particularly when using diffuse basis functions.; The |scf__cosx_overlap_fitting| keyword (defaults to ``true``) reduces numerical; integration errors using the method described in [Izsak:2011:144105]_ and is; always recommended. .. _`sec:scflink`:. Linear Exchange; ~~~~~~~~~~~~~~~. Large SCF calculations can benefit from specialized screening procedures that further reduce the scaling of the ERI contribution to the Fock matrix.; LinK, the linear-scaling exchange method described in [Ochsenfeld:1998:1663]_, is available in Psi4 in conjunction with composite algorithms that build J (|globals__scf_type| set to ``J_alg+LINK``).; LinK achieves linear-scaling by exploiting shell pair sparsity in the density matrix and overlap sparsity between shell pairs. Specifically, LinK exploits the fact that the Exchange term; requires only a linear-scaling number of significant elements through reformulating the; shell quartet screening process to scale linearly with system size.; LinK is most competitive when used with non-diffuse orbital basis sets, since orbital and density overlaps decay slower with diffuse functions.; LinK is especi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:41434,reduce,reduces,41434,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['reduce'],['reduces']
Energy Efficiency,ent [E_h]; for the full MP4 level of theory. Quantity :psivar:`MP4 CORRELATION; ENERGY` / :psivar:`MP4(SDTQ) CORRELATION ENERGY`; is left-hand term in Eq. :eq:`MP4terms`. .. math:: E_{\text{MP4}} = E_{\text{MP4(SDQ)}} + E_{\text{MP4(T)}}; :label: MP4terms. .. psivar:: MPn TOTAL ENERGY; MPn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled |MollerPlesset| perturbation theory level.; *n* is MP perturbation order. .. psivar:: MP2 DOUBLES ENERGY; MP2.5 DOUBLES ENERGY; MP3 DOUBLES ENERGY; CEPA(0) DOUBLES ENERGY; CEPA(1) DOUBLES ENERGY; CEPA(2) DOUBLES ENERGY; CEPA(3) DOUBLES ENERGY; ACPF DOUBLES ENERGY; AQCC DOUBLES ENERGY; CISD DOUBLES ENERGY; QCISD DOUBLES ENERGY; REMP2 DOUBLES ENERGY; LCCD DOUBLES ENERGY; CCD DOUBLES ENERGY; LCCSD DOUBLES ENERGY; CCSD DOUBLES ENERGY; OMP2 DOUBLES ENERGY; OMP2.5 DOUBLES ENERGY; OMP3 DOUBLES ENERGY; OREMP2 DOUBLES ENERGY; OLCCD DOUBLES ENERGY. The doubles portion [E_h] of the named correlation energy; including same-spin and opposite-spin correlations. .. psivar:: MP2 SINGLES ENERGY; MP2.5 SINGLES ENERGY; MP3 SINGLES ENERGY; CEPA(0) SINGLES ENERGY; CEPA(1) SINGLES ENERGY; CEPA(2) SINGLES ENERGY; CEPA(3) SINGLES ENERGY; ACPF SINGLES ENERGY; AQCC SINGLES ENERGY; CISD SINGLES ENERGY; QCISD SINGLES ENERGY; REMP2 SINGLES ENERGY; LCCD SINGLES ENERGY; CCD SINGLES ENERGY; LCCSD SINGLES ENERGY; CCSD SINGLES ENERGY; OREMP2 SINGLES ENERGY; OLCCD SINGLES ENERGY. The singles portion [E_h] of the named correlation energy.; Zero except in ROHF. .. psivar:: MP2 SAME-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; CEPA(0) SAME-SPIN CORRELATION ENERGY; CEPA(1) SAME-SPIN CORRELATION ENERGY; CEPA(2) SAME-SPIN CORRELATION ENERGY; CEPA(3) SAME-SPIN CORRELATION ENERGY; CISD SAME-SPIN CORRELATION ENERGY; QCISD SAME-SPIN CORRELATION ENERGY; ACPF SAME-SPIN CORRELATION ENERGY; AQCC SAME-SPIN CORRELATION ENERGY; REMP2 SAME-SPIN CORRELATION ENERGY; LCCD SAME-SP,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:42115,energy,energy,42115,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"ent array, (3 * {nat}, 3). .. psivar:: SCF TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the SCF stage, (3 * {nat}, 3 * {nat}). .. psivar:: SCF STABILITY EIGENVALUES. Array of eigenvalues from UHF or ROHF stability analysis. .. psivar:: SCS-CCSD TOTAL ENERGY; SCS-CCSD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the CCSD-like method formed by reweighting :psivar:`CCSD DOUBLES ENERGY`; by 1.27 opposite-spin and 1.13 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP2-VDW TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.28 opposite-spin and 0.50 same-spin contributions, with; any singles carried along. DOI: 10.1080/00268970802641242. .. psivar:: SCS(N)-MP2 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 0 opposite-spin and 1.76 same-spin contributions, with; any singles carried along. doi: 10.1021/ct6002737. .. psivar:: SCS(N)-OMP2 CORRELATION ENERGY; SCS(N)-OMP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY. Two spellings of a discontinued QCVariable that may still appear; because the code is frozen pending an update. .. psivar:: SCS-OMP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:59780,energy,energy,59780,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"ent for each pair; of occupied orbitals. For a given occupied orbital pair ``ij``, all virtuals are; orthogonal and canonical, but virtuals belonging to different pair domains; may not be orthogonal. The following expression is used to evaluate the energy of a given set of amplitudes:. .. math::; :label: Energy. E^{(2)} &= \sum_{i,j} e_{ij}, \\; e_{ij} &= \sum_{a, b}((ia|jb) + R_{ij}^{ab})(2t_{ij}^{ab} - t_{ij}^{ba}). The error in :math:`E^{(2)}` scales quadratically with the error in the amplitudes. No local approximations have been made so far, and this iterative approach can; be used to exactly determine :math:`E^{(2)}` with :math:`{\cal O}(N^5)` cost.; In DLPNO-MP2, the first local approximation is to screen distant, non-interacting; orbital pairs ``ij``. Orbital pairs are screened if below both an overlap criteria:. .. math::; :label: Differential Overlap Integral. DOI_{ij} \equiv \sqrt{\int d\mathbf{r} | \chi_{i}(\mathbf{r}) | ^{2} | \chi_{j}(\mathbf{r}) | ^{2}}, . and a pair energy estimate: . .. math::; :label: Dipole Approximation. e_{ij}^{approx} = -\frac{4}{R^{6}} \sum_{a_{i} \in [i],b_{j} \in [j]} \frac{ (2 \langle i | \mathbf{r} | a_{i} \rangle \langle j | \mathbf{r} | b_{j} \rangle)^{2}}{\epsilon_{a_{i}} + \epsilon_{b_{j}} - f_{ii} - f_{jj}},. in which small domains of virtual orbitals are used for each local MO. As a; result, an asymptotically linear number of ``ij`` pairs enter the local MP2; equations, and the approximate pair energy of neglected pairs is added to; the final energy. The second major local approximation in DLPNO-MP2 is the truncation of the virtual; space. Initially, exchange integrals are calculated in the LMO/PAO basis using the; standard density fitting approach:. .. math::; :label: Exchange. (ia|jb) = \sum_{K,L \in [ij]} (ia|K)[\mathbf{J}^{-1}]_{KL}(L|jb). This is done with linear scaling effort by exploiting the locality of the LMOs, PAOs,; and auxiliary basis functions.; Solving the iterative local MP2 equations in the LMO/PAO ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:6240,energy,energy,6240,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,1,['energy'],['energy']
Energy Efficiency,"ent parameters, the; idempotent part of :math:`\boldsymbol{\gamma_1}` (:math:`\boldsymbol{\kappa}`) and the density cumulant; (:math:`\boldsymbol{\lambda_2}`). As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of :math:`\boldsymbol{\gamma_1}` is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; :math:`\boldsymbol{\gamma_2}`. In order to obtain the DCT energy, two conditions must be satisfied:. 1) The energy must be stationary with respect to a set of orbitals. This can be done by; diagonalizing the generalized Fock operator (as in the DC-06 and DC-12 methods, see below),; which introduces partial orbital relaxation, or by fully relaxing the orbitals and minimizing the entire energy expression; (as in the ODC-06 and ODC-12 methods). 2) The energy must be stationary with respect to the variation of the density; cumulant :math:`\boldsymbol{\lambda_2}`, constrained to N-representability conditions. Making the energy stationary requires solution of two sets of coupled; equations for orbitals and density cumulant, respectively (also known as; residual equations). At the present moment, three different algorithms for the; solution of the system of coupled equations are available (see; :ref:`Iterative Algorithms <sec:dctalgorithms>` for details). . Publications resulting from the use of the DCT code should cite contributions; listed :ref:`here <intro:dctcitations>`. .. _`sec:dctmethods`:. Methods; ~~~~~~~. Currently five DCT methods (functionals) are available: DC-06, DC-12, ODC-06, ODC-12, and ODC-13. The first four ; methods use approximate N-representability conditions derived from",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:5218,energy,energy,5218,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"ent(...) # used by optimize(); H = hessian(...) # used by frequency(). For more elaborate post-processing of computations, adding; ``return_wfn=True`` keyword argument additionally returns; :py:class:`~psi4.core.Wavefunction`. ::. # power user returns; E, wfn = energy(..., return_wfn=True); E, wfn = optimize(..., return_wfn=True); E, wfn = frequency(..., return_wfn=True); G, wfn = gradient(..., return_wfn=True) # used by optimize(); H, wfn = hessian(..., return_wfn=True) # used by frequency(). # print gradient array and its rms; wfn.gradient.print_out(); print wfn.gradient().rms(). # format output for other programs; molden(wfn, 'mycalc.molden'). # access array in another format; np.array(wfn.hessian()). .. _`sec:loops`:. Loops; =====. Python provides many control structures, any of which can be used within |PSIfour|; input files. For example, to loop over three basis sets, the following code can; be used:. .. code-block:: none. basis_sets = [""cc-pVDZ"", ""cc-pVTZ"", ""cc-pVQZ""]; for basis_set in basis_sets:; set basis = $basis_set; energy('scf'). The declaration of ``basis_sets`` is completely standard Python, as is the next; line, which iterates over the list. However, because the Psithon preprocessor; wraps strings in quotes by default, we have to tell it that ``basis_set`` is a; Python variable, not a string, by prefixing it with a dollar sign. . The geometry specification supports delayed initialization of variable,; which permits potential energy scans. As an example, we can scan both the; angle and bond length in water::. molecule h2o{; O; H 1 R; H 1 R 2 A; }; ; Rvals = [0.9, 1.0, 1.1]; Avals = range(102, 106, 2); ; set basis cc-pvdz; set scf e_convergence=11; for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; energy('scf'). The declarations of ``Rvals`` and ``Avals`` are both completely standard Python syntax.; Having named our molecule ``h2o`` we can then set the values of ``R`` and ``A`` within; the loops. Note that we do not need the dollar sign to access",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:12610,energy,energy,12610,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"ent, and all corrections are; interfaced exactly alike.; The -D3 interface can use classic or simple-dftd3 programs interchangeably and will prefer the latter.; Starting in v1.9, the classic program is no longer supported or tested, though it isn't deliberately disabled. Despite different defaults in these programs when run independently,; when run through |PSIfour| as EmpiricalDispersion engine, each should; produce the same result. Moreover, |PSIfours| own defaults and aliases; are unchanged by the new engines, so ``-D`` continues to mean ``-D2``,; ``-D3`` continues to mean zero-damping *without* 3-body correction,; and input files should continue producing the same results. Please file; an issue if found otherwise. Dispersion corrections are built into DFT functionals, so appending an *a; posteriori* correction to a computation is as simple as; ``energy('b2plyp-d')`` *vs.* ``energy('b2plyp')``. For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, a B3LYP-D3 (zero-damping), and a B3LYP-D4 (Becke-Johnson damping) energy. ::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'); energy('b3lyp-d4'). Consult the table :ref:`-D Functionals <table:dft_disp>` to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable :psivar:`DISPERSION CORRECTION ENERGY`.; By default, the output from the ``dftd3``; program is suppressed; to see it in the output file, set print > 2.; No text output is available from the ``dftd4`` or ``s-dftd3`` programs. .. _`table:dashd`:. .. table:: Variants of dispersion corrections. +-------------------------------------+--------------------------------------------------------------------------------------+---------------------------------+------------------------------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:13281,energy,energy,13281,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"ents are found as the generalized eigenvectors of the Fock Matrix,. .. math:: F^\alpha C^\alpha = S C^\alpha \epsilon^\alpha. The eigenvalues :math:`\epsilon` are the orbital energies, and the metric matrix; :math:`S` is the AO-basis overlap matrix. .. math:: S_{\mu\nu} = (\mu | \nu ). Note that the Fock Matrix depends on the density (both alpha and beta), and; therefore the orbitals. Because of this, SCF is a nonlinear procedure, which; terminates when the generating orbitals are self-consistent with the Fock matrix; they generate. The formation of the Coulomb matrix :math:`J` and the exchange matrix; :math:`K^{\alpha}` dominate the computational effort of the SCF procedure. For; very large systems, diagonalization of the Fock matrix can also present a; significant hurdle. .. _`sec:scfinput`:. Minimal Input; ~~~~~~~~~~~~~. Minimal input for a Hartree--Fock computation is a molecule block, basis set; option, and a call to ``energy('scf')``::. molecule {; He; }. set basis sto-3g. energy('scf'). This will run a Restricted Hartree--Fock (RHF) on neutral singlet Helium in; :math:`D_{2h}` spatial symmetry with a minimal ``STO-3G`` basis, 1.0E-6; energy and density convergence criteria (since single-point, see; :ref:`SCF Convergence & Algorithm <table:conv_scf>`), a DF ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more; information on any of these options, see the relevant section below. .. _`sec:scfsymm`:. Spin/Symmetry Treatment; ~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| implements the most popular spin specializations of Hartree--Fock; theory, including:. Restricted Hartree--Fock (RHF) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Hartree--Fock (UHF); Appropriate for most open-shell systems and fairly easy to converge.; The spatial parts of the alpha and beta orbitals are fully independent of each; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:8983,energy,energy,8983,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"equested. Quantity :math:`E_{\text{-D}}`; in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; When dispersion parameters are untweaked for a functional and dispersion; level, labeled QCVariable also defined. .. psivar:: DOUBLE-HYBRID CORRECTION ENERGY. The scaled MP2 correlation energy correction [E_h] appended to an; underlying functional when a DH-DFT method is requested.; Quantity :math:`E_{\text{DH}}` in Eq. :eq:`DFTterms`. .. psivar:: DMA DISTRIBUTED MULTIPOLES. Distributed multipoles in units given by |gdma__gdma_multipole_units|; with the row index corresponding to the site and the column index; referencing the multipole component. Both indices are zero based,; and the Qlm components of the multipoles are ordered as Q00, Q10,; Q11c, Q11s, Q20, Q21c, Q21s, Q22c, Q22s, etc. .. psivar:: DMA TOTAL MULTIPOLES. Distributed multipoles as a single row, whose columns are the total; multipoles, translated to |gdma__gdma_origin|, and summed. .. psivar:: DMRG-SCF TOTAL ENERGY. The total DMRG total electonic energy [E_h]. Not unique because oribital spaces vary. .. psivar:: DMRG-CASPT2 TOTAL ENERGY. The total DMRG plus CASPT2 total electonic energy [E_h] . Not unique because orbital spaces vary. .. psivar:: EFP DISP ENERGY; EFP ELST ENERGY; EFP EXCH ENERGY; EFP IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for EFP/EFP; computations. The sum of these four components yields; :psivar:`EFP TOTAL ENERGY`. .. psivar:: EFP TOTAL ENERGY. The total electronic interaction energy [E_h] for EFP/EFP computations. .. psivar:: EFP TORQUE. The torque, not gradient for EFP/EFP computations. .. psivar:: ENTHALPY. Total enthalpy H [E_h] at given temperature. .. psivar:: ENTHALPY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the enthalpy at given temperature. .. psivar:: ESP AT CENTER n. Property of electrostatic potential [E_h / e] at location, usually ato",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:33951,energy,energy,33951,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"er two papers: [Parrish:2014:044115]_ on our much-earlier; ""atomic"" SAPT (A-SAPT) and [Parrish:2014:4417]_ on the finished ""functional; group"" SAPT (F-SAPT). An additional paper describes how to use F-SAPT to analyze; differences under functional group substitutions [Parrish:2014:17386]_. I-SAPT; is explained in [Parrish:2015:051103]_. There is also a reasonably-detailed; review of the aims of A/F/I-SAPT and the existing state-of-the-art in the field; in the introduction chapter on partitioned SAPT methods in `Parrish's thesis; <https://smartech.gatech.edu/handle/1853/53850>`_. .. A video tutorial series for the use of the FISAPT module is available `here; .. <https://www.youtube.com/playlist?list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Specific videos in the series include:; ..; .. - `F-SAPT#1; .. <https://www.youtube.com/watch?v=J22J0wh4mVo&index=1&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Describes the use of F-SAPT to analyze the; .. distribution of the intermolecular interaction energy components between the; .. various hydroxyl and phenyl moieties of the phenol dimer.; .. - `F-SAPT#2; .. <https://www.youtube.com/watch?v=fqlzXsayec0&index=2&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Discusses how to plot the order-1 F-SAPT analysis with PyMol and perform a; .. ""difference F-SAPT"" analysis; .. - `I-SAPT#1; .. <https://www.youtube.com/watch?v=fD6mu_tTG_c&index=3&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Describes the use of I-SAPT to analyze the interaction between the two phenol; .. groups in a 2,4-pentanediol molecule.; .. - `I-SAPT#2; .. <https://www.youtube.com/watch?v=hDbonAOD5dY&index=4&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Discusses how to plot the density fields and ESPs of the various moieties of; .. the I-SAPT embedding scheme with PyMol; .. - `F/I-SAPT Options; .. <https://www.youtube.com/watch?v=KFkPKSUZVfI&index=5&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Details all of the more-advanced options in the F/I-SAPT cod",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:3355,energy,energy,3355,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:11027,energy,energy,11027,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:16285,energy,energy,16285,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:20107,energy,energy,20107,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:41613,energy,energy,41613,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:42984,energy,energy,42984,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:46729,energy,energy,46729,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:47111,energy,energy,47111,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:48482,energy,energy,48482,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172969,energy,energy,172969,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'refere",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:226703,energy,energy,226703,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:277864,energy,energy,277864,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"er:2014:094106]_). .. math:: E_{sSAPT0} = E_{elst}^{(10)} + E_{exch}^{(10)} + E_{ind,resp}^{(20)} +; p_{EX}(3.0) E_{exch-ind,resp}^{(20)} + E_{disp}^{(20)} + p_{EX}(3.0) E_{exch-disp}^{(20)} ; + \delta_{HF}^{(2)}; :label: sSAPT0. where :math:`\delta_{HF}^{(2)}` is computed *without* any scaling. Please note that ; sSAPT0 is thus not the same as requesting ``exch_scale_alpha 3.0``, and that the; scaling is automatically performed by requesting ``energy('ssapt0')``. A First Example; ^^^^^^^^^^^^^^^. The following is the simplest possible input that will perform all; available SAPT computations (normally, you would pick one of these methods,; not all of them). ::. 	molecule water_dimer {; 	 0 1; 	 O -1.551007 -0.114520 0.000000; 	 H -1.934259 0.762503 0.000000; 	 H -0.599677 0.040712 0.000000; 	 --; 	 0 1; 	 O 1.350625 0.111469 0.000000; 	 H 1.680398 -0.373741 -0.758561; 	 H 1.680398 -0.373741 0.758561; 	; 	 units angstrom; 	 no_reorient; 	 symmetry c1; 	}; 	; 	set basis aug-cc-pvdz; 	; 	energy('sapt0'); 	energy('sapt2'); 	energy('sapt2+'); 	energy('sapt2+(3)'); 	energy('sapt2+3'). The SAPT module uses the standard |PSIfour| partitioning of the dimer; into monomers. SAPT does not use spatial symmetry and needs the geometry; of the system to remain fixed throughout monomer and dimer calculations.; These requirements are imposed whenever a SAPT calculation is requested; but can also be set explicitly with the ``no_reorient`` and ``symmetry; c1`` molecule keywords, as in the example above. As a reminder, only; SAPT0 can handle the interaction of both closed- and open-shell monomers.; Higher-order SAPT and SAPT(DFT) are currently available only ; for computation of interactions between; closed-shell singlets. The SAPT codes in |PSIfour| have been written; to utilize density fitting, which is much faster than using conventional; 4-index electron repulsion integrals. This happens automatically and; does not require any additional keywords to be specified (both the ; SAPT comp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:14294,energy,energy,14294,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,5,['energy'],['energy']
Energy Efficiency,"eraged coupled-pair functional level of theory, (3,). .. psivar:: ACPF QUADRUPOLE. Redundant quadrupole array [e a0^2] for the averaged coupled-pair functional level of theory, (3, 3). .. psivar:: ACPF TOTAL ENERGY; ACPF CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the averaged coupled-pair functional level of theory. .. psivar:: ADC ROOT 0 -> ROOT n EXCITATION ENERGY; TD-fctl ROOT 0 -> ROOT n EXCITATION ENERGY. The excitation energy [E_h] from ground state to root *n*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (IN h) -> ROOT n (IN i) EXCITATION ENERGY; TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) EXCITATION ENERGY. The excitation energy [E_h] from the ground state (which is of irrep *h*); to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (h) -> ROOT n (i) EXCITATION ENERGY; TD-fctl ROOT 0 (h) -> ROOT n (i) EXCITATION ENERGY. The excitation energy [E_h] from the ground state (which is of irrep *h*); to root *n* (which is of irrep *i*).; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 -> ROOT n EXCITATION ENERGY - h TRANSITION; TD-fctl ROOT 0 -> ROOT n EXCITATION ENERGY - h TRANSITION. The excitation energy [E_h] from the ground state to root *n*, and the; transition is of irrep *h*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (LEN); TD-fctl ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (LEN). The electric transition dipole moment [e a0] in length gauge, for the transition; from the ground state to root *n*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (IN h) -> ROOT n (IN i) ELECTRIC TRANSITION DIPOLE MOMENT (LEN); TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) ELECTRIC TRANSITION DIPOLE MOMENT (LEN). The electric transition dipole moment [e a0] in length gauge, for the transition; from the ground state, which is of irrep *h*, to root *n* within irrep *i*.; DFT functional labe",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:3116,energy,energy,3116,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"eral Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:prog_tour`:. ==========================================================; General layout of the core: where new C++ code should live; ==========================================================. New integral operators; ----------------------. Most of the heavy lifting in |PSIfour| is handled by libmints, which can be; found in the :source:`psi4/src/psi4/libmints` directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; :source:`psi4/src/psi4/libmints/wavefunction.h` is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods; ----------------------. A new method that is not a modification of existing code belongs in its own; folder in :source:`psi4/src/psi4`; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to :source:`psi4/src/psi4/CMakeLists.txt`. There are also a number of; variables that can be exported to be available to the user, as detailed in; :ref:`sec:psiVariables`. To set these variables, the following member of; Wavefunction should be called::. set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; :source:`doc/sphinxman/source/glossary_psivariables.rst`. There are a; number of different helpers to export various quantities from the wavefunction; to exter",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_tour.rst:1661,energy,energy,1661,doc/sphinxman/source/prog_tour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_tour.rst,1,['energy'],['energy']
Energy Efficiency,"ere overestimation; of the spin contamination of the true electrons. These are set in the |scf__reference| option. Note that there are not equivalents to ROHF or CUHF, *e.g.*, no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in [Szabo:1982]_ on methyl radical for an example. Functional Selection; ~~~~~~~~~~~~~~~~~~~~. |PSIfour| features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call::. energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; |scf__reference| option before the call to ``energy``::. set reference uks; energy('b3lyp'). The functional may also be manually specified by calling ``energy`` (or any driver function); with a ``dft_functional`` argument::. energy('scf', dft_functional = 'b3lyp'). Another alternative is providing a specially crafted `dict`-ionary to the ``dft_functional``; argument::. custom_functional = { ""name"": ""my_unique_name"", ... }; energy('scf', dft_functional = custom_functional). For further details about this so called `dict_func` syntax, see; :ref:`sec:dftdictbuilder`. For hybrid functionals, the fraction of exact exchange is controlled by the; |scf__dft_alpha| option. For the LRC functionals, the fraction of long-range; Hartree--Fock and short-range DFA is controlled by the |scf__dft_omega| option.; Changing these will override the default behavior of the requested functional. A brief summary of some of the more notable functionals in |PSIfour|, and links; to the complete listing of all functionals of each class are presented below:. :ref:`All Functionals <table",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:16918,energy,energy,16918,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"erence': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332099,energy,energy,332099,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"erence': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'modu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:137675,energy,energy,137675,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"erence': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:139094,energy,energy,139094,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"erence': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:161382,energy,energy,161382,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"erged orbital which should be occupied in the fully-optimized SCF solution; has a slightly higher orbital eigenvalue than some other orbital which should be; destined to be a virtual orbital. This results in the virtual orbital being; spuriously occupied for one or more iterations. Sometimes this resolves itself; without help, other times the occupation flips back and forth between two, four,; or more orbitals. This is typically visible in the output as a non-converging; SCF which eventually settles down to steady oscillation between two (or more); different total energies. This behavior can be ameliorated by choosing occupied; orbitals by ""shape"" instead of by orbital eigenvalue, *i.e.*, by choosing the set; of new orbitals which looks most like some previously known ""good"" set. The; ""good"" set is typically the occupied orbitals from one of the oscillating; iterations with the lowest total energy. For an oscillating system where the; lowest total energy occurs on iterations :math:`N,N+2,\ldots`, invoking; |scf__mom_start| ``N`` can often rescue the convergence of the SCF. MOM can; be used in concert with DIIS, though care should be taken to not turn MOM on; until the oscillatory behavior begins.; Damping [Off by Default]; In some cases, a static mixing of Fock Matrices from adjacent; iterations can quench oscillations. This mixing, known as; ""damping"" can be activated by setting the; |scf__damping_percentage| keyword to a nonzero percent. Damping is; turned off when the DIIS error is smaller than; |scf__damping_convergence|.; Level shifting [Off by default]; A commonly used alternative to damping is to use level shifting,; which decreases the mixing of occupied and unoccupied orbitals in; the SCF update by moving the unoccupied orbitals up in energy. It; can be shown that the SCF procedure always converges with a; suitably large level shift; however, the larger the shift is, the; slower the convergence becomes, and the calculation may end up; converging onto a high",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:26259,energy,energy,26259,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"ergy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH10(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT IND20,R ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT EXCH-IND20,U ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT DISP20 ENERGY; SAPT EXCH-DISP20 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH-DISP20(S^INF) ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. See :ref:`sec:saptinf`. .. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY. The portion of :psivar:`SAPT DISP20 ENERGY` or; :psivar:`SAPT EXCH-DISP20 ENERGY` resulting from; from same-spin or triplet doubles correlations. .. psivar:: SAPT HF(2) ENERGY ABC(HF). The total Hartree--Fock energy [E_h] of the supersystem implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(0). The Hartree--Fock energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(0). The Hartree--Fock energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(0). The Hartree--Fock energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(0). The Hartree--Fock energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(HF). The Hartree--Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(HF). The Hartree--Fock localized energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AB(HF). The Hartree--Fock localized energy [E_h] of subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:51187,energy,energy,51187,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"ergy component [E_h]; for state-averaged CI/CASSCF levels of theory. .. psivar:: CI TOTAL ENERGY; CI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested configuration interaction level of theory and root. .. psivar:: CISD DIPOLE. Dipole array [e a0] for the configuration interaction singles and doubles level of theory, (3,). .. psivar:: CISD QUADRUPOLE. Redundant quadrupole array [e a0^2] for the configuration interaction singles and doubles level of theory, (3, 3). .. psivar:: CISD TOTAL ENERGY; CISD CORRELATION ENERGY; CISDT TOTAL ENERGY; CISDT CORRELATION ENERGY; CISDTQ CORRELATION ENERGY; CISDTQ TOTAL ENERGY; CIn CORRELATION ENERGY; CIn TOTAL ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled configuration interaction level of theory and root.; *n* is CI order for *n* > 4. .. psivar:: CP-CORRECTED 2-BODY INTERACTION ENERGY. The interaction energy [E_h] considering only two-body interactions,; computed with counterpoise correction.; Related variable :psivar:`UNCP-CORRECTED 2-BODY INTERACTION ENERGY`. .. math:: E_{\text{IE}} = E_{dimer} - \sum_{monomer}^{n}{E_{monomer}^{\text{CP}}}. .. psivar:: CURRENT CORRELATION ENERGY. The correlation energy [E_h] corresponding to the :psivar:`CURRENT ENERGY` variable. .. psivar:: CURRENT ENERGY. The total electronic energy [E_h] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer. .. psivar:: CURRENT REFERENCE ENERGY. The total electronic energy [E_h] of the reference stage corresponding to; the :psivar:`CURRENT ENERGY` variable. .. psivar:: CURRENT DIPOLE. The total dipole [e a0] of the most recent stage of a calculation (frequently overwritten), (3,). .. psivar:: CURRENT GRADIENT. The total electronic gradient [E_h/a0] of the most recent stage of a; calculation (frequently overwritten). This is the quantity tracked by; the geometry optimizer, ({nat}",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:25897,energy,energy,25897,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"ergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 're",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:107217,energy,energy,107217,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:136644,energy,energy,136644,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:43799,energy,energy,43799,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-oc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:140747,energy,energy,140747,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:142765,energy,energy,142765,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:275571,energy,energy,275571,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:281941,energy,energy,281941,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:6900,energy,energy,6900,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn}}. .. psivar:: db_name DATABASE ROOT-MEAN-SQUARE DEVIATION. The rms deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contribution contribution to the reduced; density matrix energy expression. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The total electronic energy [E_h] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. :eq:`SCFterms` or :eq:`DFTterms`. Quantity",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:30154,energy,energy,30154,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:167220,energy,energy,167220,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'ro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:168727,energy,energy,168727,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:304086,energy,energy,304086,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"es of 0.01-0.10 kcal/mol in; individual terms, particularly :math:`E_{exch}^{(11)}` and :math:`E_{exch}^{(12)}`. .. caution:: January 28th 2016, the default for all NAT_ORBS options; was changed to true. Hence the code now by default uses natural; orbital truncation to speed up the evaluation of energy terms; wherever possible, according to literature recommendations.; In early July 2016, some total SAPT energy psivars were renamed. .. caution:: February 7, 2020, a missing term in :math:`E^{(30)}_{ind}` was added, causing; possible discrepancies with prior versions of the code on the order of; 0.01 kcal/mol. See https://github.com/psi4/psi4/issues/1677. .. caution:: August 2021, the number of frozen core orbitals used in the dMP2 computations; is now standardized. Specifically, we now rigorously enforce that the number of core orbitals ; frozen in dimer computations is equal to the sum of frozen orbitals of each monomer. Prior to; this, a discrepency between these values was possible when one of the monomers was (exclusively) ; a charged alkali metal. . .. _`sec:saptfitA`:. .. caution:: May 2022 c. v1.6, the default for |sapt__df_basis_elst|; changed from the value of |sapt__df_basis_sapt| (which itself; defaults to the RI of the orbital basis) to the JKFIT of the orbital; basis. This affects SAPT0 and sSAPT0 computed with the :ref:`SAPT; module<sec:sapt>` (the default code for ``energy(""sapt0"")`` that; can also compute higher-order SAPT). Electostatics, exchange,; and induction terms for SAPT0 and sSAPT0 accessed through; ``energy(""sapt0"")`` or ``energy(""ssapt0"")`` change; the dispersion; term does not change. The SAPT0 and sSAPT0 terms accessed as; subsidiary calculations of higher-order SAPT do not change; that is,; the :ref:`SAPT module<sec:sapt>` breaks the consistency of its SAPT0; results. The reasoning and reward behind this change is that the JKFIT; basis better describes the physics (see :ref:`fitting changes <sec:saptfitB>` ) and the; default SAPT0 results",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:3104,charge,charged,3104,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['charge'],['charged']
Energy Efficiency,"escription of the solvent into your calculation; can be achieved in two ways in |PSIfour|, using either the PCMSolver or ddx package.; PCMSolver is based on a boundary-element discretisation [Cances:1998:309]_,; while ddx is based on a domain decomposition approach; [Cances:2013:054111]_ making it linear scaling.; For more details about ddx see the :ref:`section on ddx <sec:ddx>`. Using PCMsolver is achieved instead by setting |globals__pcm| ``true`` in your input file.; |Psifour| understands the additional option |pcm__pcm_scf_type| with possible values ``total``; (the default) or ``separate``.; The latter forces the separate handling of nuclear and electronic electrostatic potentials and; polarization charges. It is mainly useful for debugging. For the calculation of vertical excitation energies with PCM non-equilibrium solvation should be included with: ::. pcm = {; Medium {; Nonequilibrium = True; }; }. .. note:: At present PCM can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: The PCMSolver library **cannot** exploit molecular point group symmetry. .. warning:: ROHF with PCM is known **not to work**. See `issue #999 on GitHub <https://github.com/psi4/psi4/issues/999>`_.; For the adventurous, a fix is available in `pull request #953 on GitHub <https://github.com/psi4/psi4/pull/953>`_. .. warning:: Analytic gradients and Hessians **are not** available with PCM. Finite differences will be used; regardless of the ``dertype`` passed to the ``optimize`` function.; See :srcsample:`pcmsolver/opt-fd` for a sample input. The PCM model and molecular cavity are specified in a ``pcm`` section that has; to be explicitly typed in by the user. This additional section follows a syntax; t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst:4456,energy,energy,4456,doc/sphinxman/source/pcmsolver.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst,1,['energy'],['energy']
Energy Efficiency,"esian will avoid any internal; coordinate difficulties altogether. These coordinate changes can be automatically; performed by turning |optking__dynamic_level| to 1. .. warning:: In some cases, such as the coordinate issues described above, optking will reset to maintain; a consistent history. If an error occurs in Psi4 due to |optking__geom_maxiter| being exceeded but; the final step report indicates that optking has not taken |optking__geom_maxiter| steps, such a ; reset has occured. Inspection will show that the step counter was reset to 1 somewhere in the; optimization. .. index:: ; pair: geometry optimization; convergence criteria. Convergence Criteria; ^^^^^^^^^^^^^^^^^^^^. Optking monitors five quantities to evaluate the progress of a geometry ; optimization. These are (with their keywords) the change in energy ; (|optking__max_energy_g_convergence|), the maximum element of ; the gradient (|optking__max_force_g_convergence|), the root-mean-square ; of the gradient (|optking__rms_force_g_convergence|), the maximum element; of displacement (|optking__max_disp_g_convergence|), and the ; root-mean-square of displacement (|optking__rms_disp_g_convergence|), ; all in internal coordinates and atomic units. Usually, these options will not ; be set directly. Primary control for geometry convergence lies with the keyword ; |optking__g_convergence| which sets the aforementioned in accordance ; with Table :ref:`Geometry Convergence <table:optkingconv>`. |; |. .. _`table:optkingconv`:. .. table:: Summary of sets of geometry optimization criteria available in |PSIfour|. +-----------------------------+----------------------------+----------------------------+----------------------------+----------------------------+----------------------------+; | |optking__g_convergence| | Max Energy | Max Force | RMS Force | Max Disp | RMS Disp |; +=============================+============================+============================+============================+==========================",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:20512,energy,energy,20512,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['energy'],['energy']
Energy Efficiency,"essian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:273036,energy,energy,273036,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"essing. To demonstrate, we can embellish the previous example of; H\ :sub:`2` and H atom::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; h2_energy = energy('scf'); ; molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; h_energy = energy('scf'); ; D_e = psi_hartree2kcalmol * (2*h_energy - h2_energy); print ""De=%f"" % D_e. The :py:func:`~psi4.driver.energy` function returns the final result of the; computation, the requested total energy in Hartrees, which we assign to a; Python variable. The two energies are then converted to a dissociation; energy and printed to the output file using standard Python notation. Generally, there are multiple quantities of interest. Appendix; :ref:`apdx:psivariables_module` lists PSI variables variables set by each; module, and :ref:`apdx:psivariables_alpha` defines them. These can be; accessed through the :py:func:`~psi4.core.get_variable` function. For example, after; performing a density fitted MP2 computation, both the spin component; scaled energy and the unscaled MP2 energy are made available::. e_mp2 = get_variable('MP2 TOTAL ENERGY'); e_scs_mp2 = get_variable('SCS-MP2 TOTAL ENERGY'). Each module and the Python driver set PSI variables over the course of a; calculation. The values for all can be printed in the output file with; the input file command :py:func:`~psi4.core.print_variables`. Note that PSI variables; are cleared at the start of each :py:func:`~psi4.driver.energy`, etc. in an input; file by :py:func:`~psi4.core.clean_variables()`.; So if you run in a single input file a STO-3G FCI followed by a; aug-cc-pVQZ SCF followed by a :py:func:`~psi4.core.print_variables` command, the; last will include :psivar:`SCF TOTAL ENERGY` but not; :psivar:`FCI TOTAL ENERGY`.; The entire dictionary of PSI variables can be obtained through; :py:func:`~psi4.core.get_variables`. .. _`sec:returnvals`:. Return Values; =============. Most of the usual user computation functions (*i.e.*,; :py:func:`~psi4.driver.en",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:9988,energy,energy,9988,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,2,['energy'],['energy']
Energy Efficiency,"esults, and hence they will only; be possible for very small systems (generally a dozen electrons or less). The simplest way to run high-order perturbation theory computations is to; call, *e.g.*, ``energy('mp10')`` to invoke a MP10 computation or; ``energy('zapt25')`` to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions. For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; ``energy('mp10')`` sets |detci__mpn| to TRUE.; The program uses the Wigner (2n+1) rule by default; (|detci__mpn_wigner| = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets |detci__max_num_vecs| to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. .. index:: ; pair: CI; arbitrary-order coupled-cluster theory. Arbitrary Order Coupled-Cluster Theory; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. *This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to*; :ref:`Kallay's MRCC <sec:mrcc>` *code.*. The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216]_, or of Olsen [Olsen:2000:7140]_.; Notably, the approach in DETCI also allows arbitrary-order ; *active space* coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:13824,energy,energy,13824,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,2,['energy'],['energy']
Energy Efficiency,"etains the; :math:`{\cal{O}}(o^2v^4)` complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7158,energy,energy,7158,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"ethod': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'dr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:49681,energy,energy,49681,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:138293,energy,energy,138293,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:141942,energy,energy,141942,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:157429,energy,energy,157429,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:162765,energy,energy,162765,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'meth",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:224722,energy,energy,224722,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:273228,energy,energy,273228,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:275763,energy,energy,275763,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:279598,energy,energy,279598,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:282133,energy,energy,282133,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ethod': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'modul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485641,energy,energy,485641,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"example, this pattern can be found in; old versions of the code:. .. code-block:: cpp. std::vector<std::shared_ptr<TwoBodyAOInt>> ints;; ints.push_back(std::shared_ptr<TwoBodyAOInt>(factory->eri()));; for (int thread = 1; thread < num_threads; thread++) {; ints.push_back(std::shared_ptr<TwoBodyAOInt>(factory->eri()));; }. This builds many objects and the cost can add up. With the new scheme,; integral objects are forced to implement a `clone()` member that can be used as; follows:. .. code-block:: cpp. std::vector<std::shared_ptr<TwoBodyAOInt>> ints;; ints.push_back(std::shared_ptr<TwoBodyAOInt>(factory->eri()));; for (int thread = 1; thread < num_threads; thread++) {; ints.push_back(std::shared_ptr<TwoBodyAOInt>(ints[0]->clone()));; }. This method only incurs the cost of creating a single integral object, and; performs much cheaper cloning operations to create the other objects for each; thread. Moreover, if integral objects are created only in the initialization; of each code that uses them, and stored persistently, the cost of integral; object creation is further reduced. One Electron Integrals in |PSIfour|; -----------------------------------. After version 1.5, we started transitioning the one electron integral code over to; use Libint2 instead of the old handwritten Obara-Saika code. There are a; number of reasons motivating this switch. For methods requiring; potentials and fields evaluated at many external sites, such as PCM and; polarizable embedding, the efficiency of the one electron integrals can be rate; limiting. We also started to introduce integral screening, and it is important; to balance the screening used for one- and two-electron terms carefully, so this; is a good opportunity to re-evaluate the code. Finally, given the complexity; of the OS recursion code, the switch to an external library leaves a more; compact codebase to maintain. The one electron integrals which are not provided by Libint2; are now handled by a new implementation of the McM",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:11938,reduce,reduced,11938,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['reduce'],['reduced']
Energy Efficiency,"except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'meth",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:226091,energy,energy,226091,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:227460,energy,energy,227460,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"extra directives like ``%excite*``, which presently have no other; specification route. * Specifying the basis is perhaps the regulated piece of input. Since; basis set names differ between |PSIfour| and Cfour and it's not; practical to compare exponent-to-exponent, any input file with both; |mints__basis| and |cfour__cfour_basis| keywords present will halt. Once; a basis set has been requested through |mints__basis|, overriding the; default spherical/Cartesian setting must be done through; |globals__puream| (as opposed to |cfour__cfour_spherical|). * Specifying keywords that control geometry optimization is; straightforward. Unless the optimization is invoked in sandwich mode,; all Cfour optimization keywords (*e.g.*, |cfour__cfour_geo_maxcyc|) are; ineffective, as the Cfour optimizer is never invoked. |PSIfour|; optimization keywords (*e.g.*, |optking__geom_maxiter|) instead fill; these roles. * Specifying the computational method (through, for instance,; ``energy('c4-ccsd')`` instead of ``energy('cfour')``) often; sets additional keywords consistent with best practices (*e.g.*,; |cfour__cfour_cc_program|). Since those settings are implicit, any; explicit setting of those those keywords, whether contradicting or; concurring, takes priority (halts never generated). The following are; some concrete examples. For the moment, click the source button at; muster_modelchem for details of what keywords; get set. * runs in vcc since that's Cfour's default for cc_program ::. set cfour_calc_level ccsd; energy('cfour'). * runs in ecc since Cfour's default overwritten by keyword ::. set cfour_calc_level ccsd; set cfour_cc_program ecc; energy('cfour'). * runs in ecc since that's best practice for the requested ccsd ::. energy('c4-ccsd'). * runs in vcc since *hidden* default overwritten by keyword ::. set cfour_cc_program vcc; energy('c4-ccsd'). * Specifying certain keywords that are nominally applicable for pure-\; |PSIfour| modules directs them to fulfil analogous roles; in the",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:38190,energy,energy,38190,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,2,['energy'],['energy']
Energy Efficiency,"ext{FCTL/HF}} + E_{\text{-D}}; \end{align*}. Unless the method includes a dispersion correction, this quantity is; equal to :psivar:`HF TOTAL ENERGY` (for HF) or; :psivar:`DFT FUNCTIONAL TOTAL ENERGY` (for; DFT). Unless the method is a DFT double-hybrid, this quantity is equal; to :psivar:`DFT TOTAL ENERGY`. .. psivar:: SCF TOTAL GRADIENT. The total electronic gradient [E_h/a0] of the SCF stage of the calculation, ({nat}, 3). .. psivar:: SCF DIPOLE GRADIENT. The derivative of the SCF stage dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: SCF TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the SCF stage, (3 * {nat}, 3 * {nat}). .. psivar:: SCF STABILITY EIGENVALUES. Array of eigenvalues from UHF or ROHF stability analysis. .. psivar:: SCS-CCSD TOTAL ENERGY; SCS-CCSD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the CCSD-like method formed by reweighting :psivar:`CCSD DOUBLES ENERGY`; by 1.27 opposite-spin and 1.13 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP2-VDW TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.28 opposite-spin and 0.50 same-spin contributions, with; any singles carried along. DOI: 10.1080/00268970802641242. .. psivar:: SCS(N)-MP2 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:59170,energy,energy,59170,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"f ``R`` and ``A`` within; the loops. Note that we do not need the dollar sign to access the Python; variable in this example; that is required only when using Python variables; with the ``set`` keyword. Cartesian geometries, because of details of the geometry update process,; need to be specified within the loop(s) along with their basis set when; geometry scans are performed. See :srcsample:`scf4` for analogous Z-matrix; and Cartiesian scans. .. _`sec:resultsTables`:. Tables of Results; =================. The Psithon function ``psi4.driver.p4util.Table`` has been removed,; as the Python ecosystem provides many more flexible alternatives. An; example tabulating a potential energy surface scan for water with Pandas; is shown below::. molecule h2o {; O; H 1 R; H 1 R 2 A; }; ; Rvals=[0.9,1.0,1.1]; Avals=range(100,103,2); ; rows = []; table = []; ; set basis cc-pvdz; ; for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; energy('mp2'); escf = variable('SCF TOTAL ENERGY'); edfmp2 = variable('MP2 TOTAL ENERGY'); escsmp2 = variable('SCS-MP2 TOTAL ENERGY'); rows.append((R, A)); table.append([escf, escsmp2, edfmp2]); ; import pandas as pd; df = pd.DataFrame(table, columns = [""E(SCF)"", ""E(SCS)"", ""E(DFMP2)""], index=rows); print(df). # E(SCF) E(SCS) E(DFMP2); # (0.9, 100) -76.020680 -76.217006 -76.221189; # (0.9, 102) -76.021305 -76.217439 -76.221605; # (1.0, 100) -76.021264 -76.224987 -76.228727; # (1.0, 102) -76.021460 -76.224946 -76.228668; # (1.1, 100) -75.990195 -76.201891 -76.205087; # (1.1, 102) -75.990085 -76.201498 -76.204676. .. _`sec:wrappers`:. Python Wrappers; ===============. The Python foundations of the |PSIfour| driver and Psithon syntax permit; many commonly performed post-processing procedures to be integrated into; the |PSIfour| suite. . As seen in the neon dimer example from the :ref:`tutorial <sec:tutorial>` section,; the :py:func:`~psi4.driver.driver_nbody.nbody` wrapper provides automatic computation of; counterpoise-corrected interaction energies betw",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:14413,energy,energy,14413,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"f computing energies for arbitrary; order |MollerPlesset| perturbation theory (MPn, for closed-shell; systems with an RHF reference) and for Z-averaged perturbation theory; (ZAPTn, open-shell systems with a ROHF reference). However, please; note that these computations are essentially doing high-order CI (up to; full CI) computations to obtain these results, and hence they will only; be possible for very small systems (generally a dozen electrons or less). The simplest way to run high-order perturbation theory computations is to; call, *e.g.*, ``energy('mp10')`` to invoke a MP10 computation or; ``energy('zapt25')`` to invoke a ZAPT25 computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions. For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; ``energy('mp10')`` sets |detci__mpn| to TRUE.; The program uses the Wigner (2n+1) rule by default; (|detci__mpn_wigner| = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets |detci__max_num_vecs| to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. .. index:: ; pair: CI; arbitrary-order coupled-cluster theory. Arbitrary Order Coupled-Cluster Theory; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. *This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to*; :ref:`Kallay's MRCC <sec:mrcc>` *code.*. The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216]_, or of Olsen [Olsen:2000:7140]_.; Notably, the ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:13471,energy,energy,13471,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['energy'],['energy']
Energy Efficiency,"f subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY C. The Hartree--Fock energy [E_h] of subsystem C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY. Dispersion-classified coupled-cluster-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT ELST13,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2+(3). .. psivar:: SAPT IND30,R ENERGY; SAPT IND-DISP30 ENERGY; SAPT EXCH-IND30,R ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. See :ref:`sec:saptinf`. .. psivar:: SAPT DISP30 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:52914,energy,energy,52914,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:181900,energy,energy,181900,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:299074,energy,energy,299074,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:301941,energy,energy,301941,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:306096,energy,energy,306096,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'stat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:308603,energy,energy,308603,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:239161,energy,energy,239161,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:242223,energy,energy,242223,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:110372,energy,energy,110372,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:112912,energy,energy,112912,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:239340,energy,energy,239340,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:242402,energy,energy,242402,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525483,energy,energy,525483,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:139748,energy,energy,139748,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:392996,energy,energy,392996,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:25853,energy,energy,25853,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:21214,energy,energy,21214,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:23220,energy,energy,23220,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:26408,energy,energy,26408,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:28414,energy,energy,28414,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:416357,energy,energy,416357,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:423324,energy,energy,423324,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:10594,energy,energy,10594,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shel",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:11956,energy,energy,11956,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:15852,energy,energy,15852,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shel",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:17214,energy,energy,17214,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:335111,energy,energy,335111,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:342116,energy,energy,342116,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:418913,energy,energy,418913,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:488581,energy,energy,488581,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:490586,energy,energy,490586,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:493891,energy,energy,493891,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:495896,energy,energy,495896,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:329293,energy,energy,329293,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:180459,energy,energy,180459,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:299975,energy,energy,299975,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"f_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:300148,energy,energy,300148,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth orde",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7242,energy,energy,7242,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"fault convergence criteria.; * Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The ""best-practice"" input file for KS-DFT is::. memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). .. _`sec:dftdictbuilder`:. Advanced Functional Use and Manipulation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. New DFT functionals can be created from scratch from within the input; file and accessed using the ``dft_functional`` keyword argument in the; energy call::. # DFT Custom Functional. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis sto-3g; dft_spherical_points 302; dft_radial_points 99; reference rks; }. pbe0 = {; ""name"": ""my_PBE0"",; ""x_functionals"": {""GGA_X_PBE"": {""alpha"": 0.75}},; ""x_hf"": {""alpha"": 0.25},; ""c_functionals"": {""GGA_C_PBE"": {}}; }. func_call = energy('SCF', dft_functional=pbe0). # as PBE0 is a pre-defined functional, the call above is equivalent to both below:; func_call = energy('SCF', dft_functional=""PBE0""); func_call = energy('PBE0'). Supported keywords include:. - `name`: string, name of the functional. for custom defined functionals used for printing only.; - `xc_functionals`: dict, definition of a complete (X + C) functional based in LibXC name; - `x_functionals`: dict, definition of exchange functionals using LibXC names; - `c_functionals`: dict, definition of correlation functionals using LibXC names; - `x_hf`: dict, parameters dealing with exact (HF) exchange settings for hybrid DFT; - `c_mp2`: dict, parameters dealing with MP2 correlation for double hybrid DFT; - `dispersion`: dict, definition of dispersion corrections; - `citation`: string, citation for the method, for printing purposes; - `description`: string, description of the method, for printing purposes. The full interface is defined in; :source:`psi4/driver/procrouti",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:33599,energy,energy,33599,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"fault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:447454,energy,energy,447454,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"fault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:133235,energy,energy,133235,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"fault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:363885,energy,energy,363885,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:394119,energy,energy,394119,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'ro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:137105,energy,energy,137105,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'drive",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481088,energy,energy,481088,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:395023,energy,energy,395023,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:7932,energy,energy,7932,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:8378,energy,energy,8378,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:9232,energy,energy,9232,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:272861,energy,energy,272861,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"fficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in |PSIfour| for all single; reference types available in the SCF module.; MP2 defaults in |PSIfour| to the density-fitted code. The support for MP2 by the DFMP2 module in |Psifour| is detailed in; Table :ref:`DFMP2 Capabilities <table:dfmp2_stdsuite>`. Even without; ``set qc_module dfmp2``, methods will default to this module, but; alternate implementations and use of |globals__mp2_type| for performing; a MP2 with conventional integrals can be seen at :ref:`other modules; <table:managedmethods>`. .. include:: autodoc_capabilities_dfmp2.rst. An example utilization of the code is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; ; energy('mp2'). The ``energy('mp2')`` call to :py:func:`~psi4.driver.energy` executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which forms the density-fitted :math:`(Q|ov)` integrals and then builds the; full :math:`(ov|ov)` tensor in blocks, evaluating the contributions to the MP2 energy; as it goes. A RHF-MP2 wavefunction is selected automatically due to the RHF; reference. In this example, we freeze the core, both for efficiency and; because split-valence bases like cc-pVDZ do not contain core correlation; functions. The result looks something like::. -----------------------------------------------------------; ==================> DF-MP2 Energies <====================; -----------------------------------------------------------; Reference Energy = -76.0213974638823942 [Eh]; Singles Energy = -0.0000000000000001 [Eh]; Same-Spin Energy = -0.0512503270216563 [Eh]; Opposite-Spin Energy = -0.1534098175176923 [Eh]; Correlation Energy = -0.2046601445393486 [Eh]; Total Ener",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:3553,energy,energy,3553,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['energy'],['energy']
Energy Efficiency,"ficiently on; multi-core machines (see Sec. :ref:`sec:threading`).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease. |PSIfour| is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes |PSIfour| incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in |PSIfour|, with many functionals available. Density fitting is ubiquitous in; |PSIfour|, leading to some of the most efficient MP2 and CCSD(T) code available.; |PSIfour| also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, |PSIfour| gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory. In this section, we provide an overview of some of the features of; |PSIfour| along with the prerequisite steps for running calculations.; Sec. :ref:`Tutorial <sec:tutorial>` provides a brief tutorial to help new users; get started. Section :ref:`Psithon <sec:psithonInput>` offers further details into the; structure of |PSIfour| input files and how Python can be mixed with; quantum chemistry directives in |PSIfour|. Section :ref:`Psithon Functions <sec:psithonFunc>`; provides more detail on the Python functions provided by |PSIfour|; and discuss",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:2303,power,powerful,2303,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,3,"['adapt', 'energy', 'power']","['adapted', 'energy', 'powerful']"
Energy Efficiency,"fied correction from MP2 implemented for SAPT2.; Value varies by SAPT level. .. psivar:: SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SSAPT0 DISP ENERGY; SSAPT0 ELST ENERGY; SSAPT0 EXCH ENERGY; SSAPT0 IND ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+3 DISP ENERGY; SAPT2+3 ELST ENERGY; SAPT2+3 EXCH ENERGY; SAPT2+3 IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; given SAPT level of theory. The sum of these four components yields; the :samp:`{SAPT Level} TOTAL ENERGY`. .. psivar:: SAPT0 TOTAL ENERGY; SSAPT0 TOTAL ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+3 TOTAL ENERGY. The total electronic interaction energy [E_h] for the labeled SAPT level; of theory. .. psivar:: SAPT2+(CCD) DISP ENERGY; SAPT2+(CCD) ELST ENERGY; SAPT2+(CCD) EXCH ENERGY; SAPT2+(CCD) IND ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+3(CCD) DISP ENERGY; SAPT2+3(CCD) ELST ENERGY; SAPT2+3(CCD) EXCH ENERGY; SAPT2+3(CCD) IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; given SAPT level of theory that incorporates coupled-cluster dispersion.; The sum of these four components yields the :samp:`{SAPT Level} TOTAL ENERGY`. .. psivar:: SAPT2+(CCD) TOTAL ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+3(CCD) TOTAL ENERGY. The total electronic interaction energy [E_h] for the labeled SAPT level; of theory that incorporates coupled-cluster dispersion. .. psivar:: SAPT2+DMP2 DISP ENERGY; SAPT2+DMP2 ELST ENERGY; SAPT2+DMP2 EXCH ENERGY; SAPT2+DMP2 IND ENERGY; SAPT2+(3",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:55220,energy,energy,55220,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"file can; be provided through the``restart_file`` option ::. energy('scf',restart_file='./psi.PID.name.filenumber'). Only the filenumber is necessary for the driver to appropriately rename the; file and copy it to the scratch directory where |PSIfour| will expect it.; The restart capabilities of a specific method (if any) are found in that method's documentation. To provide multiple files, pass them as arguments of a Python list ::. energy('scf',restart_file=['./file1.filenumber','./file2.filenumber']). Note that the ``restart_file`` options is only available for energy procedures as of now. Executing |PSIfour| with the :option:`psi4 -m` (for; messy) flag will prevent files being deleted at the end of the run::. psi4 -m. The mechanism for restarting HF/DFT calculations is described in details :ref:`here <sec:scfrestart>`. .. _`sec:save_wfn`:. Saving the Wavefunction; =======================. A core object of |PSIfour| is the Wavefunction (short ``wfn``) object ::. energy, wfn = energy('scf',return_wfn=True). This C++/Python object (:py:class:`psi4.core.Wavefunction`) contains orbital; data, basis set information, result variables and more.; It can be saved either to a numpy file or converted to a python dictionary ::. # write the wavefunction to file; wfn.to_file('my_wfn'). # alternatively store the dict representation of the wavefunction in memory; wfn_dict = wfn.to_file(). In either form, its attributes can be set and edited.; This is an expert-level feature, though.; In general, let |PSIfour| create the Wavefunction, then treat it as read-only.; The back conversion to a Wavefunction object uses the ``.from_file()`` functionality ::. # read wavefunction from file; wfn_from_file = psi4.core.Wavefunction.from_file('my_wfn'). # make a wavefunction from the dict; wfn_from_dict = psi4.core.Wavefunction.from_file(wfn_dict). .. index:: psirc, psi4rc; .. _`sec:psirc`:. |psirc| File; ============. .. caution:: The |psirc| file is only read for Psithon input, not PsiAPI.; It",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:6395,energy,energy,6395,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,2,['energy'],['energy']
Energy Efficiency,"for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'refer",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:132085,energy,energy,132085,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:135859,energy,energy,135859,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"for higher-order SAPT. Basic Keywords for Higher-order SAPT; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__basis.rst; .. include:: autodir_options_c/sapt__df_basis_sapt.rst; .. include:: autodir_options_c/globals__freeze_core.rst; .. include:: autodir_options_c/sapt__print.rst. Advanced Keywords for Higher-order SAPT; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__do_ccd_disp.rst; .. include:: autodir_options_c/sapt__do_mbpt_disp.rst; .. include:: autodir_options_c/sapt__do_third_order.rst; .. include:: autodir_options_c/sapt__ints_tolerance.rst; .. include:: autodir_options_c/sapt__sapt_mem_check.rst; .. include:: autodir_options_c/globals__debug.rst. MP2 Natural Orbitals; ^^^^^^^^^^^^^^^^^^^^. One of the unique features of the SAPT module is its ability to use; MP2 natural orbitals (NOs) to speed up the evaluation of the triples; contribution to dispersion. By transforming to the MP2 NO basis, we can; throw away virtual orbitals that are expected to contribute little to the; dispersion energy. Speedups in excess of :math:`50 \times` are possible. In; practice, this approximation is very good and should always be applied.; Publications resulting from the use of MP2 NO-based approximations should ; cite the following: [Hohenstein:2010:104107]_. Basic Keywords Controlling MP2 NO Approximations; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__nat_orbs_t2.rst; .. include:: autodir_options_c/sapt__nat_orbs_t3.rst; .. include:: autodir_options_c/sapt__nat_orbs_v4.rst; .. include:: autodir_options_c/sapt__occ_tolerance.rst. .. comment Advanced Keywords Controlling MP2 NO Approximations; .. comment ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. comment .. include:: autodir_options_c/sapt__nat_orbs_t2.rst. .. index:: SAPT; charge-transfer. .. _`sec:saptct`:. Charge-Transfer in SAPT; ^^^^^^^^^^^^^^^^^^^^^^^. It is possible to obtain the stabilization energy of a complex",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:29118,energy,energy,29118,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The total electronic energy [E_h] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. :eq:`SCFterms` or :eq:`DFTterms`. Quantity; :math:`E_{\text{FCTL}}` in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; Unless the method includes a dispersion correction, this quantity is; equal to :psivar:`SCF TOTAL ENERGY`. .. psivar:: DFT TOTAL ENERGY. The total electronic energy [E_h] for the requested DFT method,; :math:`E_{\text{DFT}}` in Eq. :eq:`DFTterms`. .. math::; :nowrap:; :label: DFTterms. \begin{align*}; E_{\text{DFT}} & = E_{NN} + E_{1e^-} + E_{2e^-} + E_{xc} + E_{\text{-D}} + E_{\text{DH}} \\; & = E_{\text{FCTL}} + E_{\text{-D}} + E_{\text{DH}} \\; & = E_{\text{SCF}} + E_{\text{DH}}; \end{align*}. Unless the method is a DFT double-hybrid, this quantity is equal to; :psivar:`SCF TOTAL ENERGY`. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; :psivar:`DFT FUNCTIONAL TOTAL ENERGY`. .. psivar:: DFT TOTAL GRADIENT. The total electronic gradient [E_h/a0] of ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:30996,energy,energy,30996,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"for the :math:`^2B_2` state are excited states that are subject to; variational collapse. One way to obtain reliable energies for these states is; to use a multi-state method; in this case it's easier to run the entire; computation in the lowest symmetry needed during the finite difference; procedure. .. index:: molecule; multiple fragments; .. _`sec:fragments`:. Non-Covalently Bonded Molecule Fragments; ========================================. |PSIfour| has an extensive range of tools for treating non-covalent; intermolecular forces, including counterpoise corrections and symmetry adapted; perturbation theory methods. These require the definition of which fragments; are interacting within the complex. |PSIfour| provides a very simple mechanism; for doing so: simply define the complex's geometry using the standard; Cartesian, Z-matrix, or mixture thereof, specifications and then place two; dashes between nonbonded fragments. For example, to study the interaction; energy of ethane and ethyne molecules, we can use the following molecule; block::. molecule eneyne {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; }. This specifies that there are two neutral, spin-singlet fragments. It is; possible to further specify that the overall complex is neutral and spin-singlet; by inserting another :samp:`{charge} {multiplicity}` line, separated from the first; molecule block by a `--` line. If any information is missing, |PSIfour| will set the; unprovided charges and multiplicities to be consistent with those that are given.; For example, the overall charge must be simply the sum of all fragment charges.; |PSIfour| further assumes that any unpaired electrons are coupled to yield the highest; possible :ma",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:19086,energy,energy,19086,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['energy'],['energy']
Energy Efficiency,"for; details. **Symmetry**; The symmetry can be specified by a line reading :samp:`symmetry; {symbol}`, where :samp:`{symbol}` is the Sch\ |o_dots|\ nflies symbol; of the (Abelian) point group to use for the computation, one of one of; ``c1``, ``c2``, ``ci``, ``cs``, ``d2``, ``c2h``, ``c2v``, or ``d2h``.; This need not be specified, as the molecular symmetry is automatically; detected by |PSIfour|. See :ref:`sec:symmetry` for details. **Fragments**; A line reading ``--`` is interpreted as the separator between two non-covalently ; bound molecular fragments. See :ref:`sec:fragments` for details. Multiple Molecules; ==================. To facilitate more elaborate computations, it is possible to provide a name for; each molecule and tell |PSIfour| which one should be used in a given; calculation. For example, consider the following input file::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; energy('scf') # on H2; ; clean(). molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; energy('scf') # on H. Here, two separate jobs are performed on two different molecules; the first is; performed on H\ :sub:`2`, while the second is for H atom. The last molecule to be; specified is the ""active"" molecule by default. To explicitly activate a named; molecule, the activate command is provided. With it, the above input file can be; equivalently written as follows. Alternatively, the molecule can be specified; directly to the computing function. Below, the third calculation is the same as; the first. ::. molecule h2 {; H; H 1 0.9; }; ; molecule h {; H; }; ; activate(h2); set basis cc-pvdz; set reference rhf; energy('scf') # on H2; ; clean(). activate(h); set basis cc-pvdz; set reference uhf; energy('scf') # on H. # --------------------------------------; # equivalent to previous input ends here. clean(). set reference rhf; energy('scf', molecule=h2) # on H2. :ref:`sec:jobControl` provides more details about the job control; and calculation keywords used i",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:6783,energy,energy,6783,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['energy'],['energy']
Energy Efficiency,"found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6728,energy,energy,6728,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"four__cfour_reference|. For a; list of applicable keywords, see source of; muster_psi4options. * Consult :ref:`sec:cfourFunctionality` for information on what Cfour; functionality is accessible through |PSIfour|. |PSIfour| for Cfour Users; ~~~~~~~~~~~~~~~~~~~~~~~~~. In the simplest use of the Psi4/Cfour interface, a |PSIfour| input file; can simply ""wrap"" a ``ZMAT`` file and execute :program:`xcfour`. This is; illustrated in the following example::. cfour {; UHF-SCF energy calculation ; N; H 1 R; H 1 R 2 A; ; R=1.008; A=105.0; ; *ACES2(CALC=HF,BASIS=qz2p; MULT=2,REF=UHF; OCCUPATION=3-1-1-0/3-0-1-0; SCF_CONV=12; MEMORY=20000000); }; ; energy('cfour'). Here, the contents of the ``cfour {...}`` block are written directly to a; ``ZMAT`` file. This is joined by a default ``GENBAS`` file; (:source:`psi4/share/psi4/basis/GENBAS`). To preferentially use your own ``GENBAS``,; place it in :envvar:`PATH` or :envvar:`PSIPATH`. The line calling; :py:func:`~psi4.driver.energy` with argument ``'cfour'`` invokes; :program:`xcfour`. After execution of the ``energy('cfour')`` line completes, Cfour results; are read back into |PSIfour| format and are thereafter accessible for; further processing in the input file. See :ref:`sec:cfourOutput` for; details. This storage of results in variables and arrays *in memory* for; the duration of the |PSIfour| instance (as opposed to solely *in files*); is the only advantage thus far incurred by the P4C4 interface. We'll call; this mode of basic utility the ""sandwich"" mode. Molecule specification in |PSIfour| allows Cartesians, Z-matrices, mixed; Cartesian/Z-matrix, negation of variables, delayed specification of; variables, specification of fragments, etc., all in a whitespace-tolerant; format. See :ref:`sec:moleculeSpecification` for details and; :srcsample:`cfour/mints5` for examples. When a |PSIfour|-style molecule is; supplied, its geometry is written to ``ZMAT`` in Cartesian form and the; |cfour__cfour_coordinates|\ =CARTESIAN, |cfour__cfour_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:5804,energy,energy,5804,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:intercalls`:. Function Intercalls; ===================. This topic is in transition. As of 1.0, the functionality provided by; ``cp()`` and ``cbs()`` should not be accessed directly. Instead, use the; ``cp`` kwarg and/or the extended method syntax like; ``'mp3/aug-cc-pv[dt]z'`` to ``energy()``, ``opt()``, *etc.*, respectively. For many of the |PSIfour| Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). .. _`table:intercalls`:. .. table:: Permitted nesting of Psithon functions. +-------------------------+-----+-----+-----+-----+--------+; | Caller | Callee |; +-------------------------+-----+-----+-----+-----+--------+; | | cp | db | opt | cbs | energy |; +=========================+=====+=====+=====+=====+========+; | :ref:`sec:cp()` | | --- | Y | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:db()`",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst:1354,energy,energy,1354,doc/sphinxman/source/intercalls.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst,1,['energy'],['energy']
Energy Efficiency,"further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=oc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:141128,energy,energy,141128,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:143146,energy,energy,143146,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"g; them. For each SCF computation, we use ``psi4.IO.set_default_namespace`` to uniquely; name scratch files. In the following SCF step, only file 97 is renamed using; ``psi4.IO.change_file_namespace`` so that integrals can be read from it.; For more information on stability analysis, see the :ref:`stability <sec:scfstability_doc>`; documentation. .. index:: SAPT; SAPT0. SAPT0; ^^^^^. Generally speaking, SAPT0 should be applied to large systems or large data; sets. The performance of closed-shell SAPT0 relies entirely on error cancellation, which; seems to be optimal with a truncated aug-cc-pVDZ basis, namely,; jun-cc-pVDZ (which we have referred to in previous work as; aug-cc-pVDZ'). We do not recommend using SAPT0 with large basis sets; like aug-cc-pVTZ. A systematic study of the accuracy of closed-shell SAPT0 and other SAPT ; truncations, using different basis sets, is reported in ; [Parker:2014:094106]_. In particular, an empirical recipe for scaled SAPT0; can yield improved performance and has been included in the output file as; the sSAPT0 interaction energy. sSAPT0 is a free by-product and is automatically ; computed when SAPT0 is requested (see above for more details).; The SAPT module has been used to perform SAPT0 computations with over; 200 atoms and 2800 basis functions; this code should be scalable to 4000; basis functions. Publications resulting from the use of the SAPT0 code ; should cite the following publications: [Hohenstein:2010:184111]_ and ; [Hohenstein:2011:174107]_. If the open-shell SAPT0 code is used,; [Gonthier:2016:134106]_ should be additionally cited. Basic SAPT0 Keywords; ~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__sapt_level.rst; .. include:: autodir_options_c/sapt__basis.rst; .. include:: autodir_options_c/sapt__df_basis_sapt.rst; .. include:: autodir_options_c/sapt__df_basis_elst.rst; .. include:: autodir_options_c/sapt__freeze_core.rst; .. include:: autodir_options_c/sapt__d_convergence.rst; .. include:: autodir_option",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:20719,energy,energy,20719,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"ge; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{| \textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn} | }. .. psivar:: db_name DATABASE MEAN SIGNED DEVIATION. The mean deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn}}. .. psivar:: db_name DATABASE ROOT-MEAN-SQUARE DEVIATION. The rms deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contribution contribution to the reduced; density matrix energy expression. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:29994,reduce,reduced,29994,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,"['energy', 'reduce']","['energy', 'reduced']"
Energy Efficiency,"gle \\; {\hat T}_2 | \Phi_0 \rangle &= \sum_{i<j}^{\rm occ} \sum_{a<b}^{\rm vir} t_{ij}^{ab} | \Phi_{ij}^{ab} \rangle,. *etc.* The popular coupled cluster singles and doubles (CCSD) model; [Purvis:1982]_ truncates the expansion at :math:`{\hat{T}} = {\hat{T}_1}; + {\hat{T}_2}`. This model has the same number of parameters as; configuration interaction singles and doubles (CISD) but improves upon; it by approximately accounting for higher-order terms using products; of lower-order terms (*e.g.*, the term :math:`{\hat{T}_2}^2` approximately; accounts for quadruple excitations). The inclusion of such products; makes coupled-cluster methods *size extensive*, meaning that the; quality of the computation should not degrade for larger molecules.; The computational cost for CCSD scales as :math:`{\cal{O}}(o^2 v^4)`, where; :math:`o` is the number of occupied orbitals and :math:`v` is the number of virtual; orbitals. Improving upon CCSD, the CCSD(T) method [Raghavachari:1989]_ includes; a perturbative estimate of the energy contributed by the :math:`{\hat{T}_3}`; operator. The computational cost of this additional term scales as; :math:`{\cal{O}}(o^3 v^4)`, making it rather expensive for molecules with more than; a dozen heavy atoms or so. However, when this method is affordable, it; provides very high quality results in most cases. |PSIfour| is capable of computing energies and analytic gradients for a; number of coupled cluster models. It can also compute linear response; properties (such as static or frequency-dependent polarizability,; or optical rotation angles) for some models. Excited states can; also be computed by the CC2 and CC3 models, or by EOM-CCSD. Table; :ref:`CC Methods <table:ccsummary>` summarizes these capabilities. This section; describes how to carry out coupled cluster calculations within |PSIfour|.; For higher-order coupled-cluster methods like CCSDT and CCSDTQ, |PSIfour|; can interface to K\ |a_acute|\ llay's MRCC code (see :ref:`MRCC <sec:mrcc>`). Sol",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst:3801,energy,energy,3801,doc/sphinxman/source/cc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst,1,['energy'],['energy']
Energy Efficiency,"gorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation of the integral-direct MP2-R12 (and MP2) method; in |PSIfour| can run efficiently on SMP, or shared-memory, machines,; by utilizing multiple processors via multithreaded approach.; However, it cannot utilize distributed memory machines,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:7098,schedul,schedulers,7098,doc/sphinxman/source/attic/mp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst,2,"['efficient', 'schedul']","['efficient', 'schedulers']"
Energy Efficiency,"gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:225530,energy,energy,225530,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:323676,energy,energy,323676,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"gy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP3 TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3-like method formed by reweighting the difference between; :psivar:`MP3 DOUBLES ENERGY` and :psivar:`MP2 DOUBLES ENERGY`; by 0.25, atop the SCS-MP2 energy, with any singles carried along. .. psivar:: SCS-OMP3 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SCS-OMP2 energy, with any singles carried along. .. psivar:: SOS-MP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.3 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 1.2 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP3 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SOS-OMP2; energy using non-canonical weighting, with any singles carried along. .. psivar:: SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method for",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:61656,energy,energy,61656,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"gy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'ener",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:45553,energy,energy,45553,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"gy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:157231,energy,energy,157231,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"gy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:162567,energy,energy,162567,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"gy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:166475,energy,energy,166475,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"gy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:334391,energy,energy,334391,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"h a libint2 build, need LIBINT2_SHGAUSS_ORDERING=gaussian *at library build time*.; # This is not the default, though it may become runtime selectable in future https://github.com/evaleev/libint/issues/190#issuecomment-691485225 .~ (see [Feb 2023] update); # * In order for any DF to work, need ENABLE_ERI3 and ENABLE_ERI2 >=0; # * In order for gradient and Hessian tests to not segfault, need ENABLE_ERI and ENABLE_ERI3 and ENABLE_ERI2 =2; # * (new c. Jan 2022) In order for Psi4 to at all work with a libint2 build for one-electron ints, need ENABLE_ONEBODY =2; # * The `find_package(Libint2 ... COMPONENTS ...)` commands will check the above requirements met, provided the libint2; # was built with cmake+cmake, not libtool+cmake.; # * Provided you know what you're doing wrt the above options and know what subset of Psi4 calculations you're targeting; # (e.g., no Hessians or non-df only) and recognize that DF is everywhere (e.g., SAD guess and DF_SCF_GUESS) and may; # need further suppression, it's fine to reduce or eliminate the `find_package` components.; # * ~Psi4 can run a libtool+cmake, but one needs to disable the `find_package` components check and correct for some; # Libint2 vs. libint2 spelling differences. See ""CHOOSE!"" toggles here and in <psi4>/psi4/CMakeLists.txt~ (see [Feb 2023] update); # * In order for DF tests to yield right values when cartesian basis sets (6d) used, need ERI3_PURE_SH and ERI2_PURE_SH =OFF; # * In order for DF integrals to be present as nominally expected, need WITH_MAX_AM to mirror WITH_ERI3_MAX_AM; # * In order for DF calculations to not be limited by cheap integrals, need WITH_MAX_AM_ERI2 >= WITH_MAX_AM_ERI3; # * In order for DF fallback fitting to work with def2-universal on all elements, need WITH_ERI3_MAX_AM >=4 for energies; # * Since non-DF calculations often use DF guess or preiterations and DF calculations use 4-center integrals for sieving,; # a natural relationship between ERI and ERI3 for energy integrals is N and N+1.; # * T",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt:1437,reduce,reduce,1437,external/upstream/libint2/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt,1,['reduce'],['reduce']
Energy Efficiency,"h cases. Optking will avoid such; coordinates when choosing an initial coordinate system; however, they may arise in the course; of an optimization. In such cases, try restarting from the most recent geometry.; Alternatively, setting |optking__opt_coordinates| to cartesian will avoid any internal; coordinate difficulties altogether. These coordinate changes can be automatically; performed by turning |optking__dynamic_level| to 1. .. warning:: In some cases, such as the coordinate issues described above, optking will reset to maintain; a consistent history. If an error occurs in Psi4 due to |optking__geom_maxiter| being exceeded but; the final step report indicates that optking has not taken |optking__geom_maxiter| steps, such a ; reset has occured. Inspection will show that the step counter was reset to 1 somewhere in the; optimization. .. index:: ; pair: geometry optimization; convergence criteria. Convergence Criteria; ^^^^^^^^^^^^^^^^^^^^. Optking monitors five quantities to evaluate the progress of a geometry ; optimization. These are (with their keywords) the change in energy ; (|optking__max_energy_g_convergence|), the maximum element of ; the gradient (|optking__max_force_g_convergence|), the root-mean-square ; of the gradient (|optking__rms_force_g_convergence|), the maximum element; of displacement (|optking__max_disp_g_convergence|), and the ; root-mean-square of displacement (|optking__rms_disp_g_convergence|), ; all in internal coordinates and atomic units. Usually, these options will not ; be set directly. Primary control for geometry convergence lies with the keyword ; |optking__g_convergence| which sets the aforementioned in accordance ; with Table :ref:`Geometry Convergence <table:optkingconv>`. |; |. .. _`table:optkingconv`:. .. table:: Summary of sets of geometry optimization criteria available in |PSIfour|. +-----------------------------+----------------------------+----------------------------+----------------------------+------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:20386,monitor,monitors,20386,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['monitor'],['monitors']
Energy Efficiency,"h) -> ROOT n (IN i) RIGHT EIGENVECTOR BETA. The right beta spin eigenvectors of the named method; from ground state, which is in irrep *h*, to root *n* within irrep *i*. DFT; functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 (h) -> ROOT n (i) RIGHT EIGENVECTOR BETA. The right beta spin eigenvectors of the named method; from ground state, which is in irrep *h*, to root *n*, which is in irrep *i*. DFT; functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 -> ROOT n RIGHT EIGENVECTOR BETA - h TRANSITION. The right alpha and beta spin eigenvectors of the named method; from ground state to root *n*, and the transition is of irrep *h*. DFT; functional labeled if canonical. .. psivar:: THERMAL ENERGY. Total thermal energy E [E_h] at given temperature. .. psivar:: THERMAL ENERGY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the thermal energy at given temperature. .. psivar:: TWO-ELECTRON ENERGY. The two-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{2e^-}` in Eq. :eq:`SCFterms`. .. psivar:: UNCP-CORRECTED 2-BODY INTERACTION ENERGY. The interaction energy [E_h] considering only two-body interactions,; computed without counterpoise correction.; Related variable :psivar:`CP-CORRECTED 2-BODY INTERACTION ENERGY`. .. math:: E_{\text{IE}} = E_{dimer} - \sum_{monomer}^{n}{E_{monomer}^{\text{unCP}}}. .. psivar:: WIBERG LOWDIN INDICES. Property of Wiberg bond indices using orthogonal L\ |o_dots|\ wdin orbitals, (nat, nat). .. psivar:: ZAPTn TOTAL ENERGY; ZAPTn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled Z-averaged perturbation theory level.; *n* is ZAPT perturbation order. .. psivar:: ZERO K ENTHALPY. Total electronic and zero-point energy [E_h] at 0 [K]. .. psivar:: ZPVE. Vibrational zero-point energy [E_h] at 0 [K]. .. psivar:: 2-BODY PAIRWISE DISPERSION CORRECTION ANALYSIS. The interatomic contributions to the dispersi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:68820,energy,energy,68820,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"h) -> ROOT n (IN i) ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) ROTATORY STRENGTH (LEN). The length-gauge oscillator strength of the transition from root *m* within irrep *h*; to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: CCname ROOT m (h) -> ROOT n (i) ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 (h) -> ROOT n (i) ROTATORY STRENGTH (LEN). The length-gauge oscillator strength of the transition from root *m* to root *n*,; which are in irreps *h* and *i*, respectively..; DFT functional labeled if canonical. .. psivar:: CCname ROOT m -> ROOT n ROTATORY STRENGTH (LEN) - h TRANSITION; TD-fctl ROOT 0 -> ROOT n ROTATORY STRENGTH (LEN) - h TRANSITION. The length-gauge oscillator strength of the transition from root *m* to root *n*,; and the transition is of irrep *h*.; DFT functional labeled if canonical. .. psivar:: CC TOTAL ENERGY; CC CORRELATION ENERGY. .. psivar:: CC CORRELATION KINETIC ENERGY. The correlation correction to the kinetic energy [E_h], as computed by a coupled cluster method. .. psivar:: CC CORRELATION POTENTIAL ENERGY. The correlation correction to the potential energy [E_h], as computed by a coupled cluster method. .. psivar:: CC CORRELATION VIRIAL RATIO. The correlation virial ratio, as defined in https://doi/org/10.1063/1.1535440 for basis set completeness analysis. Computed using coupled cluster. .. psivar:: CC VIRIAL RATIO. The virial ratio, as computed by a coupled cluster method. Only defined for a fully quantum mechanical computation, i.e., not QM/MM or solvated. .. psivar:: CC T1 DIAGNOSTIC; CC D1 DIAGNOSTIC; CC NEW D1 DIAGNOSTIC; CC D2 DIAGNOSTIC. Diagnostic of multireference character. .. psivar:: CC2 TOTAL ENERGY; CC2 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC4 TOTAL ENERGY; CC4 CORRELATION ENERGY; CCnn TOTAL ENERGY; CCnn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested approximate coupled-cluster (CC2, CC3, up t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:16073,energy,energy,16073,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"h: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; unset PSIDATADIR; export PATH={prefix}/bin:$PATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. .. If you installed the Psi4conda distribution or installed the |PSIfour|; .. conda package into the main environment of an Anaconda or Miniconda; .. distribution and added that to your :envvar:`PATH`, as prompted, then; .. :samp:`{condadist} = $HOME/{ana|mini|psi4}conda` and ``which psi4`` likely; .. yields :samp:`{condadist}/bin/psi4` and the ``PATH`` setting lines above; .. are redundant. Run |PSIfour| as executable. ::. >>> cat sample.in; molecule {; He; }; energy('hf/cc-pvdz'); compare_values(-2.85518839, get_variable('current energy'), 5, 'SCF E'); >>> psi4 sample.in; SCF E.............................................................PASSED. *or* Run |PSIfour| as Python module. ::. >>> cat sample.py; import psi4; mol = psi4.geometry(""""""; He; """"""); psi4.energy('hf/cc-pvdz'); psi4.compare_values(-2.85518839, psi4.core.get_variable('current energy'), 5, 'SCF E'); >>> python sample.py; SCF E.............................................................PASSED. .. _`faq:inplace`:. How to run Psi4 as executable after compilation using driver from source; ------------------------------------------------------------------------. When developing python driver code, it can be annoying to keep `make`\; ing to test the code. |PSIfour| can be run ""inplace"" through the; following procedure. To be clear, this is running compiled C++ from the; build directory and python from the source directory. This is an expert; option for development, and not all functionality will be available. ::. >>> cd {objdir}; >>> ln -s {top-level-psi4-dir}/{objdir}/stage/lib/psi4/core.cpython-{ext_will_vary}.so ../psi4/core.cpython-{ext_will_vary}.so; >>> python ../psi4/run_psi4.py --inplace input.dat. .. _`faq:psidatadir`:. Why not to set :envvar:`PSIDATADIR`; --------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:33118,energy,energy,33118,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['energy'],['energy']
Energy Efficiency,"h:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation of the integral-direct MP2-R12 (and MP2) method; in |PSIfour| can run efficiently on SMP, or shared-memory, machines,; by utilizing multiple processors via multithreaded approach.; However, it cannot utilize distributed memory machines,; such as commodity (PC) clusters and massively parallel machines,; to their full potential, since one computation can only take advantage; of one node of such machine at a time.; In such environments, the aformentioned MPQC implementation of; the MP2-R12 method should be preferred; (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}). ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:8032,efficient,efficiently,8032,doc/sphinxman/source/attic/mp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst,1,['efficient'],['efficiently']
Energy Efficiency,"h:`\boldsymbol{\gamma_1}` N-representability, but differ in describing the orbital relaxation:; the former methods account for the relaxation only partially, while the latter fully relax the orbitals.; Both DC-06 and DC-12 methods have similar computational cost, same is true when comparing ODC-06 and ODC-12. ; Meanwhile, the DC methods are generally more efficient than their ODC analogs, due to a more expensive orbital update step; needed for the full orbital optimization. In the ODC-13 method, the third- and; fourth-order N-representability conditions are used for the density cumulant; and the correlated contribution :math:`\boldsymbol{\tau}`, respectively,; and the orbitals are variationally optimized. ; For most of the applications, it is recommended to use the ODC-12 method, which; provides an optimal balance between accuracy and efficiency, especially for; molecules with open-shell character. If highly accurate results are desired, a; combination of the ODC-13 method with a three-particle energy correction; [:math:`\mbox{ODC-13$(\lambda_3)$}`] can be used (see below).; For the detailed comparison of the quality of these methods, we refer; users to our :ref:`publications <intro:dctcitations>`. The DCT functional can be specified by the |dct__dct_functional| option. The; default choice is the ODC-12 functional. The DCT code can also be used to; compute the :math:`(\lambda_3)` energy correction that perturbatively accounts; for three-particle correlation effects, similarly to the (T) correction in coupled; cluster theory. Computation of the :math:`(\lambda_3)` correction can be; requested by setting the |dct__three_particle| option to PERTURBATIVE. A; combination of the ODC-13 functional with the :math:`(\lambda_3)` correction; [denoted as :math:`\mbox{ODC-13$(\lambda_3)$}`] has been shown to provide highly; accurate results for open-shell molecules near equilibrium geometries. At the present moment, all of the DCT methods support unrestricted reference; orbitals ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:7713,energy,energy,7713,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"h^{\rm FW}_{--}; \end{pmatrix}. The transformation ( :math:`U` ) is obtained from the solutions of the Dirac equation in kinetically balanced basis [Kutzelnigg:1984]_ treatment. ; In the X2C treatment, the positive-energy block of the Hamiltonian ( :math:`h^{FW}_{\rm ++}` ); is given by the sum; of a transformed kinetic (:math:`T_{\rm X2C}`) and potential energy ( :math:`V_{\rm X2C}` ) contribution.; Relativistic kinetic energy ( :math:`T_{\rm X2C}` ) and nuclear-electron interaction potential ( :math:`V_{\rm X2C}` ) is given in terms of non-relativisitc kinetic (:math:`T=\hat{p}^2/2`) energy and nuclear-electron interaction potential (:math:`V`), coupling matrix ( :math:`X`) and renormalization matrix ( :math:`R`). . .. math::; T_{\rm X2C} = R^{\dagger} (TX + {X}^{\dagger}T - {X}^{\dagger}TX ) R . .. math::; V_{\rm X2C} = R^{\dagger}(V + \frac{1}{4c^2} X^{\dagger}W^{\text{SF}}X) R. The coupling matrix ( :math:`{X} = C^{S} (C^{L})^{-1}` ) is obtained from the large (:math:`C^{\rm L}`) and small (:math:`C^{\rm S}`) components of the :math:`N` positive energy solutions of the Dirac equation.; The renormalization matrix ; :math:`{R}=S^{-1/2}(S^{-1/2}\tilde{S}S^{-1/2})^{-1/2}S^{1/2}`,; depends on the modified overlap matrix; :math:`\tilde{S}=S+\frac{1}{2c^2}X^{\dagger}TX`. The integrals :math:`W^{\rm SF}_{\mu\nu} = \langle {\chi_\mu} | \hat{p}\cdot (\hat{V}\hat{p}) |{\chi_\nu}\rangle` can be easily computed as derivatives of the nuclear-electron attraction integrals with respect to nuclear coordinates.; Existing nonrelativistic electronic structure code can be extended to include scalar relativistic effects; treated with the X2C method by replacing nonrelativistic kinetic and potential energy with the corresponding; X2C operators :math:`T_{X2C}` and :math:`V_{X2C}`. It is important to note that fully uncontracted basis in needed for the construction of X2C Hamiltonian as Foldy-Wouthuysen (FW [FW:1950]_) transformation is obtained in kinetically balance basis. Keywords; ~",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst:5434,energy,energy,5434,doc/sphinxman/source/relativistic.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst,1,['energy'],['energy']
Energy Efficiency,"harge/multiplicity through :samp:`molecule; {optional_molecule_name} \\{...\\}`), memory (through :samp:`memory; {value} {unit}`), computational method (through . If Cfour keywords; are specified with values that contradict the |PSIfour| input,; execution is halted. As an example, the input below is set up to fail in four ways:; contradictory specification of memory, multiplicity, computational; method, and derivative level. Note, though, that the ``cfour_units; angstrom`` setting is permissible, since it concurs with the value; implied in the molecule block. ::. memory 300 mb. molecule {; H; H 1 0.7; }. set basis 6-31g; set cfour_multiplicity 3 # clash with implicit singlet in molecule {} above; set cfour_units angstrom # no problem, consistent with molecule {} above; set cfour_memory_size 100000000 # clash with 300 mb above; set cfour_calc_level ccsd # clash with 'c4-scf' below; set cfour_deriv_level first # clash with energy() below (use gradient('c4-scf') to achieve this). energy('c4-scf'). * Specifying anything in |PSIfour| format (molecule, basis, options,; method call) starts building a ``*CFOUR(...)`` directive for the; ``ZMAT`` file. Since the contents of the ``cfour {...}`` block are; blindly appended to any input interpreted from |PSIfour| format, mixing; of |PSIfour| and Cfour input formats likely *will* give rise to multiple; ``*CFOUR(...)`` directives in the prospective ``ZMAT``, execution of; which *will* be trapped and halted. Proper uses for the ``cfour {...}``; block are for the sandwich mode, where the entire ``ZMAT`` is enclosed,; or for extra directives like ``%excite*``, which presently have no other; specification route. * Specifying the basis is perhaps the regulated piece of input. Since; basis set names differ between |PSIfour| and Cfour and it's not; practical to compare exponent-to-exponent, any input file with both; |mints__basis| and |cfour__cfour_basis| keywords present will halt. Once; a basis set has been requested through |mints__ba",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:36624,energy,energy,36624,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"hase of the; calculation to reduce the orbital error enough for DIIS to work; well. The level shift is controlled by the parameter; |scf__level_shift|, and it is turned off when the DIIS error is; smaller than |scf__level_shift_cutoff|. Reasonable values for; the shift and convergence threshold are 5.0 and 1e-2,; respectively.; SOSCF [Off by Default]; See :ref:`sec:soscf`. .. _`sec:scferi`:. ERI Algorithms; ~~~~~~~~~~~~~~. The key difficulty in the SCF procedure is treatment of the four-index ERI; contributions to the Fock Matrix. A number of algorithms are available in; |PSIfour| for these terms. The algorithm is selected by the |globals__scf_type|; keyword. Most consist of a single algorithm applied to; the construction of both the Coulomb and Exchange parts; of the Fock Matrix:. PK [:ref:`Default <table:conv_scf>`]; An out-of-core, presorted algorithm using exact ERIs. Quite fast for a; zero-error algorithm if enough memory is available. Integrals are; generated only once, and symmetry is utilized to reduce number of; integrals.; OUT_OF_CORE; An out-of-core, unsorted algorithm using exact ERIs. Overcomes the; memory bottleneck of the current PK algorithm. Integrals are generated; only once, and symmetry is utilized to reduce number of integrals.; DIRECT; A threaded, sieved, integral-direct algorithm, with full permutational; symmetry. This algorithm is brand new, but seems to be reasonably fast; up to 1500 basis functions, uses zero disk (if DF pre-iterations are; turned off), and can obtain significant; speedups with negligible error loss if |scf__ints_tolerance|; is set to 1.0E-8 or so.; DF [:ref:`Default <table:conv_scf>`]; A density-fitted algorithm designed for computations with thousands of; basis functions. This algorithm is highly optimized, and is threaded; with a mixture of parallel BLAS and OpenMP. Note that this algorithm; should use the -JKFIT series of auxiliary bases, *not* the -RI or; -MP2FIT bases. The default guess for auxiliary basis set should ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:28415,reduce,reduce,28415,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['reduce'],['reduce']
Energy Efficiency,"hat you use a fully; decontracted basis set. This can be done simply in the input by adding ""-decon"" to the ; name of the primary basis you want to use for the calculation as detailed in ; :ref:`Decontracted Basis Sets <sec:basisDecontracted>`. Publications resulting from the use ; of X2C should cite the following publication: [Verma:2015]_. Theory; ^^^^^^. X2C is based on exact decoupling of ; positive-energy ( :math:`h^{FW}_{\rm ++}`; ) and negative-energy (:math:`h^{FW}_{\rm --}` ); blocks of the Dirac Hamiltonian (:math:`h^{D}`). . .. math:: ; U^\dagger h^{\rm D} U = ; U^\dagger; \begin{pmatrix}; h_{LL} & h_{LS} \\; h_{SL} & h_{SS}; \end{pmatrix}; U; =; \begin{pmatrix}; h^{\rm FW}_{++} & 0 \\; 0 & h^{\rm FW}_{--}; \end{pmatrix}. The transformation ( :math:`U` ) is obtained from the solutions of the Dirac equation in kinetically balanced basis [Kutzelnigg:1984]_ treatment. ; In the X2C treatment, the positive-energy block of the Hamiltonian ( :math:`h^{FW}_{\rm ++}` ); is given by the sum; of a transformed kinetic (:math:`T_{\rm X2C}`) and potential energy ( :math:`V_{\rm X2C}` ) contribution.; Relativistic kinetic energy ( :math:`T_{\rm X2C}` ) and nuclear-electron interaction potential ( :math:`V_{\rm X2C}` ) is given in terms of non-relativisitc kinetic (:math:`T=\hat{p}^2/2`) energy and nuclear-electron interaction potential (:math:`V`), coupling matrix ( :math:`X`) and renormalization matrix ( :math:`R`). . .. math::; T_{\rm X2C} = R^{\dagger} (TX + {X}^{\dagger}T - {X}^{\dagger}TX ) R . .. math::; V_{\rm X2C} = R^{\dagger}(V + \frac{1}{4c^2} X^{\dagger}W^{\text{SF}}X) R. The coupling matrix ( :math:`{X} = C^{S} (C^{L})^{-1}` ) is obtained from the large (:math:`C^{\rm L}`) and small (:math:`C^{\rm S}`) components of the :math:`N` positive energy solutions of the Dirac equation.; The renormalization matrix ; :math:`{R}=S^{-1/2}(S^{-1/2}\tilde{S}S^{-1/2})^{-1/2}S^{1/2}`,; depends on the modified overlap matrix; :math:`\tilde{S}=S+\frac{1}{2c^2}X^{\dagger}TX`. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst:4582,energy,energy,4582,doc/sphinxman/source/relativistic.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst,2,['energy'],['energy']
Energy Efficiency,"hbf{r}'|\omega\right) + \int d\omega d\mathbf{r}_1 d\mathbf{r}_2 \chi_0\left(\mathbf{r},\mathbf{r}_1|\omega\right)\left[\frac{1}{r_{12}} + f_{xc}\left(\mathbf{r}_1,\mathbf{r}_2,\omega\right)\right]\chi\left(\mathbf{r}_2,\mathbf{r}'|\omega\right). The :math:`\delta_{HF}^{(2)}` and :math:`\delta_{HF}^{(3)}` terms take into; account higher-order induction effects and are included in the definition; of SAPT terms. They are computed from the Hartree--Fock supermolecular interaction energy; :math:`E_{int}^{HF}` and are only available in dimer-centered basis SAPT; computations, which is the default (see below for monomer-centered basis ; computations). They are defined by:. .. math:: \delta_{HF}^{(2)} = E_{int}^{HF} - (E_{elst}^{(10)} + E_{exch}^{(10)} ; + E_{ind,resp}^{(20)} + E_{exch-ind,resp}^{(20)}); :label: dHF2. .. math:: \delta_{HF}^{(3)} = \delta_{HF}^{(2)} - (E_{exch-ind}^{(30)} ; + E_{ind,resp}^{(30)}); :label: dHF3. Additionally, high-order coupling between induction and dispersion can be ; extracted from the supermolecular MP2 interaction energy:. .. math:: \delta_{MP2}^{(2)} = E_{int}^{MP2, corr} - (E_{elst}^{(12)} +; E_{exch}^{(11)} + E_{exch}^{(12)} + \; ^{t}\!E_{ind}^{(22)}; + \; ^{t}\!E_{exch-ind}^{(22)} + E_{disp}^{(20)} + E_{exch-disp}^{(20)}). .. math:: \delta_{MP2}^{(3)} = \delta_{MP2}^{(2)} - (E_{ind-disp}^{(30)} + E_{exch-ind-disp}^{(30)}). where :math:`E_{int}^{MP2, corr}` is the correlation part of the supermolecular MP2 ; interaction energy. :math:`\delta_{MP2}^{(2)}` and :math:`\delta_{MP2}^{(3)}` also improve the ; description of electrostatically dominated complexes. :math:`\delta_{MP2}^{(2)}`; can be applied to SAPT2+ or SAPT2+(3) energies whereas :math:`\delta_{MP2}^{(3)}` ; should be applied to SAPT2+3 energies. A thorough analysis of the performance of these truncations of closed-shell SAPT can be; found in a review by Hohenstein and Sherrill [Hohenstein:2012:WIREs]_,; and a systematic study of the accuracy of these truncations (with and ; w",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:8959,energy,energy,8959,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"he Hartree--Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(HF). The Hartree--Fock localized energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AB(HF). The Hartree--Fock localized energy [E_h] of subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY C. The Hartree--Fock energy [E_h] of subsystem C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY. Dispersion-classified coupled-cluster-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT ELST13,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2+(3). .. psivar:: SAPT IND30,R ENERGY; SAPT IND-DISP30 ENERGY; SAPT EXCH-IND30,R ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT EXC",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:52619,energy,energy,52619,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"he input file name and output file name on the the command line.; The syntax is:. >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any "".in"" or "".dat"" extension by "".out""). Sample Input Files; ==================. Below, we will provide a few simple input files as examples. A large ; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the :source:`samples` directory. Running a Basic Hartree--Fock Calculation; =========================================. In our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). Th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:3360,energy,energy,3360,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"he maximum number of SOSCF microiterations per macroiteration. |scf__soscf_conv|: the relative convergence tolerance of the SOSCF microiterations. |scf__soscf_print|: option to print the microiterations or not. .. _`sec:scfstability_doc`:. Stability Analysis; ~~~~~~~~~~~~~~~~~~. SCF algorithms attempt to minimize the gradient of the energy with respect; to orbital variation parameters. At convergence, the gradient should be approximately zero; given a convergence criterion. Although this is enough to make sure the SCF converged to a; stationary point, this is not a sufficient condition for a minimal SCF solution. It may be; a saddle point or a maximum. To ensure that a minimum has been found, the electronic Hessian, *i.e.* the matrix of second; derivatives of the energy with respect to orbital variation parameters, must be computed.; If one or more eigenvalues of the electronic Hessian are negative, the SCF solution is not a minimum.; In that case, orbital parameters can be varied along the lowest Hessian eigenvector to lower the energy. Orbital variation parameters are usually constrained. For example, in RHF the; spatial parts of the :math:`\alpha` and :math:`\beta` orbitals are the same. In; UHF, the orbital coefficients are usually constrained to be real. A stability analysis; can check whether a lower SCF solution exists while respecting the constraints of the original; solution; this is an internal instability. If one or more constraints have to be relaxed to reach; a lower-energy solution, there is an external instability. In |PSIfour|, the only external instability; that can be checked at present is the RHF :math:`\rightarrow` UHF one. Currently, two algorithms exist in |PSIfour| for stability analysis: the original; Direct Inversion and the newly implemented Davidson algorithms. We will first describe; options common to both algorithms. To request a stability analysis at the end of the SCF,; set the keyword |scf__stability_analysis|. Value ``CHECK`` only co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:45907,energy,energy,45907,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"he methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain :math:`{\cal{O}}(o^2v^4)` complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see [Wennmohs:2008:217]_\. What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; |Psifour|. We begin with the CISD wave function. .. math::; :label: CIwfn. | \Psi \rangle = | \Psi_0 \rangle + \sum_i^{occ} \sum_a^{vir} t_i^a | \Psi_i^a\rangle + \frac{1}{4}\sum_{ij}^{occ} \sum_{ab}^{vir} t_{ij}^{ab} | \Psi_{ij}^{ab}\rangle,. where we have chosen the intermediate normalization, :math:`\langle \Psi_0; | \Psi \rangle = 1`. The CISD correlation energy is given by. .. math::; :label: CIenergy; ; E_c = \langle \Psi_0 | \hat{H} - E_0 | \Psi \rangle,. and the amplitudes can be determined by the solution to the coupled set of; equations:. .. math::; :label: CIeqns; ; 0 &= \langle \Psi_{ij}^{ab} | \hat{H} - E_0 - E_c | \Psi \rangle, \\; 0 &= \langle \Psi_{i}^{a} | \hat{H} - E_0 - E_c | \Psi \rangle. The CISD method is not size-extensive, but this problem can be overcome by; making very simple modifications to the amplitude equations. We replace; the correlation energy, :math:`E_c`, with generalized shifts for the; doubles and singles equations, :math:`\Delta_{ij}` and :math:`\Delta_i`:. .. math::; :label: CEPAeqns; ; 0 &= \langle \Psi_{ij}^{ab} | \hat{H} - E_0 - \Delta_{ij} | \Psi \rangle, \\; 0 &= \langle \Psi_{i}^{a} | \hat{H} - E_0 - \Delta_i | \Psi \rangle. These shifts approximate the effects of triple and quadruple excitations.; The values for :math:`\Delta_{ij}` and :math:`\Delta_i` used in several; coupled-pair methods are",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:9789,energy,energy,9789,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"he orbital-optimized retaining-the-excitation-degree |MollerPlesset|; hybrid perturbation theory level. .. psivar:: OREMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized retaining-the-excitation-degree; |MollerPlesset| hybrid perturbation theory level. .. psivar:: ONE-ELECTRON ENERGY. The one-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{1e^-}` in Eq. :eq:`SCFterms`. .. psivar:: PCM POLARIZATION ENERGY. The energy contribution [E_h] from the polarizable continuum model for solvation. .. psivar:: DD SOLVATION ENERGY. The energy contribution [Eh] from continuum solvation models based on a; domain-decomposition ansatz. .. psivar:: PE ENERGY. The energy contribution [E_h] from the polarizable embedding model for solvation. .. psivar:: QCISD TOTAL ENERGY; QCISD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles level; of theory. .. psivar:: QCISD(T) TOTAL ENERGY; QCISD(T) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. .. psivar:: QCISD(T) CORRECTION ENERGY. The quadratic configuration interaction singles and doubles perturbative; triples correction [E_h]. .. psivar:: REMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the retaining-the-excitation-degree |MollerPlesset| hybrid perturbation; theory level. .. psivar:: SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; requested SAPT level of theory. The sum of these four components yields; :psiv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:48683,energy,energy,48683,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"he second; list of minimum number of calculations which will actually be run. ::. Naive listing of computations required.; scf / aug-cc-pvqz for SCF TOTAL ENERGY; mp2 / aug-cc-pvtz for MP2 CORRELATION ENERGY; mp2 / aug-cc-pvqz for MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz for CCSD(T) CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz for CCSD(T) CORRELATION ENERGY; mp2 / aug-cc-pvdz for MP2 CORRELATION ENERGY; mp2 / aug-cc-pvtz for MP2 CORRELATION ENERGY. Enlightened listing of computations required.; mp2 / aug-cc-pvqz for MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz for CCSD(T) CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz for CCSD(T) CORRELATION ENERGY. At the end of a cbs() job is printed a summary section like the one below. First,; in the components section, are listed the results for each model chemistry available, whether; required for the cbs job (*) or not. Next, in the stages section, are listed the results for; each extrapolation. The energies of this section must be dotted with the weightings in column Wt; to get the total cbs energy. Finally, in the CBS section, are listed the results for each stage; of the cbs procedure. The stage energies of this section sum outright to the total cbs energy. ::. ==> Components <==; ; ----------------------------------------------------------------------------------; Method / Basis Rqd Energy [H] Variable; ----------------------------------------------------------------------------------; scf / aug-cc-pvqz * -1.11916375 SCF TOTAL ENERGY; mp2 / aug-cc-pvqz * -0.03407997 MP2 CORRELATION ENERGY; scf / aug-cc-pvdz -1.11662884 SCF TOTAL ENERGY; mp2 / aug-cc-pvdz * -0.02881480 MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz * -0.03893812 CCSD(T) CORRELATION ENERGY; ccsd / aug-cc-pvdz -0.03893812 CCSD CORRELATION ENERGY; scf / aug-cc-pvtz -1.11881134 SCF TOTAL ENERGY; mp2 / aug-cc-pvtz * -0.03288936 MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz * -0.04201004 CCSD(T) CORRELATION ENERGY; ccsd / aug-cc-pvtz -0.04201004 CCSD CORRELATION ENE",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst:5904,energy,energy,5904,doc/sphinxman/source/cbs.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst,1,['energy'],['energy']
Energy Efficiency,"he site and the column index; referencing the multipole component. Both indices are zero based,; and the Qlm components of the multipoles are ordered as Q00, Q10,; Q11c, Q11s, Q20, Q21c, Q21s, Q22c, Q22s, etc. .. psivar:: DMA TOTAL MULTIPOLES. Distributed multipoles as a single row, whose columns are the total; multipoles, translated to |gdma__gdma_origin|, and summed. .. psivar:: DMRG-SCF TOTAL ENERGY. The total DMRG total electonic energy [E_h]. Not unique because oribital spaces vary. .. psivar:: DMRG-CASPT2 TOTAL ENERGY. The total DMRG plus CASPT2 total electonic energy [E_h] . Not unique because orbital spaces vary. .. psivar:: EFP DISP ENERGY; EFP ELST ENERGY; EFP EXCH ENERGY; EFP IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for EFP/EFP; computations. The sum of these four components yields; :psivar:`EFP TOTAL ENERGY`. .. psivar:: EFP TOTAL ENERGY. The total electronic interaction energy [E_h] for EFP/EFP computations. .. psivar:: EFP TORQUE. The torque, not gradient for EFP/EFP computations. .. psivar:: ENTHALPY. Total enthalpy H [E_h] at given temperature. .. psivar:: ENTHALPY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the enthalpy at given temperature. .. psivar:: ESP AT CENTER n. Property of electrostatic potential [E_h / e] at location, usually atom center, n. .. psivar:: FCI TOTAL ENERGY; FCI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the full configuration interaction level of theory. .. psivar:: GIBBS FREE ENERGY. Total Gibbs free energy [E_h], free enthalpy at given temperature. .. psivar:: GIBBS FREE ENERGY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the free enthalpy at given temperature. .. psivar:: GRID ELECTRONS TOTAL; GRID ELECTRONS ALPHA; GRID ELECTRONS BETA. The number of electrons integrated",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:34511,energy,energy,34511,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"he use ; of X2C should cite the following publication: [Verma:2015]_. Theory; ^^^^^^. X2C is based on exact decoupling of ; positive-energy ( :math:`h^{FW}_{\rm ++}`; ) and negative-energy (:math:`h^{FW}_{\rm --}` ); blocks of the Dirac Hamiltonian (:math:`h^{D}`). . .. math:: ; U^\dagger h^{\rm D} U = ; U^\dagger; \begin{pmatrix}; h_{LL} & h_{LS} \\; h_{SL} & h_{SS}; \end{pmatrix}; U; =; \begin{pmatrix}; h^{\rm FW}_{++} & 0 \\; 0 & h^{\rm FW}_{--}; \end{pmatrix}. The transformation ( :math:`U` ) is obtained from the solutions of the Dirac equation in kinetically balanced basis [Kutzelnigg:1984]_ treatment. ; In the X2C treatment, the positive-energy block of the Hamiltonian ( :math:`h^{FW}_{\rm ++}` ); is given by the sum; of a transformed kinetic (:math:`T_{\rm X2C}`) and potential energy ( :math:`V_{\rm X2C}` ) contribution.; Relativistic kinetic energy ( :math:`T_{\rm X2C}` ) and nuclear-electron interaction potential ( :math:`V_{\rm X2C}` ) is given in terms of non-relativisitc kinetic (:math:`T=\hat{p}^2/2`) energy and nuclear-electron interaction potential (:math:`V`), coupling matrix ( :math:`X`) and renormalization matrix ( :math:`R`). . .. math::; T_{\rm X2C} = R^{\dagger} (TX + {X}^{\dagger}T - {X}^{\dagger}TX ) R . .. math::; V_{\rm X2C} = R^{\dagger}(V + \frac{1}{4c^2} X^{\dagger}W^{\text{SF}}X) R. The coupling matrix ( :math:`{X} = C^{S} (C^{L})^{-1}` ) is obtained from the large (:math:`C^{\rm L}`) and small (:math:`C^{\rm S}`) components of the :math:`N` positive energy solutions of the Dirac equation.; The renormalization matrix ; :math:`{R}=S^{-1/2}(S^{-1/2}\tilde{S}S^{-1/2})^{-1/2}S^{1/2}`,; depends on the modified overlap matrix; :math:`\tilde{S}=S+\frac{1}{2c^2}X^{\dagger}TX`. The integrals :math:`W^{\rm SF}_{\mu\nu} = \langle {\chi_\mu} | \hat{p}\cdot (\hat{V}\hat{p}) |{\chi_\nu}\rangle` can be easily computed as derivatives of the nuclear-electron attraction integrals with respect to nuclear coordinates.; Existing nonrelativistic electronic str",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst:4792,energy,energy,4792,doc/sphinxman/source/relativistic.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst,2,['energy'],['energy']
Energy Efficiency,"heaper that CCSD computationally, but it retains the; :math:`{\cal{O}}(o^2v^4)` complexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7117,energy,energy,7117,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"hen used with non-diffuse orbital basis sets, since orbital and density overlaps decay slower with diffuse functions.; LinK is especially powerful when combined with density-matrix based ERI screening (set |globals__screening| to ``DENSITY``) and incremental Fock builds (set |scf__incfock| to ``TRUE``), which decrease the number of significant two-electron integrals to calculate. To control the LinK algorithm, here are the list of options provided.; ; |scf__linK_ints_tolerance|: The integral screening tolerance used for sparsity-prep in the LinK algorithm. Defaults to the |scf__ints_tolerance| option. .. index::; single: SOSCF. .. _`sec:soscf`:. Second-order Convergence; ~~~~~~~~~~~~~~~~~~~~~~~~. Second-order convergence takes into account both the gradient and Hessian to; take a full Newton step with respect to the orbital parameters. This results in; quadratic convergence with respect to density for SCF methods. For cases where; normal acceleration methods either fail or take many iterations to converge,; second-order can reduce the total time to solution. Solving second-order (SO) methods exactly would require an inversion of the; orbital Hessian (an expensive :math:`\mathbb{N}^6` operation); however, these; equations are normally solved iteratively where each iteration costs the same; as a normal Fock build (:math:`\mathbb{N}^4`). The overall SOSCF operation is; thus broken down into micro- and macroiterations where the microiterations; refer to solving the SOSCF equations and macroiterations are the construction; of a new Fock matrix based on the orbitals from a SOSCF step. SOSCF requires that all elements of the gradient to be less than one before the; method is valid. To this end, pre-SOSCF SCF iterations use normal; gradient-based extrapolation procedures (*e.g.*, DIIS) until the gradient; conditions are met. Note that while the total number of macroiterations will be; less for SOSCF than gradient-based convergence acceleration, the cost of solving; the micro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:43367,reduce,reduce,43367,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['reduce'],['reduce']
Energy Efficiency,"hen using ROHF-CCSDT(Q), MRCC will compute and report two variants:; CCSDT(Q)/A and CCSDT(Q)/B. [Kallay:2008:144101]_ |PSIfour| will save both energies but will use; the CCSDT(Q)/B as the CCSDT(Q) energy. CCSDT(Q)/B has been found to be; more robust by Martin. [Martin:2014:785]_. .. include:: mrcc_table_energy.rst. Frozen-core approximation is also supported in the MRCC interface.; To optimize CH\ :sub:`4` with CCSDT freezing the 1\ *s* on carbon, run::. molecule H2O {; O; H 1 r; H 1 r 2 104.5; ; r = 1.0; }; ; set {; basis cc-pVDZ; freeze_core true; }; ; optimize('ccsdt'). Interface Details; ~~~~~~~~~~~~~~~~~. .. _`table:mrcc__mrcc_method`:. .. table:: MRCC methods . +---------------------+--------------+-------------------------------------------------------------+; | |mrcc__mrcc_method| | Method | Description | ; +=====================+==============+=============================================================+ ; | 1 | CC | |; +---------------------+--------------+-------------------------------------------------------------+; | 2 | CC(n-1)[n] | |; +---------------------+--------------+-------------------------------------------------------------+; | 3 | CC(n-1)(n) | (CC(n-1)[n] energy is also calculated) | ; +---------------------+--------------+-------------------------------------------------------------+; | 4 | CC(n-1)(n)_L | (CC(n-1)[n] and CC(n-1)(n) energies are also calculated) | ; +---------------------+--------------+-------------------------------------------------------------+; | 5 | CC(n)-1a | |; +---------------------+--------------+-------------------------------------------------------------+; | 6 | CC(n)-1b | |; +---------------------+--------------+-------------------------------------------------------------+; | 7 | CCn | |; +---------------------+--------------+-------------------------------------------------------------+; | 8 | CC(n)-3 | |; +---------------------+--------------+-------------------------------------------------------------+. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst:4897,energy,energy,4897,doc/sphinxman/source/mrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst,1,['energy'],['energy']
Energy Efficiency,"hf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228310,energy,energy,228310,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"hi_0 \rangle`. The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. MP2 is a less; expensive alternative giving results similar to those of CISD for small; molecules, but the quality of MP2 does not degrade for larger molecules.; Coupled-cluster singles and doubles (CCSD) is another size-extensive; alternative; it is only slightly more costly computationally than CISD,; but it typically provides significantly more accurate results. The CI code in |PSIfour| is described in detail in ; [Sherrill:1999:CI]_. For the reasons stated above, the CI code in; |PSIfour| is not optimized for CISD computations, and it uses data structures; that are particularly inefficient for CISD and may result in the program; running out of memory and crashing for CISD except on very small molecules.; Instead, DETCI was designed to be efficient; in handling more highly correlated CI wavefunctions that can be helpful in more ; challenging cases such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]_. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]_. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CI's. A RAS CI selects determinants for the; model space as those which have no more than :math:`n` holes in the lowest set; of orbitals (called RAS I) and no more than :math:`m` electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the RAS CI. The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this cap",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:3497,efficient,efficient,3497,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['efficient'],['efficient']
Energy Efficiency,"hod': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:140934,energy,energy,140934,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"hod': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:142952,energy,energy,142952,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"hod': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:275036,energy,energy,275036,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"hod': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:281406,energy,energy,281406,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"hods in |PSIfour| are accessed through Python functions, and; most important quantities are available as PSI variables, it is straightforward; to create aliases to commonly run calculations or to define hybrid methods. The; :source:`psi4/driver/aliases.py` file is intended for editing by the user for; this purpose. As an example, the MP2.5 method; (which admittedly is already built in to |PSIfour|); is the average of MP2 and MP3. The latter is; available through the arbitrary order MPn code and returns all lower energies; along with it in PSI variables. The following is basic code that will compute; and return the MP2.5 energy. ::. def run_mp2_5(name, **kwargs):; ; energy('mp3', **kwargs); e_scf = psi4.get_variable('SCF TOTAL ENERGY'); ce_mp2 = psi4.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = psi4.get_variable('MP3 CORRELATION ENERGY'); ; ce_mp25 = 0.5 * (ce_mp2 + ce_mp3); e_mp25 = e_scf + ce_mp25; ; print """""" MP2.5 total energy: %16.8f\n"""""" % (e_mp25); print """""" MP2.5 correlation energy: %16.8f\n"""""" % (ce_mp25); ; return e_mp25. Compare the above to the method that resides in :source:`psi4/driver/aliases.py`.; The rationale for the changes is indicated in the comments below. ::. def run_mp2_5(name, **kwargs):; lowername = name.lower() # handy variable with name keyword in lowercase; kwargs = kwargs_lower(kwargs) # removes case sensitivity in keyword names; ; # Run detci calculation and collect conventional quantities; energy('mp3', **kwargs); e_scf = psi4.get_variable('SCF TOTAL ENERGY'); ce_mp2 = psi4.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = psi4.get_variable('MP3 CORRELATION ENERGY'); e_mp2 = e_scf + ce_mp2 # reform mp2 and mp3 total energies for printing; e_mp3 = e_scf + ce_mp3; ; # Compute quantities particular to MP2.5; ce_mp25 = 0.5 * (ce_mp2 + ce_mp3); e_mp25 = e_scf + ce_mp25; psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25) # add new method's important results; psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25) # to PSI variable repository;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst:2487,energy,energy,2487,doc/sphinxman/source/quickaddalias.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst,1,['energy'],['energy']
Energy Efficiency,"hods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. :ref:`sec:threading`).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease. |PSIfour| is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes |PSIfour| incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in |PSIfour|, with many functionals available. Density fitting is ubiquitous in; |PSIfour|, leading to some of the most efficient MP2 and CCSD(T) code available.; |PSIfour| also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, |PSIfour| gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory. In this section, we provide an overview of some of the features of; |PSIfour| along with the prerequisite steps for running calculations.; Sec. :ref:`Tutorial <sec:tutorial>` provides a brief tutorial to help new users; get started. Section :ref:`Psithon <sec:psithonInput>` offers further details into the; structure of |PSIfour| input files and how Python can be mixed with; quantum chemistry directives in |PSIf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:2222,efficient,efficient,2222,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['efficient'],['efficient']
Energy Efficiency,"hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index::; single: DLPNO-MP2. .. _`sec:dlpnomp2`:. DLPNO-MP2: Domain-Based Local Pair Natural Orbital MP2; ======================================================. .. codeauthor:: Zach Glick ; .. sectionauthor:: Zach Glick. *Module:* :ref:`Keywords <apdx:dlpno>`, :ref:`PSI Variables <apdx:dlpno_psivar>`, :source:`DLPNOMP2 <psi4/src/psi4/dlpno>`. Introduction; ------------. The steep polynomial scaling (in both time and memory) of post-HF dynamic; correlation methods prohibits calculations on large systems, even for efficient; codes like |PSIfours| :ref:`DF-MP2 <sec:dfmp2>`. This poor scaling is in part; due to the use of canonical HF orbitals, which are entirely delocalized across; the molecule. Canonical orbitals are commonly used because of mathematical; convenience. Another possible choice is localized orbitals. Any two orbitals; localized to separate regions of a molecule can be treated as non-interacting; to a good approximation. Thus, when working with localized orbitals, the number; of interacting orbital pairs (and triples, quadruples, etc.) scales linearly; with system size. If carefully implemented, programs that exploit this sparsity; can be made to scale linearly (or else with lower order than their canonical; counterparts) at the cost of of modest, controllable errors. This is the; defining insight of DLPNO-MP2 and all related ""local correlation"" methods. The DLPNO-MP2 code is a linear-scaling alternative to the :ref:`DF-MP2 <sec:dfmp2>`; co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:1582,efficient,efficient,1582,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,1,['efficient'],['efficient']
Energy Efficiency,"hout even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:intercalls`:. Function Intercalls; ===================. This topic is in transition. As of 1.0, the functionality provided by; ``cp()`` and ``cbs()`` should not be accessed directly. Instead, use the; ``cp`` kwarg and/or the extended method syntax like; ``'mp3/aug-cc-pv[dt]z'`` to ``energy()``, ``opt()``, *etc.*, respectively. For many of the |PSIfour| Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). .. _`table:intercalls`:. .. table:: Permitted nesting of Psithon functions. +-------------------------+-----+-----+-----+-----+--------+; | Caller | Callee |; +-------------------------+-----+-----+-----+-----+--------+; | | cp | db | opt | cbs | energy |; +=========================+=====+=====+=====+=====+========+; | :ref:`sec:cp()` | | --- | Y | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:db()` | --- | | Y | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:opt()` | --- | --- | | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:cbs()` | --- | --- | --- | | Y |; +-------------------------+-----+-----+-----+--",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst:1642,energy,energy,1642,doc/sphinxman/source/intercalls.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst,1,['energy'],['energy']
Energy Efficiency,"hove variables into global space; for k, v in dfmp2_wfn.variables().items():; core.set_variable(k, v). The function should return the wavefunction, except for rare cases like EFP where no wavefunction available.; For now, ``CURRENT ENERGY`` will be set by; :py:func:`~psi4.driver.energy`, etc. In future, this will be extracted from the wavefunction. ::. # return highest or most prominent wavefunction (like dimer for SAPT); return fnocc_wfn. Managed Methods; ---------------. There are several conditions when a method and derivative combination should be *managed*:. * when functionality overlaps between modules, a pattern is needed to; access each route through the code;. * when functionality doesn't overlap completely, a pattern is needed to apportion defaulting among; the modules, taking into account reference (RHF/UHF/ROHF), calc type (CONV/DF/CD), and possibly; |globals__freeze_core| state (AE/FC). * for higher-level derivatives, when, say, gradient functionality for mtd+ref+type+fcae doesn't; exactly match energy functionality, a pattern is needed to decide analytic vs. finite difference. * when default type is not available for a method (e.g., CCD governed by |globals__cc_type| that; defaults to ``CONV`` but only ``DF`` and ``CD`` CCD is available), an informative error message is needed. Managed methods handle these cases through the addition of a new; keyword |globals__qc_module| and a set of type keywords analogous to; |globals__mp2_type|: |globals__mp_type|,; |globals__ci_type|, |globals__cc_type|, which can have values ``CONV``,; ``DF``, and ``CD``. These are all *global* keywords, as their values are; shared among modules rather than (or in addition to) being used internally; by the module). We're sticking with |globals__scf_type| and; |globals__mp2_type| defaulting to ``DF``, while most everything higher defaults; to ``CONV``. (Exceptions are MP2.5 and MP3 that default to ``DF``.); In :source:`psi4/driver/procrouting/proc_table.py`, a managed method calls ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:5891,energy,energy,5891,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,1,['energy'],['energy']
Energy Efficiency,"i A. Burns, Daniel G. A. Smith and Peter Kraus; .. sectionauthor:: Lori A. Burns and Peter Kraus. The :py:func:`psi4.driver.cbs` function described below is; powerful but complicated, requiring many options. For most common; calculations, a shorthand can be accessed directly though; :py:func:`psi4.driver.energy`, :py:func:`psi4.driver.gradient`, *etc.* For example,; a MP2 single-point DT extrapolation can be accessed through the first item; below more conveniently than the equivalent second or third items. * ``energy('mp2/cc-pv[dt]z')``. * ``energy(""cbs"", corl_wfn='mp2', corl_basis='cc-pv[dt]z')``. * ``energy(""cbs"", cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": ""corl_xtpl_helgaker_2""}])``. .. caution:: In |PSIfour| previous to Spring 2022 and v1.6, calling certain; cbs-related functions like the above looked like ::. energy(cbs, corl_wfn='mp2', corl_basis='cc-pv[dt]z'). energy(cbs, cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": corl_xtpl_helgaker_2}]). The difference is that the main function; :py:func:`psi4.driver.cbs` and extrapolation schemes like; :py:func:`psi4.driver.driver_cbs_helper.xtpl_highest_1` and; :py:func:`psi4.driver.driver_cbs_helper.scf_xtpl_helgaker_2` and composite; aliases like :py:func:`psi4.driver.aliases.sherrill_gold_standard`; and :py:func:`psi4.driver.aliases.allen_focal_point` in the old way; passed the Python function directly, whereas the new way uses the; string of the function name. A CCSD(T) DT coupled-cluster correction atop a TQ MP2 extrapolation; geometry optimization can also be accessed through the first item below more; conveniently than the equivalent second and third items. * ``optimize('mp2/cc-pv[tq]z + D:ccsd(t)/cc-pvdz')``. * ``optimize(""cbs"", corl_wfn='mp2', corl_basis='cc-pv[tq]z', delta_wfn='ccsd(t)', delta_basis='cc-pvdz')``. * ``optimize(""cbs"", cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvqz""}, {""wfn"": ""mp2"", ""basis"": ""c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst:2222,energy,energy,2222,doc/sphinxman/source/cbs.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst,1,['energy'],['energy']
Energy Efficiency,"i4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'dri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:50062,energy,energy,50062,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"i4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:51454,energy,energy,51454,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"i4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'dri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:55644,energy,energy,55644,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"i4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'referenc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:57036,energy,energy,57036,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"i4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172178,energy,energy,172178,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"i4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:484069,energy,energy,484069,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"i4.driver.energy`, etc. in an input; file by :py:func:`~psi4.core.clean_variables()`.; So if you run in a single input file a STO-3G FCI followed by a; aug-cc-pVQZ SCF followed by a :py:func:`~psi4.core.print_variables` command, the; last will include :psivar:`SCF TOTAL ENERGY` but not; :psivar:`FCI TOTAL ENERGY`.; The entire dictionary of PSI variables can be obtained through; :py:func:`~psi4.core.get_variables`. .. _`sec:returnvals`:. Return Values; =============. Most of the usual user computation functions (*i.e.*,; :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, and; :py:func:`~psi4.driver.frequency`) return simply the current total energy.; Consult the descriptions of other functions in :ref:`sec:psithonFunc` for; what quantities they return and for what data structures they make; available for post-processing. Many users need only deal with the simple return; form for the computation functions. ::. # E is total energy float; # G is gradient array; # H is hessian array; # wfn is class instance with many computational details. # simple returns; E = energy(...); E = optimize(...); E = frequency(...); G = gradient(...) # used by optimize(); H = hessian(...) # used by frequency(). For more elaborate post-processing of computations, adding; ``return_wfn=True`` keyword argument additionally returns; :py:class:`~psi4.core.Wavefunction`. ::. # power user returns; E, wfn = energy(..., return_wfn=True); E, wfn = optimize(..., return_wfn=True); E, wfn = frequency(..., return_wfn=True); G, wfn = gradient(..., return_wfn=True) # used by optimize(); H, wfn = hessian(..., return_wfn=True) # used by frequency(). # print gradient array and its rms; wfn.gradient.print_out(); print wfn.gradient().rms(). # format output for other programs; molden(wfn, 'mycalc.molden'). # access array in another format; np.array(wfn.hessian()). .. _`sec:loops`:. Loops; =====. Python provides many control structures, any of which can be used within |PSIfour|; input files. For examp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:11366,energy,energy,11366,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"i4``. .. _`faq:runordinaryexe`:. How to run Psi4 as executable after compilation; -----------------------------------------------. Substituting the full installation directory :samp:`{prefix}` and a; suitable scratch directory, issue the following commands directly in your; terminal or place them into your ""rc"" file and open a new terminal. (To; use a staged installation directory, substitute; :samp:`{objdir}/stage` for :samp:`{prefix}`.). .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; setenv PATH {prefix}/bin:$PATH; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/directory/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; export PATH={prefix}/bin:$PATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. Run |PSIfour|. ::. >>> cat sample.in; molecule {; He; }; energy('hf/cc-pvdz'); compare_values(-2.85518839, get_variable('current energy'), 5, 'SCF E'); >>> psi4 sample.in; SCF E.............................................................PASSED. .. _`faq:modulenotfounderror`:. How to solve ``ModuleNotFoundError: No module named 'psi4'``; ------------------------------------------------------------. You're using |PSIfour| in PsiAPI mode (``python input.py`` where; ``input.py`` contains ``import psi4``) but the Python interpreter; can't find the |PSIfour| Python module. Follow the directions at; :ref:`faq:psi4psiapipath`. .. _`faq:psi4psiapipath`:. How to configure paths for PsiAPI; ---------------------------------. If you know the location of the |PSIfour| executable (``bin/psi4``); for Psithon mode and want to know the corresponding location to add to; :envvar:`PYTHONPATH` for PsiAPI mode, execute ``psi4 --psiapi``. It; will return bash commands to set :envvar:`PATH` (for correct python; interpreter) and :envvar:`PYTHONPATH` (to find psi4 module) correctly,; after which ``import psi4`` will work. .. code-block:: ba",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:27884,energy,energy,27884,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['energy'],['energy']
Energy Efficiency,"i\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). * To scan the potential energy surface without the |optking__ranged_dihedral| keyword, a zmatrix; can be used. .. warning:: ; Rotating dihedrals in large increments without allowing the molecule to relax; in between increments can lead to unphysical geometries with overlapping functional groups in larger molecules,; which may prevent successful constrained optimzations. Furthermore, such a relaxed scan of the PES does; not always procude a result close to an IRC, or even a reaction path along which the energy changes in a; continuous way. .. code-block:: none. molecule hooh {; 0 1 ; H ; O 1 0.95; O 2 1.39 1 103 ; H 3 0.95 2 103 1 D . D = 99. units ang ; }. set {; basis cc-pvdz; intrafrag_step_limit 0.1 ; frozen_dihedral ("" 1 2 3 4 ""); }. dihedrals = [100, 110, 120, 130, 140, 150]; PES = []. for phi in dihedrals:; hooh.D = phi ; E = optimize('scf'); PES.append((phi, E)). print(""\n\tcc-pVDZ SCF energy as a function of phi\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). Multi-Fragment Optimizations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^. .. _DimerSection:. In previous versions of optking, the metric for connecting atoms was increased until all atoms; were connected. This is the current behavior for |optking__frag_mode| `single`.; Setting |optking__frag_mode| to `multi` will now add a special; set of intermolecular coordinates between fragments - internally referred to as DimerFrag; coordinates (see `here <DimerIntro_>` for the brief description). ; For each pair of molecular fragments, a set of up to 3 reference points; are chosen on each fragment. Each reference point will be either an atom or a linear combination; of positions of atoms within that fragment. Stretches, bends, and dihedral angles between the two ; fragments will be created using these reference points. See ; :ref:`Dimer coordinate table <table:DimerFrag>` for how reference points are created.; For a set of three di",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:9460,energy,energy,9460,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['energy'],['energy']
Energy Efficiency,"i_{\lambda} (\vec r_2); \phi_{\sigma} (\vec r_2); \ \mathrm{d}^3 r_1; \ \mathrm{d}^3 r_2. The MO coefficients are found as the generalized eigenvectors of the Fock Matrix,. .. math:: F^\alpha C^\alpha = S C^\alpha \epsilon^\alpha. The eigenvalues :math:`\epsilon` are the orbital energies, and the metric matrix; :math:`S` is the AO-basis overlap matrix. .. math:: S_{\mu\nu} = (\mu | \nu ). Note that the Fock Matrix depends on the density (both alpha and beta), and; therefore the orbitals. Because of this, SCF is a nonlinear procedure, which; terminates when the generating orbitals are self-consistent with the Fock matrix; they generate. The formation of the Coulomb matrix :math:`J` and the exchange matrix; :math:`K^{\alpha}` dominate the computational effort of the SCF procedure. For; very large systems, diagonalization of the Fock matrix can also present a; significant hurdle. .. _`sec:scfinput`:. Minimal Input; ~~~~~~~~~~~~~. Minimal input for a Hartree--Fock computation is a molecule block, basis set; option, and a call to ``energy('scf')``::. molecule {; He; }. set basis sto-3g. energy('scf'). This will run a Restricted Hartree--Fock (RHF) on neutral singlet Helium in; :math:`D_{2h}` spatial symmetry with a minimal ``STO-3G`` basis, 1.0E-6; energy and density convergence criteria (since single-point, see; :ref:`SCF Convergence & Algorithm <table:conv_scf>`), a DF ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess. For more; information on any of these options, see the relevant section below. .. _`sec:scfsymm`:. Spin/Symmetry Treatment; ~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| implements the most popular spin specializations of Hartree--Fock; theory, including:. Restricted Hartree--Fock (RHF) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Hartree--Fock (UHF); Appropriate for most open-shell systems and f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:8927,energy,energy,8927,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"iary basis is controlled by the keyword; |fnocc__df_basis_cc|. By default, |fnocc__df_basis_cc| is the RI set; (optimized for DFMP2) most appropriate for use with the primary basis.; For example, if the primary basis is aug-cc-pVDZ, the default; |fnocc__df_basis_cc| will be aug-cc-pVDZ-RI. Alternatively, the user can request that the DF-CCSD(T) procedure use a; set of vectors defined by the Cholesky decomposition of the ERI tensor as; the auxiliary basis. This feature is enabled by specifying |globals__cc_type| ``CD``.; CD methods can be enabled in the SCF; procedure as well, by specifying the |globals__scf_type| as ``CD``. The; accuracy of the decomposition can be controlled through the keyword; |fnocc__cholesky_tolerance|. .. comment This feature is enabled by specifying |fnocc__df_basis_cc| as ""CHOLESKY"". . The following input file sets up a DF-CCSD(T); computation using CD integrals ::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set {; scf_type cd; cc_type cd; basis aug-cc-pvdz; freeze_core true; }; energy('ccsd(t)'). The resulting CCSD(T) correlation energy will be equivalent to that; obtained from a conventional computation if |fnocc__cholesky_tolerance| is; sufficiently small (*e.g.* ``1e-9``). .. _`sec:fnogn`:. Gn theory; ~~~~~~~~~. The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]_\. The G2 procedure may be called through the; :py:func:`~psi4.driver.energy` wrapper: ::. energy('gaussian-2'). Supported methods; ~~~~~~~~~~~~~~~~~. The various methods supported by the FNOCC module in |Psifour| are; summarized in Table :ref:`FNOCC Methods <table:fnocc_methods>`; and detailed (except FNO) in Table :ref:`FNOCC Capabilities; <table:fnocc_stdsuite>`. Note that these methods are implemented; for closed-shell reference only. Without ``set qc_module fnocc``,; these methods may default to implementations in :ref:`other modules; <table:managedmethods",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:15586,energy,energy,15586,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"ide adcc some heuristic checks for overly excessive memory requirements; are implemented, resulting in a warning in case a; successful execution is unlikely. There are no guarantees for the memory; to be sufficient in case such a warning is not displayed. More detailed documentation about adcc and its features can be found; at `<https://adc-connect.org>`_,; especially the `theory section <https://adc-connect.org/latest/theory.html>`_.; If you are using adcc from |PSIfour| for your calculations,; please cite both |PSIfour| as well as adcc [Herbst2020]_; in your published work. **The ADC wavefunction object.**; After running the ADC calculation in adcc, the interface code sets; a number of variables in the returned :py:class:`~psi4.core.Wavefunction`; in case they are computed.; In the following the ``<method>`` prefix refers to the ADC method (such as ``adc(1)``,; ``adc(3)``, ``cvs-adc(2)-x``). * Ground state energy terms like ``MP2 correlation energy``, ``MP3 correlation energy``,; ``MP2 total energy``, ``MP3 total energy``, ``current correlation energy`` and ``current energy``.; * ``MP2 dipole X`` and the other components: Ground state dipole moments at MP(2) level.; * ``number of iterations``: The number of iterations the iterative solver required to converge.; * ``number of excited states``: The number of excited states, which were computed.; * More variables are summarized in :ref:`apdx:psivariables_alpha`. The following attribute is set on returned wavefunctions:. * ``adcc_state``: The `adcc.ExcitedStates <https://adc-connect.org/q/excitedstates>`_; object used by adcc to store the ADC(n) excitation energies and all precomputed data; in the format used by adcc.; Provides direct access to analysis and plotting capabilities from adcc.; For example ``adcc_state.plot_spectrum()`` plots a broadened excited states spectrum; in matplotlib. See the `adcc calculations documentation <https://adc-connect.org/latest/calculations.html>`_; for details. **Tips for convergence ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst:12115,energy,energy,12115,doc/sphinxman/source/adc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst,7,['energy'],['energy']
Energy Efficiency,"ide; 7505 benzonitrile; 78438 N-[anilino(phenyl)phosphoryl]aniline; 12581 3-phenylpropanenitrile; 517327 sodium benzenesulfonate; 637563 1-methoxy-4-[(E)-prop-1-enyl]benzene; 252325 [(E)-prop-1-enyl]benzene. Note that some of these results do not contain the string ""benzene""; these; compounds have synonyms containing that text. We can now replace the; ""benzene*"" in the input file with one of the above compounds using either the; IUPAC name or the CID provided in the list, *viz*::. molecule benzene {; pubchem:637563; }; ; or ::; ; molecule benzene {; pubchem:1-methoxy-4-[(E)-prop-1-enyl]benzene; }. Some of the structures in the database are quite loosely optimized and do not; have the correct symmetry. Before starting the computation, |PSIfour| will; check to see if the molecule is close to having each of the possible; symmetries, and will adjust the structure accordingly so that the maximum; symmetry is utilized. The standard keywords, described in :ref:`sec:moleculeKeywords`, can be; used in conjunction to specify charge, multiplicity, symmetry to use, *etc.* . .. index:: symmetry, Cotton-ordering; .. _`sec:symmetry`:. Symmetry; ========. For efficiency, |PSIfour| can utilize the largest Abelian subgroup of the full; point group of the molecule. Concomitantly, a number of quantities, such as; |globals__socc| and |globals__docc|, are arrays whose entries pertain to irreducible; representations (irreps) of the molecular point group. Ordering of irreps; follows the convention used in Cotton's :title:`Chemical Applications of Group; Theory`, as detailed in Table :ref:`Irreps <table:irrepOrdering>`. We refer to this; convention as ""Cotton Ordering"" hereafter. .. _`table:irrepOrdering`:. .. table:: Ordering of irreducible representations (irreps) used in |PSIfour|. +----------------+-------------+----------------+----------------+----------------+-------------+----------------+----------------+----------------+; | Point Group | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | ; +=========",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:12575,charge,charge,12575,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['charge'],['charge']
Energy Efficiency,"ient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic :math:`ov` products in the; bra- and ket- of the :math:`(ov|ov)`\ -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in |PSIfour| for all single; reference types available in the SCF module.; MP2 defaults in |PSIfour| to the density-fitted code. The support for MP2 by the DFMP2 module in |Psifour| is detailed in; Table :ref:`DFMP2 Capabilities <table:dfmp2_stdsuite>`. Even without; ``set qc_module dfmp2``, methods will default to this module, but; alternate implementations and use of |globals__mp2_type| for performing; a MP2 with conventional integrals can be seen at :ref:`other modules; <table:managedmethods>`. .. include:: autodoc_capabilities_dfmp2.rst. An example utilization of the code is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; ; energy('mp2'). The ``energy('mp2')`` call to :py:func:`~psi4.driver.energy` executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which for",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:2723,efficient,efficient,2723,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['efficient'],['efficient']
Energy Efficiency,"ient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:129279,energy,energy,129279,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table :ref:`FNOCC Methods <table:fnocc_methods>`. Full MP4 correlation; energies are also available. .. _`sec:fnocepa`:. Coupled electron pair approximation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7682,energy,energy,7682,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"if(TARGET PCMSolver::pcm); list(APPEND sources; psipcm.cc; ); psi4_add_module(lib psipcm sources); target_link_libraries(psipcm; PUBLIC; PCMSolver::pcm; mints; Libint2::cxx; ); # Because psipcm.cc includes potentialint.h, which includes libint2's engine.h; # we have to make sure we reduce the optimization level to match libmints; # See note at psi4/src/psi4/libmints/CMakeLists.txt; set_property(TARGET psipcm PROPERTY CXX_STANDARD ""${psi4_CXX_STANDARD_Libint2}""); endif(); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libpsipcm/CMakeLists.txt:283,reduce,reduce,283,psi4/src/psi4/libpsipcm/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libpsipcm/CMakeLists.txt,1,['reduce'],['reduce']
Energy Efficiency,"ifference. * when default type is not available for a method (e.g., CCD governed by |globals__cc_type| that; defaults to ``CONV`` but only ``DF`` and ``CD`` CCD is available), an informative error message is needed. Managed methods handle these cases through the addition of a new; keyword |globals__qc_module| and a set of type keywords analogous to; |globals__mp2_type|: |globals__mp_type|,; |globals__ci_type|, |globals__cc_type|, which can have values ``CONV``,; ``DF``, and ``CD``. These are all *global* keywords, as their values are; shared among modules rather than (or in addition to) being used internally; by the module). We're sticking with |globals__scf_type| and; |globals__mp2_type| defaulting to ``DF``, while most everything higher defaults; to ``CONV``. (Exceptions are MP2.5 and MP3 that default to ``DF``.); In :source:`psi4/driver/procrouting/proc_table.py`, a managed method calls a; ""select"" function rather than a ""run"" function. ::. procedures = {; 'energy': {; 'scf' : run_scf,; 'mp3' : select_mp3,; 'dct' : run_dct,. Then in :source:`psi4/driver/procrouting/proc.py`, the select function runs through; reference, type, and possibly freeze_core to specify the proc; function to call for any able, non-default module (*e.g.*, ``mtd_type ==; 'DETCI'`` ) or able, default module (*e.g.*, ``mtd_typd == ['', 'FNOCC']`` ).; Don't worry about 'else' statements as anything that falls through will be; caught and a readable error generated. ::. def select_mp3(name, **kwargs):; """"""Function selecting the algorithm for a MP3 energy call; and directing to specified or best-performance default modules. """"""; reference = psi4.get_option('SCF', 'REFERENCE'); mtd_type = psi4.get_global_option('MP_TYPE'); module = psi4.get_global_option('QC_MODULE'); # Considering only [df]occ/fnocc/detci. func = None; if reference == 'RHF':; if mtd_type == 'CONV':; if module == 'DETCI':; func = run_detci; elif module == 'FNOCC':; func = run_fnocc; elif module in ['', 'OCC']:; func = run_occ; elif",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:6939,energy,energy,6939,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,1,['energy'],['energy']
Energy Efficiency,"ifting and the code is easy to; implement entirely in the Python layer. In the case where the matrix operation; is non-standard and requires some specialized code to handle disk-based; storage, the decision to write in Python is less clear cut. It is certainly; possible to write these out-of-core routines using Numpy primitives, but there; are a number of tools in |PSIfour| already to perform tasks like these that are; required, *e.g.*, for cluster. In this case, a good design would be to write a; simple piece of code in the C++ layer that performs the matrix operation on a; given input, using the I/O routines available in |PSIfour| and the parallelism; afforded by OpenMP, and to make that code available to the front end as; described in :ref:`sec:prog_tour-exposing`. The Python layer could then be; responsible for obtaining the input data and calling this C++ code to do the; manipulations, allowing each language layer to handle the subset of the work; that caters to their individual strengths. A number of concrete examples of this workflow exist in the code already. For; finite difference computations of energy derivatives, the logic to determine; the type of stencil and which displacements are needed is not going to be rate; limiting for any reasonable quantum mechanical energy function. Therefore,; doing that work in the Python layer is a good idea, as it allows the many; Python tools for farming out *embarrassingly parallel* workloads to be used,; while the C++ layer can be used to implement the energy function to be; differentiated. In SCF, we have a number of sources of external embedding potentials that could; enter the calculation. Allowing Python to handle only the details of driving; the SCF iterations, such as external potentials and convergence acceleration; methods, but deferring to C++ to do the heavy lifting for building and; diagonalizing the Fock matrix also takes advantage of the two languages'; strengths and improves maintainability of the code.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst:6863,energy,energy,6863,doc/sphinxman/source/prog_ways_to_add.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst,3,['energy'],['energy']
Energy Efficiency,"ilation, simply adjust its; position in the path environment variables. .. >>> cd dftd3; .. >>> ls; .. dftd3.tar; .. patch_grimme_dftd3.3.0.2; .. >>> tar -xvf dftd3.tar; .. copyc6.f; .. dftd3.f; .. Makefile; .. man.pdf; .. pars.f; .. param; .. >>> patch < patch_grimme_dftd3.3.0.2; .. patching file dftd3.f; .. >>> make; .. making dftd3.o from dftd3.f; .. ifort -O -c dftd3.f -o dftd3.o; .. making copyc6.o from copyc6.f; .. ifort -O -c copyc6.f -o copyc6.o; .. ifort dftd3.o copyc6.o -o ./dftd3; .. >>> ls; .. Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3.3.0.2; .. copyc6.f dftd3 dftd3.o man.pdf pars.f. Theory; ~~~~~~. The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515]_ and assiduously developed by Grimme, [Grimme:2004:1463]_; [Grimme:2006:1787]_ [Grimme:2010:154104]_ the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, :math:`E_{disp} = -C_6/R^6; -C_8/R^8 -C_{10}/R^{10}-\cdots`. The DFT-D2 [Grimme:2006:1787]_ variant; takes the explicit form below. Here, dispersion coefficients,; :math:`C_6^{ij}`, obtained from the geometric mean of tabulated elemental; values, are summed over interatomic distances, :math:`R_{ij}`, modulated; by a damping function, :math:`f_{damp}(R_{ij})`, that gradually activates; the dispersion correction (at a rate characterized by :math:`\alpha_6`); over a distance characterized by the sum of the two atomic vdW radii,; :math:`R_{vdW}`, while an overall scaling term, :math:`s_6`, is optimized; to be unique to each :math:`E_{xc}` functional. (:math:`\alpha_6` is; sometimes allowed to vary as well.). .. math:: E_{disp}^{\text{D2}}=-s_6 \sum_{i,j>i}^{N_{at}} \frac{C_6^{ij}}{(R_{ij})^6} f_{damp}(R_{ij}); :label: DFTD2. .. math:: f_{damp}(R_{ij}) = \frac{1}{1 + e^{- \alpha",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:9181,energy,energy,9181,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"ill be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contribution contribution to the reduced; density matrix energy expression. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The total electronic energy [E_h] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. :eq:`SCFterms` or :eq:`DFTterms`. Quantity; :math:`E_{\text{FCTL}}` in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; Unless the method includes a dispersion correction, this quantity is; equal to :psivar:`SCF TOTAL ENERGY`. .. psivar:: DFT TOTAL ENERGY. The total electronic energy [E_h] for the requested DFT method,; :math:`E_{\text{DFT}}` in Eq. :eq:`DFTterms`. .. math::; :nowrap:; :label: DFTterms. \begin{align*}; E_{\text{DFT}} & = E_{NN} + E_{1e^-} + E_{2e^-} + E_{xc} + E_{\text{-D}} + E_{\text{DH}} \\; & = E_{\text{FCTL}} + E_{\text{-D}} + E_{\text{DH}} \\; & = E_{\tex",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:30691,energy,energy,30691,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"in :ref:`apdx:options_c_module` are placed in ``set`` blocks as; described in :ref:`sec:jobControl`, not as arguments to a Python function; (like ``energy()``). .. note:: All |PSIfour| keyword names and values are insensitive to case, both; those that are placed in ``set`` blocks and as Python function arguments.; The few exceptions are documented for the :py:func:`~psi4.driver.wrapper_database.database` function,; where case structure must match the database file. .. _`op_c_bool`:; .. _`op_c_boolean`:; .. note:: Boolean options can be specified by ``yes``, ``on``, ``true``, or ``1``; for affirmative and ``no``, ``off``, ``false``, or ``0`` for negative,; all insensitive to case. .. _`op_c_conv`:; .. note:: Certain convergence and tolerance keywords, of type *double* (real numbers),; may be specified using either a real number or an integer; and integer *X* is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to :math:`10^{-6} E_h`, the user may set the ``e_convergence``; keyword to ``0.000001``, ``1.0e-6``, or ``6``. .. _`sec:psivarnotes`:. Notes on PSI Variables; ======================. .. note:: Starting in 1.6, there are three standard ways to access an excited state; property. We give examples below, but the method name and property name may change. * ``method ROOT 0 -> ROOT m property`` to get root ``m``.; * ``method ROOT 0 -> ROOT m property - h TRANSITION`` to get root m and; independently specify that the total transition symmetry is ``h``, e.g., A2.; * ``method ROOT 0 (h) -> ROOT m (i) property`` to get the transition; between two roots, specifying the symmetry of both states and the index of the target; roots among states of their own symmetry. For example, to target the second excited-state, which is also the lowest energy state; of its irrep, the first two calls will take m = 2, while the last takes m = 0.; Methods that use this interface are: TD-fctl.; Note that numberings are associated with ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_c.rst:2151,energy,energy,2151,doc/sphinxman/source/notes_c.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_c.rst,1,['energy'],['energy']
Energy Efficiency,"in SAPT; ^^^^^^^^^^^^^^^^^^^^^^^. It is possible to obtain the stabilization energy of a complex due to; charge-transfer effects from a SAPT computation. The charge-transfer energy ; can be computed with the SAPT module as described by Stone; and Misquitta [Misquitta:2009:201]_. Charge-transfer energies can be obtained from the following calls to the; energy function. ::. energy('sapt0-ct'); energy('sapt2-ct'); energy('sapt2+-ct'); energy('sapt2+(3)-ct'); energy('sapt2+3-ct'); energy('sapt2+(ccd)-ct'); energy('sapt2+(3)(ccd)-ct'); energy('sapt2+3(ccd)-ct'). For now, charge transfer computations are not available with open-shell SAPT0. A SAPT charge-transfer analysis will perform 5 HF computations: the dimer; in the dimer basis, monomer A in the dimer basis, monomer B in the dimer; basis, monomer A in the monomer A basis, and monomer B in the monomer B; basis. Next, it performs two SAPT computations, one in the dimer basis and; one in the monomer basis. Finally, it will print a summary of the; charge-transfer results::. SAPT Charge Transfer Analysis; ------------------------------------------------------------------------------------------------; SAPT Induction (Dimer Basis) -2.0970 [mEh] -1.3159 [kcal/mol] -5.5057 [kJ/mol]; SAPT Induction (Monomer Basis) -1.1396 [mEh] -0.7151 [kcal/mol] -2.9920 [kJ/mol]; SAPT Charge Transfer -0.9574 [mEh] -0.6008 [kcal/mol] -2.5137 [kJ/mol]. These results are for the water dimer geometry shown above computed with ; SAPT0/aug-cc-pVDZ. . .. index:: ; pair: SAPT; output. Monomer-Centered Basis Computations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The charge-transfer analysis above is carried out by taking the; difference between SAPT induction as calculated in the dimer-centered; basis (*i.e.*, each monomer sees the basis functions on both monomers); vs. the monomer-centered basis (*i.e.*, each monomer utilizes only its; own basis set). It is also possible to run a closed-shell SAPT computation at any; level using only the monomer-centere",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:30968,charge,charge-transfer,30968,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['charge'],['charge-transfer']
Energy Efficiency,"in a detailed understanding of the; intermolecular partition and the polarization between non-interacting and; Hartree--Fock-interacting moieties. We have developed a set of template; ``.pymol`` scripts to help with this process. These can be obtained by running::. >>> copy_pymol2.py. and then in PyMol::. >>> @run.pymol. This last command runs all of the individual ``.pymol`` files (*e.g.*,; ``DA.pymol``), which in turn load in the molecule and cube file data; (contained in the ``.cube`` file), set up the visualization, and render a; ``.png`` image of the scene. Generally the view orientation and some specific; details of the ``.pymol`` files require some small tweaks to permit; publication-quality renderings. .. image:: /VA.png; :align: center; :scale: 50%; :alt: ESP of monomer A. Adding Point Charges to F/I-SAPT Computations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; .. Citation: Alenaizan, A; Cheney, D. L.; Sherrill, C. D. Electrostatically embedded; .. symmetry adapted pertubration theory. In preparation. Point charges can be added to the interacting subsystems A and B as well; as to the ``linking`` fragment C. Briefly, the interaction between the point charges in A(B); and fragment B(A) enters the SAPT0 interaction energy. It explicitly affects the electrostatics; and induction components, and implicitly affects other SAPT0 components by polarizing the orbitals.; If point charges are present in both subsystems A and B, an additional charge-charge interaction; term is also added to the electrostatic energy. When point charges are assigned to subsystem C, the point; charges in C only polarize the orbitals in both fragment A and B. However, the presence of charges in C does not; directly contribute to the SAPT0 interaction energy. Examples :srcsample:`fsapt-ext-abc` and :srcsample:`fsapt-ext-abc2`; illustrate the use of point charges in F/I-SAPT procedure. Link Orbital Partitioning in I-SAPT; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The assignment of the A-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:15954,adapt,adapted,15954,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['adapt'],['adapted']
Energy Efficiency,"in the order they appear in; the input file, so if the last four commands in the above example were to read ::. set basis cc-pVDZ; energy('ccsd'); set ccenergy print 3; set scf print 1. the commands that set the print level would be ineffective, as they would be; processed after the CCSD computation completes. In PsiAPI mode, one can use the command :py:func:`~psi4.driver.set_options`; like below for general and module-specific options. Note that these values; should be of correct type, strings for strings, floats for floats like; convergences. The function `~psi4.core.clean_options` that reinitializes; all options may also be useful to separate calculations in a PsiAPI; session. ::. psi4.set_options({; 'scf_type': 'pk',; 'e_convergence': 1.e-5,; 'soscf': True,; 'optking__geom_maxiter': 50; }). Basis Sets; ==========. .. toctree::; :maxdepth: 2. basissets. .. _`sec:psiVariables`:. PSI Variables; =============. To harness the power of Python, |PSIfour| makes the most pertinent results; of each computation available to the Python interpreter for; post-processing. To demonstrate, we can embellish the previous example of; H\ :sub:`2` and H atom::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; h2_energy = energy('scf'); ; molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; h_energy = energy('scf'); ; D_e = psi_hartree2kcalmol * (2*h_energy - h2_energy); print ""De=%f"" % D_e. The :py:func:`~psi4.driver.energy` function returns the final result of the; computation, the requested total energy in Hartrees, which we assign to a; Python variable. The two energies are then converted to a dissociation; energy and printed to the output file using standard Python notation. Generally, there are multiple quantities of interest. Appendix; :ref:`apdx:psivariables_module` lists PSI variables variables set by each; module, and :ref:`apdx:psivariables_alpha` defines them. These can be; accessed through the :py:func:`~psi4.core.get_variable` function. For ex",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:8836,power,power,8836,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['power'],['power']
Energy Efficiency,inal and; initial orbitals for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP3 TOTAL ENERGY; OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP3 level of theory. .. psivar:: OMP3 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP3 level of theory. .. psivar:: OREMP2 TOTAL ENERGY; OREMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized retaining-the-excitation-degree |MollerPlesset|; hybrid perturbation theory level. .. psivar:: OREMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized retaining-the-excitation-degree; |MollerPlesset| hybrid perturbation theory level. .. psivar:: ONE-ELECTRON ENERGY. The one-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{1e^-}` in Eq. :eq:`SCFterms`. .. psivar:: PCM POLARIZATION ENERGY. The energy contribution [E_h] from the polarizable continuum model for solvation. .. psivar:: DD SOLVATION ENERGY. The energy contribution [Eh] from continuum solvation models based on a; domain-decomposition ansatz. .. psivar:: PE ENERGY. The energy contribution [E_h] from the polarizable embedding model for solvation. .. psivar:: QCISD TOTAL ENERGY; QCISD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles level; of theory. .. psivar:: QCISD(T) TOTAL ENERGY; QCISD(T) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. .. psivar:: QCISD(T) CORRECTION ENERGY. The quadratic configuration interaction singl,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:48144,energy,energy,48144,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(cbs-delta-energy ""psi;quicktests;cbs""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/cbs-delta-energy/CMakeLists.txt:54,energy,energy,54,tests/cbs-delta-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/cbs-delta-energy/CMakeLists.txt,1,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(cbs-xtpl-energy ""psi;quicktests;cbs""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/cbs-xtpl-energy/CMakeLists.txt:53,energy,energy,53,tests/cbs-xtpl-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/cbs-xtpl-energy/CMakeLists.txt,1,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(cbs-xtpl-energy-conv ""psi;quicktests;cbs""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/cbs-xtpl-energy-conv/CMakeLists.txt:53,energy,energy-conv,53,tests/cbs-xtpl-energy-conv/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/cbs-xtpl-energy-conv/CMakeLists.txt,1,['energy'],['energy-conv']
Energy Efficiency,"include(TestingMacros). add_regression_test(cookbook-manual-fd-hess-energy ""psi;cookbook""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/cookbook/manual-fd-hess-energy/CMakeLists.txt:68,energy,energy,68,tests/cookbook/manual-fd-hess-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/cookbook/manual-fd-hess-energy/CMakeLists.txt,1,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(dftd3-energy ""psi;quicktests;smoketests;dftd3;addon;cart""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/energy/CMakeLists.txt:50,energy,energy,50,tests/dftd3/energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd3/energy/CMakeLists.txt,1,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(dftd4-energy ""psi;quicktests;smoketests;dftd4;addon;cart""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd4/energy/CMakeLists.txt:50,energy,energy,50,tests/dftd4/energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/dftd4/energy/CMakeLists.txt,1,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(fd-freq-energy ""psi;findif;noc1""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/fd-freq-energy/CMakeLists.txt:52,energy,energy,52,tests/fd-freq-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/fd-freq-energy/CMakeLists.txt,1,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(fd-freq-energy-large ""psi;longtests;findif;cart;noc1""); set_tests_properties(; fd-freq-energy-large; PROPERTIES; COST 1000; TIMEOUT 3000; ); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/fd-freq-energy-large/CMakeLists.txt:52,energy,energy-large,52,tests/fd-freq-energy-large/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/fd-freq-energy-large/CMakeLists.txt,2,['energy'],['energy-large']
Energy Efficiency,"include(TestingMacros). add_regression_test(isapt-charged ""psi;sapt;medlong""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/isapt-charged/CMakeLists.txt:50,charge,charged,50,tests/isapt-charged/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/isapt-charged/CMakeLists.txt,1,['charge'],['charged']
Energy Efficiency,"include(TestingMacros). add_regression_test(json-schema-1-energy ""psi;quicktests;json""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/json/schema-1-energy/CMakeLists.txt:58,energy,energy,58,tests/json/schema-1-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/json/schema-1-energy/CMakeLists.txt,1,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(python-energy ""psi;quicktests;smoketests;python""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/python/energy/CMakeLists.txt:51,energy,energy,51,tests/python/energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/python/energy/CMakeLists.txt,1,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(tu1-h2o-energy ""psi;quicktests;smoketests;tutorial""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/tu1-h2o-energy/CMakeLists.txt:52,energy,energy,52,tests/tu1-h2o-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/tu1-h2o-energy/CMakeLists.txt,1,['energy'],['energy']
Energy Efficiency,"include(TestingMacros). add_regression_test(tu2-ch2-energy ""psi;quicktests;tutorial""); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/tu2-ch2-energy/CMakeLists.txt:52,energy,energy,52,tests/tu2-ch2-energy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/tu2-ch2-energy/CMakeLists.txt,1,['energy'],['energy']
Energy Efficiency,"infty} v_{\mathrm{x}}^{\mathrm{Local}} (r) = 0. IP-tuned LRC functionals effectively pin the chemical potential at :math:`N`; electrons to the correct value determined by the ionization potential. This; often cleans up the MSIE problem for a surprisingly large number of high-lying; occupied orbitals, as determined by fractional particle curves. Other gap; fitting techniques involving the electron affinity or band gap are sometimes; also used. IP-fitting is found to be particularly critical for the qualitative; determination of excited state ordering in many low band-gap systems. For dispersion-bound complexes, a very simple additive empirical dispersion; potential, based on a damped Lennard-Jones potential can often produce; remarkably accurate results with KS-DFT. This approach was championed by Grimme,; whose ""-D2"" and more modern ""-D3"" approaches are a de facto industry standards. Minimal Input; ~~~~~~~~~~~~~. Minimal input for a KS-DFT computation is a molecule block, basis set; option, and a call to ``energy('b3lyp')`` (or other valid functional name)::. molecule {; He; }. set basis sto-3g. energy('b3lyp'). This will run a B3LYP Restricted Kohn--Sham (RKS) on neutral singlet Helium in; :math:`D_{2h}` spatial symmetry with a minimal ``STO-3G`` basis, 1.0E-6 energy; and density convergence criteria, a DF ERI algorithm, symmetric; orthogonalization, DIIS, and a core Hamiltonian guess (because single atom). For more information on; any of these options, see the relevant section below, or in the preceding; :ref:`Hartree--Fock section <sec:scf>`. Spin/Symmetry Treatment; ~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| implements the most popular spin specializations of KS-DFT, including:. Restricted Kohn--Sham (RKS) [Default]; Appropriate only for closed-shell singlet systems, but twice as efficient; as the other flavors, as the alpha and beta densities are constrained to be; identical.; Unrestricted Kohn--Sham (UKS); Appropriate for most open-shell systems and fairly easy to conv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:14409,energy,energy,14409,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"ing any; options for any module, you must comment them as shown - this will ensure that; the keywords are automatically inserted into the \PSIfour\ users' manual. The; \module{main} function does a little setting up of the \PSI\ input and output; environments, before calling the module code we're developing (on line 53) and; shutting down the \PSIfour\ I/O systems. The module we're developing is in the following source file. \includesource{sample-codes/integrals/integrals.cc}{C++}. Given the extensive documentation within the code, we'll not describe this file; line-by-line; however, some points warrant elaboration. Notice that the entire; module is encapsulated in the \module{psi::integrals} namespace (lines 6 and; 92). This simple example has only one function body, which lives in a single; source file - if more functions and/or source files were added, these too would; have to live in the \module{psi::integrals} namespace. On lines 29 and 31 of; \file{main.cc} we told the parser which keywords to expect, and provided; default values in case the user omited them from the input. This makes; retrieving these options very clean and simple ({\it c.f.} lines 11 and 12 of; \file{integrals.cc}). Each \PSIfour\ module will have to initialize its own; local \module{PSIO} and \module{Chkpt} objects to perform I/O and to retrieve; information from previously run modules. Notice that these objects are created; within smart pointers (see section XXX for more information) so that they are; automatically deleted when they go out of scope, thus reducing the burden on; the programmer. Likewise, the basis sets, matrices and integral objects are; allocated using smart pointers. The code described above can be built by simply typing ``make'' on the command; line. To run this code, you must first run the \module{input} module to read; in the basis set information. A \PSI\ input for this code should look some; thing like the following:. \includeinput{sample-codes/integrals/input.dat}; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst:4833,allocate,allocated,4833,doc/sphinxman/source/attic/progtutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst,1,['allocate'],['allocated']
Energy Efficiency,"instead provides all integrals, so the caller; simply needs to loop over all of the buffers provided in the appropriate order. Changes to External Potential Engines; ..................................... Benchmarking showed that early versions of the old code spent a non-negligible; amount of time performing the Cartesian to spherical harmonic transformation of; the integrals, which is needed for most modern basis sets. To improve; performance, we instead backtransformed the density to the Cartesian; representation (denoted ""CartAO"") and computed / contracted all integrals in; this Cartesian basis, eliminating the need to transform to spherical harmonics; as the integrals are computed. This bottleneck no longer exists, so these; extra transformation steps have been removed as part of the switch to Libint2,; and the affected codes (PCM and CPPE interfaces) now compute the potential and; field integrals in the representation required by the basis set. Also, note that the way external point charges are specified has changed.; Previously, a set of N external point charges would be specified by passing a; matrix with dimensions N rows and 4 columns -- corresponding to charge, x, y, z; -- to the ``set_charge_field()`` member of the potential integral class. The; same information is now passed using the more verbose; ``std::vector<std::pair<double, std::array<double, 3>>>`` type instead, to be; consistent with Libint2's convention. New Operators Available; ....................... Libint2 provides a range of integrals that were previously not available in; |PSIfour|, such as the Erfc attenuated nuclear potential integrals needed for; Ewald methods. If new integrals are added to Libint2 but are not yet; interfaced to |PSIfour|, please open an issue on the |PSIfour| GitHub page to; alert the developers, who will be able to add the appropriate code.; Available integrals classes and parameters currently documented at ; `Libint2 C++11 Interface Wiki <https://github.com/evaleev/l",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:17233,charge,charges,17233,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['charge'],['charges']
Energy Efficiency,"interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases. Some rough guidelines for using the KS-DFT code are as follows,. * Use DF for the ERI algorithm wherever possible.; * |PSIfour| is a ""tight"" code, meaning we've set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; :ref:`SCF Convergence <table:conv_scf>` for default convergence criteria.; * Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The ""best-practice"" input file for KS-DFT is::. memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). .. _`sec:dftdictbuilder`:. Advanced Functional Use and Manipulation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. New DFT functionals can be created from scratch from within the input; file and accessed using the ``dft_functional`` keyword argument in the; energy call::. # DFT Custom Functional. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis sto-3g; dft_spherical_points 302; dft_radial_points 99; reference rks; }. pbe0 = {; ""name"": ""my_PBE0"",; ""x_functionals"": {""GGA_X_PBE"": {""alpha"": 0.75}},; ""x_hf"": {""alpha"": 0.25},; ""c_functionals"": {""GGA_C_PBE"": {}}; }. func_call = energy('SCF', dft_functional=pbe0). # as PBE0 is a pre-defined functional, the call above is equivalent to both below:; func_call = energy('SCF', dft_functional=""PBE0""); func_call = energy('PBE0'). Supported keywords include:. - `name`: string, name of the functional. for custom defined functionals used for printing only.; - `xc_functionals`: dict, definition of a complete (X + C) functional based",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:32991,energy,energy,32991,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"into |PSIfour|. Note that these are; only available with density-fitted, not conventional, MP2 algorithms. :ref:`-D Functionals <table:dft_disp>`; We have several -D2 functionals implemented. -D3 functionls are available; with the installation of Grimme's :ref:`DFTD3 program <sec:dftd3>`.; For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in |PSIfour| for correctness. If you find an error in a DFT; functional or have a request for a new functional, please let us know on our; forum or GitHub page. Grid Selection; ~~~~~~~~~~~~~~. |PSIfour| uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. ; The default grid in |PSIfour| is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights. Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the |scf__dft_spherical_points|; option, which may take one of the following values:. .. _`table:lebedevorder`:. +-----------------------------+-------+; | |scf__dft_spherical_points| | Order |; +=============================+=======+; | 6 | 3 |; +-----------------------------+-------+; | 14 | 5 |; +-----------------------------+-------+; | 26 | 7 |; +-----------------------------+-------+; | 38 | 9 |; +-----------------------------+-------+; | 50 | 11 |; +-----------------------------+-------+; | 74 | 13 |; +-----------------------------+-------+; | 86 | 15 |; +-----------------------------+-------+; | 110 | 17 |; +-----------------------------+-------+; | 146 | 19 |; +-----------------------------+-------+; | 170 | 21 |; +-----------------------------+-------+; | 194 | 23 |; +-----------------------------+-------+; | 230 | 25 |; +-----------------------------+-------+; | 266 | 27 |; +--------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:21208,efficient,efficient,21208,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['efficient'],['efficient']
Energy Efficiency,"ints when using a zmatrix for; molecular input is not supported. Freezing or constraining Cartesian coordinates; requires Cartesian molecule input. If numerical errors results in symmetry ; breaking, while Cartesian constraints are active, symmetrization cannot occur and; an error will be raised, prompting you to restart the job. * To scan the potential energy surface by optimizing at several fixed values; of the dihedral angle of HOOH. .. code-block:: none. molecule hooh {; 0 1; H 0.850718 0.772960 0.563468; O 0.120432 0.684669 -0.035503; O -0.120432 -0.684669 -0.035503; H -0.850718 -0.772960 0.563468; }; ; set {; basis cc-pvdz; intrafrag_step_limit 0.1; }. lower_bound = [99.99, 109.99, 119.99, 129.99, 149.99]; upper_bound = [100, 110, 120, 130, 140, 150]; PES = []. for lower, upper in zip(lower_bound, upper_bound):; my_string = f""1 2 3 4 {lower} {upper}""; set optking ranged_dihedral = $my_string; E = optimize('scf'); PES.append((upper, E)). print(""\n\tcc-pVDZ SCF energy as a function of phi\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). * To scan the potential energy surface without the |optking__ranged_dihedral| keyword, a zmatrix; can be used. .. warning:: ; Rotating dihedrals in large increments without allowing the molecule to relax; in between increments can lead to unphysical geometries with overlapping functional groups in larger molecules,; which may prevent successful constrained optimzations. Furthermore, such a relaxed scan of the PES does; not always procude a result close to an IRC, or even a reaction path along which the energy changes in a; continuous way. .. code-block:: none. molecule hooh {; 0 1 ; H ; O 1 0.95; O 2 1.39 1 103 ; H 3 0.95 2 103 1 D . D = 99. units ang ; }. set {; basis cc-pvdz; intrafrag_step_limit 0.1 ; frozen_dihedral ("" 1 2 3 4 ""); }. dihedrals = [100, 110, 120, 130, 140, 150]; PES = []. for phi in dihedrals:; hooh.D = phi ; E = optimize('scf'); PES.append((phi, E)). print(""\n\tcc-pVDZ SCF energy as a fu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:8454,energy,energy,8454,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['energy'],['energy']
Energy Efficiency,"ion energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SCS-OMP2 energy, with any singles carried along. .. psivar:: SOS-MP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.3 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 1.2 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP3 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SOS-OMP2; energy using non-canonical weighting, with any singles carried along. .. psivar:: SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.4 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: TD-fctl ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (VEL). The electric transition dipole moment [e a0] in velocity gauge, for the transition; from the ground state to root *m*.; DFT functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) ELECTRIC TRANSITION DIPOLE MOMENT (VEL). The electric transition dipole moment [e a0] in velocity gauge, for the transition; from the ground state, which is of irrep *h*, to root *n* within irrep *i*.; DFT func",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:62256,energy,energy,62256,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"ion('SCF', 'SCF_TYPE') in ['DF', 'CD']:; psi4.MintsHelper(ref_wfn.basisset()).integrals(). Direct any post-scf modules to be run. ::. # include if further post-scf modules are needed; psi4.transqt2(); psi4.ccsort(); psi4.mp2(). If an :py:class:`~psi4.driver.p4util.OptionsState` object was set up, those options; need to be returned to the original user state with the following. ::. # include if optstash = OptionsState(...) was set up previously; optstash.restore(). Current best practice is to store as much as possible on the wavefunction, not in globals. The; driver should handle interactions with globals. When QCVariables are stored on the wavefunction in; the module, copy to globals with the below::. # Shove variables into global space; for k, v in dfmp2_wfn.variables().items():; core.set_variable(k, v). The function should return the wavefunction, except for rare cases like EFP where no wavefunction available.; For now, ``CURRENT ENERGY`` will be set by; :py:func:`~psi4.driver.energy`, etc. In future, this will be extracted from the wavefunction. ::. # return highest or most prominent wavefunction (like dimer for SAPT); return fnocc_wfn. Managed Methods; ---------------. There are several conditions when a method and derivative combination should be *managed*:. * when functionality overlaps between modules, a pattern is needed to; access each route through the code;. * when functionality doesn't overlap completely, a pattern is needed to apportion defaulting among; the modules, taking into account reference (RHF/UHF/ROHF), calc type (CONV/DF/CD), and possibly; |globals__freeze_core| state (AE/FC). * for higher-level derivatives, when, say, gradient functionality for mtd+ref+type+fcae doesn't; exactly match energy functionality, a pattern is needed to decide analytic vs. finite difference. * when default type is not available for a method (e.g., CCD governed by |globals__cc_type| that; defaults to ``CONV`` but only ``DF`` and ``CD`` CCD is available), an informative",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:5147,energy,energy,5147,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,1,['energy'],['energy']
Energy Efficiency,"isd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fno",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485844,energy,energy,485844,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ist beginning at |ccenergy__r_convergence|). It is defined; according to the quantum chemical method and so its default value is set; by each module individually. .. [#f7] For frequency computations by finite difference of energies,; convergence criteria are tightened further still to 10 for; |scf__e_convergence| and |scf__d_convergence| for SCF of HF or DFT, 11; for |scf__e_convergence| and |scf__d_convergence| for SCF of post-HF,; and 10 for E_CONVERGENCE for post-HF of post-HF. .. _`sec:scfrec`:. Recommendations; ~~~~~~~~~~~~~~~. The SCF code is quite flexible and powerful.; We have tried as much as possible to keep the number of options to; a minimum and to allow all options to be used in the presence of all other; options. Below are some rough words of advice about using the SCF code for; practical calculations:. * For |scf__guess|, the ``SAD`` guess is usually your; friend, even for open-shell systems (at the very least, it gets the right; number of electrons, unlike some other programs). For instance, we have found; that a simple SAD guess is often as good as doing a full SCF in a 3-21G basis; and then performing a cast-up, at a fraction of the cost. However, SAD and; DOCC/SOCC arrays do not play very well together at the moment.; * For wall time, ``DF`` may be a factor of ten or more faster than the exact; integral technologies available in |PSIfour|.; Use ``DF`` unless you need absolute accuracy or do not; have a -JKFIT auxiliary set for your orbital basis/atom type. Then use; ``DIRECT``.; * Don't mess with the DIIS convergence options unless convergence is a problem.; We have optimized the parameters for efficiency over a wide array of system; types.; * Buy a developer a beer!. The ""best-practice"" input file for HF is::. memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis cc-pvdz; scf_type df; guess sad; ints_tolerance 1.0E-10 # Even this is epically tight, 1.0E-8 is OK; }. energy('scf'); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:61667,energy,energy,61667,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"it; is a simple matter to perform calculations on only a subset of the; fragments. For instance, the commands below run a scf first on the ethene; fragment alone (``extract_subsets(1)`` pulls out fragment 1 as Real atoms; and discards remaining fragments) and next on the ethene fragment with the; ethyne fragment ghosted (``extract_subsets(1,2)`` pulls out fragment 1 as; Real atoms and sets fragment 2 as Ghost atoms). For beyond bimolecular; complexes, arrays can be used, e.g. ``extract_subsets(2,[1,3])``::. mA = eneyne.extract_subsets(1); energy('scf'); ; clean(); ; mAcp = eneyne.extract_subsets(1,2); energy('scf'). If the molecule contains fragments but is not conveniently ordered for the; ``--`` marker, the :py:func:`~psi4.driver.wrapper_autofrag.auto_fragments` function can be applied, as shown in; :srcsample:`pywrap-basis`, to return as active molecule the previous; active molecule, only fragmented. Advanced Python; ===============. A named molecule in an input file is a full-fledged instance of the; powerful C++ :py:class:`~psi4.core.Molecule` class. Thus, all member; functions (that have been exported via pybind11) documented thereat; are accessible through the handle :samp:`{option_molecule_name}` in; :samp:`molecule {optional_molecule_name} \\{...\\}`. * The molecular geometry can be got and set and manipulated as a; :py:class:`~psi4.core.Matrix` object. Below shows how to access; coordinates in an input file in Python. ::. molecule formaldehyde {; C 0.0 0.0 0.0; O 0.0 1.2 0.0; H -0.8 -0.3 0.0; H 0.8 -0.3 0.0 # set geometry in angstroms; }. formaldehyde.update_geometry() # update the molecule internals since pre-energy()-like call; formaldehyde.print_out() # print molecule to output file; geom1psi = formaldehyde.geometry() # get coordinates in bohr as a psi4.Matrix. geom1psi.print_out() # print coordinates array to output file; geom1py = mat2arr(geom1psi) # get coordinates as a Python array; print geom1py # print coordinates to screen. geom2py = [[ 0.0, 0.0,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:21560,power,powerful,21560,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['power'],['powerful']
Energy Efficiency,"iteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a fu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7331,energy,energy,7331,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"ity`` member, passing it a SharedMatrix holding the; current density (remember that it changes during each iteration of the SCF) and; the product will be considered during screening. If only coulomb-like terms; are to be computed, the ``needs_exchange`` argument to the integral object; constructor should be set to false, otherwise it should be true to correcly; account for products of the density and integrals that contribute to; exchange-like terms. Shell blocking; .............. Each underlying integral engine knows whether it will use blocks, and will set up; the metadata automatically. Instead of looping over individual shells, the; user should loop over blocks supplied by the integral object; these blocks will; be just a single shell quartet combination for the case where blocking is not; used. It is simple to loop over pairs within each block using C++11 syntax, as; demonstrated in the code snippet above. Only shell pairs with significant; overlap are included in the shell block information, making this an efficient; way to loop over non-negligible terms. Permutational symmetry; ...................... The pairs within each block are optimized for efficiency. First, they are; screened during the integral object's creation to ensure that only terms with; appreciable overlap are stored. Second, only P,Q combinations that are; permutationally unique are stored, ordered with the higher angular momentum; first. Therefore care must be taken to ensure that the missing permutations; are correctly accounted for when processing the integrals within the loop. See; the DirectJK code in libfock for an example of using this scheme for a Fock; matrix build. Using bra-ket symmetry; ...................... In cases where there is no batching performed, bra-ket symmetry can be; trivially enforced by ensuring that one of the block indices is greater than or; equal to the other. When batching is used, the situation is trickier; some ket; batches may contain a mixture of integrals th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:8705,efficient,efficient,8705,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['efficient'],['efficient']
Energy Efficiency,"iver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:42602,energy,energy,42602,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"iver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bcc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:48100,energy,energy,48100,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"iver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:330282,energy,energy,330282,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"j[2], E, 7, 'Ethyne -D3 (bj)'); .. comment ; .. comment E, G = eneyne.run_dftd3('b3lyp', 'd3'); .. comment compare_values(ref_d3zero[0], E, 7, 'Ethene-Ethyne -D3 (alias)'); .. comment E, G = eneyne.run_dftd3('b3lyp', 'd'); .. comment compare_values(ref_d2[0], E, 7, 'Ethene-Ethyne -D (alias)'); .. comment E, G = eneyne.run_dftd3('b3lyp', 'd2'); .. comment compare_values(ref_d2[0], E, 7, 'Ethene-Ethyne -D2 (alias)'); .. comment ; .. comment set basis sto-3g; .. comment set scf_type df; .. comment set dft_radial_points 50 # use really bad grid for speed since all we want is the -D value; .. comment set dft_spherical_points 110; .. comment #set scf print 3 # will print dftd3 program output to psi4 output file; .. comment ; .. comment ; .. comment print_stdout(' -D correction from C-side'); .. comment activate(mA); .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_d3bj[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment energy('b3lyp-d3'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment energy('b3lyp-d'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION E",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:27784,energy,energy,27784,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"k (or one-particle) sense; is absolutely mandatory for meaningful computations with the MP2-R12; method. The user is strongly urged to read literature on; linear R12 methods before using |PSIfour| to compute MP2-R12; energies. * More robust, two-basis versions; of the MP2-R12 method, also known as the auxiliary basis; MP2-R12 method, have been implemented; in a publicly available Massively Parallel Quantum Chemistry (MPQC); package (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}).; The two-basis version of the MP2-R12 method is a theoretically more; sound approach, and thus should be preferred to the single-basis method.; In some situations, however, it may make sense to use; the single-basis method. Larger Calculations; -------------------. Here are a few recommendations for carrying out extended integral-direct MP2 and; MP2-R12 calculations with |PSIfour|: . * While the integral-direct MP2 algorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:6296,energy,energy,6296,doc/sphinxman/source/attic/mp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst,1,['energy'],['energy']
Energy Efficiency,"k', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:209666,energy,energy,209666,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"k', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:497534,energy,energy,497534,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"k', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:29860,energy,energy,29860,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"k, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers in the; Z-matrix. Note the line with ``0 3`` at the beginning of the molecule; specification below. In this example we will also specify the bond length; and bond angle as variables (:math:`R` and :math:`A`), whose values are given; at the end of the Z-matrix specification. .. literalinclude:: @SFNX_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:5694,energy,energy,5694,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"l <sec:tutorial>` section,; the :py:func:`~psi4.driver.driver_nbody.nbody` wrapper provides automatic computation of; counterpoise-corrected interaction energies between two molecules. For; example, ::. energy('mp2', bsse_type='cp'). will compute the counterpoise-corrected density-fitted MP2 interaction energy; between two molecules. |PSIfour| also provides the :py:func:`~psi4.driver.cbs` wrapper,; which automatically computes a complete-basis-set extrapolation (and; automatically sets up the computations with different basis sets required to; do the extrapolation). For example,::. # all equivalent. energy('mp2', corl_basis='cc-pv[dt]z', corl_scheme=corl_xtpl_helgaker_2). energy('mp2/cc-pv[dt]z'). will compute a 2-point Helgaker extrapolation of the correlation energy; using the cc-pVDZ and cc-pVTZ basis sets (with method MP2) and add this; extrapolated correlation energy to the Hartree--Fock energy in the; largest basis (cc-pVTZ). :py:func:`~psi4.driver.cbs` can; be configured behind-the-scenes with explicit arguments, as in the; first example, or the convenience syntax of the equivalent second; example can be used. Another very useful and powerful feature of |PSIfour| is the ability; to compute results on entire databases of molecules at a time,; as provided by the :py:func:`~psi4.driver.wrapper_database.database` wrapper. For example,::. database('mp2', 'S22', cp=1, benchmark='S22B'). will perform DF-MP2 counterpoise-corrected interaction energies; (``cp=1``) on all members of Hobza's S22 database set of van der Waals; dimers, and then compare the results against the S22B benchmark energies.; Built-in databases include S22, A24, HTBH, HBC6, HSG, S22by5, S66, JSCH,; NCB31, S66by8, and NBC10, among others. These wrapper functions are discussed separately in; :ref:`sec:psithonFunc`. Note that the options documented for Python; functions are placed as arguments in the command that calls the function,; not in the ``set {...}`` block or with any other ``set`` command. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:16473,power,powerful,16473,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['power'],['powerful']
Energy Efficiency,"l Assignment of Symmetry-Adapted Perturbation Theory Interaction; Energy Components: The Functional-Group SAPT Partition,""; R. M. Parrish, T. M. Parker, and C. D. Sherrill,; *J. Chem. Theory Comput.* **10**, 4417 (2014).; (doi: `10.1021/ct500724p <https://doi.org/10.1021/ct500724p>`_). * ""Communication: Practical Intramolecular Symmetry Adapted Perturbation Theory; via Hartree-Fock Embedding,""; R. M. Parrish, J. F. Gonthier, C. Corminboeuf, and C. D. Sherrill,; *J. Chem. Phys.* **143**, 051103 (2015).; (doi: `10.1063/1.4927575 <https://doi.org/10.1063/1.4927575>`_). The derivation of the second-order exchange terms without the single-exchange; approximation are found in the following two works:. * ""Intermolecular exchange-induction energies without the overlap expansion,""; R. Sch\ |a_dots|\ ffer and G. Jansen, *Theor. Chem. Acc.* **131**, 1235 (2012).; (doi: `10.1007/s00214-012-1235-6 <https://doi.org/10.1007/s00214-012-1235-6>`_). * ""Single-determinant-based symmetry-adapted perturbation theory without; single-exchange approximation,""; R. Sch\ |a_dots|\ ffer and G. Jansen, *Mol. Phys.* **111**, 2570 (2013).; (doi: `10.1080/00268976.2013.827253 <https://doi.org/10.1080/00268976.2013.827253>`_). Orbital-Optimized Post-Hartree |--| Fock Methods; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; Orbital-optimized second-order perturbation theory (OMP2). * ""Quadratically convergent algorithm for orbital optimization in the; orbital-optimized coupled-cluster doubles method and in orbital-optimized; second-order |MollerPlesset| perturbation theory,""; U. Bozkaya, J. M. Turney, Y. Yamaguchi, H. F. Schaefer, and C. D. Sherrill,; *J. Chem. Phys.* **135**, 104103 (2011).; (doi: `10.1063/1.3631129 <https://doi.org/10.1063/1.3631129>`_). * ""Analytic energy gradients for the orbital-optimized second-order; |MollerPlesset| perturbation theory,"" U. Bozkaya and; C. D. Sherrill, *J. Chem. Phys.* **138**, 184103 (2013).; (doi: `10.1063/1.4803662 <https://doi.org/10.1063/1.4803662>`_).",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:19613,adapt,adapted,19613,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['adapt'],['adapted']
Energy Efficiency,"l and Thermochemical Analysis; =======================================. .. codeauthor:: Rollin A. King and Lori A. Burns; .. sectionauthor:: Lori A. Burns. *Module:* :ref:`Keywords <apdx:thermo>`, :ref:`PSI Variables <apdx:thermo_psivar>`, :source:`THERMO <psi4/driver/qcdb/vib.py>`. .. caution:: It is important to know that |PSIfour|, like any other; quantum chemistry program, does *not* compute the usual enthalpies,; entropies, or Gibbs free energies *of formation* provided by most; reference books. Instead, quantum chemistry programs compute ""absolute""; thermodynamic properties relative to infinitely separated nuclei and; electrons, not ""formation"" values relative to elements in their standard; states. If you are computing thermodynamic differences, like a reaction; enthalpy computed as the enthalpy of the products minus the enthalpy; of the reactants, then these ""absolute"" enthalpies are perfectly valid; and usable. However, they cannot be mixed and matched with enthalpies of; formation from reference books, since the zero of energy is not the same.; Additionally, the ""thermal energies"" reported in kcal/mol are the ; finite-temperature *corrections* to the electronic total energy, and ; not the overall thermal energies themselves. If in doubt, use the; reported Total Energies in Hartree/particle. Keywords; ^^^^^^^^. .. include:: autodir_options_c/thermo__t.rst; .. include:: autodir_options_c/thermo__p.rst; .. include:: autodir_options_c/thermo__rotational_symmetry_number.rst. .. _`sec:thermoExamples`:. Examples; ^^^^^^^^. A thermochemical analysis is performed after any full (not just specific; symmetry subgroups). If the wavefunction is retained, it may be reused; at a different temperature, pressure, rotational symmetry number, or; isotopic substitution through the function :py:func:`psi4.driver.qcdb.vib.thermo`; as is shown in :srcsample:`freq-isotope2`. A few summary psivars are set: ""ZPVE"", ""THERMAL ENERGY CORRECTION"",; ""ENTHALPY CORRECTION"", ""GIBBS FREE ENE",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/thermo.rst:2233,energy,energy,2233,doc/sphinxman/source/thermo.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/thermo.rst,1,['energy'],['energy']
Energy Efficiency,"l be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: DFTNL; .. _`sec:dftnl`:. DFT-NL; ======. .. codeauthor:: Daniel G. A. Smith and Holger Kruse; .. sectionauthor:: Holger Kruse. Non-local (NL), density based correlation energy from the VV10 kernel can be added; to arbitrary functionals. .. math:: E_{DFT-NL}=E_{DFT}+E_{NL}. For pre-defined functionals (see Functional overview in :ref:`this Table <table:dft_all>` ) it is sufficient to add `-NL` to; the functional name::. energy('b3lyp-nl'). Modification of the parameters `b` and `C` is done setting |scf__dft_vv10_b| and |scf__dft_vv10_c|. The `C` is usually left unchanged and the originally proposed; value of `C=0.0093` is used. Adding |scf__dft_vv10_b| to any functional activates the calculation of the VV10 kernel. A BLYP-NL calculation can be set as follows::. set DFT_VV10_B 4.0; energy('blyp'). The default `C` parameter will be used. Similar to |scf__dft_dispersion_parameters| the tuple |scf__nl_dispersion_parameters| can used::. set NL_DISPERSION_PARAMTERS [4.0]; energy('blyp'). which is equivalent to the example above. Further examples can be found in the respective :source:`regression test <tests/dft-vv10/input.dat>`. post-SCF time savings; ~~~~~~~~~~~~~~~~~~~~~. Substantial time-savings for energy calculations are available by evaluating the VV10 kernel only at the converged electron density, i.e. in a post-SCF fashion.; The deviations from the fully self-consistent treatment are usually minimal. To activate this set |scf__dft_vv10_postscf| to `true`.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftnl.rst:1863,energy,energy,1863,doc/sphinxman/source/dftnl.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftnl.rst,3,['energy'],['energy']
Energy Efficiency,"l electronic interaction energy [E_h] for the; requested SAPT level of theory. The sum of these four components yields; :psivar:`SAPT TOTAL ENERGY`. .. psivar:: SAPT TOTAL ENERGY; SAPT ENERGY. The total electronic interaction energy [E_h] for the requested SAPT; level of theory. .. psivar:: SAPT ELST10,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT ELST EXTERN-EXTERN ENERGY. Electrostatic interaction [E_h] between the point charges in fragments; A and B in F/I-SAPT. .. psivar:: SAPT EXCH10 ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH10(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT IND20,R ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT EXCH-IND20,U ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT DISP20 ENERGY; SAPT EXCH-DISP20 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH-DISP20(S^INF) ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. See :ref:`sec:saptinf`. .. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY. The portion of :psivar:`SAPT DISP20 ENERGY` or; :psivar:`SAPT EXCH-DISP20 ENERGY` resulting from; from same-spin or triplet doubles correlations. .. psivar:: SAPT HF(2) ENERGY ABC(HF). The total Hartree--Fock energy [E_h] of the supersystem implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(0). The Hartree--Fock energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(0). The Hartree--Fock energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(0). The Hartree--Fock energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(0). The Hartree--Fock energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(H",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:50614,energy,energy,50614,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"l electronic second derivative [E_h/a0/a0] for the MP2 level of theory, (3 * {nat}, 3 * {nat}). .. psivar:: MP2.5 TOTAL ENERGY; MP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2.5 level of theory. .. psivar:: MP3 TOTAL ENERGY; MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3 level of theory. .. psivar:: MP4(T) CORRECTION ENERGY. The MP4 triples component [E_h]. Quantity is second right-hand term in; Eq. :eq:`MP4terms`. .. psivar:: MP4(SDQ) TOTAL ENERGY; MP4(SDQ) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP4 singles, doubles, quadruples level of theory. Quantity; :psivar:`MP4(SDQ) CORRELATION ENERGY` is; first right-hand term in Eq. :eq:`MP4terms`. .. psivar:: MP4 TOTAL ENERGY; MP4 CORRELATION ENERGY; MP4(SDTQ) TOTAL ENERGY; MP4(SDTQ) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the full MP4 level of theory. Quantity :psivar:`MP4 CORRELATION; ENERGY` / :psivar:`MP4(SDTQ) CORRELATION ENERGY`; is left-hand term in Eq. :eq:`MP4terms`. .. math:: E_{\text{MP4}} = E_{\text{MP4(SDQ)}} + E_{\text{MP4(T)}}; :label: MP4terms. .. psivar:: MPn TOTAL ENERGY; MPn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled |MollerPlesset| perturbation theory level.; *n* is MP perturbation order. .. psivar:: MP2 DOUBLES ENERGY; MP2.5 DOUBLES ENERGY; MP3 DOUBLES ENERGY; CEPA(0) DOUBLES ENERGY; CEPA(1) DOUBLES ENERGY; CEPA(2) DOUBLES ENERGY; CEPA(3) DOUBLES ENERGY; ACPF DOUBLES ENERGY; AQCC DOUBLES ENERGY; CISD DOUBLES ENERGY; QCISD DOUBLES ENERGY; REMP2 DOUBLES ENERGY; LCCD DOUBLES ENERGY; CCD DOUBLES ENERGY; LCCSD DOUBLES ENERGY; CCSD DOUBLES ENERGY; OMP2 DOUBLES ENERGY; OMP2.5 DOUBLES ENERGY; OMP3 DOUBLES ENERGY; OREMP2 DOUBLES ENERGY; OLCCD DOUBLES ENERGY. The doubles portion [E_h] of the named corre",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:41076,energy,energy,41076,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"l of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH\ :sub:`2`\ ), whose ground electronic state has two unpaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers in the; Z-matrix. Note the line with ``0 3`` at the beginning of the molecule; specification below. In this example we will also specify the bond length; and bond angle as variables (:math:`R` and :math:`A`), whose values are given; at the end of the Z-matrix specification. .. literalinclude:: @SFNX_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; k",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:5768,energy,energy,5768,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"l_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:363118,energy,energy,363118,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 're",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:370837,energy,energy,370837,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:175785,energy,energy,175785,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:177959,energy,energy,177959,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:109286,energy,energy,109286,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:446313,energy,energy,446313,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:97980,energy,energy,97980,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:388580,energy,energy,388580,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:21024,energy,energy,21024,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:21755,energy,energy,21755,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:23030,energy,energy,23030,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:26218,energy,energy,26218,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:26949,energy,energy,26949,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:28224,energy,energy,28224,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:28955,energy,energy,28955,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:30955,energy,energy,30955,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:515673,energy,energy,515673,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:21934,energy,energy,21934,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"l_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:27128,energy,energy,27128,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"lated CI wavefunctions that can be helpful in more ; challenging cases such as highly strained molecules or bond breaking reactions. The CI; code is based on the fast, determinant-based string formalism; of Handy [Handy:1980]_. It can solve for restricted active space; configuration interaction (RAS CI) wavefunctions as described by Olsen,; Roos, Jorgensen, and Aa. Jensen [Olsen:1988]_. Excitation-class; selected multi-reference CI wavefunctions, such as second-order CI,; can be formulated as RAS CI's. A RAS CI selects determinants for the; model space as those which have no more than :math:`n` holes in the lowest set; of orbitals (called RAS I) and no more than :math:`m` electrons in the highest; set of orbitals (called RAS III). An intermediate set of orbitals, if; present (RAS II), has no restrictions placed upon it. All determinants; satisfying these rules are included in the RAS CI. The DETCI module is also very efficient at computing full configuration; interaction; wavefunctions, and it is used in this capacity in the complete-active-space; self-consistent-field (CASSCF) code. It can also perform approximate; CASSCF computations in which one uses RAS restrictions on the CI excitations,; rather than doing a full CI in the active space. This is called a ; RASSCF. CASSCF and RASSCF computations are types of multi-configurational; self-consistent-field procedures, and are described in :ref:`sec:mcscf`. As mentioned above, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This user's; manual will provide only an ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:4468,efficient,efficient,4468,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['efficient'],['efficient']
Energy Efficiency,"lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-s",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228098,energy,energy,228098,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"le': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485221,energy,energy,485221,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"le': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:105407,energy,energy,105407,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"le': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:129461,energy,energy,129461,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"le. In; practice, this approximation is very good and should always be applied.; Publications resulting from the use of MP2 NO-based approximations should ; cite the following: [Hohenstein:2010:104107]_. Basic Keywords Controlling MP2 NO Approximations; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__nat_orbs_t2.rst; .. include:: autodir_options_c/sapt__nat_orbs_t3.rst; .. include:: autodir_options_c/sapt__nat_orbs_v4.rst; .. include:: autodir_options_c/sapt__occ_tolerance.rst. .. comment Advanced Keywords Controlling MP2 NO Approximations; .. comment ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. comment .. include:: autodir_options_c/sapt__nat_orbs_t2.rst. .. index:: SAPT; charge-transfer. .. _`sec:saptct`:. Charge-Transfer in SAPT; ^^^^^^^^^^^^^^^^^^^^^^^. It is possible to obtain the stabilization energy of a complex due to; charge-transfer effects from a SAPT computation. The charge-transfer energy ; can be computed with the SAPT module as described by Stone; and Misquitta [Misquitta:2009:201]_. Charge-transfer energies can be obtained from the following calls to the; energy function. ::. energy('sapt0-ct'); energy('sapt2-ct'); energy('sapt2+-ct'); energy('sapt2+(3)-ct'); energy('sapt2+3-ct'); energy('sapt2+(ccd)-ct'); energy('sapt2+(3)(ccd)-ct'); energy('sapt2+3(ccd)-ct'). For now, charge transfer computations are not available with open-shell SAPT0. A SAPT charge-transfer analysis will perform 5 HF computations: the dimer; in the dimer basis, monomer A in the dimer basis, monomer B in the dimer; basis, monomer A in the monomer A basis, and monomer B in the monomer B; basis. Next, it performs two SAPT computations, one in the dimer basis and; one in the monomer basis. Finally, it will print a summary of the; charge-transfer results::. SAPT Charge Transfer Analysis; ------------------------------------------------------------------------------------------------; SAPT Induction (Dimer Basis) -2.0970 [mEh] -1.3159 [",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:30118,charge,charge-transfer,30118,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,2,"['charge', 'energy']","['charge-transfer', 'energy']"
Energy Efficiency,"lecule input. If numerical errors results in symmetry ; breaking, while Cartesian constraints are active, symmetrization cannot occur and; an error will be raised, prompting you to restart the job. * To scan the potential energy surface by optimizing at several fixed values; of the dihedral angle of HOOH. .. code-block:: none. molecule hooh {; 0 1; H 0.850718 0.772960 0.563468; O 0.120432 0.684669 -0.035503; O -0.120432 -0.684669 -0.035503; H -0.850718 -0.772960 0.563468; }; ; set {; basis cc-pvdz; intrafrag_step_limit 0.1; }. lower_bound = [99.99, 109.99, 119.99, 129.99, 149.99]; upper_bound = [100, 110, 120, 130, 140, 150]; PES = []. for lower, upper in zip(lower_bound, upper_bound):; my_string = f""1 2 3 4 {lower} {upper}""; set optking ranged_dihedral = $my_string; E = optimize('scf'); PES.append((upper, E)). print(""\n\tcc-pVDZ SCF energy as a function of phi\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). * To scan the potential energy surface without the |optking__ranged_dihedral| keyword, a zmatrix; can be used. .. warning:: ; Rotating dihedrals in large increments without allowing the molecule to relax; in between increments can lead to unphysical geometries with overlapping functional groups in larger molecules,; which may prevent successful constrained optimzations. Furthermore, such a relaxed scan of the PES does; not always procude a result close to an IRC, or even a reaction path along which the energy changes in a; continuous way. .. code-block:: none. molecule hooh {; 0 1 ; H ; O 1 0.95; O 2 1.39 1 103 ; H 3 0.95 2 103 1 D . D = 99. units ang ; }. set {; basis cc-pvdz; intrafrag_step_limit 0.1 ; frozen_dihedral ("" 1 2 3 4 ""); }. dihedrals = [100, 110, 120, 130, 140, 150]; PES = []. for phi in dihedrals:; hooh.D = phi ; E = optimize('scf'); PES.append((phi, E)). print(""\n\tcc-pVDZ SCF energy as a function of phi\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). Multi-Fragment Optimizations; ^^^^^^^^^^^^^^^^^^^",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:8578,energy,energy,8578,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['energy'],['energy']
Energy Efficiency,"lementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114]_.; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass--Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos' ANO basis sets. .. note:: See also :ref:`sec:DKH` for another relativistic Hamiltonian. .. _`sec:ScalarRelativistic`:. A First Example; ^^^^^^^^^^^^^^^. The following is a simple input that will perform a Hartree--Fock calculation; using the X2C Hamiltonian. ::. molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz; relativistic x2c; }. energy('hf'). This computation yields the following result::. @RHF Final Energy: -100.10007984692388. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7611816259664579; Two-Electron Energy = 45.4843682167491039; Total Energy = -100.1000798469238902. while a non-relativistic calculation yields the following energy::. @RHF Final Energy: -100.01928891411315. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6645256529074572; Two-Electron Energy = 45.4685031765008461; Total Energy = -100.0192889141131474. Basis sets options; ^^^^^^^^^^^^^^^^^^. The X2C module in |PSIfour| supports different combinations of basis set.; By default, if the input file specifies only |mints__basis|, then the X2C; module will solve the modified Dirac equation in an uncontracted basis and then; recontract the X2C Hamiltonian in the original basis.; Alternatively, the user can use |globals__basis_relativistic| to specify a different; basis set to solve the modified Dirac equation. ::. set {; basis cc-pvdz-dk; basis_relativistic cc-pvtz-dk; relativistic x2c; }. It is recommended that when employing the X2C relativistic Hamiltonian, that you use a fully; decontracted basis set. This can be done simply in the input by adding ""-decon"" to the ; name of th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst:2801,energy,energy,2801,doc/sphinxman/source/relativistic.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst,1,['energy'],['energy']
Energy Efficiency,"les.; .. #; .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: DFTNL; .. _`sec:dftnl`:. DFT-NL; ======. .. codeauthor:: Daniel G. A. Smith and Holger Kruse; .. sectionauthor:: Holger Kruse. Non-local (NL), density based correlation energy from the VV10 kernel can be added; to arbitrary functionals. .. math:: E_{DFT-NL}=E_{DFT}+E_{NL}. For pre-defined functionals (see Functional overview in :ref:`this Table <table:dft_all>` ) it is sufficient to add `-NL` to; the functional name::. energy('b3lyp-nl'). Modification of the parameters `b` and `C` is done setting |scf__dft_vv10_b| and |scf__dft_vv10_c|. The `C` is usually left unchanged and the originally proposed; value of `C=0.0093` is used. Adding |scf__dft_vv10_b| to any functional activates the calculation of the VV10 kernel. A BLYP-NL calculation can be set as follows::. set DFT_VV10_B 4.0; energy('blyp'). The default `C` parameter will be used. Similar to |scf__dft_dispersion_parameters| the tuple |scf__nl_dispersion_parameters| can used::. set NL_DISPERSION_PARAMTERS [4.0]; energy('blyp'). which is equivalent to the example above. Further examples can be found in the respective :source:`regression test <tests/dft-vv10/input.dat>`. post-SCF time savings; ~~~~~~~~~~~~~~~~~~",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftnl.rst:1241,energy,energy,1241,doc/sphinxman/source/dftnl.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftnl.rst,1,['energy'],['energy']
Energy Efficiency,"lex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This user's; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix :ref:`apdx:detci`. For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, *etc.*,; with the common name for that CI wavefunction, like ``energy('cisd')`` ; for a CISD single-point energy. The Python driver; recognizes ``cisd``, ``cisdt``, and ``cisdtq``. As mentioned above, codes; written specifically for CISD will be more efficient than DETCI for a ; CISD computation, and ``energy('cisd')`` by default will call other,; more efficient modules. To force a CISD computation with DETCI,; set |globals__qc_module| = DETCI. . Higher order single-reference CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ``ci6``. A full; CI can be specified by ``fci``. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like ``energy('detci')``. The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially |detci__ex_level|) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in :source:`samples`. .. _`table:ci_spaces`:. .. table:: Orbital spaces for CI computations. +----------------------------+----------------------------+-----------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:6142,efficient,efficient,6142,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,3,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"ll file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously. Elementary Restart; ==================. The |PSIfour| intermediate files use the following naming scheme ::. psi.PID.name.filenumber. where by default, PID is the process number, name the name of the molecule,; and filenumber is listed in :ref:`content <apdx:psiFiles>`. For those modules providing restart capabilities, the previous file can; be provided through the``restart_file`` option ::. energy('scf',restart_file='./psi.PID.name.filenumber'). Only the filenumber is necessary for the driver to appropriately rename the; file and copy it to the scratch directory where |PSIfour| will expect it.; The restart capabilities of a specific method (if any) are found in that method's documentation. To provide multiple files, pass them as arguments of a Python list ::. energy('scf',restart_file=['./file1.filenumber','./file2.filenumber']). Note that the ``restart_file`` options is only available for energy procedures as of now. Executing |PSIfour| with the :option:`psi4 -m` (for; messy) flag will prevent files being deleted at the end of the run::. psi4 -m. The mechanism for restarting HF/DFT calculations is described in details :ref:`here <sec:scfrestart>`. .. _`sec:save_wfn`:. Saving the Wavefunction; =======================. A core object of |PSIfour| is the Wavefunction (short ``wfn``) object ::. energy, wfn = energy('scf',return_wfn=True). This C++/Python object (:py:class:`psi4.core.Wavefunction`) contains orbital; data, basis set information, result variables and more.; It can be saved either to a numpy file or converted to a python dictionary ::. # write the wavefunction to file; wfn.to_file('my_wfn'). # alternatively store the dict representation of the wavefunction in memory; wfn_dict = wfn.to_file(). In either form, its attributes can be set and edited.; This is an expert-level feature, though.; In general, let |PSIfour| create the Wavefunction, then tr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:5986,energy,energy,5986,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['energy'],['energy']
Energy Efficiency,"lobals__scf_type| | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | b3lyp, Hybrid DFT | |globals__scf_type| | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | wb97x, LRC DFT | |globals__scf_type| | ✓̲ ✓̳ | ✓̲ ✓̳ | | ✓̲ ✓̳ | ✓̲ ✓̳ | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | b2plyp, DH DFT\ [#r10]_ | |globals__scf_type| | ✓̲ ✓̲ ✓̳ ✓̳ ✓̲ ✓̲ | | | ✓̲ ✓̲ ✓̳ ✓̳ ✓̲ ✓̲ | | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#r1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#r2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#r3] Finite difference gradients are not marked explicitly by ""∷"", but the capability can be gleaned from the energy availability.; .. [#r4] Finite difference Hessians are not marked explicitly by ""∷"", but the capability can be gleaned from the gradient or energy availability.; .. [#r10] DH-DFT only available with DF-MP2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_scf.rst:5036,energy,energy,5036,doc/sphinxman/source/preview_capabilities_scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_scf.rst,2,['energy'],['energy']
Energy Efficiency,"lt'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:446913,energy,energy,446913,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"lt'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:359857,energy,energy,359857,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ltdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:169870,energy,energy,169870,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ltdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:171203,energy,energy,171203,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ltdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'm",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:479481,energy,energy,479481,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"luate the Kohn--Sham potentials and energies to a high degree of accuracy. The; evaluation of these numerical integrals can be made to be linear scaling with a; reasonable amount of cleverness (mostly related to the fact that the basis; functions decay exponentially), meaning that the Coulomb and diagonalization; steps become rate limiting. This enormous potential speed gain over Hartree--Fock; with potentially exact treatment of electron correlation for ""free"" was one of; the primary motivations for KS-DFT's adoption by chemists in the late 1980s and; early 1990s. Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn--Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions. Generalized Kohn--Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as ""implicit"" density; functionals, as the orbitals are themselves functionals of the Kohn--Sham; potential. The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree--Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note tha",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:8785,charge,charge,8785,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['charge'],['charge']
Energy Efficiency,"luster Theory,""; F. A. Evangelista, E. Prochnow, J. Gauss, and H. F. Schaefer,; *J. Chem. Phys.* **132**, 074107 (2010).; (doi: `10.1063/1.3305335 <https://doi.org/10.1063/1.3305335>`_). Mk-MRCCSDT(-n). * ""Triple Excitations in State-Specific Multireference Coupled; Cluster Theory: Application of Mk-MRCCSDT and Mk-MRCCSDT-n Methods to; Model Systems,"" F. A. Evangelista, A. C. Simmonett, W. D. Allen,; H. F. Schaefer, and J. Gauss, *J. Chem. Phys.* **128**, 124104; (2008).; (doi: `10.1063/1.2834927 <https://doi.org/10.1063/1.2834927>`_). Mk-MRPT2. * ""A Companion Perturbation Theory for State-specific; Multireference Coupled Cluster Methods,""; F. A. Evangelista, A. C. Simmonett, H. F. Schaefer, D. Mukherjee, and; W. D. Allen,; *Phys. Chem. Chem. Phys.* **11**, 4728-4741 (2009).; (doi: `10.1039/b822910d <https://doi.org/10.1039/b822910d>`_). Symmetry-Adapted Perturbation Theory (SAPT); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. |PSIfour| features an extremely efficient code to perform wavefunction-based; Symmetry Adapted Perturbation Theory (SAPT). A good review article for this; method is as follows:. * ""Perturbation Theory Approach to Intermolecular Potential Energy; Surfaces of van der Waals Complexes,"" B. Jeziorski, R. Moszynski,; and K. Szalewicz, *Chem. Rev.* **94**, 1887-1930 (1994).; (doi: `10.1021/cr00031a008 <https://doi.org/10.1021/cr00031a008>`_). |PSIfour| benefits enormously from the introduction of density fitting (DF); into SAPT. There are several SAPT truncations available in |PSIfour|. For; guidance on which one to choose, see the SAPT section of the manual; and refer to the following systematic study:. * ""Levels of Symmetry Adapted Perturbation Theory (SAPT). I. Efficiency and; Performance for Interaction Energies,'' T. M. Parker, L. A. Burns, R. M.; Parrish, A. G. Ryno, and C. D. Sherrill, *J. Chem. Phys.* **140**,; 094106 (2014).; (doi: `10.1063/1.4867135 <https://doi.org/10.1063/1.4867135>`_). The theory and implementation of DF-SAPT is discussed;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:14967,efficient,efficient,14967,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['efficient'],['efficient']
Energy Efficiency,"lute energies (1E-06 au) and; relative energies (below 0.002 kcal/mol for S22), depending also on the applied grid, compared; to older versions. We advise not to mix absolute energies absolute energies from before and after this change for the; calculation of relative energies. .. note:: After May 2017 (anytime after the v1.1 release), |PSIfour|; switched from hand- (+Matlab) coded functionals to Libxc. Thus; many DFT results will be slightly different. Functionals more than; slightly different are B97-D, wB97X (note, *not* wB97X-D), SOGGA,; DFDL, and M05. Theory; ~~~~~~. Generalized Kohn--Sham Density Functional Theory (KS-DFT) [Kohn:1965:A1133]_ [Parr:1989]_ is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio. Pure Kohn--Sham DFT is built on the Hohenberg--Kohn theorems [Hohenberg:1964:136]_ which states: A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true :math:`N`\ -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn--Sham orbitals. KS-DFT borrows much of the machinery of Hartree--Fock, as is; evident by looking at the energy expression,. .. math::. E_{\mathrm{KS}}; &= \sum_{i} \langle i | \hat h | i \rangle; + \frac 1 2 \sum_{i,j} [ii|jj] + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta] \\; &= D_{\mu\nu}^{\mathrm{T}}\left(T_{\mu\nu} +; V_{\mu\nu}\right) + \frac{1}{2} D_{\mu\nu}^{\mathrm{T}}; D_{\lambda\sigma}^{\mathrm{T}} (\mu\nu|\lambda\sigma) + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta]. Here, :math:`T` is the noninteracting quasiparticle kinetic energy operat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:2878,energy,energy,2878,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"lysis with PyMol and perform a; .. ""difference F-SAPT"" analysis; .. - `I-SAPT#1; .. <https://www.youtube.com/watch?v=fD6mu_tTG_c&index=3&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Describes the use of I-SAPT to analyze the interaction between the two phenol; .. groups in a 2,4-pentanediol molecule.; .. - `I-SAPT#2; .. <https://www.youtube.com/watch?v=hDbonAOD5dY&index=4&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Discusses how to plot the density fields and ESPs of the various moieties of; .. the I-SAPT embedding scheme with PyMol; .. - `F/I-SAPT Options; .. <https://www.youtube.com/watch?v=KFkPKSUZVfI&index=5&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Details all of the more-advanced options in the F/I-SAPT code (rarely needed). The scripts discussed below are located in :source:`psi4/share/psi4/fsapt`. F-SAPT: A Representative Example; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Below, we show an example of using F-SAPT0/jun-cc-pVDZ to analyze the; distribution of the intermolecular interaction energy components between the; various hydroxyl and phenyl moieties of the phenol dimer. This example is; explicitly included in :srcsample:`fsapt1`. A video; lecture explaining this example is available `F-SAPT#1; <https://www.youtube.com/watch?v=J22J0wh4mVo&index=1&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_,; while an additional video describing how to plot the order-1 F-SAPT analysis; with PyMol and perform a ""difference F-SAPT""; analysis is available `F-SAPT#2; <https://www.youtube.com/watch?v=fqlzXsayec0&index=2&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_::. memory 1 GB; ; molecule mol {; 0 1; O -1.3885044 1.9298523 -0.4431206; H -0.5238121 1.9646519 -0.0064609; C -2.0071056 0.7638459 -0.1083509; C -1.4630807 -0.1519120 0.7949930; C -2.1475789 -1.3295094 1.0883677; C -3.3743208 -1.6031427 0.4895864; C -3.9143727 -0.6838545 -0.4091028; C -3.2370496 0.4929609 -0.7096126; H -0.5106510 0.0566569 1.2642563; H -1.7151135 -2.0321452 1.7878417; H -3.9024664 -2.5173865 0.7197",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:4628,energy,energy,4628,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['energy'],['energy']
Energy Efficiency,"l}` is either; the IUPAC molecule name or the CID number. See :ref:`sec:pubchem` for; details. **Symmetry**; The symmetry can be specified by a line reading :samp:`symmetry; {symbol}`, where :samp:`{symbol}` is the Sch\ |o_dots|\ nflies symbol; of the (Abelian) point group to use for the computation, one of one of; ``c1``, ``c2``, ``ci``, ``cs``, ``d2``, ``c2h``, ``c2v``, or ``d2h``.; This need not be specified, as the molecular symmetry is automatically; detected by |PSIfour|. See :ref:`sec:symmetry` for details. **Fragments**; A line reading ``--`` is interpreted as the separator between two non-covalently ; bound molecular fragments. See :ref:`sec:fragments` for details. Multiple Molecules; ==================. To facilitate more elaborate computations, it is possible to provide a name for; each molecule and tell |PSIfour| which one should be used in a given; calculation. For example, consider the following input file::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; energy('scf') # on H2; ; clean(). molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; energy('scf') # on H. Here, two separate jobs are performed on two different molecules; the first is; performed on H\ :sub:`2`, while the second is for H atom. The last molecule to be; specified is the ""active"" molecule by default. To explicitly activate a named; molecule, the activate command is provided. With it, the above input file can be; equivalently written as follows. Alternatively, the molecule can be specified; directly to the computing function. Below, the third calculation is the same as; the first. ::. molecule h2 {; H; H 1 0.9; }; ; molecule h {; H; }; ; activate(h2); set basis cc-pvdz; set reference rhf; energy('scf') # on H2; ; clean(). activate(h); set basis cc-pvdz; set reference uhf; energy('scf') # on H. # --------------------------------------; # equivalent to previous input ends here. clean(). set reference rhf; energy('scf', molecule=h2) # on H2. :ref:`sec:jobContr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:6689,energy,energy,6689,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['energy'],['energy']
Energy Efficiency,"m Chemistry Programs. T. Daniel Crawford ; Version: June 18, 2001 ; crawdad@vt.edu. I. Introduction. In many-body theories such as coupled cluster or MBPT, one finds many; complicated algebraic expressions involving products of multi-index; quantities such as one- and two-electron integrals, cluster; amplitudes, density matrices, etc. Efficient evaluation of; these products can require a great deal of effort, particularly if one; wishes to use Abelian point-group symmetry to reduce the number of; terms that must be computed and stored. The direct-product; decomposition library, LIBDPD, is designed to assist the programmer; with this problem by providing (1) a symmetry-blocked, matrix-based; storage scheme for all two- and four-index quantities, (2) a set of; functions for evaluating various types of products among them, and (3); a set of utilities for sorting them to different index orderings. The; library is currently used in the set of coupled cluster and; perturbation theory energy and analytic gradient codes under; development in the PSI package of quantum chemical programs. This; manual describes the design of the library and provides a set of; examples for its use. The header file dpd.h provides proper declarations for all; structures and functions used in the library. II. Fundamental Symmetry Concepts. In the current version of libdpd, I assume that all multi-index; quantities are totally symmetric, i.e., the direct product of; the irreducible representations (irreps) associated with the component; orbital indices corresponds to the totally symmetric irrep of the; given point group. (This assumption is in the process of being; removed, however.) Furthermore, each orbital subset of interest; (e.g., occupied or virtual orbitals) must be grouped by; symmetry. This allows one to organize the given quantity in a; symmetry-blocked matrix for which only the symmetry-allowed elements; are actually stored on disk or in memory. As an example, consider the set of two-ele",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html:1132,energy,energy,1132,doc/sphinxman/source/attic/libdpd.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html,1,['energy'],['energy']
Energy Efficiency,"math:`2ovN_aux` doubles. SAPT(DFT) requires a few special treatments to obtain accurate; result. The DFT functionals used in SAPT(DFT) need to be asymptotically; corrected with Gradient Regulated Asymptotic Correction scheme (GRAC),; in order to recover the correct long-range asymptotic behavior; (approaching :math:`-1/r` as :math:`r` approaches infinity). The program; requires manual input of GRAC shift parameter for each monomer through; keywords |sapt__sapt_dft_grac_shift_a| and |sapt__sapt_dft_grac_shift_b|,; which should be equal to the difference of the actual ionization; potential and the corresponding Kohn-Sham HOMO energy. The dispersion; term needs to be computed with orbital response for good accuracy,; and it is recommended to enable |sapt__sapt_dft_do_hybrid| (set to; ``True`` by default). The coupled exchange-dispersion energy is usually; estimated by scaling from the uncoupled value either by a fitted fixed; value (suggested initially by [Hesselmann:2014:094107]_ for a local Hartree--Fock (LHF) formulation and then revised; by [Xie:2022:024801]_ for non-LHF) or; by the ratio of; coupled and uncoupled dispersion energy (suggested by [Podeszwa:2006:400]_ ). ; This can be controlled by keyword |sapt__sapt_dft_exch_disp_scale_scheme|, ; with ``FIXED`` using the Hesselmann/Xie approach (|PSIfours| default prior ; to Nov 2022), ``DISP`` using the Podeszwa approach (|PSIfours| default after Nov 2022),; or ``NONE`` for not scaling and using the uncoupled exchange-dispersion ; energy directly. .. warning:: Since Nov 2022, the defaults of options |sapt__sapt_dft_exch_disp_scale_scheme| and |sapt__sapt_dft_exch_disp_fixed_scale|; have been changed. Before, the former defaulted to ``FIXED`` with Hesselmann value of 0.686 for the latter. Now, the former defaults to ``DISP`` and should you instead select ``FIXED``, the default for the latter is the Xie value of 0.770. This might cause; an older version of |PSIfour| to produce a different value of; exchange-dispersio",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:23905,energy,energy,23905,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,2,['energy'],['energy']
Energy Efficiency,"math:`E^{(2)}` scales quadratically with the error in the amplitudes. No local approximations have been made so far, and this iterative approach can; be used to exactly determine :math:`E^{(2)}` with :math:`{\cal O}(N^5)` cost.; In DLPNO-MP2, the first local approximation is to screen distant, non-interacting; orbital pairs ``ij``. Orbital pairs are screened if below both an overlap criteria:. .. math::; :label: Differential Overlap Integral. DOI_{ij} \equiv \sqrt{\int d\mathbf{r} | \chi_{i}(\mathbf{r}) | ^{2} | \chi_{j}(\mathbf{r}) | ^{2}}, . and a pair energy estimate: . .. math::; :label: Dipole Approximation. e_{ij}^{approx} = -\frac{4}{R^{6}} \sum_{a_{i} \in [i],b_{j} \in [j]} \frac{ (2 \langle i | \mathbf{r} | a_{i} \rangle \langle j | \mathbf{r} | b_{j} \rangle)^{2}}{\epsilon_{a_{i}} + \epsilon_{b_{j}} - f_{ii} - f_{jj}},. in which small domains of virtual orbitals are used for each local MO. As a; result, an asymptotically linear number of ``ij`` pairs enter the local MP2; equations, and the approximate pair energy of neglected pairs is added to; the final energy. The second major local approximation in DLPNO-MP2 is the truncation of the virtual; space. Initially, exchange integrals are calculated in the LMO/PAO basis using the; standard density fitting approach:. .. math::; :label: Exchange. (ia|jb) = \sum_{K,L \in [ij]} (ia|K)[\mathbf{J}^{-1}]_{KL}(L|jb). This is done with linear scaling effort by exploiting the locality of the LMOs, PAOs,; and auxiliary basis functions.; Solving the iterative local MP2 equations in the LMO/PAO basis requires large PAO; domains to achieve reasonable accuracy. Instead, the virtual space is transformed; into the much more compact pair natural orbital representation. The (approximate); PNOs diagonalize the virtual-virtual block of the (approximate) MP2 density matrix:. .. math::; :label: PNOs. D_{ij}^{ab} = \frac{1}{1 + \delta_{ij}}[\tilde{t}_{ij}^{\dagger}t_{ij} + \tilde{t}_{ij}t_{ij}^{\dagger}]^{ab}. which is constructed fr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:6711,energy,energy,6711,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,2,['energy'],['energy']
Energy Efficiency,"math:`^2A_1` state can be obtained with; the ::. SOCC = [1, 0, 0, 0]. specification, which would become ::. SOCC = [1, 0]. under the above-mentioned reduction in symmetry. The :math:`^2B_2` state,; whose singly-occupied orbitals are ::. SOCC = [0, 0, 0, 1]. would be mapped to ::. SOCC = [1, 0]. which is the same occupation as the :math:`^2A_1` state. In this case, the; :math:`^2A_1` state is lower in energy, and is not problematic. The distorted; geometries for the :math:`^2B_2` state are excited states that are subject to; variational collapse. One way to obtain reliable energies for these states is; to use a multi-state method; in this case it's easier to run the entire; computation in the lowest symmetry needed during the finite difference; procedure. .. index:: molecule; multiple fragments; .. _`sec:fragments`:. Non-Covalently Bonded Molecule Fragments; ========================================. |PSIfour| has an extensive range of tools for treating non-covalent; intermolecular forces, including counterpoise corrections and symmetry adapted; perturbation theory methods. These require the definition of which fragments; are interacting within the complex. |PSIfour| provides a very simple mechanism; for doing so: simply define the complex's geometry using the standard; Cartesian, Z-matrix, or mixture thereof, specifications and then place two; dashes between nonbonded fragments. For example, to study the interaction; energy of ethane and ethyne molecules, we can use the following molecule; block::. molecule eneyne {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; }. This specifies that there are two neutral, spin-singlet fragments. It is; possible to further specify that the overall complex is",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:18697,adapt,adapted,18697,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['adapt'],['adapted']
Energy Efficiency,"me ROOT m -> ROOT n EINSTEIN A (LEN). The Einstein A coefficient, the spontaneous emission 'probability.'; Units are in [1/s].; Describes the transition between roots *m* and *n*. .. psivar:: CCname ROOT m (IN h) -> ROOT n (IN i) EINSTEIN A (LEN). The Einstein A coefficient, the spontaneous emission 'probability.'; Units are in [1/s].; Describes the transition between root *m* within irrep *h* and root *n* which irrep *i*. .. psivar:: CCname ROOT m (h) -> ROOT n (i) EINSTEIN A (LEN). The Einstein A coefficient, the spontaneous emission 'probability.'; Units are in [1/s].; Describes the transition between roots *m* and *n*, which are in irreps *h* and *i*, respectively.. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN A (LEN) - h TRANSITION. The Einstein A coefficient, the spontaneous emission 'probability.'; Units are in [1/s].; Describes the irrep *h* transition between roots *m* and *n*. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between roots *m* and *n*. .. psivar:: CCname ROOT m (IN h) -> ROOT n (IN i) EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between root *m* within irrep *h* and root *n* which irrep *i*. .. psivar:: CCname ROOT m (h) -> ROOT n (i) EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between roots *m* and *n*, which are in irreps *h* and *i*, respectively.. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN B (LEN) - h TRANSITION. The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the irrep *h* transition between roots *m* and *n*. .. psivar:: CCname ROOT m -> ROOT n ROTAT",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:13892,energy,energy,13892,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:52267,energy,energy,52267,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:274858,energy,energy,274858,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:281228,energy,energy,281228,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"metry; c1`` molecule keywords, as in the example above. As a reminder, only; SAPT0 can handle the interaction of both closed- and open-shell monomers.; Higher-order SAPT and SAPT(DFT) are currently available only ; for computation of interactions between; closed-shell singlets. The SAPT codes in |PSIfour| have been written; to utilize density fitting, which is much faster than using conventional; 4-index electron repulsion integrals. This happens automatically and; does not require any additional keywords to be specified (both the ; SAPT computations and the underlying Hartree-Fock computations will; utilize density fitting). For SAPT(DFT), the user will need to manually specify the GRAC shift of ; both monomers, defined by the difference of ionization potential (IP) and; Kohn-Sham HOMO energy. The ionization potential data for many common molecules ; is available in NIST Chemistry Webbook. Alternatively, one can estimate the; ionization potential of molecule by computing the energy difference between; the molecule as given, and the molecule after one electron has been removed; (e.g., the energy difference between a neutral molecule and its cation). The values of GRAC shifts should be given in Hartree. For the example above,; the GRAC shift value of both molecules are calculated to be 0.1307 (using experimental; IP from CCCBDB), and the user would specify them using the following keywords::. set globals {; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307 ; }. A complete, minimal example of a SAPT(DFT) computation is given below. ::. molecule {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; H 1.680398 -0.373741 -0.758561; H 1.680398 -0.373741 0.758561. units angstrom; }; ; set {; basis aug-cc-pVDZ; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307; }; ; energy('sapt(dft)'). As already mentioned above, the SAPT0 module for open-shell cases can also; use exact ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:15738,energy,energy,15738,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"mited interface to gCP that is used; only to implement the ""HF-3c"" [Sure:2013:1672]_, ""PBEh-3c""; [Grimme:2015:054107]_, ""B97-3c"" [Brandenburg:2018:b973c]_, ""r2SCAN-3c"" [Grimme:2021:064103]_,; and ""wB97X-3c"" [Muller:2023:014103]_ methods (both energy and gradient).; The interface can use classic or mctc-gcp executables but only the latter implements ""B97-3c"" and ""r2SCAN-3c"".; The newest wB97X-3c method doesn't use a gcp correction (it does use ECPs down to first row elements); but is listed here for completeness of the ""3c"" family.; A :ref:`DFTD3 <sec:dftd3>` executable, classic or simple-dftd3, must also be available for; the HF-3c, PBEh-3c, or B97-3c methods to run.; A :ref:`DFTD4 <sec:dftd3>` python module must also be available for; the r2SCAN-3c or wB97X-3c methods to run.; These method are defined with their own basis set and thus no basis set should be set by the user.; |PSIfour| will select the intended basis sets: HF-3c/MINIX, PBEh-3c/def2-mSVP, B97-3c/def2-mTZVP, r2SCAN-3c/def2-mTZVPP, wB97X-3c/vDZP.; If a basis has previously been set for another calculation, use the slash syntax to ""empty"" the basis; option for the scope of the current calculation, ``energy(""hf3c/"")``. A few practical examples:. * HF-3c single point with default minix basis ::. energy('hf3c'). * PBEh-3c optimization with default def2-mSVP basis ::. optimize('pbeh3c'). * r2SCAN-3c with default basis after basis set ::. set basis cc-pvdz; energy('r2scan3c/'). If only BSSE/basis set corrections (rather than total energies) are of; interest, the ``gcp`` program can be run independently of the scf; through the python function :py:func:`~qcdb.Molecule.run_gcp`. (This function; is the same |PSIfour|/``gcp`` interface that is called during an scf job.); This route is much faster than running a HF or DFT energy. ::. molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). >>> E, G = nene.run_gcp('hf3c'). >>> E, G = nene.run_gcp(func='HF3c', verbose=True). .. autofunction:: qcdb.Molecule.run_gcp. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst:4835,energy,energy,4835,doc/sphinxman/source/gcp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst,4,['energy'],['energy']
Energy Efficiency,"mm`:. External potentials and QM/MM; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In addition to the implementation of :ref:`EFP <sec:libefp>` for accurate QM/MM; computations, |PSIfour| can perform more rudimentary QM/MM procedures via the; |scf__extern| keyword. The following snippet, extracted from the; :srcsample:`extern1` test case, demonstrates its use for a TIP3P external potential::. import numpy as np; external_potentials = [; [-0.834, np.array([1.649232019048,0.0,-2.356023604706]) / psi_bohr2angstroms],; [ 0.417, np.array([0.544757019107,0.0,-3.799961446760]) / psi_bohr2angstroms],; [ 0.417, np.array([0.544757019107,0.0,-0.912085762652]) / psi_bohr2angstroms]]. gradient('scf', external_potentials=external_potentials). The ``external_potentials`` array has three rows for three separate; particles, and it is passed to the SCF code on the last line. The; rows are composed of the atomic charge, x coordinate, y coordinate,; and z coordinate in that order. The atomic charge and coordinates are; specified in atomic units, [e] and [a0]. Add as many particle rows as; needed to describe the full MM region. .. caution:: In |PSIfour| previous to Spring 2022 and v1.6, setting an; external potential like the above looked like ::. Chrgfield = QMMM(); Chrgfield.extern.addCharge(-0.834, 1.649232019048, 0.0, -2.356023604706); Chrgfield.extern.addCharge( 0.417, 0.544757019107, 0.0, -3.799961446760); Chrgfield.extern.addCharge( 0.417, 0.544757019107, 0.0, -0.912085762652); psi4.set_global_option_python('EXTERN', Chrgfield.extern). gradient('scf'). The main differences are that (1) the specification of; charge locations in the old way used the units of the active; molecule, whereas the new way always uses Bohr and (2) the; specification of the charge and locations in the old way used the; :py:class:`psi4.driver.QMMM` class directly and added one charge; per command, whereas the new way consolidates all into an array and; passes it by keyword argument to the calculation. The successor to the",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:54650,charge,charge,54650,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['charge'],['charge']
Energy Efficiency,"mma_1}` corresponds to a mean-field Hartree--Fock-like density,; while the non-idempotent correction :math:`\boldsymbol{\tau}`; depends on the density cumulant and describes the electron correlation effects.; Inserting the above two equations into the energy expression, we obtain:. .. math:: . E_{DCT} = \frac{1}{2} \left( h_p^q + f_p^q \right) \gamma_q^p + \frac{1}{4} \bar{g}_{pq}^{rs} \lambda_{rs}^{pq}. where the antisymmetrized two-electron integrals and the generalized Fock operator; matrix elements were defined as follows:. .. math:: . \bar{g}_{pq}^{rs} = g_{pq}^{rs} - g_{pq}^{sr}. .. math:: . f_p^q = h_p^q + \bar{g}_{pr}^{qs} \gamma_{s}^{r}. Energy functional :math:`E_{DCT}` has several important properties. First,; the energy is now a function of two sets of independent parameters, the; idempotent part of :math:`\boldsymbol{\gamma_1}` (:math:`\boldsymbol{\kappa}`) and the density cumulant; (:math:`\boldsymbol{\lambda_2}`). As a result, the energy functional is Hermitian,; which is important for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of :math:`\boldsymbol{\gamma_1}` is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; :math:`\boldsymbol{\gamma_2}`. In order to obtain the DCT energy, two conditions must be satisfied:. 1) The energy must be stationary with respect to a set of orbitals. This can be done by; diagonalizing the generalized Fock operator (as in the DC-06 and DC-12 methods, see below),; which introduces partial orbital relaxation, or by fully relaxing the orbitals and minimizing the entire energy expression; (as in the ODC-06 and ODC-12 methods). 2) The energy must be stationary with respect to the variation of the density;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:4313,energy,energy,4313,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"mment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from C-side'); .. comment activate(mB); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment set dft_dispersion_parameters [0.75, 20.0]; .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment set dft_dispersion_parameters [1.000, 0.7875, 0.4289, 4.4407]; .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_pbe_d3bj[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.217, 14.0]; .. comment energy('b3lyp-d3'); .. comment compare_values(ref_pbe_d3zero[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment activate(mA); .. comment set dft_dispersion_parameters [1.0]; .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:29679,energy,energy,29679,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:334573,energy,energy,334573,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 're",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:483279,energy,energy,483279,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:484633,energy,energy,484633,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:63174,energy,energy,63174,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:81393,energy,energy,81393,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:174315,energy,energy,174315,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:527994,energy,energy,527994,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:359680,energy,energy,359680,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"monomers. SAPT does not use spatial symmetry and needs the geometry; of the system to remain fixed throughout monomer and dimer calculations.; These requirements are imposed whenever a SAPT calculation is requested; but can also be set explicitly with the ``no_reorient`` and ``symmetry; c1`` molecule keywords, as in the example above. As a reminder, only; SAPT0 can handle the interaction of both closed- and open-shell monomers.; Higher-order SAPT and SAPT(DFT) are currently available only ; for computation of interactions between; closed-shell singlets. The SAPT codes in |PSIfour| have been written; to utilize density fitting, which is much faster than using conventional; 4-index electron repulsion integrals. This happens automatically and; does not require any additional keywords to be specified (both the ; SAPT computations and the underlying Hartree-Fock computations will; utilize density fitting). For SAPT(DFT), the user will need to manually specify the GRAC shift of ; both monomers, defined by the difference of ionization potential (IP) and; Kohn-Sham HOMO energy. The ionization potential data for many common molecules ; is available in NIST Chemistry Webbook. Alternatively, one can estimate the; ionization potential of molecule by computing the energy difference between; the molecule as given, and the molecule after one electron has been removed; (e.g., the energy difference between a neutral molecule and its cation). The values of GRAC shifts should be given in Hartree. For the example above,; the GRAC shift value of both molecules are calculated to be 0.1307 (using experimental; IP from CCCBDB), and the user would specify them using the following keywords::. set globals {; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307 ; }. A complete, minimal example of a SAPT(DFT) computation is given below. ::. molecule {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:15545,energy,energy,15545,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"mory 1 GB; ; molecule mol {; 0 1; O -1.3885044 1.9298523 -0.4431206; H -0.5238121 1.9646519 -0.0064609; C -2.0071056 0.7638459 -0.1083509; C -1.4630807 -0.1519120 0.7949930; C -2.1475789 -1.3295094 1.0883677; C -3.3743208 -1.6031427 0.4895864; C -3.9143727 -0.6838545 -0.4091028; C -3.2370496 0.4929609 -0.7096126; H -0.5106510 0.0566569 1.2642563; H -1.7151135 -2.0321452 1.7878417; H -3.9024664 -2.5173865 0.7197947; H -4.8670730 -0.8822939 -0.8811319; H -3.6431662 1.2134345 -1.4057590; --; 0 1; O 1.3531168 1.9382724 0.4723133; H 1.7842846 2.3487495 1.2297110; C 2.0369747 0.7865043 0.1495491; C 1.5904026 0.0696860 -0.9574153; C 2.2417367 -1.1069765 -1.3128110; C 3.3315674 -1.5665603 -0.5748636; C 3.7696838 -0.8396901 0.5286439; C 3.1224836 0.3383498 0.8960491; H 0.7445512 0.4367983 -1.5218583; H 1.8921463 -1.6649726 -2.1701843; H 3.8330227 -2.4811537 -0.8566666; H 4.6137632 -1.1850101 1.1092635; H 3.4598854 0.9030376 1.7569489; symmetry c1; no_reorient; no_com; }; ; set {; basis jun-cc-pvdz; scf_type df; guess sad; freeze_core true; }; ; energy('fisapt0'). This file runs a DF-HF computation on the full dimer using |PSIfours| existing; SCF code. The monomer SCF computations are performed inside the FISAPT module,; following which a complete DF-SAPT0 computation is performed. Additional bits of; analysis are performed to generate the order-2 partition of the SAPT terms to; the level of nuclei and localized occupied orbitals |w--w| this generally does not; incur much additional overhead beyond a standard SAPT0 computations. The; nuclear/orbital partition data is written to the folder :file:`fsapt/` in the same; directory as the input file (this can be changed by |fisapt__fisapt_fsapt_filepath|). One obtains the desired F-SAPT partition by post-processing the data in; :file:`fsapt/`. Within this dir, the user is expected to provide the ASCII files; :file:`fA.dat` and :file:`fB.dat`, which describe the assignment of atoms to chemical; functional groups using 1-based orderin",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:6251,energy,energy,6251,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['energy'],['energy']
Energy Efficiency,"most appropriate for use with the primary basis.; For example, if the primary basis is aug-cc-pVDZ, the default; |fnocc__df_basis_cc| will be aug-cc-pVDZ-RI. Alternatively, the user can request that the DF-CCSD(T) procedure use a; set of vectors defined by the Cholesky decomposition of the ERI tensor as; the auxiliary basis. This feature is enabled by specifying |globals__cc_type| ``CD``.; CD methods can be enabled in the SCF; procedure as well, by specifying the |globals__scf_type| as ``CD``. The; accuracy of the decomposition can be controlled through the keyword; |fnocc__cholesky_tolerance|. .. comment This feature is enabled by specifying |fnocc__df_basis_cc| as ""CHOLESKY"". . The following input file sets up a DF-CCSD(T); computation using CD integrals ::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set {; scf_type cd; cc_type cd; basis aug-cc-pvdz; freeze_core true; }; energy('ccsd(t)'). The resulting CCSD(T) correlation energy will be equivalent to that; obtained from a conventional computation if |fnocc__cholesky_tolerance| is; sufficiently small (*e.g.* ``1e-9``). .. _`sec:fnogn`:. Gn theory; ~~~~~~~~~. The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]_\. The G2 procedure may be called through the; :py:func:`~psi4.driver.energy` wrapper: ::. energy('gaussian-2'). Supported methods; ~~~~~~~~~~~~~~~~~. The various methods supported by the FNOCC module in |Psifour| are; summarized in Table :ref:`FNOCC Methods <table:fnocc_methods>`; and detailed (except FNO) in Table :ref:`FNOCC Capabilities; <table:fnocc_stdsuite>`. Note that these methods are implemented; for closed-shell reference only. Without ``set qc_module fnocc``,; these methods may default to implementations in :ref:`other modules; <table:managedmethods>`. .. _`table:fnocc_methods`:. .. table:: Theoretical methods accessible through FNOCC. +-------------------------+------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:15639,energy,energy,15639,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:393180,energy,energy,393180,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,mp2p5-1 omp2p5-2 omp2p5-grad1 omp2p5-grad2 omp3-1 omp3-2; omp3-3 omp3-4 omp3-5 omp3-grad1 omp3-grad2 opt-lindep-change; opt1 opt1-fd opt2 opt2-fd opt3 opt4 opt5 opt6 opt7 opt8 opt9; opt11 opt12 opt13 opt14 opt15 opt16 opt-irc-1 opt-irc-2 opt-irc-3; opt-freeze-coords opt-full-hess-every; oremp-grad1 oremp-grad2; phi-ao; props1 props2 props3 props4 psimrcc-ccsd_t-1 psimrcc-ccsd_t-2; psimrcc-ccsd_t-3 psimrcc-ccsd_t-4 psimrcc-fd-freq1; psimrcc-fd-freq2 psimrcc-pt2 psimrcc-sp1 psithon1 psithon2; pubchem1 pubchem2 pywrap-alias pywrap-all pywrap-basis; pywrap-cbs1 pywrap-checkrun-convcrit pywrap-checkrun-rhf; pywrap-checkrun-rohf pywrap-checkrun-uhf pywrap-db1; pywrap-db3; pywrap-molecule rasci-c2-active rasci-h2o; rasci-ne rasscf-sp sad-scf-type sad1 sapt1 sapt2 sapt3 sapt4 sapt5 sapt6 sapt-dft-api sapt-dft-lrc; remp-energy1 remp-energy2; sapt-exch-disp-inf sapt-exch-ind-inf sapt-exch-ind30-inf; sapt7 sapt8 scf-bz2 scf-dipder scf-guess scf-guess-read1 scf-upcast-custom-basis; scf-guess-read2 scf-guess-read3 scf1 scf-occ scf2 scf3 scf4 scf5 scf6; scf7 scf-level-shift-rks scf-level-shift-uhf scf-level-shift-cuhf scf-level-shift-rohf; scf-property soscf-large soscf-ref; soscf-dft stability1 dfep2-1 dfep2-2 sapt-dft1 sapt-dft2 sapt-compare sapt-sf1 dft-custom dft-reference; stability2 stability3 tu1-h2o-energy tu2-ch2-energy tu3-h2o-opt scf-response1 scf-response2 scf-response3; scf-cholesky-basis scf-auto-cholesky; tu4-h2o-freq tu5-sapt tu6-cp-ne2 x2c1 x2c2 x2c3 x2c-perturb-h zaptn-nh2; options1 cubeprop-esp dft-smoke scf-hess1 scf-hess2 scf-hess3 scf-hess4 scf-hess5 scf-freq1 dft-jk scf-coverage; dft-custom-dhdf dft-custom-hybrid dft-custom-mgga dft-custom-gga; pywrap-bfs pywrap-align pywrap-align-chiral mints12 cc-module; tdscf-1 tdscf-2 tdscf-3 tdscf-4 tdscf-5 tdscf-6 tdscf-7; dft-pruning freq-masses sapt9 sapt10 sapt11 scf-uhf-grad-nobeta; linK-1 linK-2 linK-3; cbs-xtpl-energy-conv ddd-deriv nbody-he-4b ddd-function-kwargs; ); add_subdirectory(${test_name}); endforeach().,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt:5535,energy,energy,5535,tests/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt,3,['energy'],"['energy', 'energy-conv']"
Energy Efficiency,"mplexity of the original equations. Just as in; the familiar CCSD(T) method, the effects of connected triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contrib",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7195,energy,energy,7195,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"mprehend; }. set {; s_tolerance 0.0001 # Set an unreasonably tight; # tolerance to force canonical; basis aug-cc-pv5z # This diffuse basis will have; # small-ish eigenvalues for even H2O; print 3; }. energy('scf'). Output::. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 145 145 0 0 0 0; B 142 142 0 0 0 0; -------------------------------------------------------; Total 287 287 5 5 5 0; -------------------------------------------------------. ... Minimum eigenvalue in the overlap matrix is 1.6888063568E-05.; Using Canonical Orthogonalization with cutoff of 1.0000000000E-04.; Irrep 0, 1 of 145 possible MOs eliminated.; Irrep 1, 2 of 142 possible MOs eliminated.; Overall, 3 of 287 possible MOs eliminated. In this example, there are 287 AO basis functions after spherical harmonics are; applied. These are used to produce 287 symmetry adapted USOs, 145 of which are; assigned to irrep A, and 142 of which are assigned to irrep B. Within irrep A,; 144 OSOs fall above the eigenvalue cutoff, and within irrep B 140 OSOs fall; above the eigenvalue cutoff. In total, 284 molecular orbitals are chosen from; 287 AOs/USOs. .. _`sec:scfguess`:. Initial Guess; ~~~~~~~~~~~~~. In each step of the SCF procedure, a new Fock or Kohn--Sham potential is built; according to the previous density, following which the potential is diagonalized; to produce new molecular orbitals, from which a new density is computed. This; procedure is continued until either convergence is reached or a preset maximum; number of iterations is exceeded. Convergence is determined by both change in; energy and root-mean-square change in density matrix values, which must be below; the user-specified |scf__e_convergence| and |scf__d_convergence|, respectively.; The maximum number of iterations is specified by the |scf__maxiter| option. It; should be noted that SCF is a chaotic process, and,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:17197,adapt,adapted,17197,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['adapt'],['adapted']
Energy Efficiency,"n also be accessed from the input file as a; :py:class:`~psi4.core.Matrix` object through the wfn as; :py:func:`psi4.core.Wavefunction.gradient`. Previously, cfour communicated through; `psi4.core.legacy_gradient` which was accessed through `psi4.core.get_gradient()`. .. rubric:: Cfour Files. The contents of all files associated with Cfour are accessible from the; input file through the Python dictionary ``P4C4_INFO``. That is,; ``P4C4_INFO['zmat']`` returns a string of the input file sent to Cfour.; Accessible arguments are ``zmat``, ``output``, and any that have been; produced of ``grd``. For example, to print to the screen if CC convergence; is reached, the following could be placed in the |PSIfour| input file. ::. energy('c4-ccsd'); print 'miracle?', 'miracle' in P4C4_INFO['output']. .. rubric:: Scratch Files. By default, a separate subdirectory for each Cfour call is created within; the job's scratch directory. To explicitly specify the location of the; Cfour scratch, execute with, for example, ``energy('cfour',; path='/full/path/to/cfour/scratch')``. Regardless of whether the location; is specified or default, whether to preserve the scratch directory after; the computation can be specified with ``energy('cfour', keep=True)`` or; (the default) ``energy('cfour', keep=False)``. *path* and *keep* are; keyword arguments that get interpreted by the; :py:func:`~psi4.driver.procrouting.interface_cfour.run_cfour` function documented below. .. autofunction:: psi4.driver.procrouting.interface_cfour.run_cfour(name [, keep, path]). .. _`sec:cfourFunctionality`:. Functionality; ~~~~~~~~~~~~~. Through clever use of the ``cfour {...}`` block, one could run most any; Cfour computation through the P4C4 interface. In contrast, enumerated; below are tested functionalities where results from Cfour are collected; into |PSIfour| data objects. .. rubric:: Implemented. * Single-point :py:func:`~psi4.driver.energy` commands for :ref:`ground state; methods <table:energy_cfour>`. Example",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:26809,energy,energy,26809,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"n our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartree--Fock, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional keywords. Let's consider what we would do for an open-shell molecule, where; not all electrons are paired. For example, let's run a computation; on methylene (CH",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:4003,energy,energy,4003,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"n properties() function, e.g.::. properties('ccsd', properties=['dipole']). The :py:func:`~psi4.driver.properties` function provides limited functionality, but is a lot easier to; use for correlated methods. For capabilities of :py:func:`~psi4.driver.properties` see the; corresponding section of the manual. Basic Keywords; ^^^^^^^^^^^^^^. Multipole moments may be computed at any origin, which is controlled by the; global |globals__properties_origin| keyword. The keyword takes an array with; the following possible values:. .. _`table:oe_origin`:. .. table:: Allowed origin specifications. +-------------------------------+-------------------------------------------------------------------------------+; | Keyword | Interpretation |; +===============================+===============================================================================+; | [x, y, z] | Origin is at the coordinates, in the same units as the geometry specification |; +-------------------------------+-------------------------------------------------------------------------------+; | [""COM""] | Origin is at the center of mass |; +-------------------------------+-------------------------------------------------------------------------------+; | [""NUCLEAR_CHARGE""] | Origin is at the center of nuclear charge |; +-------------------------------+-------------------------------------------------------------------------------+. .. _`sec:oeprop_grid`:. Properties evaluated on a grid; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Certain properties may be evaluated a user-specified grid points. The grid; points are completely arbitrary and are specified by providing a file called; grid.dat containing the x,y,z values separated with spaces for each point in order::. x1 y1 z1; x2 y2 z2; ..........; xn yn zn. The grid.dat file is completely free form; any number of spaces and/or newlines; between entries is permitted. The units of the coordinates in grid.dat are the; same as those used to specify the molecule's geometry, and th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/oeprop.rst:7697,charge,charge,7697,doc/sphinxman/source/oeprop.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/oeprop.rst,1,['charge'],['charge']
Energy Efficiency,"n provides many control structures, any of which can be used within |PSIfour|; input files. For example, to loop over three basis sets, the following code can; be used:. .. code-block:: none. basis_sets = [""cc-pVDZ"", ""cc-pVTZ"", ""cc-pVQZ""]; for basis_set in basis_sets:; set basis = $basis_set; energy('scf'). The declaration of ``basis_sets`` is completely standard Python, as is the next; line, which iterates over the list. However, because the Psithon preprocessor; wraps strings in quotes by default, we have to tell it that ``basis_set`` is a; Python variable, not a string, by prefixing it with a dollar sign. . The geometry specification supports delayed initialization of variable,; which permits potential energy scans. As an example, we can scan both the; angle and bond length in water::. molecule h2o{; O; H 1 R; H 1 R 2 A; }; ; Rvals = [0.9, 1.0, 1.1]; Avals = range(102, 106, 2); ; set basis cc-pvdz; set scf e_convergence=11; for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; energy('scf'). The declarations of ``Rvals`` and ``Avals`` are both completely standard Python syntax.; Having named our molecule ``h2o`` we can then set the values of ``R`` and ``A`` within; the loops. Note that we do not need the dollar sign to access the Python; variable in this example; that is required only when using Python variables; with the ``set`` keyword. Cartesian geometries, because of details of the geometry update process,; need to be specified within the loop(s) along with their basis set when; geometry scans are performed. See :srcsample:`scf4` for analogous Z-matrix; and Cartiesian scans. .. _`sec:resultsTables`:. Tables of Results; =================. The Psithon function ``psi4.driver.p4util.Table`` has been removed,; as the Python ecosystem provides many more flexible alternatives. An; example tabulating a potential energy surface scan for water with Pandas; is shown below::. molecule h2o {; O; H 1 R; H 1 R 2 A; }; ; Rvals=[0.9,1.0,1.1]; Avals=range(100,103,2); ; rows =",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:13313,energy,energy,13313,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"n run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table :ref:`FNOCC Methods <table:fnocc_methods>`. Full MP4 correlation; energies are also available. .. _`sec:fnocepa`:. Coupled electron pair approximation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7817,energy,energy,7817,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"n should be reduced accordingly; if in doubt run the; calculation in C1 symmetry. For examples of SCF and MP2 calculations in an; external field, see :srcsample:`scf7` and :srcsample:`dfmp2-grad5`. .. _`sec:scfdefault`:. Convergence and Algorithm Defaults; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. _`table:conv_scf`:. .. table:: SCF algorithm and convergence criteria defaults by calculation type [#f1]_. +--------------------+--------------------+----------------------+----------------------+---------------------+; | *Ab Initio* Method | Calculation Type | |scf__e_convergence| | |scf__d_convergence| | |globals__scf_type| |; +====================+====================+======================+======================+=====================+; | SCF of HF or DFT | energy | 6 | 6 | DF |; + +--------------------+----------------------+----------------------+ +; | | optimization | 8 | 8 | |; + +--------------------+----------------------+----------------------+ +; | | frequency [#f7]_ | 8 | 8 | |; +--------------------+--------------------+----------------------+----------------------+---------------------+; | SCF of post-HF | energy | 8 | 8 | PK [#f3]_ |; + +--------------------+----------------------+----------------------+ +; | | optimization | 10 | 10 | |; + +--------------------+----------------------+----------------------+ +; | | frequency [#f7]_ | 10 | 10 | |; + +--------------------+----------------------+----------------------+ +; | | CC property [#f2]_ | 10 | 10 | |; +--------------------+--------------------+----------------------+----------------------+---------------------+. .. _`table:conv_corl`:. .. table:: Post-SCF convergence criteria defaults by calculation type [#f4]_. +--------------------+--------------------+----------------------+-------------------------+; | *Ab Initio* Method | Calculation Type | E_CONVERGENCE [#f5]_ | R_CONVERGENCE [#f6]_ |; +====================+====================+======================+=========================+; | post-HF of post-HF |",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:57046,energy,energy,57046,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,2,['energy'],['energy']
Energy Efficiency,"n the |scf__reference| option. Note that there are not equivalents to ROHF or CUHF, *e.g.*, no ROKS or CUKS. This; is because ROHF is implicitly assumed to be followed by a correlated method; which can break the positive definiteness of the spin polarization. KS-DFT with; the true functional is expected to be the final step, thus restricting the; solution to positive definite spin polarization is not physical. See the; section in [Szabo:1982]_ on methyl radical for an example. Functional Selection; ~~~~~~~~~~~~~~~~~~~~. |PSIfour| features an extensive list of LSDA, GGA, Meta, Hybrid, LRC, and -D; functionals. These can be specified by a variety of means. Perhaps the simplest; is to use the functional name as the energy procedure call::. energy('b3lyp'). Note that if you are running an unrestricted computation, you should set the; |scf__reference| option before the call to ``energy``::. set reference uks; energy('b3lyp'). The functional may also be manually specified by calling ``energy`` (or any driver function); with a ``dft_functional`` argument::. energy('scf', dft_functional = 'b3lyp'). Another alternative is providing a specially crafted `dict`-ionary to the ``dft_functional``; argument::. custom_functional = { ""name"": ""my_unique_name"", ... }; energy('scf', dft_functional = custom_functional). For further details about this so called `dict_func` syntax, see; :ref:`sec:dftdictbuilder`. For hybrid functionals, the fraction of exact exchange is controlled by the; |scf__dft_alpha| option. For the LRC functionals, the fraction of long-range; Hartree--Fock and short-range DFA is controlled by the |scf__dft_omega| option.; Changing these will override the default behavior of the requested functional. A brief summary of some of the more notable functionals in |PSIfour|, and links; to the complete listing of all functionals of each class are presented below:. :ref:`All Functionals <table:dft_all>`; All functionals, including LSDA-only functionals. Note that here and; th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:16994,energy,energy,16994,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"n to lower the energy. In case the minimization does not succeed; or ends up on the same unstable solution, you can tune the scale factor for the orbital; rotation through the keyword |scf__follow_step_scale|.; The rotation angle is :math:`\frac{\pi}{2}\mbox{ } \cdot` (|scf__follow_step_scale|). The default value of; 0.5 usually provides a good guess, and modification is only recommended in difficult cases.; The default behavior for the stability code is to stop after trying to reoptimize the orbitals once; if the instability still exists. For more attempts, set |scf__max_attempts|;; the default value of 1 is recommended. In case the SCF ends up in the same minimum, modification; of |scf__follow_step_scale| is recommended over increasing |scf__max_attempts|. .. note:: Setting the option |scf__stability_analysis| to ``FOLLOW`` is only avalible for UHF. When using; RHF and ROHF instabilities can be checked, but not followed. If you want to attempt to find a lower energy solution; you should re-run the calculation with |scf__reference| set to ``UHF``. The main algorithm available in |PSIfour| is the Direct Inversion algorithm. It can *only*; work with |globals__scf_type| ``PK``, and it explicitly builds the full electronic Hessian; matrix before explicitly inverting it. As such, this algorithm is very slow and it should; be avoided whenever possible. Direct Inversion is automatically invoked if the newer algorithm; is not available. The Davidson algorithm for stability analysis was implemented recently.; Only the lowest eigenvalues of the electronic Hessian are computed, and Hessian-vector; products are computed instead of the full Hessian. This algorithm is thus; much more efficient than the Direct Inversion, but at present, it is only available for UHF :math:`\rightarrow` UHF stability; analysis. The capabilities of both algorithms are summarized below:. .. _`table:stab_methods`:. .. table:: Stability analysis methods available in |PSIfour|. +------------------+-----",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:48052,energy,energy,48052,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"n,; with basis functions from each of fragments 1, 2, 3, & 4 included in; the basis set. Therefore, the basis functions from fragments 3 and 4; are included as ghost functions within the energy computation. .. psivar:: NUCLEAR REPULSION ENERGY. The nuclear repulsion energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{NN}` in Eq. :eq:`SCFterms`. .. math:: E_{NN} = \sum_{i, j<i}^{N_{atom}}\frac{Z_i Z_j}{|\mathbf{R}_i - \mathbf{R}_j|}; :label: ENN. .. psivar:: OCEPA(0) TOTAL ENERGY; OCEPA(0) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized CEPA(0) level of theory. .. psivar:: OLCCD TOTAL ENERGY; OLCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized linearized coupled cluster doubles level of theory. .. psivar:: OLCCD REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized linearized coupled cluster; doubles level of theory. .. psivar:: OMP2 TOTAL ENERGY; OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2 level of theory. .. psivar:: OMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2 level of theory. .. psivar:: OMP2.5 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP2.5 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP3 TOTAL ENERGY; OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP3 level of theory",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:46377,energy,energy,46377,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"n-shell monomers.; Higher-order SAPT and SAPT(DFT) are currently available only ; for computation of interactions between; closed-shell singlets. The SAPT codes in |PSIfour| have been written; to utilize density fitting, which is much faster than using conventional; 4-index electron repulsion integrals. This happens automatically and; does not require any additional keywords to be specified (both the ; SAPT computations and the underlying Hartree-Fock computations will; utilize density fitting). For SAPT(DFT), the user will need to manually specify the GRAC shift of ; both monomers, defined by the difference of ionization potential (IP) and; Kohn-Sham HOMO energy. The ionization potential data for many common molecules ; is available in NIST Chemistry Webbook. Alternatively, one can estimate the; ionization potential of molecule by computing the energy difference between; the molecule as given, and the molecule after one electron has been removed; (e.g., the energy difference between a neutral molecule and its cation). The values of GRAC shifts should be given in Hartree. For the example above,; the GRAC shift value of both molecules are calculated to be 0.1307 (using experimental; IP from CCCBDB), and the user would specify them using the following keywords::. set globals {; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307 ; }. A complete, minimal example of a SAPT(DFT) computation is given below. ::. molecule {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; H 1.680398 -0.373741 -0.758561; H 1.680398 -0.373741 0.758561. units angstrom; }; ; set {; basis aug-cc-pVDZ; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307; }; ; energy('sapt(dft)'). As already mentioned above, the SAPT0 module for open-shell cases can also; use exact integrals for all terms except for dispersion. In practice,; density fitting is considerably faster and introduces negligible errors,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:15853,energy,energy,15853,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"n`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7500,energy,energy,7500,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"name}}_{rxn}-\text{REF}_{rxn}}. .. psivar:: db_name DATABASE ROOT-MEAN-SQUARE DEVIATION. The rms deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contribution contribution to the reduced; density matrix energy expression. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in density cumulant theory. Sum of :psivar:`DCT SCF ENERGY`,; :psivar:`DCT LAMBDA ENERGY`, and :psivar:`DCT THREE-PARTICLE ENERGY` when present. .. psivar:: DETCI AVG DVEC NORM. A measure of configuration interaction convergence. .. psivar:: DFT FUNCTIONAL TOTAL ENERGY. The total electronic energy [E_h] for the underlying functional of the; requested DFT method, without any dispersion correction; the first four; terms in Eq. :eq:`SCFterms` or :eq:`DFTterms`. Quantity; :math:`E_{\text{FCTL}}` in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; Unless the method includes a dispersion correction, this quantity is; equal to :psivar:`SCF TOTAL ENERGY`. .. psivar:: DFT TOTAL ENERGY. The total electronic energy [E_h] for the requ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:30436,reduce,reduced,30436,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['reduce'],['reduced']
Energy Efficiency,"nce': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:5714,energy,energy,5714,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nce': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'referen",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:15099,energy,energy,15099,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nce': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:225157,energy,energy,225157,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nctionality` for information on what Cfour; functionality is accessible through |PSIfour|. |PSIfour| for Cfour Users; ~~~~~~~~~~~~~~~~~~~~~~~~~. In the simplest use of the Psi4/Cfour interface, a |PSIfour| input file; can simply ""wrap"" a ``ZMAT`` file and execute :program:`xcfour`. This is; illustrated in the following example::. cfour {; UHF-SCF energy calculation ; N; H 1 R; H 1 R 2 A; ; R=1.008; A=105.0; ; *ACES2(CALC=HF,BASIS=qz2p; MULT=2,REF=UHF; OCCUPATION=3-1-1-0/3-0-1-0; SCF_CONV=12; MEMORY=20000000); }; ; energy('cfour'). Here, the contents of the ``cfour {...}`` block are written directly to a; ``ZMAT`` file. This is joined by a default ``GENBAS`` file; (:source:`psi4/share/psi4/basis/GENBAS`). To preferentially use your own ``GENBAS``,; place it in :envvar:`PATH` or :envvar:`PSIPATH`. The line calling; :py:func:`~psi4.driver.energy` with argument ``'cfour'`` invokes; :program:`xcfour`. After execution of the ``energy('cfour')`` line completes, Cfour results; are read back into |PSIfour| format and are thereafter accessible for; further processing in the input file. See :ref:`sec:cfourOutput` for; details. This storage of results in variables and arrays *in memory* for; the duration of the |PSIfour| instance (as opposed to solely *in files*); is the only advantage thus far incurred by the P4C4 interface. We'll call; this mode of basic utility the ""sandwich"" mode. Molecule specification in |PSIfour| allows Cartesians, Z-matrices, mixed; Cartesian/Z-matrix, negation of variables, delayed specification of; variables, specification of fragments, etc., all in a whitespace-tolerant; format. See :ref:`sec:moleculeSpecification` for details and; :srcsample:`cfour/mints5` for examples. When a |PSIfour|-style molecule is; supplied, its geometry is written to ``ZMAT`` in Cartesian form and the; |cfour__cfour_coordinates|\ =CARTESIAN, |cfour__cfour_units|\ =ANGSTROM,; |cfour__cfour_charge|, and |cfour__cfour_multiplicity| keywords are set; appropriately in the ``*CFOUR",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:5891,energy,energy,5891,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"nd :math:`\delta_{MP2}^{(3)}` also improve the ; description of electrostatically dominated complexes. :math:`\delta_{MP2}^{(2)}`; can be applied to SAPT2+ or SAPT2+(3) energies whereas :math:`\delta_{MP2}^{(3)}` ; should be applied to SAPT2+3 energies. A thorough analysis of the performance of these truncations of closed-shell SAPT can be; found in a review by Hohenstein and Sherrill [Hohenstein:2012:WIREs]_,; and a systematic study of the accuracy of these truncations (with and ; without an improved CCD treatment of dispersion) using different basis sets; is reported in [Parker:2014:094106]_. The closed-shell SAPT module relies entirely on the density-fitting approximation; of the two-electron integrals. The factorization of the SAPT energy; expressions, as implemented in |PSIfour|, assumes the use of density-fitted; two-electron integrals, therefore, the closed-shell SAPT module cannot be run with; exact integrals. In practice, we have found that the density-fitting; approximation introduces negligible errors into the SAPT energy ; (often less than 0.01 kcal/mol for small dimers) and greatly; improves efficiency. . The latest addition to the SAPT code is the SAPT0 method for open-shell ; monomers [Gonthier:2016:134106]_. This code is available for both exact and density fitted integrals, ; except for the dispersion terms which implementation relies on a density fitting; factorization. Both ``UHF`` and ``ROHF`` |scf__reference| can be used, but coupled; induction computations are currently not supported with ``ROHF``. This means that orbital; relaxation is not included for ``ROHF`` and the uncoupled induction term is computed instead.; If both monomers are open-shell, their coupling is assumed to be high spin, i.e.; two doublets would interact to form a triplet. The *S*\ :superscript:`2` approximation and scaling; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. All exchange terms in SAPT arise from the antisymmetrization; of the wavefunctions of monomers A and",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:10454,energy,energy,10454,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"nd order has the spin-orbital formula:. .. math:: E_{\mathrm{total}}^{(2)} = E_{\mathrm{Reference}} - ; \frac{f_{ia} f_{ia}}{\epsilon_a - \epsilon_i} - ; \frac{1}{4} \frac{\langle ij||ab\rangle^2}{\epsilon_a + \epsilon_b - \epsilon_i - \epsilon_j}; :label: MP2. Here :math:`i` and :math:`j` are occupied spin orbitals, :math:`a` and; :math:`b` are virtual spin orbitals, :math:`f_{ia}` are the :math:`ov`; Fock Matrix elements, :math:`\epsilon` are the orbital eigenvalues, and; :math:`\langle ij||ab\rangle` are the antisymmetrized physicist's ERIs.; For converged RHF and UHF references, the singles correction,. .. math:: E_{\mathrm{MBPT}}^{(1)} = - \frac{f_{ia} f_{ia}}{\epsilon_a - \epsilon_i},. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. .. math:: E_{\mathrm{MBPT}}^{(2)} = - \frac{1}{4} \frac{\langle ij|ab\rangle^2}{\epsilon_a + ; \epsilon_b - \epsilon_i - \epsilon_j}. In the DFMP2 module, the first-order contribution, or ""singles energy"" is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements :math:`f_{ia}` are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF |scf__e_convergence| and/or |scf__d_convergence| keywords; and try again. . To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimme's Spin-Component; Scaled (SCS) MP2. For RHF-MP2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:6444,energy,energy,6444,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['energy'],['energy']
Energy Efficiency,"nd size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of :math:`\boldsymbol{\gamma_1}` is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; :math:`\boldsymbol{\gamma_2}`. In order to obtain the DCT energy, two conditions must be satisfied:. 1) The energy must be stationary with respect to a set of orbitals. This can be done by; diagonalizing the generalized Fock operator (as in the DC-06 and DC-12 methods, see below),; which introduces partial orbital relaxation, or by fully relaxing the orbitals and minimizing the entire energy expression; (as in the ODC-06 and ODC-12 methods). 2) The energy must be stationary with respect to the variation of the density; cumulant :math:`\boldsymbol{\lambda_2}`, constrained to N-representability conditions. Making the energy stationary requires solution of two sets of coupled; equations for orbitals and density cumulant, respectively (also known as; residual equations). At the present moment, three different algorithms for the; solution of the system of coupled equations are available (see; :ref:`Iterative Algorithms <sec:dctalgorithms>` for details). . Publications resulting from the use of the DCT code should cite contributions; listed :ref:`here <intro:dctcitations>`. .. _`sec:dctmethods`:. Methods; ~~~~~~~. Currently five DCT methods (functionals) are available: DC-06, DC-12, ODC-06, ODC-12, and ODC-13. The first four ; methods use approximate N-representability conditions derived from ; second-order perturbation theory and differ in the description of the; correlated (non-idempotent) part :math:`\boldsymbol{\tau}` of the one-particle density; matrix and orbital optimization. While in the DC-06 and ODC-06 methods :math:`\boldsymbol{\tau}` is derived from the density cumulant; in an approximate way (labelled by '06'), the DC-12 and ODC-12 methods derive this contrib",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:5453,energy,energy,5453,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"nd the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table :ref:`FNOCC Methods <table:fnocc_methods>`. Full MP4 correlation; energies are also available. .. _`sec:fnocepa`:. Coupled electron ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7636,energy,energy,7636,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"ne.run_dftd3('b3lyp', 'd2'); .. comment compare_values(ref_d2[0], E, 7, 'Ethene-Ethyne -D2 (alias)'); .. comment ; .. comment set basis sto-3g; .. comment set scf_type df; .. comment set dft_radial_points 50 # use really bad grid for speed since all we want is the -D value; .. comment set dft_spherical_points 110; .. comment #set scf print 3 # will print dftd3 program output to psi4 output file; .. comment ; .. comment ; .. comment print_stdout(' -D correction from C-side'); .. comment activate(mA); .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_d3bj[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment energy('b3lyp-d3'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment energy('b3lyp-d'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from C-side'); .. comment activate(mB); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Et",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:28101,energy,energy,28101,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"negligible one-electron integrals.; |scf__cosx_density_tolerance| controls the threshold for significant; shell pairs in the density matrix. Lastly, |scf__cosx_basis_tolerance| is; a cutoff for the value of basis functions at grid points. This keyword is; used to determine the radial extent of the each basis shell, and it is the; COSX analogue to |scf__dft_basis_tolerance|. The |scf__incfock| keyword (defaults to ``false``) increases performance; by constructing the Fock matrix from differences in the density matrix, which; are more amenable to screening. This option is disabled by default because of; potential SCF convergence issues, particularly when using diffuse basis functions.; The |scf__cosx_overlap_fitting| keyword (defaults to ``true``) reduces numerical; integration errors using the method described in [Izsak:2011:144105]_ and is; always recommended. .. _`sec:scflink`:. Linear Exchange; ~~~~~~~~~~~~~~~. Large SCF calculations can benefit from specialized screening procedures that further reduce the scaling of the ERI contribution to the Fock matrix.; LinK, the linear-scaling exchange method described in [Ochsenfeld:1998:1663]_, is available in Psi4 in conjunction with composite algorithms that build J (|globals__scf_type| set to ``J_alg+LINK``).; LinK achieves linear-scaling by exploiting shell pair sparsity in the density matrix and overlap sparsity between shell pairs. Specifically, LinK exploits the fact that the Exchange term; requires only a linear-scaling number of significant elements through reformulating the; shell quartet screening process to scale linearly with system size.; LinK is most competitive when used with non-diffuse orbital basis sets, since orbital and density overlaps decay slower with diffuse functions.; LinK is especially powerful when combined with density-matrix based ERI screening (set |globals__screening| to ``DENSITY``) and incremental Fock builds (set |scf__incfock| to ``TRUE``), which decrease the number of significant two-el",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:41691,reduce,reduce,41691,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['reduce'],['reduce']
Energy Efficiency,"nerally give qualitatively identical; energetic partitions. Users should check the files ``fragA.dat`` and ``fragB.dat`` to ensure that; there is not too much charge delocalization from one fragment to another. This; is presented in the ""Orbital Check"" section in these files |w--w| a value larger than; 0.1 docc is an indication that the picture of localizable functional groups may; be breaking down. We also *strongly discourage* the cutting of double,; triple, or aromatic bonding motifs when partitioning the molecule into fragments; |w--w| cuts across only simple sigma bonds are encouraged. .. caution:: November 2022, previous to QCEngine v0.26.0 and Psi4; v1.7.0, there was a scaling inconsistency in the pairwise analysis; such that :psivar:`2-BODY PAIRWISE DISPERSION CORRECTION ANALYSIS`; was doubled when generated from dftd3 compared to the output from other; programs (s-dftd3 and dftd4). This shows up in the QCVariable and in the; ``Empirical_Disp.dat`` file written during ``energy(""fisapt0-d3"")`` (all; -D3 variants). Fortunately, the ``fsapt.py`` script compensated; for dftd3 (by far the most used program for this task). Users of the; pairwise analysis should take care to use the new QCEngine; AND ``fsapt.py`` script distributed with NEW Psi4. ``fisapt0-d4`` run; with previous Psi4/fsapt.py will be wrong. ``fisapt0-d3`` run with previous; Psi4/fsapt.py but new QCEngine will be wrong. If you've got legacy; calculations, it is extremely easy to check or reanalyze them to; salvage them, so please contact the developers with the circumstances; for guidance. Order-1 Visualization with PyMol; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The ``fsapt.py`` script above also generates a number of order-1 ``.pdb`` files; that can be used to get a quick qualitative picture of the F-SAPT partition. The; preferred way to do this is to use PyMol to make plots of the molecular geometry; with the atoms colored according to their order-1 F-SAPT contributions. We have; a set of template ``.py",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:9425,energy,energy,9425,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['energy'],['energy']
Energy Efficiency,"nergy in Hartrees, which we assign to a; Python variable. The two energies are then converted to a dissociation; energy and printed to the output file using standard Python notation. Generally, there are multiple quantities of interest. Appendix; :ref:`apdx:psivariables_module` lists PSI variables variables set by each; module, and :ref:`apdx:psivariables_alpha` defines them. These can be; accessed through the :py:func:`~psi4.core.get_variable` function. For example, after; performing a density fitted MP2 computation, both the spin component; scaled energy and the unscaled MP2 energy are made available::. e_mp2 = get_variable('MP2 TOTAL ENERGY'); e_scs_mp2 = get_variable('SCS-MP2 TOTAL ENERGY'). Each module and the Python driver set PSI variables over the course of a; calculation. The values for all can be printed in the output file with; the input file command :py:func:`~psi4.core.print_variables`. Note that PSI variables; are cleared at the start of each :py:func:`~psi4.driver.energy`, etc. in an input; file by :py:func:`~psi4.core.clean_variables()`.; So if you run in a single input file a STO-3G FCI followed by a; aug-cc-pVQZ SCF followed by a :py:func:`~psi4.core.print_variables` command, the; last will include :psivar:`SCF TOTAL ENERGY` but not; :psivar:`FCI TOTAL ENERGY`.; The entire dictionary of PSI variables can be obtained through; :py:func:`~psi4.core.get_variables`. .. _`sec:returnvals`:. Return Values; =============. Most of the usual user computation functions (*i.e.*,; :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, and; :py:func:`~psi4.driver.frequency`) return simply the current total energy.; Consult the descriptions of other functions in :ref:`sec:psithonFunc` for; what quantities they return and for what data structures they make; available for post-processing. Many users need only deal with the simple return; form for the computation functions. ::. # E is total energy float; # G is gradient array; # H is hessian array; # wfn is",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:10426,energy,energy,10426,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"nergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:57633,energy,energy,57633,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nergy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'm",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:49480,energy,energy,49480,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nergy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:53265,energy,energy,53265,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nergy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:226899,energy,energy,226899,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nergy('c4-ccsd'). * Specifying certain keywords that are nominally applicable for pure-\; |PSIfour| modules directs them to fulfil analogous roles; in the Cfour program (*e.g.*, |scf__maxiter| is used to set; |cfour__cfour_scf_maxcyc|). This keyword translation only takes place; if the keywords are explicitly set in the input file (part of that; contract that you mean it), meaning that |PSIfours| defaults don't; get imposed on Cfour. Also, in the case where a translatable pure-\; |PSIfour| keyword and its translation Cfour keyword are both set,; the value attached to the latter is always used. Below are a few; clarifying examples. * uses :math:`10^{-7}` SCF conv crit since that's Cfour's default; for |cfour__cfour_scf_conv| ::. energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; keyword ::. set cfour_scf_conv 6; energy('c4-scf'). * uses :math:`10^{-5}` SCF conv crit since default overwritten by; :ref:`SCF module<apdx:scf>` keyword ::. set d_convergence 5; energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; :ref:`SCF module<apdx:scf>` keyword (local scope works, too) where; the |PSIfours| more flexible float input has been rounded down to; the integer required by Cfour ::. set scf d_convergence 5e-6; energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten; and Cfour module keyword trumps |PSIfour| SCF module keyword ::. set cfour_scf_conv 6; set d_convergence 8; energy('c4-scf'). The keyword translation feature is still in the proof-of-principle; stage, so only a handful (found here) of keywords participate. .. note:: Longtime Cfour users who may consider this keyword; translation a flaw rather than a feature can avoid it entirely by; confining keywords to the :ref:`Cfour module<apdx:cfour>` along with; |mints__basis| and |globals__puream| (opt, too?). Misc. Running; ~~~~~~~~~~~~~. Naturally, in |PSIfour| multiple jobs can be run in succession from the input file. Control optimi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:40066,energy,energy,40066,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"ng |scf__max_attempts|. .. note:: Setting the option |scf__stability_analysis| to ``FOLLOW`` is only avalible for UHF. When using; RHF and ROHF instabilities can be checked, but not followed. If you want to attempt to find a lower energy solution; you should re-run the calculation with |scf__reference| set to ``UHF``. The main algorithm available in |PSIfour| is the Direct Inversion algorithm. It can *only*; work with |globals__scf_type| ``PK``, and it explicitly builds the full electronic Hessian; matrix before explicitly inverting it. As such, this algorithm is very slow and it should; be avoided whenever possible. Direct Inversion is automatically invoked if the newer algorithm; is not available. The Davidson algorithm for stability analysis was implemented recently.; Only the lowest eigenvalues of the electronic Hessian are computed, and Hessian-vector; products are computed instead of the full Hessian. This algorithm is thus; much more efficient than the Direct Inversion, but at present, it is only available for UHF :math:`\rightarrow` UHF stability; analysis. The capabilities of both algorithms are summarized below:. .. _`table:stab_methods`:. .. table:: Stability analysis methods available in |PSIfour|. +------------------+------------------+----------------------------------------------+---------------------------+---------------------+; | Algorithm | |scf__reference| | Stability checked | |scf__stability_analysis| | |globals__scf_type| |; +==================+==================+==============================================+===========================+=====================+; | | RHF | Internal, External (:math:`\rightarrow` UHF) | ``CHECK`` | PK only |; + +------------------+----------------------------------------------+---------------------------+---------------------+; | Direct Inversion | ROHF | Internal | ``CHECK`` | PK only |; +------------------+------------------+----------------------------------------------+---------------------------+--------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:48776,efficient,efficient,48776,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['efficient'],['efficient']
Energy Efficiency,"nic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.28 opposite-spin and 0.50 same-spin contributions, with; any singles carried along. DOI: 10.1080/00268970802641242. .. psivar:: SCS(N)-MP2 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 0 opposite-spin and 1.76 same-spin contributions, with; any singles carried along. doi: 10.1021/ct6002737. .. psivar:: SCS(N)-OMP2 CORRELATION ENERGY; SCS(N)-OMP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY. Two spellings of a discontinued QCVariable that may still appear; because the code is frozen pending an update. .. psivar:: SCS-OMP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP3 TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3-like method formed by reweighting the difference between; :psivar:`MP3 DOUBLES ENERGY` and :psivar:`MP2 DOUBLES ENERGY`; by 0.25, atop the SCS-MP2 energy, with any singles carried along. .. psivar:: SCS-OMP3 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SCS-OMP2 energy, with any singles carried along. .. psivar:: SOS-MP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES E",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:60679,energy,energy,60679,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"nits are in [1/s].; Describes the irrep *h* transition between roots *m* and *n*. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between roots *m* and *n*. .. psivar:: CCname ROOT m (IN h) -> ROOT n (IN i) EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between root *m* within irrep *h* and root *n* which irrep *i*. .. psivar:: CCname ROOT m (h) -> ROOT n (i) EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between roots *m* and *n*, which are in irreps *h* and *i*, respectively.. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN B (LEN) - h TRANSITION. The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the irrep *h* transition between roots *m* and *n*. .. psivar:: CCname ROOT m -> ROOT n ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 -> ROOT n ROTATORY STRENGTH (LEN). The length-gauge rotatory strength of the transition from root *m* to root *n*.; DFT functional labeled if canonical. .. psivar:: CCname ROOT m (IN h) -> ROOT n (IN i) ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) ROTATORY STRENGTH (LEN). The length-gauge oscillator strength of the transition from root *m* within irrep *h*; to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: CCname ROOT m (h) -> ROOT n (i) ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 (h) -> ROOT n (i) ROTATORY STRENGTH (LEN). The length-gauge oscillator strength of the transition from root *m* to root *n*,; which are in irreps *h* and *i*, respectively..; DFT functional labeled if canonical. .. psivar:: CCname ROOT m -> ROOT n ROTA",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:14710,energy,energy,14710,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"nly defined for a fully quantum mechanical computation, i.e., not QM/MM. .. psivar:: HF TOTAL GRADIENT. The total electronic gradient [E_h/a0] of the Hartree--Fock method, ({nat}, 3). .. psivar:: HF DIPOLE GRADIENT. The derivative of the Hartree--Fock method dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: HF TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the Hartree-Fock method, (3 * {nat}, 3 * {nat}). .. psivar:: LCCD TOTAL ENERGY; LCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster doubles level of theory. .. psivar:: LCCSD TOTAL ENERGY; LCCSD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster singles and doubles level of theory. .. psivar:: LCC2 (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CC2 level of theory. .. psivar:: LCCSD (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CCSD level of theory. .. psivar:: LEFT-RIGHT CC2 EIGENVECTOR OVERLAP; LEFT-RIGHT CC3 EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD(T) EIGENVECTOR OVERLAP. The overlap between the right-hand coupled coupled cluster eigenvector and the; left-hand eigenvector from the coupled cluster lambda (response) equations. .. psivar:: LOWDIN CHARGES. Property of partial atomic charges [e] by the method of L\ |o_dots|\ wdin, (nat,). .. psivar:: MAYER INDICES. Property of Mayer bond indices, (nat, nat). .. psivar:: MBIS CHARGES; MBIS DIPOLES; MBIS OCTUPOLES; MBIS QUADRUPOLES. Per-atom charges [e], dipoles [e a0], quadrupoles [e a0^2], and octupoles [e a0^3]; resulting from partitioning the total electron density through the Minimal Basis; Iterative Stockholder (MBIS) Charge Partitioning Scheme. .. psivar:: MBIS FREE ATOM n VOLUME. Free-atom volume [a0^3",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:37057,energy,energy,37057,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"nnonhouck.github.io/psi4fockci/build/index.html. This plugin is an implementation of the RAS-nSF-IP/EA approach detailed ; in the paper by Houck et. al. [Houck:2019:2278]_. ; This approach handles systems with both spin and spatial degeneracies ; by combining the spin-flip (SF) [Krylov:2001:522]_; and ionization potential/electron affinity (IP/EA) [Nooijen:1995:3629]_ ; approaches. . The Psi4FockCI plugin allows one to perform spin-flip (SF), ionization ; potential (IP), and electron affinity (EA) calculations, as well as ; combined RAS-SF-IP/EA calculations, through the DETCI (:ref:`sec:ci`) module. Installation; ~~~~~~~~~~~~. * Download the plugin from the GitHub repository:. .. code-block:: bash. >>> git clone https://github.com/shannonhouck/psi4fockci.git. * Once downloaded, the plugin can be installed as follows:. .. code-block:: bash. >>> cd {top-level-psi4fockci-directory}; >>> python -m pip install . Sample Input; ~~~~~~~~~~~~. To run a CAS-nSF-IP/EA calculation, start with a molecule with the ; correct charge and multiplicity for the reference state (i.e. some ; state well-represented by a single reference). Then, run an energy ; calculation, passing in the charge and multiplicity of the ; desired state; the number of spin-flips and IP/EA will be automatically ; determined based on this input. If additional excitations outside of the ; RAS II space are desired, one can set the level of external ; excitations using the ``conf_space`` keyword. A sample input file for a RAS(h)-2SF-IP calculation is shown below:. .. code-block:: python. molecule {; 0 7; N 0.0 0.0 0.0; N 0.0 0.0 1.3; symmetry c1; }. set {; basis cc-pVDZ; }. energy('psi4fockci', new_charge=1, new_multiplicity=1, conf_space=""h""); ; Note that for calculations involving IP/EA, inclusion of hole (for IP) and ; particle (for EA) excitations is strongly recommended. Additional keywords ; can be found in the documentation. This input file can be run with Psi4:. .. code-block:: bash. >>> psi4 input.dat. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_psi4fockci.rst:2549,charge,charge,2549,doc/sphinxman/source/plugin_psi4fockci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_psi4fockci.rst,4,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency,"no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:61249,energy,energy,61249,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:62594,energy,energy,62594,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:79468,energy,energy,79468,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:80813,energy,energy,80813,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:170059,energy,energy,170059,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:171392,energy,energy,171392,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:478337,energy,energy,478337,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:479670,energy,energy,479670,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nocc`:. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; ===================================================================. .. codeauthor:: A. Eugene DePrince; .. sectionauthor:: A. Eugene DePrince. *Module:* :ref:`Keywords <apdx:fnocc>`, :ref:`PSI Variables <apdx:fnocc_psivar>`, :source:`FNOCC <psi4/src/psi4/fnocc>`. .. warning:: There is a known bug concerning the i7-5930 series combined; with the Intel 15 compilers and MKL 11.2.3. When |PsiFour| is compiled; under these conditions, parallel runs of the FNOCC code have experienced; nonsensical CCSD correlation energies (often several Hartrees lower; than the starting guess). At the moment, the only confirmed solutions; are running serially, using a different BLAS implementation, or upgrading; to Intel 16.0.2 and MKL 11.3.2. Frozen natural orbitals (FNO); ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The computational cost of the CCSD [Purvis:1982]_, CCSD(T); [Raghavachari:1989]_, and related methods be reduced by constructing a; compact representation of the virtual space based on the natural orbitals; of second-order perturbation theory [Sosa:1989:148]_. The most demanding; steps in the CCSD and (T) algorithms scale as :math:`{\cal{O}}(o^2v^4)`; and :math:`{\cal{O}}(o^3v^4)`, where :math:`o` and :math:`v` represent the; number of oribitals that are occupied and unoccupied (virtual) in the; reference function, respectively. By reducing the the size of the virtual; space, the cost of evaluating these terms reduces by a factor of :math:`(v; / v_{FNO})^4`, where :math:`v_{FNO}` represents the number of virtual; orbitals retained after the FNO truncation. The general outline for the FNO procedure in |Psifour| is:. (i) construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM) ; (ii) diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; (iii) based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; (iv) project the",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:2323,reduce,reduced,2323,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['reduce'],['reduced']
Energy Efficiency,"note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:141500,energy,energy,141500,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:337707,energy,energy,337707,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:421865,energy,energy,421865,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:492596,energy,energy,492596,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nough to make sure the SCF converged to a; stationary point, this is not a sufficient condition for a minimal SCF solution. It may be; a saddle point or a maximum. To ensure that a minimum has been found, the electronic Hessian, *i.e.* the matrix of second; derivatives of the energy with respect to orbital variation parameters, must be computed.; If one or more eigenvalues of the electronic Hessian are negative, the SCF solution is not a minimum.; In that case, orbital parameters can be varied along the lowest Hessian eigenvector to lower the energy. Orbital variation parameters are usually constrained. For example, in RHF the; spatial parts of the :math:`\alpha` and :math:`\beta` orbitals are the same. In; UHF, the orbital coefficients are usually constrained to be real. A stability analysis; can check whether a lower SCF solution exists while respecting the constraints of the original; solution; this is an internal instability. If one or more constraints have to be relaxed to reach; a lower-energy solution, there is an external instability. In |PSIfour|, the only external instability; that can be checked at present is the RHF :math:`\rightarrow` UHF one. Currently, two algorithms exist in |PSIfour| for stability analysis: the original; Direct Inversion and the newly implemented Davidson algorithms. We will first describe; options common to both algorithms. To request a stability analysis at the end of the SCF,; set the keyword |scf__stability_analysis|. Value ``CHECK`` only computes the electronic; Hessian eigenvalue and checks if an actual SCF minimum has been found, while value ``FOLLOW``; rotates the converged orbitals along the lowest eigenvector, then invokes the SCF; procedure again to lower the energy. In case the minimization does not succeed; or ends up on the same unstable solution, you can tune the scale factor for the orbital; rotation through the keyword |scf__follow_step_scale|.; The rotation angle is :math:`\frac{\pi}{2}\mbox{ } \cdot` (|scf__follow_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:46366,energy,energy,46366,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"npaired; electrons (triplet electronic state, or a spin multiplicity :math:`2S+1 = 3`).; In this case, the default spin multiplicity (1) is not correct, so we; need to tell the program the true value (3). Like many programs, |PSIfour|; can get the charge and multiplicity as the first two integers in the; Z-matrix. Note the line with ``0 3`` at the beginning of the molecule; specification below. In this example we will also specify the bond length; and bond angle as variables (:math:`R` and :math:`A`), whose values are given; at the end of the Z-matrix specification. .. literalinclude:: @SFNX_INCLUDE@samples/tu2-ch2-energy/input.dat. This sample input can be found in ; :srcsample:`tu2-ch2-energy` and as; before it can be run through the command ``psi4 input.dat output.dat``; (actually, because ``psi4`` by default looks for an input file named; ``input.dat`` and writes by default to a file called ``output.dat``, in this; case one could also just type ``psi4``). If it works, it should print; the final energy as ::. @UHF Final Energy: -38.92533462456894. Notice we added a new keyword, ``set reference uhf``, to the input. For; open-shell molecules, we have a choice of unrestricted orbitals; (unrestricted Hartree--Fock, or UHF), or restricted orbitals (restricted; open-shell Hartree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:6085,energy,energy,6085,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"ns use only one class. Because of this, a UHF-MP2 or; ROHF-MBPT(2) energy should take roughly three times as long as an RHF-MP2; energy. Recommendations; ---------------. All-in-all, DFMP2 should be a simple module to use, with few keywords (fully; documented in the Appendix :ref:`apdx:dfmp2`). Some basic recommendations are included below:. * DFMP2 should be run with the :math:`ov`-type RI or MP2FIT auxiliary; basis sets, *not* the -JKFIT basis sets. The automatic basis selector; should work fine for most all bases (exceptions are less common elements; at higher than quadruple-zeta). Generally, it is always better to specify; only the orbital basis set and let the auxiliary bases be chosen; automatically. If you want to specify manually, use the; |dfmp2__df_basis_mp2| keyword. * DFMP2 likes memory. At a minimum, :math:`2Q^2` doubles are required,; where :math:`Q` is the size of the auxiliary basis set. However, there is; one disk transpose of the :math:`(Q|ov)` tensor in the RHF-MP2 algorithm; [two for UHF-MP2 and ROHF-MBPT(2)], so more memory will reduce seek times.; If you notice DFMP2 using more memory than allowed, it is possible that; the threaded three-index ERI computers are using too much overhead memory.; Set the |dfmp2__DF_ints_num_threads| to a smaller number to prevent this; in this section (does not affect threaded efficiency in the rest of the; code). * DFMP2 likes disk. At a minimum, :math:`2Qov` doubles are required for; RHF-MP2, and :math:`4Qov` doubles are required for UHF-MP2. * DFMP2 likes threads. Some of the formation of the :math:`(Q|ov)` tensor; relies on threaded BLAS (such as MKL) for efficiency. The main; :math:`{\cal O}(N^5)` step is done via small/medium-sized DGEMMs inside of; OpenMP, so make sure to set the :envvar:`OMP_NESTED` environment variable; to ``FALSE`` to prevent thread thrash (or just as well, do not define; :envvar:`OMP_NESTED` at all). * Freezing core is good for both efficiency and correctness purposes.; Freezing virtual",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:9575,reduce,reduce,9575,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['reduce'],['reduce']
Energy Efficiency,"ns::; ; OH 14 15; PH 16 17 18 19 20 21 22 23 24 25 26. At this point, the user should run the ``fsapt.py`` post-processing script in; the ``fsapt`` directory as::. >>> fsapt.py. This will generate, among other files, the desired functional-group partition in; ``fsapt.dat``. For our problem, the bottom of this file contains the finished; partition::. Frag1 Frag2 Elst Exch IndAB IndBA Disp Total; OH OH -8.425 6.216 -0.583 -1.512 -1.249 -5.553; OH PH 1.392 0.716 0.222 -0.348 -0.792 1.189; PH OH -2.742 0.749 -0.147 -0.227 -0.674 -3.040; PH PH 0.680 2.187 0.007 -0.208 -2.400 0.266; OH All -7.033 6.931 -0.362 -1.860 -2.040 -4.364; PH All -2.062 2.936 -0.140 -0.435 -3.074 -2.774; All OH -11.167 6.965 -0.730 -1.739 -1.923 -8.594; All PH 2.072 2.903 0.229 -0.556 -3.191 1.456; All All -9.095 9.867 -0.501 -2.295 -5.114 -7.138. Note that the assignment of linking sigma bond contributions is a small point of; ambiguity in F-SAPT. The ``fsapt.dat`` file presents the ""links-by-charge""; assignment at the top and the ""links by 50-50"" assignment at the bottom. We; generally prefer the latter, but both generally give qualitatively identical; energetic partitions. Users should check the files ``fragA.dat`` and ``fragB.dat`` to ensure that; there is not too much charge delocalization from one fragment to another. This; is presented in the ""Orbital Check"" section in these files |w--w| a value larger than; 0.1 docc is an indication that the picture of localizable functional groups may; be breaking down. We also *strongly discourage* the cutting of double,; triple, or aromatic bonding motifs when partitioning the molecule into fragments; |w--w| cuts across only simple sigma bonds are encouraged. .. caution:: November 2022, previous to QCEngine v0.26.0 and Psi4; v1.7.0, there was a scaling inconsistency in the pairwise analysis; such that :psivar:`2-BODY PAIRWISE DISPERSION CORRECTION ANALYSIS`; was doubled when generated from dftd3 compared to the output from other; programs (s-dftd3 and df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:8306,charge,charge,8306,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['charge'],['charge']
Energy Efficiency,"nsfer Analysis; ------------------------------------------------------------------------------------------------; SAPT Induction (Dimer Basis) -2.0970 [mEh] -1.3159 [kcal/mol] -5.5057 [kJ/mol]; SAPT Induction (Monomer Basis) -1.1396 [mEh] -0.7151 [kcal/mol] -2.9920 [kJ/mol]; SAPT Charge Transfer -0.9574 [mEh] -0.6008 [kcal/mol] -2.5137 [kJ/mol]. These results are for the water dimer geometry shown above computed with ; SAPT0/aug-cc-pVDZ. . .. index:: ; pair: SAPT; output. Monomer-Centered Basis Computations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The charge-transfer analysis above is carried out by taking the; difference between SAPT induction as calculated in the dimer-centered; basis (*i.e.*, each monomer sees the basis functions on both monomers); vs. the monomer-centered basis (*i.e.*, each monomer utilizes only its; own basis set). It is also possible to run a closed-shell SAPT computation at any; level using only the monomer-centered basis. To do this, simply add; ``sapt_basis='monomer'`` to the energy function, such as ::. energy('sapt2',sapt_basis='monomer'). This procedure leads to faster compuations, but it converges more slowly; towards the complete basis set limit than the default procedure, which uses; the dimer-centered basis set. Hence, monomer-centered basis SAPT; computations are not recommended. The open-shell SAPT0 code is not; compatible yet with monomer-centered computations. Computations with Mid-bonds; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^. SAPT computations with midbonds can be accomplished by adding a third ghost; monomer to the computation. For example ::. molecule dimer {; 0 1; He 0 0 5; --; 0 1; He 0 0 -5; --; 0 1; @He 0 0 0; }. Here the functions of the third monomer will be added to the virtual space of; the entire computation. Note that an error will be thrown if each atom in the; third monomer is not a ghost to prevent confusion with three-body SAPT which is; not currently supported by Psi4. Interpreting SAPT Results; ^^^^^^^^^^^^^^^^^^^^^^^^^. W",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:32025,energy,energy,32025,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"nt; scaled energy and the unscaled MP2 energy are made available::. e_mp2 = get_variable('MP2 TOTAL ENERGY'); e_scs_mp2 = get_variable('SCS-MP2 TOTAL ENERGY'). Each module and the Python driver set PSI variables over the course of a; calculation. The values for all can be printed in the output file with; the input file command :py:func:`~psi4.core.print_variables`. Note that PSI variables; are cleared at the start of each :py:func:`~psi4.driver.energy`, etc. in an input; file by :py:func:`~psi4.core.clean_variables()`.; So if you run in a single input file a STO-3G FCI followed by a; aug-cc-pVQZ SCF followed by a :py:func:`~psi4.core.print_variables` command, the; last will include :psivar:`SCF TOTAL ENERGY` but not; :psivar:`FCI TOTAL ENERGY`.; The entire dictionary of PSI variables can be obtained through; :py:func:`~psi4.core.get_variables`. .. _`sec:returnvals`:. Return Values; =============. Most of the usual user computation functions (*i.e.*,; :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, and; :py:func:`~psi4.driver.frequency`) return simply the current total energy.; Consult the descriptions of other functions in :ref:`sec:psithonFunc` for; what quantities they return and for what data structures they make; available for post-processing. Many users need only deal with the simple return; form for the computation functions. ::. # E is total energy float; # G is gradient array; # H is hessian array; # wfn is class instance with many computational details. # simple returns; E = energy(...); E = optimize(...); E = frequency(...); G = gradient(...) # used by optimize(); H = hessian(...) # used by frequency(). For more elaborate post-processing of computations, adding; ``return_wfn=True`` keyword argument additionally returns; :py:class:`~psi4.core.Wavefunction`. ::. # power user returns; E, wfn = energy(..., return_wfn=True); E, wfn = optimize(..., return_wfn=True); E, wfn = frequency(..., return_wfn=True); G, wfn = gradient(..., return_wfn=True",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:10965,energy,energy,10965,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"nt`` | Libint2 | using ``libint2::Operator::delta`` for 4-center integrals |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Angular Momentum | ``AngularMomentumInt`` | M-D | |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Dipole | ``DipoleInt`` | Libint2 | no derivatives supported |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Electric Field | ``ElectricFieldInt`` | Libint2 | using first derivative of ``libint2::Operator::nuclear`` |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Coulomb Potential | ``ElectrostaticInt`` | Libint2 | evaluated for a single origin and unity charge |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Kinetic | ``KineticInt`` | Libint2 | |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Multipole Potential | ``MultipolePotentialInt`` | M-D | arbitrary order derivative of 1/R supported |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Multipole Moments | ``MultipoleInt`` | M-D | arbitrary order multipoles supported, including nuclear gradients |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Nabla Operator | ``NablaInt`` | Libint2 | using first derivative of ``libint2::Operator::overlap`` |; +----------------------------+-----",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:20799,charge,charge,20799,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['charge'],['charge']
Energy Efficiency,"ntact the developers on GitHub and/or the `forum <http://forum.psicode.org>`_. .. _`sec:scfqmmm`:. External potentials and QM/MM; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In addition to the implementation of :ref:`EFP <sec:libefp>` for accurate QM/MM; computations, |PSIfour| can perform more rudimentary QM/MM procedures via the; |scf__extern| keyword. The following snippet, extracted from the; :srcsample:`extern1` test case, demonstrates its use for a TIP3P external potential::. import numpy as np; external_potentials = [; [-0.834, np.array([1.649232019048,0.0,-2.356023604706]) / psi_bohr2angstroms],; [ 0.417, np.array([0.544757019107,0.0,-3.799961446760]) / psi_bohr2angstroms],; [ 0.417, np.array([0.544757019107,0.0,-0.912085762652]) / psi_bohr2angstroms]]. gradient('scf', external_potentials=external_potentials). The ``external_potentials`` array has three rows for three separate; particles, and it is passed to the SCF code on the last line. The; rows are composed of the atomic charge, x coordinate, y coordinate,; and z coordinate in that order. The atomic charge and coordinates are; specified in atomic units, [e] and [a0]. Add as many particle rows as; needed to describe the full MM region. .. caution:: In |PSIfour| previous to Spring 2022 and v1.6, setting an; external potential like the above looked like ::. Chrgfield = QMMM(); Chrgfield.extern.addCharge(-0.834, 1.649232019048, 0.0, -2.356023604706); Chrgfield.extern.addCharge( 0.417, 0.544757019107, 0.0, -3.799961446760); Chrgfield.extern.addCharge( 0.417, 0.544757019107, 0.0, -0.912085762652); psi4.set_global_option_python('EXTERN', Chrgfield.extern). gradient('scf'). The main differences are that (1) the specification of; charge locations in the old way used the units of the active; molecule, whereas the new way always uses Bohr and (2) the; specification of the charge and locations in the old way used the; :py:class:`psi4.driver.QMMM` class directly and added one charge; per command, whereas the new way consolidates ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:54570,charge,charge,54570,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['charge'],['charge']
Energy Efficiency,"ntax, but the flexibility of the basis set; specification is advantageous, for example, when selectively omitting diffuse; functions to make computations more tractable. In the above example the basis sets have been assigned asymmetrically, reducing; the effective symmetry from :math:`D_{6h}` to :math:`C_{2v}`; |PSIfour| will detect this; automatically and run in the appropriate point group. Basis blocks can also be named, *e.g.*, :samp:`basis; {optional_basis_name} \\{...\\}` and the basis defined by it later; applied to another molecule. ::. # sets basis keyword; basis mybas {; assign aug-cc-pvtz; assign f cc-pvtz; }. # re-sets basis keyword; set basis aug-cc-pvtz. molecule hf {; H; F 1 1.0; }. molecule h2o {; O; H 1 1.0; H 1 1.0 2 90.0; }. # runs HF and H2O with aug-cc-pvtz; energy('hf', molecule=hf); energy('hf', molecule=h2o). # re-re-sets basis keyword; set basis mybas. # runs HF with cc-pvtz on F and aug-cc-pvtz on H; energy('hf', molecule=hf). # runs H2O with aug-cc-pvtz, effectively; energy('hf', molecule=h2o). Finally, we note that the ``basis {...}`` block may also be used; for defining basis sets, as detailed in :ref:`sec:basisUserDefined`. .. index:: basis set; auxiliary. Calculations requesting density fitting (on by default for many methods); require auxiliary fitting basis set(s) in addition to the primary; orbital one associated with the |mints__basis| keyword.; When most popular basis sets are being used, including Dunning and; Pople-style, the SCF, DF-MP2, and SAPT codes will chose the appropriate; auxiliary basis set automatically according to :ref:`apdx:basisFamily`,; unless instructed otherwise by setting the auxiliary basis set in the; input.; Should needed elements be missing from the best; auxiliary basis or should the orbital basis be unknown to |PSIfour|,; the auxiliary basis will fall back on `def2 quad-zeta fitting bases; :source:`psi4/driver/qcdb/libmintsbasisset.py#L762`.; Note that if |mints__basis| is known to be larger than quad-zet",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst:6484,energy,energy,6484,doc/sphinxman/source/basissets.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst,1,['energy'],['energy']
Energy Efficiency,"ntegrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI) (including a variety of multireference CI's and full; CI); coupled-cluster (CC) including CC with variationaly optimized; orbitals; second-order M{\o}ller-Plesset perturbation theory (MPPT); including explicitly correlated second-order M{\o}ller-Plesset energy; (MP2-R12); and complete-active-space self-consistent field (CASSCF); theory. By January 2008, all of the C code in \PSIthree\ was ; converted to C++ to enable a path toward more object-oriented design; and a single-excecutable framework that will facilitate code reuse and ; ease efforts at parallelization. At this same time, all of the legacy I/O; routines from {\tt PSI2} were removed, greatly streamlining the; \library{libciomr.a} library.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:2257,energy,energy,2257,doc/sphinxman/source/attic/history.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst,1,['energy'],['energy']
Energy Efficiency,"nter; two-electron integrals [Lehtola:2020:144105]_. The potential in; the SAPGAU scheme is passed with the |scf__sapgau_basis|; keyword. The default potential is given by the large fit to the; HelFEM potential, sap_helfem_large, described in; [Lehtola:2020:144105]_. Note that this guess is known in the DIRAC; program as .SCRPOT and in the ERKALE program as SAPFIT. These are all set by the |scf__guess| keyword. Also, an automatic Python; procedure has been developed for converging the SCF in a small basis, and then; casting up to the true basis. This can be done by adding; |scf__basis_guess| = SMALL_BASIS to the options list. We recommend the; 3-21G or pcseg-0 basis for the small basis due to its efficient mix of flexibility and; compactness. An example of performing an RHF solution of water by SAD guessing; in a 3-21G basis and then casting up to cc-pVTZ is shown below::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis cc-pvtz; basis_guess 3-21G; guess sad; }. energy('scf'). .. _`sec:scfrestart`:. Restarting the SCF; ~~~~~~~~~~~~~~~~~~. Reading orbital data from a previous calculations is done via the ``restart_file`` option,; where the actual file is a serialized ``wfn`` object (see :ref:`saving the wfn <sec:save_wfn>`); By default, the orbital data file of the converged SCF(``psi.PID.name.180.npy``) is deleted; after |PSIfour| exits or the ``clean()`` function is called. The orbital guess is automatically; set to ``READ`` when ``restart_file`` is given a ``wfn`` file.; To write the orbitals after every iteration and keep the orbitals from the last iteration, the ``write_orbitals`` options is available: ::. energy('scf', write_orbitals='my_mos'),. which writes a ``Wavefunction`` object converted (serialized) to a numpy file called ``my_mos.npy``.; The restart can then be done as follows: ::. energy('scf', restart_file='my_mos'). Specifying the ``.npy`` suffix when writing and reading restart files is optional. Alternatively, the restart can also b",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:22529,energy,energy,22529,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"ntions (without the line-length restriction). I'm aiming for files to pass the line below, unless for good reason. The second line is for database Python files. >>> pep8.py -r --ignore=E501 pythonfile.py; >>> pep8.py -r --ignore=E501,E221,E222,E241,E201,E202 databasefile.py. - Your python function should not prevent any test case from passing. A test case(s) should be written and checked in for any major python function, so that others do not break your code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Functi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:5595,energy,energy,5595,doc/sphinxman/source/attic/bestpractices_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst,1,['energy'],['energy']
Energy Efficiency,"ntour values that capture 85% of the probability density using; the least amount of grid points. This quantity is determined for orbitals and densities. The; fraction of the density captured by the isocontour values is by default 0.85, but can; be changed via the option |globals__cubeprop_isocontour_threshold|. .. note:: If your cube plots are too coarse, try to decrease the grid spacing via; the option |globals__cubic_grid_spacing|. If the edges of your plot are cut then; increase the size of the grid via the option |globals__cubic_grid_overage|. Cubeprop Tasks; --------------. The cubeprop utility can be provided a list of tasks to perform.; Tasks are specified by the |globals__cubeprop_tasks| option, which is a list of strings; that identify the tasks. Several tasks are available. These include:. ORBITALS [Default if |globals__cubeprop_tasks| is not specified]; Produces cube representations of the molecular orbitals; :math:`\psi_q(\mathbf{r})`. Orbitals are sorted according to increasing; orbital energy ignoring symmetry.; FRONTIER_ORBITALS; Produces cube representations of the frontier molecular orbitals. For closed shell; species, the highest occupied (HOMO) and the lowest unoccupied (LUMO) alpha orbitals (ie. ; :math:`\psi_{\alpha}(\mathbf{r})`) are printed, while for open shell species a total ; of :math:`(4 + M_s)` orbitals are printed (:math:`\alpha` and :math:`\beta` ; spin for both lowest virtual (LVMO) and highest doubly occupied; orbitals (DOMO), along with all :math:`\alpha` singly occupied (SOMO) orbitals).; DENSITY; This task can be used to obtain the alpha and beta electron densities,; :math:`\rho_\alpha(\mathbf{r})` and :math:`\rho_\beta(\mathbf{r})`, together; with the total density; :math:`\rho(\mathbf{r}) = \rho_\alpha(\mathbf{r}) + \rho_\beta(\mathbf{r})`,; and the spin density; :math:`\rho(\mathbf{r}) = \rho_\alpha(\mathbf{r}) - \rho_\beta(\mathbf{r})`.; BASIS_FUNCTIONS; This task is useful to produce cube files of the atomic orbital basis; fun",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cubeprop.rst:4301,energy,energy,4301,doc/sphinxman/source/cubeprop.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cubeprop.rst,1,['energy'],['energy']
Energy Efficiency,"nv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:336218,energy,energy,336218,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:343223,energy,energy,343223,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:420020,energy,energy,420020,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:489688,energy,energy,489688,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:494998,energy,energy,494998,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:108928,energy,energy,108928,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fca",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:100920,energy,energy,100920,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'ener",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:104634,energy,energy,104634,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:58566,energy,energy,58566,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:59904,energy,energy,59904,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:63932,energy,energy,63932,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:76785,energy,energy,76785,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:78123,energy,energy,78123,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:82151,energy,energy,82151,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:230720,energy,energy,230720,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:155449,energy,energy,155449,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"o df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:527031,energy,energy,527031,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"o df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 're",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:528367,energy,energy,528367,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"o give good improvements when dispersion effects; are very large, as in the PCCP dimer (see [Hohenstein:2011:2842]_).; As shown in [Parker:2014:094106]_, whether or not CCD dispersion offers; more accurate interaction energies tends to depend on the SAPT truncation; and basis set employed, due to cancellations of errors. Thanks to; natural orbital methods [Parrish:2013:174102]_, the SAPT code; is able to include CCD dispersion with only a modest additional cost.; Computations employing CCD dispersion should cite [Parrish:2013:174102]_. ; To request CCD dispersion treatment in a SAPT computation, simply append; ``(ccd)`` to the name of the method, as in the following examples ::. 	energy('sapt2+(ccd)'); 	energy('sapt2+(3)(ccd)'); 	energy('sapt2+3(ccd)'). The :math:`\delta_{MP2}` corrections can also be computed automatically; by appending ``dmp2`` to the name of the method, with or without CCD dispersion ::. 	energy('sapt2+dmp2'); 	energy('sapt2+(3)dmp2'); 	energy('sapt2+3dmp2'); 	energy('sapt2+(ccd)dmp2'); 	energy('sapt2+(3)(ccd)dmp2'); 	energy('sapt2+3(ccd)dmp2'). A brief note on memory usage: the higher-order SAPT code assumes that; certain quantities can be held in core. This code requires sufficient; memory to hold :math:`3o^2v^2+v^2N_{aux}` arrays in core. With this; requirement computations on the adenine-thymine complex can be performed; with an aug-cc-pVTZ basis in less than 64GB of memory. Higher-order SAPT is treated separately from the highly optimized SAPT0; code, therefore, higher-order SAPT uses a separate set of keywords. ; The following keywords are relevant for higher-order SAPT. Basic Keywords for Higher-order SAPT; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__basis.rst; .. include:: autodir_options_c/sapt__df_basis_sapt.rst; .. include:: autodir_options_c/globals__freeze_core.rst; .. include:: autodir_options_c/sapt__print.rst. Advanced Keywords for Higher-order SAPT; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:27376,energy,energy,27376,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,6,['energy'],['energy']
Energy Efficiency,"o open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:334751,energy,energy,334751,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"o_maxcyc|) are; ineffective, as the Cfour optimizer is never invoked. |PSIfour|; optimization keywords (*e.g.*, |optking__geom_maxiter|) instead fill; these roles. * Specifying the computational method (through, for instance,; ``energy('c4-ccsd')`` instead of ``energy('cfour')``) often; sets additional keywords consistent with best practices (*e.g.*,; |cfour__cfour_cc_program|). Since those settings are implicit, any; explicit setting of those those keywords, whether contradicting or; concurring, takes priority (halts never generated). The following are; some concrete examples. For the moment, click the source button at; muster_modelchem for details of what keywords; get set. * runs in vcc since that's Cfour's default for cc_program ::. set cfour_calc_level ccsd; energy('cfour'). * runs in ecc since Cfour's default overwritten by keyword ::. set cfour_calc_level ccsd; set cfour_cc_program ecc; energy('cfour'). * runs in ecc since that's best practice for the requested ccsd ::. energy('c4-ccsd'). * runs in vcc since *hidden* default overwritten by keyword ::. set cfour_cc_program vcc; energy('c4-ccsd'). * Specifying certain keywords that are nominally applicable for pure-\; |PSIfour| modules directs them to fulfil analogous roles; in the Cfour program (*e.g.*, |scf__maxiter| is used to set; |cfour__cfour_scf_maxcyc|). This keyword translation only takes place; if the keywords are explicitly set in the input file (part of that; contract that you mean it), meaning that |PSIfours| defaults don't; get imposed on Cfour. Also, in the case where a translatable pure-\; |PSIfour| keyword and its translation Cfour keyword are both set,; the value attached to the latter is always used. Below are a few; clarifying examples. * uses :math:`10^{-7}` SCF conv crit since that's Cfour's default; for |cfour__cfour_scf_conv| ::. energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; keyword ::. set cfour_scf_conv 6; energy('c4-scf'). * uses :math:`10^{-5}` S",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:38953,energy,energy,38953,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"obals__ras2| | |; + +----------------------------+ +; | | |globals__ras1| | |globals__active| |; +----------------------------+----------------------------+-------------------------------+; | |globals__frozen_docc| | |globals__frozen_docc| | |globals__frozen_docc| |; +----------------------------+----------------------------+-------------------------------+. .. [#f1] |globals__frozen_uocc| is not required and will be inferred if ; |globals__active| is provided. However, if it is easier to specify; |globals__frozen_uocc|, then this may be provided and |globals__active| can; be inferred. The table above shows the relevant orbitals spaces for CI computations (an; analogous :ref:`table <table:mcscf_spaces>` for MCSCF is also available). ; The third column of the; table refers to CASCI, in which a full CI is performed in some smaller; set of ``active`` orbitals; it is equivalent to CASSCF except without; any orbital optimization. It can be invoked via ``energy('fci')``; with appropriate values selected for |globals__frozen_docc| and; |globals__active|. For CI computations, there is no difference between; |globals__frozen_docc| and |globals__restricted_docc|, or between; |globals__frozen_uocc| and |globals__restricted_uocc|. There are; differences between these keywords for :ref:`sec:mcscf`. .. index:: CI; basic-keywords. Basic DETCI Keywords; ~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/detci__reference.rst; .. include:: autodir_options_c/detci__r_convergence.rst; .. include:: autodir_options_c/detci__ex_level.rst; .. include:: autodir_options_c/detci__fci.rst; .. include:: autodir_options_c/globals__frozen_docc.rst; .. include:: autodir_options_c/globals__restricted_docc.rst; .. include:: autodir_options_c/globals__restricted_uocc.rst; .. include:: autodir_options_c/globals__frozen_uocc.rst; .. include:: autodir_options_c/detci__ci_maxiter.rst; .. include:: autodir_options_c/detci__num_roots.rst; .. include:: autodir_options_c/detci__icore.rst; .. include:: autod",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:8680,energy,energy,8680,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['energy'],['energy']
Energy Efficiency,"ocation of the; Cfour scratch, execute with, for example, ``energy('cfour',; path='/full/path/to/cfour/scratch')``. Regardless of whether the location; is specified or default, whether to preserve the scratch directory after; the computation can be specified with ``energy('cfour', keep=True)`` or; (the default) ``energy('cfour', keep=False)``. *path* and *keep* are; keyword arguments that get interpreted by the; :py:func:`~psi4.driver.procrouting.interface_cfour.run_cfour` function documented below. .. autofunction:: psi4.driver.procrouting.interface_cfour.run_cfour(name [, keep, path]). .. _`sec:cfourFunctionality`:. Functionality; ~~~~~~~~~~~~~. Through clever use of the ``cfour {...}`` block, one could run most any; Cfour computation through the P4C4 interface. In contrast, enumerated; below are tested functionalities where results from Cfour are collected; into |PSIfour| data objects. .. rubric:: Implemented. * Single-point :py:func:`~psi4.driver.energy` commands for :ref:`ground state; methods <table:energy_cfour>`. Examples:; :srcsample:`cfour/sp-rhf-ccsd_t_-ao-ecc`, :srcsample:`cfour/scf4`,; :srcsample:`cfour/mints5`. * Analytic :py:func:`~psi4.driver.gradient` and :py:func:`~psi4.driver.optimize`; commands for :ref:`ground state methods <table:grad_cfour>`. Real and; Ghost atoms permitted (though the latter will naturally collapse after; several cycles). Examples: :srcsample:`cfour/opt-rhf-ccsd_t_`,; :srcsample:`cfour/mp2-1`, and :srcsample:`cfour/mints5-grad`. .. warning:: There exist molecules (*e.g.*, allene) where the; inertial frame is not unique (planes along atoms or between; atoms). The orientation reconciling machinery currently does not; handle these cases and will fail with ""Axis unreconcilable between; QC programs"". I will get to this soon. * Finite difference of energy :py:func:`~psi4.driver.gradient` and; :py:func:`~psi4.driver.optimize` for :ref:`methods <table:energy_cfour>`.; Force with ``gradient('name', dertype=0)``, *etc.*. * :py:func:`~ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:27714,energy,energy,27714,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"occ', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-she",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12378,energy,energy,12378,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"occ', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-she",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:17636,energy,energy,17636,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"od': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:51073,energy,energy,51073,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"od': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'drive",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:52657,energy,energy,52657,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"od': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:54056,energy,energy,54056,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"od': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:56655,energy,energy,56655,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"od': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:275221,energy,energy,275221,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"od': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:275396,energy,energy,275396,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"od': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:281591,energy,energy,281591,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"od': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:281766,energy,energy,281766,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"od': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'meth",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:303442,energy,energy,303442,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"od': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:330503,energy,energy,330503,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ode-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; unsetenv PSIDATADIR; setenv PATH {prefix}/bin:$PATH; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/directory/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; unset PSIDATADIR; export PATH={prefix}/bin:$PATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. .. If you installed the Psi4conda distribution or installed the |PSIfour|; .. conda package into the main environment of an Anaconda or Miniconda; .. distribution and added that to your :envvar:`PATH`, as prompted, then; .. :samp:`{condadist} = $HOME/{ana|mini|psi4}conda` and ``which psi4`` likely; .. yields :samp:`{condadist}/bin/psi4` and the ``PATH`` setting lines above; .. are redundant. Run |PSIfour| as executable. ::. >>> cat sample.in; molecule {; He; }; energy('hf/cc-pvdz'); compare_values(-2.85518839, get_variable('current energy'), 5, 'SCF E'); >>> psi4 sample.in; SCF E.............................................................PASSED. *or* Run |PSIfour| as Python module. ::. >>> cat sample.py; import psi4; mol = psi4.geometry(""""""; He; """"""); psi4.energy('hf/cc-pvdz'); psi4.compare_values(-2.85518839, psi4.core.get_variable('current energy'), 5, 'SCF E'); >>> python sample.py; SCF E.............................................................PASSED. .. _`faq:inplace`:. How to run Psi4 as executable after compilation using driver from source; ------------------------------------------------------------------------. When developing python driver code, it can be annoying to keep `make`\; ing to test the code. |PSIfour| can be run ""inplace"" through the; following procedure. To be clear, this is running compiled C++ from the; build directory and python from the source directory. This is an expert; option for development, and not all functionality will be available. ::. >>> cd {objdir}; >>> ln -s {top-level-psi4-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:32888,energy,energy,32888,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['energy'],['energy']
Energy Efficiency,"oduct of the electronic Hessian with the step vector is computed for; efficiency. By default, the electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. Setting the |dct__qc_type|; option to ``TWOSTEP`` will perform the Newton-Raphson update only for the orbitals,; while the equations for the cumulant will be solved using a standard Jacobi update.; If requested by the user (set |dct__qc_coupling| to TRUE), the electronic Hessian can include; matrix elements that couple the orbitals and the density cumulant.; The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below :math:`10^{-7}`. The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive :math:`{\cal O}(N^5)` integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive :math:`{\cal O}(N^6)`; cumulant updates. As a result, for small closed-shell systems the two-step; algorithm is usually preferred, while for larger systems and molecules with; open-shell character it is recommended to use the simultaneous algorithm.; Efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; :math:`(vv|vv)` and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the |dct__ao_basis| option to; DISK (currently used by default). For more recommendations on the choice of the algorithm see; :ref:`Recommendations <sec:dctrecommend>`. .. _`sec:dctgradients`:. Analytic Gradients; ~~~~~~~~~~~~~~~~~~. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:12149,energy,energy,12149,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"odule': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:10810,energy,energy,10810,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"odule': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:16068,energy,energy,16068,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"odule': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no op",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:227672,energy,energy,227672,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"odule': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:60487,energy,energy,60487,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"odule': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:78706,energy,energy,78706,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"odule': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'meth",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:131704,energy,energy,131704,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"odule': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'meth",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:135478,energy,energy,135478,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are optimized in the MCSCF.; The default is the zero vector. FROZEN\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_DOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_DOCC} and {\tt FROZEN\_DOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. FROZEN\_UOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_UOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_UOCC} and {\tt FROZEN\_UOCC}.; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The default is the zero vector. NCASITER = integer]\mbox{}\\; Maximum number of iterations to optimize the orbitals. This option; should be specified in the DEFAULT section of input, because; it needs to be visible to the control program PSI. Defaults to 20. AVERAGE\_STATES = (integer array)]\mbox{}\\; This gives a list of what states to average for the orbital ; optimization. States are numbered starting from 1. PRINT = integer]\mbox{}\\; This option determines the verbosity of the output. A value of 1 or; 2 specifies minimal printing, a value of 3 specifies verbose printing.; Values of 4 or 5 are used for debugging. Do not ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:6490,energy,energy,6490,doc/sphinxman/source/attic/detcas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst,1,['energy'],['energy']
Energy Efficiency,"ohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:486264,energy,energy,486264,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"olecular; geometry. Therefore, *it's important to obtain the vibrational frequencies ; at the OPTIMIZED GEOMETRY*. We could set up a second input file to perform; the vibrational frequency analysis, being very careful to copy over the; optimized geometry from the *bottom* of the output file for the geometry; optimization. This geometry could be specified in either z-matrix or; Cartesian formats. However, there's a much easier way to do this. If we; specify a vibrational frequency analysis in the same input file as the; optimization, after the optimization function has been called, then the; optimized geometry will automatically be carried over. So, it's easiset to do the optimization and vibrational frequency analysis; together. This can be specified as follows (see test case; :srcsample:`tu4-h2o-freq`):. .. literalinclude:: @SFNX_INCLUDE@samples/tu4-h2o-freq/input.dat. The program will do the same optimization as in our previous example,; but then it will follow it with some computations to obtain the Hessian; (second derivative matrix) of the electronic energy with respect to; nuclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of around 0.1 cm\ :sup:`-1`; may exist)::. Irrep Harmonic Frequency; (cm-1); -----------------------------------------------; A1 1775.6480; A1 4113.3794; B2 4212.1826; -----------------------------------------------. Notice that the symmetry type of the normal modes is specified (A1, A1,; B2). The program also prints out the normal modes in terms of Cartesian; coordinates of each atom. For example, the normal mode at 1776 cm\ :sup:`-1` ; is::. Frequency: 1775.65; Force constant: 0.1193; X Y Z mass; O 0.000 0.000 -0.270 15.994915; H 0.000 0.417 0.538 1.007825; H 0.000 -0.417 0.538 1.007825. where the table shows the displacements in the X, Y, and Z dimensions for; each atom along the normal mode coordinate. (This information could be used; to animate the vibrational frequency us",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:9719,energy,energy,9719,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"olvation. .. psivar:: DD SOLVATION ENERGY. The energy contribution [Eh] from continuum solvation models based on a; domain-decomposition ansatz. .. psivar:: PE ENERGY. The energy contribution [E_h] from the polarizable embedding model for solvation. .. psivar:: QCISD TOTAL ENERGY; QCISD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles level; of theory. .. psivar:: QCISD(T) TOTAL ENERGY; QCISD(T) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. .. psivar:: QCISD(T) CORRECTION ENERGY. The quadratic configuration interaction singles and doubles perturbative; triples correction [E_h]. .. psivar:: REMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the retaining-the-excitation-degree |MollerPlesset| hybrid perturbation; theory level. .. psivar:: SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; requested SAPT level of theory. The sum of these four components yields; :psivar:`SAPT TOTAL ENERGY`. .. psivar:: SAPT TOTAL ENERGY; SAPT ENERGY. The total electronic interaction energy [E_h] for the requested SAPT; level of theory. .. psivar:: SAPT ELST10,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT ELST EXTERN-EXTERN ENERGY. Electrostatic interaction [E_h] between the point charges in fragments; A and B in F/I-SAPT. .. psivar:: SAPT EXCH10 ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH10(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psiva",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:49294,energy,energy,49294,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'modul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:395206,energy,energy,395206,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ompatible with 3.8 and above until there is a good reason to drop; older versions but (2) only build and test for versions conda-forge supports.; The current master supports 3.8, 3.9, 3.10, 3.11, and 3.12. .. index:: license. License; =======. |PSIfour| is distributed under the GNU Lesser General Public License; version 3, `LGPL-3.0 <https://opensource.org/licenses/LGPL-3.0>`_. Its; required dependencies and add-ons have their own licenses, ranging from; BSD-2-Clause to GPL-2.0+. It is possible to build |PSIfour| without any; General GPL dependencies. Capabilities; ============. |PSIfour| can perform *ab initio* computations employing basis; sets of contracted Gaussian-type functions of virtually arbitrary; orbital quantum number. Many parts of |PSIfour| can recognize and; exploit the largest Abelian subgroup of the molecular point group.; Table :ref:`Methods <table:methods>` displays the range of theoretical methods; available in |PSIfour|. Geometry optimization can be performed using either analytic gradients; or energy points. Likewise, vibrational frequencies can be; computed by analytic second derivatives, by finite; differences of analytic gradients, or by finite differences of energies.; |PSIfour| can also compute an extensive list of one-electron properties. For more tables with capabilities details:. * :ref:`Full Capabilities <table:methods>` (first below) lists all methods; * :ref:`Capabilities Breakdown <table:stdsuite>` (second below) lists selected methods by reference, etc.; * :ref:`Module Capabilities <table:managedmethods>` lists selected methods by implementation; * :ref:`Energy <table:energy_gen>`, :ref:`Energy (DFT) <table:energy_dft>`, :ref:`Energy (MRCC) <table:energy_mrcc>`, :ref:`Energy (CFOUR) <table:energy_cfour>` fully list energy target methods; * :ref:`Gradient <table:grad_gen>`, :ref:`Gradient (CFOUR) <table:grad_cfour>` fully list gradient target methods; * :ref:`Frequency <table:freq_gen>` fully lists Hessian target methods. .. _`table",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:29340,energy,energy,29340,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['energy'],['energy']
Energy Efficiency,"on Approximations: An Efficient Implementation,""; U. Bozkaya, *J. Chem. Theory Comput.* **10**, 2371 (2014).; (doi: `10.1021/ct500231c <https://doi.org/10.1021/ct500231c>`_). * ""Analytic Energy Gradients and Spin Multiplicities for Orbital-Optimized; Second-Order Perturbation Theory with Density-Fitting Approximation: An; Efficient Implementation,"" U. Bozkaya, *J. Chem. Theory Comput.* **10**, 4389 (2014).; (doi: `10.1021/ct500634s <https://doi.org/10.1021/ct500634s>`_). Density-Fitted and Cholesky-Decomposed Orbital-optimized MP3 and MP2.5 (DF-OMP3 and DF-OMP2.5). * ""Orbital-Optimized MP3 and MP2.5 with Density-Fitting; and Cholesky Decomposition Approximations,""; U. Bozkaya, *J. Chem. Theory Comput.* **12**, 1179 (2016).; (doi: `10.1021/acs.jctc.5b01128 <https://doi.org/10.1021/acs.jctc.5b01128>`_). Density-Fitted and Cholesky-Decomposed Orbital-Optimized Linearized Coupled-Cluster Doubles Method (DF-OLCCD). * ""Orbital-optimized linearized coupled-cluster doubles with density-fitting; and Cholesky decomposition approximations: an efficient implementation,""; U. Bozkaya, *Phys. Chem. Chem. Phys.* **18**, 11362 (2016).; (doi: `10.1039/c6cp00164e <https://doi.org/10.1039/c6cp00164e>`_). Algebraic-Diagrammatic Construction methods (ADC); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. General ADC theory. * ""Intermediate state representation approach to physical properties of; electronically excited molecules,""; J. Schirmer, and A. B. Trofimov, *J. Chem. Phys.* **120**,; 11449-11464 (2004).; (doi: `10.1063/1.1752875 <https://doi.org/10.1063/1.1752875>`_). Implementation inside `adcc <https://adc-connect.org>`_,; the ADC backend used for most ADC methods available in |PSIfour|. * ""adcc: A versatile toolkit for rapid development of; algebraic-diagrammatic construction methods,""; M. F. Herbst, M. Scheurer, T. Fransson, D. R. Rehn, and A. Dreuw.; *WIREs Comput. Mol. Sci.*, (2020).; (DOI: `10.1002/wcms.1462 <https://doi.org/10.1002/wcms.1462>`_, Preprint https://adc-connec",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:24218,efficient,efficient,24218,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['efficient'],['efficient']
Energy Efficiency,"on [E_h]. .. psivar:: REMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the retaining-the-excitation-degree |MollerPlesset| hybrid perturbation; theory level. .. psivar:: SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; requested SAPT level of theory. The sum of these four components yields; :psivar:`SAPT TOTAL ENERGY`. .. psivar:: SAPT TOTAL ENERGY; SAPT ENERGY. The total electronic interaction energy [E_h] for the requested SAPT; level of theory. .. psivar:: SAPT ELST10,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT ELST EXTERN-EXTERN ENERGY. Electrostatic interaction [E_h] between the point charges in fragments; A and B in F/I-SAPT. .. psivar:: SAPT EXCH10 ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH10(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT IND20,R ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT EXCH-IND20,U ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT DISP20 ENERGY; SAPT EXCH-DISP20 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH-DISP20(S^INF) ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. See :ref:`sec:saptinf`. .. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY. The portion of :psivar:`SAPT DISP20 ENERGY` or; :psivar:`SAPT EXCH-DISP20 ENERGY` resulting from; from same-spin or triplet doubles correlations. .. psivar:: SAPT HF(2) ENERGY ABC(HF). The total Hartree--Fock energy [E_h] of the supersystem implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(0). The Hartree--Fock energy [E_h] of sub",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:50205,energy,energy,50205,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"on energy component [E_h]; for the linearized coupled cluster singles and doubles level of theory. .. psivar:: LCC2 (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CC2 level of theory. .. psivar:: LCCSD (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CCSD level of theory. .. psivar:: LEFT-RIGHT CC2 EIGENVECTOR OVERLAP; LEFT-RIGHT CC3 EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD(T) EIGENVECTOR OVERLAP. The overlap between the right-hand coupled coupled cluster eigenvector and the; left-hand eigenvector from the coupled cluster lambda (response) equations. .. psivar:: LOWDIN CHARGES. Property of partial atomic charges [e] by the method of L\ |o_dots|\ wdin, (nat,). .. psivar:: MAYER INDICES. Property of Mayer bond indices, (nat, nat). .. psivar:: MBIS CHARGES; MBIS DIPOLES; MBIS OCTUPOLES; MBIS QUADRUPOLES. Per-atom charges [e], dipoles [e a0], quadrupoles [e a0^2], and octupoles [e a0^3]; resulting from partitioning the total electron density through the Minimal Basis; Iterative Stockholder (MBIS) Charge Partitioning Scheme. .. psivar:: MBIS FREE ATOM n VOLUME. Free-atom volume [a0^3] for atom n, computed using the MBIS charge; partitioning scheme. Free atom densities are computed at the same; level of theory as the parent MBIS calculation, with UHF turned on; as needed. .. psivar:: MBIS RADIAL MOMENTS <R^3>. Per-atom expectation value of r^3 [a0^3], equivalent to the volume; of the MBIS-partitioned density. .. psivar:: MBIS VALENCE WIDTHS. Per-atom density width [a0] of the associated valence charge computed; from an MBIS partitioned density. Equivalent to the inverse of the; linear decay rate of the atomic density. .. psivar:: MBIS VOLUME RATIOS. Per-atom ratio between the atomic volume (<R^3>) and the free-atomic; volume, unitless. .. psivar:: MCSCF TOTAL ENERGY. Multiconfigurational self-consistent-field energy [E_h] in the course of; a configuration interaction computation. May be single-roo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:37797,charge,charges,37797,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['charge'],['charges']
Energy Efficiency,"on, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index::; triple: setting; keywords; cbs(); see: complete_basis_set(); cbs(); single: basis set; delta correction. .. _`sec:cbs()`:. Complete Basis Set; ==================. .. toctree::; :hidden:. cbs_eqn. .. codeauthor:: Lori A. Burns, Daniel G. A. Smith and Peter Kraus; .. sectionauthor:: Lori A. Burns and Peter Kraus. The :py:func:`psi4.driver.cbs` function described below is; powerful but complicated, requiring many options. For most common; calculations, a shorthand can be accessed directly though; :py:func:`psi4.driver.energy`, :py:func:`psi4.driver.gradient`, *etc.* For example,; a MP2 single-point DT extrapolation can be accessed through the first item; below more conveniently than the equivalent second or third items. * ``energy('mp2/cc-pv[dt]z')``. * ``energy(""cbs"", corl_wfn='mp2', corl_basis='cc-pv[dt]z')``. * ``energy(""cbs"", cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": ""corl_xtpl_helgaker_2""}])``. .. caution:: In |PSIfour| previous to Spring 2022 and v1.6, calling certain; cbs-related functions like the above looked like ::. energy(cbs, corl_wfn='mp2', corl_basis='cc-pv[dt]z'). energy(cbs, cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": corl_xtpl_helgaker_2}]). The difference is that the main function; :py:func:`psi4.driver.cbs` and extrapolation schemes like; :py:func:`psi4.driver.driver_cbs_helper.xtpl_highest_1` and; :py:func:`psi4.driver.driver_cbs_helper.scf_xtpl_helgaker_2` and composite; aliases like :py:func:`psi4.driver.aliases.sherrill_gold_standard`; and :py:func:`psi4.driver.aliases.allen_focal_point` in the old way; passed the Python function directly, whereas the new way uses the; string of the function name. A CCSD(T) DT coupled-cluster correction atop a TQ MP2 extrapolation; geometry optimization can also be accessed through the first item bel",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst:1898,energy,energy,1898,doc/sphinxman/source/cbs.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst,1,['energy'],['energy']
Energy Efficiency,"on. .. psivar:: NUCLEAR REPULSION ENERGY. The nuclear repulsion energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{NN}` in Eq. :eq:`SCFterms`. .. math:: E_{NN} = \sum_{i, j<i}^{N_{atom}}\frac{Z_i Z_j}{|\mathbf{R}_i - \mathbf{R}_j|}; :label: ENN. .. psivar:: OCEPA(0) TOTAL ENERGY; OCEPA(0) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized CEPA(0) level of theory. .. psivar:: OLCCD TOTAL ENERGY; OLCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized linearized coupled cluster doubles level of theory. .. psivar:: OLCCD REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized linearized coupled cluster; doubles level of theory. .. psivar:: OMP2 TOTAL ENERGY; OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2 level of theory. .. psivar:: OMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2 level of theory. .. psivar:: OMP2.5 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP2.5 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP3 TOTAL ENERGY; OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP3 level of theory. .. psivar:: OMP3 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP3 level of theory. .. psivar:: OR",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:46575,energy,energy,46575,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"onal external libraries, add that; information here. * **input.dat** |w---w| Sample input file for the plugin.; Since the ``__init__.py`` file makes the plugin directory look like a; Python module, the plugin can be treated as such in an input file. The; location of the plugin directory must be included in :envvar:`PYTHONPATH`,; either externally in the calling shell or defined in the input file.; This is usually done by manipulating :envvar:`PSIPATH`. Then,; the plugin can be loaded as ``import myplugin`` and executed as; ``energy('myplugin')``. Any other Python functions are also available from; the input file, *e.g.* ``myplugin.testfunction()``, note the namespace; protection. * **pymodule.py** |w---w| Python component of the plugin.; By encoding the sequence of |PSIfour| module; calls needed to run the plugin in the ``run_myplugin()`` function in this; file, the plugin is hooked into the main |PSIfour| driver function; :py:func:`~psi4.driver.energy` and so can be accessed through; ``energy('myplugin')`` in an input file. Any other Python functions can; also be placed in this file. * **__init__.py** |w---w| Init script for the plugin (in the sense that; the whole plugin directory is a Python module). This file generally won't; need editing unless additional Python files are added to the plugin; directory (add additional lines to the ``# Load Python modules`` section); or the plugin depends on .so codes in other plugin directories (add; additional plugin_load lines relative to the current plugin directory to; the ``# Load C++ plugin`` section). .. comment as modeled in :source:`tests/plugin_libcim/__init__.py`). .. literalinclude:: @SFNX_INCLUDE@psi4/share/psi4/plugin/__init__.py.template. * **doc.rst** |w---w| Documentation file. Place in this file any notes,; equations, warnings to users, todo lists, *etc.*. Plain text is fine,; though reStructuredText is the ultimate goal. Remove the ``.. comment``; text and build Sphinx documentation for samples of linking key",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst:9593,energy,energy,9593,doc/sphinxman/source/plugins.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst,2,['energy'],['energy']
Energy Efficiency,"onett, and Xiao Wang; .. sectionauthor:: Alexander Yu. Sokolov. *Module:* :ref:`Keywords <apdx:dct>`, :ref:`PSI Variables <apdx:dct_psivar>`, :source:`DCT <psi4/src/psi4/dct>`. .. _`sec:dcttheory`:. Theory; ~~~~~~. Density cumulant theory (DCT) is a density-based *ab initio* theory; that can compute electronic energies without the use of a wavefunction. The; theory starts by writing the exact energy expression in terms of the one- and; two-particle density matrices (:math:`\boldsymbol{\gamma_1}` and :math:`\boldsymbol{\gamma_2}`):. .. math:: . E = h_p^q \gamma_q^p + \frac{1}{2} g_{pq}^{rs} \gamma_{rs}^{pq}. Here we used Einstein convention for the summation over the repeated indices.; :math:`h_p^q` and :math:`g_{pq}^{rs}` are the standard one- and two-electron integrals, and; :math:`\gamma_p^q` and :math:`\gamma_{pq}^{rs}` are the elements of :math:`\boldsymbol{\gamma_1}` and :math:`\boldsymbol{\gamma_2}`,; respectively. Naively, one might expect that it is possible to minimize the; energy functional in the equation above and obtain the exact energy. This is,; however, not trivial, as the density matrix elements :math:`\gamma_p^q` and; :math:`\gamma_{pq}^{rs}` cannot be varied arbitrarily, but must satisfy some; conditions that make sure that the density matrices are N-representable, *i.e.*; correspond to an antisymmetric N-electron wavefunction. Unfortunately, no; simple set of necessary and sufficient N-representability conditions are known,; and some of the known conditions are not easily imposed. In addition, the lack; of separability of the density matrices may result in the loss of; size-consistency and size-extensivity. In DCT, one takes a different route and; replaces :math:`\boldsymbol{\gamma_2}` in favor of its two-particle density cumulant:. .. math:: . \lambda_{pq}^{rs} = \gamma_{pq}^{rs} - \gamma_p^r \gamma_q^s + \gamma_p^s \gamma_q^r. The one-particle density matrix is separated into its idempotent part; :math:`\boldsymbol{\kappa}` and a correction :ma",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:2233,energy,energy,2233,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,2,['energy'],['energy']
Energy Efficiency,"ontaneous emission 'probability.'; Units are in [1/s].; Describes the transition between roots *m* and *n*, which are in irreps *h* and *i*, respectively.. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN A (LEN) - h TRANSITION. The Einstein A coefficient, the spontaneous emission 'probability.'; Units are in [1/s].; Describes the irrep *h* transition between roots *m* and *n*. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between roots *m* and *n*. .. psivar:: CCname ROOT m (IN h) -> ROOT n (IN i) EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between root *m* within irrep *h* and root *n* which irrep *i*. .. psivar:: CCname ROOT m (h) -> ROOT n (i) EINSTEIN B (LEN). The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the transition between roots *m* and *n*, which are in irreps *h* and *i*, respectively.. .. psivar:: CCname ROOT m -> ROOT n EINSTEIN B (LEN) - h TRANSITION. The Einstein B coefficient, the stimulated emission 'probability'; in terms of energy density. Units are in [m^3 / J / s^2].; Describes the irrep *h* transition between roots *m* and *n*. .. psivar:: CCname ROOT m -> ROOT n ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 -> ROOT n ROTATORY STRENGTH (LEN). The length-gauge rotatory strength of the transition from root *m* to root *n*.; DFT functional labeled if canonical. .. psivar:: CCname ROOT m (IN h) -> ROOT n (IN i) ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) ROTATORY STRENGTH (LEN). The length-gauge oscillator strength of the transition from root *m* within irrep *h*; to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: CCname ROOT m (h) -> ROOT n (",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:14415,energy,energy,14415,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"ontrol over the SCF procedure. You have the option of ; doing the driver job in the input file, by performing the dimer and monomer computations; yourself. In the example below, we do a stability analysis for the open-shell monomer only ::. molecule {; 0 2; O 0.000000 0.000000 0.000000; O 0.000000 2.503900 0.000000; H 0.000000 -0.424700 -1.839500; --; 0 1; O 0.000000 0.000000 6.000000; H 0.000000 1.431500 4.890600; H 0.000000 -1.431500 4.890600; units bohr; symmetry c1; no_reorient; no_com; }; ; dimer = psi4.get_active_molecule() ; ; set {; reference uhf; scf_type df; basis cc-pVDZ; df_basis_sapt cc-pVDZ-ri; guess sad; }; ; dimer = psi4.get_active_molecule(); ; set df_ints_io save; psi4.IO.set_default_namespace('dimer'); Edim, wfn_dimer = energy('scf',molecule=dimer,return_wfn=True); set df_ints_io load; ; monomerA = dimer.extract_subsets(1,2); psi4.IO.change_file_namespace(97, 'dimer', 'monomerA'); psi4.IO.set_default_namespace('monomerA'); set {; stability_analysis follow; }; EmonA, wfn_monA = energy('scf',molecule=monomerA,return_wfn=True); ; monomerB = dimer.extract_subsets(2,1); psi4.IO.change_file_namespace(97, 'monomerA', 'monomerB'); psi4.IO.set_default_namespace('monomerB'); set {; stability_analysis none; }; EmonB, wfn_monB = energy('scf',molecule=monomerB,return_wfn=True); ; psi4.IO.change_file_namespace(97, 'monomerB', 'dimer'); psi4.IO.set_default_namespace('dimer'); ; aux_basis = psi4.core.BasisSet.build(wfn_dimer.molecule(), ""DF_BASIS_SAPT"",; psi4.core.get_global_option(""DF_BASIS_SAPT""),; ""RIFIT"", psi4.core.get_global_option(""BASIS"")); wfn_dimer.set_basisset(""DF_BASIS_SAPT"", aux_basis); wfn_dimer.set_basisset(""DF_BASIS_ELST"", aux_basis); ; psi4.sapt(wfn_dimer,wfn_monA,wfn_monB). In this way, any of the SCF options can be tweaked for individual fragments.; For optimal efficiency, the example uses ``set df_ints_io save`` to keep file 97,; which contains the three-index integrals for density fitting. ``set df_ints_io load``; then instructs the program to",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:18604,energy,energy,18604,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"ontrollable errors. This is the; defining insight of DLPNO-MP2 and all related ""local correlation"" methods. The DLPNO-MP2 code is a linear-scaling alternative to the :ref:`DF-MP2 <sec:dfmp2>`; code, and is intended for use with large systems for which DF-MP2 is intractable.; When running DLPNO-MP2 with default settings, approximately 99.9% of the DF-MP2 ; correlation energy is recovered. The general outline of the method is as follows:. (1) Localize the active occupied MOs (with the Foster-Boys method); (2) Construct projected AOs (PAOs) from the virtual MOs; (3) Calculate three-index integrals in the (sparse) LMO/PAO basis; (4) Perform local density fitting to construct (sparse) exchange integrals; (5) Transform local virtuals from PAOs to pair natural orbitals (PNOs), and truncate; (6) Solve the iterative local MP2 equations in the LMO/PNO basis. An example input file is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; set pno_convergence normal; ; energy('dlpno-mp2'). The main difference between this input and a DF-MP2 input is the ``energy('dlpno-mp2')``; call to :py:func:`~psi4.driver.energy`. The only other addition is the |dlpno__pno_convergence|; keyword, which determines the accuracy of the local approximations underlying ; the DLPNO-MP2 method. Note that the water molecule in this example is not large; enough for DLPNO-MP2 to be of any benefit relative to DF-MP2. The theory of the DLPNO-MP2 method and practical recommendations for using the; code are presented below. . .. index::; pair: DLPNO-MP2; theory. Theory; ------. See :ref:`DF-MP2 <sec:dfmp2>` for background on the theory of (non-local); density-fitted MP2. |PSIfours| DLPNO-MP2 implementation is based on the ; manuscript by Pinski et al. [Pinski:2015:034108]_. In DLPNO-MP2, as in all local MP2 methods, the second-order MBPT energy is determined ; variationally via the Hylleraas functional [Hylleraas:1930:209]_:. .. math::",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:3389,energy,energy,3389,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,1,['energy'],['energy']
Energy Efficiency,"onv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:324411,energy,energy,324411,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"onv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_ty",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:325962,energy,energy,325962,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"onv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:497002,energy,energy,497002,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"onv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:109112,energy,energy,109112,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"onv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'u",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:445953,energy,energy,445953,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"onv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:497179,energy,energy,497179,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"onvergence.rst; .. include:: autodir_options_c/sapt__e_convergence.rst; .. include:: autodir_options_c/sapt__maxiter.rst; .. include:: autodir_options_c/sapt__print.rst. Advanced SAPT0 Keywords; ~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__aio_cphf.rst; .. include:: autodir_options_c/sapt__aio_df_ints.rst; .. include:: autodir_options_c/sapt__coupled_induction.rst; .. include:: autodir_options_c/sapt__exch_scale_alpha.rst; .. include:: autodir_options_c/sapt__ints_tolerance.rst; .. include:: autodir_options_c/sapt__denominator_delta.rst; .. include:: autodir_options_c/sapt__denominator_algorithm.rst; .. include:: autodir_options_c/globals__debug.rst. Specific open-shell SAPT0 keywords; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__sapt_mem_safety.rst; .. include:: autodir_options_c/sapt__coupled_induction.rst. .. index:: SAPT; SAPT(DFT). .. _`sec:saptdft`:. SAPT(DFT); ^^^^^^^^^. In general, SAPT(DFT) should provide more accurate interaction energy ; components, and overall interaction energies, than SAPT0. The drawback ; is SAPT(DFT) method is more computationally demanding than SAPT0, ; SAPT(DFT) can still be applied to medium-sized or large systems. The ; SAPT(DFT) module was employed successfully in computations of systems ; with up to 2000 basis functions, and the code should be scalable to ; 3000 basis functions. Like higher-order SAPT, SAPT(DFT) requires ; sufficient memory to hold :math:`2ovN_aux` doubles. SAPT(DFT) requires a few special treatments to obtain accurate; result. The DFT functionals used in SAPT(DFT) need to be asymptotically; corrected with Gradient Regulated Asymptotic Correction scheme (GRAC),; in order to recover the correct long-range asymptotic behavior; (approaching :math:`-1/r` as :math:`r` approaches infinity). The program; requires manual input of GRAC shift parameter for each monomer through; keywords |sapt__sapt_dft_grac_shift_a| and |sapt__sapt_dft_grac_shift_b|,; which should be equal to ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:22602,energy,energy,22602,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"op and K. Patkowski; *J. Chem. Phys.* **154**, 024103 (2021).; https://doi.org/10.1063/1.4994190. .. [Ochsenfeld:1998:1663]; C. Ochsenfeld, C. A. White, M. Head-Gordon; *J. Chem. Phys.* **109**, 1663 (1998); https://doi.org/10.1063/1.476741. .. [Behnle:2019:REMP]; ""REMP: A hybrid perturbation theory providing improved electronic wavefunctions and properties"",; S. Behnle and R. F. Fink,; *J. Chem. Phys.* **150**, 1241077 (2019).; https://doi.org/10.1063/1.5086168. .. [Behnle:2021:OREMP]; ""OO-REMP: Approaching Chemical Accuracy with Second-Order Perturbation Theory"",; S. Behnle and R. F. Fink,; *J. Chem. Theory Comput.* **17**, 3259 (2021).; https://doi.org/10.1021/acs.jctc.1c00280. .. [Behnle:2022:OREMP]; ""UREMP, RO-REMP, and OO-REMP: Hybrid perturbation theories for open-shell electronic structure calculations"",; S. Behnle and R. F. Fink; *J. Chem. Phys.* **156**, 124103 (2022).; https://doi.org/10.1063/5.0081285. .. [Fink:2006:RE]; ""Two new unitary-invariant and size-consistent perturbation theoretical approaches to the electron correlation energy"",; R. F. Fink; *Chem. Phys. Lett.*, **428**, 461 (2006); https://doi.org/10.1016/j.cplett.2006.07.081. .. .. [Bozkaya:2014:dfomp2]; .. U. Bozkaya,; .. *J. Chem. Phys.* **141**, 124108 (2014).; .. https://doi.org/10.1063/1.4896235. .. [Bozkaya:2014:dfomp2grad]; U. Bozkaya,; *J. Chem. Theory Comput.* **10**, 4389-4399 (2014).; https://doi.org/10.1021/ct500634s. .. [Bozkaya:2016:dfomp3]; U. Bozkaya,; *J. Chem. Theory Comput.* **12**, 1179-1188 (2016).; https://doi.org/10.1021/acs.jctc.5b01128. .. [Bozkaya:2016:dfolccd]; U. Bozkaya,; *Phys. Chem. Chem. Phys.* **18**, 11362-11373 (2016).; https://doi.org/10.1039/c6cp00164e. .. [Bozkaya:2016:dfccsdat]; U. Bozkaya,; *J. Chem. Phys.* **144**, 144108 (2016).; https://doi.org/10.1063/1.4945706. .. [Bozkaya:2016:dfccsdgrad]; U. Bozkaya and C. D. Sherrill,; *J. Chem. Phys.* **144**, 174103 (2016).; https://doi.org/10.1063/1.4948318. .. [Bozkaya:2017:dfccsdtgrad]; U. Bozkaya and C. D.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/bibliography.rst:20528,energy,energy,20528,doc/sphinxman/source/bibliography.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/bibliography.rst,1,['energy'],['energy']
Energy Efficiency,"optimizations.; SAP; Superposition of Atomic Potentials. This is essentially a; modification of the core Hamiltonian, which includes screening; effects by using a radially screened effective atomic charge. The; screening effects have been calculated at the complete basis set; limit with finite-element calculations, see [Lehtola:2019:25945]_; and [Lehtola:2020:012516]_. The guess and its implementation have; been described in [Lehtola:2019:1593]_. The guess is evaluated on a; DFT quadrature grid, so the guess energy depends slightly on the; used DFT quadrature. The current implementation is based on; exchange-only local density calculations that are but nanohartree; away from the complete basis set limit [Lehtola:2020:012516]_.; SAPGAU; Superposition of Atomic Potentials, but using error function based; fits to the atomic radial potentials as discussed in; [Lehtola:2020:144105]_. The main difference to the SAP guess; discussed above [Lehtola:2019:25945]_ is that the SAPGAU scheme is; analytic, and can be efficiently formed in terms of three-center; two-electron integrals [Lehtola:2020:144105]_. The potential in; the SAPGAU scheme is passed with the |scf__sapgau_basis|; keyword. The default potential is given by the large fit to the; HelFEM potential, sap_helfem_large, described in; [Lehtola:2020:144105]_. Note that this guess is known in the DIRAC; program as .SCRPOT and in the ERKALE program as SAPFIT. These are all set by the |scf__guess| keyword. Also, an automatic Python; procedure has been developed for converging the SCF in a small basis, and then; casting up to the true basis. This can be done by adding; |scf__basis_guess| = SMALL_BASIS to the options list. We recommend the; 3-21G or pcseg-0 basis for the small basis due to its efficient mix of flexibility and; compactness. An example of performing an RHF solution of water by SAD guessing; in a 3-21G basis and then casting up to cc-pVTZ is shown below::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:21496,efficient,efficiently,21496,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['efficient'],['efficiently']
Energy Efficiency,"or QM <sec:moleculeKeywords>`, the center of mass; coordinates in the XYZABC format and all coordinates in the POINTS format are; taken to be in Angstroms by default or in Bohr if ``units au`` is present.; Charge and multiplicity specifications are encoded in the fragment file; and so are not read from input. Any combination of EFP and QM fragments can be placed in a molecule; even; the oddity below is legitimate. Note that symmetry and reorientation are; automatically turned off when EFP fragments are present (``symmetry c1``; and ``no_com`` and ``no_reorient`` are implied). ::. molecule qmefp {; efp nh3 0.0 0.0 5.0 5 2 8; --; C 0.0 0.0 0.0; O 0.0 1.5 0.0; O 0.0 -1.5 0.0; --; efp h2o 5.0 0.0 0.0 5 2 8; --; He -3.0 4.0 4.0; He -4.0 5.0 4.0; --; efp ch3oh; 1.275 -2.447 -4.673; 0.709 -3.191 -3.592; 2.213 -1.978 -4.343; }. Running EFP ; ~~~~~~~~~~~~. EFP can be invoked in similar fashion as other theories provided in |PSIfour|.; For example, if you want to obtain the EFP interaction energy for benzene and two waters,; simply provide the following::. molecule {; efp c6h6 0.0 0.0 0.0 0.0 0.0 0.0; --; efp h2o 4.0 0.0 0.0 0.0 0.0 0.0; --; efp h2o -4.0 0.0 0.0 0.0 0.0 0.0; }; ; energy('efp'). This computation involves purely EFP/EFP fragment interactions and is; performed entirely by the LIBEFP library. |PSIfour| can also handle mixed; systems of quantum mechanical (QM) and EFP fragments through the native; :ref:`SCF <sec:scf>` code augmented by calls to the LIBEFP library. For; example, turning one of the waters in the example above into a QM; fragment is shown below. ::. molecule {; efp c6h6 0.0 0.0 0.0 0.0 0.0 0.0; --; O 4.0 0.0 0.0; H 4.7 0.7 0.0; H 3.3 -0.7 0.0 ; --; efp h2o -4.0 0.0 0.0 0.0 0.0 0.0; }; ; set basis 6-31g; energy('scf'). Whenever an EFP fragment is present in the active molecule, the SCF energy; will include EFP contributions. .. warning:: Although the EFP geometry is specified alongside the QM; geometry in a ``molecule name {...}`` block, internally th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:7882,energy,energy,7882,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,1,['energy'],['energy']
Energy Efficiency,"or floats like; convergences. The function `~psi4.core.clean_options` that reinitializes; all options may also be useful to separate calculations in a PsiAPI; session. ::. psi4.set_options({; 'scf_type': 'pk',; 'e_convergence': 1.e-5,; 'soscf': True,; 'optking__geom_maxiter': 50; }). Basis Sets; ==========. .. toctree::; :maxdepth: 2. basissets. .. _`sec:psiVariables`:. PSI Variables; =============. To harness the power of Python, |PSIfour| makes the most pertinent results; of each computation available to the Python interpreter for; post-processing. To demonstrate, we can embellish the previous example of; H\ :sub:`2` and H atom::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; h2_energy = energy('scf'); ; molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; h_energy = energy('scf'); ; D_e = psi_hartree2kcalmol * (2*h_energy - h2_energy); print ""De=%f"" % D_e. The :py:func:`~psi4.driver.energy` function returns the final result of the; computation, the requested total energy in Hartrees, which we assign to a; Python variable. The two energies are then converted to a dissociation; energy and printed to the output file using standard Python notation. Generally, there are multiple quantities of interest. Appendix; :ref:`apdx:psivariables_module` lists PSI variables variables set by each; module, and :ref:`apdx:psivariables_alpha` defines them. These can be; accessed through the :py:func:`~psi4.core.get_variable` function. For example, after; performing a density fitted MP2 computation, both the spin component; scaled energy and the unscaled MP2 energy are made available::. e_mp2 = get_variable('MP2 TOTAL ENERGY'); e_scs_mp2 = get_variable('SCS-MP2 TOTAL ENERGY'). Each module and the Python driver set PSI variables over the course of a; calculation. The values for all can be printed in the output file with; the input file command :py:func:`~psi4.core.print_variables`. Note that PSI variables; are cleared at the start of each :py:func:`~psi4.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:9348,energy,energy,9348,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,2,['energy'],['energy']
Energy Efficiency,"or', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:328442,energy,energy,328442,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ord. For restricted references; by default only singlet excited states are computed,; corresponding to the keyword value ``'singlet'``.; To compute triplet states, select ``'triplet'``.; To compute both without making a spin distinction, select ``'any'``.; The latter is default for unrestricted references. The special |adc__kind| value ``'spin_flip'`` selects; a spin-flip computation where a simultaneous flip of spin; and excitation is performed. This is only available; for unrestricted references and not for ``CVS-ADC(n)`` methods,; see table :ref:`table:adcsummary`. **Using the core-valence separation.**; For tackling core-valence excitations using the ``CVS-ADC(n)``; methods, the keyword argument |adc__num_core_orbitals|; is additionally required. It is used to specify the number of; (spatial) orbitals to put into the core space and thus select; as target orbitals for a core-valence excitation process.; A value of ``2`` indicates, for example,; that the two lowest-energy :math:`\alpha` and the two; lowest-energy :math:`\beta` orbitals are placed in the core space.; Since the implemented ADC procedures tackle the; lowest-energy excitations, the value should be specified; such that the targeted core orbital is just inside the core space. *Example:* Consider furane, :math:`C_4H_4O`. In order to tackle; the oxygen 1s edge, *i.e* simulate a O 1s XAS spectrum, one may; just set |adc__num_core_orbitals| to ``1``. This will select the; oxygen 1s orbital for the core space as it is energetically the lowest.; For C 1s core excitations the |adc__num_core_orbitals| value needs; to be set to ``5``, such that both the O 1s and all four C 1s orbitals; are part of the core space. **Other keywords and examples.**; Apart from the mentioned keywords, the following are common:. .. include:: autodir_options_c/adc__reference.rst; .. include:: autodir_options_c/adc__r_convergence.rst; .. include:: autodir_options_c/adc__num_guesses.rst; .. include:: autodir_options_c/adc__cutoff_amps_pr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst:8899,energy,energy,8899,doc/sphinxman/source/adc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst,2,['energy'],['energy']
Energy Efficiency,"orl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:469111,energy,energy,469111,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"orl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:202960,energy,energy,202960,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"orl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:497360,energy,energy,497360,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"orl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:140190,energy,energy,140190,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"orl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:326865,energy,energy,326865,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"orl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:231811,energy,energy,231811,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"orl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:235216,energy,energy,235216,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"orl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:244745,energy,energy,244745,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"orl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:247790,energy,energy,247790,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"orl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:416167,energy,energy,416167,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"orl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:423134,energy,energy,423134,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"orl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:208945,energy,energy,208945,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"orl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:211470,energy,energy,211470,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"orld; contains far too many papers using B3LYP on noncovalent interactions without a -D. The ""best-practice"" input file for KS-DFT is::. memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). .. _`sec:dftdictbuilder`:. Advanced Functional Use and Manipulation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. New DFT functionals can be created from scratch from within the input; file and accessed using the ``dft_functional`` keyword argument in the; energy call::. # DFT Custom Functional. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis sto-3g; dft_spherical_points 302; dft_radial_points 99; reference rks; }. pbe0 = {; ""name"": ""my_PBE0"",; ""x_functionals"": {""GGA_X_PBE"": {""alpha"": 0.75}},; ""x_hf"": {""alpha"": 0.25},; ""c_functionals"": {""GGA_C_PBE"": {}}; }. func_call = energy('SCF', dft_functional=pbe0). # as PBE0 is a pre-defined functional, the call above is equivalent to both below:; func_call = energy('SCF', dft_functional=""PBE0""); func_call = energy('PBE0'). Supported keywords include:. - `name`: string, name of the functional. for custom defined functionals used for printing only.; - `xc_functionals`: dict, definition of a complete (X + C) functional based in LibXC name; - `x_functionals`: dict, definition of exchange functionals using LibXC names; - `c_functionals`: dict, definition of correlation functionals using LibXC names; - `x_hf`: dict, parameters dealing with exact (HF) exchange settings for hybrid DFT; - `c_mp2`: dict, parameters dealing with MP2 correlation for double hybrid DFT; - `dispersion`: dict, definition of dispersion corrections; - `citation`: string, citation for the method, for printing purposes; - `description`: string, description of the method, for printing purposes. The full interface is defined in; :source:`psi4/driver/procrouting/dft/dft_builder.py`. All; standard functionals provided in |PSIfour| are implemented in the; ``*_funct",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:33731,energy,energy,33731,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,2,['energy'],['energy']
Energy Efficiency,"ortant for the evaluation of the molecular properties. The additive; separability of the density cumulant guarantees that all of the DCT methods; are size-extensive and size-consistent. Furthermore, the N-representability; problem is now greatly simplified, because the idempotent part of :math:`\boldsymbol{\gamma_1}` is; N-representable by construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; :math:`\boldsymbol{\gamma_2}`. In order to obtain the DCT energy, two conditions must be satisfied:. 1) The energy must be stationary with respect to a set of orbitals. This can be done by; diagonalizing the generalized Fock operator (as in the DC-06 and DC-12 methods, see below),; which introduces partial orbital relaxation, or by fully relaxing the orbitals and minimizing the entire energy expression; (as in the ODC-06 and ODC-12 methods). 2) The energy must be stationary with respect to the variation of the density; cumulant :math:`\boldsymbol{\lambda_2}`, constrained to N-representability conditions. Making the energy stationary requires solution of two sets of coupled; equations for orbitals and density cumulant, respectively (also known as; residual equations). At the present moment, three different algorithms for the; solution of the system of coupled equations are available (see; :ref:`Iterative Algorithms <sec:dctalgorithms>` for details). . Publications resulting from the use of the DCT code should cite contributions; listed :ref:`here <intro:dctcitations>`. .. _`sec:dctmethods`:. Methods; ~~~~~~~. Currently five DCT methods (functionals) are available: DC-06, DC-12, ODC-06, ODC-12, and ODC-13. The first four ; methods use approximate N-representability conditions derived from ; second-order perturbation theory and differ in the description of the; correlated (non-idempotent) part :math:`\boldsymbol{\tau}` of the one-particle density; matrix and orbital optimization. While in the DC-06 and ODC",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:5283,energy,energy,5283,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"oscf| to ``true``.; Additional options to modify the number of microiterations taken are as; follows:. |scf__soscf_start_convergence|: when to start SOSCF based on the current density RMS. |scf__soscf_max_iter|: the maximum number of SOSCF microiterations per macroiteration. |scf__soscf_conv|: the relative convergence tolerance of the SOSCF microiterations. |scf__soscf_print|: option to print the microiterations or not. .. _`sec:scfstability_doc`:. Stability Analysis; ~~~~~~~~~~~~~~~~~~. SCF algorithms attempt to minimize the gradient of the energy with respect; to orbital variation parameters. At convergence, the gradient should be approximately zero; given a convergence criterion. Although this is enough to make sure the SCF converged to a; stationary point, this is not a sufficient condition for a minimal SCF solution. It may be; a saddle point or a maximum. To ensure that a minimum has been found, the electronic Hessian, *i.e.* the matrix of second; derivatives of the energy with respect to orbital variation parameters, must be computed.; If one or more eigenvalues of the electronic Hessian are negative, the SCF solution is not a minimum.; In that case, orbital parameters can be varied along the lowest Hessian eigenvector to lower the energy. Orbital variation parameters are usually constrained. For example, in RHF the; spatial parts of the :math:`\alpha` and :math:`\beta` orbitals are the same. In; UHF, the orbital coefficients are usually constrained to be real. A stability analysis; can check whether a lower SCF solution exists while respecting the constraints of the original; solution; this is an internal instability. If one or more constraints have to be relaxed to reach; a lower-energy solution, there is an external instability. In |PSIfour|, the only external instability; that can be checked at present is the RHF :math:`\rightarrow` UHF one. Currently, two algorithms exist in |PSIfour| for stability analysis: the original; Direct Inversion and the newly im",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:45635,energy,energy,45635,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['energy'],['energy']
Energy Efficiency,"ossible :math:`M_s` value. Psi will also favor neutral, spin-singlet fragments.; For anything complicated, we strongly suggest explicitly providing the charge; and multiplicity of each fragment as well as the total molecular charge and multiplicity. For details and examples, see https://github.com/MolSSI/QCElemental/blob/master/qcelemental/molparse/chgmult.py#L105-L136 . Having defined a molecule containing fragments like ``eneyne`` above, it; is a simple matter to perform calculations on only a subset of the; fragments. For instance, the commands below run a scf first on the ethene; fragment alone (``extract_subsets(1)`` pulls out fragment 1 as Real atoms; and discards remaining fragments) and next on the ethene fragment with the; ethyne fragment ghosted (``extract_subsets(1,2)`` pulls out fragment 1 as; Real atoms and sets fragment 2 as Ghost atoms). For beyond bimolecular; complexes, arrays can be used, e.g. ``extract_subsets(2,[1,3])``::. mA = eneyne.extract_subsets(1); energy('scf'); ; clean(); ; mAcp = eneyne.extract_subsets(1,2); energy('scf'). If the molecule contains fragments but is not conveniently ordered for the; ``--`` marker, the :py:func:`~psi4.driver.wrapper_autofrag.auto_fragments` function can be applied, as shown in; :srcsample:`pywrap-basis`, to return as active molecule the previous; active molecule, only fragmented. Advanced Python; ===============. A named molecule in an input file is a full-fledged instance of the; powerful C++ :py:class:`~psi4.core.Molecule` class. Thus, all member; functions (that have been exported via pybind11) documented thereat; are accessible through the handle :samp:`{option_molecule_name}` in; :samp:`molecule {optional_molecule_name} \\{...\\}`. * The molecular geometry can be got and set and manipulated as a; :py:class:`~psi4.core.Matrix` object. Below shows how to access; coordinates in an input file in Python. ::. molecule formaldehyde {; C 0.0 0.0 0.0; O 0.0 1.2 0.0; H -0.8 -0.3 0.0; H 0.8 -0.3 0.0 # set geometr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:21085,energy,energy,21085,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['energy'],['energy']
Energy Efficiency,"ost popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; :math:`\gamma_{\alpha\alpha}`, :math:`\gamma_{\alpha\beta}` or; :math:`\gamma_{\beta\beta}` to build an inhomogeneity; parameter. .. math:: \gamma_{\alpha\alpha} (\vec r_1) = \nabla \rho_{\alpha} (\vec r_1) \cdot \nabla; \rho_{\alpha} (\vec r_1). .. math:: \gamma_{\alpha\beta} (\vec r_1) = \nabla \rho_{\alpha} (\vec r_1) \cdot \nabla; \rho_{\beta} (\vec r_1). where,. .. math:: \nabla \rho_{\sigma} (\vec r_1) = 2 D_{\mu\nu}^{\sigma} \phi_{\mu}; (\vec r_1) \nabla \phi_{\nu} (\vec r_1). GGA functionals are essentially the same cost as LSDA functionals and are often; considerably more accurate. Another local variant which has gained some popularity (though perhaps not as; much as GGA functionals) is the meta approximation, in which information about; the second derivative of the density is incorporated. The most canonical variant; of these functionals rely on the spin kinetic energy density :math:`\tau_\alpha`; and :math:`\tau_\beta`,. .. math:: \tau_\sigma(\vec r_1) = \sum_{i} \left | \nabla \psi_i^{\sigma} (\vec r_1) \right | ^2; = \sum_{i} \left | C_{\mu i}^{\sigma} \nabla \phi_{\mu} (\vec r_1) \right |; ^2 = D_{\mu\nu}^{\sigma} \nabla \phi_{\mu} (\vec r_1) \cdot \nabla; \phi_{\nu} (\vec r_1). A generic local meta-GGA functional may then be written as,. .. math:: E_{\mathrm{xc}}^{\mathrm{DFA}} = \int_{\mathbb{R}^3} f_{\mathrm{xc}}; \left(; \rho_{\alpha} (\vec r_1),; \rho_{\beta} (\vec r_1),; \gamma_{\alpha\alpha} (\vec r_1),; \gamma_{\alpha\beta} (\vec r_1),; \gamma_{\beta\beta} (\vec r_1),; \tau_{\alpha} (\vec r_1),; \tau_{\beta} (\vec r_1); \right) \ \mathrm{d} ^3 r_1. The potential corresponding to this energy functional is,. .. math:: V_{\mu\nu}^{\mathrm{xc},\alpha} =. \int_{\mathbb{R}^3}; \left(\frac{\partial f}{\rho_\alpha}\right); \phi_{\mu}; \phi_{\nu}; \ \mathrm{d} ^3 r_1. .. math:: +; \int_{\mathbb{R}^3}; \left(2 \frac{\partial f}{\gamma",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:6064,energy,energy,6064,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"ote': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:171780,energy,energy,171780,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ote': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:167982,energy,energy,167982,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ote': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:337886,energy,energy,337886,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ote': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:24351,energy,energy,24351,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ote': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:31724,energy,energy,31724,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ote': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:418375,energy,energy,418375,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ote': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:175057,energy,energy,175057,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ote': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:167032,energy,energy,167032,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ote': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:168539,energy,energy,168539,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ote': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:328672,energy,energy,328672,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ote': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:338248,energy,energy,338248,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ote': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'sc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:25484,energy,energy,25484,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ote:: As of October 2018, only two explicit ```deltaN_[wfn,basis,scheme]``` sets of options are active; if more delta functions are required, use the ```cbs_metadata``` interface. Also, temporarily extrapolations are performed on differences of target and scf total energies, rather than on correlation energies directly. This doesn't affect the extrapolated values of the particular formulas defined here (though it does affect the betas, which are commented out), but it is sloppy and temporary and could affect any user-defined corl extrapolations. .. index::; pair: cbs(); output. Output; ^^^^^^. At the beginning of a cbs() job is printed a listing of the individual; energy calculations which will be performed. The output snippet below is; from the example job [2] above. It shows first each model chemistry needed; to compute the aggregate model chemistry requested through cbs(). Then,; since, for example, an ``energy('ccsd(t)')`` yields CCSD(T), CCSD, MP2,; and SCF energy values, the wrapper condenses this task list into the second; list of minimum number of calculations which will actually be run. ::. Naive listing of computations required.; scf / aug-cc-pvqz for SCF TOTAL ENERGY; mp2 / aug-cc-pvtz for MP2 CORRELATION ENERGY; mp2 / aug-cc-pvqz for MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz for CCSD(T) CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz for CCSD(T) CORRELATION ENERGY; mp2 / aug-cc-pvdz for MP2 CORRELATION ENERGY; mp2 / aug-cc-pvtz for MP2 CORRELATION ENERGY. Enlightened listing of computations required.; mp2 / aug-cc-pvqz for MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz for CCSD(T) CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz for CCSD(T) CORRELATION ENERGY. At the end of a cbs() job is printed a summary section like the one below. First,; in the components section, are listed the results for each model chemistry available, whether; required for the cbs job (*) or not. Next, in the stages section, are listed the results for; each extrapolation. The energies of t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst:4743,energy,energy,4743,doc/sphinxman/source/cbs.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst,2,['energy'],['energy']
Energy Efficiency,"oth the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain the",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7370,energy,energy,7370,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"ould; be used, *viz.*::. set {; docc = [3, 0, 1, 1]; }. List/matrix inputs may span multiple lines, as long as the opening ``[`` is; on the same line as the name of the keyword. Any of the above keyword specifications can be scoped to individual modules,; by adding the name of the module after the ``set`` keyword. Omitting the module; name, or using the name ``global`` or ``globals`` will result in the keyword being; applied to all modules. For example, in the following input ::. molecule{; o; h 1 roh; h 1 roh 2 ahoh; ; roh = 0.957; ahoh = 104.5; }; ; set basis cc-pVDZ; set ccenergy print 3; set scf print 1; energy('ccsd'). the basis set is set to cc-pVDZ throughout, the SCF code will have a print; level of 1 and the ccenergy code, which performs coupled cluster computations,; will use a print level of 3. In this example a full CCSD computation is; performed by running the SCF code first, then the coupled cluster modules;; the :py:func:`~psi4.driver.energy` Python helper function ensures that this is performed correctly.; Note that the Python interpreter executes commands in the order they appear in; the input file, so if the last four commands in the above example were to read ::. set basis cc-pVDZ; energy('ccsd'); set ccenergy print 3; set scf print 1. the commands that set the print level would be ineffective, as they would be; processed after the CCSD computation completes. In PsiAPI mode, one can use the command :py:func:`~psi4.driver.set_options`; like below for general and module-specific options. Note that these values; should be of correct type, strings for strings, floats for floats like; convergences. The function `~psi4.core.clean_options` that reinitializes; all options may also be useful to separate calculations in a PsiAPI; session. ::. psi4.set_options({; 'scf_type': 'pk',; 'e_convergence': 1.e-5,; 'soscf': True,; 'optking__geom_maxiter': 50; }). Basis Sets; ==========. .. toctree::; :maxdepth: 2. basissets. .. _`sec:psiVariables`:. PSI Variables; ==",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:7772,energy,energy,7772,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"our code. If most of your work was on the python (as opposed to c++) side, the test case prefix pywrap\_ is suggested. - Be sure to set any new PSI variables through lines like those below. Especially if the function returns an energy, set the 'current energy' variable. This last is needed to communicate with the optimizer. ::. psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Function \'%s\' does not exist to be called by wrapper counterpoise_correct.' % (func.__name__)); if (func is db):; raise ValidationError('Wrapper xx is unhappy to be calling function \'%s\'.' % (func.__name__)). - If specific interoperabilities are known, code them in. For example, if xx shouldn't call db, add the last two lines above to the xx function. If db shouldn't call xx, add the following two lines below to the db function. ::. if (func is xx):; ra",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:6050,energy,energy,6050,doc/sphinxman/source/attic/bestpractices_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst,1,['energy'],['energy']
Energy Efficiency,"our| supports different combinations of basis set.; By default, if the input file specifies only |mints__basis|, then the X2C; module will solve the modified Dirac equation in an uncontracted basis and then; recontract the X2C Hamiltonian in the original basis.; Alternatively, the user can use |globals__basis_relativistic| to specify a different; basis set to solve the modified Dirac equation. ::. set {; basis cc-pvdz-dk; basis_relativistic cc-pvtz-dk; relativistic x2c; }. It is recommended that when employing the X2C relativistic Hamiltonian, that you use a fully; decontracted basis set. This can be done simply in the input by adding ""-decon"" to the ; name of the primary basis you want to use for the calculation as detailed in ; :ref:`Decontracted Basis Sets <sec:basisDecontracted>`. Publications resulting from the use ; of X2C should cite the following publication: [Verma:2015]_. Theory; ^^^^^^. X2C is based on exact decoupling of ; positive-energy ( :math:`h^{FW}_{\rm ++}`; ) and negative-energy (:math:`h^{FW}_{\rm --}` ); blocks of the Dirac Hamiltonian (:math:`h^{D}`). . .. math:: ; U^\dagger h^{\rm D} U = ; U^\dagger; \begin{pmatrix}; h_{LL} & h_{LS} \\; h_{SL} & h_{SS}; \end{pmatrix}; U; =; \begin{pmatrix}; h^{\rm FW}_{++} & 0 \\; 0 & h^{\rm FW}_{--}; \end{pmatrix}. The transformation ( :math:`U` ) is obtained from the solutions of the Dirac equation in kinetically balanced basis [Kutzelnigg:1984]_ treatment. ; In the X2C treatment, the positive-energy block of the Hamiltonian ( :math:`h^{FW}_{\rm ++}` ); is given by the sum; of a transformed kinetic (:math:`T_{\rm X2C}`) and potential energy ( :math:`V_{\rm X2C}` ) contribution.; Relativistic kinetic energy ( :math:`T_{\rm X2C}` ) and nuclear-electron interaction potential ( :math:`V_{\rm X2C}` ) is given in terms of non-relativisitc kinetic (:math:`T=\hat{p}^2/2`) energy and nuclear-electron interaction potential (:math:`V`), coupling matrix ( :math:`X`) and renormalization matrix ( :math:`R`). . .. math::;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst:4063,energy,energy,4063,doc/sphinxman/source/relativistic.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst,2,['energy'],['energy']
Energy Efficiency,"our|; switched from hand- (+Matlab) coded functionals to Libxc. Thus; many DFT results will be slightly different. Functionals more than; slightly different are B97-D, wB97X (note, *not* wB97X-D), SOGGA,; DFDL, and M05. Theory; ~~~~~~. Generalized Kohn--Sham Density Functional Theory (KS-DFT) [Kohn:1965:A1133]_ [Parr:1989]_ is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio. Pure Kohn--Sham DFT is built on the Hohenberg--Kohn theorems [Hohenberg:1964:136]_ which states: A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true :math:`N`\ -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn--Sham orbitals. KS-DFT borrows much of the machinery of Hartree--Fock, as is; evident by looking at the energy expression,. .. math::. E_{\mathrm{KS}}; &= \sum_{i} \langle i | \hat h | i \rangle; + \frac 1 2 \sum_{i,j} [ii|jj] + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta] \\; &= D_{\mu\nu}^{\mathrm{T}}\left(T_{\mu\nu} +; V_{\mu\nu}\right) + \frac{1}{2} D_{\mu\nu}^{\mathrm{T}}; D_{\lambda\sigma}^{\mathrm{T}} (\mu\nu|\lambda\sigma) + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta]. Here, :math:`T` is the noninteracting quasiparticle kinetic energy operator,; :math:`V` is the nucleus-electron attraction potential, :math:`D^{\mathrm{T}}`; is the total electron density matrix, and :math:`E_{\mathrm{xc}} [\rho_\alpha,; \rho_\beta]` is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:3400,energy,energy,3400,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"p h2o -4.0 0.0 0.0 0.0 0.0 0.0; }; ; energy('efp'). This computation involves purely EFP/EFP fragment interactions and is; performed entirely by the LIBEFP library. |PSIfour| can also handle mixed; systems of quantum mechanical (QM) and EFP fragments through the native; :ref:`SCF <sec:scf>` code augmented by calls to the LIBEFP library. For; example, turning one of the waters in the example above into a QM; fragment is shown below. ::. molecule {; efp c6h6 0.0 0.0 0.0 0.0 0.0 0.0; --; O 4.0 0.0 0.0; H 4.7 0.7 0.0; H 3.3 -0.7 0.0 ; --; efp h2o -4.0 0.0 0.0 0.0 0.0 0.0; }; ; set basis 6-31g; energy('scf'). Whenever an EFP fragment is present in the active molecule, the SCF energy; will include EFP contributions. .. warning:: Although the EFP geometry is specified alongside the QM; geometry in a ``molecule name {...}`` block, internally the handling; of EFP is not so clean. In straightforward input files that involve; any number of [molecule block, energy/opt/etc, clean()] portions,; there should be no problem; the energy/opt computation will always; be run on the molecule defined in the preceding block. For advanced; users, unexpected difficulties may arise due to: (1) the EFP fragment; from the last molecule block executed will always be active (and; potentially interfering with SCF) and (2) recalling a molecule; through ``activate(name)`` (where ``name`` was the python handle; in the molecule block) will not load up any EFP portion of that; molecule. This divergent treatment is a stopgap while we determine; how best to handle molecules with different domains. At this time, |PSIfour| is only able to perform pure-efp single-points and; geometry optimizations and mixed qm/efp SCF single-points. .. _`table:libefpauto`:. .. _`table:libefp_methods`:. +-------------------------+----------------------+--------------------------------------------------------------------------+; | name | molecule composition | calls method |; +=========================+======================+=",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:8999,energy,energy,8999,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,2,['energy'],['energy']
Energy Efficiency,"p-correction``. **Source**. * .. image:: https://img.shields.io/badge/home-gCP-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/gcp/getgcp. * If using |PSIfour| built from source and you want to build gCP from; from source also, follow the instructions provided with the source; (essentially, download the freely available tarball, unpack the source,; edit the Makefile to select a Fortran compiler, and run make). To be used by |PSIfour|, the program binary (``gcp`` or ``mctc-gcp``) must be; found in your :envvar:`PATH` so that QCEngine can detect it. Check if and where; found through ``qcengine info``. If; |PSIfour| is unable to execute the binary, an error will be reported.; To preferentially use a particular gcp compilation, simply adjust its; position in the path environment variables. Running gCP; ~~~~~~~~~~~. At present there is a limited interface to gCP that is used; only to implement the ""HF-3c"" [Sure:2013:1672]_, ""PBEh-3c""; [Grimme:2015:054107]_, ""B97-3c"" [Brandenburg:2018:b973c]_, ""r2SCAN-3c"" [Grimme:2021:064103]_,; and ""wB97X-3c"" [Muller:2023:014103]_ methods (both energy and gradient).; The interface can use classic or mctc-gcp executables but only the latter implements ""B97-3c"" and ""r2SCAN-3c"".; The newest wB97X-3c method doesn't use a gcp correction (it does use ECPs down to first row elements); but is listed here for completeness of the ""3c"" family.; A :ref:`DFTD3 <sec:dftd3>` executable, classic or simple-dftd3, must also be available for; the HF-3c, PBEh-3c, or B97-3c methods to run.; A :ref:`DFTD4 <sec:dftd3>` python module must also be available for; the r2SCAN-3c or wB97X-3c methods to run.; These method are defined with their own basis set and thus no basis set should be set by the user.; |PSIfour| will select the intended basis sets: HF-3c/MINIX, PBEh-3c/def2-mSVP, B97-3c/def2-mTZVP, r2SCAN-3c/def2-mTZVPP, wB97X-3c/vDZP.; If a basis has previously been set for another calculation, use the slash syntax to ""empty"" th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst:3898,energy,energy,3898,doc/sphinxman/source/gcp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst,1,['energy'],['energy']
Energy Efficiency,"p2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:273591,energy,energy,273591,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"p2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:276126,energy,energy,276126,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"p2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:393359,energy,energy,393359,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"p2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:279961,energy,energy,279961,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"p2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:282496,energy,energy,282496,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"p3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:323083,energy,energy,323083,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pan a larger extent in space. The atomic weighting scheme is controlled by the |scf__dft_nuclear_scheme|; option, which may be one of ``TREUTLER``, ``BECKE``, ``STRATMANN``, ``NAIVE``,; or ``SBECKE``. The last is a smoother variant of the BECKE scheme recently introduced ; by Laqua [Laqua:2018:204111]_ that should behave better for weak interactions. Pruning of the quadrature grid is controlled by the |scf__dft_pruning_scheme|; option. The options ``ROBUST`` and ``TREUTLER`` divide the grid into spherical regions; based on the Bragg-Slater radius of each atom and apply different orders to them.; The ``ROBUST`` scheme is a less aggressive variant of the ``TREUTLER`` approach and; suitable for benchmark-level quality (MAD < 0.002 kcal/mol for the S22 with PBE/aug-cc-pVTZ; for pruned versus unpruned grid). Our implementation of the ``TREUTLER`` scheme shows an ; error of 0.02 kcal/mol for the same benchmark. Both also reduce the grid order by 1 for H ; and He atoms and avoid any pruning of heavy atoms (Z >= 36) Other schemes mentioned in ; the keyword documentation (e.g. P_SLATER) are experimental and should be considered expert-only. Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the |scf__dft_basis_tolerance|, which; defaul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:25093,reduce,reduce,25093,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['reduce'],['reduce']
Energy Efficiency,"pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:363325,energy,energy,363325,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:371044,energy,energy,371044,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:445409,energy,energy,445409,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:338788,energy,energy,338788,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:340625,energy,energy,340625,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:441130,energy,energy,441130,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'ro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:442967,energy,energy,442967,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:448173,energy,energy,448173,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:450010,energy,energy,450010,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:466907,energy,energy,466907,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:469470,energy,energy,469470,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:298711,energy,energy,298711,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:301578,energy,energy,301578,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_ty",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:305733,energy,energy,305733,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_ty",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:308240,energy,energy,308240,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:181537,energy,energy,181537,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fca",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:1316,energy,energy,1316,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fca",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:3926,energy,energy,3926,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:341934,energy,energy,341934,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:418731,energy,energy,418731,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:340264,energy,energy,340264,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:442606,energy,energy,442606,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:449649,energy,energy,449649,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:87526,energy,energy,87526,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:306452,energy,energy,306452,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:308959,energy,energy,308959,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:182256,energy,energy,182256,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:30592,energy,energy,30592,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:33183,energy,energy,33183,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_ty",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:365166,energy,energy,365166,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:515310,energy,energy,515310,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:517563,energy,energy,517563,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:445027,energy,energy,445027,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:202237,energy,energy,202237,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:361487,energy,energy,361487,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:369206,energy,energy,369206,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:498632,energy,energy,498632,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:501209,energy,energy,501209,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:176684,energy,energy,176684,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:240419,energy,energy,240419,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:109463,energy,energy,109463,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:417246,energy,energy,417246,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'ref",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:424213,energy,energy,424213,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:111826,energy,energy,111826,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:210024,energy,energy,210024,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pe| ``CD``.; CD methods can be enabled in the SCF; procedure as well, by specifying the |globals__scf_type| as ``CD``. The; accuracy of the decomposition can be controlled through the keyword; |fnocc__cholesky_tolerance|. .. comment This feature is enabled by specifying |fnocc__df_basis_cc| as ""CHOLESKY"". . The following input file sets up a DF-CCSD(T); computation using CD integrals ::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set {; scf_type cd; cc_type cd; basis aug-cc-pvdz; freeze_core true; }; energy('ccsd(t)'). The resulting CCSD(T) correlation energy will be equivalent to that; obtained from a conventional computation if |fnocc__cholesky_tolerance| is; sufficiently small (*e.g.* ``1e-9``). .. _`sec:fnogn`:. Gn theory; ~~~~~~~~~. The FNOCC module contains all the components that comprise the Gn family; of composite methods. Currently, only the G2 method is supported; [Curtiss:1991:7221]_\. The G2 procedure may be called through the; :py:func:`~psi4.driver.energy` wrapper: ::. energy('gaussian-2'). Supported methods; ~~~~~~~~~~~~~~~~~. The various methods supported by the FNOCC module in |Psifour| are; summarized in Table :ref:`FNOCC Methods <table:fnocc_methods>`; and detailed (except FNO) in Table :ref:`FNOCC Capabilities; <table:fnocc_stdsuite>`. Note that these methods are implemented; for closed-shell reference only. Without ``set qc_module fnocc``,; these methods may default to implementations in :ref:`other modules; <table:managedmethods>`. .. _`table:fnocc_methods`:. .. table:: Theoretical methods accessible through FNOCC. +-------------------------+---------------------------------------------------------------+-------+-------+; | name | calls method | plain | FNO |; +=========================+===============================================================+=======+=======+; | mp3 | third-order MP perturbation theory | E | E |; +-------------------------+---------------------------------------------------------------+-------+-------+; | mp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:16058,energy,energy,16058,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"pf | :math:`\frac{2}{N} E_c` | :math:`\frac{2}{N} E_c` |; +-------------------------+------------------------------------------------------------+----------------------------------------------+; | aqcc | :math:`[1-\frac{(N-3)(N-2)}{N(N-1)}]E_c` | :math:`[1-\frac{(N-3)(N-2)}{N(N-1)}]E_c` |; +-------------------------+------------------------------------------------------------+----------------------------------------------+. .. comment | dci | :math:`E_c` | NA |; .. comment +-------------------------+------------------------------------------------------------+----------------------------------------------+. The pair correlation energy, :math:`\epsilon_{ij}`, is simply a partial; sum of the correlation energy. In a spin-free formalism, the pair energy; is given by. .. math::; :label: pair_energy. \epsilon_{ij} = \sum_{ab} v_{ij}^{ab} (2 t_{ij}^{ab} - t_{ij}^{ba}). Methods whose shifts (:math:`\Delta_{ij}` and :math:`\Delta_i`) do not; explicitly depend on orbitals :math:`i` or :math:`j` (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled cluster; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Density fitting (DF) [or the resolution of the identity (RI)] and Cholesky; decomposition (CD) techniques are popular in quantum chemistry to avoid; the computation and storage of the 4-index electron repulsion integral; (ERI) tensor and even to reduce the computational scaling of some terms.; DF/CD-CCSD(T) computations are available in |Psifour|, with or without the; use of FNOs, through the FNOCC module. The implementation and accuracy of; the DF/CD-CCSD(T) method are described in [DePrince:2013:2687]_\. The DF-CCSD(T) procedure ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:13191,energy,energy,13191,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:85637,energy,energy,85637,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:88410,energy,energy,88410,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:89673,energy,energy,89673,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:177408,energy,energy,177408,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:178496,energy,energy,178496,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"pletes. In PsiAPI mode, one can use the command :py:func:`~psi4.driver.set_options`; like below for general and module-specific options. Note that these values; should be of correct type, strings for strings, floats for floats like; convergences. The function `~psi4.core.clean_options` that reinitializes; all options may also be useful to separate calculations in a PsiAPI; session. ::. psi4.set_options({; 'scf_type': 'pk',; 'e_convergence': 1.e-5,; 'soscf': True,; 'optking__geom_maxiter': 50; }). Basis Sets; ==========. .. toctree::; :maxdepth: 2. basissets. .. _`sec:psiVariables`:. PSI Variables; =============. To harness the power of Python, |PSIfour| makes the most pertinent results; of each computation available to the Python interpreter for; post-processing. To demonstrate, we can embellish the previous example of; H\ :sub:`2` and H atom::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; h2_energy = energy('scf'); ; molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; h_energy = energy('scf'); ; D_e = psi_hartree2kcalmol * (2*h_energy - h2_energy); print ""De=%f"" % D_e. The :py:func:`~psi4.driver.energy` function returns the final result of the; computation, the requested total energy in Hartrees, which we assign to a; Python variable. The two energies are then converted to a dissociation; energy and printed to the output file using standard Python notation. Generally, there are multiple quantities of interest. Appendix; :ref:`apdx:psivariables_module` lists PSI variables variables set by each; module, and :ref:`apdx:psivariables_alpha` defines them. These can be; accessed through the :py:func:`~psi4.core.get_variable` function. For example, after; performing a density fitted MP2 computation, both the spin component; scaled energy and the unscaled MP2 energy are made available::. e_mp2 = get_variable('MP2 TOTAL ENERGY'); e_scs_mp2 = get_variable('SCS-MP2 TOTAL ENERGY'). Each module and the Python driver set PSI variables over the cour",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:9141,energy,energy,9141,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,2,['energy'],['energy']
Energy Efficiency,"pole array [e a0] for the requested configuration interaction level of theory, (3,). .. psivar:: CI QUADRUPOLE. Redundant quadrupole array [e a0^2] for the requested configuration interaction level of theory, (3, 3). .. psivar:: CI ROOT n -> ROOT m DIPOLE. Transition dipole array [e a0] between roots *n* and *m* for the requested configuration interaction level of theory, (3,). .. psivar:: CI ROOT n -> ROOT m QUADRUPOLE. Redundant transition quadrupole array [e a0^2] between roots *n* and *m* for the requested configuration interaction level of theory, (3, 3). .. psivar:: CI ROOT n DIPOLE. Dipole array [e a0] for the requested configuration interaction level of theory and root *n*, (3,). .. psivar:: CI ROOT n QUADRUPOLE. Redundant quadrupole array [e a0^2] for the requested configuration interaction level of theory and root *n*, (3, 3). .. psivar:: CI ROOT n TOTAL ENERGY; CI ROOT n CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested configuration interaction level of theory and root; *n* (numbering starts at 0). .. psivar:: CI STATE-AVERAGED TOTAL ENERGY; CI STATE-AVERAGED CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for state-averaged CI/CASSCF levels of theory. .. psivar:: CI TOTAL ENERGY; CI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested configuration interaction level of theory and root. .. psivar:: CISD DIPOLE. Dipole array [e a0] for the configuration interaction singles and doubles level of theory, (3,). .. psivar:: CISD QUADRUPOLE. Redundant quadrupole array [e a0^2] for the configuration interaction singles and doubles level of theory, (3, 3). .. psivar:: CISD TOTAL ENERGY; CISD CORRELATION ENERGY; CISDT TOTAL ENERGY; CISDT CORRELATION ENERGY; CISDTQ CORRELATION ENERGY; CISDTQ TOTAL ENERGY; CIn CORRELATION ENERGY; CIn TOTAL ENERGY. The total electronic energy [E_h] and correlation energy",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:24648,energy,energy,24648,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"ported. .. .. caution:: The p4c4 interface isn't in the master branch nor will it be in; .. the near future. To run this code, (1) build the ``c4`` branch of psi4,; .. (2) find a copy of cfour and put it in :envvar:`PATH` or; .. :envvar:`PSIPATH`, and (3) clone https://github.com/loriab/qcdb.git; .. python module and prepend :envvar:`PYTHONPATH` with the top qcdb; .. directory (the path added to PYTHONPATH should have one ""qcdb"" in it;; .. the cloned qcdb is what needs to be imported in preference to the one; .. already in psi4). Execute psi4 as usual. .. caution:: The p4c4 interface hasn't been fully adapted for the new March 2014 version. Cfour for |PSIfour| Users; ~~~~~~~~~~~~~~~~~~~~~~~~~. * Set memory as usual. * Set molecule as usual. * Set basis set as usual (Cfour only cares about orbital basis, no fitting; bases). * Set the task as usual, indicating Cfour as the intended code by; prepending ""c4-"" to the method argument. So ``energy('scf')`` becomes; ``energy('c4-scf')`` and ``optimize('ccsd(t)')`` becomes; ``optimize('c4-ccsd(t)')``. Find available methods for; :py:func:`~psi4.driver.energy` at :ref:`Energy (CFOUR) <table:energy_cfour>`; and for :py:func:`~psi4.driver.optimize` at :ref:`Gradient (CFOUR); <table:grad_cfour>`. * Generally, the p4c4 interface will handle best practices for path of; execution: ``vcc``/``ecc``, derivative type, *etc.* The user is still; responsible for setting convergence, frozen core, guess, diis, *etc.*; For the moment, so-called ""best-practices"" keywords are summarized at; :ref:`Best Practices <table:cfour_cc_program>`. * For the type of computation intended, find appropriate options at; :ref:`Keywords <apdx:cfour>`. These keyword summaries contain the same; information as the `proper CFOUR options list; <http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.ListOfKeywordsInAlphabeticalOrder>`_; plus notes on keyword relevance when run through |PSIfour|. Information; at the `CFOUR manual; <http://slater.chemie.uni-mainz.de",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:3197,energy,energy,3197,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,2,['energy'],['energy']
Energy Efficiency,"ppear; because the code is frozen pending an update. .. psivar:: SCS-OMP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. .. psivar:: SCS-MP3 TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP3-like method formed by reweighting the difference between; :psivar:`MP3 DOUBLES ENERGY` and :psivar:`MP2 DOUBLES ENERGY`; by 0.25, atop the SCS-MP2 energy, with any singles carried along. .. psivar:: SCS-OMP3 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SCS-OMP2 energy, with any singles carried along. .. psivar:: SOS-MP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.3 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 1.2 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP3 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SOS-OMP2; energy using non-canonical weighting, with any singles carried along.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:61533,energy,energy,61533,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"practice for the requested ccsd ::. energy('c4-ccsd'). * runs in vcc since *hidden* default overwritten by keyword ::. set cfour_cc_program vcc; energy('c4-ccsd'). * Specifying certain keywords that are nominally applicable for pure-\; |PSIfour| modules directs them to fulfil analogous roles; in the Cfour program (*e.g.*, |scf__maxiter| is used to set; |cfour__cfour_scf_maxcyc|). This keyword translation only takes place; if the keywords are explicitly set in the input file (part of that; contract that you mean it), meaning that |PSIfours| defaults don't; get imposed on Cfour. Also, in the case where a translatable pure-\; |PSIfour| keyword and its translation Cfour keyword are both set,; the value attached to the latter is always used. Below are a few; clarifying examples. * uses :math:`10^{-7}` SCF conv crit since that's Cfour's default; for |cfour__cfour_scf_conv| ::. energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; keyword ::. set cfour_scf_conv 6; energy('c4-scf'). * uses :math:`10^{-5}` SCF conv crit since default overwritten by; :ref:`SCF module<apdx:scf>` keyword ::. set d_convergence 5; energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; :ref:`SCF module<apdx:scf>` keyword (local scope works, too) where; the |PSIfours| more flexible float input has been rounded down to; the integer required by Cfour ::. set scf d_convergence 5e-6; energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten; and Cfour module keyword trumps |PSIfour| SCF module keyword ::. set cfour_scf_conv 6; set d_convergence 8; energy('c4-scf'). The keyword translation feature is still in the proof-of-principle; stage, so only a handful (found here) of keywords participate. .. note:: Longtime Cfour users who may consider this keyword; translation a flaw rather than a feature can avoid it entirely by; confining keywords to the :ref:`Cfour module<apdx:cfour>` along with; |mints__basis| and |globals__pu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:39920,energy,energy,39920,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"program is no longer supported or tested, though it isn't deliberately disabled. Despite different defaults in these programs when run independently,; when run through |PSIfour| as EmpiricalDispersion engine, each should; produce the same result. Moreover, |PSIfours| own defaults and aliases; are unchanged by the new engines, so ``-D`` continues to mean ``-D2``,; ``-D3`` continues to mean zero-damping *without* 3-body correction,; and input files should continue producing the same results. Please file; an issue if found otherwise. Dispersion corrections are built into DFT functionals, so appending an *a; posteriori* correction to a computation is as simple as; ``energy('b2plyp-d')`` *vs.* ``energy('b2plyp')``. For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, a B3LYP-D3 (zero-damping), and a B3LYP-D4 (Becke-Johnson damping) energy. ::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'); energy('b3lyp-d4'). Consult the table :ref:`-D Functionals <table:dft_disp>` to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable :psivar:`DISPERSION CORRECTION ENERGY`.; By default, the output from the ``dftd3``; program is suppressed; to see it in the output file, set print > 2.; No text output is available from the ``dftd4`` or ``s-dftd3`` programs. .. _`table:dashd`:. .. table:: Variants of dispersion corrections. +-------------------------------------+--------------------------------------------------------------------------------------+---------------------------------+---------------------------------------------------------------------------------------------+; | Extension [#f0]_ and Aliases | Variant | Computing Program (engine) | |scf__dft_dispersion_parameters| [#f10]_ |; +=====================================+=====",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:13366,energy,energy,13366,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,4,['energy'],['energy']
Energy Efficiency,"psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:278693,energy,energy,278693,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'dri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:53045,energy,energy,53045,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:54444,energy,energy,54444,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:483471,energy,energy,483471,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:484825,energy,energy,484825,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'referenc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:62030,energy,energy,62030,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'referenc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:80249,energy,energy,80249,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"psi4.core.legacy_gradient` which was accessed through `psi4.core.get_gradient()`. .. rubric:: Cfour Files. The contents of all files associated with Cfour are accessible from the; input file through the Python dictionary ``P4C4_INFO``. That is,; ``P4C4_INFO['zmat']`` returns a string of the input file sent to Cfour.; Accessible arguments are ``zmat``, ``output``, and any that have been; produced of ``grd``. For example, to print to the screen if CC convergence; is reached, the following could be placed in the |PSIfour| input file. ::. energy('c4-ccsd'); print 'miracle?', 'miracle' in P4C4_INFO['output']. .. rubric:: Scratch Files. By default, a separate subdirectory for each Cfour call is created within; the job's scratch directory. To explicitly specify the location of the; Cfour scratch, execute with, for example, ``energy('cfour',; path='/full/path/to/cfour/scratch')``. Regardless of whether the location; is specified or default, whether to preserve the scratch directory after; the computation can be specified with ``energy('cfour', keep=True)`` or; (the default) ``energy('cfour', keep=False)``. *path* and *keep* are; keyword arguments that get interpreted by the; :py:func:`~psi4.driver.procrouting.interface_cfour.run_cfour` function documented below. .. autofunction:: psi4.driver.procrouting.interface_cfour.run_cfour(name [, keep, path]). .. _`sec:cfourFunctionality`:. Functionality; ~~~~~~~~~~~~~. Through clever use of the ``cfour {...}`` block, one could run most any; Cfour computation through the P4C4 interface. In contrast, enumerated; below are tested functionalities where results from Cfour are collected; into |PSIfour| data objects. .. rubric:: Implemented. * Single-point :py:func:`~psi4.driver.energy` commands for :ref:`ground state; methods <table:energy_cfour>`. Examples:; :srcsample:`cfour/sp-rhf-ccsd_t_-ao-ecc`, :srcsample:`cfour/scf4`,; :srcsample:`cfour/mints5`. * Analytic :py:func:`~psi4.driver.gradient` and :py:func:`~psi4.driver.optimize`; comma",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:27015,energy,energy,27015,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,2,['energy'],['energy']
Energy Efficiency,"pt.dat``. For our problem, the bottom of this file contains the finished; partition::. Frag1 Frag2 Elst Exch IndAB IndBA Disp Total; OH OH -8.425 6.216 -0.583 -1.512 -1.249 -5.553; OH PH 1.392 0.716 0.222 -0.348 -0.792 1.189; PH OH -2.742 0.749 -0.147 -0.227 -0.674 -3.040; PH PH 0.680 2.187 0.007 -0.208 -2.400 0.266; OH All -7.033 6.931 -0.362 -1.860 -2.040 -4.364; PH All -2.062 2.936 -0.140 -0.435 -3.074 -2.774; All OH -11.167 6.965 -0.730 -1.739 -1.923 -8.594; All PH 2.072 2.903 0.229 -0.556 -3.191 1.456; All All -9.095 9.867 -0.501 -2.295 -5.114 -7.138. Note that the assignment of linking sigma bond contributions is a small point of; ambiguity in F-SAPT. The ``fsapt.dat`` file presents the ""links-by-charge""; assignment at the top and the ""links by 50-50"" assignment at the bottom. We; generally prefer the latter, but both generally give qualitatively identical; energetic partitions. Users should check the files ``fragA.dat`` and ``fragB.dat`` to ensure that; there is not too much charge delocalization from one fragment to another. This; is presented in the ""Orbital Check"" section in these files |w--w| a value larger than; 0.1 docc is an indication that the picture of localizable functional groups may; be breaking down. We also *strongly discourage* the cutting of double,; triple, or aromatic bonding motifs when partitioning the molecule into fragments; |w--w| cuts across only simple sigma bonds are encouraged. .. caution:: November 2022, previous to QCEngine v0.26.0 and Psi4; v1.7.0, there was a scaling inconsistency in the pairwise analysis; such that :psivar:`2-BODY PAIRWISE DISPERSION CORRECTION ANALYSIS`; was doubled when generated from dftd3 compared to the output from other; programs (s-dftd3 and dftd4). This shows up in the QCVariable and in the; ``Empirical_Disp.dat`` file written during ``energy(""fisapt0-d3"")`` (all; -D3 variants). Fortunately, the ``fsapt.py`` script compensated; for dftd3 (by far the most used program for this task). Users of the; pairwi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:8591,charge,charge,8591,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['charge'],['charge']
Energy Efficiency,"put name will; be the same as the input name (replacing any "".in"" or "".dat"" extension by "".out""). Sample Input Files; ==================. Below, we will provide a few simple input files as examples. A large ; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the :source:`samples` directory. Running a Basic Hartree--Fock Calculation; =========================================. In our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:3545,energy,energy,3545,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"q:psi4deps`:. How to use conda to compile Psi4 faster and easier; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. .. code-block:: console. # Linux # c. v1.2rc1 ###or Mac or Windows; # substitute x.x by 3.5|3.6|3.7 for alternate python versions; >>> conda create -n p4dev python=x.x psi4-dev -c psi4/label/dev -c psi4; >>> conda activate p4dev. >>> cd {top-level-psi4-dir}; >>> psi4-path-advisor --help; usage: psi4-path-advisor [-h] [--psi4-compile] [--disable-addons]; [--disable-mkl] [--intel | --intel-multiarch | --gcc]; ; Build and Run path advisor for Psi4; ; optional arguments:; -h, --help show this help message and exit; --psi4-compile (Command Default) Generates a minimal CMake command for building Psi4 against; this psi4-dev conda metapackage.; >>> git clone https://github.com/psi4/psi4.git; >>> cd {top-level-psi4-dir}; >>> conda create -n p4dev python={3.6} psi4-dev [-c psi4/label/dev] -c psi4; >>> conda activate p4dev; >>> psi4-path-advisor; # execute or adapt `cmake` commands above; DepsCache handles python & addons;; # DepsMKLCache handles math; further psi4-path-advisor options handle compilers.; >>> cd objdir && make -j`getconf _NPROCESSORS_ONLN`; >>> make install; --disable-addons Disengage building against the psi4-dev-provided _optional_ link-time Add-Ons like CheMPS2.; --disable-mkl Disengage building against the psi4-dev-provided MKL libraries (`libmkl_rt`).; --intel Engage self-provided icc/icpc/ifort compilers backed by conda's psi4-dev-provided gcc/g++.; --intel-multiarch Engage self-provided icc/icpc/ifort compilers backed by conda's psi4-dev-provided gcc/g++ PLUS compile for multiple architectures (useful for cluster deployments).; --gcc Engage conda's psi4-dev-provided gcc/g++/gfortran compilers. # execute or adapt `cmake` commands above; DepsCache handles python & addons;; # DepsMKLCache handles math; further psi4-path-advisor options handle compilers.; >>> `psi4-path-advisor [your args]` -Dany_addl_cmake_vals=ON; >>> cd objdir && make -j`ge",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:10913,adapt,adapt,10913,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['adapt'],['adapt']
Energy Efficiency,"quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. .. psivar:: QCISD(T) CORRECTION ENERGY. The quadratic configuration interaction singles and doubles perturbative; triples correction [E_h]. .. psivar:: REMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the retaining-the-excitation-degree |MollerPlesset| hybrid perturbation; theory level. .. psivar:: SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; requested SAPT level of theory. The sum of these four components yields; :psivar:`SAPT TOTAL ENERGY`. .. psivar:: SAPT TOTAL ENERGY; SAPT ENERGY. The total electronic interaction energy [E_h] for the requested SAPT; level of theory. .. psivar:: SAPT ELST10,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT ELST EXTERN-EXTERN ENERGY. Electrostatic interaction [E_h] between the point charges in fragments; A and B in F/I-SAPT. .. psivar:: SAPT EXCH10 ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH10(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT IND20,R ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT EXCH-IND20,U ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT DISP20 ENERGY; SAPT EXCH-DISP20 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. .. psivar:: SAPT EXCH-DISP20(S^INF) ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT0. See :ref:`sec:saptinf`. .. psivar:: SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY. The portion of :psivar:`SAPT DISP20 ENERGY` or; :psivar:`SAPT EXCH-DISP20 ENERGY` resulting from; fr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:49967,energy,energy,49967,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"quantum chemical programs. This; manual describes the design of the library and provides a set of; examples for its use. The header file dpd.h provides proper declarations for all; structures and functions used in the library. II. Fundamental Symmetry Concepts. In the current version of libdpd, I assume that all multi-index; quantities are totally symmetric, i.e., the direct product of; the irreducible representations (irreps) associated with the component; orbital indices corresponds to the totally symmetric irrep of the; given point group. (This assumption is in the process of being; removed, however.) Furthermore, each orbital subset of interest; (e.g., occupied or virtual orbitals) must be grouped by; symmetry. This allows one to organize the given quantity in a; symmetry-blocked matrix for which only the symmetry-allowed elements; are actually stored on disk or in memory. As an example, consider the set of two-electron integrals (in; antisymmetrized, Dirac notation) needed for the second-order MBPT; energy expression, <ij||ab>, where i and j (a and b) represent; occupied (virtual) orbitals. In C2v symmetry, a given; integral is zero unless the direct product of the four irreps; corresponding to indices, i, j, a, and b is A1, that is; i; × j; × a; × b; = A1. ; Since the direct product of any irrep with itself also gives the; totally symmetric irrep, we may write; i; × j; = a; × b. If we organize the occupied and virtual orbitals into symmetry groups,; we may represent the storage of the complete list of <ij||ab>; integrals as a block-diagonal supermatrix with the form . (a,b); A1A2B1B2. A1 X; 0 0 0 . A2 0; X 0 0 ; (i,j) ; B1 0; 0 X 0 . B2 0; 0 0 X . Here ""X"" and ""0"" indicate nonzero and zero submatrices, respectively,; and the notation (p,q) is used to indicate the compound row or column; indices. The compound indices may be computed based on a knowledge of; the permutational symmetry (or antisymmetry) of the index pairs; if; the given integrals are antisymmetric",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html:2228,energy,energy,2228,doc/sphinxman/source/attic/libdpd.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html,1,['energy'],['energy']
Energy Efficiency,"r Exchange; ~~~~~~~~~~~~~~~. Large SCF calculations can benefit from specialized screening procedures that further reduce the scaling of the ERI contribution to the Fock matrix.; LinK, the linear-scaling exchange method described in [Ochsenfeld:1998:1663]_, is available in Psi4 in conjunction with composite algorithms that build J (|globals__scf_type| set to ``J_alg+LINK``).; LinK achieves linear-scaling by exploiting shell pair sparsity in the density matrix and overlap sparsity between shell pairs. Specifically, LinK exploits the fact that the Exchange term; requires only a linear-scaling number of significant elements through reformulating the; shell quartet screening process to scale linearly with system size.; LinK is most competitive when used with non-diffuse orbital basis sets, since orbital and density overlaps decay slower with diffuse functions.; LinK is especially powerful when combined with density-matrix based ERI screening (set |globals__screening| to ``DENSITY``) and incremental Fock builds (set |scf__incfock| to ``TRUE``), which decrease the number of significant two-electron integrals to calculate. To control the LinK algorithm, here are the list of options provided.; ; |scf__linK_ints_tolerance|: The integral screening tolerance used for sparsity-prep in the LinK algorithm. Defaults to the |scf__ints_tolerance| option. .. index::; single: SOSCF. .. _`sec:soscf`:. Second-order Convergence; ~~~~~~~~~~~~~~~~~~~~~~~~. Second-order convergence takes into account both the gradient and Hessian to; take a full Newton step with respect to the orbital parameters. This results in; quadratic convergence with respect to density for SCF methods. For cases where; normal acceleration methods either fail or take many iterations to converge,; second-order can reduce the total time to solution. Solving second-order (SO) methods exactly would require an inversion of the; orbital Hessian (an expensive :math:`\mathbb{N}^6` operation); however, these; equations are norma",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:42465,power,powerful,42465,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['power'],['powerful']
Energy Efficiency,"r more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: CI. .. index::; pair: CI; theory. .. _`sec:ci`:. CI: Configuration Interaction; =============================. .. codeauthor:: Daniel G. A. Smith, C. David Sherrill, and Matthew L. Leininger; .. sectionauthor:: Daniel G. A. Smith and C. David Sherrill. *Module:* :ref:`Keywords <apdx:detci>`, :ref:`PSI Variables <apdx:detci_psivar>`, :source:`DETCI <psi4/src/psi4/detci>`. Configuration interaction (CI) is one of the most general ways to; improve upon Hartree--Fock theory by adding a description of the; correlated motions of electrons. Simply put, a CI wavefunction; is a linear combination of Slater determinants (or spin-adapted; configuration state functions), with the linear coefficients being; determined variationally via diagonalization of the Hamiltonian in the; given subspace of determinants. For a ""single-reference"" CI based; on reference function :math:`| \Phi_0 \rangle`, we can write the CI expansion as; follows:. .. math:: | \Psi \rangle = c_0 | \Phi_0 \rangle; + \sum_i^{\rm occ} \sum_a^{\rm vir} c_i^a | \Phi_i^a \rangle; + \sum_{i<j}^{\rm occ} \sum_{a<b}^{\rm vir} c_{ij}^{ab} ; | \Phi_{ij}^{ab} \rangle; + \sum_{i<j<k}^{\rm occ} \sum_{a<b<c}^{\rm vir} c_{ijk}^{abc}; | \Phi_{ijk}^{abc} \rangle + \cdots; :label: CIexpansion. The simplest standard CI method that improves upon Hartree--Fock is a CI; that adds all singly :math:`| \Phi_i^a \rangle` and doubly ; :math:`| \Phi_{ij}^{ab} \rangle`; substituted determinants (CISD) to the reference determinant; :math:`| \Phi_0 \rangle`. The CISD wavefunction has fallen out of favor; because truncated CI wavefunctions are not size-extensive, meaning; that their quality degrades for larger molecules. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:1699,adapt,adapted,1699,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['adapt'],['adapted']
Energy Efficiency,"r', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:206569,energy,energy,206569,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"r': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:43976,energy,energy,43976,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"r': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172574,energy,energy,172574,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"r': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:41429,energy,energy,41429,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"r; --------------------------------------------. Both ``clang-format`` and ``yapf`` can be integrated into widely used editors.; The `Neoformat <https://github.com/sbdchd/neoformat>`_ plugin can be configured; to format files when saving them to disk. .. _`faq:githookscodestyle`:. How to impose code style through Git hooks; ------------------------------------------. Git hooks are scripts that are run before or after certain Git events.; In this particular case, we want to make sure that all files that have been; added to the staging area with ``git add`` are formatted according to the style; *before* they committing them with ``git commit``.; The hook to be modified is then the *pre-commit* hook.; |PSIfour| uses the `pre-commit <https://pre-commit.com/>`_ framework, with configuration file :source:`.pre-commit-config.yaml`.; To take advantage of pre-commit hooks, you will need to install the ``pre-commit`` utility:. ::; pip install pre-commit. or using Conda:. ::; conda install pre_commit -c conda-forge. Finally, you need to install the actual hooks:. ::; pre-commit install. Pre-commit hooks will be run on every ``git commit``, but the ``--no-verify``; option can be used to skip their execution. Hooks are powerful, but integrating the formatter into your editor will prove; to be better. Hooks need to be installed anew for every fresh clone of the; repository you are working on. .. _`faq:manualcodestyle`:. How to run code-style tools `clang-format` and `yapf` manually; --------------------------------------------------------------. The least recommended approach to formatting your code is to run manually the; formatters. The following commands will format only the files that have been; modified:. ::; clang-format -style=file -i `git diff --relative --name-only HEAD -- *.cc *.h`; yapf -i `git diff --relative --name-only HEAD -- *.py`. How and when to *not* apply code styling to your contributions; --------------------------------------------------------------. TODO. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/code_style.rst:3461,power,powerful,3461,doc/sphinxman/source/code_style.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/code_style.rst,1,['power'],['powerful']
Energy Efficiency,"r_1. .. math::; -\frac{1}{2} \sum_{i,j}; \delta_{\sigma_{i} \sigma_{j}} \alpha \iint_{\mathrm{R}^6} \phi_{i}^1 \phi_{j}^1; \frac{1}{r_{12}} \phi_{i}^2 \phi_{j}^2 \ \mathrm{d}^3 r_1 \ \mathrm{d}^3 r_2. .. math::; -\frac{1}{2} \sum_{i,j}; \delta_{\sigma_{i} \sigma_{j}} (1-\alpha)\iint_{\mathrm{R}^6} \phi_{i}^1 \phi_{j}^1; \frac{\mathrm{erf}(\omega r_{12})}{r_{12}} \phi_{i}^2 \phi_{j}^2 \ \mathrm{d}^3 r_1 \ \mathrm{d}^3 r_2. For LRC functionals, the choice of range-separation parameter :math:`\omega` has; been the subject of considerable activity since the inception of LRC; functionals. Some authors advocate a static range-separation parameter; determined by optimization over a test set of chemical systems. However, a more; physically-motivated and often more accurate approach is the idea of ""gap; fitting"" or ""optimal tuning"" or simply ""tuning."" The most popular tuned-LRC; approach is IP-fitting, in which the :math:`\omega` is varied until the; Koopman's IP (the opposite of the HOMO energy) matches the true IP (the; difference between :math:`N-1`\ -electron and :math:`N`\ -electron total; energies), within the LRC functional ansatz. This guarantees the asymptotics of; the exchange potential,. .. math:: \lim_{r\rightarrow\infty} v_{\mathrm{x}}^{\mathrm{tuned-LRC}} (r) = -; \frac{1}{r} + I_{\mathrm{IP}} +; \epsilon_{\mathrm{HOMO}}. Note that LRC functionals with default :math:`\omega` only capture the; :math:`-1/r` dependence,. .. math:: \lim_{r\rightarrow\infty} v_{\mathrm{x}}^{\mathrm{LRC}} (r) = -; \frac{1}{r},. hybrid functionals only capture part of the :math:`-1/r` dependence,. .. math:: \lim_{r\rightarrow\infty} v_{\mathrm{x}}^{\mathrm{Hybrid}} (r) = -; \frac{\alpha}{r},. and local functionals decay exponentially, resulting in completely incorrect; asymptotics,. .. math:: \lim_{r\rightarrow\infty} v_{\mathrm{x}}^{\mathrm{Local}} (r) = 0. IP-tuned LRC functionals effectively pin the chemical potential at :math:`N`; electrons to the correct value determined by the i",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:12558,energy,energy,12558,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"r_database.database`, and; :py:func:`~psi4.driver.cbs`; read their respective sections; for details, but an overview is provided here. :py:func:`~psi4.driver.driver_nbody.nbody`; computes the interaction energy of a bimolecular complex (counterpoise-corrected,; not, or both). ::. molecule dimer {; Ne; --; Ne 1 R; symmetry c1; }; ; Rvals=[2.5, 3.0, 4.0]; set basis aug-cc-pVDZ; ; for R in Rvals:; dimer.R = R; ecp = cp('c4-mp2'); print_stdout('R [A] = %.1f IE [kcal/mol] = %.3f\n' % (R, psi_hartree2kcalmol * ecp)); ; yields ::. R [A] = 2.5 IE [kcal/mol] = 0.804; R [A] = 3.0 IE [kcal/mol] = 0.030; R [A] = 4.0 IE [kcal/mol] = -0.014. Next, the :py:func:`~psi4.driver.wrapper_database.database` wrapper allows any computational; model chemistry to be applied a predefined collection of molecules. Thus; an input ::. set {; basis jun-cc-pvdz; d_convergence 9; }; ; database('c4-mp2','nbc10',cp='on',subset='MeMe'). yields the counterpoise-corrected interaction energy for several points; along the dissociation curve of methane dimer, which is a member of the; :srcdb:`NBC10` database::. //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // Database nbc10 Results //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//; ; For each VARIABLE requested by tabulate, a 'Reaction Value' will be formed from; 'Reagent' values according to weightings 'Wt', as for the REQUESTED ENERGY below.; Depending on the nature of the variable, this may or may not make any physical sense.; ; ==> Requested Energy <==; ; ----------------------------------------------------------------------------------------------; Reaction Reaction Energy Error Reagent 1 Reagent 2; Ref Calc [kcal/mol] [H] Wt [H] Wt; ----------------------------------------------------------------------------------------------; NBC1-MeMe-3.2 0.0690 1.1639 1.0949 -80.72700202 1 -40.36442840 -2; NBC1-MeMe-3.3 -0.2390 0.6709 0.9099 -80.72764911 1 -40.36435916 -2; NBC1-MeMe-3.4 -0.4170 0.3407 0.7577 -80.72806043 1 -40.36430165 -2; NBC1-MeMe-3.5 -0.5080 0.1244 0.6324 ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:16684,energy,energy,16684,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"ram of M. K\ |a_acute|\ llay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mih\ |a_acute|\ ly K\ |a_acute|\ llay (`https://www.mrcc.hu/ <https://www.mrcc.hu/>`_). Installation; ~~~~~~~~~~~~. Follow the instructions provided with the source to build the MRCC programs.; To be used by |PSIfour|, ensure that the program binary (``dmrcc``) can be; found in your :envvar:`PATH`. If |PSIfour| is unable to execute the binary, an; error will be reported. Running MRCC; ~~~~~~~~~~~~. MRCC can be invoked in similar fashion as other theories provided in |PSIfour|.; To indicate MRCC as the target software, set |globals__qc_module|\ ``=MRCC``.; This is a change as of October 2022; previously, one prefixed the method by ""mr""; to indicate MRCC (e.g., ``energy('mrccsdt')``).; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; qc_module mrcc; }; energy('ccsdt'). ``'ccsdt'`` in the call to :py:func:`~psi4.driver.energy` plus ``qc_module=mrcc`` instructs |PSIfour| to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; Here the ``qc_module=mrcc`` is optional since |PSIfour| has no builtin module; that can perform CCSDT. For a method like CCSD, no specification of |globals__qc_module|; will default to the CCENERGY module, and specification with value ``mrcc`` is; required to route the computation to the MRCC program.; For a CCSDT(Q) energy, simply use ``'ccsdt(q)'`` in the call to; :py:func:`~psi4.driver.energy`. MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only. At this time, |PSIfour| is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you can call it directly; For other methods, you will be required to; use the MRCC ke",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst:2501,energy,energy,2501,doc/sphinxman/source/mrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst,1,['energy'],['energy']
Energy Efficiency,"ranch of psi4,; .. (2) find a copy of cfour and put it in :envvar:`PATH` or; .. :envvar:`PSIPATH`, and (3) clone https://github.com/loriab/qcdb.git; .. python module and prepend :envvar:`PYTHONPATH` with the top qcdb; .. directory (the path added to PYTHONPATH should have one ""qcdb"" in it;; .. the cloned qcdb is what needs to be imported in preference to the one; .. already in psi4). Execute psi4 as usual. .. caution:: The p4c4 interface hasn't been fully adapted for the new March 2014 version. Cfour for |PSIfour| Users; ~~~~~~~~~~~~~~~~~~~~~~~~~. * Set memory as usual. * Set molecule as usual. * Set basis set as usual (Cfour only cares about orbital basis, no fitting; bases). * Set the task as usual, indicating Cfour as the intended code by; prepending ""c4-"" to the method argument. So ``energy('scf')`` becomes; ``energy('c4-scf')`` and ``optimize('ccsd(t)')`` becomes; ``optimize('c4-ccsd(t)')``. Find available methods for; :py:func:`~psi4.driver.energy` at :ref:`Energy (CFOUR) <table:energy_cfour>`; and for :py:func:`~psi4.driver.optimize` at :ref:`Gradient (CFOUR); <table:grad_cfour>`. * Generally, the p4c4 interface will handle best practices for path of; execution: ``vcc``/``ecc``, derivative type, *etc.* The user is still; responsible for setting convergence, frozen core, guess, diis, *etc.*; For the moment, so-called ""best-practices"" keywords are summarized at; :ref:`Best Practices <table:cfour_cc_program>`. * For the type of computation intended, find appropriate options at; :ref:`Keywords <apdx:cfour>`. These keyword summaries contain the same; information as the `proper CFOUR options list; <http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.ListOfKeywordsInAlphabeticalOrder>`_; plus notes on keyword relevance when run through |PSIfour|. Information; at the `CFOUR manual; <http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.Manual>`_ may; also be useful, as may the many samples at :source:`samples/cfour`. * Set Cfour keywords just like |PSIfour| ke",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:3359,energy,energy,3359,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"rap:; :label: DFTterms. \begin{align*}; E_{\text{DFT}} & = E_{NN} + E_{1e^-} + E_{2e^-} + E_{xc} + E_{\text{-D}} + E_{\text{DH}} \\; & = E_{\text{FCTL}} + E_{\text{-D}} + E_{\text{DH}} \\; & = E_{\text{SCF}} + E_{\text{DH}}; \end{align*}. Unless the method is a DFT double-hybrid, this quantity is equal to; :psivar:`SCF TOTAL ENERGY`. If the method is neither a; double-hybrid, nor dispersion corrected, this quantity is equal to; :psivar:`DFT FUNCTIONAL TOTAL ENERGY`. .. psivar:: DFT TOTAL GRADIENT. The total electronic gradient [E_h/a0] of the requested DFT method, ({nat}, 3). .. psivar:: DFT DIPOLE GRADIENT. The derivative of the requested DFT method dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: DFT TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the requested DFT method, (3 * {nat}, 3 * {nat}). .. psivar:: DFT XC ENERGY. The functional energy contribution [E_h] to the total SCF energy (DFT only).; Quantity :math:`E_{xc}` in Eqs. :eq:`SCFterms` and :eq:`DFTterms`. .. psivar:: DFT VV10 ENERGY. The VV10 nonlocal contribution [E_h] to the total SCF energy (DFT only).; Included in :psivar:`DFT FUNCTIONAL TOTAL ENERGY`. .. psivar:: DISPERSION CORRECTION ENERGY; fctl DISPERSION CORRECTION ENERGY. The dispersion correction [E_h] appended to an underlying functional; when a DFT-D method is requested. Quantity :math:`E_{\text{-D}}`; in Eqs. :eq:`SCFterms` and :eq:`DFTterms`.; When dispersion parameters are untweaked for a functional and dispersion; level, labeled QCVariable also defined. .. psivar:: DOUBLE-HYBRID CORRECTION ENERGY. The scaled MP2 correlation energy correction [E_h] appended to an; underlying functional when a DH-DFT method is requested.; Quantity :math:`E_{\text{DH}}` in Eq. :eq:`DFTterms`. .. psivar:: DMA DISTRIBUTED MULTIPOLES. Distributed multipoles in units given by |gdma__gdma_multipole_units|; with the row index corresponding ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:32486,energy,energy,32486,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"rbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table :ref:`FNOCC Methods <table:fnocc_methods>`. Full MP4 correlation; energies are also available. .. _`sec:fnocepa`:. Coupled electron pair approximation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain :math:`{\cal{O}}(o^2v^4)` complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see [Wennmohs:2008:217]_\. What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; |Psifour|. We begin with the CISD wave function. .. math::; :label: CIwfn. | \Psi \rangle = | \Psi_0 \rangle + \sum_i^{occ} \sum_a^{vir} t_i^a | \Psi_i^a\rangle + \frac{1}{4}\sum_{ij}^{occ} \sum_{ab}^{vir} t_{ij}^{ab} | \Psi_{ij}^{ab}\rangle,. where we have chosen the intermediate normalization, :math:`\langle \Psi_0; | \Psi \rangle = 1`. The CISD correlation energy is given by. .. math::; :label: CIenergy; ; E_c = \langle \Psi_0 | \hat{H} - E_0 | \Psi \rangle,. and the amplitudes can be determined by the solution to the coupled set of; equations:. .. math::; :label: CIeqns; ; 0 &= \langle \Psi_{ij}^{ab} | \hat{H} - E_0 - E",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:9038,power,power,9038,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['power'],['power']
Energy Efficiency,"rbital-optimized MP3 level of theory. .. psivar:: OREMP2 TOTAL ENERGY; OREMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized retaining-the-excitation-degree |MollerPlesset|; hybrid perturbation theory level. .. psivar:: OREMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized retaining-the-excitation-degree; |MollerPlesset| hybrid perturbation theory level. .. psivar:: ONE-ELECTRON ENERGY. The one-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{1e^-}` in Eq. :eq:`SCFterms`. .. psivar:: PCM POLARIZATION ENERGY. The energy contribution [E_h] from the polarizable continuum model for solvation. .. psivar:: DD SOLVATION ENERGY. The energy contribution [Eh] from continuum solvation models based on a; domain-decomposition ansatz. .. psivar:: PE ENERGY. The energy contribution [E_h] from the polarizable embedding model for solvation. .. psivar:: QCISD TOTAL ENERGY; QCISD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles level; of theory. .. psivar:: QCISD(T) TOTAL ENERGY; QCISD(T) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. .. psivar:: QCISD(T) CORRECTION ENERGY. The quadratic configuration interaction singles and doubles perturbative; triples correction [E_h]. .. psivar:: REMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the retaining-the-excitation-degree |MollerPlesset| hybrid perturbation; theory level. .. psivar:: SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY. Respectively, the dispersion, electrostat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:48526,energy,energy,48526,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"rbitals for the orbital-optimized retaining-the-excitation-degree; |MollerPlesset| hybrid perturbation theory level. .. psivar:: ONE-ELECTRON ENERGY. The one-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{1e^-}` in Eq. :eq:`SCFterms`. .. psivar:: PCM POLARIZATION ENERGY. The energy contribution [E_h] from the polarizable continuum model for solvation. .. psivar:: DD SOLVATION ENERGY. The energy contribution [Eh] from continuum solvation models based on a; domain-decomposition ansatz. .. psivar:: PE ENERGY. The energy contribution [E_h] from the polarizable embedding model for solvation. .. psivar:: QCISD TOTAL ENERGY; QCISD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles level; of theory. .. psivar:: QCISD(T) TOTAL ENERGY; QCISD(T) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadratic configuration interaction singles and doubles with; perturbative triples correction level of theory. .. psivar:: QCISD(T) CORRECTION ENERGY. The quadratic configuration interaction singles and doubles perturbative; triples correction [E_h]. .. psivar:: REMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the retaining-the-excitation-degree |MollerPlesset| hybrid perturbation; theory level. .. psivar:: SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for the; requested SAPT level of theory. The sum of these four components yields; :psivar:`SAPT TOTAL ENERGY`. .. psivar:: SAPT TOTAL ENERGY; SAPT ENERGY. The total electronic interaction energy [E_h] for the requested SAPT; level of theory. .. psivar:: SAPT ELST10,R ENERGY. An electrostatics-classified SAPT term energy [E_h",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:48903,energy,energy,48903,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"rce and you want PCMSolver built from; from source also,; enable it as a feature with :makevar:`ENABLE_PCMSolver`,; and let the build system fetch and build it and activate dependent code. .. index:: PCM; Using PCM. .. _`sec:usingPCM`:. Using the polarizable continuum model; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The inclusion of a PCM description of the solvent into your calculation; can be achieved in two ways in |PSIfour|, using either the PCMSolver or ddx package.; PCMSolver is based on a boundary-element discretisation [Cances:1998:309]_,; while ddx is based on a domain decomposition approach; [Cances:2013:054111]_ making it linear scaling.; For more details about ddx see the :ref:`section on ddx <sec:ddx>`. Using PCMsolver is achieved instead by setting |globals__pcm| ``true`` in your input file.; |Psifour| understands the additional option |pcm__pcm_scf_type| with possible values ``total``; (the default) or ``separate``.; The latter forces the separate handling of nuclear and electronic electrostatic potentials and; polarization charges. It is mainly useful for debugging. For the calculation of vertical excitation energies with PCM non-equilibrium solvation should be included with: ::. pcm = {; Medium {; Nonequilibrium = True; }; }. .. note:: At present PCM can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: The PCMSolver library **cannot** exploit molecular point group symmetry. .. warning:: ROHF with PCM is known **not to work**. See `issue #999 on GitHub <https://github.com/psi4/psi4/issues/999>`_.; For the adventurous, a fix is available in `pull request #953 on GitHub <https://github.com/psi4/psi4/pull/953>`_. .. warning:: Analytic gradients and Hessians **are not*",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst:4202,charge,charges,4202,doc/sphinxman/source/pcmsolver.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst,1,['charge'],['charges']
Energy Efficiency,"rd a particular |PSIfour| (and probably pybind11) library to; link against (the ``CMAKE_PREFIX_PATH`` part) *and* telling it to; do an in-source build (the ``.`` part). Then just run ``make`` in; your plugin directory. After any change to the plugin C++ code,; ``make`` must be run in the plugin directory to recompile the; ``myplugin.so`` executable, but recompiling the main |PSIfour| code; is not necessary. Should you add additional (non-header) files to; the plugin or need to link to additional external libraries, add that; information here. * **input.dat** |w---w| Sample input file for the plugin.; Since the ``__init__.py`` file makes the plugin directory look like a; Python module, the plugin can be treated as such in an input file. The; location of the plugin directory must be included in :envvar:`PYTHONPATH`,; either externally in the calling shell or defined in the input file.; This is usually done by manipulating :envvar:`PSIPATH`. Then,; the plugin can be loaded as ``import myplugin`` and executed as; ``energy('myplugin')``. Any other Python functions are also available from; the input file, *e.g.* ``myplugin.testfunction()``, note the namespace; protection. * **pymodule.py** |w---w| Python component of the plugin.; By encoding the sequence of |PSIfour| module; calls needed to run the plugin in the ``run_myplugin()`` function in this; file, the plugin is hooked into the main |PSIfour| driver function; :py:func:`~psi4.driver.energy` and so can be accessed through; ``energy('myplugin')`` in an input file. Any other Python functions can; also be placed in this file. * **__init__.py** |w---w| Init script for the plugin (in the sense that; the whole plugin directory is a Python module). This file generally won't; need editing unless additional Python files are added to the plugin; directory (add additional lines to the ``# Load Python modules`` section); or the plugin depends on .so codes in other plugin directories (add; additional plugin_load lines relative to ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst:9164,energy,energy,9164,doc/sphinxman/source/plugins.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst,1,['energy'],['energy']
Energy Efficiency,"re Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index::; single: DF-MP2; pair: MP2; density-fitting. .. _`sec:dfmp2`:. DF-MP2: Density-Fitted 2nd-Order |MollerPlesset| Perturbation Theory; ====================================================================. .. codeauthor:: Robert M. Parrish; .. sectionauthor:: Robert M. Parrish. *Module:* :ref:`Keywords <apdx:dfmp2>`, :ref:`PSI Variables <apdx:dfmp2_psivar>`, :source:`DFMP2 <psi4/src/psi4/dfmp2>`. Introduction; ------------. Second-order |MollerPlesset| Perturbation Theory (MP2) occupies a unique role; in quantum chemistry due to its small-prefactor :math:`{\cal O}(N^5)` treatment of; dynamic electron correlation. This unusually cheap; *ab initio* treatment of electron correlation may be made even more; efficient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic :math:`ov` products in the; bra- and ket- of the :math:`(ov|ov)`\ -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in |PSIfour| for all single; reference types available in the SCF module.; MP2 defaults in |PSIfour| to the density-fitte",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:1781,efficient,efficient,1781,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['efficient'],['efficient']
Energy Efficiency,"re thereof, specifications and then place two; dashes between nonbonded fragments. For example, to study the interaction; energy of ethane and ethyne molecules, we can use the following molecule; block::. molecule eneyne {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; }. This specifies that there are two neutral, spin-singlet fragments. It is; possible to further specify that the overall complex is neutral and spin-singlet; by inserting another :samp:`{charge} {multiplicity}` line, separated from the first; molecule block by a `--` line. If any information is missing, |PSIfour| will set the; unprovided charges and multiplicities to be consistent with those that are given.; For example, the overall charge must be simply the sum of all fragment charges.; |PSIfour| further assumes that any unpaired electrons are coupled to yield the highest; possible :math:`M_s` value. Psi will also favor neutral, spin-singlet fragments.; For anything complicated, we strongly suggest explicitly providing the charge; and multiplicity of each fragment as well as the total molecular charge and multiplicity. For details and examples, see https://github.com/MolSSI/QCElemental/blob/master/qcelemental/molparse/chgmult.py#L105-L136 . Having defined a molecule containing fragments like ``eneyne`` above, it; is a simple matter to perform calculations on only a subset of the; fragments. For instance, the commands below run a scf first on the ethene; fragment alone (``extract_subsets(1)`` pulls out fragment 1 as Real atoms; and discards remaining fragments) and next on the ethene fragment with the; ethyne fragment ghosted (``extract_subsets(1,2)`` pulls out fragment 1 as; Real atoms and sets fragment 2 as Ghost atoms). For ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:19951,charge,charge,19951,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,2,['charge'],"['charge', 'charges']"
Energy Efficiency,"re.get_variables`. .. _`sec:returnvals`:. Return Values; =============. Most of the usual user computation functions (*i.e.*,; :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, and; :py:func:`~psi4.driver.frequency`) return simply the current total energy.; Consult the descriptions of other functions in :ref:`sec:psithonFunc` for; what quantities they return and for what data structures they make; available for post-processing. Many users need only deal with the simple return; form for the computation functions. ::. # E is total energy float; # G is gradient array; # H is hessian array; # wfn is class instance with many computational details. # simple returns; E = energy(...); E = optimize(...); E = frequency(...); G = gradient(...) # used by optimize(); H = hessian(...) # used by frequency(). For more elaborate post-processing of computations, adding; ``return_wfn=True`` keyword argument additionally returns; :py:class:`~psi4.core.Wavefunction`. ::. # power user returns; E, wfn = energy(..., return_wfn=True); E, wfn = optimize(..., return_wfn=True); E, wfn = frequency(..., return_wfn=True); G, wfn = gradient(..., return_wfn=True) # used by optimize(); H, wfn = hessian(..., return_wfn=True) # used by frequency(). # print gradient array and its rms; wfn.gradient.print_out(); print wfn.gradient().rms(). # format output for other programs; molden(wfn, 'mycalc.molden'). # access array in another format; np.array(wfn.hessian()). .. _`sec:loops`:. Loops; =====. Python provides many control structures, any of which can be used within |PSIfour|; input files. For example, to loop over three basis sets, the following code can; be used:. .. code-block:: none. basis_sets = [""cc-pVDZ"", ""cc-pVTZ"", ""cc-pVQZ""]; for basis_set in basis_sets:; set basis = $basis_set; energy('scf'). The declaration of ``basis_sets`` is completely standard Python, as is the next; line, which iterates over the list. However, because the Psithon preprocessor; wraps strings in quotes by def",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:11798,power,power,11798,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,2,"['energy', 'power']","['energy', 'power']"
Energy Efficiency,"reagent required for the subset of database reactions requested.; Note that this is an un-counterpoise-corrected example, and the wrapper is smart enough; to compute only once the monomer whose energy will be subtracted from each of the three dimers. ::. RGC1-HeHe-0.85-dimer; RGC1-He-mono-unCP; RGC1-HeHe-1.0-dimer; RGC1-HeHe-1.5-dimer. At the end of the job, the Requested Energy table is printed that gives the total; energies for the requested model chemistry for each reagent and each reaction, as; well as the stoichiometric weights by which the reagent energies are transformed; into the reaction energy. In this case, the dimer is +1 and the monomer is -2,; indicating the interaction energy is computed from dimer less first monomer; less second (identical) monomer. Error statistics are computed with respect to the reference; energies stored in the database. One of these, the mean absolute deviation, is ; returned by the wrapper as an ordinary Python variable. (For databases; without a stored reference energy, *e.g.*, BASIC, large and meaningless numbers are; printed for error.) The other two tables tabulate the PSI variables requested; through keyword ``tabulate``, in this case the total SCF energy and the number; of atoms in each reagent. ::. ==> Mp2 Total Energy <==. ------------------------------------------------------------------------------------------------------; Reaction Reaction Value Reagent 1 Reagent 2; Value Wt Value Wt; ------------------------------------------------------------------------------------------------------; RGC1-HeHe-0.85 0.00004802 -5.69430495 1 -2.84717649 -2; RGC1-HeHe-1.0 -0.00000064 -5.69435362 1 -2.84717649 -2; ------------------------------------------------------------------------------------------------------. ==> Requested Energy <==. ------------------------------------------------------------------------------------------------------; Reaction Reaction Energy Reaction Error Reagent 1 Reagent 2; Ref Calc [kcal/mol] [kJ/mol] [Eh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst:2778,energy,energy,2778,doc/sphinxman/source/db.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst,1,['energy'],['energy']
Energy Efficiency,"rection [E_h]. .. psivar:: (T) CORRECTION ENERGY. The coupled-cluster perturbative triples correction [E_h]. .. psivar:: (AT) CORRECTION ENERGY; A-(T) CORRECTION ENERGY. The coupled-cluster asymmetric perturbative triples correction [E_h]. .. psivar:: AAA (T) CORRECTION ENERGY; AAB (T) CORRECTION ENERGY; ABB (T) CORRECTION ENERGY; BBB (T) CORRECTION ENERGY. Spin components of the UHF-based coupled-cluster perturbative triples correction [E_h]. .. psivar:: ACPF DIPOLE. Dipole array [e a0] for the averaged coupled-pair functional level of theory, (3,). .. psivar:: ACPF QUADRUPOLE. Redundant quadrupole array [e a0^2] for the averaged coupled-pair functional level of theory, (3, 3). .. psivar:: ACPF TOTAL ENERGY; ACPF CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the averaged coupled-pair functional level of theory. .. psivar:: ADC ROOT 0 -> ROOT n EXCITATION ENERGY; TD-fctl ROOT 0 -> ROOT n EXCITATION ENERGY. The excitation energy [E_h] from ground state to root *n*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (IN h) -> ROOT n (IN i) EXCITATION ENERGY; TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) EXCITATION ENERGY. The excitation energy [E_h] from the ground state (which is of irrep *h*); to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (h) -> ROOT n (i) EXCITATION ENERGY; TD-fctl ROOT 0 (h) -> ROOT n (i) EXCITATION ENERGY. The excitation energy [E_h] from the ground state (which is of irrep *h*); to root *n* (which is of irrep *i*).; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 -> ROOT n EXCITATION ENERGY - h TRANSITION; TD-fctl ROOT 0 -> ROOT n EXCITATION ENERGY - h TRANSITION. The excitation energy [E_h] from the ground state to root *n*, and the; transition is of irrep *h*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (LEN); TD-fctl ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (LEN).",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:2640,energy,energy,2640,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"red/python psi4`` on the command line to override the; shebang line. To use a different Python with |PSIfour| in the long term,; edit the shebang line. If you're using |PSIfour| as a Python module, then |PSIfour| *is* running; the Python of ``which python``. .. _`faq:wrongpyfalse`:. How to fix ""``undefined symbol: _Py_FalseStruct``""; --------------------------------------------------. You're probably loading a Py3-compiled Psi4 in Py2. Switch interpreters; and re-run. A python of proper Py2 or Py3-ness is baked into the |PSIfour|; ""executable"", so you'll see this error only for Psi4 as Python module. .. _`faq:gdblldb`:. How to use ``gdb`` and ``lldb`` with Psi4; -----------------------------------------. Debugging |PSIfour| has gotten a little confusing now that it's running through Python. Here's the syntax ::. >>> cd {objdir}; >>> lldb -- python stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat; >>> (lldb) run. ::. >>> cd {objdir}; >>> gdb --args python stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat; >>> (gdb) run. .. .. _`faq:valgrindpsi`:; .. ; .. How to use ``valgrind`` with Psi4; .. ---------------------------------; .. ; .. When you naively use Valgrind with Psi4, you're likely to get incomprehensible mess of garbage or it may just crash with a boost overflow error. This happens because the boost python layer looks really really bad as far as Valgrind is concerned, i.e. it looks like a ton of memory leaks. It really isn't, so we want to ignore all such errors/warnings. Valgrind has a mechanism for this in the way of suppression files. Calling Valgrind as:; .. ; .. ```bash; .. valgrind --suppressions=<file_name>; .. ```; .. ; .. will run valgrind with the suppression file located on disk at ""file_name"". Lucky for you, Psi4 comes with such a suppression file at [``$top-level-psi4-dir/psi4/share/psi4/scripts/valgrind-python.supp``](../blob/master/psi4/share/psi4/scripts/valgrind-python.supp). This should remove all the python errors.; .. ; .. The other error, b",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:55168,energy,energy,55168,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['energy'],['energy']
Energy Efficiency,"ree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iterations, but here they do; not). ::. --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -76.026632734857 -76.026632734857 0.01523505 0.01245744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:7350,energy,energy,7350,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"reference uks # UKS, as we need to do neutral/cation; basis cc-pvdz; scf_type df; }. # Optional arguments are minimum omega, maximum omega, molecule object; omega = ip_fitting('wb97', 0.4, 2.0, molecule=h2o). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of :math:`\omega`, though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; :math:`\omega`. The procedure can also be assisted by providing a tighter guess; for the bounds of :math:`\omega`. This small test case has a tuned; :math:`\omega` of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized :math:`\omega`; between 0.1 and 0.5. Fractional Particle Curves; ~~~~~~~~~~~~~~~~~~~~~~~~~~. The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. |PSIfour| features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number :math:`N`. Two python macros exist for this code. The first is :py:func:`~psi4.driver.frac.frac_traverse`, which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is::. molecule h2o {; 0 1 # must be neutral; O; H 1 1.0; H 1 1.0 2 104.5; # FRAC jobs will be be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; }. # Argument is functional.; # Many opti",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:29604,energy,energy,29604,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,2,['energy'],['energy']
Energy Efficiency,"reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:274505,energy,energy,274505,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:277040,energy,energy,277040,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:486047,energy,energy,486047,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'ene",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:393555,energy,energy,393555,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:280875,energy,energy,280875,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:482512,energy,energy,482512,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:283410,energy,energy,283410,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rence': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'referenc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:273958,energy,energy,273958,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rence': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:276493,energy,energy,276493,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rence': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:106039,energy,energy,106039,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rence': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'referenc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:280328,energy,energy,280328,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rence': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:282863,energy,energy,282863,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"representability conditions derived from ; second-order perturbation theory and differ in the description of the; correlated (non-idempotent) part :math:`\boldsymbol{\tau}` of the one-particle density; matrix and orbital optimization. While in the DC-06 and ODC-06 methods :math:`\boldsymbol{\tau}` is derived from the density cumulant; in an approximate way (labelled by '06'), the DC-12 and ODC-12 methods derive this contribution exactly, and; take full advantage of the N-representability conditions (which is denoted by '12'). The corresponding DC and ODC methods; have similar description of the :math:`\boldsymbol{\gamma_1}` N-representability, but differ in describing the orbital relaxation:; the former methods account for the relaxation only partially, while the latter fully relax the orbitals.; Both DC-06 and DC-12 methods have similar computational cost, same is true when comparing ODC-06 and ODC-12. ; Meanwhile, the DC methods are generally more efficient than their ODC analogs, due to a more expensive orbital update step; needed for the full orbital optimization. In the ODC-13 method, the third- and; fourth-order N-representability conditions are used for the density cumulant; and the correlated contribution :math:`\boldsymbol{\tau}`, respectively,; and the orbitals are variationally optimized. ; For most of the applications, it is recommended to use the ODC-12 method, which; provides an optimal balance between accuracy and efficiency, especially for; molecules with open-shell character. If highly accurate results are desired, a; combination of the ODC-13 method with a three-particle energy correction; [:math:`\mbox{ODC-13$(\lambda_3)$}`] can be used (see below).; For the detailed comparison of the quality of these methods, we refer; users to our :ref:`publications <intro:dctcitations>`. The DCT functional can be specified by the |dct__dct_functional| option. The; default choice is the ODC-12 functional. The DCT code can also be used to; compute the :math:`(\la",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:7061,efficient,efficient,7061,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['efficient'],['efficient']
Energy Efficiency,"requested.; Quantity :math:`E_{\text{DH}}` in Eq. :eq:`DFTterms`. .. psivar:: DMA DISTRIBUTED MULTIPOLES. Distributed multipoles in units given by |gdma__gdma_multipole_units|; with the row index corresponding to the site and the column index; referencing the multipole component. Both indices are zero based,; and the Qlm components of the multipoles are ordered as Q00, Q10,; Q11c, Q11s, Q20, Q21c, Q21s, Q22c, Q22s, etc. .. psivar:: DMA TOTAL MULTIPOLES. Distributed multipoles as a single row, whose columns are the total; multipoles, translated to |gdma__gdma_origin|, and summed. .. psivar:: DMRG-SCF TOTAL ENERGY. The total DMRG total electonic energy [E_h]. Not unique because oribital spaces vary. .. psivar:: DMRG-CASPT2 TOTAL ENERGY. The total DMRG plus CASPT2 total electonic energy [E_h] . Not unique because orbital spaces vary. .. psivar:: EFP DISP ENERGY; EFP ELST ENERGY; EFP EXCH ENERGY; EFP IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for EFP/EFP; computations. The sum of these four components yields; :psivar:`EFP TOTAL ENERGY`. .. psivar:: EFP TOTAL ENERGY. The total electronic interaction energy [E_h] for EFP/EFP computations. .. psivar:: EFP TORQUE. The torque, not gradient for EFP/EFP computations. .. psivar:: ENTHALPY. Total enthalpy H [E_h] at given temperature. .. psivar:: ENTHALPY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the enthalpy at given temperature. .. psivar:: ESP AT CENTER n. Property of electrostatic potential [E_h / e] at location, usually atom center, n. .. psivar:: FCI TOTAL ENERGY; FCI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the full configuration interaction level of theory. .. psivar:: GIBBS FREE ENERGY. Total Gibbs free energy [E_h], free enthalpy at given temperature. .. psivar:: GIBBS FREE ENERGY CORRECTION. Sum of electronic, t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:34339,energy,energy,34339,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"rform the energy computation using the ODC-12; method. By default, simultaneous algorithm will be used for the solution of; the equations. One can also request to perform geometry; optimization following example below::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; optimize('dct'). The ``optimize('dct')`` call will first perform all of the procedures; described above to obtain the ODC-12 energy. After that, the ODC-12 analytic; gradients code will be executed and geometry optimization will be performed. . .. _`sec:dctrecommend`:. Recommendations; ~~~~~~~~~~~~~~~. Here is a list of recommendations for the DCT module:. * Generally, the use of the simultaneous algorithm together with the; |dct__ao_basis| ``DISK`` option is recommended (set by default). * In cases when available memory is insufficient, the use of the |dct__ao_basis| ``DISK`` option; is recommended. This will significantly reduce the memory requirements. However, when; used together with the two-step algorithm, this option can significantly; increase the cost of the energy computation. * In cases when the oscillatory convergence is observed before the DIIS; extrapolation is initialized, it is recommended to increase the threshold for; the RMS of the density cumulant or orbital update residual, below which the; DIIS extrapolation starts. This can be done by setting the; |dct__diis_start_convergence| option to the value greater than; :math:`10^{-3}` by one or two orders of magnitude (*e.g.* :math:`10^{-2}` or; :math:`10^{-1}`). This can be particularly useful for computations using the; ODC methods, because it can greatly reduce the number of iterations. * If oscillatory convergence is observed for atoms or molecules with high; symmetry, it is recommended to use the quadratically-convergent algorithm. * When using the quadratically-convergent algorithm for the closed-shell molecules, it; is recommended to set the |dct__qc_coupling| option to FALSE for efficiency; reasons (set by default). * For the ODC",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:17775,energy,energy,17775,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"rgies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:166851,energy,energy,166851,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rgy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.3 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 1.2 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP3 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SOS-OMP2; energy using non-canonical weighting, with any singles carried along. .. psivar:: SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.4 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: TD-fctl ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (VEL). The electric transition dipole moment [e a0] in velocity gauge, for the transition; from the ground state to root *m*.; DFT functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) ELECTRIC TRANSITION DIPOLE MOMENT (VEL). The electric transition dipole moment [e a0] in velocity gauge, for the transition; from the ground state, which is of irrep *h*, to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 (h) -> ROOT n (i) ELECTRIC TRANSITION DIPOLE MOMENT (VEL). The electric transition dipole moment [e a0] in velocity gauge, for the transition; from the ground state, which is of irrep *h*, to root *n*, which is of irrep *i*.; DFT functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:62632,energy,energy,62632,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"rgy component [E_h]; for the MP3-like method formed by reweighting the difference between; :psivar:`MP3 DOUBLES ENERGY` and :psivar:`MP2 DOUBLES ENERGY`; by 0.25, atop the SCS-MP2 energy, with any singles carried along. .. psivar:: SCS-OMP3 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SCS-OMP2 energy, with any singles carried along. .. psivar:: SOS-MP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.3 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP2-like method formed by reweighting :psivar:`OMP2 DOUBLES ENERGY`; by 1.2 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: SOS-OMP3 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the OMP3-like method formed by reweighting the difference between; :psivar:`OMP3 DOUBLES ENERGY` and :psivar:`OMP2 DOUBLES ENERGY`; by 0.25, atop the SOS-OMP2; energy using non-canonical weighting, with any singles carried along. .. psivar:: SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the MP2-like method formed by reweighting :psivar:`MP2 DOUBLES ENERGY`; by 1.4 opposite-spin and 0 same-spin contributions, with; any singles carried along. .. psivar:: TD-fctl ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (VEL). The electric transition dipole moment [e a0] in velocity gauge, for the transition; from",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:61955,energy,energy,61955,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"rgy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:132871,energy,energy,132871,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rgy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'en",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:44175,energy,energy,44175,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rgy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:46553,energy,energy,46553,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rgy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 're",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:105634,energy,energy,105634,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rgy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'ene",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:156230,energy,energy,156230,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rgy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'modul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:157613,energy,energy,157613,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rgy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'ene",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:161566,energy,energy,161566,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rgy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'modul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:162949,energy,energy,162949,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rgy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:331882,energy,energy,331882,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ring over 15 minutes should be labeled ``longtests``. A short test under 30 seconds used for general bug checking should be labeled ``quicktests``. A test that confirms |PSIfour| is operational should be labeled ``smoketests``. If a test needs extra input files like ``grid.dat`` or extra reference files for checking against, like ``fchk``, specify these in the ``CMakeLists.txt`` as shown above. Such tests must be run through ``ctest`` and don't usually work when run ""by hand"" from the objdir via ``stage/bin/psi4 ../tests/directory_name/input.dat``. If a test is multiple minutes long, load-balancing a parallel CTest run requires the test to be started early. Use the ``COST`` line as shown above to set a weighting to about the number of seconds the test takes. ``input.dat``; -------------. The other necessary file is the input file itself, ``input.dat``. The input file should be just a simple input file to run the test, with small additions. ::. #! RI-SCF cc-pVTZ energy of water, with Z-matrix input and cc-pVTZ-RI auxiliary basis.; #! Also a bit more to force a second line. nucenergy = 8.801466202085710 #TEST; refenergy = -76.05098402733282 #TEST. molecule h2o {; symmetry c1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis cc-pVTZ; scf_type df; df_basis_scf cc-pVTZ-RI; e_convergence 10; }. thisenergy = energy(""hf""). compare_values(nucenergy, h2o.nuclear_repulsion_energy(), 9, ""Nuclear repulsion energy"") #TEST; compare_values(refenergy, thisenergy, 9, ""Reference energy"") #TEST; compare_values(refenergy, variable('scf total energy'), 9, ""Reference energy"") #TEST. Of those small modifications, first, note the special comment at the top (starting with the ``#!`` comment marker). This should be descriptive since it is inlined into the manual (unless ``!nosample`` in the comment) as a sample input. Reference values are often assigned to variables for later use.; The compare_values function (along with several relatives in :source:`psi4/driver/p4util/testing.py` for comparing st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst:8344,energy,energy,8344,doc/sphinxman/source/add_tests.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst,1,['energy'],['energy']
Energy Efficiency,"rise, here are the specifics, the governing laws. * Specifying a piece of input in |PSIfour| format is entering into; a contract that you mean it. In particular this applies to; molecule (including charge/multiplicity through :samp:`molecule; {optional_molecule_name} \\{...\\}`), memory (through :samp:`memory; {value} {unit}`), computational method (through . If Cfour keywords; are specified with values that contradict the |PSIfour| input,; execution is halted. As an example, the input below is set up to fail in four ways:; contradictory specification of memory, multiplicity, computational; method, and derivative level. Note, though, that the ``cfour_units; angstrom`` setting is permissible, since it concurs with the value; implied in the molecule block. ::. memory 300 mb. molecule {; H; H 1 0.7; }. set basis 6-31g; set cfour_multiplicity 3 # clash with implicit singlet in molecule {} above; set cfour_units angstrom # no problem, consistent with molecule {} above; set cfour_memory_size 100000000 # clash with 300 mb above; set cfour_calc_level ccsd # clash with 'c4-scf' below; set cfour_deriv_level first # clash with energy() below (use gradient('c4-scf') to achieve this). energy('c4-scf'). * Specifying anything in |PSIfour| format (molecule, basis, options,; method call) starts building a ``*CFOUR(...)`` directive for the; ``ZMAT`` file. Since the contents of the ``cfour {...}`` block are; blindly appended to any input interpreted from |PSIfour| format, mixing; of |PSIfour| and Cfour input formats likely *will* give rise to multiple; ``*CFOUR(...)`` directives in the prospective ``ZMAT``, execution of; which *will* be trapped and halted. Proper uses for the ``cfour {...}``; block are for the sandwich mode, where the entire ``ZMAT`` is enclosed,; or for extra directives like ``%excite*``, which presently have no other; specification route. * Specifying the basis is perhaps the regulated piece of input. Since; basis set names differ between |PSIfour| and Cfour and it'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:36567,energy,energy,36567,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"river': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:230359,energy,energy,230359,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rking to ; improve the accuracy of MP2 (:ref:`sec:dfmp2`) interaction energies for dimer molecules.; The plugin is distributed under the 2-clause BSD license. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/snsmp2/badges/version.svg; :target: https://anaconda.org/psi4/snsmp2. * snsmp2 is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the Psi4conda installer, snsmp2 has already been installed alongside. * If using the |PSIfour| conda package, the snsmp2 conda package can; be obtained through ``conda install snsmp2 -c psi4`` or ``conda install; psi4-rt -c psi4``. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; snsmp2 can be obtained through ``conda install snsmp2 -c psi4``.; Then, hint its location with :envvar:`PYTHONPATH`. * To remove a conda installation, ``conda remove snsmp2``. **Source**. * .. image:: https://img.shields.io/github/tag/DEShawResearch/sns-mp2.svg?maxAge=2592000; :target: https://github.com/DEShawResearch/sns-mp2. * Download the plugin from the GitHub repository:. .. code-block:: bash. >>> git clone https://github.com/DEShawResearch/sns-mp2. * Once dowloaded, the plugin can be installed as outlined in the documentation:. .. code-block:: bash. >>> cd {top-level-sns-mp2-directory}; >>> PSI4_PYTHON=$(head $(which psi4) -n 1 | sed -r 's/^.{2}//'); >>> $PSI4_PYTHON -m pip install . Sample Input; ~~~~~~~~~~~~. A sample input file, adapted from the documentation, is shown below::. # Sample SNS-MP2 calculation for two helium atoms. molecule dimer {; He 0 0 0; --; He 2 0 0; }. energy('sns-mp2'); ; Note that the two monomers are separated by double dashes, indicating that; they should be treated as separate molecules. (See ; :ref:`sec:tutorial_tu5` for more details on; setting up dimer molecules.) This input file can be run in the usual fashion:. .. code-block:: bash. >>> psi4 input.dat. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_snsmp2.rst:3238,adapt,adapted,3238,doc/sphinxman/source/plugin_snsmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_snsmp2.rst,2,"['adapt', 'energy']","['adapted', 'energy']"
Energy Efficiency,"rl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:415252,energy,energy,415252,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:422219,energy,energy,422219,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:178321,energy,energy,178321,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fca",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:336756,energy,energy,336756,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:343761,energy,energy,343761,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:420558,energy,energy,420558,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:490226,energy,energy,490226,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:495536,energy,energy,495536,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:361308,energy,energy,361308,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:369027,energy,energy,369027,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:498453,energy,energy,498453,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:501030,energy,energy,501030,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:110556,energy,energy,110556,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:113096,energy,energy,113096,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:339164,energy,energy,339164,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:441506,energy,energy,441506,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:448549,energy,energy,448549,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:23760,energy,energy,23760,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:29133,energy,energy,29133,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:299254,energy,energy,299254,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:302121,energy,energy,302121,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:467450,energy,energy,467450,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:470013,energy,energy,470013,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rmed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with the primary basis set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call, ``energy('sapt0')``. This; call knows to automatically run two monomer computations and a dimer; computation and then use these results to perform the SAPT analysis. The; various energy components are printed at the end of the output, in addition; to the total SAPT0 interaction energy. An explanation of the various; energy components can be found in the review by Jeziorski, Moszynski, and; Szalewicz [Jeziorski:1994:1887]_, and this is discussed in more detail; in the SAPT section later in this manual. For now, we'll note that most of; the SAPT energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation is defined as; non-interacting monomers). The exchange contributions are positive; (repulsive). In this example, the most attractive contribution between; ethylene and acetylene is an electrostatic term of -2.12 |kcalpermol|; (``Elst10,r`` where the 1 indicates the first-order; perturbation theory result with respect to the intermolecular interaction,; and the 0 indicates zeroth-order with respect to intramolecular electron; correlation). The next most attractive contribution is the ``Disp20``; term (2nd order intermolecular dispersion, which looks ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:14900,energy,energy,14900,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,2,['energy'],['energy']
Energy Efficiency,"rms in Eq. :eq:`SCFterms`. Quantity :math:`E_{\text{HF}}`; in Eq. :eq:`SCFterms`. .. psivar:: HF KINETIC ENERGY. The total kinetic energy [E_h] of the Hartree--Fock method. .. psivar:: HF POTENTIAL ENERGY. The total potential energy [E_h] of the Hartree--Fock method. .. psivar:: HF VIRIAL RATIO. The virial ratio of the Hartree--Fock method. Only defined for a fully quantum mechanical computation, i.e., not QM/MM. .. psivar:: HF TOTAL GRADIENT. The total electronic gradient [E_h/a0] of the Hartree--Fock method, ({nat}, 3). .. psivar:: HF DIPOLE GRADIENT. The derivative of the Hartree--Fock method dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: HF TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the Hartree-Fock method, (3 * {nat}, 3 * {nat}). .. psivar:: LCCD TOTAL ENERGY; LCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster doubles level of theory. .. psivar:: LCCSD TOTAL ENERGY; LCCSD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster singles and doubles level of theory. .. psivar:: LCC2 (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CC2 level of theory. .. psivar:: LCCSD (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CCSD level of theory. .. psivar:: LEFT-RIGHT CC2 EIGENVECTOR OVERLAP; LEFT-RIGHT CC3 EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD(T) EIGENVECTOR OVERLAP. The overlap between the right-hand coupled coupled cluster eigenvector and the; left-hand eigenvector from the coupled cluster lambda (response) equations. .. psivar:: LOWDIN CHARGES. Property of partial atomic charges [e] by the method of L\ |o_dots|\ wdin, (nat,). .. psivar:: MAYER INDICES. Property of Mayer bond indices, (nat, nat). .. psivar::",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:36680,energy,energy,36680,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:486466,energy,energy,486466,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rom a subset of the terms of that grouping. The groupings shown above are; not unique and are certainly not rigorously defined. We regard the groupings ; used in |PSIfour| as a ""chemist's grouping"" as opposed to a more; mathematically based grouping, which would group all exchange terms ; (*i.e.* :math:`E_{exch-ind,resp}^{(20)}`, :math:`E_{exch-disp}^{(20)}`, *etc.*) in; the exchange component. A final note is that both ``Disp22(T)``; and ``Est.Disp22(T)`` results appear if MP2 natural orbitals are ; used to evaluate the triples correction to dispersion. The ``Disp22(T)`` ; result is the triples correction as computed in the truncated NO basis; ; ``Est.Disp22(T)`` is a scaled result that attempts to recover; the effect of the truncated virtual space and is our best estimate. The ``Est.Disp22(T)``; value is used in the SAPT energy and dispersion component (see [Hohenstein:2010:104107]_ ; for details). Finally, this part of the output file contains sSAPT0, a special scaling; scheme of the SAPT0 energy that can yield improved results and was described in more details; above. The corresponding scaled total component energies are printed as well. As mentioned above, SAPT results with scaled exchange are also optionally available; by setting the |sapt__exch_scale_alpha| keyword. When activated, the unscaled results are; printed first as reported above, and then repeated with exchange scaling for all ; relevant terms: :: . SAPT Results ==> ALL S2 TERMS SCALED (see Manual) <==. Scaling factor (Exch10/Exch10(S^2))^{Alpha} = 1.007200; with Alpha = 1.000000; --------------------------------------------------------------------------------------------------------; Electrostatics -13.06509118 [mEh] -8.19846883 [kcal/mol] -34.30239689 [kJ/mol]; Elst10,r -13.37542977 [mEh] -8.39320925 [kcal/mol] -35.11719087 [kJ/mol]; Elst12,r 0.04490350 [mEh] 0.02817737 [kcal/mol] 0.11789413 [kJ/mol]; Elst13,r 0.26543510 [mEh] 0.16656305 [kcal/mol] 0.69689985 [kJ/mol]. Exchange sc. 13.43351854 [mEh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:38596,energy,energy,38596,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"ropriately in the ``*CFOUR(...)`` directive. .. warning:: There exist molecules (*e.g.*, allene) where the; inertial frame is not unique (planes along atoms or between; atoms). The orientation reconciling machinery currently does not; handle these cases and will fail with ""Axis unreconcilable between; QC programs"". I will get to this soon. Whenever the molecule is supplied in |PSIfour| format, the job control; keywords must be too. All :ref:`Cfour keywords <apdx:cfour>` are the usual; ones, prepended by ``cfour_`` to avoid any possible name conflicts. As; detailed in :ref:`sec:jobControl`, setting keywords is flexible in; format. The previous example translates to::. # UHF-SCF energy calculation . molecule {; 0 2 # multiplicity from the MULT keyword; N; H 1 R; H 1 R 2 A; ; R=1.008; A=105.0; }; ; set {; cfour_CALC_level=HF # only full keyword names allowed; cfour_BASIS=qz2p; #MULT=2 # now in molecule {...} block; cfour_REFerence=UHF; cfour_OCCUPATION [[3, 1, 1, 0], [3,0,1,0] ] # arrays in python notation; cfour_SCF_CONV=12; cfour_MEMORY=20000000; }; ; energy('cfour'). Here, note that none of capitalization, equals sign, or whitespace matter; for the keyword commands. Specification of strings and integers requires no; translation; :ref:`booleans <op_c_boolean>` have extended freedom of; format; arrays must be translated into Python-style (square-bracket; bounded and comma delimited) of appropriate dimension. There are many; sample inputs in :source:`tests/cfour/` starting with ``sp-`` that take; examples from the Cfour manual and first run them in sandwich mode and; then run them as translated into |PSIfour| format. .. note:: |PSIfour| only recognizes keywords by their full name, so the common; Cfour keyword abbreviations CALC, REF, etc. must be replaced by their; proper names of |cfour__cfour_calc_level|, |cfour__cfour_reference|, etc. Whenever the molecule is supplied in |PSIfour| format, it is possible to; perform geometry optimizations where Cfour supplies the gra",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:7998,energy,energy,7998,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"ror', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:364242,energy,energy,364242,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ror', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:422042,energy,energy,422042,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ror', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:499937,energy,energy,499937,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rposition of Atomic Potentials, but using error function based; fits to the atomic radial potentials as discussed in; [Lehtola:2020:144105]_. The main difference to the SAP guess; discussed above [Lehtola:2019:25945]_ is that the SAPGAU scheme is; analytic, and can be efficiently formed in terms of three-center; two-electron integrals [Lehtola:2020:144105]_. The potential in; the SAPGAU scheme is passed with the |scf__sapgau_basis|; keyword. The default potential is given by the large fit to the; HelFEM potential, sap_helfem_large, described in; [Lehtola:2020:144105]_. Note that this guess is known in the DIRAC; program as .SCRPOT and in the ERKALE program as SAPFIT. These are all set by the |scf__guess| keyword. Also, an automatic Python; procedure has been developed for converging the SCF in a small basis, and then; casting up to the true basis. This can be done by adding; |scf__basis_guess| = SMALL_BASIS to the options list. We recommend the; 3-21G or pcseg-0 basis for the small basis due to its efficient mix of flexibility and; compactness. An example of performing an RHF solution of water by SAD guessing; in a 3-21G basis and then casting up to cc-pVTZ is shown below::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis cc-pvtz; basis_guess 3-21G; guess sad; }. energy('scf'). .. _`sec:scfrestart`:. Restarting the SCF; ~~~~~~~~~~~~~~~~~~. Reading orbital data from a previous calculations is done via the ``restart_file`` option,; where the actual file is a serialized ``wfn`` object (see :ref:`saving the wfn <sec:save_wfn>`); By default, the orbital data file of the converged SCF(``psi.PID.name.180.npy``) is deleted; after |PSIfour| exits or the ``clean()`` function is called. The orbital guess is automatically; set to ``READ`` when ``restart_file`` is given a ``wfn`` file.; To write the orbitals after every iteration and keep the orbitals from the last iteration, the ``write_orbitals`` options is available: ::. energy('scf', write_orbitals='my_mos')",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:22241,efficient,efficient,22241,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['efficient'],['efficient']
Energy Efficiency,"rror', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:360389,energy,energy,360389,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rror', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:20659,energy,energy,20659,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"rst layer encountered, Libmints handles the transform from AO to SO; automatically. If Cartesian functions are used, the number of functions; per shell remains ``(L + 1)(L + 2)/2``, and the ordering remains the same; as above. Note that the individual functions are not normalized for; angular momentum as in most codes: the self-overlap of a |PSIfour| Cartesian D; or higher function with more than one nonzero Cartesian exponent (e.g., lx; = 1, ly = 1, lz = 0) will be less than one. If Spherical Harmonics are; used, 2L + 1 real combinations of the spherical harmonics are built from; the ``(L+1)(L+2)/2`` Cartesian Gaussians, according to H. Schlegel and M.; Frish, IJQC, 54, 83-87, 1995. Unlike Cartesian functions these functions; are all strictly normalized. Note that in |PSIfour|, the real combinations of; spherical harmonic functions (see the paragraph below Eq. 15 in the; Schlegel paper) are ordered as: 0, 1+, 1-, 2+, 2-, .... * ``USO`` (Unique Symmetry-Adapted Orbitals): Spatial symmetry-adapted; combinations of SOs, blocked according to irrep. The total number of USOs; is the same as the number of SOs, but the number of USOs within each irrep; is usually much smaller, which can lead to significant performance; improvements. Note that this basis is sometimes unfortunately referred to; as the SO basis, so it's a bit context specific. * ``OSO`` (Orthogonal Symmetry-Adapted Orbitals): USOs orthogonalized by; Symmetric or Canonical Orthogonalization. The number of OSOs may be; slightly smaller than the total number of USOs, due to removal of linear; dependencies via Canonical Orthogonalization. The OSOs are rarely; encountered, as usually we go straight from USOs to MOs. * ``MO`` (Molecular Orbitals): The combination of OSOs that diagonalizes; the Fock Matrix, so each basis function is a Hartree-Fock (or Kohn-Sham); molecular orbital. The number of OSOs and MOs is always the same. MOs are; orthonormal. * ``LO`` (Localized Orbitals): Localized occupied orbitals, a differ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:11631,adapt,adapted,11631,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,1,['adapt'],['adapted']
Energy Efficiency,"runs of the FNOCC code have experienced; nonsensical CCSD correlation energies (often several Hartrees lower; than the starting guess). At the moment, the only confirmed solutions; are running serially, using a different BLAS implementation, or upgrading; to Intel 16.0.2 and MKL 11.3.2. Frozen natural orbitals (FNO); ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The computational cost of the CCSD [Purvis:1982]_, CCSD(T); [Raghavachari:1989]_, and related methods be reduced by constructing a; compact representation of the virtual space based on the natural orbitals; of second-order perturbation theory [Sosa:1989:148]_. The most demanding; steps in the CCSD and (T) algorithms scale as :math:`{\cal{O}}(o^2v^4)`; and :math:`{\cal{O}}(o^3v^4)`, where :math:`o` and :math:`v` represent the; number of oribitals that are occupied and unoccupied (virtual) in the; reference function, respectively. By reducing the the size of the virtual; space, the cost of evaluating these terms reduces by a factor of :math:`(v; / v_{FNO})^4`, where :math:`v_{FNO}` represents the number of virtual; orbitals retained after the FNO truncation. The general outline for the FNO procedure in |Psifour| is:. (i) construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM) ; (ii) diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; (iii) based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; (iv) project the virtual-virtual block of the Fock matrix onto the truncated space; (v) construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; (vi) proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; |Psifour| can be found in [DePrince:2013:293]_\",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:2836,reduce,reduces,2836,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['reduce'],['reduces']
Energy Efficiency,"s (NOs) to speed up the evaluation of the triples; contribution to dispersion. By transforming to the MP2 NO basis, we can; throw away virtual orbitals that are expected to contribute little to the; dispersion energy. Speedups in excess of :math:`50 \times` are possible. In; practice, this approximation is very good and should always be applied.; Publications resulting from the use of MP2 NO-based approximations should ; cite the following: [Hohenstein:2010:104107]_. Basic Keywords Controlling MP2 NO Approximations; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__nat_orbs_t2.rst; .. include:: autodir_options_c/sapt__nat_orbs_t3.rst; .. include:: autodir_options_c/sapt__nat_orbs_v4.rst; .. include:: autodir_options_c/sapt__occ_tolerance.rst. .. comment Advanced Keywords Controlling MP2 NO Approximations; .. comment ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. comment .. include:: autodir_options_c/sapt__nat_orbs_t2.rst. .. index:: SAPT; charge-transfer. .. _`sec:saptct`:. Charge-Transfer in SAPT; ^^^^^^^^^^^^^^^^^^^^^^^. It is possible to obtain the stabilization energy of a complex due to; charge-transfer effects from a SAPT computation. The charge-transfer energy ; can be computed with the SAPT module as described by Stone; and Misquitta [Misquitta:2009:201]_. Charge-transfer energies can be obtained from the following calls to the; energy function. ::. energy('sapt0-ct'); energy('sapt2-ct'); energy('sapt2+-ct'); energy('sapt2+(3)-ct'); energy('sapt2+3-ct'); energy('sapt2+(ccd)-ct'); energy('sapt2+(3)(ccd)-ct'); energy('sapt2+3(ccd)-ct'). For now, charge transfer computations are not available with open-shell SAPT0. A SAPT charge-transfer analysis will perform 5 HF computations: the dimer; in the dimer basis, monomer A in the dimer basis, monomer B in the dimer; basis, monomer A in the monomer A basis, and monomer B in the monomer B; basis. Next, it performs two SAPT computations, one in the dimer basis and; one in t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:29908,charge,charge-transfer,29908,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['charge'],['charge-transfer']
Energy Efficiency,"s already built in to |PSIfour|); is the average of MP2 and MP3. The latter is; available through the arbitrary order MPn code and returns all lower energies; along with it in PSI variables. The following is basic code that will compute; and return the MP2.5 energy. ::. def run_mp2_5(name, **kwargs):; ; energy('mp3', **kwargs); e_scf = psi4.get_variable('SCF TOTAL ENERGY'); ce_mp2 = psi4.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = psi4.get_variable('MP3 CORRELATION ENERGY'); ; ce_mp25 = 0.5 * (ce_mp2 + ce_mp3); e_mp25 = e_scf + ce_mp25; ; print """""" MP2.5 total energy: %16.8f\n"""""" % (e_mp25); print """""" MP2.5 correlation energy: %16.8f\n"""""" % (ce_mp25); ; return e_mp25. Compare the above to the method that resides in :source:`psi4/driver/aliases.py`.; The rationale for the changes is indicated in the comments below. ::. def run_mp2_5(name, **kwargs):; lowername = name.lower() # handy variable with name keyword in lowercase; kwargs = kwargs_lower(kwargs) # removes case sensitivity in keyword names; ; # Run detci calculation and collect conventional quantities; energy('mp3', **kwargs); e_scf = psi4.get_variable('SCF TOTAL ENERGY'); ce_mp2 = psi4.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = psi4.get_variable('MP3 CORRELATION ENERGY'); e_mp2 = e_scf + ce_mp2 # reform mp2 and mp3 total energies for printing; e_mp3 = e_scf + ce_mp3; ; # Compute quantities particular to MP2.5; ce_mp25 = 0.5 * (ce_mp2 + ce_mp3); e_mp25 = e_scf + ce_mp25; psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25) # add new method's important results; psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25) # to PSI variable repository; psi4.set_variable('CURRENT CORRELATION ENERGY', ce_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25) # geometry optimizer tracks this variable, permits; # MP2.5 finite difference optimizations ; # build string of title banner and print results; banners = ''; banners += """"""psi4.print_out('\\n')\n""""""; banners += """"""banner(' MP2.5 ')\n""""""; banners += """"""psi4.print_out(",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst:2934,energy,energy,2934,doc/sphinxman/source/quickaddalias.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst,1,['energy'],['energy']
Energy Efficiency,"s and minted; a new tag. * In return, for Add-Ons the |PSIfour| project will:. (1) leave control of their code under your purview. (2) maintain any interfacing code needed. (3) regularly run integration tests between |PSIfour| and your code. (4) build a mostly statically linked conda package so that any; of your users can obtain a pre-built binary distribution through; ``conda install addon --channel psi4``. (5) provide a development sandbox for your code through |PSIfour| plugins. (6) provide conda download counts independent of |PSIfour|. .. _`faq:readoptions`:. How to name keywords in ``psi4/src/read_options.cc``; ----------------------------------------------------. A few guidelines for standardizing option names among modules. * ``TRIPLES`` (not trip), ``TRIPLETS`` (not trip), ``SINGLES`` (not sing),; ``SINGLETS`` (not sing). * ``CONVERGENCE`` (not conv, not converge) and ``TOLERANCE`` (not tol). * Convergence of a method should be governed by an ``E_CONVERGENCE`` for; energy and either a ``D_CONVERGENCE`` for density or a ``R_CONVERGENCE``; for residual/amplitudes. All of these should be doubles- let the input; parser handle the flexible input format. * Diis should have a boolean ``DIIS`` (not do_diis, not use_diis) to turn; on/off diis extrapolation, a ``DIIS_MIN_VECS`` and ``DIIS_MAX_VECS`` for; minimum and maximum number of diis vectors to use, and a ``DIIS_START``; which is the iteration at which to start saving vectors for diis. Not all; modules conform to all these at present, but they're as standardized as; they can be without changing code. * ``AMPS`` (not amplitude, not amp) for amplitudes. * ``NUM_`` (not n) for number (e.g., ``NUM_AMPS_PRINT``, ``MAX_NUM_VECS``,; ``NUM_THREADS``). * Some names that could be split into multiple words are staying as one.; Use ``MAXITER``, ``CACHELEVEL``, ``PUREAM``, ``DERTYPE``. * ``INTS`` (not integrals), also ``OEI`` (not oe_integrals) for; one-electron integrals and ``TEI`` (not te_integrals) for two-electron; integ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst:8247,energy,energy,8247,doc/sphinxman/source/manage_addon.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst,1,['energy'],['energy']
Energy Efficiency,"s determined as eigenvectors of an; effective one-body potential encapsulating the true :math:`N`\ -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn--Sham orbitals. KS-DFT borrows much of the machinery of Hartree--Fock, as is; evident by looking at the energy expression,. .. math::. E_{\mathrm{KS}}; &= \sum_{i} \langle i | \hat h | i \rangle; + \frac 1 2 \sum_{i,j} [ii|jj] + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta] \\; &= D_{\mu\nu}^{\mathrm{T}}\left(T_{\mu\nu} +; V_{\mu\nu}\right) + \frac{1}{2} D_{\mu\nu}^{\mathrm{T}}; D_{\lambda\sigma}^{\mathrm{T}} (\mu\nu|\lambda\sigma) + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta]. Here, :math:`T` is the noninteracting quasiparticle kinetic energy operator,; :math:`V` is the nucleus-electron attraction potential, :math:`D^{\mathrm{T}}`; is the total electron density matrix, and :math:`E_{\mathrm{xc}} [\rho_\alpha,; \rho_\beta]` is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence :math:`E_{\mathrm{xc}}` is often referred to; as simply the exchange-correlation functional (exchange *and* correlation, not; just exchange-type correlation). In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; :math:`\rho_\alpha` or :math:`\rho_\beta`\ ,. .. math:: \rho_\sigma (\vec r_1) = D_{\mu\nu}^{\sigma} \phi_{\mu} (\vec r_1); \phi_\nu (\vec r_1). The most popular variants are Generalized ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:3981,energy,energy,3981,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,2,['energy'],['energy']
Energy Efficiency,"s follows,. * Use DF for the ERI algorithm wherever possible.; * |PSIfour| is a ""tight"" code, meaning we've set the default numerical cutoffs; for integrals, grids, and convergence criteria in such a way that you will often; get many more digits of precision than needed. You may be able to realize; additional speed gains by loosening some of these thresholds. See; :ref:`SCF Convergence <table:conv_scf>` for default convergence criteria.; * Read the literature to determine which functional technology to use. The world; contains far too many papers using B3LYP on noncovalent interactions without a -D. The ""best-practice"" input file for KS-DFT is::. memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; guess sad; }. energy('b3lyp'). .. _`sec:dftdictbuilder`:. Advanced Functional Use and Manipulation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. New DFT functionals can be created from scratch from within the input; file and accessed using the ``dft_functional`` keyword argument in the; energy call::. # DFT Custom Functional. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis sto-3g; dft_spherical_points 302; dft_radial_points 99; reference rks; }. pbe0 = {; ""name"": ""my_PBE0"",; ""x_functionals"": {""GGA_X_PBE"": {""alpha"": 0.75}},; ""x_hf"": {""alpha"": 0.25},; ""c_functionals"": {""GGA_C_PBE"": {}}; }. func_call = energy('SCF', dft_functional=pbe0). # as PBE0 is a pre-defined functional, the call above is equivalent to both below:; func_call = energy('SCF', dft_functional=""PBE0""); func_call = energy('PBE0'). Supported keywords include:. - `name`: string, name of the functional. for custom defined functionals used for printing only.; - `xc_functionals`: dict, definition of a complete (X + C) functional based in LibXC name; - `x_functionals`: dict, definition of exchange functionals using LibXC names; - `c_functionals`: dict, definition of correlation functionals using LibXC names; - `x_hf`: dict, param",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:33262,energy,energy,33262,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"s is at the second order:. .. math:: E_{\mathrm{MBPT}}^{(2)} = - \frac{1}{4} \frac{\langle ij|ab\rangle^2}{\epsilon_a + ; \epsilon_b - \epsilon_i - \epsilon_j}. In the DFMP2 module, the first-order contribution, or ""singles energy"" is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements :math:`f_{ia}` are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF |scf__e_convergence| and/or |scf__d_convergence| keywords; and try again. . To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimme's Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemist's integrals over spatial orbitals). .. math:: E_{\mathrm{MBPT,OS}}^{(2)} = ; - \frac{(ia|jb)(ia|jb)}{\epsilon_a + \epsilon_b - \epsilon_i - \epsilon_j}. and . .. math:: E_{\mathrm{MBPT,SS}}^{(2)} = ; - \frac{[(ia|jb)-(ib|ja)](ia|jb)}{\epsilon_a + \epsilon_b - \epsilon_i - \epsilon_j}. For UHF-MP2 (also labeled as UMP2) and the second-order contribution to; ROHF-MBPT(2) using semicanonical orbitals, the spin-free equations are. .. math:: E_{\mathrm{MBPT,OS}}^{(2)} = ; - \frac{(ia^\alpha|jb^\beta)(ia^\alpha|jb^\beta)}{\epsilon_a + \epsilon_b - \epsilon_i - \epsilon_j}. and . .. math:: E_{\mathrm{MBPT,SS}}^{(2)} = ; - \frac{1}{2}\frac{[(ia^\alpha|jb^\alpha)-(ib^\alpha|ja^\alpha)](ia^\alpha|jb",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:7202,energy,energy,7202,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['energy'],['energy']
Energy Efficiency,"s of |PSIfour| can recognize and; exploit the largest Abelian subgroup of the molecular point group.; Table :ref:`Methods <table:methods>` displays the range of theoretical methods; available in |PSIfour|. Geometry optimization can be performed using either analytic gradients; or energy points. Likewise, vibrational frequencies can be; computed by analytic second derivatives, by finite; differences of analytic gradients, or by finite differences of energies.; |PSIfour| can also compute an extensive list of one-electron properties. For more tables with capabilities details:. * :ref:`Full Capabilities <table:methods>` (first below) lists all methods; * :ref:`Capabilities Breakdown <table:stdsuite>` (second below) lists selected methods by reference, etc.; * :ref:`Module Capabilities <table:managedmethods>` lists selected methods by implementation; * :ref:`Energy <table:energy_gen>`, :ref:`Energy (DFT) <table:energy_dft>`, :ref:`Energy (MRCC) <table:energy_mrcc>`, :ref:`Energy (CFOUR) <table:energy_cfour>` fully list energy target methods; * :ref:`Gradient <table:grad_gen>`, :ref:`Gradient (CFOUR) <table:grad_cfour>` fully list gradient target methods; * :ref:`Frequency <table:freq_gen>` fully lists Hessian target methods. .. _`table:methods`:. .. table:: Summary of theoretical methods available in |PSIfour|. +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | Method [#f10]_ | Reference\ [#f8]_ | Type\ [#f8]_ | Variants\ [#f9]_ |; + + + +------------+------------+------------+------------+; | | | | Canonical | OO | FNO [#f1]_ | DLPNO |; +=========================+===================+===================+============+============+============+============+; | HF | RHF/UHF/ROHF/CUHF | CONV/DF/CD | E/G/H | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DFT | RKS/UKS | CONV/DF/CD | E/G | | | |; +-------------------------+--",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:30089,energy,energy,30089,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['energy'],['energy']
Energy Efficiency,"s using LibXC names; - `c_functionals`: dict, definition of correlation functionals using LibXC names; - `x_hf`: dict, parameters dealing with exact (HF) exchange settings for hybrid DFT; - `c_mp2`: dict, parameters dealing with MP2 correlation for double hybrid DFT; - `dispersion`: dict, definition of dispersion corrections; - `citation`: string, citation for the method, for printing purposes; - `description`: string, description of the method, for printing purposes. The full interface is defined in; :source:`psi4/driver/procrouting/dft/dft_builder.py`. All; standard functionals provided in |PSIfour| are implemented in the; ``*_functionals.py`` files in the same folder. .. literalinclude:: @SFNX_INCLUDE@psi4/driver/procrouting/dft/dft_builder.py; :lines: 29-77; :language: none. One can also use the ``dft_functional`` keyword argument to use the; orbitals generated by DFT for correlated wavefunction methods::. # MP2 with a PBE0 reference computation. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis 6-31G; dft_spherical_points 302; dft_radial_points 99; reference rks; }. mp2_dft = energy(""MP2"", dft_functional=""PBE0""). Note that this would only update the generic Psi variables (e.g., ""CURRENT ENERGY"") and not the MP2 or DFT variables.; Psi4 also supports easy customization and manipulation of DFT functionals. The values of `\alpha` and `\omega` can be adjusted with the |scf__dft_alpha|; and |scf__dft_omega| keywords. For example, for LRC functionals, one can control the fraction of long-range Hartree-Fock and short-range DFA by changing |scf__dft_omega|::. molecule ch2 {; 0 3; C; H 1 R; H 1 R 2 A. R = 1.075; A = 133.93; }. set reference uhf; set guess gwh; set basis cc-pvdz; set e_convergence 8. # Override the default value of omega; set dft_omega 2.0. E = energy('wb97x'). # Revoke the change for later computations if needed; revoke_global_option_changed('DFT_OMEGA'). This feature would be useful after finishing the IP fitting procedure, for example. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:35187,energy,energy,35187,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,2,['energy'],['energy']
Energy Efficiency,"s will perform 5 HF computations: the dimer; in the dimer basis, monomer A in the dimer basis, monomer B in the dimer; basis, monomer A in the monomer A basis, and monomer B in the monomer B; basis. Next, it performs two SAPT computations, one in the dimer basis and; one in the monomer basis. Finally, it will print a summary of the; charge-transfer results::. SAPT Charge Transfer Analysis; ------------------------------------------------------------------------------------------------; SAPT Induction (Dimer Basis) -2.0970 [mEh] -1.3159 [kcal/mol] -5.5057 [kJ/mol]; SAPT Induction (Monomer Basis) -1.1396 [mEh] -0.7151 [kcal/mol] -2.9920 [kJ/mol]; SAPT Charge Transfer -0.9574 [mEh] -0.6008 [kcal/mol] -2.5137 [kJ/mol]. These results are for the water dimer geometry shown above computed with ; SAPT0/aug-cc-pVDZ. . .. index:: ; pair: SAPT; output. Monomer-Centered Basis Computations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The charge-transfer analysis above is carried out by taking the; difference between SAPT induction as calculated in the dimer-centered; basis (*i.e.*, each monomer sees the basis functions on both monomers); vs. the monomer-centered basis (*i.e.*, each monomer utilizes only its; own basis set). It is also possible to run a closed-shell SAPT computation at any; level using only the monomer-centered basis. To do this, simply add; ``sapt_basis='monomer'`` to the energy function, such as ::. energy('sapt2',sapt_basis='monomer'). This procedure leads to faster compuations, but it converges more slowly; towards the complete basis set limit than the default procedure, which uses; the dimer-centered basis set. Hence, monomer-centered basis SAPT; computations are not recommended. The open-shell SAPT0 code is not; compatible yet with monomer-centered computations. Computations with Mid-bonds; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^. SAPT computations with midbonds can be accomplished by adding a third ghost; monomer to the computation. For example ::. molecule dimer {; 0 1; He ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:31565,charge,charge-transfer,31565,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['charge'],['charge-transfer']
Energy Efficiency,"s with prior versions of the code on the order of; 0.01 kcal/mol. See https://github.com/psi4/psi4/issues/1677. .. caution:: August 2021, the number of frozen core orbitals used in the dMP2 computations; is now standardized. Specifically, we now rigorously enforce that the number of core orbitals ; frozen in dimer computations is equal to the sum of frozen orbitals of each monomer. Prior to; this, a discrepency between these values was possible when one of the monomers was (exclusively) ; a charged alkali metal. . .. _`sec:saptfitA`:. .. caution:: May 2022 c. v1.6, the default for |sapt__df_basis_elst|; changed from the value of |sapt__df_basis_sapt| (which itself; defaults to the RI of the orbital basis) to the JKFIT of the orbital; basis. This affects SAPT0 and sSAPT0 computed with the :ref:`SAPT; module<sec:sapt>` (the default code for ``energy(""sapt0"")`` that; can also compute higher-order SAPT). Electostatics, exchange,; and induction terms for SAPT0 and sSAPT0 accessed through; ``energy(""sapt0"")`` or ``energy(""ssapt0"")`` change; the dispersion; term does not change. The SAPT0 and sSAPT0 terms accessed as; subsidiary calculations of higher-order SAPT do not change; that is,; the :ref:`SAPT module<sec:sapt>` breaks the consistency of its SAPT0; results. The reasoning and reward behind this change is that the JKFIT; basis better describes the physics (see :ref:`fitting changes <sec:saptfitB>` ) and the; default SAPT0 results from the :ref:`SAPT module<sec:sapt>` are now; consistent with those from the :ref:`FISAPT module<sec:fisapt>` and; the sapt(dft) module. See :srcsample:`sapt-compare` for an example.; To reproduce former behavior, set |sapt__df_basis_elst| to the; orbital basis set's RI auxiliary basis. Symmetry-adapted perturbation theory (SAPT) provides a means of directly; computing the noncovalent interaction between two molecules, that is, the; interaction energy is determined without computing the total energy of the; monomers or dimer. In addition, SAP",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:3609,energy,energy,3609,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,2,['energy'],['energy']
Energy Efficiency,"s', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:101296,energy,energy,101296,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"s', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'modu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:105010,energy,energy,105010,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"s', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:418015,energy,energy,418015,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"s', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:31347,energy,energy,31347,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"s', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:516065,energy,energy,516065,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"s': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:8646,energy,energy,8646,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"s': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:339544,energy,energy,339544,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"s': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:441886,energy,energy,441886,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"s': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:448929,energy,energy,448929,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"s': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:111291,energy,energy,111291,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"s': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:445769,energy,energy,445769,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"s()`.; So if you run in a single input file a STO-3G FCI followed by a; aug-cc-pVQZ SCF followed by a :py:func:`~psi4.core.print_variables` command, the; last will include :psivar:`SCF TOTAL ENERGY` but not; :psivar:`FCI TOTAL ENERGY`.; The entire dictionary of PSI variables can be obtained through; :py:func:`~psi4.core.get_variables`. .. _`sec:returnvals`:. Return Values; =============. Most of the usual user computation functions (*i.e.*,; :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, and; :py:func:`~psi4.driver.frequency`) return simply the current total energy.; Consult the descriptions of other functions in :ref:`sec:psithonFunc` for; what quantities they return and for what data structures they make; available for post-processing. Many users need only deal with the simple return; form for the computation functions. ::. # E is total energy float; # G is gradient array; # H is hessian array; # wfn is class instance with many computational details. # simple returns; E = energy(...); E = optimize(...); E = frequency(...); G = gradient(...) # used by optimize(); H = hessian(...) # used by frequency(). For more elaborate post-processing of computations, adding; ``return_wfn=True`` keyword argument additionally returns; :py:class:`~psi4.core.Wavefunction`. ::. # power user returns; E, wfn = energy(..., return_wfn=True); E, wfn = optimize(..., return_wfn=True); E, wfn = frequency(..., return_wfn=True); G, wfn = gradient(..., return_wfn=True) # used by optimize(); H, wfn = hessian(..., return_wfn=True) # used by frequency(). # print gradient array and its rms; wfn.gradient.print_out(); print wfn.gradient().rms(). # format output for other programs; molden(wfn, 'mycalc.molden'). # access array in another format; np.array(wfn.hessian()). .. _`sec:loops`:. Loops; =====. Python provides many control structures, any of which can be used within |PSIfour|; input files. For example, to loop over three basis sets, the following code can; be used:. .. code-blo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:11504,energy,energy,11504,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"s-xtpl-freq`, :srcsample:`cbs-xtpl-func`,; :srcsample:`cbs-xtpl-wrapper`, :srcsample:`cbs-xtpl-dict`. .. autofunction:: psi4.cbs(name [, scf_basis, scf_scheme, corl_wfn, corl_basis, corl_scheme, delta_wfn, delta_wfn_lesser, delta_basis, delta_scheme, delta2_wfn, delta2_wfn_lesser, delta2_basis, delta2_scheme, cbs_metadata]); :noindex:. .. note:: As of October 2018, only two explicit ```deltaN_[wfn,basis,scheme]``` sets of options are active; if more delta functions are required, use the ```cbs_metadata``` interface. Also, temporarily extrapolations are performed on differences of target and scf total energies, rather than on correlation energies directly. This doesn't affect the extrapolated values of the particular formulas defined here (though it does affect the betas, which are commented out), but it is sloppy and temporary and could affect any user-defined corl extrapolations. .. index::; pair: cbs(); output. Output; ^^^^^^. At the beginning of a cbs() job is printed a listing of the individual; energy calculations which will be performed. The output snippet below is; from the example job [2] above. It shows first each model chemistry needed; to compute the aggregate model chemistry requested through cbs(). Then,; since, for example, an ``energy('ccsd(t)')`` yields CCSD(T), CCSD, MP2,; and SCF energy values, the wrapper condenses this task list into the second; list of minimum number of calculations which will actually be run. ::. Naive listing of computations required.; scf / aug-cc-pvqz for SCF TOTAL ENERGY; mp2 / aug-cc-pvtz for MP2 CORRELATION ENERGY; mp2 / aug-cc-pvqz for MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz for CCSD(T) CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz for CCSD(T) CORRELATION ENERGY; mp2 / aug-cc-pvdz for MP2 CORRELATION ENERGY; mp2 / aug-cc-pvtz for MP2 CORRELATION ENERGY. Enlightened listing of computations required.; mp2 / aug-cc-pvqz for MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz for CCSD(T) CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst:4495,energy,energy,4495,doc/sphinxman/source/cbs.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst,1,['energy'],['energy']
Energy Efficiency,"s://anaconda.org/psi4/psi4/badges/version.svg)](https://anaconda.org/psi4/psi4) -->. <!--<a href=""https://psi4.slack.com/messages""> <img src=""https://img.shields.io/badge/dev_chat-on_slack-808493.svg"" /></a>; <a href=""mailto:psi4aiqc+slackinvite@gmail.com?subject=request slack invite (incl. who, where, email)""> <img src=""https://img.shields.io/badge/dev_chat-invite-808493.svg"" /></a> -->. <!--[![Anaconda-Server Badge](https://anaconda.org/psi4/psi4/badges/installer/conda.svg)](https://anaconda.org/psi4/psi4) ; [![Anaconda-Server Badge](https://anaconda.org/psi4/psi4/badges/platforms.svg)](https://anaconda.org/psi4/psi4) -->. <!--; | **PR Activity** | ; [![commit activity](https://img.shields.io/github/commit-activity/y/psi4/psi4.svg)](https://github.com/psi4/psi4/graphs/contributors) ; [![issues-pr-closed](https://img.shields.io/github/issues-pr-closed-raw/psi4/psi4.svg)](https://github.com/psi4/psi4/pulls); -->. Psi4 is an open-source suite of *ab initio* quantum chemistry programs; designed for efficient, high-accuracy simulations of; molecular properties. We routinely perform computations with >2500 basis functions on multi-core machines. With computationally demanding portions written in C++, exports; of many C++ classes into Python via Pybind11, and a flexible Python driver, Psi4; strives to be friendly to both users and developers. * **Users' Website** www.psicode.org. * **Downloading and Installing Psi4** https://psicode.org/psi4manual/master/build_faq.html (for the CMake adept, see [CMakeLists.txt](CMakeLists.txt#L27). * **Manual** [http://bit.ly/psi4manual](https://psicode.org/psi4manual/master/index.html) (built nightly from master branch) or https://psicode.org/psi4manual/1.4.0/index.html (last release). * **Tutorial** https://psicode.org/psi4manual/master/tutorial.html for Psithon (``psi4 job.in``), https://psicode.org/psi4manual/master/psiapi.html for PsiAPI (``python job.py``). * **Forum** http://forum.psicode.org. * **Communication & Support** https:/",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/README.md:3781,efficient,efficient,3781,README.md,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/README.md,1,['efficient'],['efficient']
Energy Efficiency,"s; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; .. Citation: Alenaizan, A; Cheney, D. L.; Sherrill, C. D. Electrostatically embedded; .. symmetry adapted pertubration theory. In preparation. Point charges can be added to the interacting subsystems A and B as well; as to the ``linking`` fragment C. Briefly, the interaction between the point charges in A(B); and fragment B(A) enters the SAPT0 interaction energy. It explicitly affects the electrostatics; and induction components, and implicitly affects other SAPT0 components by polarizing the orbitals.; If point charges are present in both subsystems A and B, an additional charge-charge interaction; term is also added to the electrostatic energy. When point charges are assigned to subsystem C, the point; charges in C only polarize the orbitals in both fragment A and B. However, the presence of charges in C does not; directly contribute to the SAPT0 interaction energy. Examples :srcsample:`fsapt-ext-abc` and :srcsample:`fsapt-ext-abc2`; illustrate the use of point charges in F/I-SAPT procedure. Link Orbital Partitioning in I-SAPT; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The assignment of the A-C and B-C linking electron pairs is controlled by the |fisapt__fisapt_link_assignment|; keyword. The default setting ``fisapt_link_assignment c`` assigns the entire pair to the linker C together with; a +1 nuclear charge from the connecting atoms of A/B to preserve the electrical neutrality of each fragment.; However, as already noticed in [Parrish:2015:051103]_, such a partitioning might result in unphysical dipole; moments at the interfragment boundaries. Imagine, for example, that I-SAPT is used to examine the interaction; of two methyl groups connected by some linker fragment. When the linking bonds are assigned to C, the carbon atoms; of the methyl groups are missing electrons on one of their *sp^3* hybrid orbitals and a dipole moment appears.; These dipole moments have been observed to lead, in some cases, to I-SAPT ene",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:16834,charge,charges,16834,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['charge'],['charges']
Energy Efficiency,"s; accomplished by the commands below::. psi4_io.set_specific_path(12, './'); psi4_io.set_specific_retention(12, True). # equivalent to above; psi4_io.set_specific_path(PSIF_INTCO, './'); psi4_io.set_specific_retention(PSIF_INTCO, True). A guide to the contents of individual scratch files may be found at :ref:`apdx:psiFiles`.; To circumvent difficulties with running multiple jobs in the same scratch, the; process ID (PID) of the |PSIfour| instance is incorporated into the full file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously. Elementary Restart; ==================. The |PSIfour| intermediate files use the following naming scheme ::. psi.PID.name.filenumber. where by default, PID is the process number, name the name of the molecule,; and filenumber is listed in :ref:`content <apdx:psiFiles>`. For those modules providing restart capabilities, the previous file can; be provided through the``restart_file`` option ::. energy('scf',restart_file='./psi.PID.name.filenumber'). Only the filenumber is necessary for the driver to appropriately rename the; file and copy it to the scratch directory where |PSIfour| will expect it.; The restart capabilities of a specific method (if any) are found in that method's documentation. To provide multiple files, pass them as arguments of a Python list ::. energy('scf',restart_file=['./file1.filenumber','./file2.filenumber']). Note that the ``restart_file`` options is only available for energy procedures as of now. Executing |PSIfour| with the :option:`psi4 -m` (for; messy) flag will prevent files being deleted at the end of the run::. psi4 -m. The mechanism for restarting HF/DFT calculations is described in details :ref:`here <sec:scfrestart>`. .. _`sec:save_wfn`:. Saving the Wavefunction; =======================. A core object of |PSIfour| is the Wavefunction (short ``wfn``) object ::. energy, wfn = energy('scf',return_wfn=True). This C++/Python object (:py:class:`psi4.core.Wavefu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:5477,energy,energy,5477,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['energy'],['energy']
Energy Efficiency,"sample:`sapt-compare` for an example.; To reproduce former behavior, set |sapt__df_basis_elst| to the; orbital basis set's RI auxiliary basis. Symmetry-adapted perturbation theory (SAPT) provides a means of directly; computing the noncovalent interaction between two molecules, that is, the; interaction energy is determined without computing the total energy of the; monomers or dimer. In addition, SAPT provides a decomposition of the; interaction energy into physically meaningful components: *i.e.*,; electrostatic, exchange, induction, and dispersion terms. In SAPT, the ; Hamiltonian of the dimer is partitioned into contributions from each ; monomer and the interaction. .. math:: H=F_A+W_A+F_B+W_B+V. Here, the Hamiltonian is written as a sum of the usual monomer Fock; operators, :math:`F`, the fluctuation potential of each monomer, :math:`W`, and the; interaction potential, :math:`V`. The monomer Fock operators, :math:`F_A+F_B`, are; treated as the zeroth-order Hamiltonian and the interaction energy is; evaluated through a perturbative expansion of :math:`V`, :math:`W_A`, and :math:`W_B`. ; Through first-order in :math:`V`, electrostatic and exchange interactions are; included; induction and dispersion first appear at second-order in :math:`V`. For; a complete description of SAPT, the reader is referred to the excellent; review by Jeziorski, Moszynski, and Szalewicz [Jeziorski:1994:1887]_. Several truncations of the closed-shell SAPT expansion are available in the SAPT; module of |PSIfour|. The simplest truncation of SAPT is denoted SAPT0; and defined in Eq. :eq:`SAPT0`. .. math:: E_{SAPT0} = E_{elst}^{(10)} + E_{exch}^{(10)} + E_{ind,resp}^{(20)} +; E_{exch-ind,resp}^{(20)} + E_{disp}^{(20)} + E_{exch-disp}^{(20)} + \delta_{HF}^{(2)}; :label: SAPT0. In this notation, :math:`E^{(vw)}` defines the order in :math:`V` and in :math:`W_A+W_B`; the; subscript, :math:`resp`, indicates that orbital relaxation effects are included. .. math:: E_{SAPT2} = E_{SAPT0} + E_{elst,re",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:5213,energy,energy,5213,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"samples at :source:`samples/cfour`. * Set Cfour keywords just like |PSIfour| keywords. The names of keywords; are unchanged beyond a prepended ""cfour\_"". (Though be aware that common; abbreviations like CALC and REF must be fully spelled out as; |cfour__cfour_calc_level| and |cfour__cfour_reference| when used in; |PSIfour|.). * In limited trial cases, keywords nominally directed at non-Cfour modules; are translated into their Cfour counterparts. For example, setting; |scf__reference| will appropriately set |cfour__cfour_reference|. For a; list of applicable keywords, see source of; muster_psi4options. * Consult :ref:`sec:cfourFunctionality` for information on what Cfour; functionality is accessible through |PSIfour|. |PSIfour| for Cfour Users; ~~~~~~~~~~~~~~~~~~~~~~~~~. In the simplest use of the Psi4/Cfour interface, a |PSIfour| input file; can simply ""wrap"" a ``ZMAT`` file and execute :program:`xcfour`. This is; illustrated in the following example::. cfour {; UHF-SCF energy calculation ; N; H 1 R; H 1 R 2 A; ; R=1.008; A=105.0; ; *ACES2(CALC=HF,BASIS=qz2p; MULT=2,REF=UHF; OCCUPATION=3-1-1-0/3-0-1-0; SCF_CONV=12; MEMORY=20000000); }; ; energy('cfour'). Here, the contents of the ``cfour {...}`` block are written directly to a; ``ZMAT`` file. This is joined by a default ``GENBAS`` file; (:source:`psi4/share/psi4/basis/GENBAS`). To preferentially use your own ``GENBAS``,; place it in :envvar:`PATH` or :envvar:`PSIPATH`. The line calling; :py:func:`~psi4.driver.energy` with argument ``'cfour'`` invokes; :program:`xcfour`. After execution of the ``energy('cfour')`` line completes, Cfour results; are read back into |PSIfour| format and are thereafter accessible for; further processing in the input file. See :ref:`sec:cfourOutput` for; details. This storage of results in variables and arrays *in memory* for; the duration of the |PSIfour| instance (as opposed to solely *in files*); is the only advantage thus far incurred by the P4C4 interface. We'll call; this mode of bas",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:5305,energy,energy,5305,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'n",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:159925,energy,energy,159925,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:165261,energy,energy,165261,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'refe",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:395981,energy,energy,395981,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-sh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228947,energy,energy,228947,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:140546,energy,energy,140546,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:142564,energy,energy,142564,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:180988,energy,energy,180988,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:109824,energy,energy,109824,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:112364,energy,energy,112364,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:201323,energy,energy,201323,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:204033,energy,energy,204033,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:208037,energy,energy,208037,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:210562,energy,energy,210562,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:389121,energy,energy,389121,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332960,energy,energy,332960,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:233412,energy,energy,233412,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:236817,energy,energy,236817,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:243117,energy,energy,243117,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:29668,energy,energy,29668,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:179386,energy,energy,179386,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:183321,energy,energy,183321,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:272686,energy,energy,272686,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:233764,energy,energy,233764,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:246338,energy,energy,246338,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:300500,energy,energy,300500,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:307162,energy,energy,307162,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:300856,energy,energy,300856,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:307518,energy,energy,307518,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:237534,energy,energy,237534,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:137487,energy,energy,137487,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:141766,energy,energy,141766,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:7346,energy,energy,7346,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:395623,energy,energy,395623,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229371,energy,energy,229371,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:230007,energy,energy,230007,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"se or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). .. _`table:intercalls`:. .. table:: Permitted nesting of Psithon functions. +-------------------------+-----+-----+-----+-----+--------+; | Caller | Callee |; +-------------------------+-----+-----+-----+-----+--------+; | | cp | db | opt | cbs | energy |; +=========================+=====+=====+=====+=====+========+; | :ref:`sec:cp()` | | --- | Y | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:db()` | --- | | Y | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:opt()` | --- | --- | | Y | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:cbs()` | --- | --- | --- | | Y |; +-------------------------+-----+-----+-----+-----+--------+; | :ref:`sec:energy()` | --- | --- | --- | --- | |; +-------------------------+-----+-----+-----+-----+--------+. - The command db(opt(cbs(energy()))) is actually expressed as ``db(...,; db_func=opt, opt_func=cbs)``. The perhaps expected final argument of; ``cbs_func=energy`` is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (``db_func``; above can be called as just ``func``. Several examples of intercalls; between Python functions can be found in sample input :srcsample:`pywrap-all`. - All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, *e.g.*, **db_mode** and **opt_mode**. - Function intercalls should not be used in sow/reap mode. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst:2755,energy,energy,2755,doc/sphinxman/source/intercalls.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/intercalls.rst,3,['energy'],['energy']
Energy Efficiency,"se`; ==================================================================. .. codeauthor:: Lori A. Burns; .. sectionauthor:: Lori A. Burns. .. autofunction:: psi4.driver.wrapper_database.database(name, db_name [, func, mode, cp, rlxd, symm, zpe, benchmark, tabulate, subset]). .. index:: ; pair: database(); output. Output; ^^^^^^. At the beginning of a database job is printed a listing of the individual system ; calculations which will be performed. The output snippet below is from the example job [1]; above. It shows each reagent required for the subset of database reactions requested.; Note that this is an un-counterpoise-corrected example, and the wrapper is smart enough; to compute only once the monomer whose energy will be subtracted from each of the three dimers. ::. RGC1-HeHe-0.85-dimer; RGC1-He-mono-unCP; RGC1-HeHe-1.0-dimer; RGC1-HeHe-1.5-dimer. At the end of the job, the Requested Energy table is printed that gives the total; energies for the requested model chemistry for each reagent and each reaction, as; well as the stoichiometric weights by which the reagent energies are transformed; into the reaction energy. In this case, the dimer is +1 and the monomer is -2,; indicating the interaction energy is computed from dimer less first monomer; less second (identical) monomer. Error statistics are computed with respect to the reference; energies stored in the database. One of these, the mean absolute deviation, is ; returned by the wrapper as an ordinary Python variable. (For databases; without a stored reference energy, *e.g.*, BASIC, large and meaningless numbers are; printed for error.) The other two tables tabulate the PSI variables requested; through keyword ``tabulate``, in this case the total SCF energy and the number; of atoms in each reagent. ::. ==> Mp2 Total Energy <==. ------------------------------------------------------------------------------------------------------; Reaction Reaction Value Reagent 1 Reagent 2; Value Wt Value Wt; ----------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst:2365,energy,energy,2365,doc/sphinxman/source/db.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst,1,['energy'],['energy']
Energy Efficiency,"sec:cubeprop`:. Generation of Cube Files |w---w| :py:func:`~psi4.driver.cubeprop`; =================================================================. .. codeauthor:: Robert M. Parrish, Francesco A. Evangelista and Peter Kraus; .. sectionauthor:: Francesco A. Evangelista and Peter Kraus. .. autofunction:: psi4.cubeprop(wfn); :noindex:. Introduction; ------------. |PSIfour| has the ability to export cube files that store information about; basis functions, molecular orbitals, the electron density, and; the electrostatic potential (ESP). Cube files store the value of a scalar; quantity on a regular Cartesian grid, and can be visualized with several; visualization programs, some of which are free, like VMD; (http://www.ks.uiuc.edu/Research/vmd/). An example utilization of the code is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True; set cubeprop_tasks ['orbitals']; set cubeprop_orbitals [5,6,-5,-6]. E, wfn = energy('scf', return_wfn=True); cubeprop(wfn). In this example, the :py:func:`~psi4.driver.cubeprop`; call after the ``energy('scf')`` command; executes the cubeprop code. The array |globals__cubeprop_tasks| specifies which; tasks should be executed. In this case the task ``'orbitals'`` generates cube; files for orbitals. The |globals__cubeprop_orbitals| option specifies that cube files; should be generated only for alpha orbitals 5 (HOMO) and 6 (LUMO) and; beta orbitals 5 (indicated as -5) and 6.; If the option |globals__cubeprop_orbitals| is not provided, then cube files are; generated for all orbitals.; After running, the above input will generate four files: ``Psi_a_5_1-B1.cube``,; ``Psi_a_6_4-A1.cube``, ``Psi_a_5_1-B1.cube``, and ``Psi_a_6_4-A1.cube``. The subscript ``a`` in; ``Psi_a_5_1-B1.cube`` indicates an alpha orbital. The first number (``5``) is the index of the; orbital while ``1-B1`` indicates that this is the first orbital that belongs to the B1 irrep.; The file ``Psi_a_5_1-B1.cube`` begi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cubeprop.rst:2091,energy,energy,2091,doc/sphinxman/source/cubeprop.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cubeprop.rst,1,['energy'],['energy']
Energy Efficiency,"set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call, ``energy('sapt0')``. This; call knows to automatically run two monomer computations and a dimer; computation and then use these results to perform the SAPT analysis. The; various energy components are printed at the end of the output, in addition; to the total SAPT0 interaction energy. An explanation of the various; energy components can be found in the review by Jeziorski, Moszynski, and; Szalewicz [Jeziorski:1994:1887]_, and this is discussed in more detail; in the SAPT section later in this manual. For now, we'll note that most of; the SAPT energy components are negative; this means those are attractive; contributions (the zero of energy in a SAPT computation is defined as; non-interacting monomers). The exchange contributions are positive; (repulsive). In this example, the most attractive contribution between; ethylene and acetylene is an electrostatic term of -2.12 |kcalpermol|; (``Elst10,r`` where the 1 indicates the first-order; perturbation theory result with respect to the intermolecular interaction,; and the 0 indicates zeroth-order with respect to intramolecular electron; correlation). The next most attractive contribution is the ``Disp20``; term (2nd order intermolecular dispersion, which looks like an MP2 in which; one excitation is placed on each monomer), contributing an attraction of; -1.21 |kcalpermol|. It is not surprising that the electrostatic; contribut",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:15039,energy,energy,15039,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"shared among modules rather than (or in addition to) being used internally; by the module). We're sticking with |globals__scf_type| and; |globals__mp2_type| defaulting to ``DF``, while most everything higher defaults; to ``CONV``. (Exceptions are MP2.5 and MP3 that default to ``DF``.); In :source:`psi4/driver/procrouting/proc_table.py`, a managed method calls a; ""select"" function rather than a ""run"" function. ::. procedures = {; 'energy': {; 'scf' : run_scf,; 'mp3' : select_mp3,; 'dct' : run_dct,. Then in :source:`psi4/driver/procrouting/proc.py`, the select function runs through; reference, type, and possibly freeze_core to specify the proc; function to call for any able, non-default module (*e.g.*, ``mtd_type ==; 'DETCI'`` ) or able, default module (*e.g.*, ``mtd_typd == ['', 'FNOCC']`` ).; Don't worry about 'else' statements as anything that falls through will be; caught and a readable error generated. ::. def select_mp3(name, **kwargs):; """"""Function selecting the algorithm for a MP3 energy call; and directing to specified or best-performance default modules. """"""; reference = psi4.get_option('SCF', 'REFERENCE'); mtd_type = psi4.get_global_option('MP_TYPE'); module = psi4.get_global_option('QC_MODULE'); # Considering only [df]occ/fnocc/detci. func = None; if reference == 'RHF':; if mtd_type == 'CONV':; if module == 'DETCI':; func = run_detci; elif module == 'FNOCC':; func = run_fnocc; elif module in ['', 'OCC']:; func = run_occ; elif mtd_type == 'DF':; if module in ['', 'OCC']:; func = run_dfocc; elif mtd_type == 'CD':; if module in ['', 'OCC']:; func = run_dfocc; elif reference == 'UHF':; if mtd_type == 'CONV':; if module in ['', 'OCC']:; func = run_occ; elif mtd_type == 'DF':; if module in ['', 'OCC']:; func = run_dfocc; elif mtd_type == 'CD':; if module in ['', 'OCC']:; func = run_dfocc; elif reference == 'ROHF':; if mtd_type == 'CONV':; if module in ['DETCI']:; func = run_detci. if func is None:; raise ManagedMethodError(['select_mp3', name, 'MP_TYPE', mtd_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:7507,energy,energy,7507,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,1,['energy'],['energy']
Energy Efficiency,"shift_cutoff|. Reasonable values for; the shift and convergence threshold are 5.0 and 1e-2,; respectively.; SOSCF [Off by Default]; See :ref:`sec:soscf`. .. _`sec:scferi`:. ERI Algorithms; ~~~~~~~~~~~~~~. The key difficulty in the SCF procedure is treatment of the four-index ERI; contributions to the Fock Matrix. A number of algorithms are available in; |PSIfour| for these terms. The algorithm is selected by the |globals__scf_type|; keyword. Most consist of a single algorithm applied to; the construction of both the Coulomb and Exchange parts; of the Fock Matrix:. PK [:ref:`Default <table:conv_scf>`]; An out-of-core, presorted algorithm using exact ERIs. Quite fast for a; zero-error algorithm if enough memory is available. Integrals are; generated only once, and symmetry is utilized to reduce number of; integrals.; OUT_OF_CORE; An out-of-core, unsorted algorithm using exact ERIs. Overcomes the; memory bottleneck of the current PK algorithm. Integrals are generated; only once, and symmetry is utilized to reduce number of integrals.; DIRECT; A threaded, sieved, integral-direct algorithm, with full permutational; symmetry. This algorithm is brand new, but seems to be reasonably fast; up to 1500 basis functions, uses zero disk (if DF pre-iterations are; turned off), and can obtain significant; speedups with negligible error loss if |scf__ints_tolerance|; is set to 1.0E-8 or so.; DF [:ref:`Default <table:conv_scf>`]; A density-fitted algorithm designed for computations with thousands of; basis functions. This algorithm is highly optimized, and is threaded; with a mixture of parallel BLAS and OpenMP. Note that this algorithm; should use the -JKFIT series of auxiliary bases, *not* the -RI or; -MP2FIT bases. The default guess for auxiliary basis set should work; for most bases, otherwise the |scf__df_basis_scf| keyword can; be used to manually specify the auxiliary basis. This algorithm is; preferred unless either absolute accuracy is required; [:math:`\gtrsim`\ CCSD(T)] or",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:28637,reduce,reduce,28637,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['reduce'],['reduce']
Energy Efficiency,"si4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:173158,energy,energy,173158,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"si4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:61656,energy,energy,61656,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"si4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:79875,energy,energy,79875,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"si4-dir}; >>> conda create -n p4dev python={3.6} psi4-dev [-c psi4/label/dev] -c psi4; >>> conda activate p4dev; >>> psi4-path-advisor; # execute or adapt `cmake` commands above; DepsCache handles python & addons;; # DepsMKLCache handles math; further psi4-path-advisor options handle compilers.; >>> cd objdir && make -j`getconf _NPROCESSORS_ONLN`; >>> make install; --disable-addons Disengage building against the psi4-dev-provided _optional_ link-time Add-Ons like CheMPS2.; --disable-mkl Disengage building against the psi4-dev-provided MKL libraries (`libmkl_rt`).; --intel Engage self-provided icc/icpc/ifort compilers backed by conda's psi4-dev-provided gcc/g++.; --intel-multiarch Engage self-provided icc/icpc/ifort compilers backed by conda's psi4-dev-provided gcc/g++ PLUS compile for multiple architectures (useful for cluster deployments).; --gcc Engage conda's psi4-dev-provided gcc/g++/gfortran compilers. # execute or adapt `cmake` commands above; DepsCache handles python & addons;; # DepsMKLCache handles math; further psi4-path-advisor options handle compilers.; >>> `psi4-path-advisor [your args]` -Dany_addl_cmake_vals=ON; >>> cd objdir && make -j`getconf _NPROCESSORS_ONLN`; >>> make install. Same for Linux/Mac/WSL. Substitute desired python version: 3.6, 3.7, 3.8, 3.9. Fine; to choose your own env name. Include ``-c psi4/label/dev`` to get dependencies to; build current master, as opposed to latest release.; Activate environment, ``conda activate; p4dev``. Go to where you've cloned psi4. Execute ``psi4-path-advisor``.; It gives you a basic cmake command covering python, sphinx, link-time qc; addons, and run-time qc addons. There's a help menu -h that gives more; info. There's other options that will also pre-configure compilers. For; example, at GaTech ``psi4-path-advisor --intel`` works. On Macs with; XCode, ``psi4-path-advisor --clang`` works. Just read the help. For users; who want a minimal build, there's a ``--disable-addons``, but it is generally not; enco",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:11698,adapt,adapt,11698,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['adapt'],['adapt']
Energy Efficiency,"si4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'modu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:303228,energy,energy,303228,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"si4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:41231,energy,energy,41231,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"sieving,; # a natural relationship between ERI and ERI3 for energy integrals is N and N+1.; # * The combination WITH_MAX_AM_ERI=""5;4;3"" and WITH_MAX_AM_ERI3=""6;5;4"" permits any 5Z energy, QZ gradient, and TZ Hessian and is sufficient for the full test suite.; # * Psi4 doesn't know the limits of the Libint2 library to which it's linked. `libint2::Engine::lmax_exceeded` errors will be thrown from l2; nothing from Psi4.; # * If ever use a libint2 with AM>7, edit the `init_spherical_harmonics` line in libmints/integral.cc; # * In selecting AM values, before `grep`ing lots of basis set files, consult the guide at end of this file.; # [Feb 2023]; # * Upon additions to the Libint2 API to allow runtime SHGAUSS switching, Psi4 can use LIBINT2_SHGAUSS_ORDERING=standard|gaussian; # *at Libint source generation time*. At Psi4 build time, it's going to be looking for standard (sss), so you'll have to; # edit the CMake to use a gss.; # * Upon additions to the Libint2 API to allow runtime SHGAUSS switching, Psi4 can no longer be adapted to use a libtool+cmake source.; # * Libraries of different AM are not hot-swappable in a Psi4 build, but they only require a relinking.; # [Jan 2024]; # * As of v1.9, Psi4 can use an upstream v2.8 Libint2. This is a libtool+cmake build, so `find_package(Libint2 ... COMPONENTS ...)` has no components to check. find_package(; Libint2; 2.7.2; CONFIG; COMPONENTS; sss; CXX_ho; impure_sh; ""eri_c4_d0_l${MAX_AM_ERI}"" eri_c3_d0_l4 eri_c2_d0_l4 onebody_d0_l4; eri_c4_d1_l2 eri_c3_d1_l3 eri_c2_d1_l3 onebody_d1_l3; onebody_d2_l3; OPTIONAL_COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ). # If L2 v2.8.1 (1) exported CMake components and (2) libint2-config.cmake actually; # checked, the below is the new find_package call.; #if (${MAX_AM_ERI} GREATER 8); # set(amchar ""llll""); #elseif (${MAX_AM_ERI} EQUAL 7); # set(amchar ""kkkk""); #elseif (${MAX_AM_ERI} EQUAL 6); # set(amchar ""iiii""); #elseif (${MAX_AM_ERI} EQUAL 5); # set(amchar ""hhhh""); #elseif (${MAX_AM_ERI",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt:3355,adapt,adapted,3355,external/upstream/libint2/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt,1,['adapt'],['adapted']
Energy Efficiency,"sithon syntax permit; many commonly performed post-processing procedures to be integrated into; the |PSIfour| suite. . As seen in the neon dimer example from the :ref:`tutorial <sec:tutorial>` section,; the :py:func:`~psi4.driver.driver_nbody.nbody` wrapper provides automatic computation of; counterpoise-corrected interaction energies between two molecules. For; example, ::. energy('mp2', bsse_type='cp'). will compute the counterpoise-corrected density-fitted MP2 interaction energy; between two molecules. |PSIfour| also provides the :py:func:`~psi4.driver.cbs` wrapper,; which automatically computes a complete-basis-set extrapolation (and; automatically sets up the computations with different basis sets required to; do the extrapolation). For example,::. # all equivalent. energy('mp2', corl_basis='cc-pv[dt]z', corl_scheme=corl_xtpl_helgaker_2). energy('mp2/cc-pv[dt]z'). will compute a 2-point Helgaker extrapolation of the correlation energy; using the cc-pVDZ and cc-pVTZ basis sets (with method MP2) and add this; extrapolated correlation energy to the Hartree--Fock energy in the; largest basis (cc-pVTZ). :py:func:`~psi4.driver.cbs` can; be configured behind-the-scenes with explicit arguments, as in the; first example, or the convenience syntax of the equivalent second; example can be used. Another very useful and powerful feature of |PSIfour| is the ability; to compute results on entire databases of molecules at a time,; as provided by the :py:func:`~psi4.driver.wrapper_database.database` wrapper. For example,::. database('mp2', 'S22', cp=1, benchmark='S22B'). will perform DF-MP2 counterpoise-corrected interaction energies; (``cp=1``) on all members of Hobza's S22 database set of van der Waals; dimers, and then compare the results against the S22B benchmark energies.; Built-in databases include S22, A24, HTBH, HBC6, HSG, S22by5, S66, JSCH,; NCB31, S66by8, and NBC10, among others. These wrapper functions are discussed separately in; :ref:`sec:psithonFunc`. Note that th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:16086,energy,energy,16086,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,3,['energy'],['energy']
Energy Efficiency,"sivar:: AAA (T) CORRECTION ENERGY; AAB (T) CORRECTION ENERGY; ABB (T) CORRECTION ENERGY; BBB (T) CORRECTION ENERGY. Spin components of the UHF-based coupled-cluster perturbative triples correction [E_h]. .. psivar:: ACPF DIPOLE. Dipole array [e a0] for the averaged coupled-pair functional level of theory, (3,). .. psivar:: ACPF QUADRUPOLE. Redundant quadrupole array [e a0^2] for the averaged coupled-pair functional level of theory, (3, 3). .. psivar:: ACPF TOTAL ENERGY; ACPF CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the averaged coupled-pair functional level of theory. .. psivar:: ADC ROOT 0 -> ROOT n EXCITATION ENERGY; TD-fctl ROOT 0 -> ROOT n EXCITATION ENERGY. The excitation energy [E_h] from ground state to root *n*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (IN h) -> ROOT n (IN i) EXCITATION ENERGY; TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) EXCITATION ENERGY. The excitation energy [E_h] from the ground state (which is of irrep *h*); to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (h) -> ROOT n (i) EXCITATION ENERGY; TD-fctl ROOT 0 (h) -> ROOT n (i) EXCITATION ENERGY. The excitation energy [E_h] from the ground state (which is of irrep *h*); to root *n* (which is of irrep *i*).; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 -> ROOT n EXCITATION ENERGY - h TRANSITION; TD-fctl ROOT 0 -> ROOT n EXCITATION ENERGY - h TRANSITION. The excitation energy [E_h] from the ground state to root *n*, and the; transition is of irrep *h*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (LEN); TD-fctl ROOT 0 -> ROOT n ELECTRIC TRANSITION DIPOLE MOMENT (LEN). The electric transition dipole moment [e a0] in length gauge, for the transition; from the ground state to root *n*.; DFT functional labeled if canonical. .. psivar:: ADC ROOT 0 (IN h) -> ROOT n (IN i) ELECTRIC TRANSITION DIPOLE MOMENT (LEN); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:2861,energy,energy,2861,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"sivar:`SAPT EXCH-DISP20 ENERGY` resulting from; from same-spin or triplet doubles correlations. .. psivar:: SAPT HF(2) ENERGY ABC(HF). The total Hartree--Fock energy [E_h] of the supersystem implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(0). The Hartree--Fock energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(0). The Hartree--Fock energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(0). The Hartree--Fock energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(0). The Hartree--Fock energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AC(HF). The Hartree--Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY BC(HF). The Hartree--Fock localized energy [E_h] of subsystems B and C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY AB(HF). The Hartree--Fock localized energy [E_h] of subsystems A and B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY A(HF). The Hartree--Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY B(HF). The Hartree--Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY C. The Hartree--Fock energy [E_h] of subsystem C implemented for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term en",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:51900,energy,energy,51900,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"ski:1981:1668]_ for the; wavefunction, :math:`\Psi`. .. math:: \left| \Psi \right \rangle = \sum_\mu^d e^{\hat{T}^\mu} \left| \Phi_\mu \right\rangle c_\mu \, \text{,}. where :math:`\Phi_\mu` are the reference determinants,; :math:`\hat{T}^\mu` are reference-specific excitation operators, and; :math:`c_\mu` are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. .. math:: \hat{T}^\mu = \hat{T}^\mu_1 + \hat{T}^\mu_2. where. .. math:: \hat{T}^\mu_1 = \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_i^a (\mu) \hat{a}^\dagger_a \hat{a}_i. and. .. math:: \hat{T}^\mu_2 =\frac{1}{4} \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_{ij}^{ab} (\mu) \hat{a}^\dagger_b \hat{a}_j \hat{a}^\dagger_a \hat{a}_i . The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,; :math:`\textrm{H}^{eff}_{\mu \nu}`. .. math:: \sum_\nu \textrm{H}^{eff}_{\mu \nu} c_\nu =E c_\nu. where . .. math:: \textrm{H}^{eff}_{\mu \nu} = \left \langle \Phi_\mu \right | \hat{H}e^{\hat{T}^\nu} \left | \Phi_\nu \right \rangle \, \textrm{.}. |PSIfour| currently implements Mk-MRCC with singles and doubles; [Mk-MRCCSD] and Mk-MRCCSD with perturbative triples [Mk-MRCCSD(T)]; as formulated in [Evangelista:2010:074107]_. A companion perturbation; method (Mk-MRPT2) has been developed based on the Mukherjee formalisim; as shown in [Evangelista:2009:4728]_. The current version of the code is limited to reference active spaces; in which all determinants are connected to each other by no more than two; excitations. In practice, this usually means that the active space can have; at most two particles, or at most two holes. Examples would include ; CAS(2,2), CAS(2,8), CAS(4,3), etc., where CAS(n,m) refers to a; complete-active-space configuration interaction (CASCI) referen",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psimrcc.rst:2937,energy,energy,2937,doc/sphinxman/source/psimrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psimrcc.rst,1,['energy'],['energy']
Energy Efficiency,"some kinetic energy term via the implicit one-body; Kohn--Sham orbitals. KS-DFT borrows much of the machinery of Hartree--Fock, as is; evident by looking at the energy expression,. .. math::. E_{\mathrm{KS}}; &= \sum_{i} \langle i | \hat h | i \rangle; + \frac 1 2 \sum_{i,j} [ii|jj] + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta] \\; &= D_{\mu\nu}^{\mathrm{T}}\left(T_{\mu\nu} +; V_{\mu\nu}\right) + \frac{1}{2} D_{\mu\nu}^{\mathrm{T}}; D_{\lambda\sigma}^{\mathrm{T}} (\mu\nu|\lambda\sigma) + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta]. Here, :math:`T` is the noninteracting quasiparticle kinetic energy operator,; :math:`V` is the nucleus-electron attraction potential, :math:`D^{\mathrm{T}}`; is the total electron density matrix, and :math:`E_{\mathrm{xc}} [\rho_\alpha,; \rho_\beta]` is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence :math:`E_{\mathrm{xc}}` is often referred to; as simply the exchange-correlation functional (exchange *and* correlation, not; just exchange-type correlation). In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; :math:`\rho_\alpha` or :math:`\rho_\beta`\ ,. .. math:: \rho_\sigma (\vec r_1) = D_{\mu\nu}^{\sigma} \phi_{\mu} (\vec r_1); \phi_\nu (\vec r_1). The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; :math:`\gamma_{\alpha\alpha}`, :math:`\gamma_{\alpha\beta}` or; :math:`\gamma_{\beta\beta}` to build an inhomogeneity; parameter. .. math:: \gamma_{\alpha\alpha} (\vec r_1) = \nabla \rho_{\alpha} (\vec r_1) \c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:4287,energy,energy,4287,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"specific; details of the ``.pymol`` files require some small tweaks to permit; publication-quality renderings. .. image:: /VA.png; :align: center; :scale: 50%; :alt: ESP of monomer A. Adding Point Charges to F/I-SAPT Computations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; .. Citation: Alenaizan, A; Cheney, D. L.; Sherrill, C. D. Electrostatically embedded; .. symmetry adapted pertubration theory. In preparation. Point charges can be added to the interacting subsystems A and B as well; as to the ``linking`` fragment C. Briefly, the interaction between the point charges in A(B); and fragment B(A) enters the SAPT0 interaction energy. It explicitly affects the electrostatics; and induction components, and implicitly affects other SAPT0 components by polarizing the orbitals.; If point charges are present in both subsystems A and B, an additional charge-charge interaction; term is also added to the electrostatic energy. When point charges are assigned to subsystem C, the point; charges in C only polarize the orbitals in both fragment A and B. However, the presence of charges in C does not; directly contribute to the SAPT0 interaction energy. Examples :srcsample:`fsapt-ext-abc` and :srcsample:`fsapt-ext-abc2`; illustrate the use of point charges in F/I-SAPT procedure. Link Orbital Partitioning in I-SAPT; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The assignment of the A-C and B-C linking electron pairs is controlled by the |fisapt__fisapt_link_assignment|; keyword. The default setting ``fisapt_link_assignment c`` assigns the entire pair to the linker C together with; a +1 nuclear charge from the connecting atoms of A/B to preserve the electrical neutrality of each fragment.; However, as already noticed in [Parrish:2015:051103]_, such a partitioning might result in unphysical dipole; moments at the interfragment boundaries. Imagine, for example, that I-SAPT is used to examine the interaction; of two methyl groups connected by some linker fragment. When the linking bonds",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:16522,charge,charges,16522,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,2,['charge'],['charges']
Energy Efficiency,"specified through |optking__interfrag_coords|); See `here <DimerSection_>` for two examples of their use. Basic Keywords; ^^^^^^^^^^^^^^. .. include:: autodir_options_c/optking__opt_type.rst; .. include:: autodir_options_c/optking__step_type.rst; .. include:: autodir_options_c/optking__geom_maxiter.rst; .. include:: autodir_options_c/optking__g_convergence.rst; .. include:: autodir_options_c/optking__full_hess_every.rst. .. index:: geometry optimization; minima; .. _`sec:optkingExamples`:. Optimizing Minima; ^^^^^^^^^^^^^^^^^. First, define the molecule and basis in the input. ::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 105.0; }; ; set basis dz. Then the following are examples of various types of calculations that can be completed. * Optimize a geometry using default methods (RFO step)::. optimize('scf'). * Optimize using Newton-Raphson steps instead of RFO steps::. set step_type nr; optimize('scf'). * Optimize using finite differences of energies instead of gradients::. optimize('scf', dertype='energy'). * Optimize while limiting the initial step size to 0.1 au::. set intrafrag_step_limit 0.1; optimize('scf'). * Optimize while always limiting the step size to 0.1 au:. .. code-block:: none. set {; intrafrag_step_limit 0.1; intrafrag_step_limit_min 0.1; intrafrag_step_limit_max 0.1; }. optimize('scf'). * Optimize while calculating the Hessian at every step:. .. code-block:: none. set full_hess_every 1; optimize('scf'). .. code-block:: none; ; import optking; . Hessian; ^^^^^^^. If Cartesian second derivatives are available, optking can read them; and transform them into internal coordinates to make an initial Hessian in; internal coordinates. Otherwise, several empirical Hessians are available,; including those of Schlegel [Schlegel:1984:333]_ and Fischer and Almlof; [Fischer:1992:9770]_.; Either of these or a simple diagonal Hessian may be selected using the ; |optking__intrafrag_hess| keyword. All the common Hessian update schemes are available. For formulas, see; Sch",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:4301,energy,energy,4301,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['energy'],['energy']
Energy Efficiency,"ss', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:499756,energy,energy,499756,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ss', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'refere",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:24154,energy,energy,24154,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ssian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:272145,energy,energy,272145,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"st. ::. molecule h2 {; H; H 1 0.9; }; ; molecule h {; H; }; ; activate(h2); set basis cc-pvdz; set reference rhf; energy('scf') # on H2; ; clean(). activate(h); set basis cc-pvdz; set reference uhf; energy('scf') # on H. # --------------------------------------; # equivalent to previous input ends here. clean(). set reference rhf; energy('scf', molecule=h2) # on H2. :ref:`sec:jobControl` provides more details about the job control; and calculation keywords used in the above examples. .. index:: ; single: Ghost Atoms; single: molecule; ghost; .. _`sec:ghosts`:. Ghost Atoms; ===========. While many common computations, particularly SAPT and counterpoise corrections, can; be greatly simplified using the notation described in :ref:`sec:fragments`,; manual specification of ghost atoms is sometimes required. Either ::. molecule he2 {; He; Gh(He) 1 2.0; }. or ::. molecule he2 {; He; @He 1 2.0; }. will generate a helium dimer with the second atom ghosted, *i.e.*, possessing; basis functions but no electrons or nuclear charge. See :srcsample:`dfmp2-1`; and :srcsample:`ghosts` for a demonstration of both mechanisms for specifying; ghost atoms. .. index:: ; single: Isotopes; single: molecule; isotope; .. _`sec:isotope`:. Isotopic Substitution; =====================. .. caution:: Use of isotopic substitution in |PSIfour| is not well; developed, and the syntax is subject to change. At present, isotopes can only be specified at creation-time of the molecule. The syntax for a deuterium- and tritium-substituted water is below. Note; that asymmetric isotopic substitution such as this *will* change the; molecule's point group symmetry. ::. molecule dto {; units au; O 0.00000000 0.00000000 0.00000000; H@2.014101779 0.00000000 1.93042809 -1.10715266; H_label@3.01604927 0.00000000 -1.93042809 -1.10715266; }. The masses used by |PSIfour| can be found at; :source:`psi4/include/psi4/masses.h`. See :srcsample:`freq-isotope2` for about; the only use to which isotopologues can presently be pu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:8322,charge,charge,8322,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['charge'],['charge']
Energy Efficiency,"starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (h) TOTAL ENERGY; TD-fctl ROOT n (h) TOTAL ENERGY. The total electronic energy [E_h] for the requested theory and root *n*, which is of irrep *h* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n TOTAL ENERGY - h TRANSITION; TD-fctl ROOT n TOTAL ENERGY - h TRANSITION. The total electronic energy [E_h] for the requested theory and root *n*, and the transition is of irrep *h*, (*n* starts at 0). .. psivar:: CCname ROOT n CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (IN h) CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n* within irrep *h* (*n* starts at 0). .. psivar:: CCname ROOT n (h) CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n*, which is of irrep *h* (*n* starts at 0). .. psivar:: CCname ROOT n CORRELATION ENERGY - h TRANSITION. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n*, and the transition is of irrep *h*, (*n* starts at 0). .. psivar:: CCname ROOT n DIPOLE. Dipole array [e a0] for the requested coupled cluster level of theory and root *n* (*n* starts at 0), (3,). .. psivar:: CCname ROOT n (IN h) DIPOLE. Dipole array [e a0] for the requested coupled cluster level of theory and root *n* within irrep *h* (*n* starts at 0), (3,). .. psivar:: CCname ROOT n (h) DIPOLE. Dipole array [e a0] for the requested coupled cluster level of theory and root *n*, which is of irrep *h* (*n* starts at 0), (3,). .. psivar:: CCname ROOT n DIPOLE - h TRANSITION. Dipole array [e a0] for the requested coupled cluster level of theory and root *n*, and the transition is of irrep *h*, (*n* starts at 0), (3,). .. psivar:: CCname ROOT n QUADRUPOLE. Redundant quad",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:11090,energy,energy,11090,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:129830,energy,energy,129830,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'ener",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:155230,energy,energy,155230,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:202609,energy,energy,202609,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:336040,energy,energy,336040,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:343045,energy,energy,343045,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:419842,energy,energy,419842,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:489510,energy,energy,489510,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:494820,energy,energy,494820,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:496825,energy,energy,496825,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:83842,energy,energy,83842,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:339902,energy,energy,339902,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:442244,energy,energy,442244,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:449287,energy,energy,449287,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"straight from USOs to MOs. * ``MO`` (Molecular Orbitals): The combination of OSOs that diagonalizes; the Fock Matrix, so each basis function is a Hartree-Fock (or Kohn-Sham); molecular orbital. The number of OSOs and MOs is always the same. MOs are; orthonormal. * ``LO`` (Localized Orbitals): Localized occupied orbitals, a different; combination of the occupied molecular orbitals which enhances spatial; locality. LOs do not diagonalize the occ-occ block of the Fock Matrix, but; remain orthonormal to each other and the virtual space. .. _`faq:orbdims`:. How to name orbital dimensions; ------------------------------. There are a number of different names used to refer to the basis set size.; These may seem redundant, but they have subtly different meanings, as; detailed below. A calculation can use either pure (5D, 7F, 9G, etc.) basis functions or; Cartesian (6D, 10F, 15G, etc.), as dictated by the input file / basis set; specification. Also, the basis can be represented in terms of atomic; orbitals (AO) or symmetry-adapted orbitals (SO). Further complications; come from the fact that a nearly linearly-dependent basis set will have; functions removed from it to prevent redundancies. With all of these; factors in mind, here are the conventions used internally:. * nao |w---w| The number of atomic orbitals in Cartesian representation.; * nso |w---w| The number of atomic orbitals but in the pure representation if the current basis uses pure functions, number of Cartesian AOs otherwise.; * nbf |w---w| The number of basis functions, which is the same as nso.; * nmo |w---w| The number of basis functions, after projecting out redundancies in the basis. When molecular symmetry is utilized, a small array of sizes per irrep is; usually allocated on the stack, and is named by augmenting the name above; with a pi (per-irrep), e.g. nmopi. Note that the number of irreps is; always the singular nirrep, and that the index variable h is always used; in a for-loop traverse of irreps. ..",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:13327,adapt,adapted,13327,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,1,['adapt'],['adapted']
Energy Efficiency,"stry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions. Generalized Kohn--Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as ""implicit"" density; functionals, as the orbitals are themselves functionals of the Kohn--Sham; potential. The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree--Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that the term; ""exact-exchange"" refers to the Hartree--Fock being the exact exchange energy of; the noninteracting quasiparticles, not the true electrons. Therefore, adding; 100% exact exchange is not physically reasonable, and will often lead to; extremely poor results. The fraction of exact-exchange, denoted :math:`\alpha`,; is often determined by adiabatic or heuristic arguments and is typically around; 25%. The addition of exact exchange borrows another piece from an existing; Hartree--Fock code, with the caveat that Hartree--Fock exchange is often much more; costly to obtain than the Coulomb matrix. The global hybrid ansatz has become; exceedingly popular, with functionals such as the ubiquitous B3LYP often; producing absurdly accurate results. A more advanced GKS functional technology which has developed enormous; popularity in recent years is the Long-Range Corrected (LRC) ansatz. LRC; recognizes that the local DFA is potentially exact at short range in the; exchange hole, and that the hybrid-exchange energy of the noninteracting; quasiparticles is al",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:9920,energy,energy,9920,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"sum_{i,j} [ii|jj] + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta] \\; &= D_{\mu\nu}^{\mathrm{T}}\left(T_{\mu\nu} +; V_{\mu\nu}\right) + \frac{1}{2} D_{\mu\nu}^{\mathrm{T}}; D_{\lambda\sigma}^{\mathrm{T}} (\mu\nu|\lambda\sigma) + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta]. Here, :math:`T` is the noninteracting quasiparticle kinetic energy operator,; :math:`V` is the nucleus-electron attraction potential, :math:`D^{\mathrm{T}}`; is the total electron density matrix, and :math:`E_{\mathrm{xc}} [\rho_\alpha,; \rho_\beta]` is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence :math:`E_{\mathrm{xc}}` is often referred to; as simply the exchange-correlation functional (exchange *and* correlation, not; just exchange-type correlation). In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; :math:`\rho_\alpha` or :math:`\rho_\beta`\ ,. .. math:: \rho_\sigma (\vec r_1) = D_{\mu\nu}^{\sigma} \phi_{\mu} (\vec r_1); \phi_\nu (\vec r_1). The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; :math:`\gamma_{\alpha\alpha}`, :math:`\gamma_{\alpha\beta}` or; :math:`\gamma_{\beta\beta}` to build an inhomogeneity; parameter. .. math:: \gamma_{\alpha\alpha} (\vec r_1) = \nabla \rho_{\alpha} (\vec r_1) \cdot \nabla; \rho_{\alpha} (\vec r_1). .. math:: \gamma_{\alpha\beta} (\vec r_1) = \nabla \rho_{\alpha} (\vec r_1) \cdot \nabla; \rho_{\beta} (\vec r_1). where,. .. math:: \nabla \rho_{\sigma} (\vec r_1) = 2 D_{\mu\nu}^{\sigma} \phi_{\mu}; (\vec r_1) \nabla \phi_{\nu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:4648,energy,energy,4648,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"t (1); target_Y is defined; similarly. For example, we may use dpd_contract444() to evaluate the; following contraction found in the T2 amplitude equations; from coupled cluster theory:. tijab = tijcd <ab||cd>. (A summation over the repeated indices c and d is implied.) Assuming; that the <ab|cd> integrals exist on disk in a (pqnum,rsnum) =; (5,5) format and the right-hand-side T amplitudes exist on disk in a; (2,7) format (with i>j and c>d), the following code block will; evaluate this contraction (ignoring the complications of spin; factors):; #include <dpd.h>. dpdbuf4 T2, T2new, Ints;. dpd_buf4_init(&T2, T2FILE, 0, 2, 7, 2, 7, 0, ""T2(ij,ab)"");; dpd_buf4_init(&T2new, T2newFile, 0, 2, 7, 2, 7, 0, ""T2new(ij,ab)"");; dpd_buf4_init(&Ints, INTSFILE, 0, 7, 7, 5, 5, 1, ""<ab|cd> integrals"");; dpd_contract444(&T2, &Ints, &T2new, 0, 1, 1.0, 1.0);; dpd_buf4_close(&Ints);; dpd_buf4_close(&T2new);; dpd_buf4_close(&T2);. The dpd_contract444() function will allocate memory for a; single symmetry block of each of the two factors (T2 and; Ints) as well as for the target (T2new). It then; reads the data from disk for each buffer (including antisymmetrization; and index packing for Ints), and then carries our the matrix; multiplication. The current symmetry block of the product; T2new is then written out to disk and the memory for all; three buffers is deallocated. This procedure is repeated for all; irreps.; int dpd_contract424(dpdbuf4 *X, dpdfile2; *Y, dpdbuf4 *Z, int sum_X, int sum_Y, int trans_Z, double alpha,; double beta): This function evaluates contractions of; the form alpha * X(pq,rm) * Y(m,s) = beta * Z(pq,rs). The; summation index on X and Y is identified using; sum_X and sum_Y, respectively, and the function; automatically takes care of any sorting needed to shift the indices; into appropriate ordering for matrix multiplication. In addition, the; target, Z may be transposed using the trans_Z; flag.; int dpd_contract244(dpdfile2 *X, dpdbuf4; *Y, dpdbuf4 *Z, int sum_X, int",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html:18212,allocate,allocate,18212,doc/sphinxman/source/attic/libdpd.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html,1,['allocate'],['allocate']
Energy Efficiency,"t', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:155848,energy,energy,155848,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"t'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:516831,energy,energy,516831,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"t'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:101873,energy,energy,101873,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"t`` | M-D | arbitrary order derivative of 1/R supported |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Multipole Moments | ``MultipoleInt`` | M-D | arbitrary order multipoles supported, including nuclear gradients |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Nabla Operator | ``NablaInt`` | Libint2 | using first derivative of ``libint2::Operator::overlap`` |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Overlap | ``OverlapInt`` | Libint2 | |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Nuclear Coulomb Potential | ``PotentialInt`` | Libint2 | assumes nuclear centers/charges as the potential |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | PCM Potential | ``PCMPotentialInt`` | Libint2 | parallelized over charge points |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Quadrupole | ``QuadrupoleInt`` | Libint2 | |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Traceless Quadrupole | ``TracelessQuadrupoleInt`` | Libint2 | |; +----------------------------+----------------------------+-----------------+--------------------------------------------------------------------+; | Relativistic Potential | ``RelPotentialInt`` | Libint2 | |; +----------------------------+----------------------------+-----------------+---------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:22189,charge,charges,22189,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['charge'],['charges']
Energy Efficiency,"tails and; :srcsample:`cfour/mints5` for examples. When a |PSIfour|-style molecule is; supplied, its geometry is written to ``ZMAT`` in Cartesian form and the; |cfour__cfour_coordinates|\ =CARTESIAN, |cfour__cfour_units|\ =ANGSTROM,; |cfour__cfour_charge|, and |cfour__cfour_multiplicity| keywords are set; appropriately in the ``*CFOUR(...)`` directive. .. warning:: There exist molecules (*e.g.*, allene) where the; inertial frame is not unique (planes along atoms or between; atoms). The orientation reconciling machinery currently does not; handle these cases and will fail with ""Axis unreconcilable between; QC programs"". I will get to this soon. Whenever the molecule is supplied in |PSIfour| format, the job control; keywords must be too. All :ref:`Cfour keywords <apdx:cfour>` are the usual; ones, prepended by ``cfour_`` to avoid any possible name conflicts. As; detailed in :ref:`sec:jobControl`, setting keywords is flexible in; format. The previous example translates to::. # UHF-SCF energy calculation . molecule {; 0 2 # multiplicity from the MULT keyword; N; H 1 R; H 1 R 2 A; ; R=1.008; A=105.0; }; ; set {; cfour_CALC_level=HF # only full keyword names allowed; cfour_BASIS=qz2p; #MULT=2 # now in molecule {...} block; cfour_REFerence=UHF; cfour_OCCUPATION [[3, 1, 1, 0], [3,0,1,0] ] # arrays in python notation; cfour_SCF_CONV=12; cfour_MEMORY=20000000; }; ; energy('cfour'). Here, note that none of capitalization, equals sign, or whitespace matter; for the keyword commands. Specification of strings and integers requires no; translation; :ref:`booleans <op_c_boolean>` have extended freedom of; format; arrays must be translated into Python-style (square-bracket; bounded and comma delimited) of appropriate dimension. There are many; sample inputs in :source:`tests/cfour/` starting with ``sp-`` that take; examples from the Cfour manual and first run them in sandwich mode and; then run them as translated into |PSIfour| format. .. note:: |PSIfour| only recognizes keywords by t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:7617,energy,energy,7617,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"tal electonic energy [E_h] . Not unique because orbital spaces vary. .. psivar:: EFP DISP ENERGY; EFP ELST ENERGY; EFP EXCH ENERGY; EFP IND ENERGY. Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [E_h] for EFP/EFP; computations. The sum of these four components yields; :psivar:`EFP TOTAL ENERGY`. .. psivar:: EFP TOTAL ENERGY. The total electronic interaction energy [E_h] for EFP/EFP computations. .. psivar:: EFP TORQUE. The torque, not gradient for EFP/EFP computations. .. psivar:: ENTHALPY. Total enthalpy H [E_h] at given temperature. .. psivar:: ENTHALPY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the enthalpy at given temperature. .. psivar:: ESP AT CENTER n. Property of electrostatic potential [E_h / e] at location, usually atom center, n. .. psivar:: FCI TOTAL ENERGY; FCI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the full configuration interaction level of theory. .. psivar:: GIBBS FREE ENERGY. Total Gibbs free energy [E_h], free enthalpy at given temperature. .. psivar:: GIBBS FREE ENERGY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the free enthalpy at given temperature. .. psivar:: GRID ELECTRONS TOTAL; GRID ELECTRONS ALPHA; GRID ELECTRONS BETA. The number of electrons integrated by the xc quadrature grid. .. psivar:: HF TOTAL ENERGY. The total electronic energy [E_h] for the Hartree--Fock method, without; any dispersion correction; the first three (or four, since; :math:`E_{xc} = 0`) terms in Eq. :eq:`SCFterms`. Quantity :math:`E_{\text{HF}}`; in Eq. :eq:`SCFterms`. .. psivar:: HF KINETIC ENERGY. The total kinetic energy [E_h] of the Hartree--Fock method. .. psivar:: HF POTENTIAL ENERGY. The total potential energy [E_h] of the Hartree--Fock method. .. psivar:: HF VIRIAL RATIO. The virial ratio of the Hartree--Fock method. Only ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:35030,energy,energy,35030,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"tal electronic gradient [E_h/a0] of the Hartree--Fock method, ({nat}, 3). .. psivar:: HF DIPOLE GRADIENT. The derivative of the Hartree--Fock method dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: HF TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the Hartree-Fock method, (3 * {nat}, 3 * {nat}). .. psivar:: LCCD TOTAL ENERGY; LCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster doubles level of theory. .. psivar:: LCCSD TOTAL ENERGY; LCCSD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster singles and doubles level of theory. .. psivar:: LCC2 (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CC2 level of theory. .. psivar:: LCCSD (+LMP2) TOTAL ENERGY. The total electronic energy [E_h] for the local CCSD level of theory. .. psivar:: LEFT-RIGHT CC2 EIGENVECTOR OVERLAP; LEFT-RIGHT CC3 EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD EIGENVECTOR OVERLAP; LEFT-RIGHT CCSD(T) EIGENVECTOR OVERLAP. The overlap between the right-hand coupled coupled cluster eigenvector and the; left-hand eigenvector from the coupled cluster lambda (response) equations. .. psivar:: LOWDIN CHARGES. Property of partial atomic charges [e] by the method of L\ |o_dots|\ wdin, (nat,). .. psivar:: MAYER INDICES. Property of Mayer bond indices, (nat, nat). .. psivar:: MBIS CHARGES; MBIS DIPOLES; MBIS OCTUPOLES; MBIS QUADRUPOLES. Per-atom charges [e], dipoles [e a0], quadrupoles [e a0^2], and octupoles [e a0^3]; resulting from partitioning the total electron density through the Minimal Basis; Iterative Stockholder (MBIS) Charge Partitioning Scheme. .. psivar:: MBIS FREE ATOM n VOLUME. Free-atom volume [a0^3] for atom n, computed using the MBIS charge; partitioning scheme. Free atom densities are computed at the sa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:37166,energy,energy,37166,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"tatus': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:7524,energy,energy,7524,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"tatus': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:1879,energy,energy,1879,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"tatus': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'm",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:4489,energy,energy,4489,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"tatus': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:514941,energy,energy,514941,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"tatus': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:23957,energy,energy,23957,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"tci should work (*i.e.*, not; {\tt uhf}), but there should be no reason not to use {\tt rhf}. DERTYPE = string; At present, only energies ({\tt none}) are supported; future; releases will implement gradients ({\tt first}). CONVERGENCE = integer; Convergence desired on the orbital gradient. Convergence is achieved when; the RMS of the error in the orbital gradient is less than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing the {\tt CONVERGENCE} keywords within separate sections of; input, such as {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. RESTRICTED\_UOCC = (integer array); Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will be no excitations.; These orbitals are optimized in the MCSCF.; The default is the zero vector. FROZEN\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are literally frozen and are not optimized in the MCSCF;; usually one wishes to use {\tt RESTRICTED\_DOCC} instead.; The current version of the program does not allow both; {\tt RESTRICTED\_DOCC} and {\tt FROZEN\_DOCC}.; Should be ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:5164,energy,energy,5164,doc/sphinxman/source/attic/detcas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst,1,['energy'],['energy']
Energy Efficiency,"tdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'referen",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:528177,energy,energy,528177,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"tdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:174685,energy,energy,174685,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"te': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:170448,energy,energy,170448,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"te': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:478726,energy,energy,478726,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"te': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:277646,energy,energy,277646,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"te': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:341396,energy,energy,341396,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"te': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:516263,energy,energy,516263,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"te': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:167607,energy,energy,167607,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"te': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:102052,energy,energy,102052,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"te': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:488221,energy,energy,488221,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"te': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:327996,energy,energy,327996,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"te': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:7078,energy,energy,7078,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"te': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:440590,energy,energy,440590,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"te': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:327543,energy,energy,327543,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"te, *not* wB97X-D), SOGGA,; DFDL, and M05. Theory; ~~~~~~. Generalized Kohn--Sham Density Functional Theory (KS-DFT) [Kohn:1965:A1133]_ [Parr:1989]_ is one of the primary; workhorses of modern computational chemistry due to its phenomenal accuracy/cost; ratio. Pure Kohn--Sham DFT is built on the Hohenberg--Kohn theorems [Hohenberg:1964:136]_ which states: A) the energy is a universal; functional of the one-particle electronic density and B) there exists a set of; noninteracting quasiparticles with the same density as the true set of; electrons, with the quasiparticle states determined as eigenvectors of an; effective one-body potential encapsulating the true :math:`N`\ -body quantum; effects. The former idea allows the electronic density to be dealt with instead; of the much more complicated wavefunction, while the latter allows for the; treatment of the troublesome kinetic energy term via the implicit one-body; Kohn--Sham orbitals. KS-DFT borrows much of the machinery of Hartree--Fock, as is; evident by looking at the energy expression,. .. math::. E_{\mathrm{KS}}; &= \sum_{i} \langle i | \hat h | i \rangle; + \frac 1 2 \sum_{i,j} [ii|jj] + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta] \\; &= D_{\mu\nu}^{\mathrm{T}}\left(T_{\mu\nu} +; V_{\mu\nu}\right) + \frac{1}{2} D_{\mu\nu}^{\mathrm{T}}; D_{\lambda\sigma}^{\mathrm{T}} (\mu\nu|\lambda\sigma) + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta]. Here, :math:`T` is the noninteracting quasiparticle kinetic energy operator,; :math:`V` is the nucleus-electron attraction potential, :math:`D^{\mathrm{T}}`; is the total electron density matrix, and :math:`E_{\mathrm{xc}} [\rho_\alpha,; \rho_\beta]` is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence :math:`E_{\mathrm{xc}}` is often referred to; as simply the exchange-correlation functional (exchange *and* correlation, not; just exchange-type correlation). In",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:3548,energy,energy,3548,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['energy'],['energy']
Energy Efficiency,"ted for F/I-SAPT. .. psivar:: SAPT HF(2) ENERGY HF. The FI-SAPT Hartree--Fock interaction energy [E_h] implemented for F/I-SAPT. .. psivar:: SAPT ELST12,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY. An exchange-classified SAPT term energy [E_h] implemented for SAPT2. .. psivar:: SAPT IND22 ENERGY; SAPT EXCH-IND22 ENERGY. An induction-classified SAPT term energy [E_h] implemented for SAPT2. .. .. psivar:: SAPT HF TOTAL ENERGY; .. .. psivar:: SAPT CT ENERGY. .. psivar:: SAPT DISP21 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT EST.DISP22(T) ENERGY. Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT DISP2(CCD) ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY. Dispersion-classified coupled-cluster-based SAPT term energy [E_h] implemented for SAPT2+. .. psivar:: SAPT ELST13,R ENERGY. An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2+(3). .. psivar:: SAPT IND30,R ENERGY; SAPT IND-DISP30 ENERGY; SAPT EXCH-IND30,R ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY. A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. See :ref:`sec:saptinf`. .. psivar:: SAPT DISP30 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY. A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+3. .. psivar:: SAPT ALPHA. SAPT exchange-scaling alpha. .. psivar:: SAPT CT ENERGY. SAPT charge-transfer energy. .. psivar:: SAPT HF TOTAL ENERGY. An induction-classified correction from HF implemented for SAPT0.; Value varies by SAPT level. .. psivar:: SAPT MP2 CORRELATION ENERGY. An induction-classified correction from MP2 implemented for SAPT2.; Value vari",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:53296,energy,energy,53296,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"ted functionalities where results from Cfour are collected; into |PSIfour| data objects. .. rubric:: Implemented. * Single-point :py:func:`~psi4.driver.energy` commands for :ref:`ground state; methods <table:energy_cfour>`. Examples:; :srcsample:`cfour/sp-rhf-ccsd_t_-ao-ecc`, :srcsample:`cfour/scf4`,; :srcsample:`cfour/mints5`. * Analytic :py:func:`~psi4.driver.gradient` and :py:func:`~psi4.driver.optimize`; commands for :ref:`ground state methods <table:grad_cfour>`. Real and; Ghost atoms permitted (though the latter will naturally collapse after; several cycles). Examples: :srcsample:`cfour/opt-rhf-ccsd_t_`,; :srcsample:`cfour/mp2-1`, and :srcsample:`cfour/mints5-grad`. .. warning:: There exist molecules (*e.g.*, allene) where the; inertial frame is not unique (planes along atoms or between; atoms). The orientation reconciling machinery currently does not; handle these cases and will fail with ""Axis unreconcilable between; QC programs"". I will get to this soon. * Finite difference of energy :py:func:`~psi4.driver.gradient` and; :py:func:`~psi4.driver.optimize` for :ref:`methods <table:energy_cfour>`.; Force with ``gradient('name', dertype=0)``, *etc.*. * :py:func:`~psi4.driver.driver_nbody.nbody` for computation of interaction energies with or; without counterpoise correction. Example: :srcsample:`cfour/dfmp2-1`. * :py:func:`~psi4.driver.wrapper_database.database` for computation of a collection of molecules in a; single input, with summarization of results. Examples:; :srcsample:`cfour/pywrap-db1` and :srcsample:`cfour/psi-a24-grad`. * :py:func:`~psi4.driver.cbs` for computation of compound methods involving; basis set extrapolations and/or delta corrections with any combination; of |PSIfour| and Cfour computational methods and |PSIfour| basis sets.; Example: :srcsample:`cfour/pywrap-cbs1`. .. rubric:: Not Yet Implemented. * Ground state CI energies and optimizations. * Excited state energies and optimizations. * Properties are not yet regex-ed, transformed into i",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:28563,energy,energy,28563,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"ted triple excitations; may be included noniteratively to yield the QCISD(T) method. Both the; QCISD(T) and CCSD(T) methods are implemented for closed-shell references; in the FNOCC module. .. _`sec:fnompn`:. Many-body perturbation theory ; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7288,energy,energy,7288,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"test -LE testlabel``. Pytest has similar commands:. * Run tests in parallel with ``-n`` flag (if Python package ``pytest-xdist`` installed). For maximum parallelism: :samp:`pytest -n auto`; * Run full test suite: ``pytest``; * Run the quick tests: ``pytest -m quick``; * Run the minimal number of tests to ensure Psi4 and any add-ons in working order: ``pytest -m smoke``; * Run tests matching by name: ``pytest -k testname``; * Run tests excluding those by name: ``pytest -k ""not testname""``; * Run tests matching by label: ``pytest -m testlabel``; * Run tests excluding those by label: ``pytest -m ""not testlabel""``; * Run tests with complicated filtering by name: ``pytest -k ""cc and not cc4 and not stdsuite""``; * Run tests and see test names: ``pytest -v``; * Run tests and see test names and sometimes more verbose errors: ``pytest -vv``. .. _`faq:testsoutput`:. How to see CTest testing errors; -------------------------------. ::. >>> ctest; Test project /your/path/2/psi4/build/directory/tests; Start 248: tu1-h2o-energy; 1/2 Test #248: tu1-h2o-energy ................... Passed 1.73 sec; Start 6: cc1; 2/2 Test #6: cc1 ..............................***Failed 0.07 sec; ... When ``ctest`` reports that some (or all) tests have failed, look in your; build directory for file; :samp:`{objdir}/Testing/Temporary/LastTest.log`. It may have a; ``.tmp`` extension, depending on whether the last test was interrupted and; a few other factors. Either way, this file should contain CMake's testing; output, as well as everything that was printed to the screen. .. _`faq:pytest`:. How to test a Psi4 installation; -------------------------------. ``ctest`` requires a connection to source files and ``cmake``; machinery and so can only be performed from :samp:`{objdir}`; (staged installation). To test an installed |PSIfour| (full or staged; installation), a supplementary test suite is available to be; run via pytest. Running a limited number of ""smoke"" tests is; generally sufficient to verify an ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:62806,energy,energy,62806,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,2,['energy'],['energy']
Energy Efficiency,"th of the transition from root *m* within irrep *h*; to root *n* within irrep *i*.; DFT functional labeled if canonical. .. psivar:: CCname ROOT m (h) -> ROOT n (i) ROTATORY STRENGTH (LEN); TD-fctl ROOT 0 (h) -> ROOT n (i) ROTATORY STRENGTH (LEN). The length-gauge oscillator strength of the transition from root *m* to root *n*,; which are in irreps *h* and *i*, respectively..; DFT functional labeled if canonical. .. psivar:: CCname ROOT m -> ROOT n ROTATORY STRENGTH (LEN) - h TRANSITION; TD-fctl ROOT 0 -> ROOT n ROTATORY STRENGTH (LEN) - h TRANSITION. The length-gauge oscillator strength of the transition from root *m* to root *n*,; and the transition is of irrep *h*.; DFT functional labeled if canonical. .. psivar:: CC TOTAL ENERGY; CC CORRELATION ENERGY. .. psivar:: CC CORRELATION KINETIC ENERGY. The correlation correction to the kinetic energy [E_h], as computed by a coupled cluster method. .. psivar:: CC CORRELATION POTENTIAL ENERGY. The correlation correction to the potential energy [E_h], as computed by a coupled cluster method. .. psivar:: CC CORRELATION VIRIAL RATIO. The correlation virial ratio, as defined in https://doi/org/10.1063/1.1535440 for basis set completeness analysis. Computed using coupled cluster. .. psivar:: CC VIRIAL RATIO. The virial ratio, as computed by a coupled cluster method. Only defined for a fully quantum mechanical computation, i.e., not QM/MM or solvated. .. psivar:: CC T1 DIAGNOSTIC; CC D1 DIAGNOSTIC; CC NEW D1 DIAGNOSTIC; CC D2 DIAGNOSTIC. Diagnostic of multireference character. .. psivar:: CC2 TOTAL ENERGY; CC2 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC4 TOTAL ENERGY; CC4 CORRELATION ENERGY; CCnn TOTAL ENERGY; CCnn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested approximate coupled-cluster (CC2, CC3, up to CC\ *nn*); level of theory. .. psivar:: CC DIPOLE. Dipole array [e a0] for the requested coupled cluster level of theory and root, (3,). .. p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:16217,energy,energy,16217,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"the monomer whose energy will be subtracted from each of the three dimers. ::. RGC1-HeHe-0.85-dimer; RGC1-He-mono-unCP; RGC1-HeHe-1.0-dimer; RGC1-HeHe-1.5-dimer. At the end of the job, the Requested Energy table is printed that gives the total; energies for the requested model chemistry for each reagent and each reaction, as; well as the stoichiometric weights by which the reagent energies are transformed; into the reaction energy. In this case, the dimer is +1 and the monomer is -2,; indicating the interaction energy is computed from dimer less first monomer; less second (identical) monomer. Error statistics are computed with respect to the reference; energies stored in the database. One of these, the mean absolute deviation, is ; returned by the wrapper as an ordinary Python variable. (For databases; without a stored reference energy, *e.g.*, BASIC, large and meaningless numbers are; printed for error.) The other two tables tabulate the PSI variables requested; through keyword ``tabulate``, in this case the total SCF energy and the number; of atoms in each reagent. ::. ==> Mp2 Total Energy <==. ------------------------------------------------------------------------------------------------------; Reaction Reaction Value Reagent 1 Reagent 2; Value Wt Value Wt; ------------------------------------------------------------------------------------------------------; RGC1-HeHe-0.85 0.00004802 -5.69430495 1 -2.84717649 -2; RGC1-HeHe-1.0 -0.00000064 -5.69435362 1 -2.84717649 -2; ------------------------------------------------------------------------------------------------------. ==> Requested Energy <==. ------------------------------------------------------------------------------------------------------; Reaction Reaction Energy Reaction Error Reagent 1 Reagent 2; Ref Calc [kcal/mol] [kJ/mol] [Eh] Wt [Eh] Wt; ------------------------------------------------------------------------------------------------------; RGC1-HeHe-0.85 0.0376 0.0301 -0.0075 -0.0312 -5.69430495 ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst:2972,energy,energy,2972,doc/sphinxman/source/db.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst,1,['energy'],['energy']
Energy Efficiency,the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2 level of theory. .. psivar:: OMP2.5 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP2.5 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2.5 level of theory. .. psivar:: OMP3 TOTAL ENERGY; OMP3 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP3 level of theory. .. psivar:: OMP3 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP3 level of theory. .. psivar:: OREMP2 TOTAL ENERGY; OREMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized retaining-the-excitation-degree |MollerPlesset|; hybrid perturbation theory level. .. psivar:: OREMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized retaining-the-excitation-degree; |MollerPlesset| hybrid perturbation theory level. .. psivar:: ONE-ELECTRON ENERGY. The one-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{1e^-}` in Eq. :eq:`SCFterms`. .. psivar:: PCM POLARIZATION ENERGY. The energy contribution [E_h] from the polarizable continuum model for solvation. .. psivar:: DD SOLVATION ENERGY. The energy contribution [Eh] from continuum solvation models based on a; domain-decomposition ansatz. .. psivar:: PE ENERGY. The energy contribution [E_h] from the polarizable embedding model for solvation. .. psivar:: QCISD TOTAL ENERGY; QCISD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the quadrat,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:47681,energy,energy,47681,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"thod': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:53666,energy,energy,53666,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"thod': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:482097,energy,energy,482097,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"thodAlias`:. Defining a Method Alias; =======================. .. note:: No recompile of the |PSIfour| program is necessary for changes made to; files in ``$PSIDATADIR`` aka :source:`psi4/share/psi4`, including those described below. .. caution:: As of 1.0, the below, while essentially still correct, is so aged; as to be difficult to follow. Since quantum chemical methods in |PSIfour| are accessed through Python functions, and; most important quantities are available as PSI variables, it is straightforward; to create aliases to commonly run calculations or to define hybrid methods. The; :source:`psi4/driver/aliases.py` file is intended for editing by the user for; this purpose. As an example, the MP2.5 method; (which admittedly is already built in to |PSIfour|); is the average of MP2 and MP3. The latter is; available through the arbitrary order MPn code and returns all lower energies; along with it in PSI variables. The following is basic code that will compute; and return the MP2.5 energy. ::. def run_mp2_5(name, **kwargs):; ; energy('mp3', **kwargs); e_scf = psi4.get_variable('SCF TOTAL ENERGY'); ce_mp2 = psi4.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = psi4.get_variable('MP3 CORRELATION ENERGY'); ; ce_mp25 = 0.5 * (ce_mp2 + ce_mp3); e_mp25 = e_scf + ce_mp25; ; print """""" MP2.5 total energy: %16.8f\n"""""" % (e_mp25); print """""" MP2.5 correlation energy: %16.8f\n"""""" % (ce_mp25); ; return e_mp25. Compare the above to the method that resides in :source:`psi4/driver/aliases.py`.; The rationale for the changes is indicated in the comments below. ::. def run_mp2_5(name, **kwargs):; lowername = name.lower() # handy variable with name keyword in lowercase; kwargs = kwargs_lower(kwargs) # removes case sensitivity in keyword names; ; # Run detci calculation and collect conventional quantities; energy('mp3', **kwargs); e_scf = psi4.get_variable('SCF TOTAL ENERGY'); ce_mp2 = psi4.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = psi4.get_variable('MP3 CORRELATION ENERGY'); e_m",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst:2114,energy,energy,2114,doc/sphinxman/source/quickaddalias.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst,1,['energy'],['energy']
Energy Efficiency,"tic optimizations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Although optking is continuously improved with robustness in mind, some; attempted optimizations will inevitably fail to converge to the desired minima.; For difficult cases, the following suggestions are made. * As for any optimizer, computing the Hessian and limiting the step size will; successfully converge a higher percentage of cases. The default settings have; been chosen because they perform efficiently for common, representative test sets.; More restrictive, cautious steps are sometimes necessary. * |optking__dynamic_level| allows optking to change the method of optimization; toward algorithms that, while often less efficient, may help to converge difficult; cases. If this is initially set to 1, then optking, as poor steps are detected,; will increase the dynamic level through several forms of more robust and cautious algorithms.; The changes will reduce the trust radius, allow backward steps (partial line; searching), add cartesian coordinates, switch to cartesian coordinates, and take; steepest-descent steps. * The developers have found the |optking__opt_coordinates| set to ""BOTH"" which; includes both the redundant internal coordinate set, as well as cartesian coordinates,; works well for systems with long 'arms' or floppy portions of a molecule poorly; described by local internals. * Optking does support the specification of ghost atoms. Certain internal coordinates such ; as torsions become poorly defined when they contain near-linear bends. ; An internal error `AlgError` may be raised in such cases. Optking will avoid such; coordinates when choosing an initial coordinate system; however, they may arise in the course; of an optimization. In such cases, try restarting from the most recent geometry.; Alternatively, setting |optking__opt_coordinates| to cartesian will avoid any internal; coordinate difficulties altogether. These coordinate changes can be automatically; performed by turning |optking__",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:18760,reduce,reduce,18760,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['reduce'],['reduce']
Energy Efficiency,"ting from the use of the higher-order SAPT code ; should cite the following: ; [Hohenstein:2010:014101]_. For methods SAPT2+ and above, one can replace the many-body treatment of; dispersion by an improved method based on coupled-cluster doubles (CCD).; This approach tends to give good improvements when dispersion effects; are very large, as in the PCCP dimer (see [Hohenstein:2011:2842]_).; As shown in [Parker:2014:094106]_, whether or not CCD dispersion offers; more accurate interaction energies tends to depend on the SAPT truncation; and basis set employed, due to cancellations of errors. Thanks to; natural orbital methods [Parrish:2013:174102]_, the SAPT code; is able to include CCD dispersion with only a modest additional cost.; Computations employing CCD dispersion should cite [Parrish:2013:174102]_. ; To request CCD dispersion treatment in a SAPT computation, simply append; ``(ccd)`` to the name of the method, as in the following examples ::. 	energy('sapt2+(ccd)'); 	energy('sapt2+(3)(ccd)'); 	energy('sapt2+3(ccd)'). The :math:`\delta_{MP2}` corrections can also be computed automatically; by appending ``dmp2`` to the name of the method, with or without CCD dispersion ::. 	energy('sapt2+dmp2'); 	energy('sapt2+(3)dmp2'); 	energy('sapt2+3dmp2'); 	energy('sapt2+(ccd)dmp2'); 	energy('sapt2+(3)(ccd)dmp2'); 	energy('sapt2+3(ccd)dmp2'). A brief note on memory usage: the higher-order SAPT code assumes that; certain quantities can be held in core. This code requires sufficient; memory to hold :math:`3o^2v^2+v^2N_{aux}` arrays in core. With this; requirement computations on the adenine-thymine complex can be performed; with an aug-cc-pVTZ basis in less than 64GB of memory. Higher-order SAPT is treated separately from the highly optimized SAPT0; code, therefore, higher-order SAPT uses a separate set of keywords. ; The following keywords are relevant for higher-order SAPT. Basic Keywords for Higher-order SAPT; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_opti",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:27143,energy,energy,27143,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,3,['energy'],['energy']
Energy Efficiency,"tion is available in the complete; list of keywords for DETCI provided in Appendix :ref:`apdx:detci`. For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, *etc.*,; with the common name for that CI wavefunction, like ``energy('cisd')`` ; for a CISD single-point energy. The Python driver; recognizes ``cisd``, ``cisdt``, and ``cisdtq``. As mentioned above, codes; written specifically for CISD will be more efficient than DETCI for a ; CISD computation, and ``energy('cisd')`` by default will call other,; more efficient modules. To force a CISD computation with DETCI,; set |globals__qc_module| = DETCI. . Higher order single-reference CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ``ci6``. A full; CI can be specified by ``fci``. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; module generically like ``energy('detci')``. The latter approach; will also work for any of the previously-mentioned CI wavefunctions for; which the driver has built-in shortcuts, so long as the relevant options; (especially |detci__ex_level|) are set appropriately. Some; examples of single-refence CI, RASCI, and full CI computations are provided; in :source:`samples`. .. _`table:ci_spaces`:. .. table:: Orbital spaces for CI computations. +----------------------------+----------------------------+-------------------------------+; | CI (e.g., CISD, FCI) | RASCI | CASCI |; +============================+============================+===============================+; | |globals__frozen_uocc| | |globals__frozen_uocc| | |globals__frozen_uocc| [#f1]_ |; +----------------------------+----------------------------+-------------------------------+; | (all orbitals not in | |globals__ras4| | |; + |globals__frozen_uocc| +----------------------------+ +; | or |glo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:6675,energy,energy,6675,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['energy'],['energy']
Energy Efficiency,"tion is given below. ::. molecule {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; H 1.680398 -0.373741 -0.758561; H 1.680398 -0.373741 0.758561. units angstrom; }; ; set {; basis aug-cc-pVDZ; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307; }; ; energy('sapt(dft)'). As already mentioned above, the SAPT0 module for open-shell cases can also; use exact integrals for all terms except for dispersion. In practice,; density fitting is considerably faster and introduces negligible errors, thus; it is the preferred method for open-shell cases as well.; Below, you can find a minimum example of open-shell SAPT0 computation. ::. molecule {; 0 1; O 0.000000 0.000000 6.000000; H 0.000000 1.431500 4.890600; H 0.000000 -1.431500 4.890600; --; 0 2; O 0.000000 0.000000 0.000000; O 0.000000 2.503900 0.000000; H 0.000000 -0.424700 -1.839500; units bohr; symmetry c1; no_reorient; no_com; }; ; set {; reference uhf; scf_type df; basis aug-cc-pVDZ; }; ; energy('sapt0'); ; . |scf__reference| needs to be ``UHF`` or ``ROHF`` for the open-shell computation to proceed. Advanced example; ^^^^^^^^^^^^^^^^. Open-shell computations can be difficult to converge in certain cases, thus you may; want to have more control over the SCF procedure. You have the option of ; doing the driver job in the input file, by performing the dimer and monomer computations; yourself. In the example below, we do a stability analysis for the open-shell monomer only ::. molecule {; 0 2; O 0.000000 0.000000 0.000000; O 0.000000 2.503900 0.000000; H 0.000000 -0.424700 -1.839500; --; 0 1; O 0.000000 0.000000 6.000000; H 0.000000 1.431500 4.890600; H 0.000000 -1.431500 4.890600; units bohr; symmetry c1; no_reorient; no_com; }; ; dimer = psi4.get_active_molecule() ; ; set {; reference uhf; scf_type df; basis cc-pVDZ; df_basis_sapt cc-pVDZ-ri; guess sad; }; ; dimer = psi4.get_active_molecule(); ; set df_ints_io save; psi4.IO",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:17340,energy,energy,17340,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"tion of |globals__qc_module|; will default to the CCENERGY module, and specification with value ``mrcc`` is; required to route the computation to the MRCC program.; For a CCSDT(Q) energy, simply use ``'ccsdt(q)'`` in the call to; :py:func:`~psi4.driver.energy`. MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only. At this time, |PSIfour| is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you can call it directly; For other methods, you will be required to; use the MRCC keywords described in Appendix :ref:`apdx:mrcc`.; Perturbative methods (``ccsd(t)``, ``ccsdtqp(h)_l``, etc.); are available with |scf__reference| ROHF in versions of MRCC published; at least after July 1, 2014. When using ROHF-CCSDT(Q), MRCC will compute and report two variants:; CCSDT(Q)/A and CCSDT(Q)/B. [Kallay:2008:144101]_ |PSIfour| will save both energies but will use; the CCSDT(Q)/B as the CCSDT(Q) energy. CCSDT(Q)/B has been found to be; more robust by Martin. [Martin:2014:785]_. .. include:: mrcc_table_energy.rst. Frozen-core approximation is also supported in the MRCC interface.; To optimize CH\ :sub:`4` with CCSDT freezing the 1\ *s* on carbon, run::. molecule H2O {; O; H 1 r; H 1 r 2 104.5; ; r = 1.0; }; ; set {; basis cc-pVDZ; freeze_core true; }; ; optimize('ccsdt'). Interface Details; ~~~~~~~~~~~~~~~~~. .. _`table:mrcc__mrcc_method`:. .. table:: MRCC methods . +---------------------+--------------+-------------------------------------------------------------+; | |mrcc__mrcc_method| | Method | Description | ; +=====================+==============+=============================================================+ ; | 1 | CC | |; +---------------------+--------------+-------------------------------------------------------------+; | 2 | CC(n-1)[n] | |; +---------------------+--------------+--------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst:3893,energy,energy,3893,doc/sphinxman/source/mrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst,1,['energy'],['energy']
Energy Efficiency,"tion of; charge locations in the old way used the units of the active; molecule, whereas the new way always uses Bohr and (2) the; specification of the charge and locations in the old way used the; :py:class:`psi4.driver.QMMM` class directly and added one charge; per command, whereas the new way consolidates all into an array and; passes it by keyword argument to the calculation. The successor to the :py:class:`psi4.driver.QMMM` class,; :py:class:`psi4.driver.QMMMbohr`, is operable, but it is discouraged; from being used directly. To run a computation in a constant dipole field, the |scf__perturb_h|,; |scf__perturb_with| and |scf__perturb_dipole| keywords can be used. As an; example, to add a dipole field of magnitude 0.05 a.u. in the y direction and; 0.1 a.u. in the z direction, we can use the following keywords::. set perturb_h true; set perturb_with dipole; set perturb_dipole [ 0, 0.05, 0.1 ]. Note that if any specified fields do not fall along a symmetry axis, the; symmetry of the calculation should be reduced accordingly; if in doubt run the; calculation in C1 symmetry. For examples of SCF and MP2 calculations in an; external field, see :srcsample:`scf7` and :srcsample:`dfmp2-grad5`. .. _`sec:scfdefault`:. Convergence and Algorithm Defaults; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. _`table:conv_scf`:. .. table:: SCF algorithm and convergence criteria defaults by calculation type [#f1]_. +--------------------+--------------------+----------------------+----------------------+---------------------+; | *Ab Initio* Method | Calculation Type | |scf__e_convergence| | |scf__d_convergence| | |globals__scf_type| |; +====================+====================+======================+======================+=====================+; | SCF of HF or DFT | energy | 6 | 6 | DF |; + +--------------------+----------------------+----------------------+ +; | | optimization | 8 | 8 | |; + +--------------------+----------------------+----------------------+ +; | | frequency [#f7]_ | 8 | 8",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:56297,reduce,reduced,56297,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['reduce'],['reduced']
Energy Efficiency,"tion, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index::; pair: database(); adding new. .. _`sec:createDatabase`:. Creating a Database; ===================. .. note:: No recompile of the PSI program is necessary for changes made to; files in ``$PSIDATADIR``, including those described below. A necessary consideration in constructing a database is the distinction; between reagents and reactions. A reagent is a single molecular system; (may be a dimer) whose geometry you are possession of and whose electronic; energy may be of interest. A reaction is a combination of one or more; reagent energies whose value you are interested in and a reference value; for which you may or may not be in possession of. A few examples follow.; In a database of interaction energies, the reagents are dimers and their; component monomers (usually derived from the dimer geometry), and the; reactions are the dimer less monomers energies. In a database of barrier; heights, the reagents are reactants, products, and transition-state; structures, and the reactions are the transition-states less; minimum-energy structures. Possibly you may have a collection of; structures to simply be acted upon in parallel, in which case the; structures are both the reagents and the reactions. The role of the; database.py file is to collect arrays and dictionaries that define the; geometries of reagents (GEOS), their combination into reactions (RXNM &; ACTV), available reference values for r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickadddatabase.rst:1528,energy,energy,1528,doc/sphinxman/source/quickadddatabase.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickadddatabase.rst,1,['energy'],['energy']
Energy Efficiency,"tion; [:math:`\mbox{ODC-13$(\lambda_3)$}`] can be used (see below).; For the detailed comparison of the quality of these methods, we refer; users to our :ref:`publications <intro:dctcitations>`. The DCT functional can be specified by the |dct__dct_functional| option. The; default choice is the ODC-12 functional. The DCT code can also be used to; compute the :math:`(\lambda_3)` energy correction that perturbatively accounts; for three-particle correlation effects, similarly to the (T) correction in coupled; cluster theory. Computation of the :math:`(\lambda_3)` correction can be; requested by setting the |dct__three_particle| option to PERTURBATIVE. A; combination of the ODC-13 functional with the :math:`(\lambda_3)` correction; [denoted as :math:`\mbox{ODC-13$(\lambda_3)$}`] has been shown to provide highly; accurate results for open-shell molecules near equilibrium geometries. At the present moment, all of the DCT methods support unrestricted reference; orbitals (|scf__reference| ``UHF``), which can be used to perform energy and; gradient computations for both closed- and open-shell molecules. In addition,; the ODC-06 and ODC-12 methods support restricted reference orbitals; (|scf__reference| ``RHF``) for the energy and gradient computations of; closed-shell molecules. Note that in this case restricted reference orbitals; are only available for |dct__algorithm| ``SIMULTANEOUS``. .. _`sec:dctalgorithms`:. Iterative Algorithms; ~~~~~~~~~~~~~~~~~~~~. As explained in the :ref:`Theory <sec:dcttheory>` section, in order to obtain the DCT energy one; needs to solve a system of coupled equations for orbitals and density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; |dct__algorithm| option. SIMULTANEOUS [Default]; In the simultaneous algorithm the DCT equations are solved in macroiterations.; Each macroiteration consists of a single iteration of the cumulant u",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:8761,energy,energy,8761,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"to separate; quantifiers like ``o``, ``n`` etc.; The full list understood by ddx can be obtained using ::. import pyddx; print(pyddx.data.solvent_epsilon.keys()). For when an LPB solvent model is selected (|ddx__ddx_model| is ``LPB``); additionally the **Debye-Hückel parameter** |ddx__ddx_solvent_kappa| needs to be provided; (in units of inverse Bohr or inverse Angström, depending on the unit used to define; the molecular geometry). ``pyddx`` provides a handy utility function to compute; the Debye-Hückel parameter. For example ::. import pyddx; from qcelemental import constants. list_of_ions = [(+1, 0.1), (-1, 0.1)]; dielectric_constant = pyddx.data.solvent_epsilon[""water""]; temperature = 298.15 # Kelvin; kappa_invbohr = pyddx.solvent_kappa(list_of_ions, dielectric_constant, temperature); kappa_invang = kappa_invbohr / constants.bohr2angstroms. computes the parameter (in inverse Angström) for a 0.1 mol/l solution of sodium; chloride in water, thus a solution woith 0.1 mol/l of a ``+1``-charged ion; and 0.1 mol/l of a ``-1``-charged ion. The **cavity** in ddx is defined as a union of spheres around each atom.; Usually the spehere radii for each atom are determined using a standard; set of tabulated radii per atomic species, determined by the |ddx__ddx_radii_set| parameter.; Currently ``bondi`` [Bondi:1964:441]_ and ``uff`` [Rappe:1992:114]_; are supported for |ddx__ddx_radii_set| with ``uff`` selected by default.; These radius values are conventionally scaled by an additional factor before use,; conventionally 1.1 for ``uff`` and 1.2 for ``bondi``. Customisation of the scaling; is possible using the |ddx__ddx_radii_scaling| parameter.; A more fine-grained control over the sphere radii is available by explicitly providing; a list of radii (one per atom, exactly in the order of the input geometry); using the |ddx__ddx_radii| parameter. Note that the same unit as for the molecular; input is expected for the radii. .. include:: autodir_options_c/globals__ddx.rst; .. inclu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:6990,charge,charged,6990,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['charge'],['charged']
Energy Efficiency,"to; DISK (currently used by default). For more recommendations on the choice of the algorithm see; :ref:`Recommendations <sec:dctrecommend>`. .. _`sec:dctgradients`:. Analytic Gradients; ~~~~~~~~~~~~~~~~~~. Analytic gradients are available for the DC-06, ODC-06, ODC-12, and ODC-13 methods.; For DC-06, the evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: ``TWOSTEP`` (default) and ``SIMULTANEOUS``. These algorithms are similar to those; described for the orbital and cumulant updates in the :ref:`Iterative Algorithms <sec:dctalgorithms>`; section and usually exhibit similar efficiency. The choice of the algorithm can; be made using the |dct__response_algorithm| option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. For the ODC-06, ODC-12 and ODC-13 methods no response equations; need to be solved, which makes the computation of the analytic gradients very; efficient. Analytic gradients are not available for the three-particle energy; correction :math:`(\lambda_3)`. .. _`sec:dctmethodsummary`:. Methods Summary; ~~~~~~~~~~~~~~~. The table below summarizes current DCT code features:. .. _`table:dct_methods_summary`:. +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | Method | Available algorithms | Energy | Gradient | Reference |; +=====================================+==============================================================+=========+==========+========================+; | ODC-06 | SIMULTANEOUS, QC | Y | Y | RHF/UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | ODC-12 | SIMULTANEOUS, QC | Y | Y | RHF/UHF |; +-------------------------------------+----------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:13979,efficient,efficient,13979,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['efficient'],['efficient']
Energy Efficiency,"trecommend>`. .. _`sec:dctgradients`:. Analytic Gradients; ~~~~~~~~~~~~~~~~~~. Analytic gradients are available for the DC-06, ODC-06, ODC-12, and ODC-13 methods.; For DC-06, the evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: ``TWOSTEP`` (default) and ``SIMULTANEOUS``. These algorithms are similar to those; described for the orbital and cumulant updates in the :ref:`Iterative Algorithms <sec:dctalgorithms>`; section and usually exhibit similar efficiency. The choice of the algorithm can; be made using the |dct__response_algorithm| option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. For the ODC-06, ODC-12 and ODC-13 methods no response equations; need to be solved, which makes the computation of the analytic gradients very; efficient. Analytic gradients are not available for the three-particle energy; correction :math:`(\lambda_3)`. .. _`sec:dctmethodsummary`:. Methods Summary; ~~~~~~~~~~~~~~~. The table below summarizes current DCT code features:. .. _`table:dct_methods_summary`:. +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | Method | Available algorithms | Energy | Gradient | Reference |; +=====================================+==============================================================+=========+==========+========================+; | ODC-06 | SIMULTANEOUS, QC | Y | Y | RHF/UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | ODC-12 | SIMULTANEOUS, QC | Y | Y | RHF/UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | ODC-13 | SIMULTANEOUS, QC | Y ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:14050,energy,energy,14050,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"ts (GEOS), their combination into reactions (RXNM &; ACTV), available reference values for reactions (BIND), and brief comments; for reagents and reactions (TAGL). The journey from reagent geometries to; functional database.py file is largely automated, in a process described; below. * Prepare geometry files; Assemble xyz files for all intended reagent systems in a directory.; Follow the rules below for best results. The filename for each xyz; file should be the name of the system. lowercase or MixedCase is; preferable (according to Sherrill lab convention). Avoid dashes and; dots in the name as python won't allow them. If you're determined to; have dashes and dots, they must be replaced by other characters in the; process_input line, then translated back in the GEOS section; see; NBC10.py for an example. - The first line for each xyz file should be the number of atoms in the system. - The second line for each xyz file can be blank (interpreted as no comment), anything (interpreted as a comment), or two integers and anything (interpreted as charge, multiplicity, and remainder as comment). - The third and subsequent lines have four fields: the element symbol and the three cartesian coordinates in angstroms. The atom lines should not contain any dummy atoms (what's the use in cartesian form). For dimer systems, an algorithm is used to apportion the atoms into two fragments; thus the atoms need not be arranged with all fragmentA atoms before all fragmentB atoms. The algorithm will fail for very closely arranged fragments. For dimers, any charge and multiplicity from the second line will be applied to fragmentA (python); charge and multiplicity may need to be redistributed later in the editing step. * Run script :source:`psi4/share/psi4/scripts/ixyz2database.py`. Move into the directory where all your xyz files are located. Run the; script. It will ask a number of; questions about your intended database and generate a python file; named for your database. Uppercase is pr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickadddatabase.rst:3448,charge,charge,3448,doc/sphinxman/source/quickadddatabase.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickadddatabase.rst,1,['charge'],['charge']
Energy Efficiency,"ts 110; .. comment #set scf print 3 # will print dftd3 program output to psi4 output file; .. comment ; .. comment ; .. comment print_stdout(' -D correction from C-side'); .. comment activate(mA); .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment energy('b3lyp-d3zero'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)'); .. comment energy('b3lyp-d3bj'); .. comment compare_values(ref_d3bj[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)'); .. comment ; .. comment energy('b3lyp-d2'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)'); .. comment energy('b3lyp-d3'); .. comment compare_values(ref_d3zero[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)'); .. comment energy('b3lyp-d'); .. comment compare_values(ref_d2[1], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)'); .. comment energy('wb97x-d'); .. comment compare_values(-0.000834247063, get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)'); .. comment ; .. comment print_stdout(' non-default -D correction from C-side'); .. comment activate(mB); .. comment set dft_dispersion_parameters [0.75]; .. comment energy('b3lyp-d2p4'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)'); .. comment set dft_dispersion_parameters [0.75, 20.0]; .. comment energy('b3lyp-d2gr'); .. comment compare_values(ref_pbe_d2[2], get_variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)'); .. comment set dft_dispersion_parameters [1.0, 0.722, 1.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:28410,energy,energy,28410,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['energy'],['energy']
Energy Efficiency,"ts to help with this process. These can be obtained by running::. >>> copy_pymol2.py. and then in PyMol::. >>> @run.pymol. This last command runs all of the individual ``.pymol`` files (*e.g.*,; ``DA.pymol``), which in turn load in the molecule and cube file data; (contained in the ``.cube`` file), set up the visualization, and render a; ``.png`` image of the scene. Generally the view orientation and some specific; details of the ``.pymol`` files require some small tweaks to permit; publication-quality renderings. .. image:: /VA.png; :align: center; :scale: 50%; :alt: ESP of monomer A. Adding Point Charges to F/I-SAPT Computations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; .. Citation: Alenaizan, A; Cheney, D. L.; Sherrill, C. D. Electrostatically embedded; .. symmetry adapted pertubration theory. In preparation. Point charges can be added to the interacting subsystems A and B as well; as to the ``linking`` fragment C. Briefly, the interaction between the point charges in A(B); and fragment B(A) enters the SAPT0 interaction energy. It explicitly affects the electrostatics; and induction components, and implicitly affects other SAPT0 components by polarizing the orbitals.; If point charges are present in both subsystems A and B, an additional charge-charge interaction; term is also added to the electrostatic energy. When point charges are assigned to subsystem C, the point; charges in C only polarize the orbitals in both fragment A and B. However, the presence of charges in C does not; directly contribute to the SAPT0 interaction energy. Examples :srcsample:`fsapt-ext-abc` and :srcsample:`fsapt-ext-abc2`; illustrate the use of point charges in F/I-SAPT procedure. Link Orbital Partitioning in I-SAPT; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. The assignment of the A-C and B-C linking electron pairs is controlled by the |fisapt__fisapt_link_assignment|; keyword. The default setting ``fisapt_link_assignment c`` assigns the entire pair to the linker C together with; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:16150,charge,charges,16150,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,2,"['charge', 'energy']","['charges', 'energy']"
Energy Efficiency,"ts; are chosen on each fragment. Each reference point will be either an atom or a linear combination; of positions of atoms within that fragment. Stretches, bends, and dihedral angles between the two ; fragments will be created using these reference points. See ; :ref:`Dimer coordinate table <table:DimerFrag>` for how reference points are created.; For a set of three dimers A, B, and C, sets of coordinates are created between each pair:; AB, AC, and BC. Each `DimerFrag` may use different reference points. ; Creation of the intermolecular coordinates can be controlled through |optking__frag_ref_atoms| ; and |optking__interfrag_coords|. |optking__frag_ref_atoms| specifies which atoms ; (or linear combination of atoms) to use for the reference points and |optking__interfrag_coords|,; which encompasses |optking__frag_ref_atoms|, allows for constraints and labels to be added to the; intermolecular coordinates. .. note:: Manual specification of the interfragment coordinates is supported for power users,; and provides complete control of fragments' relative orientations.; Setting |optking__interfrag_mode| to `multi` should suffice in almost all cases.; :ref:`Dimer coordinate table <table:DimerFrag>`. provides the name and ordering; convention for the coordinates. * Basic multi-fragment optimization. Use automatically generated reference points. .. code-block:: none. memory 4GB ; molecule mol {; 0 1 ; O -0.5026452583 -0.9681078610 -0.4772692868; H -2.3292990446 -1.1611084524 -0.4772692868; H -0.8887241813 0.8340933116 -0.4772692868; -- ; 0 1 ; C 0.8853463281 -5.2235996493 0.5504918473; C 1.8139169342 -2.1992967152 3.8040686146; C 2.8624456357 -4.1143863257 0.5409035710; C -0.6240195463 -4.8153482424 2.1904642137; C -0.1646305764 -3.3031992532 3.8141619690; C 3.3271056135 -2.6064153737 2.1669340785; H 0.5244823836 -6.4459192939 -0.7478283184; H 4.0823309159 -4.4449979205 -0.7680411190; H -2.2074914566 -5.7109913627 2.2110247636; H -1.3768100495 -2.9846751653 5.1327625515; H 4",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:11108,power,power,11108,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['power'],['power']
Energy Efficiency,"tus': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:514578,energy,energy,514578,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"tus': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:468019,energy,energy,468019,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:161005,energy,energy,161005,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:360757,energy,energy,360757,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'roh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:362747,energy,energy,362747,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:368476,energy,energy,368476,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:370466,energy,energy,370466,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:497902,energy,energy,497902,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:500479,energy,energy,500479,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:111468,energy,energy,111468,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:111652,energy,energy,111652,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:468921,energy,energy,468921,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:6173,energy,energy,6173,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:233063,energy,energy,233063,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:236468,energy,energy,236468,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:176503,energy,energy,176503,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:237357,energy,energy,237357,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:142208,energy,energy,142208,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:22472,energy,energy,22472,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:27666,energy,energy,27666,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:29493,energy,energy,29493,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"t{H}^{\kappa} &= e^{-\hat{K}} \hat{H} e^{\hat{K}} \\; \hat{f}_{N}^{\kappa} &= e^{-\hat{K}} \hat{f}_{N}^{d} e^{\hat{K}} \\; \hat{W}_{N}^{\kappa} &= e^{-\hat{K}} \hat{W}_{N} e^{\hat{K}} . where :math:`\hat{f}_{N}`, and :math:`\hat{W}_{N}` are the one- and two-electron components of normal-ordered Hamiltonian. Then, ; first and second derivatives of the energy with respect to the :math:`{\bf \kappa}` parameter at :math:`{\bf \kappa} = 0`. .. math::; w_{pq} = \frac{\partial \widetilde{E}}{\partial \kappa_{pq}} . .. math::; A_{pq,rs} = \frac{\partial^2 \widetilde{E}}{\partial \kappa_{pq} \partial \kappa_{rs}} . Then the energy can be expanded up to second-order as follows. .. math::; \widetilde{E}^{(2)}({\bf \kappa}) = \widetilde{E}^{(0)} + {\bf \kappa^{\dagger} w} + \frac{1}{2}~{\bf \kappa^{\dagger} A \kappa}. where :math:`{\bf w}` is the MO gradient vector, :math:`{\bf \kappa}` is the MO rotation vector,; and :math:`{\bf A}` is the MO Hessian matrix. Therefore, minimizing the energy with respect to :math:`{\bf \kappa}`; yields. .. math::; {\bf \kappa} = -{\bf A^{-1}w}. This final equation corresponds to the usual Newton-Raphson step. * OREMP. The REMP hybrid perturbation theory is a constrained mixture of the |MollerPlesset| perturbation theory and the; Retaining the Excitation degree perturbation theory([Fink:2006:RE]_, [Behnle:2019:REMP]_).; The mixing ratio is determined by the parameter :math':`A`:. .. math::; \widehat{H}^{(0)}_\text{REMP} = (1-A)\widehat{H}^{(0)}_\text{RE} + A\widehat{H}^{(0)}_\text{MP}. Technically, the second order of RE corresponds to LCCD for RHF and UHF references. REMP2 and its orbital-optimized variant OREMP2; are thus straightforward to implement in a (O)LCCD program by appropriate scaling of residual vector contributions and density matrices. * **OMP2** [Bozkaya:2011:omp2]_ and [Bozkaya:2013:omp2grad]_. * **OMP3** [Bozkaya:2011:omp3]_ , [Bozkaya:2013:omp3]_, and [Bozkaya:2013:omp3grad]_. * **OMP2.5** [Bozkaya:2011:omp3]_. * **OLCCD** [Bozk",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst:9740,energy,energy,9740,doc/sphinxman/source/occ.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst,1,['energy'],['energy']
Energy Efficiency,"u can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:. >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any "".in"" or "".dat"" extension by "".out""). Sample Input Files; ==================. Below, we will provide a few simple input files as examples. A large ; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the :source:`samples` directory. Running a Basic Hartree--Fock Calculation; =========================================. In our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:3267,energy,energy,3267,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"uess is the superposition of atomic; densities (SAD), discussed in. * ""Principles for a direct SCF approach to LCAO-MO ab-initio; calculations"", J. Alml\ |o_dots|\ f, K. Faegri, and K. Korsell,; *J. Comput. Chem.* **3**, 385 (1982).; (doi: `10.1002/jcc.540030314 <https://doi.org/10.1002/jcc.540030314>`_). * ""Starting SCF calculations by superposition of atomic; densities"", J. H. Van Lenthe, R. Zwaans, H. J. J. Van Dam,; and M. F. Guest, *J. Comput. Chem.* **27**, 926 (2006).; (doi: `10.1002/jcc.20393 <https://doi.org/10.1002/jcc.20393>`_). |PSIfour| also features a SAD natural orbital guess, an extended; H\ |u_dots|\ ckel guess that employs on-the-fly atomic calculations alike the SAD; guess, as well as a superposition of atomic potentials (SAP) guess; that is based on screening of atomic nuclei. The SAD natural orbitals,; H\ |u_dots|\ ckel and SAP guesses have been described in. * ""An assessment of initial guesses for self-consistent field; calculations. Superposition of Atomic Potentials: simple yet; efficient"", S. Lehtola, *J. Chem. Theory Comput.* **15**,; 1593 (2019) (doi: `10.1021/acs.jctc.8b01089; <https://doi.org/10.1021/acs.jctc.8b01089>`_). Density Cumulant Theory (DCT); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. .. _`intro:dctcitations`:. |PSIfour| features several formulations of newly-developed density cumulant; theory (DCT), also known as density cumulant functional theory (DCFT).; The theory and benchmark of this theory are discussed in the following papers:. DC-06 (also known as DCT-06):. * ""Density Cumulant Functional Theory: First Implementation and; Benchmark Results for the DCFT-06 Model,"" A. C. Simmonett,; J. J. Wilke, H. F. Schaefer, and W. Kutzelnigg, *J. Chem. Phys.*; **133**, 174122 (2010).; (doi: `10.1063/1.3503657 <https://doi.org/10.1063/1.3503657>`_). * ""Analytic gradients for density cumulant functional theory: The; DCFT-06 model,"" A. Yu. Sokolov, J. J. Wilke, A. C. Simmonett,; and H. F. Schaefer, *J. Chem. Phys.* **137**, 054105 (2012).; (doi: `10",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:8354,efficient,efficient,8354,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['efficient'],['efficient']
Energy Efficiency,"ular Potential Energy; Surfaces of van der Waals Complexes,"" B. Jeziorski, R. Moszynski,; and K. Szalewicz, *Chem. Rev.* **94**, 1887-1930 (1994).; (doi: `10.1021/cr00031a008 <https://doi.org/10.1021/cr00031a008>`_). |PSIfour| benefits enormously from the introduction of density fitting (DF); into SAPT. There are several SAPT truncations available in |PSIfour|. For; guidance on which one to choose, see the SAPT section of the manual; and refer to the following systematic study:. * ""Levels of Symmetry Adapted Perturbation Theory (SAPT). I. Efficiency and; Performance for Interaction Energies,'' T. M. Parker, L. A. Burns, R. M.; Parrish, A. G. Ryno, and C. D. Sherrill, *J. Chem. Phys.* **140**,; 094106 (2014).; (doi: `10.1063/1.4867135 <https://doi.org/10.1063/1.4867135>`_). The theory and implementation of DF-SAPT is discussed; in the following papers for various levels of SAPT. DF-SAPT0. * ""Large-scale Symmetry-adapted Perturbation Theory Computations via; Density Fitting and Laplace Transformation Techniques: Investigating the; Fundamental Forces of DNA-Intercalator Interactions,"" E. G. Hohenstein,; R. M. Parrish, C. D. Sherrill, J. M. Turney, and H. F. Schaefer, *J.; Chem. Phys.* **135**, 174017 (2011).; (doi: `10.1063/1.3656681 <https://doi.org/10.1063/1.3656681>`_). * ""Density Fitting and Cholesky Decomposition Approximations; in Symmetry-Adapted Perturbation Theory: Implementation and Application; to Probe the Nature of :math:`\pi - \pi` Interactions in Linear Acenes,""; E. G. Hohenstein and C. D. Sherrill, *J. Chem. Phys.* **132**,; 184111 (2010).; (doi: `10.1063/1.3426316 <https://doi.org/10.1063/1.3426316>`_). SAPT2. * ""Density Fitting of Intramonomer Correlation Effects in; Symmetry-Adapted Perturbation Theory,""; E. G. Hohenstein and C. D. Sherrill, *J. Chem. Phys.* **133**,; 014101 (2010).; (doi: `10.1063/1.3451077 <https://doi.org/10.1063/1.3451077>`_). SAPT2+, SAPT2+(3), SAPT2+3. * ""Wavefunction Methods for Noncovalent Interactions,"" E. G.; Hohenstein and ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:16083,adapt,adapted,16083,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['adapt'],['adapted']
Energy Efficiency,"ule object; omega = ip_fitting('wb97', 0.4, 2.0, molecule=h2o). This performs IP fitting on water for wB97/cc-pVDZ with density fitting. A; number of neutral and cation single-point computations are run at various values; of :math:`\omega`, though the later iterations are much faster due to reuse of; the DF tensors, and starting from the neutral/cation orbitals of the previous; :math:`\omega`. The procedure can also be assisted by providing a tighter guess; for the bounds of :math:`\omega`. This small test case has a tuned; :math:`\omega` of 1.700, hence the bounds of 0.4 and 2.0. Larger systems,; particularly conjugated systems, will typically have an optimized :math:`\omega`; between 0.1 and 0.5. Fractional Particle Curves; ~~~~~~~~~~~~~~~~~~~~~~~~~~. The behavior of the electronic energy and HOMO energy across fractional numbers; of electrons is extremely useful for elucidating the MSIE behavior of various; functional technologies. |PSIfour| features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number :math:`N`. Two python macros exist for this code. The first is :py:func:`~psi4.driver.frac.frac_traverse`, which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is::. molecule h2o {; 0 1 # must be neutral; O; H 1 1.0; H 1 1.0 2 104.5; # FRAC jobs will be be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; }. # Argument is functional.; # Many optional arguments are available, see the python file; frac_traverse('wb97', molecule=h2o). The other macro is :py:func:`~psi4.driver.frac.frac_nuke`",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:29780,efficient,efficient,29780,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['efficient'],['efficient']
Energy Efficiency,"ule': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:483866,energy,energy,483866,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ule': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:156421,energy,energy,156421,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ule': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:157804,energy,energy,157804,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ule': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:161757,energy,energy,161757,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ule': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:163140,energy,energy,163140,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ule': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:61832,energy,energy,61832,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ule': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:80051,energy,energy,80051,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ule:* :ref:`Keywords <apdx:thermo>`, :ref:`PSI Variables <apdx:thermo_psivar>`, :source:`THERMO <psi4/driver/qcdb/vib.py>`. .. caution:: It is important to know that |PSIfour|, like any other; quantum chemistry program, does *not* compute the usual enthalpies,; entropies, or Gibbs free energies *of formation* provided by most; reference books. Instead, quantum chemistry programs compute ""absolute""; thermodynamic properties relative to infinitely separated nuclei and; electrons, not ""formation"" values relative to elements in their standard; states. If you are computing thermodynamic differences, like a reaction; enthalpy computed as the enthalpy of the products minus the enthalpy; of the reactants, then these ""absolute"" enthalpies are perfectly valid; and usable. However, they cannot be mixed and matched with enthalpies of; formation from reference books, since the zero of energy is not the same.; Additionally, the ""thermal energies"" reported in kcal/mol are the ; finite-temperature *corrections* to the electronic total energy, and ; not the overall thermal energies themselves. If in doubt, use the; reported Total Energies in Hartree/particle. Keywords; ^^^^^^^^. .. include:: autodir_options_c/thermo__t.rst; .. include:: autodir_options_c/thermo__p.rst; .. include:: autodir_options_c/thermo__rotational_symmetry_number.rst. .. _`sec:thermoExamples`:. Examples; ^^^^^^^^. A thermochemical analysis is performed after any full (not just specific; symmetry subgroups). If the wavefunction is retained, it may be reused; at a different temperature, pressure, rotational symmetry number, or; isotopic substitution through the function :py:func:`psi4.driver.qcdb.vib.thermo`; as is shown in :srcsample:`freq-isotope2`. A few summary psivars are set: ""ZPVE"", ""THERMAL ENERGY CORRECTION"",; ""ENTHALPY CORRECTION"", ""GIBBS FREE ENERGY CORRECTION"", ""ZERO K; ENTHALPHY"", ""THERMAL ENERGY"", ""ENTHALPY"", ""GIBBS FREE ENERGY"".; But additionally, every valid combination of {S, Cv, Cp, ZPE, E, H, G};",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/thermo.rst:2383,energy,energy,2383,doc/sphinxman/source/thermo.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/thermo.rst,1,['energy'],['energy']
Energy Efficiency,"ult'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'sc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:174500,energy,energy,174500,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ult'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:58188,energy,energy,58188,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ult'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'roh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:59526,energy,energy,59526,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ult'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:63554,energy,energy,63554,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ult'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:64892,energy,energy,64892,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ult'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:76407,energy,energy,76407,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ult'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'roh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:77745,energy,energy,77745,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ult'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:81773,energy,energy,81773,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ult'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:83111,energy,energy,83111,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:2823,energy,energy,2823,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"un_mp2_5(name, **kwargs):; lowername = name.lower() # handy variable with name keyword in lowercase; kwargs = kwargs_lower(kwargs) # removes case sensitivity in keyword names; ; # Run detci calculation and collect conventional quantities; energy('mp3', **kwargs); e_scf = psi4.get_variable('SCF TOTAL ENERGY'); ce_mp2 = psi4.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = psi4.get_variable('MP3 CORRELATION ENERGY'); e_mp2 = e_scf + ce_mp2 # reform mp2 and mp3 total energies for printing; e_mp3 = e_scf + ce_mp3; ; # Compute quantities particular to MP2.5; ce_mp25 = 0.5 * (ce_mp2 + ce_mp3); e_mp25 = e_scf + ce_mp25; psi4.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25) # add new method's important results; psi4.set_variable('MP2.5 TOTAL ENERGY', e_mp25) # to PSI variable repository; psi4.set_variable('CURRENT CORRELATION ENERGY', ce_mp25); psi4.set_variable('CURRENT ENERGY', e_mp25) # geometry optimizer tracks this variable, permits; # MP2.5 finite difference optimizations ; # build string of title banner and print results; banners = ''; banners += """"""psi4.print_out('\\n')\n""""""; banners += """"""banner(' MP2.5 ')\n""""""; banners += """"""psi4.print_out('\\n')\n\n""""""; exec banners; ; tables = ''; tables += """""" SCF total energy: %16.8f\n"""""" % (e_scf); tables += """""" MP2 total energy: %16.8f\n"""""" % (e_mp2); tables += """""" MP2.5 total energy: %16.8f\n"""""" % (e_mp25); tables += """""" MP3 total energy: %16.8f\n\n"""""" % (e_mp3); tables += """""" MP2 correlation energy: %16.8f\n"""""" % (ce_mp2); tables += """""" MP2.5 correlation energy: %16.8f\n"""""" % (ce_mp25); tables += """""" MP3 correlation energy: %16.8f\n"""""" % (ce_mp3); psi4.print_out(tables) # prints nice header and table of all involved quantities to output file; ; return e_mp25 . One final step is necessary. At the end of the ``aliases.py`` file, add ; the following line. ::. procedures['energy']['mp2.5'] = run_mp2_5. This permits the newly defined MP2.5 method to be called in the input file; with the following command. ::. energy('mp2.5'). ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst:3924,energy,energy,3924,doc/sphinxman/source/quickaddalias.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst,9,['energy'],['energy']
Energy Efficiency,"unc:`psi4.driver.driver_cbs_helper.xtpl_highest_1` and; :py:func:`psi4.driver.driver_cbs_helper.scf_xtpl_helgaker_2` and composite; aliases like :py:func:`psi4.driver.aliases.sherrill_gold_standard`; and :py:func:`psi4.driver.aliases.allen_focal_point` in the old way; passed the Python function directly, whereas the new way uses the; string of the function name. A CCSD(T) DT coupled-cluster correction atop a TQ MP2 extrapolation; geometry optimization can also be accessed through the first item below more; conveniently than the equivalent second and third items. * ``optimize('mp2/cc-pv[tq]z + D:ccsd(t)/cc-pvdz')``. * ``optimize(""cbs"", corl_wfn='mp2', corl_basis='cc-pv[tq]z', delta_wfn='ccsd(t)', delta_basis='cc-pvdz')``. * ``optimize(""cbs"", cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvqz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[tq]z""}, {""wfn"": ""ccsd(t)"", ""basis"": ""cc-pvdz""}])``. Many examples can be found at :srcsample:`cbs-xtpl-energy`,; :srcsample:`cbs-xtpl-gradient`, :srcsample:`cbs-xtpl-opt`,; :srcsample:`cbs-xtpl-freq`, :srcsample:`cbs-xtpl-func`,; :srcsample:`cbs-xtpl-wrapper`, :srcsample:`cbs-xtpl-dict`. .. autofunction:: psi4.cbs(name [, scf_basis, scf_scheme, corl_wfn, corl_basis, corl_scheme, delta_wfn, delta_wfn_lesser, delta_basis, delta_scheme, delta2_wfn, delta2_wfn_lesser, delta2_basis, delta2_scheme, cbs_metadata]); :noindex:. .. note:: As of October 2018, only two explicit ```deltaN_[wfn,basis,scheme]``` sets of options are active; if more delta functions are required, use the ```cbs_metadata``` interface. Also, temporarily extrapolations are performed on differences of target and scf total energies, rather than on correlation energies directly. This doesn't affect the extrapolated values of the particular formulas defined here (though it does affect the betas, which are commented out), but it is sloppy and temporary and could affect any user-defined corl extrapolations. .. index::; pair: cbs(); output. Output; ^^^^^^. At the beginning of a cbs() job is print",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst:3396,energy,energy,3396,doc/sphinxman/source/cbs.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst,1,['energy'],['energy']
Energy Efficiency,"unded to nearest integer. .. psivar:: CCD TOTAL ENERGY; CCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the coupled-cluster doubles level of theory. .. psivar:: CC ALPHA-ALPHA PAIR ENERGIES; CCSD ALPHA-ALPHA PAIR ENERGIES; CC2 ALPHA-ALPHA PAIR ENERGIES; CC3 ALPHA-ALPHA PAIR ENERGIES; MP2 ALPHA-ALPHA PAIR ENERGIES. Restricted-reference same-spin pair energies for coupled-cluster theories.; Size number of active doubly occupied orbitals, square. .. psivar:: CC ALPHA-BETA PAIR ENERGIES; CCSD ALPHA-BETA PAIR ENERGIES; CC2 ALPHA-BETA PAIR ENERGIES; CC3 ALPHA-BETA PAIR ENERGIES; MP2 ALPHA-BETA PAIR ENERGIES. Restricted-reference opposite-spin (alpha first) pair energies for coupled-cluster; theories. Size number of active doubly occupied orbitals, square. .. psivar:: CC SINGLET PAIR ENERGIES; CCSD SINGLET PAIR ENERGIES; CC2 SINGLET PAIR ENERGIES; CC3 SINGLET PAIR ENERGIES; MP2 SINGLET PAIR ENERGIES. Restricted-reference singlet-adapted pair energies for coupled-cluster theories.; Size number of active doubly occupied orbitals, square. .. psivar:: CC TRIPLET PAIR ENERGIES; CCSD TRIPLET PAIR ENERGIES; CC2 TRIPLET PAIR ENERGIES; CC3 TRIPLET PAIR ENERGIES; MP2 TRIPLET PAIR ENERGIES. Restricted-reference triplet-adapted pair energies for coupled-cluster theories.; Size number of active doubly occupied orbitals, square. .. psivar:: CCSD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCn TOTAL ENERGY; CCn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested full coupled-cluster (CCSD, CCSDT, up to CC\ *n*); level of theory. .. psivar:: CCSD(T) TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(AT) TOTAL ENERGY; CCSD(AT) CORRELATION ENERGY; A-CCSD(T) TOTAL ENERGY; A-CCSD(T) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n) CORRELATI",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:20117,adapt,adapted,20117,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['adapt'],['adapted']
Energy Efficiency,"upled-cluster; theory, can be found in the :source:`samples` directory. Running a Basic Hartree--Fock Calculation; =========================================. In our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartree--Fock, or RHF, is usually; appropriate for a closed-shell molecule). The program correctly guessed; all of these options for us. We can change the default behavior through; additional ke",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:3897,energy,energy,3897,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['energy'],['energy']
Energy Efficiency,"us': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:111114,energy,energy,111114,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"us': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:445589,energy,energy,445589,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"us': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:446706,energy,energy,446706,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"used in concert with DIIS, though care should be taken to not turn MOM on; until the oscillatory behavior begins.; Damping [Off by Default]; In some cases, a static mixing of Fock Matrices from adjacent; iterations can quench oscillations. This mixing, known as; ""damping"" can be activated by setting the; |scf__damping_percentage| keyword to a nonzero percent. Damping is; turned off when the DIIS error is smaller than; |scf__damping_convergence|.; Level shifting [Off by default]; A commonly used alternative to damping is to use level shifting,; which decreases the mixing of occupied and unoccupied orbitals in; the SCF update by moving the unoccupied orbitals up in energy. It; can be shown that the SCF procedure always converges with a; suitably large level shift; however, the larger the shift is, the; slower the convergence becomes, and the calculation may end up; converging onto a higher lying SCF solution. Because of this, in; practice level shifting is most useful in the initial phase of the; calculation to reduce the orbital error enough for DIIS to work; well. The level shift is controlled by the parameter; |scf__level_shift|, and it is turned off when the DIIS error is; smaller than |scf__level_shift_cutoff|. Reasonable values for; the shift and convergence threshold are 5.0 and 1e-2,; respectively.; SOSCF [Off by Default]; See :ref:`sec:soscf`. .. _`sec:scferi`:. ERI Algorithms; ~~~~~~~~~~~~~~. The key difficulty in the SCF procedure is treatment of the four-index ERI; contributions to the Fock Matrix. A number of algorithms are available in; |PSIfour| for these terms. The algorithm is selected by the |globals__scf_type|; keyword. Most consist of a single algorithm applied to; the construction of both the Coulomb and Exchange parts; of the Fock Matrix:. PK [:ref:`Default <table:conv_scf>`]; An out-of-core, presorted algorithm using exact ERIs. Quite fast for a; zero-error algorithm if enough memory is available. Integrals are; generated only once, and symmetry",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:27424,reduce,reduce,27424,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['reduce'],['reduce']
Energy Efficiency,"ut WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: BSSE. .. index::; triple: setting; keywords; cp; triple: setting; keywords; vmfc; single: counterpoise correction. .. _`sec:cp()`:. Basis Set Superposition Corrections; ===================================. .. codeauthor:: Daniel G. A. Smith. .. autofunction:: psi4.driver.driver_nbody.nbody(func, method_string [, molecule, bsse_type, max_nbody, ptype, return_total_data]). The nbody function computes counterpoise-corrected (CP), non-CP (noCP), and Valiron-Mayer Function Counterpoise (VMFC) interaction energies for complexes composed of arbitrary numbers of monomers. **Examples :** ::. # Counterpoise corrected CCSD(T) energies for the Helium dimer; molecule mol {; He; --; He 1 3; }; # Calculate interaction energies only (skips monomers in monomer basis):; energy('CCSD(T)', bsse_type='cp'); # Calculate interaction and total energies, return interaction energies:; energy('CCSD(T)', bsse_type=['cp','nocp']); # Calculate and return counterpoise-corrected gradient; # Useful for e.g. CP-corrected geometry optimization; gradient('CCSD(T)', bsse_type='cp', return_total_data=True). # noCP, VMFC, and CP energy for a helium cluster, limited at 3 bodies; molecule mol {; He 0 0 0; --; He 0 0 4; --; He 0 4 0; --; He 4 0 0; }. # Returns the nocp energy as its first in the list; energy('CCSD(T)', bsse_type=['nocp', 'cp', 'vmfc'], max_nbody=3). API; ---. .. autoclass:: psi4.driver.driver_nbody.BsseEnum; :members:; :undoc-members:. .. autopydantic_model:: psi4.driver.driver_nbody.ManyBodyComputer. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/nbody.rst:1835,energy,energy,1835,doc/sphinxman/source/nbody.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/nbody.rst,5,['energy'],['energy']
Energy Efficiency,"utral, spin-singlet fragments.; For anything complicated, we strongly suggest explicitly providing the charge; and multiplicity of each fragment as well as the total molecular charge and multiplicity. For details and examples, see https://github.com/MolSSI/QCElemental/blob/master/qcelemental/molparse/chgmult.py#L105-L136 . Having defined a molecule containing fragments like ``eneyne`` above, it; is a simple matter to perform calculations on only a subset of the; fragments. For instance, the commands below run a scf first on the ethene; fragment alone (``extract_subsets(1)`` pulls out fragment 1 as Real atoms; and discards remaining fragments) and next on the ethene fragment with the; ethyne fragment ghosted (``extract_subsets(1,2)`` pulls out fragment 1 as; Real atoms and sets fragment 2 as Ghost atoms). For beyond bimolecular; complexes, arrays can be used, e.g. ``extract_subsets(2,[1,3])``::. mA = eneyne.extract_subsets(1); energy('scf'); ; clean(); ; mAcp = eneyne.extract_subsets(1,2); energy('scf'). If the molecule contains fragments but is not conveniently ordered for the; ``--`` marker, the :py:func:`~psi4.driver.wrapper_autofrag.auto_fragments` function can be applied, as shown in; :srcsample:`pywrap-basis`, to return as active molecule the previous; active molecule, only fragmented. Advanced Python; ===============. A named molecule in an input file is a full-fledged instance of the; powerful C++ :py:class:`~psi4.core.Molecule` class. Thus, all member; functions (that have been exported via pybind11) documented thereat; are accessible through the handle :samp:`{option_molecule_name}` in; :samp:`molecule {optional_molecule_name} \\{...\\}`. * The molecular geometry can be got and set and manipulated as a; :py:class:`~psi4.core.Matrix` object. Below shows how to access; coordinates in an input file in Python. ::. molecule formaldehyde {; C 0.0 0.0 0.0; O 0.0 1.2 0.0; H -0.8 -0.3 0.0; H 0.8 -0.3 0.0 # set geometry in angstroms; }. formaldehyde.update_geometry()",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:21149,energy,energy,21149,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['energy'],['energy']
Energy Efficiency,"v', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:334929,energy,energy,334929,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"v', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:488399,energy,energy,488399,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"v', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'e",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:524883,energy,energy,524883,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"v', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:175427,energy,energy,175427,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"v', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:336396,energy,energy,336396,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"v', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:343401,energy,energy,343401,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"v', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:420198,energy,energy,420198,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"v', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:489866,energy,energy,489866,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"v', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:495176,energy,energy,495176,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"vailable in Python, most of the code to implement; the overall calculation can be written in simpler Python code. Python is far; better suited to management tasks such as directory navigation and retrieval,; making it a natural choice for overall calculation layout than C++. With the; emergence of `NumPy <https://numpy.org/>`_ as a standard tool for executing almost any; mathematical technique efficiently in Python, the transitioning of code from; C++ to Python has facilitated a much simpler work flow for prototyping and; developing methods: this is detailed in the next section. .. _`sec:prog_psi4numpy`:. Rapid initial development using Psi4NumPy; -----------------------------------------. The `Psi4NumPy <https://github.com/psi4/psi4numpy>`_ project [Smith:2018:3504]_ is the recommended; mechanism for developing and prototyping new methods in Psi4. Because; `NumPy <https://numpy.org/>`_ provides such a rich set of features for efficient linear; algebra, Fourier transforms, and general tensor manipulations, a massive number; of methods can be easily implemented very easily using that library. To; facilitate this workflow, |PSIfour| exports key quantities such as integrals,; densities and molecular orbitals in NumPy format. From this point, the; programmer can simply call the appropriate |PSIfour| functions to compute the; desired input quantities, retrieve them in NumPy format, and then write the; remaining code using standard Python and/or NumPy syntax. This approach does; not require any recompilation of code, resulting in a particularly facile; development workflow. Detailed examples and tutorials are available in the; `Psi4NumPy <https://github.com/psi4/psi4numpy>`_ repository. .. _`sec:prog_plugins`:. Avoiding the need to modify Psi4, using plugins; -----------------------------------------------. In the early days when |PSIfour| was still primarily a C++ code, development; was very cumbersome due to a lengthy build process. To expedite development, a; plugin sy",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst:3285,efficient,efficient,3285,doc/sphinxman/source/prog_ways_to_add.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst,1,['efficient'],['efficient']
Energy Efficiency,"var:: FCI TOTAL ENERGY; FCI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the full configuration interaction level of theory. .. psivar:: GIBBS FREE ENERGY. Total Gibbs free energy [E_h], free enthalpy at given temperature. .. psivar:: GIBBS FREE ENERGY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the free enthalpy at given temperature. .. psivar:: GRID ELECTRONS TOTAL; GRID ELECTRONS ALPHA; GRID ELECTRONS BETA. The number of electrons integrated by the xc quadrature grid. .. psivar:: HF TOTAL ENERGY. The total electronic energy [E_h] for the Hartree--Fock method, without; any dispersion correction; the first three (or four, since; :math:`E_{xc} = 0`) terms in Eq. :eq:`SCFterms`. Quantity :math:`E_{\text{HF}}`; in Eq. :eq:`SCFterms`. .. psivar:: HF KINETIC ENERGY. The total kinetic energy [E_h] of the Hartree--Fock method. .. psivar:: HF POTENTIAL ENERGY. The total potential energy [E_h] of the Hartree--Fock method. .. psivar:: HF VIRIAL RATIO. The virial ratio of the Hartree--Fock method. Only defined for a fully quantum mechanical computation, i.e., not QM/MM. .. psivar:: HF TOTAL GRADIENT. The total electronic gradient [E_h/a0] of the Hartree--Fock method, ({nat}, 3). .. psivar:: HF DIPOLE GRADIENT. The derivative of the Hartree--Fock method dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). .. psivar:: HF TOTAL HESSIAN. The total electronic second derivative [E_h/a0/a0] for the Hartree-Fock method, (3 * {nat}, 3 * {nat}). .. psivar:: LCCD TOTAL ENERGY; LCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster doubles level of theory. .. psivar:: LCCSD TOTAL ENERGY; LCCSD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the linearized coupled cluster s",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:35951,energy,energy,35951,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"var:`PATH` or; :envvar:`PSIPATH`. The ``GENBAS`` file containing basis sets in Cfour; format is not necessary for this interface, but if you prefer to access; basis sets the ""Cfour way"" using a custom ``GENBAS`` file (the distributed; one is included with the interface), it, too, must be in :envvar:`PATH` or; :envvar:`PSIPATH`. If |PSIfour| is unable to execute the binary, an error; will be reported. .. .. caution:: The p4c4 interface isn't in the master branch nor will it be in; .. the near future. To run this code, (1) build the ``c4`` branch of psi4,; .. (2) find a copy of cfour and put it in :envvar:`PATH` or; .. :envvar:`PSIPATH`, and (3) clone https://github.com/loriab/qcdb.git; .. python module and prepend :envvar:`PYTHONPATH` with the top qcdb; .. directory (the path added to PYTHONPATH should have one ""qcdb"" in it;; .. the cloned qcdb is what needs to be imported in preference to the one; .. already in psi4). Execute psi4 as usual. .. caution:: The p4c4 interface hasn't been fully adapted for the new March 2014 version. Cfour for |PSIfour| Users; ~~~~~~~~~~~~~~~~~~~~~~~~~. * Set memory as usual. * Set molecule as usual. * Set basis set as usual (Cfour only cares about orbital basis, no fitting; bases). * Set the task as usual, indicating Cfour as the intended code by; prepending ""c4-"" to the method argument. So ``energy('scf')`` becomes; ``energy('c4-scf')`` and ``optimize('ccsd(t)')`` becomes; ``optimize('c4-ccsd(t)')``. Find available methods for; :py:func:`~psi4.driver.energy` at :ref:`Energy (CFOUR) <table:energy_cfour>`; and for :py:func:`~psi4.driver.optimize` at :ref:`Gradient (CFOUR); <table:grad_cfour>`. * Generally, the p4c4 interface will handle best practices for path of; execution: ``vcc``/``ecc``, derivative type, *etc.* The user is still; responsible for setting convergence, frozen core, guess, diis, *etc.*; For the moment, so-called ""best-practices"" keywords are summarized at; :ref:`Best Practices <table:cfour_cc_program>`. * For the type of ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:2858,adapt,adapted,2858,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['adapt'],['adapted']
Energy Efficiency,"var>`, :source:`MRCC <psi4/src/psi4/mrcc>`, :ref:`Samples <apdx:testSuitemrcc>`. |PSIfour| contains code to interface to the MRCC program of M. K\ |a_acute|\ llay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mih\ |a_acute|\ ly K\ |a_acute|\ llay (`https://www.mrcc.hu/ <https://www.mrcc.hu/>`_). Installation; ~~~~~~~~~~~~. Follow the instructions provided with the source to build the MRCC programs.; To be used by |PSIfour|, ensure that the program binary (``dmrcc``) can be; found in your :envvar:`PATH`. If |PSIfour| is unable to execute the binary, an; error will be reported. Running MRCC; ~~~~~~~~~~~~. MRCC can be invoked in similar fashion as other theories provided in |PSIfour|.; To indicate MRCC as the target software, set |globals__qc_module|\ ``=MRCC``.; This is a change as of October 2022; previously, one prefixed the method by ""mr""; to indicate MRCC (e.g., ``energy('mrccsdt')``).; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; qc_module mrcc; }; energy('ccsdt'). ``'ccsdt'`` in the call to :py:func:`~psi4.driver.energy` plus ``qc_module=mrcc`` instructs |PSIfour| to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; Here the ``qc_module=mrcc`` is optional since |PSIfour| has no builtin module; that can perform CCSDT. For a method like CCSD, no specification of |globals__qc_module|; will default to the CCENERGY module, and specification with value ``mrcc`` is; required to route the computation to the MRCC program.; For a CCSDT(Q) energy, simply use ``'ccsdt(q)'`` in the call to; :py:func:`~psi4.driver.energy`. MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only. At this time, |PSIfour| is only able to automatically generate the proper; input file for MRCC for the methods listed in table belo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst:2338,energy,energy,2338,doc/sphinxman/source/mrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst,1,['energy'],['energy']
Energy Efficiency,"ve) than CASSCF. Inactive orbitals in the MCSCF may be specified by the; |globals__restricted_docc| and |globals__restricted_uocc| keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively, in the; MCSCF wavefunction. However, the form of these orbitals will be optimized in; the MCSCF procedure. It is also possible to literally freeze inactive orbitals; in their original (SCF) form using the |globals__frozen_docc| and; |globals__frozen_uocc| keywords. This is not normally what one wishes to do in; an MCSCF computation (*e.g.*, it complicates the computation of gradients), but; it can make the computations faster and is helpful in some circumstances where; unphysical mixing of inactive and active occupied orbitals might occur.; Presently, it is not possible to mix the use of restricted and frozen orbitals; in |PSIfour|. An illustrative CASSCF example is as follows::. molecule {; O; H 1 1.00; H 1 1.00 2 103.1; }; ; set {; basis 6-31G**; restricted_docc [1, 0, 0, 0]; active [3, 0, 1, 2]; }; energy('casscf'). This input will compute the CASSCF energy of water where the 1s Oxygen orbital; and several virtual orbitals are not included in the CI expansion, but are; still optimized. The following is a full list of spaces within the various MCSCF; types. .. _`table:mcscf_spaces`:. .. table:: Orbital spaces for MCSCF computations. +----------------------------+----------------------------+; | RASSCF | CASSCF |; +============================+============================+; | |globals__frozen_uocc| | |globals__frozen_uocc| |; +----------------------------+----------------------------+; | |globals__restricted_uocc| | |globals__restricted_uocc| |; +----------------------------+----------------------------+; | |globals__ras4| | |globals__active| |; +----------------------------+ +; | |globals__ras3| | |; +----------------------------+ +; | |globals__ras2| | |; +----------------------------+ +; | |globals__ras1| | |; +----------------------------+------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mcscf.rst:3705,energy,energy,3705,doc/sphinxman/source/mcscf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mcscf.rst,1,['energy'],['energy']
Energy Efficiency,"vectors of the named method; from ground state to root *n*. DFT; functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 (IN h) -> ROOT n (IN i) RIGHT EIGENVECTOR BETA. The right beta spin eigenvectors of the named method; from ground state, which is in irrep *h*, to root *n* within irrep *i*. DFT; functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 (h) -> ROOT n (i) RIGHT EIGENVECTOR BETA. The right beta spin eigenvectors of the named method; from ground state, which is in irrep *h*, to root *n*, which is in irrep *i*. DFT; functional labeled if canonical. .. psivar:: TD-fctl ROOT 0 -> ROOT n RIGHT EIGENVECTOR BETA - h TRANSITION. The right alpha and beta spin eigenvectors of the named method; from ground state to root *n*, and the transition is of irrep *h*. DFT; functional labeled if canonical. .. psivar:: THERMAL ENERGY. Total thermal energy E [E_h] at given temperature. .. psivar:: THERMAL ENERGY CORRECTION. Sum of electronic, translational, rotational, and vibrational corrections [E_h] to the thermal energy at given temperature. .. psivar:: TWO-ELECTRON ENERGY. The two-electron energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{2e^-}` in Eq. :eq:`SCFterms`. .. psivar:: UNCP-CORRECTED 2-BODY INTERACTION ENERGY. The interaction energy [E_h] considering only two-body interactions,; computed without counterpoise correction.; Related variable :psivar:`CP-CORRECTED 2-BODY INTERACTION ENERGY`. .. math:: E_{\text{IE}} = E_{dimer} - \sum_{monomer}^{n}{E_{monomer}^{\text{unCP}}}. .. psivar:: WIBERG LOWDIN INDICES. Property of Wiberg bond indices using orthogonal L\ |o_dots|\ wdin orbitals, (nat, nat). .. psivar:: ZAPTn TOTAL ENERGY; ZAPTn CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the labeled Z-averaged perturbation theory level.; *n* is ZAPT perturbation order. .. psivar:: ZERO K ENTHALPY. Total electronic and zero-point energy [E_h] at 0 [K]. .. psivar:: ZPVE. Vibrational zero-point",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:68741,energy,energy,68741,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"ven input. Although Python-driven; model allowed for great flexibility from a user's perspective, programming was; still relatively difficult because it required modifications to be made in C++; code. Since those early days, the code has undergone some important structural; changes that have greatly simplified the development workflow. These changes; were motivated by the realization that only a few bottlenecks exist in a typical; calculation; by focusing on optimized C++ implementations of these bottlenecks; and making these C++ functions available in Python, most of the code to implement; the overall calculation can be written in simpler Python code. Python is far; better suited to management tasks such as directory navigation and retrieval,; making it a natural choice for overall calculation layout than C++. With the; emergence of `NumPy <https://numpy.org/>`_ as a standard tool for executing almost any; mathematical technique efficiently in Python, the transitioning of code from; C++ to Python has facilitated a much simpler work flow for prototyping and; developing methods: this is detailed in the next section. .. _`sec:prog_psi4numpy`:. Rapid initial development using Psi4NumPy; -----------------------------------------. The `Psi4NumPy <https://github.com/psi4/psi4numpy>`_ project [Smith:2018:3504]_ is the recommended; mechanism for developing and prototyping new methods in Psi4. Because; `NumPy <https://numpy.org/>`_ provides such a rich set of features for efficient linear; algebra, Fourier transforms, and general tensor manipulations, a massive number; of methods can be easily implemented very easily using that library. To; facilitate this workflow, |PSIfour| exports key quantities such as integrals,; densities and molecular orbitals in NumPy format. From this point, the; programmer can simply call the appropriate |PSIfour| functions to compute the; desired input quantities, retrieve them in NumPy format, and then write the; remaining code using standard Pyt",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst:2741,efficient,efficiently,2741,doc/sphinxman/source/prog_ways_to_add.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst,1,['efficient'],['efficiently']
Energy Efficiency,"ver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:132694,energy,energy,132694,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenerg",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:136468,energy,energy,136468,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'met",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:225712,energy,energy,225712,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:227081,energy,energy,227081,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ve|, *etc.*, need to be; in the global ``set {...}`` block section of the input file so they may; be accessed by other modules. The ability to perform state-averaged ; [Docken:1972:4928]_ [Ruedenberg:1979:1069]_; CASSCF or RASSCF computations has been added. This is accomplished using the ; |detci__avg_states| keyword. See the :srcsample:`casscf-sp` and :srcsample:`casscf-sa-sp` examples in the ; samples directory and the example below. Basic Keywords; --------------. WFN = string; This may be ``casscf`` or ``rasscf``. REFERENCE = string; Any of the references allowed by detci should work (*i.e.*, not; {\tt uhf}), but there should be no reason not to use {\tt rhf}. DERTYPE = string; At present, only energies ({\tt none}) are supported; future; releases will implement gradients ({\tt first}). CONVERGENCE = integer; Convergence desired on the orbital gradient. Convergence is achieved when; the RMS of the error in the orbital gradient is less than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing the {\tt CONVERGENCE} keywords within separate sections of; input, such as {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. RESTRICTED\_UOCC = (integer array); Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energy unoccupied orbitals in each irreducible; representation into which there will b",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:4618,energy,energy,4618,doc/sphinxman/source/attic/detcas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst,1,['energy'],['energy']
Energy Efficiency,"w.youtube.com/watch?v=fD6mu_tTG_c&index=3&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_,; while an additional video describing how to plot the density and ESP fields from; the I-SAPT embedding procedure is available `I-SAPT#2 <https://www.youtube.com/watch?v=hDbonAOD5dY&index=4&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_::. memory 1 GB; ; molecule mol {; 0 1; O 0.39987 2.94222 -0.26535; H 0.05893 2.05436 -0.50962; --; 0 1; O 0.48122 0.30277 -0.77763; H 0.26106 -0.50005 -1.28451; --; 0 1; C 2.33048 -1.00269 0.03771; C 1.89725 0.31533 -0.59009; C 2.28232 1.50669 0.29709; C 1.82204 2.84608 -0.29432; C 2.37905 4.02099 0.49639; H 3.41246 -1.03030 0.19825; H 2.05362 -1.84372 -0.60709; H 1.82714 -1.16382 0.99734; H 2.36243 0.42333 -1.57636; H 3.36962 1.51414 0.43813; H 1.81251 1.38060 1.28140; H 2.14344 2.92967 -1.33843; H 3.47320 4.02400 0.48819; H 2.03535 3.99216 1.53635; H 2.02481 4.96785 0.07455; symmetry c1; no_reorient; no_com; }; ; # => Standard Options <= #; ; set {; basis jun-cc-pvdz; scf_type df; guess sad; freeze_core true; fisapt_do_plot true # For extra analysis; }; ; energy('fisapt0'). This is essentially the same input as for F-SAPT, except that the molecular; system is now divided into *three* moieties |w--w| subsystems A and B whose; intramolecular interaction we wish to compute, and a linking unit C. This file; runs a DF-HF computation on the full system using |PSIfours| existing SCF code.; At the start of the FISAPT code, the occupied orbitals are localized and divided; by charge considerations into A, B, C, and link sets. By default, linking sigma; bonds are assigned to C (this can be changed by the |fisapt__fisapt_link_assignment|; options). Then, non-interacting Hartree--Fock solutions for A and B are optimized; in the embedding field of the linking moiety C. At this point, A and B are not; interacting with each other, but have any potential covalent links or other; interactions with C built in by the embedding. A standard F-SAPT0 computation; is then perf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:13567,energy,energy,13567,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['energy'],['energy']
Energy Efficiency,"ware; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:introduction`:. ============; Introduction; ============. Overview; ========. |PSIfour| provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. :ref:`sec:threading`).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease. |PSIfour| is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes |PSIfour| incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in |PSIfour|, with many functionals available. Density fitting is ubiquitous in; |PSIfour|, leading to some of the most efficient MP2 and CCSD(T) code available.; |PSIfour| also introduces extensive,; powerful features for e",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:1340,efficient,efficiently,1340,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['efficient'],['efficiently']
Energy Efficiency,"which is of irrep *h* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n TOTAL ENERGY - h TRANSITION; TD-fctl ROOT n TOTAL ENERGY - h TRANSITION. The total electronic energy [E_h] for the requested theory and root *n*, and the transition is of irrep *h*, (*n* starts at 0). .. psivar:: CCname ROOT n CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n* (*n* starts at 0).; DFT functional labeled if canonical. .. psivar:: CCname ROOT n (IN h) CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n* within irrep *h* (*n* starts at 0). .. psivar:: CCname ROOT n (h) CORRELATION ENERGY. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n*, which is of irrep *h* (*n* starts at 0). .. psivar:: CCname ROOT n CORRELATION ENERGY - h TRANSITION. The correlation energy [E_h] for the requested coupled cluster level of theory and root *n*, and the transition is of irrep *h*, (*n* starts at 0). .. psivar:: CCname ROOT n DIPOLE. Dipole array [e a0] for the requested coupled cluster level of theory and root *n* (*n* starts at 0), (3,). .. psivar:: CCname ROOT n (IN h) DIPOLE. Dipole array [e a0] for the requested coupled cluster level of theory and root *n* within irrep *h* (*n* starts at 0), (3,). .. psivar:: CCname ROOT n (h) DIPOLE. Dipole array [e a0] for the requested coupled cluster level of theory and root *n*, which is of irrep *h* (*n* starts at 0), (3,). .. psivar:: CCname ROOT n DIPOLE - h TRANSITION. Dipole array [e a0] for the requested coupled cluster level of theory and root *n*, and the transition is of irrep *h*, (*n* starts at 0), (3,). .. psivar:: CCname ROOT n QUADRUPOLE. Redundant quadrupole array [e a0^2] for the requested coupled cluster level of theory and root *n* (*n* starts at 0), (3,3). .. psivar:: CCname ROOT n (IN h) QUADRUPOLE. Redundant quadrupole array [e a0^2] for the re",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:11285,energy,energy,11285,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['energy'],['energy']
Energy Efficiency,"xch_scale_alpha true``. Alternatively, another value for :math:`\alpha`; can be specified by setting |sapt__exch_scale_alpha| to a value. For example, ::. set exch_scale_alpha 1.0. will set :math:`\alpha = 1.0` and scale exchange energies with :math:`p_{EX}(1.0)`. However, as pointed out by Schaffer and Jansen [Schaffer:2013:2570]_; in the context of DFT-based SAPT, the ratios :math:`E_{exch}^{(1)}(S^{2})/E_{exch}^{(1)}`,; :math:`E_{\rm exch-ind}^{(2)}(S^2)/E_{\rm exch-ind}^{(2)}`, and ; :math:`E_{\rm exch-disp}^{(2)}(S^2)/E_{\rm exch-disp}^{(2)}` are not very similar to; each other. Hence, in 2016 universal scaling of all :math:`S^{2}` approximated terms; was turned off by default. Finally, in 2014 Parker et al. [Parker:2014:094106]_ empirically discovered that ; SAPT0 energies for van der Waals dimers with close contacts benefit from a slightly modified ; recipe that involves an empirically adjusted exponent :math:`\alpha = 3.0`. ; To distinguish it from its unscaled counterpart, this energy is denoted sSAPT0 (see [Parker:2014:094106]_). .. math:: E_{sSAPT0} = E_{elst}^{(10)} + E_{exch}^{(10)} + E_{ind,resp}^{(20)} +; p_{EX}(3.0) E_{exch-ind,resp}^{(20)} + E_{disp}^{(20)} + p_{EX}(3.0) E_{exch-disp}^{(20)} ; + \delta_{HF}^{(2)}; :label: sSAPT0. where :math:`\delta_{HF}^{(2)}` is computed *without* any scaling. Please note that ; sSAPT0 is thus not the same as requesting ``exch_scale_alpha 3.0``, and that the; scaling is automatically performed by requesting ``energy('ssapt0')``. A First Example; ^^^^^^^^^^^^^^^. The following is the simplest possible input that will perform all; available SAPT computations (normally, you would pick one of these methods,; not all of them). ::. 	molecule water_dimer {; 	 0 1; 	 O -1.551007 -0.114520 0.000000; 	 H -1.934259 0.762503 0.000000; 	 H -0.599677 0.040712 0.000000; 	 --; 	 0 1; 	 O 1.350625 0.111469 0.000000; 	 H 1.680398 -0.373741 -0.758561; 	 H 1.680398 -0.373741 0.758561; 	; 	 units angstrom; 	 no_reorient; 	 symmetry c1",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:13259,energy,energy,13259,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['energy'],['energy']
Energy Efficiency,"ximation, TDA, Tamm--Dancoff approximation; .. _`sec:tdscf`:. TDSCF: Time-dependent Hartree--Fock and density-functional theory; =================================================================. .. codeauthor:: Andrew M. James, Daniel G. A. Smith, Ruhee Dcuhna, Roberto Di Remigio and Jeff Schriber; .. sectionauthor:: Roberto Di Remigio. *Module:* :ref:`Keywords <apdx:scftdscf>`, :ref:`PSI Variables <apdx:scf_psivar>`, :source:`LIBSCF_SOLVER <psi4/src/psi4/libscf_solver>`. .. _`sec:tdscfintro`:. Introduction; ~~~~~~~~~~~~. |PSIfour| provides the capability to calculate excitation energies and ground to; excited state transition properties for SCF reference wavefunctions in a linear; response formalism [Dreuw2005-wp]_. An illustrative example of using the TDSCF functionality is as follows::. molecule {; 0 1; O 0.000000 0.695000 -0.092486; O -0.000000 -0.695000 -0.092486; H -0.388142 0.895249 0.739888; H 0.388142 -0.895249 0.739888; symmetry c1; }. set {; tdscf_states 10; }. energy('td-scf/cc-pvdz'). This will seek to converge 10 singlet roots from a restricted Hartree--Fock reference. The roots are obtained with an iterative eigensolver and the following is the printout from the calculation::. ---------------------------------------------------------; TDSCF excitation energies; by Andrew M. James and Daniel G. A. Smith; ---------------------------------------------------------. ==> Options <==. Residual threshold : 1.0000e-04; Initial guess : denominators; Reference : RHF; Solver type : RPA (Hamiltonian). ==> Requested Excitations <==. 10 singlet states with A symmetry. ==> Seeking the lowest 10 singlet states with A symmetry. Generalized Hamiltonian Solver; By Andrew M. James. ==> Options <==. Max number of iterations = 60; Eigenvector tolerance = 1.0000e-04; Max number of expansion vectors = 2000. => Iterations <=; Max[D[value]] Max[|R|] # vectors; HamiltonianSolver iter 1: 5.64572e-01 3.65441e-01 40; HamiltonianSolver iter 2: 1.70649e-02 4.40807e-02 60; Hamiltonia",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst:2097,energy,energy,2097,doc/sphinxman/source/tdscf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst,1,['energy'],['energy']
Energy Efficiency,"y (MBPT) equations. ; Further, computation of one-electron properties is easier because there are no response contributions to the particle ; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods ; [Krylov:2000:vod]_. Additionally, orbital-optimized coupled-cluster avoids spurious second-order ; poles in its response function, and its transition dipole moments are gauge invariant [Pedersen:1999:od]_. Another advantage is that the orbital-optimized methods do not suffer from artifactual symmetry-breaking ; instabilities [Crawford:1997:instability]_, [Sherrill:1998:od]_, [Bozkaya:2011:omp2]_, and [Bozkaya:2011:omp3]_.; Furthermore, Kurlancheek and Head-Gordon [Kurlancek:2009]_ demonstrated that first order properties such as ; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs. ; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation ; numbers greater than 2 or less than 0, hence may violate the N-representability condition. They further ; discussed that the orbital response equations generally have a singularity problem at the unrestriction point ; where spin-restricted orbitals become unstable to unrestriction. This singularity yields to extremely large or ; small eigenvalues of the one-particle density matrix (OPDM). These abnormal eigenvalues may lead to unphysical ; molecular properties such as vibrational frequencies. However, orbital-optimized MP2 (also MP3); will solve this N-representability problem by disregarding orbital response contribution of one-particle; density matrix. . Although the performance of coupled-cluster singles and doubles (CCSD) and orbital-optimized ; CCD (OD) is similar, the situation is different in the case of triples corrections, especially at stretched ; geometries [Bozkaya:2012:odtl]_. Bozkaya and Schaefer demonstrated that orbital-optimized coupled cluster based ; trip",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst:3229,energy,energy,3229,doc/sphinxman/source/occ.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst,1,['energy'],['energy']
Energy Efficiency,"y (`https://www.mrcc.hu/ <https://www.mrcc.hu/>`_). Installation; ~~~~~~~~~~~~. Follow the instructions provided with the source to build the MRCC programs.; To be used by |PSIfour|, ensure that the program binary (``dmrcc``) can be; found in your :envvar:`PATH`. If |PSIfour| is unable to execute the binary, an; error will be reported. Running MRCC; ~~~~~~~~~~~~. MRCC can be invoked in similar fashion as other theories provided in |PSIfour|.; To indicate MRCC as the target software, set |globals__qc_module|\ ``=MRCC``.; This is a change as of October 2022; previously, one prefixed the method by ""mr""; to indicate MRCC (e.g., ``energy('mrccsdt')``).; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; qc_module mrcc; }; energy('ccsdt'). ``'ccsdt'`` in the call to :py:func:`~psi4.driver.energy` plus ``qc_module=mrcc`` instructs |PSIfour| to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; Here the ``qc_module=mrcc`` is optional since |PSIfour| has no builtin module; that can perform CCSDT. For a method like CCSD, no specification of |globals__qc_module|; will default to the CCENERGY module, and specification with value ``mrcc`` is; required to route the computation to the MRCC program.; For a CCSDT(Q) energy, simply use ``'ccsdt(q)'`` in the call to; :py:func:`~psi4.driver.energy`. MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only. At this time, |PSIfour| is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you can call it directly; For other methods, you will be required to; use the MRCC keywords described in Appendix :ref:`apdx:mrcc`.; Perturbative methods (``ccsd(t)``, ``ccsdtqp(h)_l``, etc.); are available with |scf__reference| ROHF i",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst:2568,energy,energy,2568,doc/sphinxman/source/mrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst,2,['energy'],['energy']
Energy Efficiency,"y Results //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//. Variable Map:; ----------------------------------------------------------------------------; ""(T) CORRECTION ENERGY"" => -0.007263598030; ""CCSD CORRELATION ENERGY"" => -0.275705492359; ""CCSD TOTAL ENERGY"" => -76.338453952539; ""CCSD(T) CORRELATION ENERGY"" => -0.007263598030; ""CCSD(T) TOTAL ENERGY"" => -76.345717550569; ""CFOUR ERROR CODE"" => 0.000000000000; ""CURRENT CORRELATION ENERGY"" => -0.007263598030; ""CURRENT ENERGY"" => -76.345717550569; ""CURRENT REFERENCE ENERGY"" => -76.062748460180; ""MP2 CORRELATION ENERGY"" => -0.270191667755; ""MP2 OPPOSITE-SPIN ENERGY"" => -0.204890356651; ""MP2 SAME-SPIN ENERGY"" => -0.065301311104; ""MP2 TOTAL ENERGY"" => -76.332940127935; ""NUCLEAR REPULSION ENERGY"" => 9.187331653300; ""SCF TOTAL ENERGY"" => -76.062748460180. The PSI Variables are also available from the input file for manipulation.; For instance, to compute the MBPT 2 3/4 energy from MBPT 3 results, the; following could be used. ::. energy('c4-mp3'); mp2p75_corl = 0.75 * get_variable('mp3 correlation energy') + \; 0.25 * get_variable('MP2 correlation energy'); print mp2p75_corl + get_variable('scf total energy'). .. caution:: Some features are not yet implemented. Buy a developer a coffee. - No PSI Variables for properties: *e.g.*, :psivar:`SCF DIPOLE`. - No PSI Variables for excited state energies. The formation of further regexes for properties, excited states, etc.; is one of the primary areas in which this interface requires further; work. .. rubric:: Gradients and Arrays. In addition to parsing the output stream, results are collected from files; written to the scratch directory. Presently, the ``GRD`` file is parsed; and printed to the output file, as shown below. Also printed is the Cfour; gradient after manipulation by the P4C4 interface and used by |PSIfour|; going forward. Manipulation is necessary because Cfour determinedly uses; its own internal orientation and atom ordering while |PSIfour| naturally; expects the gradi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:23658,energy,energy,23658,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"y optimize(); H, wfn = hessian(..., return_wfn=True) # used by frequency(). # print gradient array and its rms; wfn.gradient.print_out(); print wfn.gradient().rms(). # format output for other programs; molden(wfn, 'mycalc.molden'). # access array in another format; np.array(wfn.hessian()). .. _`sec:loops`:. Loops; =====. Python provides many control structures, any of which can be used within |PSIfour|; input files. For example, to loop over three basis sets, the following code can; be used:. .. code-block:: none. basis_sets = [""cc-pVDZ"", ""cc-pVTZ"", ""cc-pVQZ""]; for basis_set in basis_sets:; set basis = $basis_set; energy('scf'). The declaration of ``basis_sets`` is completely standard Python, as is the next; line, which iterates over the list. However, because the Psithon preprocessor; wraps strings in quotes by default, we have to tell it that ``basis_set`` is a; Python variable, not a string, by prefixing it with a dollar sign. . The geometry specification supports delayed initialization of variable,; which permits potential energy scans. As an example, we can scan both the; angle and bond length in water::. molecule h2o{; O; H 1 R; H 1 R 2 A; }; ; Rvals = [0.9, 1.0, 1.1]; Avals = range(102, 106, 2); ; set basis cc-pvdz; set scf e_convergence=11; for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; energy('scf'). The declarations of ``Rvals`` and ``Avals`` are both completely standard Python syntax.; Having named our molecule ``h2o`` we can then set the values of ``R`` and ``A`` within; the loops. Note that we do not need the dollar sign to access the Python; variable in this example; that is required only when using Python variables; with the ``set`` keyword. Cartesian geometries, because of details of the geometry update process,; need to be specified within the loop(s) along with their basis set when; geometry scans are performed. See :srcsample:`scf4` for analogous Z-matrix; and Cartiesian scans. .. _`sec:resultsTables`:. Tables of Results; =================",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:13031,energy,energy,13031,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['energy'],['energy']
Energy Efficiency,"y psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:488043,energy,energy,488043,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"y', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:45177,energy,energy,45177,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"y', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:324858,energy,energy,324858,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"y. After that, the ODC-12 analytic; gradients code will be executed and geometry optimization will be performed. . .. _`sec:dctrecommend`:. Recommendations; ~~~~~~~~~~~~~~~. Here is a list of recommendations for the DCT module:. * Generally, the use of the simultaneous algorithm together with the; |dct__ao_basis| ``DISK`` option is recommended (set by default). * In cases when available memory is insufficient, the use of the |dct__ao_basis| ``DISK`` option; is recommended. This will significantly reduce the memory requirements. However, when; used together with the two-step algorithm, this option can significantly; increase the cost of the energy computation. * In cases when the oscillatory convergence is observed before the DIIS; extrapolation is initialized, it is recommended to increase the threshold for; the RMS of the density cumulant or orbital update residual, below which the; DIIS extrapolation starts. This can be done by setting the; |dct__diis_start_convergence| option to the value greater than; :math:`10^{-3}` by one or two orders of magnitude (*e.g.* :math:`10^{-2}` or; :math:`10^{-1}`). This can be particularly useful for computations using the; ODC methods, because it can greatly reduce the number of iterations. * If oscillatory convergence is observed for atoms or molecules with high; symmetry, it is recommended to use the quadratically-convergent algorithm. * When using the quadratically-convergent algorithm for the closed-shell molecules, it; is recommended to set the |dct__qc_coupling| option to FALSE for efficiency; reasons (set by default). * For the ODC computations, the user has a choice of performing the computation of the guess orbitals and cumulants; using the corresponding DC method (set |dct__odc_guess| to TRUE). This can often lead to; significant computational savings, since the orbital update step in the DC methods is cheap.; Convergence of the guess orbitals and cumulants can be controlled using the; |dct__guess_r_convergence| option. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:18340,reduce,reduce,18340,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['reduce'],['reduce']
Energy Efficiency,"y.; The first parenthetical list over *i*, *j*, ..., *k* enumerates; molecular fragments included in the computation in 1-indexed,; input-file order, while the second enumerates list over *a*, *b*,; ..., *c* enumerates which fragments contribute basis functions to the; computation. For example, ``(1, 2)@(1, 2, 3, 4)`` indicates that the; fragments 1 and 2 are explicitly included in the energy computation,; with basis functions from each of fragments 1, 2, 3, & 4 included in; the basis set. Therefore, the basis functions from fragments 3 and 4; are included as ghost functions within the energy computation. .. psivar:: NUCLEAR REPULSION ENERGY. The nuclear repulsion energy contribution [E_h] to the total SCF energy.; Quantity :math:`E_{NN}` in Eq. :eq:`SCFterms`. .. math:: E_{NN} = \sum_{i, j<i}^{N_{atom}}\frac{Z_i Z_j}{|\mathbf{R}_i - \mathbf{R}_j|}; :label: ENN. .. psivar:: OCEPA(0) TOTAL ENERGY; OCEPA(0) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized CEPA(0) level of theory. .. psivar:: OLCCD TOTAL ENERGY; OLCCD CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized linearized coupled cluster doubles level of theory. .. psivar:: OLCCD REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized linearized coupled cluster; doubles level of theory. .. psivar:: OMP2 TOTAL ENERGY; OMP2 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2 level of theory. .. psivar:: OMP2 REFERENCE CORRECTION ENERGY. The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2 level of theory. .. psivar:: OMP2.5 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the o",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:45964,energy,energy,45964,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,2,['energy'],['energy']
Energy Efficiency,"y.rst. Gradient methods available through P4C4 interface. .. include:: cfour_table_grad.rst. .. _`table:cfour_cc_program`:. .. notes on preferred modules from JFS; .. comment always abcdtype = aobasis (but sometimes ; .. comment ncc does rhf ccsdt(q); .. comment reccommended code to do with, not only code (b/c mrcc can do much of this); .. comment .. table:: Cfour coupled-cluster program defaults by calculation type; .. comment ; .. comment +-----------------------------------------+---------------------------------+-----------------------+--------+--------+---------+; .. comment | | | | RHF | UHF | ROHF |; .. comment | | | +--------+--------+---------+; .. comment | Driver Call, |cfour__cfour_deriv_level| | name, |cfour__cfour_calc_level| | |cfour__cfour_excite| | |cfour__cfour_cc_program| |; .. comment +=========================================+=================================+=======================+========+========+=========+; .. comment | :py:func:`~psi4.energy`, zero | cc2 | none | vcc | vcc | vcc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomee | _cc | _cc | _cc |; .. comment | |vcc for everything +-----------------------+--------+--------+---------+; .. comment | | | eomea/eomip | _cc | _cc | _cc |; .. comment | +---------------------------------+-----------------------+--------+--------+---------+; .. comment | | ccsd | none | ecc | ecc | ecc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomee | vcc | vcc | vcc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomea/eomip | vcc | vcc | vcc |; .. comment | +---------------------------------+-----------------------+--------+--------+---------+; .. comment | | ccsd(t) | none | ecc | ecc | ecc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomee | | | |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | |",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:30805,energy,energy,30805,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"ya:2011:omp3]_, and [Bozkaya:2012:odtl]_). The orbital variations may be expressed by means of an exponential unitary operator. .. math::; \widetilde{\hat{p}}^{\dagger} &= e^{\hat{K}} \hat{p}^{\dagger} e^{-\hat{K}}\\; \widetilde{\hat{p}} &= e^{\hat{K}} \ \hat{p} \ e^{-\hat{K}} \\; | \widetilde{p} \rangle &= e^{\hat{K}} \ | p \rangle. where :math:`\hat{K}` is the orbital rotation operator. .. math::; \hat{K} &= \sum_{p,q}^{} K_{pq} \ \hat{E}_{pq} = \sum_{p>q}^{} \kappa_{pq} \ \hat{E}_{pq}^{-} \\; \hat{E}_{pq} &= \hat{p}^{\dagger} \hat{q} \\; \hat{E}_{pq}^{-} &= \hat{E}_{pq} \ - \ \hat{E}_{qp} \\; {\bf K} &= Skew({\bf \kappa}) . The effect of the orbital rotations on the MO coefficients can be written as. .. math::; {\bf C({\bf \kappa})} = {\bf C^{(0)}} \ e^{{\bf K}}. where :math:`{\bf C^{(0)}}` is the initial MO coefficient matrix and :math:`{\bf C({\bf \kappa})}` is the new; MO coefficient matrix as a function of :math:`{\bf \kappa}`.; Now, let us define a variational energy functional (Lagrangian) as a function of :math:`{\bf \kappa}`. * OMP2. .. math::; \widetilde{E}({\bf \kappa}) &= \langle 0| \hat{H}^{\kappa} | 0 \rangle \\; &+ \langle 0| \big(\hat{W}_{N}^{\kappa}\hat{T}_{2}^{(1)}\big)_{c} | 0 \rangle \\; &+ \langle 0| \{\hat{\Lambda}_{2}^{(1)} \ \big(\hat{f}_{N}^{\kappa} \hat{T}_{2}^{(1)} ; \ + \ \hat{W}_{N}^{\kappa} \big)_{c}\}_{c} | 0 \rangle; ; * OMP3. .. math::; \widetilde{E}({\bf \kappa}) &= \langle 0| \hat{H}^{\kappa} | 0 \rangle \\; &+ \langle 0| \big(\hat{W}_{N}^{\kappa}\hat{T}_{2}^{(1)}\big)_{c} | 0 \rangle ; \ + \ \langle 0| \big(\hat{W}_{N}^{\kappa}\hat{T}_{2}^{(2)}\big)_{c} | 0 \rangle \\; &+ \langle 0| \{\hat{\Lambda}_{2}^{(1)} \ \big(\hat{f}_{N}^{\kappa} \hat{T}_{2}^{(1)} ; \ + \ \hat{W}_{N}^{\kappa} \big)_{c}\}_{c} | 0 \rangle \\; &+ \langle 0| \{\hat{\Lambda}_{2}^{(1)} \ \big(\hat{f}_{N}^{\kappa} \hat{T}_{2}^{(2)} ; \ + \ \hat{W}_{N}^{\kappa}\hat{T}_{2}^{(1)} \big)_{c}\}_{c} | 0 \rangle \\; &+ \langle 0| \{\hat{\Lambda}_{2}^{(2)} \ \big(\hat{f}_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst:7160,energy,energy,7160,doc/sphinxman/source/occ.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst,1,['energy'],['energy']
Energy Efficiency,"yi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:83490,energy,energy,83490,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"yi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:517009,energy,energy,517009,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_ty",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:231436,energy,energy,231436,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_ty",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:234841,energy,energy,234841,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:244370,energy,energy,244370,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:247415,energy,energy,247415,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:231621,energy,energy,231621,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:235026,energy,energy,235026,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'con",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:244555,energy,energy,244555,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'con",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:247600,energy,energy,247600,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:500302,energy,energy,500302,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pas",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:178142,energy,energy,178142,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'ref",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:388759,energy,energy,388759,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'refe",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:388938,energy,energy,388938,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:182431,energy,energy,182431,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:232698,energy,energy,232698,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:236103,energy,energy,236103,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:306810,energy,energy,306810,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:238631,energy,energy,238631,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:241693,energy,energy,241693,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:335849,energy,energy,335849,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:342854,energy,energy,342854,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:419651,energy,energy,419651,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:489319,energy,energy,489319,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:494629,energy,energy,494629,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:496634,energy,energy,496634,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"ype': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:528753,energy,energy,528753,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,5,['energy'],['energy']
Energy Efficiency,"ype': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:303872,energy,energy,303872,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"yword abbreviations CALC, REF, etc. must be replaced by their; proper names of |cfour__cfour_calc_level|, |cfour__cfour_reference|, etc. Whenever the molecule is supplied in |PSIfour| format, it is possible to; perform geometry optimizations where Cfour supplies the gradient and the; |PSIfour| module :ref:`optking <sec:optking>` drives the structural; changes. Because of the limitations on geometry specification for; optimizations in Cfour, optking-driven optimizations are the *only*; optimizations allowed in the P4C4 interface. (The exception is sandwich; mode, which, of course, permits optimizations with the Cfour optimizer.); Below is an example of a geometry optimization::. memory 200 mb; ; molecule {; O; H 1 R; H 1 R 2 A; ; R=0.958; A=104.5; }; ; set {; ; cfour_CALC_level CCSD(T); cfour_BASIS DZP; cfour_CC_CONV 12; cfour_LINEQ_CONV 12; cfour_SCF_CONV 12; g_convergence cfour; }. optimize('cfour'). Note that the primary change is the exchange of :py:func:`~psi4.driver.energy`; for :py:func:`~psi4.driver.optimize` to trigger an optimization. Setting; |optking__g_convergence|\ =CFOUR provides a good imitation of Cfour; default convergence criteria. Although Cfour produces gradients only in; its standard orientation and atom ordering, these are transformed back to; input orientation by the P4C4 interface. Several sample inputs in; :source:`tests/cfour/` starting with ``opt-`` show basic geometry; optimizations. :srcsample:`cfour/mints5-grad` shows optimizations from a; variety of molecule input formats, and :srcsample:`cfour/psi-ghost-grad`; shows an optimization with ghosted atoms. To obtain a single gradient; *sans* optimization, call instead :py:func:`~psi4.driver.gradient`. Note that it can be convenient to monitor the progress of a geometry; optimization by grepping the tilde ``~`` character. ::; ; Measures of convergence in internal coordinates in au.; Criteria marked as inactive (o), active & met (*), and active & unmet ( ).; ----------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:9647,energy,energy,9647,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"ywords (*e.g.*, |optking__geom_maxiter|) instead fill; these roles. * Specifying the computational method (through, for instance,; ``energy('c4-ccsd')`` instead of ``energy('cfour')``) often; sets additional keywords consistent with best practices (*e.g.*,; |cfour__cfour_cc_program|). Since those settings are implicit, any; explicit setting of those those keywords, whether contradicting or; concurring, takes priority (halts never generated). The following are; some concrete examples. For the moment, click the source button at; muster_modelchem for details of what keywords; get set. * runs in vcc since that's Cfour's default for cc_program ::. set cfour_calc_level ccsd; energy('cfour'). * runs in ecc since Cfour's default overwritten by keyword ::. set cfour_calc_level ccsd; set cfour_cc_program ecc; energy('cfour'). * runs in ecc since that's best practice for the requested ccsd ::. energy('c4-ccsd'). * runs in vcc since *hidden* default overwritten by keyword ::. set cfour_cc_program vcc; energy('c4-ccsd'). * Specifying certain keywords that are nominally applicable for pure-\; |PSIfour| modules directs them to fulfil analogous roles; in the Cfour program (*e.g.*, |scf__maxiter| is used to set; |cfour__cfour_scf_maxcyc|). This keyword translation only takes place; if the keywords are explicitly set in the input file (part of that; contract that you mean it), meaning that |PSIfours| defaults don't; get imposed on Cfour. Also, in the case where a translatable pure-\; |PSIfour| keyword and its translation Cfour keyword are both set,; the value attached to the latter is always used. Below are a few; clarifying examples. * uses :math:`10^{-7}` SCF conv crit since that's Cfour's default; for |cfour__cfour_scf_conv| ::. energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; keyword ::. set cfour_scf_conv 6; energy('c4-scf'). * uses :math:`10^{-5}` SCF conv crit since default overwritten by; :ref:`SCF module<apdx:scf>` keyword ::. set d_converg",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:39062,energy,energy,39062,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['energy'],['energy']
Energy Efficiency,"{'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:173541,energy,energy,173541,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"{'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'roh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:59146,energy,energy,59146,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"{'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:64512,energy,energy,64512,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"{'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'roh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:77365,energy,energy,77365,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"{'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:82731,energy,energy,82731,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"{'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:76027,energy,energy,76027,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"{'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:527619,energy,energy,527619,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"{'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'roh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:169688,energy,energy,169688,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"{'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'modul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:480260,energy,energy,480260,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"{'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:367576,energy,energy,367576,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"{(0)} - E_{0}^{(0)} | \Psi_{0}^{(1)} \rangle = \min_{| \Psi_{0}^{(1)} \rangle}. Determining the optimal :math:`| \Psi_{0}^{(1)} \rangle` entails iteratively; minimizing the following residual [Pulay:1986:357]_:. .. math::; :label: Residual. R_{ij}^{ab} = (ia|jb) + (\epsilon_a + \epsilon_b - f_{ii} - f_{jj})t_{ij}^{ab} - \sum_{k \ne j} f_{ik} \sum_{c,d} S_{ac}t_{kj}^{c,d}S_{db} - \sum_{k \ne i} f_{kj} \sum_{cd} S_{ac}t_{ik}^{cd}S_{db} . where ``i``, ``j``, and ``k`` are (not necessarily canonical) occupied orbitals, ``a``,; ``b``, ``c``, and ``d`` are virtual orbitals, :math:`f_{ij}` are fock matrix elements,; :math:`S_{ab}` are orbital overlaps, and finally :math:`t_{ij}^{ab}` are the MP2; amplitudes to be solved for. Virtual orbitals may be different for each pair; of occupied orbitals. For a given occupied orbital pair ``ij``, all virtuals are; orthogonal and canonical, but virtuals belonging to different pair domains; may not be orthogonal. The following expression is used to evaluate the energy of a given set of amplitudes:. .. math::; :label: Energy. E^{(2)} &= \sum_{i,j} e_{ij}, \\; e_{ij} &= \sum_{a, b}((ia|jb) + R_{ij}^{ab})(2t_{ij}^{ab} - t_{ij}^{ba}). The error in :math:`E^{(2)}` scales quadratically with the error in the amplitudes. No local approximations have been made so far, and this iterative approach can; be used to exactly determine :math:`E^{(2)}` with :math:`{\cal O}(N^5)` cost.; In DLPNO-MP2, the first local approximation is to screen distant, non-interacting; orbital pairs ``ij``. Orbital pairs are screened if below both an overlap criteria:. .. math::; :label: Differential Overlap Integral. DOI_{ij} \equiv \sqrt{\int d\mathbf{r} | \chi_{i}(\mathbf{r}) | ^{2} | \chi_{j}(\mathbf{r}) | ^{2}}, . and a pair energy estimate: . .. math::; :label: Dipole Approximation. e_{ij}^{approx} = -\frac{4}{R^{6}} \sum_{a_{i} \in [i],b_{j} \in [j]} \frac{ (2 \langle i | \mathbf{r} | a_{i} \rangle \langle j | \mathbf{r} | b_{j} \rangle)^{2}}{\epsilon_{a_{i}} + \ep",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:5492,energy,energy,5492,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,1,['energy'],['energy']
Energy Efficiency,"{\kappa}\hat{T}_{2}\big)_{c} | 0 \rangle \\; &+ \langle 0| \{\hat{\Lambda}_{2} \ \big(\hat{W}_{N}^{\kappa} \ + \ \hat{H}_{N}^{\kappa}\hat{T}_{2} \big)_{c}\}_{c} | 0 \rangle. where subscript c means only connected diagrams are allowed, and ; :math:`\hat{H}^{\kappa}`, :math:`\hat{f}_{N}^{\kappa}`, and :math:`\hat{W}_{N}^{\kappa}` defined as. .. math::; \hat{H}^{\kappa} &= e^{-\hat{K}} \hat{H} e^{\hat{K}} \\; \hat{f}_{N}^{\kappa} &= e^{-\hat{K}} \hat{f}_{N}^{d} e^{\hat{K}} \\; \hat{W}_{N}^{\kappa} &= e^{-\hat{K}} \hat{W}_{N} e^{\hat{K}} . where :math:`\hat{f}_{N}`, and :math:`\hat{W}_{N}` are the one- and two-electron components of normal-ordered Hamiltonian. Then, ; first and second derivatives of the energy with respect to the :math:`{\bf \kappa}` parameter at :math:`{\bf \kappa} = 0`. .. math::; w_{pq} = \frac{\partial \widetilde{E}}{\partial \kappa_{pq}} . .. math::; A_{pq,rs} = \frac{\partial^2 \widetilde{E}}{\partial \kappa_{pq} \partial \kappa_{rs}} . Then the energy can be expanded up to second-order as follows. .. math::; \widetilde{E}^{(2)}({\bf \kappa}) = \widetilde{E}^{(0)} + {\bf \kappa^{\dagger} w} + \frac{1}{2}~{\bf \kappa^{\dagger} A \kappa}. where :math:`{\bf w}` is the MO gradient vector, :math:`{\bf \kappa}` is the MO rotation vector,; and :math:`{\bf A}` is the MO Hessian matrix. Therefore, minimizing the energy with respect to :math:`{\bf \kappa}`; yields. .. math::; {\bf \kappa} = -{\bf A^{-1}w}. This final equation corresponds to the usual Newton-Raphson step. * OREMP. The REMP hybrid perturbation theory is a constrained mixture of the |MollerPlesset| perturbation theory and the; Retaining the Excitation degree perturbation theory([Fink:2006:RE]_, [Behnle:2019:REMP]_).; The mixing ratio is determined by the parameter :math':`A`:. .. math::; \widehat{H}^{(0)}_\text{REMP} = (1-A)\widehat{H}^{(0)}_\text{RE} + A\widehat{H}^{(0)}_\text{MP}. Technically, the second order of RE corresponds to LCCD for RHF and UHF references. REMP2 and its orbital-optimiz",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst:9375,energy,energy,9375,doc/sphinxman/source/occ.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst,1,['energy'],['energy']
Energy Efficiency,"| UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | DC-06 | SIMULTANEOUS, QC, TWOSTEP | Y | Y | UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | DC-12 | SIMULTANEOUS, QC, TWOSTEP | Y | N | UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+. Note that for ODC-06 and ODC-12 |scf__reference| ``RHF`` is only available for; |dct__algorithm| ``SIMULTANEOUS``. To compute :math:`(\lambda_3)` correction,; the |dct__three_particle| option needs to be set to PERTURBATIVE. .. _`sec:dctmininput`:. Minimal Input; ~~~~~~~~~~~~~. Minimal input for the DCT single-point computation looks like this::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; energy('dct'). The ``energy('dct')`` call to :py:func:`~psi4.driver.energy` executes the DCT; module, which will first call the SCF module and perform the SCF computation; with RHF reference to obtain a guess for the DCT orbitals. After SCF is; converged, the program will perform the energy computation using the ODC-12; method. By default, simultaneous algorithm will be used for the solution of; the equations. One can also request to perform geometry; optimization following example below::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; optimize('dct'). The ``optimize('dct')`` call will first perform all of the procedures; described above to obtain the ODC-12 energy. After that, the ODC-12 analytic; gradients code will be executed and geometry optimization will be performed. . .. _`sec:dctrecommend`:. Recommendations; ~~~~~~~~~~~~~~~. Here is a list of recommendations for the DCT module:. * Generally, the use of the simultaneous algorithm together with the; |dct__ao_basis| ``DISK`` option is recommended (set by default).",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:16473,energy,energy,16473,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['energy'],['energy']
Energy Efficiency,"|; +------------------------------------+-----------------------+-----------------------------------------------------------------------------------+; | Electric field, on grid | GRID_FIELD | Generates {Ex,Ey,Ez} at each point grid_field.dat. See :ref:`sec:oeprop_grid` |; +------------------------------------+-----------------------+-----------------------------------------------------------------------------------+; | Molecular orbital extents | MO_EXTENTS | |; +------------------------------------+-----------------------+-----------------------------------------------------------------------------------+; | Mulliken atomic charges | MULLIKEN_CHARGES | |; +------------------------------------+-----------------------+-----------------------------------------------------------------------------------+; | L\ |o_dots|\ wdin atomic charges | LOWDIN_CHARGES | |; +------------------------------------+-----------------------+-----------------------------------------------------------------------------------+; | Wiberg bond indices | WIBERG_LOWDIN_INDICES | Uses (L\ |o_dots|\ wdin) symmetrically orthogonalized orbitals |; +------------------------------------+-----------------------+-----------------------------------------------------------------------------------+; | Mayer bond indices | MAYER_INDICES | |; +------------------------------------+-----------------------+-----------------------------------------------------------------------------------+; | Natural orbital occupations | NO_OCCUPATIONS | |; +------------------------------------+-----------------------+-----------------------------------------------------------------------------------+; | Stockholder Atomic Multipoles | MBIS_CHARGES | Generates atomic charges, dipoles, etc. See :ref:`sec:oeprop_mbis` |; +------------------------------------+-----------------------+-----------------------------------------------------------------------------------+; | Hirshfeld volume ratios | MBIS_VOLUME_RATIOS | Generate the A",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/oeprop.rst:3683,charge,charges,3683,doc/sphinxman/source/oeprop.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/oeprop.rst,3,['charge'],['charges']
Energy Efficiency,"|scf__stability_analysis| | |globals__scf_type| |; +==================+==================+==============================================+===========================+=====================+; | | RHF | Internal, External (:math:`\rightarrow` UHF) | ``CHECK`` | PK only |; + +------------------+----------------------------------------------+---------------------------+---------------------+; | Direct Inversion | ROHF | Internal | ``CHECK`` | PK only |; +------------------+------------------+----------------------------------------------+---------------------------+---------------------+; | Davidson | UHF | Internal | ``CHECK`` or ``FOLLOW`` | Anything |; +------------------+------------------+----------------------------------------------+---------------------------+---------------------+. The best algorithm is automatically selected, *i.e.* Davidson for UHF :math:`\rightarrow` UHF and Direct Inversion otherwise. In addition to the options available for Direct Inversion, the Davidson algorithm can automatically; adapt |scf__follow_step_scale| to find a new SCF minimum. If |scf__max_attempts| > 1, additional attempts; will automatically increment |scf__follow_step_scale| by 0.2 every time the SCF falls back to the previously; found unstable minimum. The increment can be adjusted by setting |scf__follow_step_increment|.; The default value is 0.2; adjust if needed to try different values of |scf__follow_step_scale| in a single computation. The Davidson solver for the eigenvalues is controlled through several keywords. |scf__solver_maxiter|: maximum number of iterations. |scf__solver_convergence|: eigenvector convergence threshold. |scf__solver_n_root|: Solve for N eigenvectors in each irreducible representation. |scf__solver_roots_per_irrep|: The number of eigenvectors to solve in each irreducible representation. An array of as many integers as there are irreducible representations. |scf__solver_n_guess|: Use N guess vectors, this needs to be larger than the number of roots ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:50265,adapt,adapt,50265,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['adapt'],['adapt']
Energy Efficiency,"} - ; \frac{f_{ia} f_{ia}}{\epsilon_a - \epsilon_i} - ; \frac{1}{4} \frac{\langle ij||ab\rangle^2}{\epsilon_a + \epsilon_b - \epsilon_i - \epsilon_j}; :label: MP2. Here :math:`i` and :math:`j` are occupied spin orbitals, :math:`a` and; :math:`b` are virtual spin orbitals, :math:`f_{ia}` are the :math:`ov`; Fock Matrix elements, :math:`\epsilon` are the orbital eigenvalues, and; :math:`\langle ij||ab\rangle` are the antisymmetrized physicist's ERIs.; For converged RHF and UHF references, the singles correction,. .. math:: E_{\mathrm{MBPT}}^{(1)} = - \frac{f_{ia} f_{ia}}{\epsilon_a - \epsilon_i},. is zero due to the Brillioun Condition, and the first contribution to the; perturbation series is at the second order:. .. math:: E_{\mathrm{MBPT}}^{(2)} = - \frac{1}{4} \frac{\langle ij|ab\rangle^2}{\epsilon_a + ; \epsilon_b - \epsilon_i - \epsilon_j}. In the DFMP2 module, the first-order contribution, or ""singles energy"" is; always evaluated. This term is a significant contributor to the total; second-order energy if a ROHF reference is used. In this case, we have chosen; to use the ROHF-MBPT(2) ansatz, in which the ROHF orbitals are; semicanonicalized, the resultant nonzero Fock matrix elements :math:`f_{ia}` are used; to form the singles amplitudes, and then the second-order amplitudes are formed; with the semicanonical spin orbitals via the same machinery as a UHF-MP2. Note; that the singles energy should be very close to zero for RHF and UHF references;; if it is not, there is a good chance your orbitals are not well converged.; Tighten the SCF |scf__e_convergence| and/or |scf__d_convergence| keywords; and try again. . To increase the efficiency of MP2 energy evaluation, spin integration; and simplification is carried out. This also allows for the identification of; Same-Spin (SS) and Opposite-Spin (OS) terms for use in Grimme's Spin-Component; Scaled (SCS) MP2. For RHF-MP2 (also labeled as RMP2), the spin-free equations are; (note that the integrals are now chemist's ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:6540,energy,energy,6540,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['energy'],['energy']
Energy Efficiency,"}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-mrcc', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:174121,energy,energy,174121,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'sc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:20290,energy,energy,20290,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:324634,energy,energy,324634,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:363707,energy,energy,363707,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:439870,energy,energy,439870,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:465829,energy,energy,465829,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['energy'],['energy']
Energy Efficiency,"}}^{\textbf{delta2_basis}}\right) - \mathcal{F}_{\textbf{delta2_scheme}} \left(E_{\text{corl},\; \textbf{delta2_wfn_lesser}}^{\textbf{delta2_basis}}\right). .. math:: \delta_{\textbf{delta3_wfn_lesser}}^{\textbf{delta3_wfn}} \; = \mathcal{F}_{\textbf{delta3_scheme}} \left(E_{\text{corl},\; \textbf{delta3_wfn}}^{\textbf{delta3_basis}}\right) - \mathcal{F}_{\textbf{delta3_scheme}} \left(E_{\text{corl},\; \textbf{delta3_wfn_lesser}}^{\textbf{delta3_basis}}\right). .. math:: \delta_{\textbf{delta4_wfn_lesser}}^{\textbf{delta4_wfn}} \; = \mathcal{F}_{\textbf{delta4_scheme}} \left(E_{\text{corl},\; \textbf{delta4_wfn}}^{\textbf{delta4_basis}}\right) - \mathcal{F}_{\textbf{delta4_scheme}} \left(E_{\text{corl},\; \textbf{delta4_wfn_lesser}}^{\textbf{delta4_basis}}\right). .. math:: \delta_{\textbf{delta5_wfn_lesser}}^{\textbf{delta5_wfn}} \; = \mathcal{F}_{\textbf{delta5_scheme}} \left(E_{\text{corl},\; \textbf{delta5_wfn}}^{\textbf{delta5_basis}}\right) - \mathcal{F}_{\textbf{delta5_scheme}} \left(E_{\text{corl},\; \textbf{delta5_wfn_lesser}}^{\textbf{delta5_basis}}\right). A translation of this ungainly equation to example [5] below is as; follows. In words, this is a double- and triple-zeta 2-point; Helgaker-extrapolated CCSD(T) coupled-cluster correlation correction; appended to a triple- and quadruple-zeta 2-point; Helgaker-extrapolated MP2 correlation energy appended to a SCF/aug-cc-pVQZ; reference energy. .. math:: E_{\text{total}}^{\text{CBS}} = \mathcal{F}_{\text{highest_1}} \left(E_{\text{total},\; \text{SCF}}^{\text{aug-cc-pVQZ}}\right) \; + \mathcal{F}_{\text{corl_xtpl_helgaker_2}} \left(E_{\text{corl},\; \text{MP2}}^{\text{aug-cc-pV[TQ]Z}}\right) \; + \delta_{\text{MP2}}^{\text{CCSD(T)}}. .. math:: \delta_{\text{MP2}}^{\text{CCSD(T)}} \; = \mathcal{F}_{\text{corl_xtpl_helgaker_2}} \left(E_{\text{corl},\; \text{CCSD(T)}}^{\text{aug-cc-pV[DT]Z}}\right) - \mathcal{F}_{\text{corl_xtpl_helgaker_2}} \left(E_{\text{corl},\; \text{MP2}}^{\text{aug-cc-pV[DT]Z}}\right). ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs_eqn.rst:3561,energy,energy,3561,doc/sphinxman/source/cbs_eqn.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs_eqn.rst,2,['energy'],['energy']
Energy Efficiency,"~~~~~~~~~~~~~~~~~~~~~~~~~~. QCI and CC methods are closely related to perturbation theory, and the; MP2, MP3, and MP4(SDQ) correlation energies can be obtained as a free; by-product of a CCSD or QCISD computation. The following is an ; example of the results for a computation run with the call; ``energy('fno-qcisd')`` to :py:func:`~psi4.driver.energy`:. .. code-block:: none. QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table :ref:`FNOCC Methods <table:fnocc_method",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:7537,energy,energy,7537,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['energy'],['energy']
Energy Efficiency,"◻ | |qc_module|\ =DFMP2 Capabilities |; + + +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ◻ | |scf__reference| → | Restricted (RHF) | Unrestricted (UHF) | Restricted Open (ROHF) |; + + +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | name ↓ → | ◻ | |energy_fn| | |gradient_fn|\ [#m3]_ | |energy_fn| | |gradient_fn|\ [#m3]_ | |energy_fn| | |gradient_fn|\ [#m3]_ |; + + +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ◻ | type\ [#m1]_ ↓ → | CV | DF | CD | CV | DF | CD | CV | DF | CD | CV | DF | CD | CV | DF | CD | CV | DF | CD |; + + +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ◻ | |freeze_core|\ [#m2]_\ →| A F A F A F | A F A F A F | A F A F A F | A F A F A F | A F A F A F | A F A F A F |; +==========================+=========================+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+; | mp2\ [#m10]_ | |globals__mp2_type| | ✓̳ ✓̳ | ✓̳ ✓̳ | ✓̳ ✓̳ | | ✓̳ ✓̳ | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#m1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#m2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#m3] Finite difference gradients are not marked explicitly by ""∷"", but the capability can be gleaned from the energy availability.; .. [#m10] Also available for DFT references RKS/UKS",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_dfmp2.rst:2521,energy,energy,2521,doc/sphinxman/source/preview_capabilities_dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_dfmp2.rst,1,['energy'],['energy']
Integrability," # ${psi4_SOURCE_DIR}/plugins/*/*.py; # ${psi4_SOURCE_DIR}/plugins/*/doc.rst; # COMMENT ""Autodoc plugins""). # Autodoc efp fragments; if(${ENABLE_libefp}); add_custom_command(; COMMAND ${Python_EXECUTABLE} ${CCSD}/document_efpfrag.py ${CCSD}; OUTPUT ${CCBD}/source/autodoc_available_efpfrag.rst; DEPENDS ${CCSD}/document_efpfrag.py; $<IF:$<STREQUAL:${CMAKE_GENERATOR},""Unix Makefiles"">,${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag/*efp,${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag/h2o.efp>; COMMENT ""Autodoc efp fragments""); else(); file(WRITE ${CCBD}/source/autodoc_available_efpfrag.rst """"); endif(). # Format git log for feed; add_custom_command(; COMMAND ${CMAKE_COMMAND} -E make_directory feed; COMMAND ${Python_EXECUTABLE} ${CCSD}/extract_changeset.py ${CCBD}; OUTPUT ${CCBD}/feed/history_trac_changeset.txt; ${CCBD}/feed/latest_trac_changeset.txt; DEPENDS ${CCSD}/extract_changeset.py; COMMENT ""Format git --log for psicode.org feed""). # Establishing dependencies for docs targets. # * mini github feed for psicode.org; add_custom_target(ghfeed; DEPENDS ${CCBD}/feed/history_trac_changeset.txt; ${CCBD}/feed/latest_trac_changeset.txt; COMMENT ""Preparing GitHub feed""). # * announcement; if (LATEX_COMPILER AND PDFLATEX_COMPILER); message(STATUS ""Documentation targets ${_jupy}available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF)""); else(); message(STATUS ""Documentation targets ${_jupy}available: sphinxman (html), sphinxmini (quick html)""); endif(). # * quick mini-build for docs development; add_custom_target(sphinxmini; DEPENDS ${CCBD}/source/conf.py; COMMENT ""Building Sphinx abridged HTML documentation build""). # * full, proper build; add_custom_target(sphinxman; DEPENDS ${CCBD}/source/autodoc_psi4bases.rst; ${CCBD}/source/autodoc_psifiles.rst; ${CCBD}/source/autodoc_physconst.rst; ${CCBD}/source/autodoc_abbr_options_c.rst; ${CCBD}/source/autodoc_glossary_options_c.rst; ${CCBD}/source/autodoc_options_c_bymodule.rst; ${",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt:20094,depend,dependencies,20094,doc/sphinxman/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt,1,['depend'],['dependencies']
Integrability," ${Libint_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint_VERSION})""); endif(). find_package(; Libint2; 2.7.2; CONFIG; REQUIRED; COMPONENTS; sss; CXX_ho; impure_sh; ""eri_c4_d0_l${MAX_AM_ERI}"" eri_c3_d0_l4 eri_c2_d0_l4 onebody_d0_l4; eri_c4_d1_l2 eri_c3_d1_l3 eri_c2_d1_l3 onebody_d1_l3; onebody_d2_l3; OPTIONAL_COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ); get_property(_loc TARGET Libint2::int2 PROPERTY LOCATION); # defer until upstream provides full-dress targets get_property(Libint2_VERSION TARGET Libint2::int2 PROPERTY Libint2_VERSION); # defer until upstream provides full-dress targets get_property(Libint2_MAX_AM_ERI TARGET Libint2::int2 PROPERTY Libint2_MAX_AM_ERI); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint2 ${Libint2_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint2_VERSION})""). if(${ENABLE_mdi}); find_package(mdi 1.2.3 CONFIG REQUIRED); get_property(_loc TARGET mdi::mdi PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using mdi${ColourReset}: ${_loc} (version ${mdi_VERSION})""); else(); message(STATUS ""Disabled MDI ${mdi_DIR}""); endif (). if(${ENABLE_PCMSolver}); find_package(PCMSolver 1.2.1 CONFIG REQUIRED); get_property(_loc TARGET PCMSolver::pcm PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using PCMSolver${ColourReset}: ${_loc} (version ${PCMSolver_VERSION})""); else(); message(STATUS ""Disabled PCMSolver ${PCMSolver_DIR}""); endif (). if(${ENABLE_simint}); find_package(simint 0.7 CONFIG REQUIRED COMPONENTS am${MAX_AM_ERI} der0); get_property(_loc TARGET simint::simint PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using simint ${simint_MAXAM}${ColourReset}: ${_loc} (version ${simint_VERSION}; vectorization ${simint_VECTOR})""); else(); message(STATUS ""Disabled simint ${simint_DIR}""); endif(). if(${ENABLE_BrianQC}); find_package(BrianQC 1.1 CONFIG REQUIRED); get_property(_loc TARGET BrianQC::static_wrapper PROPERTY LOCATION); list(APPEND _addons",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:7074,message,message,7074,psi4/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt,2,['message'],['message']
Integrability," * :ref:`BrianQC <sec:brianqc>` |w---w| https://www.brianqc.com/. * i-PI |w---w| http://ipi-code.org/. * psixas |w---w| https://github.com/Masterluke87/psixas. * MDI |w---w| https://github.com/MolSSI-MDI/MDI_Library. * :ref:`ddx <sec:ddx>` |w---w| https://github.com/ddsolvation/ddx. .. _`faq:condapsi4dev`:. How to use conda to get a Psi4 development environment; ------------------------------------------------------. |PSIfour| has a lot of dependencies, some of which are complicated; to build. Fortunately, conda can supply them all. A conda; package ``psi4-dev`` is available to gather the dependencies; and build tools needed to compiler |PSIfour| from source. Go to; :psicode:`installs/latest`, select ""source"" and ""nightly build"" along; with Linux/Mac and a Python version. Follow its instructions to create; a conda environment that has a script ``psi4-path-advisor``. Running; ``psi4-path-advisor --help`` shows more options. Running the script; without arguments gives a cmake command that supplies paths to dependency; conda packages to CMake's cache. You can add further cmake options to; this command when you execute it. Once the cmake command has built your; :samp:`{objdir}`, you can build |PSIfour|. Remember to activate this; conda environment during |PSIfour| running or development. There are a; few extra options to ``psi4-path-advisor`` to set up using conda's GNU; compilers (on Linux), conda's Clang compilers (on Mac; less reliably),; or your own Intel compilers backed by conda's GNU compilers (on Linux). .. code-block:: console. >>> git clone https://github.com/psi4/psi4.git && cd psi4; >>> conda create -n p4dev psi4-dev python=3.8 -c psi4/label/dev; >>> conda activate p4dev; >>> `psi4-path-advisor --gcc`; >>> cd objdir && make -j`getconf _NPROCESSORS_ONLN`. .. _`faq:setupmaxameri`:. How to configure code to use high angular momentum basis sets; -------------------------------------------------------------. The :ref:`Libint <sec:libint>` integral code handles; a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:14625,depend,dependency,14625,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['depend'],['dependency']
Integrability," * :source:`psi4/src/CMakeLists.txt`. * No changes should be required unless both (1) code in export_*; or core.cc needs the :samp:`USING_{AddOn_name}` definition or; AddOn header includes and (2) no binary |PSIfour| module (as; opposed to library |PSIfour| module with the AddOn target linked; is itself a direct dependency of target ``core``. Basically,; try to leave this file alone, but if there are compile errors,; add the definitions/headers as needed. * :source:`psi4/src/psi4/`. * If a module is needed to interface the AddOn to |PSIfour|, try to; put ""interface"" in the name. Follow the pattern of CheMPS2 or gdma.; If non-required, be sure to conditionalize it with ``if(TARGET; AddOn::addon)`` in CMake files or ``#ifdef USING_AddOn`` in; source files. * If a separate module is not required, follow the patter of dkh; or simint with respect to libmints. Again, conditionalize as in; preceding bullet. * :source:`external/upstream/`. * Add a CMakeLists.txt that imitates another AddOn of similar; language and dependencies. Try to keep the format, messaging,; and variables passed as similar as possible so that differences; mean something. If BLAS/LAPACK or other common dependencies in; :source:`external/common` are needed, be sure to add them to the; ``DEPENDS`` argument. * The usual practice to to get everything cohesive between; the CMake for the AddOn repository and |PSIfour| and then as a; last step, mint a tag in the former and add it to two places in; :samp:`external/upstream/{addon_name}/CMakeLists.txt` and one; place in :source:`psi4/CMakeLists.txt` so that only that version; and later are acceptable to |PSIfour| for detecting pre-built. * :source:`tests/`. * In :source:`tests/CMakeLists.txt`, add a block adding a tests subdirectory if Add-On enabled. * Create new subdirectory :samp:`tests/{addon_name}` with a; CMakeLists.txt. In that add a few tests. Imitate the pattern in; other subdirs of including the addon prefix to the test name in the; CMakeLists but not ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst:5022,depend,dependencies,5022,doc/sphinxman/source/manage_addon.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst,1,['depend'],['dependencies']
Integrability," * CheMPS2 is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, CheMPS2 has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; CheMPS2 can be obtained through ``conda install chemps2``.; Then enable it as a feature with :makevar:`ENABLE_CheMPS2`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect CheMPS2 and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. Libint from conda without thinking, consult. * To remove a conda installation, ``conda remove chemps2``. **Source**. * .. image:: https://img.shields.io/github/tag/SebWouters/chemps2.svg?maxAge=2592000; :target: https://github.com/SebWouters/chemps2. * If using |PSIfour| built from source and you want CheMPS2 built from; from source also,; enable it as a feature with :makevar:`ENABLE_CheMPS2`,; and let the build system fetch and build it and activate dependent code. Methods; ~~~~~~~. .. _`table:chemps2_calls`:. .. table:: Density matrix renormalization group capabilities of |PSIfour| through CheMPS2. +-------------------------+--------------------------------------------------------------+----------------------+----------------------+; | name | calls method | Energy | Gradient |; +=========================+==============================================================+======================+======================+; | dmrg-ci | DMRG configuration interaction (CI) | RHF/ROHF | --- |; +-------------------------+--------------------------------------------------------------+----------------------+----------------------+; | dmrg-scf | DMRG complete active space SCF (CASSCF) | RHF/ROHF | --- |; +-------------------------+--------------------------------------------------------------+----------------------+----------------------+; | dmrg-caspt2 ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/chemps2.rst:3715,depend,dependent,3715,doc/sphinxman/source/chemps2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/chemps2.rst,1,['depend'],['dependent']
Integrability," * OpenFermion-Psi4 |w---w| https://github.com/quantumlib/OpenFermion. * :ref:`cppe <sec:cppe>` |w---w| https://github.com/maxscheurer/cppe. * mp2d |w---w| https://github.com/Chandemonium/MP2D. * :ref:`FockCI <sec:fockci>` |w---w| https://github.com/shannonhouck/psi4fockci. * cct3 |w---w| https://github.com/piecuch-group/cct3. * :ref:`adcc <sec:adcc>` |w---w| https://github.com/adc-connect/adcc. * :ref:`BrianQC <sec:brianqc>` |w---w| https://www.brianqc.com/. * i-PI |w---w| http://ipi-code.org/. * psixas |w---w| https://github.com/Masterluke87/psixas. * MDI |w---w| https://github.com/MolSSI-MDI/MDI_Library. * :ref:`ddx <sec:ddx>` |w---w| https://github.com/ddsolvation/ddx. .. _`faq:condapsi4dev`:. How to use conda to get a Psi4 development environment; ------------------------------------------------------. |PSIfour| has a lot of dependencies, some of which are complicated; to build. Fortunately, conda can supply them all. A conda; package ``psi4-dev`` is available to gather the dependencies; and build tools needed to compiler |PSIfour| from source. Go to; :psicode:`installs/latest`, select ""source"" and ""nightly build"" along; with Linux/Mac and a Python version. Follow its instructions to create; a conda environment that has a script ``psi4-path-advisor``. Running; ``psi4-path-advisor --help`` shows more options. Running the script; without arguments gives a cmake command that supplies paths to dependency; conda packages to CMake's cache. You can add further cmake options to; this command when you execute it. Once the cmake command has built your; :samp:`{objdir}`, you can build |PSIfour|. Remember to activate this; conda environment during |PSIfour| running or development. There are a; few extra options to ``psi4-path-advisor`` to set up using conda's GNU; compilers (on Linux), conda's Clang compilers (on Mac; less reliably),; or your own Intel compilers backed by conda's GNU compilers (on Linux). .. code-block:: console. >>> git clone https://github.com/psi4/psi4.g",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:14201,depend,dependencies,14201,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['depend'],['dependencies']
Integrability," -1.207655674855 -0.365913941094 -0.918035522052; # First, remove the H from the alpha carbon. This line could be deleted; # and is only included for completeness; #H 0.429560656538 0.717651915252 1.673774709694; # Now patch it, using a Z Matrix specification. This patch can be applied; # anywhere in the coord specification, as long as it appears lower than; # the atoms referenced, as is usual for Z-Matrices; C 2 rCC 3 aCCC 1 dCCCN; H 7 rCH1 2 aHCC1 3 dHCCC1; H 7 rCH2 2 aHCC2 3 dHCCC2; H 7 rCH3 2 aHCC3 3 dHCCC3; H 0.221781602033 1.772570540211 0.286988509018; H -1.833601608592 0.108401996052 1.481873213172; H -1.925572581453 1.640882152784 0.986471814808; ; aCCC = 108.0; rCC = 1.4; dCCCN = 120; rCH1 = 1.08; rCH2 = 1.08; rCH3 = 1.08; aHCC1 = 109.0; aHCC2 = 109.0; aHCC3 = 109.0; dHCCC1 = 0.0; dHCCC2 = 120.0; dHCCC3 = 240.0; }. Here, we remove the hydrogen from the alpha carbon of glycine and replace it; with a methyl group. Applying this patch using Cartesian coordinates is; difficult, because it depends on the orientation of the existing glycine unit.; In this example, we use Z-Matrix coordinates to define the methyl group, and; define the orientation in terms of the existing glycine Cartesian coordinates; which is much easier to visualize than the corresponding Cartesian-only; approach. .. index:: molecule; multiple in input file; .. _`sec:multipleMolecules`:. .. index::; triple: setting; keywords; molecule; pair: molecule; charge; pair: molecule; multiplicity; pair: molecule; symmetry; pair: molecule; no_reorient; pair: molecule; units; .. _`sec:moleculeKeywords`:. Molecule Keywords; =================. In addition to specifying the geometry, additional information can be; provided in the molecule block :samp:`molecule {optional_molecule_name} \\{...\\}`. **Charge & Multiplicity**; If two integers :samp:`{charge} {multiplicity}` are encountered on any; line of the molecule block, they are interpreted as the molecular charge; and multiplicity (:math:`2 M_s + 1`), resp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:3822,depend,depends,3822,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['depend'],['depends']
Integrability," -2; NBC1-MeMe-5.4 -0.0800 -0.0479 0.0321 -80.72821875 1 -40.36407122 -2; NBC1-MeMe-5.8 -0.0500 -0.0312 0.0188 -80.72817678 1 -40.36406353 -2; ----------------------------------------------------------------------------------------------; Minimal Dev 0.0188; Maximal Dev 1.0949; Mean Signed Dev 0.3509; Mean Absolute Dev 0.3509; RMS Dev 0.4676; ----------------------------------------------------------------------------------------------. Thirdly, the :py:func:`~psi4.driver.cbs` wrapper allows any; compound computational method that can be expressed through :ref:`CBS; <eq:cbs>` to be applied to a molecule while employing the minimum number; of calculations. For example, the job below computes a; triple-quadruple-zeta Helgaker extrapolation of the mp2 correlation energy; atop a quadruple zeta reference to which is appended a double-triple-zeta; Helgaker extrapolated ccsd(t) - mp2 delta correction. Since the mp2 has; been requested through |PSIfour| and the ccsd(t) through Cfour, the; wrapper runs only MP2/cc-pVQZ (P4), CCSD(T)/cc-pVDZ (C4), and; CCSD(T)/cc-pVTZ (C4) single-points. ::. molecule {; H 0.0 0.0 0.0; H 1.0 0.0 0.0; }; ; set mp2_type conv. cbs('mp2', corl_basis='cc-pV[TQ]Z', delta_wfn='c4-ccsd(t)', delta_basis='cc-pV[DT]Z'). This yields::. ==> CBS <==. ---------------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [H] Scheme; ---------------------------------------------------------------------------------------------------------; scf scf / cc-pvqz -1.10245974 highest_1; corl mp2 / cc-pv[tq]z -0.03561890 corl_xtpl_helgaker_2; delta c4-ccsd(t) - mp2 / cc-pv[dt]z 0.03507767 corl_xtpl_helgaker_2; total CBS -1.10300098; ---------------------------------------------------------------------------------------------------------. Note that especially for :py:func:`~psi4.driver.cbs`, the; basis set needs to be specified through |mints__basis|, not; |cfour__cfour_basis|. Many of the wrappers can be u",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:19575,wrap,wrapper,19575,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['wrap'],['wrapper']
Integrability," .. include:: autodoc_abbr_options_c.rst. .. _`sec:handlingOptions_py`:. LibOptions: globals, locals, has_changed and all that; =====================================================. To simplify parsing of options and handling of defaults, the Options class; was created. It functions in the following way:. - Each module (or plugin) declares which options it will look for in the; input: their name, type (string, int, double, array, etc.), and any; default value they take. - The input is parsed for these options, and defaults are assigned for; those keywords not specified by the user. - The c-side module or plugin can then query the Options object for the; values associated with each keyword. - The options will also be accessible py-side to the procedures that drive; the modules. Array-type options are not available in python. Declaring Options; -----------------. Each module needs to make itself known to the Options object, via a; read_options section. For plugins, this routine is provided by the user; in the plugin code. For native |PSIfour| modules, the entries need to; be appended to the read_options code in :source:`psi4/src/read_options.cc`.; An example of such a routine is. .. code-block:: cpp. if (name == ""MYMODULE""|| options.read_globals()) {; /*- The amount of information printed; to the output file -*/; options.add_int(""PRINT"", 1);; /*- Do save information to |mymodule__data_file| at the end of the computation? -*/; options.add_bool(""SAVE_INFO"", true);; /*- An array containing the number of doubly occupied orbitals per irrep ; (in :ref:`Cotton order <table:irrepOrdering>`) -*/; options.add(""DOCC"", new ArrayType());; /*- The factor by which the harmonic vibrational frequencies are multiplied to; obtain an approximation to the fundamental vibrational frequencies -*/; options.add_double(""FREQUENCY_SCALE_FACTOR"", 1.0);; /*- The filename to which data is dumped. !expert -*/; options.add_str_i(""DATA_FILE"", ""data.dat"");; /*- The algorithm to use for the $\left<VV||",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optionshandling.rst:2003,rout,routine,2003,doc/sphinxman/source/optionshandling.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optionshandling.rst,1,['rout'],['routine']
Integrability," /* Orbital subspace for q */; int *rowtot; /* Row dimension for each submatrix */; int *coltot; /* Column dimension for each submatrix */; int *rowidx; /* Row index lookup array */; int *colidx; /* Column index lookup array */; int **roworb; /* Row index -> orbital index lookup array */; int **colorb; /* Column index -> orbital index lookup array */; int *ppi; /* Number of p indices per irrep */; int *qpi; /* Number of q indices per irrep */; int *poff; /* Orbital offset for p */; int *qoff; /* Orbital offset for q */; int *psym; /* Orbital symmetry for index p */; int *qsym; /* Orbital symmetry for index q */; } dpdparams2;. The library interacts with data stored on disk via the; dpdfile4 and dpdfile2 structures, which have; dpdparams4 and dpdparams2 structures, respectively,; as members:. typedef struct {; char label[PSIO_KEYLEN]; /* Label needed by the I/O routines */; int filenum; /* The PSI unit number */; int my_irrep; /* Total irrep of this quantity */ ; psio_address *lfiles; /* The disk address of each irrep of data */; dpdparams4 *params; /* The current parameter structure */; int incore; /* Is this file4 already in memory? */ ; double ***matrix; /* Data */; } dpdfile4;. The one-electron (two-index) counterpart of dpdfile4 is:. typedef struct {; char label[PSIO_KEYLEN]; /* Label needed by the I/O routines */; int filenum; /* The PSI unit number */; int my_irrep /* The total irrep of this quantity */ ; psio_address *lfiles; /* The disk address of each irrep of data */; dpdparams2 *params; /* The current parameter structure */; int incore; /* Is this file2 already in memory? */ ; double ***matrix; /* Data */; } dpdfile2;. As described above, one may need to store a given quantity in memory; in a manner different from that which is used on disk. The library; distinguishes between on-disk and in-memory storage using the; dpdbuf4 structure (for four-index quantities only), which has; a corresponding dpdfile4 as a member:. typedef struct {; int anti; /* Boolean f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html:12812,rout,routines,12812,doc/sphinxman/source/attic/libdpd.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html,1,['rout'],['routines']
Integrability," :math:`V` and in :math:`W_A+W_B`; the; subscript, :math:`resp`, indicates that orbital relaxation effects are included. .. math:: E_{SAPT2} = E_{SAPT0} + E_{elst,resp}^{(12)} + E_{exch}^{(11)} +; E_{exch}^{(12)} + \; ^{t}\!E_{ind}^{(22)} + \; ^{t}\!E_{exch-ind}^{(22)}; :label: SAPT2. .. math:: E_{SAPT2+} = E_{SAPT2} + E_{disp}^{(21)} + E_{disp}^{(22)}; :label: SAPT2p. .. math:: E_{SAPT2+(3)} = E_{SAPT2+} + E_{elst,resp}^{(13)} + E_{disp}^{(30)}; :label: SAPT2pparen3. .. math:: E_{SAPT2+3} = E_{SAPT2+(3)}; + E_{exch-ind}^{(30)} + E_{ind,resp}^{(30)}; + E_{exch-disp}^{(30)} + E_{ind-disp}^{(30)} + E_{exch-ind-disp}^{(30)}; - \delta_{HF}^{(2)} + \delta_{HF}^{(3)}; :label: SAPT2p3. For SAPT(DFT), the SAPT expansion is truncated at the same level of SAPT0, but the zeroth-order Hamiltonian is chosen to be :math:`K_A+K_B`, the monomer Kohn-Sham operators, instead of the Fock operators. The dispersion term needs to be computed with orbital relaxation for the result to be reasonable, and this is possible by computing dispersion energy through coupled frequency-dependent density susceptibility (FDDS). The exchange-dispersion term is estimated by scaling the uncoupled exchange-dispersion energy. . .. math:: E_{SAPT(DFT)} = E_{elst}^{(10)} + E_{exch}^{(10)} + E_{ind,resp}^{(20)} +; E_{exch-ind,resp}^{(20)} + E_{disp,resp}^{(20)} + E_{exch-disp,resp}^{(20)}(est.) + \delta_{HF}^{(2)}; :label: SAPTDFT; .. math:: E_{disp,resp}^{(20)} = -\frac{1}{2\pi}\int_0^\infty d\omega \int d\mathbf{r}_A d\mathbf{r}'_A d\mathbf{r}_B d\mathbf{r}'_B \frac{1}{\left|\mathbf{r}_A-\mathbf{r}_B\right|}\frac{1}{\left|\mathbf{r}'_A-\mathbf{r}'_B\right|}\chi^A_{coup}\left(\mathbf{r}_A,\mathbf{r}'_A|i\omega\right)\chi^B_{coup}\left(\mathbf{r}_B,\mathbf{r}'_B|i\omega\right). .. math:: \chi_{coup}\left(\mathbf{r},\mathbf{r}'|\omega\right) = \chi_0\left(\mathbf{r},\mathbf{r}'|\omega\right) + \int d\omega d\mathbf{r}_1 d\mathbf{r}_2 \chi_0\left(\mathbf{r},\mathbf{r}_1|\omega\right)\left[\frac{1}{r_{12}} + f_{x",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:7110,depend,dependent,7110,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['depend'],['dependent']
Integrability," DFT-D2 single point with default parameters (``dftd3`` not called) ::. energy('bp86-d'). * DFT-D3BJ optimization with default parameters ::. optimize('pbe-d3bj'). * DFT-D2 optimization with custom s6 parameter ::. set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). * DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values) ::. set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). * DFT-D2 single point with ``dftd3`` instead of |PSIfours| libdisp ::. energy('pbe-d2', engine='dftd3'). If only dispersion corrections (rather than total energies) are of; interest, the dispersion programs can be run independently of the scf; through the python function :py:func:`~qcdb.Molecule.run_dftd3` or :py:func:`~qcdb.Molecule.run_dftd4`. (These functions; call QCEngine, which is the same |PSIfour| + ``dftd3``/``dftd4`` interface that is called during an scf job.); This ""D-only"" route is much faster than running a DFT-D energy.; This route is NOT available for ``s-dftd3``. File an issue if a definite need arises. Note that in a DFT+D energy or gradient calculation, user-specified; dispersion parameters override any information provided about the; functional. The same holds true for a ``dftd3`` ""D-only"" calculation. But; in a ``dftd4`` ""D-only"" calculation, functional information overrides; any user-specified dispersion parameters. * Some set-up::. molecule nene {; Ne; Ne 1 2.0; }; ; nene.update_geometry(). * The same four dispersion corrections/gradients as the section above::. >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05; ; >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]; ; >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05; ; >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. .. autofunction:: qcdb.Molecule.run_dftd3. .. autofunction",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:24102,rout,route,24102,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['rout'],['route']
Integrability," In some cases the above algorithms have multiple implementations that return; the same result, but are optimal under different molecules sizes and hardware; configurations. Psi4 will automatically detect the correct algorithm to run and; only expert users should manually select the below implementations. The DF; algorithm has the following two implementations. MEM_DF; A DF algorithm optimized around memory layout and is optimal as long as; there is sufficient memory to hold the three-index DF tensors in memory. This; algorithm may be faster for builds that require disk if SSDs are used.; DISK_DF; A DF algorithm (the default DF algorithm before Psi4 1.2) optimized to; minimize Disk IO by sacrificing some performance due to memory layout. Note that these algorithms have both in-memory and on-disk options, but; performance penalties up to a factor of 2.5 can be found if the incorrect; algorithm is chosen. It is therefore highly recommended that the keyword ""DF""; be selected in all cases so that the correct implementation can be selected by; |PSIfours| internal routines. Expert users can manually switch between MEM_DF and; DISK_DF; however, they may find documented exceptions during use as several; post SCF algorithms require a specific implementation. Additionally, expert users ; can manually switch between the in-memory and on-disk options *within* MEM_DF or DISK_DF using ; the |scf__scf_subtype| option. Using ``SCF_SUBTYPE = AUTO``, where |PSIfour| ; automatically selects the in-memory or on-disk option for MEM_DF/DISK_DF based on memory and molecule, is the default ; and recommended option. However, the in-memory or on-disk algorithms for MEM_DF and DISK_DF can be forced by using; ``SCF_SUBTYPE = INCORE`` or ``SCF_SUBTYPE = OUT_OF_CORE``, respectively.; Note that an exception will be thrown if ; ``SCF_SUBTYPE = INCORE`` is used without allocating sufficient memory to ; |PSIfour|. For some of these algorithms, Schwarz and/or density sieving can be used to; identify ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:33860,rout,routines,33860,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['rout'],['routines']
Integrability," TOC list. If a second entry exists, the; ending-address data from the first entry is used to lseek(); to the next entry, whose header is read into the in-core TOC, and so; on. If a new entry is added or an existing entry is modified (e.g.,; extended), both the in-core TOC and the corresponding TOC header; on-disk are updated automatically. This prevents most cases of; corruption of the file in case of a program crash. Apart from the toclen integer, the file itself is viewed by; the library as a series of pages, each of which contains an identical; number of bytes. The global address of the beginning of a given entry; is stored on the TOC as a page/offset pair comprised of the starting; page and byte-offset on that page where the data reside.; The entry-relative page/offset addresses which the programmer; must provide work in exactly the same manner, but the 0/0 (PSIO_ZERO); position is taken to be the beginning of the desired entry rather than; the beginning of the file. II. The user interface. All of the functions needed to carry out basic I/O are described in; this subsection. Proper declarations of these routines are provided; by the header file psio.h. Note; that before any open/close functions may be called, the input parsing; library, libipv1 must be initialized so that the necessary; file striping information may be read from user input. (See the; PSI3 programmer's manual for details on the current version of the; input parser.) Also note that ULI is used as an abbreviation; for unsigned long int in the remainder of this manual.; int psio_init(void): Before any; files may be opened or the basic read/write functions of; libpsio may be used, the global data needed by the library; functions must be initialized using this function.; int psio_ipv1_config(void):; If the library is operator within a PSI module, the library can find; its configuration data in the input file or in the .psirc file when this; function is called. Therefore it should be called immediatel",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libpsio.html:3618,interface,interface,3618,doc/sphinxman/source/attic/libpsio.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libpsio.html,1,['interface'],['interface']
Integrability," Tag with ``git tag -a v1.8.2 -m ""v1.8.2""``, then push ``git push --atomic upstream 1.8.x v1.8.2``. * Test core |PSIfour| thoroughly locally (ecosystem will get tested by c-f) by running; ``pytest ../tests/ -n auto`` (psithon and psiapi tests). Possibly you may have to step back for; dependency versions from what master needs.; * Start `Tweak Conda for postrelease`_ PR at conda-forge. This will thoroughly test the ecosystem.; * If more changes are needed, ``git tag -d v1.8.2`` to delete the tag, then make more commits,; retag, push, and repeat. Try to finalize the postrelease tag within a session or a day, so; tentative tags don't linger.; * Start the draft parts of `Publish GitHub postrelease`_ from the backported PRs assembled here. .. Tweak Conda for postrelease (pre-Spring 2023); .. ---------------------------------------------; ..; .. * In psi4-* recipes, find the best combination of master meta.yaml/build.sh and the v1N(x-1)-labeled ones; ..; .. - comment out any dependencies in master but not yet in postrelease; .. - add ``{{ dep_bld }}`` entries if needed to step back build. make sure normal operation is ``''``; ..; .. * In cbcy,; ..; .. - create a postrelease new line and record anything not in continuous order with <> or blanking; .. - step back any dependencies versions or build numbers to ones compatible with the postrelease. Tweak Conda for postrelease; ---------------------------. * Start a PR to https://github.com/conda-forge/psi4-feedstock . Always store the PR branch on your; fork, never on the conda-forge feedstock (or your branch itself will get publically packaged).; https://github.com/conda-forge/psi4-feedstock/pull/15 is an example. - Always: edit ``version`` and ``commit`` jinja variables.; - Possibly: edit ``source/url`` field for trial locations.; - Always: edit ``sha256`` jinja variable from e.g., ``curl -sL https://github.com/psi4/psi4/archive/v1.8.2.tar.gz | openssl sha256``; - Always: edit ``build/number``. Either reset to 0 if version in",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:11028,depend,dependencies,11028,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['depend'],['dependencies']
Integrability," This is done by reading all (r,s) for a; given (p,q) (a row of the supermatrix) and then forming I(pq,rs); = I(pq,rs) - I(pq,sr) on the fly.; label - The PSI I/O table-of-contents string label which; identifies the data on disk. For example, consider again the Dirac-notation integrals <ij|ab>; (which are not antisymmetrized) which are already stored on disk. If; we wish to read the antisymmetrized form of these integrals into; memory but to also pack the i and j indices (i.e. keep; i>j), we might call dpd_buf4_init() in the following; manner:. dpd_buf4_init(Buffer, PSIFILE, 0, 2, 5, 0, 5, 1, ""<ij|ab> integrals"");. These argument indicate that while the integrals are stored as; (pqnum,rsnum) = (0, 5) on disk, they will be stored in memory as (2,; 5), with the row indices packed. In addition, the data will be; antisymmetrized as it is read into memory. Note, however, that the; libdpd routines do not make sure that your intialization; request makes sense (apart from some pre-processor defined debugging; in a few high-level functions), and it is quite possible to; erroneously pack indices for non-(anti)symmetric quantities. When the program is finished with a given buffer, the int dpd_buf4_close(dpdbuf4 *Buf); function is called to deallocate the associated memory. V. Contraction Evaluation. The library provides a number of high-level functions for evaluating a; variety of products among two- and four-index buffers. This section; outlines these functions and provides simple examples of their use.; int dpd_contract444(dpdbuf4 *X,; dpdbuf4 *Y, dpdbuf4 *Z, int target_X, int target_Y, double; alpha, double beta):; This function contracts two four-index buffers, X and; Y, into a target four-index buffer, Z, using the; general formula, alpha * X(pq,mn) * Y(mn,rs) = beta *; Z(pq,rs). The current version of this function requires that the; target (external) indices must both be contained in the bra (row) or; ket (column) of X and Y. The value of; target_X indicates that the tar",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html:16093,rout,routines,16093,doc/sphinxman/source/attic/libdpd.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html,1,['rout'],['routines']
Integrability," `theory behind ddx <https://ddsolvation.github.io/ddX/md_docs_theory.html>`_; or further `literature references <https://ddsolvation.github.io/ddX/label_references.html>`_; see the ddx documentation. The usage of ddx-based solvation models is enabled; by specifying |globals__ddx| ``true`` in your input file.; The solvation model itself is selected using the |ddx__ddx_model| parameter.; Additionally the definition of the solvent and solute cavity is required; and further parameters allow to influence details of discretisation,; numerical integration and iterative solvers,; see the next sections for details. .. note:: At present PCM can only be used for energy calculations with SCF; wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: Currently the ddx interface **cannot** exploit molecular point group symmetry. .. warning:: Analytic gradients and Hessians are currently **not available**; with dd-based solvation models. A minimal input for a Hartree--Fock calculation with dd-based PCM would look like; the following: ::. import psi4; nh3 = psi4.geometry(""""""; N -0.0000000001 -0.1040380466 0.0000000000; H -0.9015844116 0.4818470201 -1.5615900098; H -0.9015844116 0.4818470201 1.5615900098; H 1.8031688251 0.4818470204 0.0000000000; symmetry c1; no_reorient; no_com; units bohr; """"""). psi4.set_options({; ""basis"": ""sto-3g"",; ""scf_type"": ""pk"",; ""ddx"": True,; ""ddx_model"": ""pcm"",; ""ddx_solvent"": ""water"",; ""ddx_radii_set"": ""uff"",; }). scf_e = psi4.energy('SCF'). Solvent model and solvent cavity definition; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Beyond setting |globals__ddx| to ``true`` and selecting; a solvent model using |ddx__ddx_model|,; the definition of the solvent is mandatory.; Regularly one might want to influence the setup of the solvent; cavity ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:4609,interface,interface,4609,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['interface'],['interface']
Integrability," and as Python function arguments.; The few exceptions are documented for the :py:func:`~psi4.driver.wrapper_database.database` function,; where case structure must match the database file. .. _`op_c_bool`:; .. _`op_c_boolean`:; .. note:: Boolean options can be specified by ``yes``, ``on``, ``true``, or ``1``; for affirmative and ``no``, ``off``, ``false``, or ``0`` for negative,; all insensitive to case. .. _`op_c_conv`:; .. note:: Certain convergence and tolerance keywords, of type *double* (real numbers),; may be specified using either a real number or an integer; and integer *X* is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to :math:`10^{-6} E_h`, the user may set the ``e_convergence``; keyword to ``0.000001``, ``1.0e-6``, or ``6``. .. _`sec:psivarnotes`:. Notes on PSI Variables; ======================. .. note:: Starting in 1.6, there are three standard ways to access an excited state; property. We give examples below, but the method name and property name may change. * ``method ROOT 0 -> ROOT m property`` to get root ``m``.; * ``method ROOT 0 -> ROOT m property - h TRANSITION`` to get root m and; independently specify that the total transition symmetry is ``h``, e.g., A2.; * ``method ROOT 0 (h) -> ROOT m (i) property`` to get the transition; between two roots, specifying the symmetry of both states and the index of the target; roots among states of their own symmetry. For example, to target the second excited-state, which is also the lowest energy state; of its irrep, the first two calls will take m = 2, while the last takes m = 0.; Methods that use this interface are: TD-fctl.; Note that numberings are associated with the calculation much more strongly than ; with the molecular system. Changing the number of roots sought, the symmetry ; subspace or the symmetry apportionment of roots under which the computation is run, ; or the excited state method are all likely to scramble root numberings. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_c.rst:3119,interface,interface,3119,doc/sphinxman/source/notes_c.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_c.rst,1,['interface'],['interface']
Integrability," and licensing of the BrianQC module)"" OFF); option(ENABLE_Libint1t ""Enables Libint1 in special _t variety"" OFF); # These options are relevant to pasture, expert only; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); option(psi4_SKIP_ENABLE_Fortran ""Suppress enabling Fortran language even when Fortran addons enabled. Use when only linking pre-built, not compiling addon code."" OFF). # Append modules added to pasture as needed; if(ENABLE_ccsort OR ENABLE_transqt2); set(ENABLE_pasture ON); message(STATUS ""Enabling pasture plugins""); endif(). if(ENABLE_gdma OR ENABLE_dkh OR ENABLE_erd OR ENABLE_PCMSolver); if(psi4_SKIP_ENABLE_Fortran); message(STATUS ""NOT Enabling Fortran""); else(); enable_language(Fortran); set(Fortran_ENABLED ON) # communicate required languages with psi4-core; message(STATUS ""Enabling Fortran""); endif(); endif(). if(ENABLE_erd); message(FATAL_ERROR ""The Psi4/ERD interface is broken, probably since spring 2017. It's toast (comment this line to try), but disabling for now.""); message(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, known failures will be caught and halted, but perhaps other types not tested and identified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_wit",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:8708,message,message,8708,CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt,2,"['interface', 'message']","['interface', 'message']"
Integrability," and prepend :envvar:`PYTHONPATH` with the top qcdb; .. directory (the path added to PYTHONPATH should have one ""qcdb"" in it;; .. the cloned qcdb is what needs to be imported in preference to the one; .. already in psi4). Execute psi4 as usual. .. caution:: The p4c4 interface hasn't been fully adapted for the new March 2014 version. Cfour for |PSIfour| Users; ~~~~~~~~~~~~~~~~~~~~~~~~~. * Set memory as usual. * Set molecule as usual. * Set basis set as usual (Cfour only cares about orbital basis, no fitting; bases). * Set the task as usual, indicating Cfour as the intended code by; prepending ""c4-"" to the method argument. So ``energy('scf')`` becomes; ``energy('c4-scf')`` and ``optimize('ccsd(t)')`` becomes; ``optimize('c4-ccsd(t)')``. Find available methods for; :py:func:`~psi4.driver.energy` at :ref:`Energy (CFOUR) <table:energy_cfour>`; and for :py:func:`~psi4.driver.optimize` at :ref:`Gradient (CFOUR); <table:grad_cfour>`. * Generally, the p4c4 interface will handle best practices for path of; execution: ``vcc``/``ecc``, derivative type, *etc.* The user is still; responsible for setting convergence, frozen core, guess, diis, *etc.*; For the moment, so-called ""best-practices"" keywords are summarized at; :ref:`Best Practices <table:cfour_cc_program>`. * For the type of computation intended, find appropriate options at; :ref:`Keywords <apdx:cfour>`. These keyword summaries contain the same; information as the `proper CFOUR options list; <http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.ListOfKeywordsInAlphabeticalOrder>`_; plus notes on keyword relevance when run through |PSIfour|. Information; at the `CFOUR manual; <http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.Manual>`_ may; also be useful, as may the many samples at :source:`samples/cfour`. * Set Cfour keywords just like |PSIfour| keywords. The names of keywords; are unchanged beyond a prepended ""cfour\_"". (Though be aware that common; abbreviations like CALC and REF must be fully spelled out as",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:3525,interface,interface,3525,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['interface'],['interface']
Integrability," as; |globals__freeze_core| and |globals__num_frozen_uocc|; are supported with all ADC methods using the adcc backend. Currently adcc is only capable of performing in-core calculations,; for which, however, permutational symmetry and spin symmetry is taken; into account for both tensor computations and tensor storage.; Inside adcc some heuristic checks for overly excessive memory requirements; are implemented, resulting in a warning in case a; successful execution is unlikely. There are no guarantees for the memory; to be sufficient in case such a warning is not displayed. More detailed documentation about adcc and its features can be found; at `<https://adc-connect.org>`_,; especially the `theory section <https://adc-connect.org/latest/theory.html>`_.; If you are using adcc from |PSIfour| for your calculations,; please cite both |PSIfour| as well as adcc [Herbst2020]_; in your published work. **The ADC wavefunction object.**; After running the ADC calculation in adcc, the interface code sets; a number of variables in the returned :py:class:`~psi4.core.Wavefunction`; in case they are computed.; In the following the ``<method>`` prefix refers to the ADC method (such as ``adc(1)``,; ``adc(3)``, ``cvs-adc(2)-x``). * Ground state energy terms like ``MP2 correlation energy``, ``MP3 correlation energy``,; ``MP2 total energy``, ``MP3 total energy``, ``current correlation energy`` and ``current energy``.; * ``MP2 dipole X`` and the other components: Ground state dipole moments at MP(2) level.; * ``number of iterations``: The number of iterations the iterative solver required to converge.; * ``number of excited states``: The number of excited states, which were computed.; * More variables are summarized in :ref:`apdx:psivariables_alpha`. The following attribute is set on returned wavefunctions:. * ``adcc_state``: The `adcc.ExcitedStates <https://adc-connect.org/q/excitedstates>`_; object used by adcc to store the ADC(n) excitation energies and all precomputed data; in the for",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst:11857,interface,interface,11857,doc/sphinxman/source/adc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst,1,['interface'],['interface']
Integrability," autodir_options_c/ddx__ddx_radii_scaling.rst; .. include:: autodir_options_c/ddx__ddx_radii_set.rst; .. include:: autodir_options_c/ddx__ddx_solvent_epsilon.rst; .. include:: autodir_options_c/ddx__ddx_solvent.rst; .. include:: autodir_options_c/ddx__ddx_solvent_kappa.rst. Numerical integration and discretisation parameters; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. These parameters can be altered to balance the cost and accuracy; of the implict description of the solvation. |ddx__ddx_solute_radial_points| and |ddx__ddx_solute_spherical_points| influence; the accuracy of the numerical grid used to obtain the representation; of the electric potential / field of the solute density,; since a standard DFT integration grid is used to obtain these quantities.; In contrast to the integration of DFT quantities much lower accuracy; is required, such that for this step considerably smaller grids are employed.; If extremely high accuracy reference solutions are required, the DDX; DFT integration parameters might need to be increased, but this is rarely needed. |ddx__ddx_lmax| and |ddx__ddx_n_lebedev| determine the accuracy of the computations; on the boundary of the spheres around each atom performed by DDX. |ddx__ddx_lmax|; determines the largest angular momentum of the spherical harmonics basis used; to discretise quantities on the atomic spheres and |ddx__ddx_n_lebedev| determines the; number of points of the Lebedev angular grid used for integration on the spheres.; |ddx__ddx_n_lebedev| should be chosen higher than |ddx__ddx_solute_spherical_points|; and the defaults are usually good. .. include:: autodir_options_c/ddx__ddx_solute_radial_points.rst; .. include:: autodir_options_c/ddx__ddx_solute_spherical_points.rst; .. include:: autodir_options_c/ddx__ddx_lmax.rst; .. include:: autodir_options_c/ddx__ddx_n_lebedev.rst. Iterative solver parameters; ~~~~~~~~~~~~~~~~~~~~~~~~~~~. These parameters determine how the forward and adjoint linear systems; of the solvatio",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:9096,integrat,integration,9096,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['integrat'],['integration']
Integrability," autodir_options_c/globals__ddx.rst; .. include:: autodir_options_c/ddx__ddx_model.rst; .. include:: autodir_options_c/ddx__ddx_radii.rst; .. include:: autodir_options_c/ddx__ddx_radii_scaling.rst; .. include:: autodir_options_c/ddx__ddx_radii_set.rst; .. include:: autodir_options_c/ddx__ddx_solvent_epsilon.rst; .. include:: autodir_options_c/ddx__ddx_solvent.rst; .. include:: autodir_options_c/ddx__ddx_solvent_kappa.rst. Numerical integration and discretisation parameters; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. These parameters can be altered to balance the cost and accuracy; of the implict description of the solvation. |ddx__ddx_solute_radial_points| and |ddx__ddx_solute_spherical_points| influence; the accuracy of the numerical grid used to obtain the representation; of the electric potential / field of the solute density,; since a standard DFT integration grid is used to obtain these quantities.; In contrast to the integration of DFT quantities much lower accuracy; is required, such that for this step considerably smaller grids are employed.; If extremely high accuracy reference solutions are required, the DDX; DFT integration parameters might need to be increased, but this is rarely needed. |ddx__ddx_lmax| and |ddx__ddx_n_lebedev| determine the accuracy of the computations; on the boundary of the spheres around each atom performed by DDX. |ddx__ddx_lmax|; determines the largest angular momentum of the spherical harmonics basis used; to discretise quantities on the atomic spheres and |ddx__ddx_n_lebedev| determines the; number of points of the Lebedev angular grid used for integration on the spheres.; |ddx__ddx_n_lebedev| should be chosen higher than |ddx__ddx_solute_spherical_points|; and the defaults are usually good. .. include:: autodir_options_c/ddx__ddx_solute_radial_points.rst; .. include:: autodir_options_c/ddx__ddx_solute_spherical_points.rst; .. include:: autodir_options_c/ddx__ddx_lmax.rst; .. include:: autodir_options_c/ddx__ddx_n_lebede",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:8892,integrat,integration,8892,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['integrat'],['integration']
Integrability," automated and wrapped around the; conventional single-point and optimization procedures at the heart of all; quantum chemistry codes. Three core ""wrappers"" available in |PSIfour| are; :py:func:`~psi4.driver.driver_nbody.nbody`,; :py:func:`~psi4.driver.wrapper_database.database`, and; :py:func:`~psi4.driver.cbs`; read their respective sections; for details, but an overview is provided here. :py:func:`~psi4.driver.driver_nbody.nbody`; computes the interaction energy of a bimolecular complex (counterpoise-corrected,; not, or both). ::. molecule dimer {; Ne; --; Ne 1 R; symmetry c1; }; ; Rvals=[2.5, 3.0, 4.0]; set basis aug-cc-pVDZ; ; for R in Rvals:; dimer.R = R; ecp = cp('c4-mp2'); print_stdout('R [A] = %.1f IE [kcal/mol] = %.3f\n' % (R, psi_hartree2kcalmol * ecp)); ; yields ::. R [A] = 2.5 IE [kcal/mol] = 0.804; R [A] = 3.0 IE [kcal/mol] = 0.030; R [A] = 4.0 IE [kcal/mol] = -0.014. Next, the :py:func:`~psi4.driver.wrapper_database.database` wrapper allows any computational; model chemistry to be applied a predefined collection of molecules. Thus; an input ::. set {; basis jun-cc-pvdz; d_convergence 9; }; ; database('c4-mp2','nbc10',cp='on',subset='MeMe'). yields the counterpoise-corrected interaction energy for several points; along the dissociation curve of methane dimer, which is a member of the; :srcdb:`NBC10` database::. //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // Database nbc10 Results //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//; ; For each VARIABLE requested by tabulate, a 'Reaction Value' will be formed from; 'Reagent' values according to weightings 'Wt', as for the REQUESTED ENERGY below.; Depending on the nature of the variable, this may or may not make any physical sense.; ; ==> Requested Energy <==; ; ----------------------------------------------------------------------------------------------; Reaction Reaction Energy Error Reagent 1 Reagent 2; Ref Calc [kcal/mol] [H] Wt [H] Wt; ----------------------------------------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:16419,wrap,wrapper,16419,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['wrap'],['wrapper']
Integrability," balanced basis [Kutzelnigg:1984]_ treatment. ; In the X2C treatment, the positive-energy block of the Hamiltonian ( :math:`h^{FW}_{\rm ++}` ); is given by the sum; of a transformed kinetic (:math:`T_{\rm X2C}`) and potential energy ( :math:`V_{\rm X2C}` ) contribution.; Relativistic kinetic energy ( :math:`T_{\rm X2C}` ) and nuclear-electron interaction potential ( :math:`V_{\rm X2C}` ) is given in terms of non-relativisitc kinetic (:math:`T=\hat{p}^2/2`) energy and nuclear-electron interaction potential (:math:`V`), coupling matrix ( :math:`X`) and renormalization matrix ( :math:`R`). . .. math::; T_{\rm X2C} = R^{\dagger} (TX + {X}^{\dagger}T - {X}^{\dagger}TX ) R . .. math::; V_{\rm X2C} = R^{\dagger}(V + \frac{1}{4c^2} X^{\dagger}W^{\text{SF}}X) R. The coupling matrix ( :math:`{X} = C^{S} (C^{L})^{-1}` ) is obtained from the large (:math:`C^{\rm L}`) and small (:math:`C^{\rm S}`) components of the :math:`N` positive energy solutions of the Dirac equation.; The renormalization matrix ; :math:`{R}=S^{-1/2}(S^{-1/2}\tilde{S}S^{-1/2})^{-1/2}S^{1/2}`,; depends on the modified overlap matrix; :math:`\tilde{S}=S+\frac{1}{2c^2}X^{\dagger}TX`. The integrals :math:`W^{\rm SF}_{\mu\nu} = \langle {\chi_\mu} | \hat{p}\cdot (\hat{V}\hat{p}) |{\chi_\nu}\rangle` can be easily computed as derivatives of the nuclear-electron attraction integrals with respect to nuclear coordinates.; Existing nonrelativistic electronic structure code can be extended to include scalar relativistic effects; treated with the X2C method by replacing nonrelativistic kinetic and potential energy with the corresponding; X2C operators :math:`T_{X2C}` and :math:`V_{X2C}`. It is important to note that fully uncontracted basis in needed for the construction of X2C Hamiltonian as Foldy-Wouthuysen (FW [FW:1950]_) transformation is obtained in kinetically balance basis. Keywords; ~~~~~~~~. .. include:: autodir_options_c/globals__relativistic.rst; .. include:: autodir_options_c/globals__basis_relativistic.rst. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst:5568,depend,depends,5568,doc/sphinxman/source/relativistic.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/relativistic.rst,1,['depend'],['depends']
Integrability," basis function is a Hartree-Fock (or Kohn-Sham); molecular orbital. The number of OSOs and MOs is always the same. MOs are; orthonormal. * ``LO`` (Localized Orbitals): Localized occupied orbitals, a different; combination of the occupied molecular orbitals which enhances spatial; locality. LOs do not diagonalize the occ-occ block of the Fock Matrix, but; remain orthonormal to each other and the virtual space. .. _`faq:orbdims`:. How to name orbital dimensions; ------------------------------. There are a number of different names used to refer to the basis set size.; These may seem redundant, but they have subtly different meanings, as; detailed below. A calculation can use either pure (5D, 7F, 9G, etc.) basis functions or; Cartesian (6D, 10F, 15G, etc.), as dictated by the input file / basis set; specification. Also, the basis can be represented in terms of atomic; orbitals (AO) or symmetry-adapted orbitals (SO). Further complications; come from the fact that a nearly linearly-dependent basis set will have; functions removed from it to prevent redundancies. With all of these; factors in mind, here are the conventions used internally:. * nao |w---w| The number of atomic orbitals in Cartesian representation.; * nso |w---w| The number of atomic orbitals but in the pure representation if the current basis uses pure functions, number of Cartesian AOs otherwise.; * nbf |w---w| The number of basis functions, which is the same as nso.; * nmo |w---w| The number of basis functions, after projecting out redundancies in the basis. When molecular symmetry is utilized, a small array of sizes per irrep is; usually allocated on the stack, and is named by augmenting the name above; with a pi (per-irrep), e.g. nmopi. Note that the number of irreps is; always the singular nirrep, and that the index variable h is always used; in a for-loop traverse of irreps. .. _`faq:orbspaces`:. How to name orbital spaces (e.g., docc); ---------------------------------------. As with basis sets, a nu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:13415,depend,dependent,13415,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,1,['depend'],['dependent']
Integrability," block_matrix(n,n);; ; // Call the BLAS1 dot product between a and b; // n can be a ULI with the BLAS1 wrappers,; // All strides must be ints though; double dot = C_DDOT(n, a, 1, b, 1);; ; // Call the BLAS2 GEMV without transposition; // Note this works in row-major order; C_DGEMV('N', n, n, 1.0, A[0], n, a, 1, 0.0, b, 1);; ; // Call the BLAS3 GEMM without transposition; // Note this works in row-major order; C_DGEMM('N','N', n, n, n, 1.0, A[0], n, B[0], n, 0.0, C[0], n);; ; // Array's init'd with init_array must be free'd, not delete[]'d; free(a);; free(b);; ; // Block matrix should be free_blocked; free_block(A);; free_block(B);; free_block(C);. Important BLAS Routines; ^^^^^^^^^^^^^^^^^^^^^^^. * BLAS1. * DDOT: dot product; * DCOPY: efficient memory copy (with variable stride); * DAXPY: y = y + alpha*x; * DROT: Givens Rotation; * DNRM2: Vector norm square. * BLAS2. * DGEMV: General Matrix-Vector product; * DTRMV: Triangular Matrix-Vector product (2x faster, not wrapped yet); * DTRSM: Triangular Matrix-Vector solution via back substitution (just as fast as DTRMV); * DGER: Rank-1 update (not wrapped yet). * BLAS3. * DGEMM: General Matrix-Matrix product; * DTRMM: General Triangular Matrix-General Matrix product; * DTRSM: Triangular Matrix-General Matrix solution via back substitution (just as fast as DTRMM); * DSYMM/DSYMV calls are not appreciably faster than DGEMM calls, and should only be used in expert situations (like using the other half of the matrix for some form of other transformation).; * DTRMM/DTRMV calls are 2x faster than DGEMM, and should be used where possible. LAPACK Wrappers; ^^^^^^^^^^^^^^^. All standard LAPACK 3.2 double precision routines are provided. LAPACK commands remain in Fortran's ""column-major"" indexing, so all the; results will be transposed, and leading dimensions may have to be fiddled; with (using ``lda = n`` in both directions for square matrices is highly; recommended). An example of the former problem is a Cholesky; Decomposition: yo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:4745,wrap,wrapped,4745,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,2,['wrap'],['wrapped']
Integrability," by the GHA. * Edit the GHA control file https://github.com/psi4/psi4meta/blob/master/.github/workflows/Docker.yml; ``matrix.cfg`` list for changed Python version and to label the tags with current Psi4 from c-f.; * Commit ``environment.yaml`` or ``Docker.yml`` to trigger GHA Docker builds.; * Check at DockerHub for new images. .. Generate download page for psicode.org (pre-Fall 2023); .. ------------------------------------------------------; ..; .. * Be in repo psicode-hugo-website; .. * Copy and edit new file akin to https://github.com/psi4/psicode-hugo-website/blob/master/content/installs/v13rc2.md. Note the edition string ``v13rc2`` in frontmatter for this and future filenames; .. * Copy and edit new file akin to https://github.com/psi4/psicode-hugo-website/blob/master/data/installs/v13rc2.yaml for menu and notes content; .. * Enter ``scripts/`` dir and edit primarily https://github.com/psi4/psicode-hugo-website/blob/master/scripts/install-generator.py#L9 but also any other arrays or messages that should change.; .. * Run the ``install-generator.py`` in place. It will dump new files into ``data/installs/`` _subdirs_. Be sure to ``git add`` them.; .. * Installer page is now ready.; .. * Shift ""latest"" alias in frontmatter from whichever page is currently active to the new page. This makes sure ""Downloads"" on the navigation bar points to new page.; .. * Conscientiously, one should test; ..; .. - installer downloads in Mac and Linux. And actually installing them and ``psi4 --test`` them.; .. - that download button and ``curl`` downloading register on the download counters on vergil; ..; .. * Commit the new files, PR, and deploy psicode site; .. * Petition on Slack for testers. Generate download page for psicode.org; --------------------------------------. * Be in local clone of repository https://github.com/psi4/psicode-hugo-website .; * Copy and edit a new file akin to ``content/installs/v182.md``. Add it to the git index. - Note the edition string ``v182`` in fro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:28127,message,messages,28127,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['message'],['messages']
Integrability," codeauthor:: Daniel G. A. Smith; .. sectionauthor:: Daniel G. A. Smith. *Module:* :source:`psi4/driver/p4util/numpy_helper.py`. Basics; ~~~~~~. Converting between the |PSIfour| Data classes and a NumPy array is easy through; various helper functions as detailed in this section. A quick overview NumPy; functionality can be found `here; <https://numpy.org/doc/stable/user/quickstart.html>`_. In addition,; numerous example of hybrid NumPy and Psi4 can be found at the `Psi4Numpy; project <https://github.com/psi4/psi4numpy>`_. Currently only the Matrix; and Vector objects support NumPy interfacing. Let us begin with a simple; conversion from these objects to a NumPy array::. >>> import psi4; >>> import numpy as np. # Build the Psi4 data objects; >>> mat = psi4.core.Matrix(3, 3) ; >>> vec = psi4.core.Vector(3). # Convert to a NumPy array; >>> numpy_mat = np.array(mat); >>> numpy_vec = np.array(vec). Here the data is copied into new NumPy arrays. NumPy arrays can be converted; back to |PSIfour| objects using the ``from_array`` interface::. >>> new_mat = psi4.core.Matrix.from_array(mat); >>> new_vec = psi4.core.Vector.from_array(vec). NumPy Views; ~~~~~~~~~~~. Copying the data between NumPy and Psi4 objects can lead to excessive data; movement and convoluted code. Here we introduce the idea of ""Views"" where the; same data can be viewed by multiple objects. However, this can lead to very; subtle errors if used incorrectly and care needs to be taken when using these; views. Views can be created in two ways::. >>> numpy_mat_view = np.asarray(mat). # Access the NumPy object and set all values to 1 through broadcasting; >>> numpy_mat_view[:] = 1; ; >>> print(np.array(mat)); [[ 1. 1. 1.]; [ 1. 1. 1.]; [ 1. 1. 1.]]. Secondly, these objects have a ``.np`` attribute for easy access to the underlying data::. >>> mat.np[:] = 1. this operation is identical to the above. |PSIfour| Data Objects with Irreps; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| data objects natively support multip",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/numpy.rst:2177,interface,interface,2177,doc/sphinxman/source/numpy.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/numpy.rst,1,['interface'],['interface']
Integrability," dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. erd from conda without thinking, consult. * To remove a conda installation, ``conda remove erd``. **Source**. * .. image:: https://img.shields.io/github/tag/psi4/erd.svg?maxAge=2592000; :target: https://github.com/psi4/erd. * If using |PSIfour| built from source and you want erd built from; from source also,; enable it as a feature with :makevar:`ENABLE_erd`,; and let the build system fetch and build it and activate dependent code. .. .. _`sec:erdinput`:. .. _`cmake:erd`:. How to configure erd for building Psi4; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. **Role and Dependencies**. * Role |w---w| In |PSIfour|, ERD is a library that provides alternate; integrals. * Downstream Dependencies |w---w| |PSIfour| (\ |dr| optional) erd. * Upstream Dependencies |w---w| erd |dr| Fortran. **CMake Variables**. * :makevar:`ENABLE_erd` |w---w| CMake variable toggling whether |PSIfour| builds with erd; * :makevar:`CMAKE_PREFIX_PATH` |w---w| CMake list variable to specify where pre-built dependencies can be found. For erd, set to an installation directory containing ``include/ERD/ERD_MANGLE.h``; * :makevar:`erd_DIR` |w---w| CMake variable to specify where pre-built erd can be found. Set to installation directory containing ``share/cmake/erd/erdConfig.cmake``; * :makevar:`CMAKE_DISABLE_FIND_PACKAGE_erd` |w---w| CMake variable to force internal build of erd instead of detecting pre-built; * :makevar:`CMAKE_INSIST_FIND_PACKAGE_erd` |w---w| CMake variable to force detecting pre-built erd and not falling back on internal build. **Examples**. A. Build bundled. .. code-block:: bash. >>> cmake -DENABLE_erd=ON. B. Build *without* erd. .. code-block:: bash. >>> cmake. C. Link against pre-built. .. code-block:: bash. >>> cmake -DENABLE_erd=ON -DCMAKE_PREFIX_PATH=/path/to/erd/root. .. code-block:: bash. >>> cmake -DENABLE_erd=ON -Derd_DIR=/path/to/erd/configdir. D. Build bundled despite pre-built being det",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/erd.rst:4245,depend,dependencies,4245,doc/sphinxman/source/erd.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/erd.rst,1,['depend'],['dependencies']
Integrability," e_mp25). - Once your python function is fairly stable on its own, it's potential for interoperability with energy()/opt()/cp()/db()/cbs()/etc. should be evaluated. If it makes physical sense that it should work, you should strive to make that interoperability a reality. Some steps:. - If any interoperability is possible, define an argument xx_func, where xx is a short name for your function. Add near the top of your function code like the below (less the final two lines). The net result of this code is that if the user specifies no \*_func arguments, then energy() gets called. If the user defines xx_func, then its value gets called. If the user defines func, then its value gets reassigned to xx_func, func itself is deleted, and xx_func() gets called. Whatever is getting called is stored in func within the function. ::. # Establish function to call; if not('xx_func' in kwargs):; if ('func' in kwargs):; kwargs['xx_func'] = kwargs['func']; del kwargs['func']; else:; kwargs['xx_func'] = energy; func = kwargs['xx_func']; if not func:; raise ValidationError('Function \'%s\' does not exist to be called by wrapper counterpoise_correct.' % (func.__name__)); if (func is db):; raise ValidationError('Wrapper xx is unhappy to be calling function \'%s\'.' % (func.__name__)). - If specific interoperabilities are known, code them in. For example, if xx shouldn't call db, add the last two lines above to the xx function. If db shouldn't call xx, add the following two lines below to the db function. ::. if (func is xx):; raise ValidationError('Wrapper database is unhappy to be calling function \'%s\'.' % (func.__name__)). - Create a multipart test case that runs some intercalls between your function and others (akin to :srcsample:`pywrap_all)`. In trials, permute the order of calls a few times to expose any calls that don't clean up after themselves and need further attention. - When all is validated, add your findings to the great :ref:`table:intercalls` table in the documentation. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:6784,interoperab,interoperabilities,6784,doc/sphinxman/source/attic/bestpractices_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst,1,['interoperab'],['interoperabilities']
Integrability, foreach(test_name aediis-1; casscf-fzc-sp casscf-semi casscf-sa-sp ao-casscf-sp casscf-sp castup1; castup2 castup3 cbs-delta-energy cbs-parser cbs-xtpl-alpha cbs-xtpl-energy; cbs-xtpl-freq cbs-xtpl-gradient cbs-xtpl-opt cbs-xtpl-func cbs-xtpl-nbody; cbs-xtpl-wrapper cbs-xtpl-dict cc1 cc10 cc11 cc12 cc13 cc13a cc13b cc13c; cc13d cc14 cc15 cc16 cc17 cc18 cc19 cc2 cc21 cc22 cc23 cc24 cc25 cc26 cc27 cc28; cc29 cc3 cc30 cc31 cc32 cc33 cc34 cc35 cc36 cc37 cc38 cc39; cc4 cc40 cc41 cc42 cc43 cc44 cc45 cc46 cc47 cc48 cc49 cc4a; cc50 cc51 cc52 cc53 cc54 cc55 cc56 cc5 cc6 cc7 cc8 cc8a cc8b cc8c; cc9 cc9a cdomp2-1 cdomp2-2 cdoremp-energy1 cdoremp-energy2 cdremp-1 cdremp-2 cepa1; cepa2 cepa3 cepa-module ci-multi cisd-h2o+-0 cisd-h2o+-1; cisd-h2o+-2 cisd-h2o-clpse cisd-opt-fd cisd-sp cisd-sp-2; ci-property cubeprop cubeprop-frontier decontract ,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt:1418,wrap,wrapper,1418,tests/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt,1,['wrap'],['wrapper']
Integrability," from an external source and; then performs some kind of expensive matrix operation on those data. Because; Python has a rich set of tools for obtaining data from external sources,; writing this tool in the Python layer is a natural choice. If we know that the; matrix will always be small enough to fit in memory, we can simply rely on the; routines present in NumPy to do the heavy lifting and the code is easy to; implement entirely in the Python layer. In the case where the matrix operation; is non-standard and requires some specialized code to handle disk-based; storage, the decision to write in Python is less clear cut. It is certainly; possible to write these out-of-core routines using Numpy primitives, but there; are a number of tools in |PSIfour| already to perform tasks like these that are; required, *e.g.*, for cluster. In this case, a good design would be to write a; simple piece of code in the C++ layer that performs the matrix operation on a; given input, using the I/O routines available in |PSIfour| and the parallelism; afforded by OpenMP, and to make that code available to the front end as; described in :ref:`sec:prog_tour-exposing`. The Python layer could then be; responsible for obtaining the input data and calling this C++ code to do the; manipulations, allowing each language layer to handle the subset of the work; that caters to their individual strengths. A number of concrete examples of this workflow exist in the code already. For; finite difference computations of energy derivatives, the logic to determine; the type of stencil and which displacements are needed is not going to be rate; limiting for any reasonable quantum mechanical energy function. Therefore,; doing that work in the Python layer is a good idea, as it allows the many; Python tools for farming out *embarrassingly parallel* workloads to be used,; while the C++ layer can be used to implement the energy function to be; differentiated. In SCF, we have a number of sources of external embe",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst:6349,rout,routines,6349,doc/sphinxman/source/prog_ways_to_add.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst,1,['rout'],['routines']
Integrability," if(${ENABLE_PCMSolver}); find_package(PCMSolver 1.2.3 CONFIG QUIET). if(${PCMSolver_FOUND}); get_property(_loc TARGET PCMSolver::pcm PROPERTY LOCATION); message(STATUS ""${Cyan}Found PCMSolver${ColourReset}: ${_loc} (found version ${PCMSolver_VERSION})""); add_library(pcmsolver_external INTERFACE) # dummy. if(${CMAKE_INSIST_FIND_PACKAGE_PCMSolver}); message(VERBOSE ""Suitable PCMSolver located externally as user insists""); endif(). else(); if(${CMAKE_INSIST_FIND_PACKAGE_PCMSolver}); message(FATAL_ERROR ""Suitable PCMSolver could not be externally located as user insists""); endif(). include(ExternalProject); message(STATUS ""Suitable PCMSolver could not be located, ${Magenta}Building PCMSolver${ColourReset} instead.""). if(${BUILD_SHARED_LIBS}); set(_a_only OFF); set(_so_only ON); else(); set(_a_only ON); set(_so_only OFF); endif(). set(_pcmsolver_dir ""share/cmake/PCMSolver""). ExternalProject_Add(pcmsolver_external; #URL https://github.com/PCMSolver/pcmsolver/archive/v1.3.1.tar.gz; #URL https://github.com/loriab/pcmsolver/archive/v1211.tar.gz; URL https://github.com/loriab/pcmsolver/archive/v123_plus_ming.tar.gz; UPDATE_COMMAND """"; CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${STAGED_INSTALL_PREFIX}; -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}; -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}; -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}; -DCMAKE_Fortran_COMPILER=${CMAKE_Fortran_COMPILER}; -DCMAKE_INSTALL_LIBDIR=${CMAKE_INSTALL_LIBDIR}; -DCMAKE_INSTALL_BINDIR=${CMAKE_INSTALL_BINDIR}; -DPYMOD_INSTALL_LIBDIR=${PYMOD_INSTALL_LIBDIR}; -DCMAKE_INSTALL_DATADIR=${CMAKE_INSTALL_DATADIR}; -DCMAKE_INSTALL_INCLUDEDIR=${CMAKE_INSTALL_INCLUDEDIR}; -DPCMSolver_INSTALL_CMAKEDIR=${_pcmsolver_dir}; -DPython_EXECUTABLE=${Python_EXECUTABLE}; -DSTATIC_LIBRARY_ONLY=${_a_only}; -DSHARED_LIBRARY_ONLY=${_so_only}; -DENABLE_OPENMP=OFF; #-DENABLE_XHOST=${ENABLE_XHOST} # option missing; # always fpic'd; -DENABLE_GENERIC=${ENABLE_GENERIC}; -DENABLE_TESTS=OFF; -DENABLE_TIMER=OFF; -DENABLE_LOGGER=OFF; -DBUILD_STANDALONE=OFF; -DT",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/pcmsolver/CMakeLists.txt:154,message,message,154,external/upstream/pcmsolver/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/pcmsolver/CMakeLists.txt,4,['message'],['message']
Integrability," integrals are stored as; (pqnum,rsnum) = (0, 5) on disk, they will be stored in memory as (2,; 5), with the row indices packed. In addition, the data will be; antisymmetrized as it is read into memory. Note, however, that the; libdpd routines do not make sure that your intialization; request makes sense (apart from some pre-processor defined debugging; in a few high-level functions), and it is quite possible to; erroneously pack indices for non-(anti)symmetric quantities. When the program is finished with a given buffer, the int dpd_buf4_close(dpdbuf4 *Buf); function is called to deallocate the associated memory. V. Contraction Evaluation. The library provides a number of high-level functions for evaluating a; variety of products among two- and four-index buffers. This section; outlines these functions and provides simple examples of their use.; int dpd_contract444(dpdbuf4 *X,; dpdbuf4 *Y, dpdbuf4 *Z, int target_X, int target_Y, double; alpha, double beta):; This function contracts two four-index buffers, X and; Y, into a target four-index buffer, Z, using the; general formula, alpha * X(pq,mn) * Y(mn,rs) = beta *; Z(pq,rs). The current version of this function requires that the; target (external) indices must both be contained in the bra (row) or; ket (column) of X and Y. The value of; target_X indicates that the target indices of X are; contained in its bra (0) or its ket (1); target_Y is defined; similarly. For example, we may use dpd_contract444() to evaluate the; following contraction found in the T2 amplitude equations; from coupled cluster theory:. tijab = tijcd <ab||cd>. (A summation over the repeated indices c and d is implied.) Assuming; that the <ab|cd> integrals exist on disk in a (pqnum,rsnum) =; (5,5) format and the right-hand-side T amplitudes exist on disk in a; (2,7) format (with i>j and c>d), the following code block will; evaluate this contraction (ignoring the complications of spin; factors):; #include <dpd.h>. dpdbuf4 T2, T2new, Ints;. dpd_buf4",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html:16846,contract,contracts,16846,doc/sphinxman/source/attic/libdpd.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html,1,['contract'],['contracts']
Integrability," is read into the in-core TOC, and so; on. If a new entry is added or an existing entry is modified (e.g.,; extended), both the in-core TOC and the corresponding TOC header; on-disk are updated automatically. This prevents most cases of; corruption of the file in case of a program crash. Apart from the toclen integer, the file itself is viewed by; the library as a series of pages, each of which contains an identical; number of bytes. The global address of the beginning of a given entry; is stored on the TOC as a page/offset pair comprised of the starting; page and byte-offset on that page where the data reside.; The entry-relative page/offset addresses which the programmer; must provide work in exactly the same manner, but the 0/0 (PSIO_ZERO); position is taken to be the beginning of the desired entry rather than; the beginning of the file. II. The user interface. All of the functions needed to carry out basic I/O are described in; this subsection. Proper declarations of these routines are provided; by the header file psio.h. Note; that before any open/close functions may be called, the input parsing; library, libipv1 must be initialized so that the necessary; file striping information may be read from user input. (See the; PSI3 programmer's manual for details on the current version of the; input parser.) Also note that ULI is used as an abbreviation; for unsigned long int in the remainder of this manual.; int psio_init(void): Before any; files may be opened or the basic read/write functions of; libpsio may be used, the global data needed by the library; functions must be initialized using this function.; int psio_ipv1_config(void):; If the library is operator within a PSI module, the library can find; its configuration data in the input file or in the .psirc file when this; function is called. Therefore it should be called immediately after; psio_init(). ; int psio_done(void): When; all interaction with the files is complete, this function is used to; free the libra",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libpsio.html:3744,rout,routines,3744,doc/sphinxman/source/attic/libpsio.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libpsio.html,1,['rout'],['routines']
Integrability," of the spherical harmonics are built from; the ``(L+1)(L+2)/2`` Cartesian Gaussians, according to H. Schlegel and M.; Frish, IJQC, 54, 83-87, 1995. Unlike Cartesian functions these functions; are all strictly normalized. Note that in |PSIfour|, the real combinations of; spherical harmonic functions (see the paragraph below Eq. 15 in the; Schlegel paper) are ordered as: 0, 1+, 1-, 2+, 2-, .... * ``USO`` (Unique Symmetry-Adapted Orbitals): Spatial symmetry-adapted; combinations of SOs, blocked according to irrep. The total number of USOs; is the same as the number of SOs, but the number of USOs within each irrep; is usually much smaller, which can lead to significant performance; improvements. Note that this basis is sometimes unfortunately referred to; as the SO basis, so it's a bit context specific. * ``OSO`` (Orthogonal Symmetry-Adapted Orbitals): USOs orthogonalized by; Symmetric or Canonical Orthogonalization. The number of OSOs may be; slightly smaller than the total number of USOs, due to removal of linear; dependencies via Canonical Orthogonalization. The OSOs are rarely; encountered, as usually we go straight from USOs to MOs. * ``MO`` (Molecular Orbitals): The combination of OSOs that diagonalizes; the Fock Matrix, so each basis function is a Hartree-Fock (or Kohn-Sham); molecular orbital. The number of OSOs and MOs is always the same. MOs are; orthonormal. * ``LO`` (Localized Orbitals): Localized occupied orbitals, a different; combination of the occupied molecular orbitals which enhances spatial; locality. LOs do not diagonalize the occ-occ block of the Fock Matrix, but; remain orthonormal to each other and the virtual space. .. _`faq:orbdims`:. How to name orbital dimensions; ------------------------------. There are a number of different names used to refer to the basis set size.; These may seem redundant, but they have subtly different meanings, as; detailed below. A calculation can use either pure (5D, 7F, 9G, etc.) basis functions or; Cartesian (6D, 1",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:12200,depend,dependencies,12200,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,1,['depend'],['dependencies']
Integrability," of the system. lowercase or MixedCase is; preferable (according to Sherrill lab convention). Avoid dashes and; dots in the name as python won't allow them. If you're determined to; have dashes and dots, they must be replaced by other characters in the; process_input line, then translated back in the GEOS section; see; NBC10.py for an example. - The first line for each xyz file should be the number of atoms in the system. - The second line for each xyz file can be blank (interpreted as no comment), anything (interpreted as a comment), or two integers and anything (interpreted as charge, multiplicity, and remainder as comment). - The third and subsequent lines have four fields: the element symbol and the three cartesian coordinates in angstroms. The atom lines should not contain any dummy atoms (what's the use in cartesian form). For dimer systems, an algorithm is used to apportion the atoms into two fragments; thus the atoms need not be arranged with all fragmentA atoms before all fragmentB atoms. The algorithm will fail for very closely arranged fragments. For dimers, any charge and multiplicity from the second line will be applied to fragmentA (python); charge and multiplicity may need to be redistributed later in the editing step. * Run script :source:`psi4/share/psi4/scripts/ixyz2database.py`. Move into the directory where all your xyz files are located. Run the; script. It will ask a number of; questions about your intended database and generate a python file; named for your database. Uppercase is preferable for database names; (according to Sherrill lab convention). Note your choice for the route; variable for the next step. * Edit file database.py. According to your responses in to questions in the ixyz2database.py script,; several bullets will be printed of edits you necessarily or optionally; should make. Copy your new database into :source:`psi4/share/psi4/databases`.; Alternately, append the directory containing your new database into; :envvar:`PSIPATH`. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickadddatabase.rst:4486,rout,route,4486,doc/sphinxman/source/quickadddatabase.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickadddatabase.rst,1,['rout'],['route']
Integrability," of those those keywords, whether contradicting or; concurring, takes priority (halts never generated). The following are; some concrete examples. For the moment, click the source button at; muster_modelchem for details of what keywords; get set. * runs in vcc since that's Cfour's default for cc_program ::. set cfour_calc_level ccsd; energy('cfour'). * runs in ecc since Cfour's default overwritten by keyword ::. set cfour_calc_level ccsd; set cfour_cc_program ecc; energy('cfour'). * runs in ecc since that's best practice for the requested ccsd ::. energy('c4-ccsd'). * runs in vcc since *hidden* default overwritten by keyword ::. set cfour_cc_program vcc; energy('c4-ccsd'). * Specifying certain keywords that are nominally applicable for pure-\; |PSIfour| modules directs them to fulfil analogous roles; in the Cfour program (*e.g.*, |scf__maxiter| is used to set; |cfour__cfour_scf_maxcyc|). This keyword translation only takes place; if the keywords are explicitly set in the input file (part of that; contract that you mean it), meaning that |PSIfours| defaults don't; get imposed on Cfour. Also, in the case where a translatable pure-\; |PSIfour| keyword and its translation Cfour keyword are both set,; the value attached to the latter is always used. Below are a few; clarifying examples. * uses :math:`10^{-7}` SCF conv crit since that's Cfour's default; for |cfour__cfour_scf_conv| ::. energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; keyword ::. set cfour_scf_conv 6; energy('c4-scf'). * uses :math:`10^{-5}` SCF conv crit since default overwritten by; :ref:`SCF module<apdx:scf>` keyword ::. set d_convergence 5; energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; :ref:`SCF module<apdx:scf>` keyword (local scope works, too) where; the |PSIfours| more flexible float input has been rounded down to; the integer required by Cfour ::. set scf d_convergence 5e-6; energy('c4-scf'). * uses :math:`10^{-6}` SCF conv cr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:39411,contract,contract,39411,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['contract'],['contract']
Integrability," one excitation is placed on each monomer), contributing an attraction of; -1.21 |kcalpermol|. It is not surprising that the electrostatic; contribution is dominant, because the geometry chosen for this example has the; acetylene perpendicular to the ethylene, with the acetylene hydrogen; pointing directly at the double bond in ethylene; this will be attractive; because the H atoms in acetylene bear a partial positive charge, while the; electron-rich double bond in ethylene bears a partial negative charge. At; the same time, the dispersion interaction should be smaller because the; perpendicular geometry does not allow much overlap between the monomers.; Hence, the SAPT analysis helps clarify (and quantify) our physical; understanding about the interaction between the two monomers. Potential Surface Scans and Counterpoise Correction Made Easy with Psithon; ==========================================================================. Finally, let's consider an example that shows how the Python driver; in |PSIfour| simplifies some routine tasks. |PSIfour| can interpret; valid Python code in addition to the computational chemistry directives; we've seen in the previous examples; we call this mixture Psithon.; The Python computer language is very easy to pick up, and even users; previously unfamiliar with Python can use it to simplify tasks by; modifying some of the example input files supplied with |PSIfour|; in the :source:`samples` directory. Suppose you want to do a limited potential energy surface scan, such as; computing the interaction energy between two neon atoms at various; interatomic distances. One simple but unappealing way to do this is to; create separate input files for each distance to be studied. Most of; these input files are identical, except that the interatomic distance is; different. Psithon lets you specify all this in a single input file,; looping over the different distances with an array like this:; ``Rvals=[2.5, 3.0, 4.0]``. Let's also suppose y",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:17011,rout,routine,17011,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['rout'],['routine']
Integrability," order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets |detci__max_num_vecs| to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. .. index:: ; pair: CI; arbitrary-order coupled-cluster theory. Arbitrary Order Coupled-Cluster Theory; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. *This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to*; :ref:`Kallay's MRCC <sec:mrcc>` *code.*. The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216]_, or of Olsen [Olsen:2000:7140]_.; Notably, the approach in DETCI also allows arbitrary-order ; *active space* coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by K\ |a_acute|\ llay, to which |PSIfour| can interface (see Section; :ref:`sec:mrcc`); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103]_. To perform arbitrary-order coupled-cluster, set the DETCI; option |detci__cc| to TRUE, and set; |detci__cc_ex_level| (note: not |detci__ex_level|); to the desired coupled-cluster excitation level, and invoke ; ``energy('detci')``. Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix :ref:`apdx:detci`.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:14923,interface,interface,14923,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['interface'],['interface']
Integrability," repeat the exe (e.g., tests/dftd3/energy, not tests/dftd3/dftd3-energy); # * be listed in the test case CMakeLists.txt as addon-testname (e.g., `add_regression_test(dftd3-energy ...`); # * alphabetize the addons. # <<< BSE >>>. if(ENABLE_bse); add_subdirectory(mints2-bse); message(STATUS ""Adding test cases: Psi4 + bse""); endif(). # <<< CFOUR >>>. find_program(CFOUR_EXECUTABLE; NAMES xcfour; DOC ""Path to Stanton and Gauss's xcfour executable""). if(CFOUR_EXECUTABLE); add_subdirectory(cfour); message(STATUS ""${Cyan}Found CFOUR${ColourReset}: ${CFOUR_EXECUTABLE}""); message(STATUS ""Adding test cases: Psi4 + CFOUR""); endif(). # <<< CHEMPS2 >>>. if(ENABLE_CheMPS2); add_subdirectory(chemps2); message(STATUS ""Adding test cases: Psi4 + CheMPS2""); endif(). # <<< DFTD3 >>>. find_program(DFTD3_EXECUTABLE; NAMES s-dftd3 dftd3; DOC ""Path to Grimme's dftd3 executable""). if(DFTD3_EXECUTABLE); add_subdirectory(dftd3); add_subdirectory(sapt0-d); add_subdirectory(fsapt-d); add_subdirectory(fsaptd-terms); message(STATUS ""${Cyan}Found DFTD3${ColourReset}: ${DFTD3_EXECUTABLE}""); message(STATUS ""Adding test cases: Psi4 + DFTD3""); endif(). # <<< DFTD4 >>>. find_program(DFTD4_EXECUTABLE; NAMES dftd4; DOC ""Path to Grimme's dftd4 executable""). if(DFTD4_EXECUTABLE); add_subdirectory(dftd4); message(STATUS ""${Cyan}Found DFTD4${ColourReset}: ${DFTD4_EXECUTABLE}""); message(STATUS ""Adding test cases: Psi4 + DFTD4""); endif(). # <<< DKH >>>. if(ENABLE_dkh); add_subdirectory(dkh); message(STATUS ""Adding test cases: Psi4 + dkh""); endif(). # <<< LIBEFP >>>. if(ENABLE_libefp); add_subdirectory(libefp); message(STATUS ""Adding test cases: Psi4 + libefp""); endif(). # <<< ERD >>>. if(ENABLE_erd); add_subdirectory(erd); message(STATUS ""Adding test cases: Psi4 + erd""); endif(). # <<< gCP >>>. find_program(gCP_EXECUTABLE; NAMES mctc-gcp gcp; DOC ""Path to Grimme's gCP executable""). if(gCP_EXECUTABLE); add_subdirectory(gcp); message(STATUS ""${Cyan}Found gCP${ColourReset}: ${gCP_EXECUTABLE}""); message(STATUS ""Add",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt:7933,message,message,7933,tests/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt,2,['message'],['message']
Integrability," scaling the uncoupled term for; :math:`E_{exch-ind,resp}^{(30)}`. S^inf Keywords; ~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__do_ind_exch_sinf.rst; .. include:: autodir_options_c/sapt__do_disp_exch_sinf.rst; .. include:: autodir_options_c/sapt__do_ind30_exch_sinf.rst. .. _`sec:saptd`:. SAPT0-D; ~~~~~~~. In SAPT0, the computation of :math:`E_{disp}^{(20)} + E_{exch-disp}^{(20)}` represents; the computational bottleneck. One can avoid this bottleneck by replacing these; dispersion terms with the empirical D3 corrections developed by Grimme.; ; :ref:`Grimme's dispersion corrections are discussed here. <sec:dftd3>`. The corresponding method, termed SAPT0-D, thus relies on empirically fit parameters; specific to SAPT0/jun-cc-pVDZ. While SAPT0-D can be used with any of the -D ; variants using default parameters optimized for Hartee--Fock interaction energies, ; we recommend using the refit parameters with Becke-Johnson damping, as described in; [Schriber:2021:234107]_. Again, use of SAPT0-D with a basis set other than; jun-cc-pVDZ is not tested and not guaranteed to give meaningful results without; refitting the dispersion parameters. ; A simple water dimer computation using SAPT0-D may look like::. 	molecule water_dimer {; 	 0 1; 	 O -1.551007 -0.114520 0.000000; 	 H -1.934259 0.762503 0.000000; 	 H -0.599677 0.040712 0.000000; 	 --; 	 0 1; 	 O 1.350625 0.111469 0.000000; 	 H 1.680398 -0.373741 -0.758561; 	 H 1.680398 -0.373741 0.758561; 	; 	 units angstrom; 	 no_reorient; 	 symmetry c1; 	}; 	; 	set basis jun-cc-pvdz. 	energy('sapt0-d3mbj') # runs the recommended dispersion correction; energy('sapt0-d3') # tests an alternative damping scheme/parameterization. Given the naturally pairwise-atomic nature of these empirical dispersion corrections,; integration with existing FSAPT functionality is also available simply by calling; ``energy(""fsapt0-d3mbj"")``. See :ref:`FSAPT <sec:fisapt>` documentation for more details on using FSAPT; for functional group analyses.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:47301,integrat,integration,47301,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['integrat'],['integration']
Integrability," soscf-large soscf-ref; soscf-dft stability1 dfep2-1 dfep2-2 sapt-dft1 sapt-dft2 sapt-compare sapt-sf1 dft-custom dft-reference; stability2 stability3 tu1-h2o-energy tu2-ch2-energy tu3-h2o-opt scf-response1 scf-response2 scf-response3; scf-cholesky-basis scf-auto-cholesky; tu4-h2o-freq tu5-sapt tu6-cp-ne2 x2c1 x2c2 x2c3 x2c-perturb-h zaptn-nh2; options1 cubeprop-esp dft-smoke scf-hess1 scf-hess2 scf-hess3 scf-hess4 scf-hess5 scf-freq1 dft-jk scf-coverage; dft-custom-dhdf dft-custom-hybrid dft-custom-mgga dft-custom-gga; pywrap-bfs pywrap-align pywrap-align-chiral mints12 cc-module; tdscf-1 tdscf-2 tdscf-3 tdscf-4 tdscf-5 tdscf-6 tdscf-7; dft-pruning freq-masses sapt9 sapt10 sapt11 scf-uhf-grad-nobeta; linK-1 linK-2 linK-3; cbs-xtpl-energy-conv ddd-deriv nbody-he-4b ddd-function-kwargs; ); add_subdirectory(${test_name}); endforeach(). # Add internal projects; add_subdirectory(psi4numpy); add_subdirectory(cookbook); add_subdirectory(python); add_subdirectory(json); if(ENABLE_pasture); add_subdirectory(pasture-ccsorttransqt2); message(STATUS ""${Cyan}Found Pasture${ColourReset}""); message(STATUS ""Adding test cases: Psi4 + Pasture""); endif(). message(STATUS ""Adding test cases: Psi4""). ########################### External Project Tests ###########################. # For code that (1) is built or detected in the Psi4 superbuild but isn't; # maintained in the Psi4 codebase and (2) has Psi4-dependent tests _not_ in; # the external codebase, tests should; # * get their own directory in tests (e.g., tests/dftd3); # * have a name that doesn't repeat the exe (e.g., tests/dftd3/energy, not tests/dftd3/dftd3-energy); # * be listed in the test case CMakeLists.txt as addon-testname (e.g., `add_regression_test(dftd3-energy ...`); # * alphabetize the addons. # <<< BSE >>>. if(ENABLE_bse); add_subdirectory(mints2-bse); message(STATUS ""Adding test cases: Psi4 + bse""); endif(). # <<< CFOUR >>>. find_program(CFOUR_EXECUTABLE; NAMES xcfour; DOC ""Path to Stanton and Gauss's xcfour executabl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt:6416,message,message,6416,tests/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt,2,['message'],['message']
Integrability," the backend for; most algebraic-diagrammatic construction methods for correlated; excited states in |PSIfour|. For more details on ADC methods,; see :ref:`sec:adc`. Installation; ~~~~~~~~~~~~. For up to date information and more details,; see the `adcc installation documentation <https://adc-connect.org/latest/installation.html>`_. **Binary**. * .. image:: https://anaconda.org/adcc/adcc/badges/version.svg; :target: https://anaconda.org/adcc/adcc. * .. image:: https://img.shields.io/pypi/v/adcc; :target: https://pypi.org/project/adcc. * adcc is available as a conda package for Linux and macOS; and on pypi. .. * If using the |PSIfour| binary, adcc has already been installed alongside.; ..; .. * If using |PSIfour| built from source, and anaconda or miniconda has; .. already been installed (instructions at :ref:`sec:quickconda`),; .. adcc can be obtained through ``conda install adcc -c adcc``.; .. Then enable it as a feature with :makevar:`ENABLE_adcc`; .. and rebuild |PSIfour| to detect adcc and activate dependent code.; ..; .. * Previous bullet had details. To build |PSIfour| from source and use; .. adcc from conda without thinking, consult :ref:`sec:condapsi4dev`. * To remove a conda installation, ``conda remove adcc``. **Source**. * .. image:: https://img.shields.io/github/tag-date/adc-connect/adcc.svg?maxAge=2592000; :target: https://github.com/adc-connect/adcc. * If using |PSIfour| built from source and you want adcc installed as well,; enable it as a feature with :makevar:`ENABLE_adcc`,; and let the build system fetch and install it. Keywords for adcc; ~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/adc__cutoff_amps_print.rst; .. include:: autodir_options_c/adc__kind.rst; .. include:: autodir_options_c/adc__max_num_vecs.rst; .. include:: autodir_options_c/adc__maxiter.rst; .. include:: autodir_options_c/adc__num_core_orbitals.rst; .. include:: autodir_options_c/adc__num_guesses.rst; .. include:: autodir_options_c/adc__r_convergence.rst; .. include:: autodir_op",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adcc.rst:2790,depend,dependent,2790,doc/sphinxman/source/adcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adcc.rst,1,['depend'],['dependent']
Integrability," this is experimental, expert only, and not a future plan. Internal calculations should be correct and fchk files should be correct, but other exports like Molden and QCSchema.Wavefunction won't be."" gaussian); include(custom_int_orderings). ######################## Process & Validate Options ##########################; include(GNUInstallDirs); include(autocmake_safeguards); include(custom_color_messages). if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ""/usr/local/psi4"" CACHE PATH ""Install path"" FORCE); endif(); message(STATUS ""Psi4 install: ${CMAKE_INSTALL_PREFIX}""). # Python use in psi4 (not incl. external/); # * interpreter: run the versioner in psi4-core. run tests and build docs in psi4; # * headers: Python.h for pybind11 to build against in psi4-core; # * library: not at all. set(Python_ADDITIONAL_VERSIONS 3.12 3.11 3.10 3.9 3.8) # adjust with CMake minimum FindPythonInterp; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); message(STATUS ""${Cyan}Found Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE} (found version ${Python_VERSION})""). set(STAGED_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/stage); message(STATUS ""Psi4 staging: ${STAGED_INSTALL_PREFIX}""); message(STATUS ""CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}""); add_subdirectory(external/common); add_subdirectory(external/upstream). # external projects manage their own OpenMP and c++YY flags, so only add to CXX_FLAGS for psi4-core; include(custom_cxxstandard); include(custom_static_library). ################################ Main Project ################################; include(ExternalProject); ExternalProject_Add(psi4-core; DEPENDS lapack_external; hdf5_external; ambit_external; bse_external; chemps2_external; cppe_external; dkh_external; ecpint_external; libefp_external; einsums_external; erd_external; gau2grid_external; gdma_external; libint_external; libint2_external; pcmsolver_external; ddx_external; pybind11_external; pyl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:14230,message,message,14230,CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt,1,['message'],['message']
Integrability," will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:prog_integrals`:. ======================; Integrals in |PSIfour|; ======================. Introduction; ------------. |PSIfour| has a number of backends available to compute integrals. In order to; accomodate these options, while providing a clean interface to the programmer,; an abstraction layer is implemented within Libmints. A recent upgrade to the; primary integral engine has seen some important changes to the way this; interface layer is used; this document is designed to aid new developers as; well as those familiar with the older calling conventions to ensure that the; most efficient calling conventions are applied. The older style; ---------------. A very simple loop that does not use permutational symmetry might look; something like this in the old scheme:. .. code-block:: cpp. auto sieve = std::make_shared<ERISieve>(basisset, cutoff);; auto factory= std::make_shared<IntegralFactory>(basisset);; int deriv_level = 0;; bool use_shell_pairs = true;; auto eri = factory->eri(deriv_level, use_shell_pairs);; const double* buffer = eri_->buffer();; for (int P = 0; P < basisset->nshell(); ++P) {; const auto& Pshell = basisset->shell(P);; for (int Q = 0; Q < basisset->nshell(); ++Q) {; const auto& Qshell = basisset->shell(Q);; for (int R = 0; R < basisset->nshell(); ++R) {; const auto& Rshell = basisset->shell(R);; for (int S = 0; S < basisset->nshell(); ++S) {; const auto& Sshell = basisset->shell(S);; if(sieve->shell_significant(P, Q, R, S) {; eri->comput",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:1499,interface,interface,1499,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['interface'],['interface']
Integrability," will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: ; FCHK; Gaussian Formatted Checkpoint. .. _`sec:fchk`:. Interface to programs through FCHK files |w---w| :py:func:`~psi4.driver.fchk()`; ===============================================================================. .. codeauthor:: Andrew C. Simmonett; .. sectionauthor:: Andrew C. Simmonett. Many post-processing tools can read information from `Gaussian's formatted; checkpoint (FCHK) files <https://gaussian.com/formchk/>`_.; To allow interoperability with such tools, |PSIfour| includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function::. energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree--Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately::. grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). .. autofunct",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fchk.rst:1512,interoperab,interoperability,1512,doc/sphinxman/source/fchk.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fchk.rst,1,['interoperab'],['interoperability']
Integrability," }). scf_e = psi4.energy('SCF'). Solvent model and solvent cavity definition; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Beyond setting |globals__ddx| to ``true`` and selecting; a solvent model using |ddx__ddx_model|,; the definition of the solvent is mandatory.; Regularly one might want to influence the setup of the solvent; cavity as well. The **solvent** can be defined either by directly providing a dielectric; constant using |ddx__ddx_solvent_epsilon| or by looking up the dielectric; constant in from a solvent trivial name provided by |ddx__ddx_solvent|; (e.g. ``water``, ``ethanol``, ``cis-1,2-dimethylcyclohexane``).; By convention solvent names are all lowercase and use dashes (``-``) to separate; quantifiers like ``o``, ``n`` etc.; The full list understood by ddx can be obtained using ::. import pyddx; print(pyddx.data.solvent_epsilon.keys()). For when an LPB solvent model is selected (|ddx__ddx_model| is ``LPB``); additionally the **Debye-Hückel parameter** |ddx__ddx_solvent_kappa| needs to be provided; (in units of inverse Bohr or inverse Angström, depending on the unit used to define; the molecular geometry). ``pyddx`` provides a handy utility function to compute; the Debye-Hückel parameter. For example ::. import pyddx; from qcelemental import constants. list_of_ions = [(+1, 0.1), (-1, 0.1)]; dielectric_constant = pyddx.data.solvent_epsilon[""water""]; temperature = 298.15 # Kelvin; kappa_invbohr = pyddx.solvent_kappa(list_of_ions, dielectric_constant, temperature); kappa_invang = kappa_invbohr / constants.bohr2angstroms. computes the parameter (in inverse Angström) for a 0.1 mol/l solution of sodium; chloride in water, thus a solution woith 0.1 mol/l of a ``+1``-charged ion; and 0.1 mol/l of a ``-1``-charged ion. The **cavity** in ddx is defined as a union of spheres around each atom.; Usually the spehere radii for each atom are determined using a standard; set of tabulated radii per atomic species, determined by the |ddx__ddx_radii_set| parameter.; Curre",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:6363,depend,depending,6363,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['depend'],['depending']
Integrability,""" a ``ZMAT`` file and execute :program:`xcfour`. This is; illustrated in the following example::. cfour {; UHF-SCF energy calculation ; N; H 1 R; H 1 R 2 A; ; R=1.008; A=105.0; ; *ACES2(CALC=HF,BASIS=qz2p; MULT=2,REF=UHF; OCCUPATION=3-1-1-0/3-0-1-0; SCF_CONV=12; MEMORY=20000000); }; ; energy('cfour'). Here, the contents of the ``cfour {...}`` block are written directly to a; ``ZMAT`` file. This is joined by a default ``GENBAS`` file; (:source:`psi4/share/psi4/basis/GENBAS`). To preferentially use your own ``GENBAS``,; place it in :envvar:`PATH` or :envvar:`PSIPATH`. The line calling; :py:func:`~psi4.driver.energy` with argument ``'cfour'`` invokes; :program:`xcfour`. After execution of the ``energy('cfour')`` line completes, Cfour results; are read back into |PSIfour| format and are thereafter accessible for; further processing in the input file. See :ref:`sec:cfourOutput` for; details. This storage of results in variables and arrays *in memory* for; the duration of the |PSIfour| instance (as opposed to solely *in files*); is the only advantage thus far incurred by the P4C4 interface. We'll call; this mode of basic utility the ""sandwich"" mode. Molecule specification in |PSIfour| allows Cartesians, Z-matrices, mixed; Cartesian/Z-matrix, negation of variables, delayed specification of; variables, specification of fragments, etc., all in a whitespace-tolerant; format. See :ref:`sec:moleculeSpecification` for details and; :srcsample:`cfour/mints5` for examples. When a |PSIfour|-style molecule is; supplied, its geometry is written to ``ZMAT`` in Cartesian form and the; |cfour__cfour_coordinates|\ =CARTESIAN, |cfour__cfour_units|\ =ANGSTROM,; |cfour__cfour_charge|, and |cfour__cfour_multiplicity| keywords are set; appropriately in the ``*CFOUR(...)`` directive. .. warning:: There exist molecules (*e.g.*, allene) where the; inertial frame is not unique (planes along atoms or between; atoms). The orientation reconciling machinery currently does not; handle these cases and w",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:6281,interface,interface,6281,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['interface'],['interface']
Integrability,"# CMake driving pytest copied from pybind11:; # https://github.com/pybind/pybind11/blob/master/tests/CMakeLists.txt. # Make sure pytest is found or produce a fatal error; if(NOT psi4_PYTEST_FOUND); execute_process(COMMAND ${Python_EXECUTABLE} -c ""import pytest""; OUTPUT_QUIET ERROR_QUIET; RESULT_VARIABLE _exec_python_err); if(_exec_python_err); message(STATUS ""Running some tests requires pytest. Please install it manually (try: ${Python_EXECUTABLE} -m pip install pytest)""); endif(); set(psi4_PYTEST_FOUND TRUE CACHE INTERNAL """"); endif(). # A single command to remake and run the pytest smoke tests; add_custom_target(pytest; COMMAND PYTHONPATH=${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}; ${Python_EXECUTABLE} -m pytest -rws -v -m smoke --capture=sys ${CMAKE_CURRENT_SOURCE_DIR}; WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/pytests/CMakeLists.txt:346,message,message,346,tests/pytests/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/pytests/CMakeLists.txt,1,['message'],['message']
Integrability,"# Format borrowed from sns-mp2 CMakeLists. if(${ENABLE_psi4fockci}); if(NOT (${CMAKE_DISABLE_FIND_PACKAGE_psi4fockci})); include(FindPythonModule); find_python_module(psi4fockci ATLEAST 0.1.0 QUIET); endif(). if(${psi4fockci_FOUND}); message(STATUS ""${Cyan}Found Psi4FockCI${ColourReset}: ${PY_psi4fockci} (found version ${psi4fockci_VERSION})""); add_library(psi4fockci_external INTERFACE) # dummy. else(); if(${CMAKE_INSIST_FIND_PACKAGE_psi4fockci}); message(FATAL_ERROR ""Suitable Psi4FockCI could not be externally located as user insists""); endif(). include(ExternalProject); message(STATUS ""Suitable Psi4FockCI could not be located, ${Magenta}Building Psi4FockCI${ColourReset} instead.""). ExternalProject_Add(psi4fockci_external; BUILD_ALWAYS 1; URL https://github.com/shannonhouck/psi4fockci/archive/267e171.tar.gz # v0.1.0; CONFIGURE_COMMAND """"; UPDATE_COMMAND """"; BUILD_COMMAND ${Python_EXECUTABLE} setup.py build; BUILD_IN_SOURCE 1; INSTALL_COMMAND ${Python_EXECUTABLE} setup.py install; --record=record.txt; --install-lib=${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}); endif(); else(); add_library(psi4fockci_external INTERFACE) # dummy; endif(); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/downstream/psi4fockci/CMakeLists.txt:234,message,message,234,external/downstream/psi4fockci/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/downstream/psi4fockci/CMakeLists.txt,3,['message'],['message']
Integrability,"# Settle docs-specific dependencies; find_package(Perl QUIET); if(NOT PERL_FOUND); message(STATUS ""No Perl, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html""); endif(). find_package(Sphinx QUIET); if(NOT SPHINX_FOUND); message(STATUS ""No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html""); endif(). find_package(LATEX QUIET); if(NOT (LATEX_COMPILER AND PDFLATEX_COMPILER)); message(STATUS ""No LaTeX (incl. pdflatex), no PDF docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html""); endif(). if(SPHINX_THEME STREQUAL sphinx_psi_theme); execute_process(COMMAND ${Python_EXECUTABLE} -c; ""import sphinx_psi_theme; import cloud_sptheme; import sphinx_automodapi; import graphviz""; OUTPUT_QUIET ERROR_QUIET RESULT_VARIABLE _exec_python_err); elseif(SPHINX_THEME STREQUAL basic); # these themes are built-in to Sphinx; execute_process(COMMAND ${Python_EXECUTABLE} -c; ""import sphinx_automodapi; import graphviz""; OUTPUT_QUIET ERROR_QUIET RESULT_VARIABLE _exec_python_err); else(); execute_process(COMMAND ${Python_EXECUTABLE} -c; ""import ${SPHINX_THEME}; import sphinx_automodapi; import graphviz""; OUTPUT_QUIET ERROR_QUIET RESULT_VARIABLE _exec_python_err); endif(); if(_exec_python_err); message(STATUS ""No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme sphinx-automodapi sphinx-autodoc-typehints graphviz python-graphviz autodoc-pydantic sphinx-tabs -c conda-forge -c psi4)""); set(SPHINX_STUFF_FOUND ""OFF""). else(); set(SPHINX_STUFF_FOUND ""ON""); endif(). if(SPHINXMAN_STRICT); set(SPHINX_EXTRAS ""-n;-W;--keep-going""); #set(SPHINX_EXTRAS ""-W;--keep-going""); # return to above after qcel 0.25; #set(SPHINX_EXTRAS """"); else(); set(SPHINX_EXTRAS """"); endif(). # Setup and build Sphinx documentation; if(PERL_FOUND AND SPHINX_FOUND AND SPHINX_STUFF_FOUND); set(CCSD ""${CMAKE_CURRENT_SOURCE_DIR}""); set(CCBD ""${CMAKE_CURRENT_BINARY_DIR}""). # Static-doc reST files; set(STATICDOC abbr_acce",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt:23,depend,dependencies,23,doc/sphinxman/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt,4,"['depend', 'message']","['dependencies', 'message']"
Integrability,"# target_compile_options(core PRIVATE ""/bigobj""); endif(). target_include_directories(core; INTERFACE; $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>; $<TARGET_PROPERTY:Libint2::cxx,INTERFACE_INCLUDE_DIRECTORIES>; ). install(TARGETS core; EXPORT ""psi4Targets""; ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}; LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4; RUNTIME DESTINATION ${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/psi4); install(EXPORT ""psi4Targets""; NAMESPACE ""psi4::""; DESTINATION ${CMAKECONFIG_INSTALL_DIR}). # <<< RPATH >>>. set(_full_path_staged_libdir ""${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}""); file(RELATIVE_PATH _rel ${_full_path_staged_libdir}${PYMOD_INSTALL_LIBDIR}/psi4; ${_full_path_staged_libdir}); if(APPLE); set(psi4_RPATH ""@loader_path/${_rel}""); else(); set(psi4_RPATH ""$ORIGIN/${_rel}""); endif(). foreach(_al ${_addons}); get_filename_component(_ald ${_al} DIRECTORY). if(${_al} MATCHES ""-Wl,""); list(REMOVE_ITEM _addons ${_al}); #message(""rpath: ${_al} dropped because linker directive""); continue(); endif(). if(${_al} MATCHES ""\.${CMAKE_STATIC_LIBRARY_SUFFIX}$""); list(REMOVE_ITEM _addons ${_al}); #message(""rpath: ${_al} dropped because static""); continue(); endif(). if(NOT ${_ald} STREQUAL """"); list(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES ${_ald} _in_cpild); if(_in_cpild GREATER -1); list(REMOVE_ITEM _addons ${_al}); #message(""rpath: ${_al} dropped because system lib""); continue(); endif(). if(${_ald} STREQUAL ${_full_path_staged_libdir}); list(REMOVE_ITEM _addons ${_al}); #message(""rpath: ${_al} dropped because internal relative to core.so""); continue(); endif(). list(APPEND psi4_RPATH ${_ald}); #message(""rpath: ${_al} included""); endif(); endforeach(). list(REMOVE_DUPLICATES psi4_RPATH); message(STATUS ""Psi4 rpath: ${psi4_RPATH}""). set_target_properties(core PROPERTIES; OUTPUT_NAME core; EXPORT_NAME core; # PREFIX/SUFFIX covered by pybind11_extension in pybind11_add_module; # PREFIX ""${PYTHON_MODULE_PREFIX}"" # ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/CMakeLists.txt:4674,message,message,4674,psi4/src/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/CMakeLists.txt,1,['message'],['message']
Integrability,"### >> Create core target, so we may link modules to it directly <<; ### >> This allow to propagate dependencies upwards sanely; add_library(core SHARED core.cc). include_directories(; ${Python_INCLUDE_DIRS}; ); target_link_libraries(core; PRIVATE; Python::Module; ); target_link_libraries(core; PRIVATE; pybind11::module; pybind11::lto; pybind11::windows_extras; ); pybind11_extension(core); if(NOT MSVC AND NOT ${CMAKE_BUILD_TYPE} MATCHES Debug|RelWithDebInfo); # Strip unnecessary sections of the binary on Linux/macOS; pybind11_strip(core); endif(); set_target_properties(core PROPERTIES CXX_VISIBILITY_PRESET ""hidden"" VISIBILITY_INLINES_HIDDEN 1). ### >> Go into psi4 subdirectory to compile libraries and modules <<; add_subdirectory(psi4). ####################################################################; ### >> Merge libraries and modules into master psi4 library <<; ### >> We also add in versioning, settings for plugins, and; ### >> exports for Python here. target_sources(core; PRIVATE; export_benchmarks.cc; export_blas_lapack.cc; export_cubeprop.cc; export_dpd.cc; export_fock.cc; export_functional.cc; export_misc.cc; export_oeprop.cc; export_pcm.cc; export_plugins.cc; export_psio.cc; export_trans.cc; export_wavefunction.cc; export_options.cc; create_new_plugin.cc; read_options.cc; python_data_type.cc; ). # need to down-standard the Libint2 connection from c++17 for Intel as of 2021.4; # See note at psi4/src/psi4/libmints/CMakeLists.txt; add_library(l2export OBJECT export_mints.cc); set_property(TARGET l2export PROPERTY CXX_STANDARD ""${psi4_CXX_STANDARD_Libint2}""); set_property(TARGET l2export PROPERTY POSITION_INDEPENDENT_CODE ON); target_include_directories(l2export; PRIVATE; $<TARGET_PROPERTY:Libint2::cxx,INTERFACE_INCLUDE_DIRECTORIES>; ); target_link_libraries(; l2export; PRIVATE; pybind11::headers; ); if(MSVC); target_link_libraries(; l2export; PRIVATE; pybind11::windows_extras; ); endif(); target_link_libraries(core PRIVATE l2export); target_compile_definitio",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/CMakeLists.txt:100,depend,dependencies,100,psi4/src/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/CMakeLists.txt,1,['depend'],['dependencies']
Integrability,"############################# Superbuild Project #############################; cmake_minimum_required(VERSION 3.15 FATAL_ERROR); cmake_policy(SET CMP0094 NEW); cmake_policy(SET CMP0075 NEW); # cmake_policy(SET CMP0144 NEW); if (CMAKE_VERSION VERSION_GREATER_EQUAL ""3.24.0""); # Avoid warning about DOWNLOAD_EXTRACT_TIMESTAMP in CMake 3.24:; cmake_policy(SET CMP0135 NEW); endif(); # 3.15: useable FindPython with NumPy component and LOCATION; # 3.8: CXX_STANDARD recognizes C++17; # 3.3: EP_add(DEPENDS interfacelib, CheckFortranCompilerFlag; # 3.2: continue(); # 3.1: CMAKE_CXX_STANDARD, BUILD_ALWAYS. set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Choose the type of build."") # foil Ninja Debug on Windows. project(psi4; LANGUAGES C CXX); set(psi4_URL ""http://www.psicode.org/""); set(psi4_EMAIL ""psi4aiqc+cmake@gmail.com""); set(psi4_LICENSE ""GNU Lesser General Public License, version 3 (LGPL-3.0)""); set(psi4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runt",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:503,interface,interfacelib,503,CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt,1,['interface'],['interfacelib']
Integrability,"####################. # For code that (1) is built or detected in the Psi4 superbuild but isn't; # maintained in the Psi4 codebase and (2) has Psi4-dependent tests _not_ in; # the external codebase, tests should; # * get their own directory in tests (e.g., tests/dftd3); # * have a name that doesn't repeat the exe (e.g., tests/dftd3/energy, not tests/dftd3/dftd3-energy); # * be listed in the test case CMakeLists.txt as addon-testname (e.g., `add_regression_test(dftd3-energy ...`); # * alphabetize the addons. # <<< BSE >>>. if(ENABLE_bse); add_subdirectory(mints2-bse); message(STATUS ""Adding test cases: Psi4 + bse""); endif(). # <<< CFOUR >>>. find_program(CFOUR_EXECUTABLE; NAMES xcfour; DOC ""Path to Stanton and Gauss's xcfour executable""). if(CFOUR_EXECUTABLE); add_subdirectory(cfour); message(STATUS ""${Cyan}Found CFOUR${ColourReset}: ${CFOUR_EXECUTABLE}""); message(STATUS ""Adding test cases: Psi4 + CFOUR""); endif(). # <<< CHEMPS2 >>>. if(ENABLE_CheMPS2); add_subdirectory(chemps2); message(STATUS ""Adding test cases: Psi4 + CheMPS2""); endif(). # <<< DFTD3 >>>. find_program(DFTD3_EXECUTABLE; NAMES s-dftd3 dftd3; DOC ""Path to Grimme's dftd3 executable""). if(DFTD3_EXECUTABLE); add_subdirectory(dftd3); add_subdirectory(sapt0-d); add_subdirectory(fsapt-d); add_subdirectory(fsaptd-terms); message(STATUS ""${Cyan}Found DFTD3${ColourReset}: ${DFTD3_EXECUTABLE}""); message(STATUS ""Adding test cases: Psi4 + DFTD3""); endif(). # <<< DFTD4 >>>. find_program(DFTD4_EXECUTABLE; NAMES dftd4; DOC ""Path to Grimme's dftd4 executable""). if(DFTD4_EXECUTABLE); add_subdirectory(dftd4); message(STATUS ""${Cyan}Found DFTD4${ColourReset}: ${DFTD4_EXECUTABLE}""); message(STATUS ""Adding test cases: Psi4 + DFTD4""); endif(). # <<< DKH >>>. if(ENABLE_dkh); add_subdirectory(dkh); message(STATUS ""Adding test cases: Psi4 + dkh""); endif(). # <<< LIBEFP >>>. if(ENABLE_libefp); add_subdirectory(libefp); message(STATUS ""Adding test cases: Psi4 + libefp""); endif(). # <<< ERD >>>. if(ENABLE_erd); add_subdirectory(e",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt:7627,message,message,7627,tests/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt,1,['message'],['message']
Integrability,"##############; cmake_minimum_required(VERSION 3.15 FATAL_ERROR); cmake_policy(SET CMP0094 NEW); cmake_policy(SET CMP0075 NEW); # cmake_policy(SET CMP0144 NEW); if (CMAKE_VERSION VERSION_GREATER_EQUAL ""3.24.0""); # Avoid warning about DOWNLOAD_EXTRACT_TIMESTAMP in CMake 3.24:; cmake_policy(SET CMP0135 NEW); endif(); # 3.15: useable FindPython with NumPy component and LOCATION; # 3.8: CXX_STANDARD recognizes C++17; # 3.3: EP_add(DEPENDS interfacelib, CheckFortranCompilerFlag; # 3.2: continue(); # 3.1: CMAKE_CXX_STANDARD, BUILD_ALWAYS. set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Choose the type of build."") # foil Ninja Debug on Windows. project(psi4; LANGUAGES C CXX); set(psi4_URL ""http://www.psicode.org/""); set(psi4_EMAIL ""psi4aiqc+cmake@gmail.com""); set(psi4_LICENSE ""GNU Lesser General Public License, version 3 (LGPL-3.0)""); set(psi4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydan",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:1022,message,message,1022,CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt,1,['message'],['message']
Integrability,"${Cyan}Using Einsums${ColourReset}: ${_loc} (version ${Einsums_VERSION})""); else(); message(STATUS ""Disabled Einsums ${Einsums_DIR}""); endif (). if(${ENABLE_erd}); find_package(erd 3.0.6 CONFIG REQUIRED); get_property(_loc TARGET erd::erd PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_VERSION})""). if(${ENABLE_gdma}); # neither gdma nor pygdma actually needed c-side; runtime detection would; # do just as well. included for completeness and so gdma_PYMOD can be; # hard-loaded into PYTHONPATH.; find_package(gdma 2.3.3 CONFIG REQUIRED COMPONENTS Python); get_property(_loc TARGET gdma::pygdma PROPERTY LOCATION); message(STATUS ""${Cyan}Found gdma${ColourReset}: ${_loc} (version ${gdma_VERSION})""); else(); message(STATUS ""Disabled gdma ${gdma_DIR}""); endif(). if(${ENABLE_Libint1t}); find_package(Libint 1.2.0 CONFIG REQUIRED COMPONENTS ${MAX_AM_ERI}); get_property(_loc TARGET Libint::int PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint ${Libint_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint_VERSION})""); endif(). find_package(; Libint2; 2.7.2; CONFIG; REQUIRED; COMPONENTS; sss; CXX_ho; impure_sh; ""eri_c4_d0_l${MAX_AM_ERI}"" eri_c3_d0_l4 eri_c2_d0_l4 onebody_d0_l4; eri_c4_d1_l2 eri_c3_d1_l3 eri_c2_d1_l3 onebody_d1_l3; onebody_d2_l3; OPTIONAL_COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ); get_property(_loc TARGET Libint2::int2 PROPERTY LOCATION); # defer until upstream provides full-dress targets get_property(Libint2_VERSION TARGET Libint2::int2 PROPERTY Libint2_VERSION); # defer until upstream provides full-dress targets get_property(Libint2_MAX_AM_ERI TARGET Libint2::int2 P",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:5731,message,message,5731,psi4/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt,2,['message'],['message']
Integrability,"(); set(_endian_ext "".little""); endif(); set(CMAKECONFIG_INSTALL_DIR ""${psi4_INSTALL_CMAKEDIR}""). # <<< Marshal Dependencies & Add-ons >>>. set(_addons); set(TargetOpenMP_FIND_COMPONENTS ""CXX""); find_package(TargetLAPACK CONFIG REQUIRED); get_property(_ill TARGET tgt::lapk PROPERTY INTERFACE_LINK_LIBRARIES); list(GET _ill 0 _ill0); get_property(_cd TARGET tgt::lapack PROPERTY INTERFACE_COMPILE_DEFINITIONS); if(${_cd} MATCHES ""USING_LAPACK_MKL""); set(_isMKL "" MKL""); endif(); get_property(_illb TARGET tgt::blas PROPERTY INTERFACE_LINK_LIBRARIES); list(APPEND _addons ${_ill} ${_illb}); message(STATUS ""${Cyan}Using LAPACK${_isMKL}${ColourReset}: ${_ill0};...""). if(ENABLE_ambit OR ENABLE_CheMPS2 OR ENABLE_Einsums); find_package(TargetHDF5 CONFIG REQUIRED); get_property(_ill TARGET tgt::hdf5 PROPERTY INTERFACE_LINK_LIBRARIES); list(GET _ill 0 _ill0); list(APPEND _addons ${_ill}); message(STATUS ""${Cyan}Using HDF5${ColourReset}: ${_ill0};... (found version ${${PN}_VERSION})""); else(); message(STATUS ""Disabled HDF5 ${TargetHDF5_DIR}""); endif(). # << Pybind11 & Python >>; find_package(Python 3.8 COMPONENTS Interpreter Development NumPy REQUIRED); find_package(pybind11 2.6.2 CONFIG REQUIRED); message(STATUS ""${Cyan}Using pybind11${ColourReset}: ${pybind11_INCLUDE_DIR} (version ${pybind11_VERSION} for Py${Python_VERSION} and ${CMAKE_CXX_STANDARD})""); message(STATUS ""${Cyan}Using Python ${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}${ColourReset}: ${Python_EXECUTABLE}""). find_file(LIBDL_FOUND dlfcn.h); if(LIBDL_FOUND); message(STATUS ""Using DL: ${LIBDL_FOUND} ${CMAKE_DL_LIBS}""); # use ${CMAKE_DL_LIBS} if found to be explicitly needed; else(); message(STATUS ""Disabled DL ${LIBDL_FOUND}""); endif(). if(${ENABLE_ambit}); find_package(ambit 0.6 CONFIG REQUIRED); get_property(_loc TARGET ambit::ambit PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using ambit${ColourReset}: ${_loc} (version ${ambit_VERSION})""); else(); message(STATUS ""Disabled ambit ${ambit_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:1759,message,message,1759,psi4/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt,1,['message'],['message']
Integrability,"(STATUS ""${Cyan}Using erd${ColourReset}: ${_loc} (version ${erd_VERSION})""); else(); message(STATUS ""Disabled erd ${erd_DIR}""); endif(). find_package(gau2grid 2.0 CONFIG REQUIRED); get_property(_loc TARGET gau2grid::gg PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using gau2grid${ColourReset}: ${_loc} (version ${gau2grid_VERSION})""). if(${ENABLE_gdma}); # neither gdma nor pygdma actually needed c-side; runtime detection would; # do just as well. included for completeness and so gdma_PYMOD can be; # hard-loaded into PYTHONPATH.; find_package(gdma 2.3.3 CONFIG REQUIRED COMPONENTS Python); get_property(_loc TARGET gdma::pygdma PROPERTY LOCATION); message(STATUS ""${Cyan}Found gdma${ColourReset}: ${_loc} (version ${gdma_VERSION})""); else(); message(STATUS ""Disabled gdma ${gdma_DIR}""); endif(). if(${ENABLE_Libint1t}); find_package(Libint 1.2.0 CONFIG REQUIRED COMPONENTS ${MAX_AM_ERI}); get_property(_loc TARGET Libint::int PROPERTY LOCATION); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint ${Libint_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint_VERSION})""); endif(). find_package(; Libint2; 2.7.2; CONFIG; REQUIRED; COMPONENTS; sss; CXX_ho; impure_sh; ""eri_c4_d0_l${MAX_AM_ERI}"" eri_c3_d0_l4 eri_c2_d0_l4 onebody_d0_l4; eri_c4_d1_l2 eri_c3_d1_l3 eri_c2_d1_l3 onebody_d1_l3; onebody_d2_l3; OPTIONAL_COMPONENTS; eri_c4_d2_l2 eri_c3_d2_l3 eri_c2_d2_l3; ); get_property(_loc TARGET Libint2::int2 PROPERTY LOCATION); # defer until upstream provides full-dress targets get_property(Libint2_VERSION TARGET Libint2::int2 PROPERTY Libint2_VERSION); # defer until upstream provides full-dress targets get_property(Libint2_MAX_AM_ERI TARGET Libint2::int2 PROPERTY Libint2_MAX_AM_ERI); list(APPEND _addons ${_loc}); message(STATUS ""${Cyan}Using Libint2 ${Libint2_MAX_AM_ERI}${ColourReset}: ${_loc} (version ${Libint2_VERSION})""). if(${ENABLE_mdi}); find_package(mdi 1.2.3 CONFIG REQUIRED); get_property(_loc TARGET mdi::mdi PROPERTY LOCATION); list(APPE",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:6059,message,message,6059,psi4/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt,1,['message'],['message']
Integrability,") + E_{\mathrm{xc}} [\rho_\alpha, \rho_\beta]. Here, :math:`T` is the noninteracting quasiparticle kinetic energy operator,; :math:`V` is the nucleus-electron attraction potential, :math:`D^{\mathrm{T}}`; is the total electron density matrix, and :math:`E_{\mathrm{xc}} [\rho_\alpha,; \rho_\beta]` is the (potentially nonlocal) exchange, correlation, and residual; kinetic energy functional. The residual kinetic energy term is usually quite; small, and is often ignored, hence :math:`E_{\mathrm{xc}}` is often referred to; as simply the exchange-correlation functional (exchange *and* correlation, not; just exchange-type correlation). In practice, the first few generations of KS-DFT functionals were chosen to be; local, meaning that the form of the exchange correlation energy is an integral; over all of space of a function depending only on local information in the; density, such as the density value or derivatives. The simplest variants are; Local Spin-Density Approximations (LSDA), which depend only on the spin density; :math:`\rho_\alpha` or :math:`\rho_\beta`\ ,. .. math:: \rho_\sigma (\vec r_1) = D_{\mu\nu}^{\sigma} \phi_{\mu} (\vec r_1); \phi_\nu (\vec r_1). The most popular variants are Generalized Gradient Approximation (GGA); functionals which use the norm of the density gradient; :math:`\gamma_{\alpha\alpha}`, :math:`\gamma_{\alpha\beta}` or; :math:`\gamma_{\beta\beta}` to build an inhomogeneity; parameter. .. math:: \gamma_{\alpha\alpha} (\vec r_1) = \nabla \rho_{\alpha} (\vec r_1) \cdot \nabla; \rho_{\alpha} (\vec r_1). .. math:: \gamma_{\alpha\beta} (\vec r_1) = \nabla \rho_{\alpha} (\vec r_1) \cdot \nabla; \rho_{\beta} (\vec r_1). where,. .. math:: \nabla \rho_{\sigma} (\vec r_1) = 2 D_{\mu\nu}^{\sigma} \phi_{\mu}; (\vec r_1) \nabla \phi_{\nu} (\vec r_1). GGA functionals are essentially the same cost as LSDA functionals and are often; considerably more accurate. Another local variant which has gained some popularity (though perhaps not as; much as GGA functi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:4873,depend,depend,4873,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['depend'],['depend']
Integrability,"). * pydantic https://pydantic-docs.helpmanual.io/# (transitive dependency of QCElemental). * SciPy https://scipy.org/ (avoidable if necessary by following directions in runtime error message). * py-cpuinfo (provides ``import cpuinfo``) https://github.com/workhorsy/py-cpuinfo (transitive dependency of QCEngine). * psutil https://github.com/giampaolo/psutil (transitive dependency of QCEngine). Dropped Dependencies:. * Boost (September 2016; dropped by v1.1). * deepdiff https://github.com/seperman/deepdiff (May 2019; dropped by v1.4). * MPFR https://www.mpfr.org/ (Mar 2022; dropped by v1.6) no longer needed to compile against Libint2. * Perl for testing (April 2022; dropped by v1.6). .. _`faq:addondepend`:. What are the add-on capabilities for Psi4 and what are their dependencies; -------------------------------------------------------------------------. Each of the items below is an independent additional capability that can; be built with |PSIfour|. Sub-items below are the respective additional; dependencies of the add-on. Select which, if any, you want, and examine; the links for appropriate enabling arguments to ``cmake``. Note that many; are available pre-built from conda. * |PSIfour| Testing. * CTest https://cmake.org/download/; * pytest (for installed testing) http://doc.pytest.org/en/latest/; * pytest-xdist (for installed testing many tests at once) https://github.com/pytest-dev/pytest-xdist. * |PSIfour| Documentation (available pre-built at :psicode:`psi4manual/master/index.html`). * Sphinx (3.5+) http://sphinx-doc.org; * Perl (for some auto-documentation scripts) https://www.perl.org/; * nbsphinx (for converting Jupyter notebooks) http://nbsphinx.readthedocs.io/en/jupyter-theme/; * sphinx-psi-theme https://github.com/psi4/sphinx-psi-theme; * See :source:`[""message"" lines] <doc/sphinxman/CMakeLists.txt>` for advice on obtaining docs dependencies or :source:`[conda env spec] <devtools/conda-envs/docs-cf.yaml>`; * See :source:`.github/workflows/docs.yml` for ful",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:9777,depend,dependencies,9777,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['depend'],['dependencies']
Integrability,"); if(NOT PERL_FOUND); message(STATUS ""No Perl, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html""); endif(). find_package(Sphinx QUIET); if(NOT SPHINX_FOUND); message(STATUS ""No Sphinx, no docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html""); endif(). find_package(LATEX QUIET); if(NOT (LATEX_COMPILER AND PDFLATEX_COMPILER)); message(STATUS ""No LaTeX (incl. pdflatex), no PDF docs. Pre-built documentation at http://psicode.org/psi4manual/master/index.html""); endif(). if(SPHINX_THEME STREQUAL sphinx_psi_theme); execute_process(COMMAND ${Python_EXECUTABLE} -c; ""import sphinx_psi_theme; import cloud_sptheme; import sphinx_automodapi; import graphviz""; OUTPUT_QUIET ERROR_QUIET RESULT_VARIABLE _exec_python_err); elseif(SPHINX_THEME STREQUAL basic); # these themes are built-in to Sphinx; execute_process(COMMAND ${Python_EXECUTABLE} -c; ""import sphinx_automodapi; import graphviz""; OUTPUT_QUIET ERROR_QUIET RESULT_VARIABLE _exec_python_err); else(); execute_process(COMMAND ${Python_EXECUTABLE} -c; ""import ${SPHINX_THEME}; import sphinx_automodapi; import graphviz""; OUTPUT_QUIET ERROR_QUIET RESULT_VARIABLE _exec_python_err); endif(); if(_exec_python_err); message(STATUS ""No theme, no docs (try: conda install sphinx-psi-theme cloud_sptheme sphinx-automodapi sphinx-autodoc-typehints graphviz python-graphviz autodoc-pydantic sphinx-tabs -c conda-forge -c psi4)""); set(SPHINX_STUFF_FOUND ""OFF""). else(); set(SPHINX_STUFF_FOUND ""ON""); endif(). if(SPHINXMAN_STRICT); set(SPHINX_EXTRAS ""-n;-W;--keep-going""); #set(SPHINX_EXTRAS ""-W;--keep-going""); # return to above after qcel 0.25; #set(SPHINX_EXTRAS """"); else(); set(SPHINX_EXTRAS """"); endif(). # Setup and build Sphinx documentation; if(PERL_FOUND AND SPHINX_FOUND AND SPHINX_STUFF_FOUND); set(CCSD ""${CMAKE_CURRENT_SOURCE_DIR}""); set(CCBD ""${CMAKE_CURRENT_BINARY_DIR}""). # Static-doc reST files; set(STATICDOC abbr_accents.rst adc.rst adcc.rst appendices.rst basissets.rst; basi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt:1287,message,message,1287,doc/sphinxman/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt,1,['message'],['message']
Integrability,"* DGER: Rank-1 update (not wrapped yet). * BLAS3. * DGEMM: General Matrix-Matrix product; * DTRMM: General Triangular Matrix-General Matrix product; * DTRSM: Triangular Matrix-General Matrix solution via back substitution (just as fast as DTRMM); * DSYMM/DSYMV calls are not appreciably faster than DGEMM calls, and should only be used in expert situations (like using the other half of the matrix for some form of other transformation).; * DTRMM/DTRMV calls are 2x faster than DGEMM, and should be used where possible. LAPACK Wrappers; ^^^^^^^^^^^^^^^. All standard LAPACK 3.2 double precision routines are provided. LAPACK commands remain in Fortran's ""column-major"" indexing, so all the; results will be transposed, and leading dimensions may have to be fiddled; with (using ``lda = n`` in both directions for square matrices is highly; recommended). An example of the former problem is a Cholesky; Decomposition: you expect to get back a lower triangular matrix L such; that ``L L^T = A``, but this is returned in column-major order, so the actual; recovery of the matrix A with the row-major BLAS wrappers effectively; involves ``L^T L = A``. On of the biggest consequences is in linear equations:; The input/output forcing/solution vector must be explicitly formed in; column-major indexing (each vector is placed in a C++ row, with its; entries along the C++ column). This is visualized in C++ as the transpose; of the forcing/solution vector. All routines are declared in qt.h. Each; routine is prefixed with a ``C_``, followed by the standard Fortran name of; the routine, in capital letters. Input parameters of single primitives; (int, double, unsigned long int, char, ...) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous memory; (as provided by block_matrix, for example), and are passed by providing a; pointer to the first double or int element of the data (this is array[0]; if array is ``double**``). All routines return an int INFO w",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:5951,wrap,wrappers,5951,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,1,['wrap'],['wrappers']
Integrability,"--+---------------------------------------------------------------------------------------------+; | -DAS2010 | Podeszwa & Szalewicz dispersion formula [#f9]_ | |PSIfours| libdisp | [:math:`s_6`] |; +-------------------------------------+--------------------------------------------------------------------------------------+---------------------------------+---------------------------------------------------------------------------------------------+; | -D4BJEEQATM, -D4BJ, -D4 | -D4 [#f11]_ | ``dftd4`` | [:math:`a_1`, :math:`a_2`, :math:`alp`, :math:`s_6`, :math:`s_8`, :math:`s_9`] |; +-------------------------------------+--------------------------------------------------------------------------------------+---------------------------------+---------------------------------------------------------------------------------------------+. Three-Body Dispersion Corrections; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In addition to the previously discussed two-body dispersion corrections, ; the ``dftd3``/|PSIfour| interface enables computations of three-body dispersion; corrections. In ``DFT-D3``, three-body dispersion is approximated with the; Axilrod-Teller-Muto model:. .. math:: E_{disp}^{(3)}=-\frac{1}{6}\sum_{A\neq B\neq C}\frac{C_{9}^{ABC}(3\cos{\theta_a}\cos{\theta_b}\cos{\theta_c}+1)}{(r_{AB}r_{BC}r_{AC})^{3}}f_{damp}(\bar{r}_{ABC}); ; where :math:`\theta_a` is the angle at atom A corresponding to the triangle formed by atoms A, B, and C,; and :math:`\bar{r}_{ABC}` is the geometric mean of the corresponding atomic-pair distances.; The dispersion coefficients are defined as. .. math:: C_{9}^{ABC} = \sqrt{C_{6}^{AB}C_{6}^{BC}C_{6}^{AC}}. See the `DFT-D3 documentation <https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/dft-d3/man.pdf>`_ ; for more details. For now, the three-body correction can be called by using the :py:func:`~psi4.core.Molecule.run_dftd3`; function with `d3-atmgr` as the passed functional string. ; For example, the three-body ATM dispersion correc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:21123,interface,interface,21123,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['interface'],['interface']
Integrability,"--------+--------+--------+---------+; .. comment | | cc3 | none | vcc | | |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomee | vcc | | |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomea/eomip | vcc | | |; .. comment | +---------------------------------+-----------------------+--------+--------+---------+; .. comment | | ccsdt | none | ecc | mrcc | mrc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomee | mrcc | mrcc | mrcc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomea/eomip | mrcc | mrcc | mrcc |; .. comment +-----------------------------------------+---------------------------------+-----------------------+--------+--------+---------+; .. comment properties same as grad; .. comment 2nd deriv ecc only for ccsd(t). Specification Details; ~~~~~~~~~~~~~~~~~~~~~. The above narrative introduction to the P4C4 interface should be; sufficient to get started. Issues of competition between |PSIfour| and; Cfour specification format are generally resolved behind the scenes:; not according to a *simple* rule but according to sensible, sometimes; intricate, rules governed by user intent (and integration of Cfour to; behave like a |PSIfour| module). Much can be gleaned by just running; inputs and inspecting the ``ZMAT`` passed to Cfour, but when questions; arise, here are the specifics, the governing laws. * Specifying a piece of input in |PSIfour| format is entering into; a contract that you mean it. In particular this applies to; molecule (including charge/multiplicity through :samp:`molecule; {optional_molecule_name} \\{...\\}`), memory (through :samp:`memory; {value} {unit}`), computational method (through . If Cfour keywords; are specified with values that contradict the |PSIfour| input,; execution is halted. As an example, the input below is set up to fail in four ways:; contradictory specifica",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:34985,interface,interface,34985,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['interface'],['interface']
Integrability,"--------+. .. index:: EFP; library fragments. .. _`sec:availableEFPFragments`:. Fragment Library; ~~~~~~~~~~~~~~~~. Below are documented the EFP fragments available from the LIBEFP library.; These systems are accessible in ``molecule {...}`` blocks without; additional configuration. ----. .. comment This toctree directive only here to suppress warning at build time.; include line below is doing the work. .. toctree::; :hidden:. autodoc_available_efpfrag. .. include:: autodoc_available_efpfrag.rst. .. _`cmake:libefp`:. How to configure libefp for building Psi4; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. **Role and Dependencies**. * Role |w---w| In |PSIfour|, libefp is a library that provides additional; molecular modeling capabilities (EFP). * Downstream Dependencies |w---w| |PSIfour| (\ |dr| optional) libefp. * Upstream Dependencies |w---w| libefp |dr| BLAS/LAPACK. **CMake Variables**. * :makevar:`ENABLE_libefp` |w---w| CMake variable toggling whether Psi4 builds with libefp; * :makevar:`CMAKE_PREFIX_PATH` |w---w| CMake list variable to specify where pre-built dependencies can be found. For libefp, set to an installation directory containing ``include/efp.h``; * :makevar:`libefp_DIR` |w---w| CMake variable to specify where pre-built libefp can be found. Set to installation directory containing ``share/cmake/libefp/libefpConfig.cmake``; * :makevar:`CMAKE_DISABLE_FIND_PACKAGE_libefp` |w---w| CMake variable to force internal build of libefp instead of detecting pre-built; * :makevar:`CMAKE_INSIST_FIND_PACKAGE_libefp` |w---w| CMake variable to force detecting pre-built libefp and not falling back on internal build. **Examples**. A. Build bundled. .. code-block:: bash. >>> cmake -DENABLE_libefp=ON. B. Build *without* libefp. .. code-block:: bash. >>> cmake. C. Link against pre-built. .. code-block:: bash. >>> cmake -DENABLE_libefp=ON -DCMAKE_PREFIX_PATH=/path/to/libefp/root. .. code-block:: bash. >>> cmake -DENABLE_libefp=ON -Dlibefp_DIR=/path/to/libefp/configdir. D. Buil",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:12195,depend,dependencies,12195,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,1,['depend'],['dependencies']
Integrability,"------------+-------+; | 4334 | 113 |; +-----------------------------+-------+; | 4802 | 119 |; +-----------------------------+-------+; | 5294 | 125 |; +-----------------------------+-------+; | 5810 | 131 |; +-----------------------------+-------+. The spherical grids are rotated according to a common set of rules developed; during the implementation of SG1. At the moment, the rules for tetrahedral,; octohedral, and icosohedral systems are not complete, so there may be some; ambiguity in the grid orientation for these systems. Radial grid types are controlled by the |scf__dft_radial_scheme| option, which; at the moment may be either ``TREUTLER`` or ``BECKE``, while the number of radial; points are controlled by the |scf__dft_radial_points| option, which is any positive; integer (typically 50-100). The radial grids are ""centered"" on the Bragg-Slater; radius of each atom, as described in Becke's 1988 paper. If inaccurate; integration is suspected in systems with anions or very diffuse basis functions,; the |scf__dft_bs_radius_alpha| option may be increased from 1.0 to a larger value to force the radial grid to span a larger extent in space. The atomic weighting scheme is controlled by the |scf__dft_nuclear_scheme|; option, which may be one of ``TREUTLER``, ``BECKE``, ``STRATMANN``, ``NAIVE``,; or ``SBECKE``. The last is a smoother variant of the BECKE scheme recently introduced ; by Laqua [Laqua:2018:204111]_ that should behave better for weak interactions. Pruning of the quadrature grid is controlled by the |scf__dft_pruning_scheme|; option. The options ``ROBUST`` and ``TREUTLER`` divide the grid into spherical regions; based on the Bragg-Slater radius of each atom and apply different orders to them.; The ``ROBUST`` scheme is a less aggressive variant of the ``TREUTLER`` approach and; suitable for benchmark-level quality (MAD < 0.002 kcal/mol for the S22 with PBE/aug-cc-pVTZ; for pruned versus unpruned grid). Our implementation of the ``TREUTLER`` scheme shows an ;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:23971,integrat,integration,23971,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['integrat'],['integration']
Integrability,"---------------------------------------------------------------------. Each of the items below is an independent additional capability that can; be built with |PSIfour|. Sub-items below are the respective additional; dependencies of the add-on. Select which, if any, you want, and examine; the links for appropriate enabling arguments to ``cmake``. Note that many; are available pre-built from conda. * |PSIfour| Testing. * CTest https://cmake.org/download/; * pytest (for installed testing) http://doc.pytest.org/en/latest/; * pytest-xdist (for installed testing many tests at once) https://github.com/pytest-dev/pytest-xdist. * |PSIfour| Documentation (available pre-built at :psicode:`psi4manual/master/index.html`). * Sphinx (3.5+) http://sphinx-doc.org; * Perl (for some auto-documentation scripts) https://www.perl.org/; * nbsphinx (for converting Jupyter notebooks) http://nbsphinx.readthedocs.io/en/jupyter-theme/; * sphinx-psi-theme https://github.com/psi4/sphinx-psi-theme; * See :source:`[""message"" lines] <doc/sphinxman/CMakeLists.txt>` for advice on obtaining docs dependencies or :source:`[conda env spec] <devtools/conda-envs/docs-cf.yaml>`; * See :source:`.github/workflows/docs.yml` for full docs building procedure to follow. * Ambit |w---w| https://github.com/jturney/ambit. * :ref:`CheMPS2 <cmake:chemps2>` |w---w| :ref:`[what is CheMPS2?] <sec:chemps2>` :source:`[CheMPS2 min version] <external/upstream/chemps2/CMakeLists.txt#L2>`. * HDF5 https://support.hdfgroup.org/HDF5/; * zlib http://www.zlib.net/. .. * :ref:`erd <cmake:erd>` |w---w| :ref:`[what is this?] <sec:erd>` `[min version] <https://github.com/psi4/psi4/blob/master/external/upstream/erd/CMakeLists.txt#L2>`_. .. * :ref:`Fortran Compiler <cmake:fortran>`. * :ref:`ecpint <cmake:ecpint>` |w---w| :ref:`[what is ecpint?] <sec:ecpint>` :source:`[ecpint min version] <external/upstream/ecpint/CMakeLists.txt/#L2>`. * :ref:`dkh <cmake:dkh>` |w---w| :ref:`[what is dkh?] <sec:dkh>` :source:`[dkh min version] <external/u",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:10561,message,message,10561,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['message'],['message']
Integrability,"----------------------------------------------------------------. Note that especially for :py:func:`~psi4.driver.cbs`, the; basis set needs to be specified through |mints__basis|, not; |cfour__cfour_basis|. Many of the wrappers can be used in combination to,; for example, apply a compound method to every molecule in a database or to; optimize a molecule with an extrapolated basis set (findif only for the; moment- analytics coming). Finally, any number and combination of jobs can be run from a single; |PSIfour| input file. Depending on the nature of preceding or following; jobs, it is prudent to separate them with the following::. clean() # removes Psi4 scratch files; clean_variables() # empties the PSI variables list; cfour {} # empties the cfour block. .. warning:: Because p4c4 does not inspect the contents of the ``cfour {...}``; block, once the user specifies a |PSIfour|-style molecule, the; interface cannot judge whether a sandwich mode (drop the |PSIfour| molecule; and use the cfour block as the entirety of the ``ZMAT``) or a standard mode; (translate the |PSIfour| molecule and append additional input from the; cfour block) is intended. The latter is what actually occurs. If; there is both a |PSIfour| molecule and a molecule in the cfour block,; ``ZMAT`` *will* end up with multiple molecules and multiple ``*CFOUR(...)``; blocks, and it *will not* run. Therefore, if mixing sandwich and; standard or pure-\ |PSIfour| computations in an input file, place all; the sandwich jobs at the beginning before declaring |PSIfour|; molecules. If necessary, clear the cfour block with ``cfour {}`` before; commencing standard P4C4 jobs. .. _`sec:cfourOutput`:. Output; ~~~~~~. The output of :program:`xcfour` invoked from a |PSIfour| input file is; written to the |PSIfour| output file as the computation progresses. If a; Cfour module terminates with a non-zero error code, the value will show up; in :psivar:`CFOUR ERROR CODE`. .. rubric:: Energies & Scalars. After execution of :pr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:21252,interface,interface,21252,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['interface'],['interface']
Integrability,"-------------------------------------------. In the early days when |PSIfour| was still primarily a C++ code, development; was very cumbersome due to a lengthy build process. To expedite development, a; plugin system was developed. This plugin machinery allows developers to access; the classes defined in the innards of |PSIfour|, with only the small plugin; code requiring recompilation during development. The resulting lightweight; code can be maintained and distributed independently of |PSIfour|, making this; a good strategy for development, especially in cases where tighter integration; of the new code with existing |PSIfour| machinery is required than that; afforded by the Numpy based strategy outlined in the :ref:`sec:prog_psi4numpy`; section. For details about how to write these plugins, see the; :ref:`sec:plugins` section. .. _`sec:prog_fullintegration`:. Incorporating code into |PSIfour|; ---------------------------------. For features to be incorporated fully into the |PSIfour| ecosystem, changes to; the core routines are inevitable. However, the programmer should think very; carefully about the most appropriate language for the task in hand. Let's; consider a new feature that downloads some data from an external source and; then performs some kind of expensive matrix operation on those data. Because; Python has a rich set of tools for obtaining data from external sources,; writing this tool in the Python layer is a natural choice. If we know that the; matrix will always be small enough to fit in memory, we can simply rely on the; routines present in NumPy to do the heavy lifting and the code is easy to; implement entirely in the Python layer. In the case where the matrix operation; is non-standard and requires some specialized code to handle disk-based; storage, the decision to write in Python is less clear cut. It is certainly; possible to write these out-of-core routines using Numpy primitives, but there; are a number of tools in |PSIfour| already to perf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst:5165,rout,routines,5165,doc/sphinxman/source/prog_ways_to_add.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst,1,['rout'],['routines']
Integrability,-allterms fsapt-ext fsapt-ext-abc fsapt-ext-abc2; fsapt-ext-abc-au isapt1 isapt2 isapt-siao1 fisapt-siao1 isapt-charged; fci-dipole fci-h2o fci-h2o-2 fci-h2o-fzcv fci-tdm fci-tdm-2; fci-coverage; fcidump; fd-freq-energy fd-freq-energy-large fd-freq-gradient; fd-freq-gradient-large fd-gradient freq-isotope1 freq-isotope2 fnocc1 fnocc2; fnocc3 fnocc4 fnocc5 fnocc6 fnocc7 frac frac-ip-fitting frac-sym frac-traverse ghosts gibbs; lccd-grad1 lccd-grad2 matrix1 matrix2; mbis-1 mbis-2 mbis-3 mbis-4 mbis-5 mbis-6 mcscf1 mcscf2 mcscf3; mints1 mints2 mints3 mints4 mints5 mints6 mints8 mints-benchmark mints-helper; mints9 mints10 mints15 molden1 molden2 mom mom-h2o-3 mom-h2o-4; mp2-1 mp2-def2 mp2-grad1 mp2-grad2 mp2-h mp2p5-grad1 mp2p5-grad2 mp3-grad1 mp3-grad2; mp2-property mpn-bh nbody-he-cluster nbody-intermediates nbody-nocp-gradient; nbo nbody-cp-gradient nbody-vmfc-gradient nbody-vmfc-hessian nbody-hessian nbody-convergence; nbody-freq nbody-multi-level nbody-multi-level-2 numpy-array-interface; olccd-freq1 olccd-grad1 olccd-grad2 olccd1 olccd2 olccd3; omp2-1 omp2-2 omp2-3 omp2-4 omp2-5 omp2-grad1 omp2-grad2; omp2p5-1 omp2p5-2 omp2p5-grad1 omp2p5-grad2 omp3-1 omp3-2; omp3-3 omp3-4 omp3-5 omp3-grad1 omp3-grad2 opt-lindep-change; opt1 opt1-fd opt2 opt2-fd opt3 opt4 opt5 opt6 opt7 opt8 opt9; opt11 opt12 opt13 opt14 opt15 opt16 opt-irc-1 opt-irc-2 opt-irc-3; opt-freeze-coords opt-full-hess-every; oremp-grad1 oremp-grad2; phi-ao; props1 props2 props3 props4 psimrcc-ccsd_t-1 psimrcc-ccsd_t-2; psimrcc-ccsd_t-3 psimrcc-ccsd_t-4 psimrcc-fd-freq1; psimrcc-fd-freq2 psimrcc-pt2 psimrcc-sp1 psithon1 psithon2; pubchem1 pubchem2 pywrap-alias pywrap-all pywrap-basis; pywrap-cbs1 pywrap-checkrun-convcrit pywrap-checkrun-rhf; pywrap-checkrun-rohf pywrap-checkrun-uhf pywrap-db1; pywrap-db3; pywrap-molecule rasci-c2-active rasci-h2o; rasci-ne rasscf-sp sad-scf-type sad1 sapt1 sapt2 sapt3 sapt4 sapt5 sapt6 sapt-dft-api sapt-dft-lrc; remp-energy1 remp-energy2; sapt-exch-disp-inf sapt-exch-ind,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt:4092,interface,interface,4092,tests/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/CMakeLists.txt,1,['interface'],['interface']
Integrability,"-mp2/commits/master. * resp |w---w| https://github.com/cdsgroup/resp. * gpu_dfcc |w---w| https://github.com/edeprince3/gpu_dfcc/commits/master. * OpenFermion-Psi4 |w---w| https://github.com/quantumlib/OpenFermion. * :ref:`cppe <sec:cppe>` |w---w| https://github.com/maxscheurer/cppe. * mp2d |w---w| https://github.com/Chandemonium/MP2D. * :ref:`FockCI <sec:fockci>` |w---w| https://github.com/shannonhouck/psi4fockci. * cct3 |w---w| https://github.com/piecuch-group/cct3. * :ref:`adcc <sec:adcc>` |w---w| https://github.com/adc-connect/adcc. * :ref:`BrianQC <sec:brianqc>` |w---w| https://www.brianqc.com/. * i-PI |w---w| http://ipi-code.org/. * psixas |w---w| https://github.com/Masterluke87/psixas. * MDI |w---w| https://github.com/MolSSI-MDI/MDI_Library. * :ref:`ddx <sec:ddx>` |w---w| https://github.com/ddsolvation/ddx. .. _`faq:condapsi4dev`:. How to use conda to get a Psi4 development environment; ------------------------------------------------------. |PSIfour| has a lot of dependencies, some of which are complicated; to build. Fortunately, conda can supply them all. A conda; package ``psi4-dev`` is available to gather the dependencies; and build tools needed to compiler |PSIfour| from source. Go to; :psicode:`installs/latest`, select ""source"" and ""nightly build"" along; with Linux/Mac and a Python version. Follow its instructions to create; a conda environment that has a script ``psi4-path-advisor``. Running; ``psi4-path-advisor --help`` shows more options. Running the script; without arguments gives a cmake command that supplies paths to dependency; conda packages to CMake's cache. You can add further cmake options to; this command when you execute it. Once the cmake command has built your; :samp:`{objdir}`, you can build |PSIfour|. Remember to activate this; conda environment during |PSIfour| running or development. There are a; few extra options to ``psi4-path-advisor`` to set up using conda's GNU; compilers (on Linux), conda's Clang compilers (on Mac; less reliably)",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:14049,depend,dependencies,14049,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['depend'],['dependencies']
Integrability,"-w| `[what is Pybind11?] <https://pybind11.readthedocs.io/en/stable/>`_ :source:`[Pybind11 min version] <external/upstream/pybind11/CMakeLists.txt#L2>`. * QCElemental |w---w| `[what is QCElemental?] <https://molssi.github.io/QCElemental/>`_. * QCEngine |w---w| `[what is QCEngine?] <https://molssi.github.io/QCEngine/>`_ (March 2019; added by v1.4). * optking |w---w| `[what is optking] <https://optking.readthedocs.io/en/latest/>`_ (runtime dependency, required at build-time) . Additionally, there are runtime-only dependencies:. * msgpack-python for MessagePack https://msgpack.org/ (transitive dependency of QCElemental; optional for QCElemental but required for |PSIfour|). * NumPy https://numpy.org/. * networkx https://github.com/networkx/networkx (transitive dependency of QCElemental; optional for QCElemental but required for |PSIfour|). * pint https://pint.readthedocs.io/en/latest/ (transitive dependency of QCElemental). * pydantic https://pydantic-docs.helpmanual.io/# (transitive dependency of QCElemental). * SciPy https://scipy.org/ (avoidable if necessary by following directions in runtime error message). * py-cpuinfo (provides ``import cpuinfo``) https://github.com/workhorsy/py-cpuinfo (transitive dependency of QCEngine). * psutil https://github.com/giampaolo/psutil (transitive dependency of QCEngine). Dropped Dependencies:. * Boost (September 2016; dropped by v1.1). * deepdiff https://github.com/seperman/deepdiff (May 2019; dropped by v1.4). * MPFR https://www.mpfr.org/ (Mar 2022; dropped by v1.6) no longer needed to compile against Libint2. * Perl for testing (April 2022; dropped by v1.6). .. _`faq:addondepend`:. What are the add-on capabilities for Psi4 and what are their dependencies; -------------------------------------------------------------------------. Each of the items below is an independent additional capability that can; be built with |PSIfour|. Sub-items below are the respective additional; dependencies of the add-on. Select which, if any, you want",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:8830,depend,dependency,8830,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['depend'],['dependency']
Integrability,". # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: CPPE, PE. .. _`sec:cppe`:. Interface to CPPE by M. Scheurer; =======================================. .. codeauthor:: Maximilian Scheurer; .. sectionauthor:: Maximilian Scheurer. *Module:* :ref:`Keywords <apdx:pe>`, :ref:`PSI Variables <apdx:pe_psivar>`. .. image:: https://img.shields.io/badge/home-cppe-informational.svg; :target: https://github.com/maxscheurer/cppe. .. .. raw:: html; .. ; .. <br>; .. ; .. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; .. :target: http://pcmsolver.readthedocs.io/en/latest/. |PSIfour| contains code to interface to the CPPE library developed; by M. Scheurer.; The CPPE library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable embedding model (PE), an explicit, fragment-based solvent model [Olsen:2010:3721]_. For a general tutorial on how to prepare/perform PE calculations, read the; `tutorial review <https://onlinelibrary.wiley.com/doi/full/10.1002/qua.25717>`_. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/cppe/badges/version.svg; :target: https://anaconda.org/psi4/cppe. * CPPE is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, CPPE has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; CPPE can be obtained through ``conda install cppe -c psi4``.; Then enable it as a feature with :makevar:",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst:1629,interface,interface,1629,doc/sphinxman/source/cppe.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst,1,['interface'],['interface']
Integrability,". * Making a release or prerelease. * update all three fields of metadata.py (see below ex); * commit; * on master, make annotated tag starting with v. note the hash.; * run enough of build to make sure tag formatted properly and ""Defining {} version"" sane. # MUST update metadata.py on same commit at which make tag. git tag -a v1.0 d2243ef; git push origin v1.0; git push [remote] [tagname]. do NOT use the GitHub tagging interface - it creates lightweight tags. :source:`psi4/metadata.py`. __version__ = '1.0'; __version_long = '1.0+d2243ef'; __version_upcoming_annotated_v_tag = '1.1a1'. # Example current and upcoming tag pairs; # * '1.0', '1.1a1'; # * '1.0.4', '1.0.5' on maintenance branch 1.0.x; # * '1.1a1', '1.1b1'; # * '1.1rc2', '1.1'; # * '1.1', '1.2'. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_version.rst:424,interface,interface,424,doc/sphinxman/source/prog_version.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_version.rst,1,['interface'],['interface']
Integrability,". *Module:* :ref:`Keywords <apdx:gdma>`, :ref:`PSI Variables <apdx:gdma_psivar>`, :source:`GDMA_INTERFACE<psi4/src/psi4/gdma_interface>`. .. image:: https://img.shields.io/badge/home-gdma-5077AB.svg; :target: https://github.com/psi4/gdma. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://www-stone.ch.cam.ac.uk/documentation/gdma/manual.pdf. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/gdma/badges/version.svg; :target: https://anaconda.org/psi4/gdma. * GDMA is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, gdma has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; gdma can be obtained through ``conda install gdma -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_gdma`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect gdma and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. gdma from conda without thinking, consult. * To remove a conda installation, ``conda remove gdma``. **Source**. * .. image:: https://img.shields.io/github/tag/psi4/gdma.svg?maxAge=2592000; :target: https://github.com/psi4/gdma. * If using |PSIfour| built from source and you want gdma built from; from source also,; enable it as a feature with :makevar:`ENABLE_gdma`,; and let the build system fetch and build it and activate dependent code. Input; ~~~~~. The distributed multipole analysis (DMA) technique, developed by Anthony J.; Stone and implemented by him into the `GDMA package; <http://www-stone.ch.cam.ac.uk/programs.html>`_, is available in |PSIfour|.; The current implementation simply embeds Stone's GDMA code into the main; executable, and generates the appropriate input files automatically. The; program takes as input",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gdma.rst:2506,depend,dependent,2506,doc/sphinxman/source/gdma.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gdma.rst,1,['depend'],['dependent']
Integrability,". Example: :srcsample:`cfour/dfmp2-1`. * :py:func:`~psi4.driver.wrapper_database.database` for computation of a collection of molecules in a; single input, with summarization of results. Examples:; :srcsample:`cfour/pywrap-db1` and :srcsample:`cfour/psi-a24-grad`. * :py:func:`~psi4.driver.cbs` for computation of compound methods involving; basis set extrapolations and/or delta corrections with any combination; of |PSIfour| and Cfour computational methods and |PSIfour| basis sets.; Example: :srcsample:`cfour/pywrap-cbs1`. .. rubric:: Not Yet Implemented. * Ground state CI energies and optimizations. * Excited state energies and optimizations. * Properties are not yet regex-ed, transformed into input frame, and; stowed in PSI Variables. * Property calls that required extra computation not yet translated into; :py:func:`~psi4.driver.properties` computation command. * Frequencies. Energy methods available through P4C4 interface. .. include:: cfour_table_energy.rst. Gradient methods available through P4C4 interface. .. include:: cfour_table_grad.rst. .. _`table:cfour_cc_program`:. .. notes on preferred modules from JFS; .. comment always abcdtype = aobasis (but sometimes ; .. comment ncc does rhf ccsdt(q); .. comment reccommended code to do with, not only code (b/c mrcc can do much of this); .. comment .. table:: Cfour coupled-cluster program defaults by calculation type; .. comment ; .. comment +-----------------------------------------+---------------------------------+-----------------------+--------+--------+---------+; .. comment | | | | RHF | UHF | ROHF |; .. comment | | | +--------+--------+---------+; .. comment | Driver Call, |cfour__cfour_deriv_level| | name, |cfour__cfour_calc_level| | |cfour__cfour_excite| | |cfour__cfour_cc_program| |; .. comment +=========================================+=================================+=======================+========+========+=========+; .. comment | :py:func:`~psi4.energy`, zero | cc2 | none | vcc | vcc | vcc |; .. comme",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:29876,interface,interface,29876,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['interface'],['interface']
Integrability,". For example:; ``libefp::efp``, ``CheMPS2::chemps2``, ``PCMSolver::pcm``,; ``v2rdm_casscf::v2rdm_casscf``. * Following the CMake project name (though not restricted to it --; |PSIfour| managment could change the pattern), the user flag to enable; an add-on is :samp:`ENABLE_{AddOn_name}`. Note that runtime-only; add-ons don't go through this enabling process. * Internally, the ExternalProject_Add and dummy libraries as well as any; tests/ and external/ subdirectories should all be lowercase,; :samp:`{addon_name}`. * The `conda package <https://anaconda.org/psi4/repo>`_ and internal to; |PSIfour| (that is, the ExternalProject_Add, dummy libraries, and any; tests/ and external/ subdirectories) should all be lowercase,; :samp:`{addon_name}`. * Alternatively, you can do everything mentioned here lowercase and just; have a different capitalization for an advertising name. After all,; that's what |PSIfour| does. .. _`faq:addoncmake`:. How to integrate an Add-On into build, testing, and docs; --------------------------------------------------------. * In all cases, put Add-Ons in alphabetic order, ignoring any ""lib"" in the name. * :source:`CMakeLists.txt`. * Add the :samp:`ENABLE_{AddOn_name}` line. * Add the :samp:`external_{addon_name}` dependency to the ``psi4-core`` external project. * Add the :samp:`{AddOn_name}_DIR` variable passing to the ``psi4-core`` external project. * :source:`psi4/CMakeLists.txt`. * Add a block imitating Libint if Add-On required or CheMPS2 if not; required. * If there are shared resources to the external that need; to be found by |PSIfour| in PSIDATADIR, follow the ``efpfrag``; pattern of libefp to symlink them in. * :source:`psi4/src/CMakeLists.txt`. * No changes should be required unless both (1) code in export_*; or core.cc needs the :samp:`USING_{AddOn_name}` definition or; AddOn header includes and (2) no binary |PSIfour| module (as; opposed to library |PSIfour| module with the AddOn target linked; is itself a direct dependency of target ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst:3285,integrat,integrate,3285,doc/sphinxman/source/manage_addon.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst,1,['integrat'],['integrate']
Integrability,". Improving upon CCSD, the CCSD(T) method [Raghavachari:1989]_ includes; a perturbative estimate of the energy contributed by the :math:`{\hat{T}_3}`; operator. The computational cost of this additional term scales as; :math:`{\cal{O}}(o^3 v^4)`, making it rather expensive for molecules with more than; a dozen heavy atoms or so. However, when this method is affordable, it; provides very high quality results in most cases. |PSIfour| is capable of computing energies and analytic gradients for a; number of coupled cluster models. It can also compute linear response; properties (such as static or frequency-dependent polarizability,; or optical rotation angles) for some models. Excited states can; also be computed by the CC2 and CC3 models, or by EOM-CCSD. Table; :ref:`CC Methods <table:ccsummary>` summarizes these capabilities. This section; describes how to carry out coupled cluster calculations within |PSIfour|.; For higher-order coupled-cluster methods like CCSDT and CCSDTQ, |PSIfour|; can interface to K\ |a_acute|\ llay's MRCC code (see :ref:`MRCC <sec:mrcc>`). Solvent effects on energies can be taken into account using the polarizable; continuum model (PCM) in the PTE approximation [Cammi:2009:164104]_, see; :ref:`PCM <sec:pcmsolver>`. The following wavefunctions are currently recognized by |PSIfour| as arguments; to functions like :py:func:`~psi4.driver.energy`: ``'ccsd'``, ``'ccsd(t)'``, ``'a-ccsd(t)'``, ``'cc2'``,; ``'cc3'``, ``'bccd'`` (CCD with Brueckner orbitals), ``'bccd(t)'`` (CCD(T) with; Brueckner orbitals), ``'eom-ccsd'``, ``'eom-cc2'`` (CC2 for excited states),; ``'eom-cc3'`` (CC3 for excited states). Response properties can be obtained; by calling the function :py:func:`~psi4.driver.properties` (instead of, for example, :py:func:`~psi4.driver.energy`,; *e.g.*, ``properties('ccsd')``. There are many sample; coupled cluster inputs provided in :source:`samples`. The various methods supported by the CCENERGY modules in |Psifour| are; summarized in Table :r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst:4701,interface,interface,4701,doc/sphinxman/source/cc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst,1,['interface'],['interface']
Integrability,". math:: E_{disp}^{\text{D3BJ}}=-\sum_{n=6,8} s_n \sum_{i,j>i}^{N_{at}} ; \frac{C_n^{ij}}{(R_{ij})^n + (f_{damp})^n}. .. math:: f_{damp} = a_1 \sqrt{\frac{C_8^{ij}}{C_6^{ij}}} + a_2. All parameters characterizing the dispersion correction are taken from; `Grimme's website <https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/dft-d3/get-the-current-version-of-dft-d3>`_; or else from the literature.; With s-dftd3, parameters are also tabulated in the program source. Running DFTD3 or DFTD4; ~~~~~~~~~~~~~~~~~~~~~~. A number of *a posteriori* dispersion corrections are available in; |PSIfour|. While some are computed within |PSIfours| codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 or -D4 corrections and their variants are; available only through the ``DFTD3`` or ``DFTD4`` programs. Once installed, the; ``dftd3``/|PSIfour| and ``dftd4``/|PSIfour| interfaces are transparent, and all corrections are; interfaced exactly alike.; The -D3 interface can use classic or simple-dftd3 programs interchangeably and will prefer the latter.; Starting in v1.9, the classic program is no longer supported or tested, though it isn't deliberately disabled. Despite different defaults in these programs when run independently,; when run through |PSIfour| as EmpiricalDispersion engine, each should; produce the same result. Moreover, |PSIfours| own defaults and aliases; are unchanged by the new engines, so ``-D`` continues to mean ``-D2``,; ``-D3`` continues to mean zero-damping *without* 3-body correction,; and input files should continue producing the same results. Please file; an issue if found otherwise. Dispersion corrections are built into DFT functionals, so appending an *a; posteriori* correction to a computation is as simple as; ``energy('b2plyp-d')`` *vs.* ``energy('b2plyp')``. For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, a B3LYP-D3 (zero-damping), and a B3LYP-D4 (Becke-Johnson damping) energy. ::. molecule h2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:12262,interface,interface,12262,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['interface'],['interface']
Integrability,"., return_wfn=True); E, wfn = optimize(..., return_wfn=True); E, wfn = frequency(..., return_wfn=True); G, wfn = gradient(..., return_wfn=True) # used by optimize(); H, wfn = hessian(..., return_wfn=True) # used by frequency(). # print gradient array and its rms; wfn.gradient.print_out(); print wfn.gradient().rms(). # format output for other programs; molden(wfn, 'mycalc.molden'). # access array in another format; np.array(wfn.hessian()). .. _`sec:loops`:. Loops; =====. Python provides many control structures, any of which can be used within |PSIfour|; input files. For example, to loop over three basis sets, the following code can; be used:. .. code-block:: none. basis_sets = [""cc-pVDZ"", ""cc-pVTZ"", ""cc-pVQZ""]; for basis_set in basis_sets:; set basis = $basis_set; energy('scf'). The declaration of ``basis_sets`` is completely standard Python, as is the next; line, which iterates over the list. However, because the Psithon preprocessor; wraps strings in quotes by default, we have to tell it that ``basis_set`` is a; Python variable, not a string, by prefixing it with a dollar sign. . The geometry specification supports delayed initialization of variable,; which permits potential energy scans. As an example, we can scan both the; angle and bond length in water::. molecule h2o{; O; H 1 R; H 1 R 2 A; }; ; Rvals = [0.9, 1.0, 1.1]; Avals = range(102, 106, 2); ; set basis cc-pvdz; set scf e_convergence=11; for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; energy('scf'). The declarations of ``Rvals`` and ``Avals`` are both completely standard Python syntax.; Having named our molecule ``h2o`` we can then set the values of ``R`` and ``A`` within; the loops. Note that we do not need the dollar sign to access the Python; variable in this example; that is required only when using Python variables; with the ``set`` keyword. Cartesian geometries, because of details of the geometry update process,; need to be specified within the loop(s) along with their basis set when; geometr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:12785,wrap,wraps,12785,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['wrap'],['wraps']
Integrability,".. #; .. # @BEGIN LICENSE; .. #; .. # Psi4: an open-source quantum chemistry software package; .. #; .. # Copyright (c) 2007-2023 The Psi4 Developers.; .. #; .. # The copyrights for code used from other parties are included in; .. # the corresponding files.; .. #; .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:prog_code_intro`:. ================================; General Introduction to the Code; ================================. Languages: C++ and Python; -------------------------. Intro to the hybrid code and how the C++/Python interface works. What Should Go in C++ vs Python; -------------------------------. Code Structure; --------------. Driver, libraries, modules, plugins, ... general tour of what goes where. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_code_intro.rst:1293,interface,interface,1293,doc/sphinxman/source/prog_code_intro.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_code_intro.rst,1,['interface'],['interface']
Integrability,".; These radius values are conventionally scaled by an additional factor before use,; conventionally 1.1 for ``uff`` and 1.2 for ``bondi``. Customisation of the scaling; is possible using the |ddx__ddx_radii_scaling| parameter.; A more fine-grained control over the sphere radii is available by explicitly providing; a list of radii (one per atom, exactly in the order of the input geometry); using the |ddx__ddx_radii| parameter. Note that the same unit as for the molecular; input is expected for the radii. .. include:: autodir_options_c/globals__ddx.rst; .. include:: autodir_options_c/ddx__ddx_model.rst; .. include:: autodir_options_c/ddx__ddx_radii.rst; .. include:: autodir_options_c/ddx__ddx_radii_scaling.rst; .. include:: autodir_options_c/ddx__ddx_radii_set.rst; .. include:: autodir_options_c/ddx__ddx_solvent_epsilon.rst; .. include:: autodir_options_c/ddx__ddx_solvent.rst; .. include:: autodir_options_c/ddx__ddx_solvent_kappa.rst. Numerical integration and discretisation parameters; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. These parameters can be altered to balance the cost and accuracy; of the implict description of the solvation. |ddx__ddx_solute_radial_points| and |ddx__ddx_solute_spherical_points| influence; the accuracy of the numerical grid used to obtain the representation; of the electric potential / field of the solute density,; since a standard DFT integration grid is used to obtain these quantities.; In contrast to the integration of DFT quantities much lower accuracy; is required, such that for this step considerably smaller grids are employed.; If extremely high accuracy reference solutions are required, the DDX; DFT integration parameters might need to be increased, but this is rarely needed. |ddx__ddx_lmax| and |ddx__ddx_n_lebedev| determine the accuracy of the computations; on the boundary of the spheres around each atom performed by DDX. |ddx__ddx_lmax|; determines the largest angular momentum of the spherical harmonics basis used; to",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:8381,integrat,integration,8381,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['integrat'],['integration']
Integrability,".anaconda.com/miniconda/Miniconda3-py39_4.9.2-Windows-x86_64.exe"". .. _`faq:updatepsi4`:. How to update a Psi4 binary; ^^^^^^^^^^^^^^^^^^^^^^^^^^^. A. Conda command to update an existing |PSIfour| conda installation to the; newest stable release (roughly annually). It's often a better idea to create; a new environment rather than updating the old one. .. code-block:: bash. >>> # Linux/MacOS; >>> conda update psi4 -c psi4; >>> # Windows; >>> conda update psi4 -c psi4 -c conda-forge. # if psi4 channel in defaults (true for Psi4conda installers); >>> conda update psi4. B. Conda command to update an existing |PSIfour| conda installation to the; latest development head (roughly nightly). .. code-block:: bash. >>> # Linux/MacOS; >>> conda update psi4 -c psi4/label/dev; >>> # Windows; >>> conda update psi4 -c psi4/label/dev -c conda-forge. C. Conda command to install a very specific package, including version,; build string, and subchannel. The final `-c psi4` represents any; additional channels or subchannels needed to locate all dependencies. .. code-block:: bash. >>> conda install psi4=1.2a1.dev249+623ad64=py36_sse41_0 -c psi4/label/subchannel -c psi4. .. _`faq:psi4deps`:. How to use conda to compile Psi4 faster and easier; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. .. code-block:: console. # Linux # c. v1.2rc1 ###or Mac or Windows; # substitute x.x by 3.5|3.6|3.7 for alternate python versions; >>> conda create -n p4dev python=x.x psi4-dev -c psi4/label/dev -c psi4; >>> conda activate p4dev. >>> cd {top-level-psi4-dir}; >>> psi4-path-advisor --help; usage: psi4-path-advisor [-h] [--psi4-compile] [--disable-addons]; [--disable-mkl] [--intel | --intel-multiarch | --gcc]; ; Build and Run path advisor for Psi4; ; optional arguments:; -h, --help show this help message and exit; --psi4-compile (Command Default) Generates a minimal CMake command for building Psi4 against; this psi4-dev conda metapackage.; >>> git clone https://github.com/psi4/psi4.git; >>> cd {top-lev",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:9800,depend,dependencies,9800,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['depend'],['dependencies']
Integrability,".cc; blas_intfc23.cc; cc_excited.cc; dirprd_block.cc; dot_block.cc; dx_read.cc; dx_write.cc; fill_sym_matrix.cc; invert.cc; lapack_intfc.cc; mat_print.cc; newmm_rking.cc; pople.cc; probabil.cc; ras_set.cc; reorder_qt.cc; schmidt.cc; solve_pep.cc; timer.cc; ). # cmake_symbol_exists() or check_cxx_source_runs() are preferable to check_function_exists(); # according to CMake docs. But both require an explicit header, either in the call or in the code,; # and that's tough with multiple BLAS/LAPACK backends. So, we'll see if this is robust enough.; include(CMakePushCheckState); include(CheckFunctionExists); cmake_push_check_state(); list(APPEND CMAKE_REQUIRED_LIBRARIES tgt::lapack); check_function_exists(daxpby _has_daxpby); if(NOT _has_daxpby); message(WARNING ""${Yellow}Your BLAS/LAPACK library does not seem to be providing the DAXPBY subroutine. DAXPBY calls will be re-routed through DSCAL and DAXPY. If you are seeing this message, and you are not building with Apple Accelerate, you may want to re-check that the correct BLAS/LAPACK libraries are being used by the build system. Redo CMake configuration for changes to register.${ColourReset}""); endif(). check_function_exists(dggsvd3 _has_dggsvd3); check_function_exists(dggsvp3 _has_dggsvp3); if(NOT (_has_dggsvd3 AND _has_dggsvp3)); message(WARNING ""${Yellow}Your BLAS/LAPACK library does not seem to be providing the DGGSVD3 and DGGSVP3 subroutines. No re-routing is available. If you are seeing this message, and you are not building with Apple Accelerate, you may want to re-check that the correct BLAS/LAPACK libraries are being used by the build system. Redo CMake configuration for changes to register.${ColourReset}""); endif(); cmake_pop_check_state(). psi4_add_module(lib qt sources); target_compile_definitions(qt; PRIVATE; $<$<BOOL:${_has_daxpby}>:BLAS_HAS_DAXPBY>; $<$<BOOL:${_has_dggsvd3}>:BLAS_HAS_DGGSVD3>; $<$<BOOL:${_has_dggsvp3}>:BLAS_HAS_DGGSVP3>; FC_SYMBOL=${FC_SYMBOL}; ). unset(_has_daxpby); unset(_has_dggsvd3); u",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libqt/CMakeLists.txt:978,message,message,978,psi4/src/psi4/libqt/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libqt/CMakeLists.txt,1,['message'],['message']
Integrability,".com/messages""> <img src=""https://img.shields.io/badge/dev_chat-on_slack-808493.svg"" /></a>; <a href=""mailto:psi4aiqc+slackinvite@gmail.com?subject=request slack invite (incl. who, where, email)""> <img src=""https://img.shields.io/badge/dev_chat-invite-808493.svg"" /></a> -->. <!--[![Anaconda-Server Badge](https://anaconda.org/psi4/psi4/badges/installer/conda.svg)](https://anaconda.org/psi4/psi4) ; [![Anaconda-Server Badge](https://anaconda.org/psi4/psi4/badges/platforms.svg)](https://anaconda.org/psi4/psi4) -->. <!--; | **PR Activity** | ; [![commit activity](https://img.shields.io/github/commit-activity/y/psi4/psi4.svg)](https://github.com/psi4/psi4/graphs/contributors) ; [![issues-pr-closed](https://img.shields.io/github/issues-pr-closed-raw/psi4/psi4.svg)](https://github.com/psi4/psi4/pulls); -->. Psi4 is an open-source suite of *ab initio* quantum chemistry programs; designed for efficient, high-accuracy simulations of; molecular properties. We routinely perform computations with >2500 basis functions on multi-core machines. With computationally demanding portions written in C++, exports; of many C++ classes into Python via Pybind11, and a flexible Python driver, Psi4; strives to be friendly to both users and developers. * **Users' Website** www.psicode.org. * **Downloading and Installing Psi4** https://psicode.org/psi4manual/master/build_faq.html (for the CMake adept, see [CMakeLists.txt](CMakeLists.txt#L27). * **Manual** [http://bit.ly/psi4manual](https://psicode.org/psi4manual/master/index.html) (built nightly from master branch) or https://psicode.org/psi4manual/1.4.0/index.html (last release). * **Tutorial** https://psicode.org/psi4manual/master/tutorial.html for Psithon (``psi4 job.in``), https://psicode.org/psi4manual/master/psiapi.html for PsiAPI (``python job.py``). * **Forum** http://forum.psicode.org. * **Communication & Support** https://psicode.org/psi4manual/master/introduction.html#technical-support. * **GitHub** https://github.com/psi4/psi4 (author",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/README.md:3847,rout,routinely,3847,README.md,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/README.md,1,['rout'],['routinely']
Integrability,".github.io/QCEngine/>`_ (March 2019; added by v1.4). * optking |w---w| `[what is optking] <https://optking.readthedocs.io/en/latest/>`_ (runtime dependency, required at build-time) . Additionally, there are runtime-only dependencies:. * msgpack-python for MessagePack https://msgpack.org/ (transitive dependency of QCElemental; optional for QCElemental but required for |PSIfour|). * NumPy https://numpy.org/. * networkx https://github.com/networkx/networkx (transitive dependency of QCElemental; optional for QCElemental but required for |PSIfour|). * pint https://pint.readthedocs.io/en/latest/ (transitive dependency of QCElemental). * pydantic https://pydantic-docs.helpmanual.io/# (transitive dependency of QCElemental). * SciPy https://scipy.org/ (avoidable if necessary by following directions in runtime error message). * py-cpuinfo (provides ``import cpuinfo``) https://github.com/workhorsy/py-cpuinfo (transitive dependency of QCEngine). * psutil https://github.com/giampaolo/psutil (transitive dependency of QCEngine). Dropped Dependencies:. * Boost (September 2016; dropped by v1.1). * deepdiff https://github.com/seperman/deepdiff (May 2019; dropped by v1.4). * MPFR https://www.mpfr.org/ (Mar 2022; dropped by v1.6) no longer needed to compile against Libint2. * Perl for testing (April 2022; dropped by v1.6). .. _`faq:addondepend`:. What are the add-on capabilities for Psi4 and what are their dependencies; -------------------------------------------------------------------------. Each of the items below is an independent additional capability that can; be built with |PSIfour|. Sub-items below are the respective additional; dependencies of the add-on. Select which, if any, you want, and examine; the links for appropriate enabling arguments to ``cmake``. Note that many; are available pre-built from conda. * |PSIfour| Testing. * CTest https://cmake.org/download/; * pytest (for installed testing) http://doc.pytest.org/en/latest/; * pytest-xdist (for installed testing many test",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:9137,depend,dependency,9137,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['depend'],['dependency']
Integrability,".py#L762`.; Note that if |mints__basis| is known to be larger than quad-zeta,; |PSIfour| *will not* attempt to fall back on the def2 fitting bases. The same basis ""block"" syntax can be; used to specify basis sets other than that used to define orbitals. For; example, ::. set df_basis_mp2 cc-pvdz-ri. or. df_basis_mp2 {; assign cc-pVDZ-RI; }. are both equivalent ways to set the auxiliary basis set for density fitted MP2; computations. To assign the aug-cc-pVDZ-RI to carbon atoms, the following; command is used::. df_basis_mp2 {; assign C aug-cc-pVDZ-RI; }. .. _`sec:basisDecontracted`:. Decontracted Basis Sets; =======================. Decontraction of the basis set can be useful in certain situations. In; order to decontract a given basis set, simply add ""-decon"" to the name; of the primary basis set (*e.g.* :srcsample:`decontract`). ::. 	set basis cc-pvdz-decon. Obviously this will add significantly to the computational cost of any given calculation, however it can; be useful when checking the basis set dependence of a particular calculated property or in certain situations; where a large basis set is critical. Currently it is recommended that a decontracted basis is always used when performing relativistic calculations using the :ref:`X2C Hamiltonian <sec:relativistic>`. .. index::; pair: basis set; adding new. .. _`sec:basisUserDefined`: . User-Defined Basis Sets; =======================. .. note:: No recompile of the PSI program is necessary for changes made to; files in ``$PSIDATADIR``, including those described below. There are three routes by which a basis set in G94 format can be introduced to |PSIfours| notice. .. rubric:: (1) Install new basis set file into |PSIfour| basis library. Copy the basis set definitions for all elements into a blank file. Exclamation points denote comments.; As the first line of the file, add the word ``spherical`` or ``cartesian`` to indicate; whether the basis set will run in (5D/7F) or (6D/10F). ::. cartesian; ****; H 0; S 3 1.00",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst:8419,depend,dependence,8419,doc/sphinxman/source/basissets.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst,1,['depend'],['dependence']
